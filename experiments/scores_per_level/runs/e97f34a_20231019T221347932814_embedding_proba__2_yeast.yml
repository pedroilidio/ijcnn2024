active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            MDMzMzMzJcBAMzMzMzMLQACamZmZmdk/QDMzMzMzC0BAMzMzMzMLQA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzC0BAMzMzMzMLQGBmZmZmZh7AQDMzMzMzC0DAzMzMzMwEwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZmFsAAmpmZmZnZP6CZmZmZmRlAADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmFkCAmZmZmZnZvzAzMzMzMwPAzMzMzMzMIsBoZmZmZmYaQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            yMzMzMzMFMDIzMzMzMwQwHBmZmZmZgZAnJmZmZmZKUDIzMzMzMwYwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmJmZmZnJvwCamZmZmek/gJmZmZmZAcAAzczMzMz8Pw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZAcDQzMzMzMz8P6CZmZmZmek/mJmZmZmZAcDQzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmEsBAZmZmZmYSwIAzMzMzMwtAcGZmZmZmMkAgMzMzMzMpwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: yeast
  params:
    dataset: yeast
    min_positives: 15
directory: scores_per_level/runs
end: 2023-10-19 22:15:08.529404
estimator:
  call: proba_vs_embedding.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: 1
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory: /tmp
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_proba__2
  params:
    memory: /tmp
hash: e97f34a702685bf41b4872b7455f853602df571bb96851a3dc9ee23bd8cdfc65
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/scores_per_level/runs/e97f34a_20231019T221347932814_embedding_proba__2_yeast.yml
results:
  fit_time:
  - 70.59147357940674
  - 69.91719675064087
  - 74.52795600891113
  - 68.88562226295471
  - 77.70454144477844
  score_time:
  - 2.1191415786743164
  - 2.110985279083252
  - 1.9856736660003662
  - 2.3127996921539307
  - 2.075230598449707
  test_accuracy:
  - 0.22540983606557377
  - 0.23155737704918034
  - 0.23541666666666666
  - 0.210752688172043
  - 0.2056451612903226
  test_f1_macro:
  - 0.39196998845058545
  - 0.4036865381360749
  - 0.38667909379734977
  - 0.3944461880414923
  - 0.38097928192430436
  test_f1_micro:
  - 0.6472162740899358
  - 0.6545836616758602
  - 0.6550429184549357
  - 0.6545256863278065
  - 0.634676564156946
  test_f1_samples:
  - 0.6192238658427183
  - 0.6218261019490526
  - 0.6261649346024346
  - 0.6319357225808839
  - 0.6008935508935509
  test_f1_weighted:
  - 0.5898045056872122
  - 0.5996267970074756
  - 0.5938286403522299
  - 0.599190982432349
  - 0.5784279337600194
  test_jaccard_macro:
  - 0.28923732161594506
  - 0.29886032697756454
  - 0.29007097208104027
  - 0.29380152787600927
  - 0.2796596196979143
  test_jaccard_micro:
  - 0.4784329244163039
  - 0.4865286997266693
  - 0.4870362983645792
  - 0.4864646464646465
  - 0.46485436893203885
  test_jaccard_samples:
  - 0.5226792219620088
  - 0.5262428145624868
  - 0.5304588293650794
  - 0.5277171872333162
  - 0.5030761968766001
  test_jaccard_weighted:
  - 0.45920440512100336
  - 0.46824128111756413
  - 0.4666112414655092
  - 0.47198611009171537
  - 0.44639530983556475
  test_precision_macro:
  - 0.653118540561316
  - 0.6375329552897347
  - 0.5897860686445667
  - 0.5022612716321813
  - 0.6256170437287828
  test_precision_micro:
  - 0.7230861244019139
  - 0.7067498581962564
  - 0.7263533610945866
  - 0.7354917532070862
  - 0.6927083333333334
  test_precision_samples:
  - 0.7150419594067136
  - 0.6983606557377049
  - 0.7205555555555556
  - 0.734905273937532
  - 0.6842981950844854
  test_precision_weighted:
  - 0.7199725938542709
  - 0.7016890132385833
  - 0.6995026023250002
  - 0.6680161836495659
  - 0.6898620390049178
  test_recall_macro:
  - 0.36032746992411385
  - 0.3810475585630639
  - 0.3632972177471244
  - 0.36212028934893276
  - 0.35931516529630275
  test_recall_micro:
  - 0.5857558139534884
  - 0.6095890410958904
  - 0.5964826575476306
  - 0.5896180215475024
  - 0.5856164383561644
  test_recall_samples:
  - 0.5936329039812647
  - 0.6080384494831217
  - 0.6008887235449735
  - 0.6064669738863288
  - 0.584631816436252
  test_recall_weighted:
  - 0.5857558139534884
  - 0.6095890410958904
  - 0.5964826575476306
  - 0.5896180215475024
  - 0.5856164383561644
start: 2023-10-19 22:13:47.932814
wrapper: null
