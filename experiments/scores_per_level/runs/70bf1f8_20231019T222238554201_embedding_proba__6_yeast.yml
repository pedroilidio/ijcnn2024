active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMzA0BAMzMzMzMDQEAzMzMzMwNAAJqZmZmZ2T9gZmZmZmYewA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzA0BAMzMzMzMLQAAzMzMzM+O/QDMzMzMzC0AwMzMzMzMhwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j+AZmZmZmb2P2BmZmZmZhbAgGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMIkAAMzMzMzPjv4CZmZmZmfm/YGZmZmZmFsCAmZmZmZn5vw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEDQzMzMzMwMQJiZmZmZmRnAMDMzMzMzA8DQzMzMzMwEQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwEAzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            cGZmZmZmDkDIzMzMzMwUwDgzMzMzMxdAyMzMzMzMEMAAmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AMzMzMzPzvwCYmZmZmcm/gGZmZmZmBkAAmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzE0DMzMzMzMwQwNDMzMzMzPw/mJmZmZmZCcCgmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJyZmZmZ2T8AZ2ZmZmb2P+DMzMzMzCJAQGZmZmZmEsBAZmZmZmYawA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: yeast
  params:
    dataset: yeast
    min_positives: 15
directory: scores_per_level/runs
end: 2023-10-19 22:26:14.917759
estimator:
  call: proba_vs_embedding.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: 1
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory: /tmp
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_proba__6
  params:
    memory: /tmp
hash: 70bf1f800c4d4a6e7ef8f07755f7799427defeb176677f913a149458123e8f41
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/scores_per_level/runs/70bf1f8_20231019T222238554201_embedding_proba__6_yeast.yml
results:
  fit_time:
  - 194.9060127735138
  - 191.53037643432617
  - 189.18375325202942
  - 204.5856728553772
  - 210.77753067016602
  score_time:
  - 4.79326319694519
  - 5.270700693130493
  - 5.6032538414001465
  - 5.11409592628479
  - 5.018751621246338
  test_accuracy:
  - 0.22153209109730848
  - 0.1908713692946058
  - 0.25316455696202533
  - 0.20081967213114754
  - 0.20816326530612245
  test_f1_macro:
  - 0.3777673468704176
  - 0.3746061961880037
  - 0.38528760762817144
  - 0.38367156162700183
  - 0.37222221012969275
  test_f1_micro:
  - 0.65129835718071
  - 0.6430632048255966
  - 0.6680683311432326
  - 0.6366925064599482
  - 0.632433848572177
  test_f1_samples:
  - 0.6261367457019631
  - 0.6197971806892969
  - 0.6477719420757395
  - 0.6082303852795656
  - 0.6070295917234694
  test_f1_weighted:
  - 0.5900013133788948
  - 0.5814733870930406
  - 0.6032435776277707
  - 0.5817340146623535
  - 0.5764666255539161
  test_jaccard_macro:
  - 0.28267315923652764
  - 0.2810478245179235
  - 0.2971367453681705
  - 0.28377673834945627
  - 0.27562563519003175
  test_jaccard_micro:
  - 0.48290766208251473
  - 0.4739080015461925
  - 0.5015785319652722
  - 0.4670204700530705
  - 0.4624521072796935
  test_jaccard_samples:
  - 0.5259242827565809
  - 0.5147368767700718
  - 0.5511754068716094
  - 0.5082067750100537
  - 0.5085155490767737
  test_jaccard_weighted:
  - 0.46454494813097713
  - 0.45620075627389717
  - 0.4842011285687565
  - 0.4527494982045247
  - 0.44785441671856724
  test_precision_macro:
  - 0.47495049246802246
  - 0.4506971551499857
  - 0.45042015462118495
  - 0.44881951056094055
  - 0.43866462392471073
  test_precision_micro:
  - 0.7018846373500857
  - 0.6961953435547984
  - 0.7254566210045662
  - 0.6784140969162996
  - 0.6865756541524459
  test_precision_samples:
  - 0.6954451345755693
  - 0.6958506224066391
  - 0.7265119549929676
  - 0.6740388368462139
  - 0.6901360544217687
  test_precision_weighted:
  - 0.6387964029338721
  - 0.6172034019944156
  - 0.6328302475982277
  - 0.6069834516994403
  - 0.6080309870474124
  test_recall_macro:
  - 0.3658700881080324
  - 0.3650338382898649
  - 0.376206265919837
  - 0.37478918004035894
  - 0.35811254010719346
  test_recall_micro:
  - 0.6075135936727633
  - 0.5974658869395711
  - 0.6190940087676571
  - 0.5998052580331061
  - 0.5862068965517241
  test_recall_samples:
  - 0.6219814979131748
  - 0.6124925903971548
  - 0.6335451409818498
  - 0.5965231944740143
  - 0.5897448979591836
  test_recall_weighted:
  - 0.6075135936727633
  - 0.5974658869395711
  - 0.6190940087676571
  - 0.5998052580331061
  - 0.5862068965517241
start: 2023-10-19 22:22:38.554201
wrapper: null
