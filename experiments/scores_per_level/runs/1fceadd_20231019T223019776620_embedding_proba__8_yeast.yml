active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            oJmZmZmZEUCgmZmZmZkRQKCZmZmZmRFAmJmZmZmZMcCgmZmZmZkRQA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/gJmZmZmZ+b8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZEUCgmZmZmZkRQDAzMzMzMy/AQDMzMzMzC0BAMzMzMzMLQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZEUAAmpmZmZnZP2BmZmZmZhbAwMzMzMzMBMBAMzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv9DMzMzMzARAQDMzMzMz4z8wMzMzMzMLwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            yMzMzMzMEMAgMzMzMzPzvzgzMzMzMxNAODMzMzMzE0DIzMzMzMwQwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AMzMzMzPzv4CZmZmZmQHAAM3MzMzM/D+AZmZmZmYGQA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZAcBoZmZmZmYGQJiZmZmZmQHAgJmZmZmZyb/QzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmGsDAmZmZmZkdQAAyMzMzM+O/gMzMzMzMBMCAMzMzMzMDQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: yeast
  params:
    dataset: yeast
    min_positives: 15
directory: scores_per_level/runs
end: 2023-10-19 22:34:54.361800
estimator:
  call: proba_vs_embedding.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: 1
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory: /tmp
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_proba__8
  params:
    memory: /tmp
hash: 1fceadd5604a26361bec94104d573969bcef7ac606595d969ccf7ff1f0f0daa9
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/scores_per_level/runs/1fceadd_20231019T223019776620_embedding_proba__8_yeast.yml
results:
  fit_time:
  - 248.9238977432251
  - 249.01385021209717
  - 256.3675034046173
  - 250.51218485832214
  - 267.81364703178406
  score_time:
  - 6.599680185317993
  - 7.230041265487671
  - 6.12110447883606
  - 6.500398874282837
  - 6.245365381240845
  test_accuracy:
  - 0.25918367346938775
  - 0.2184873949579832
  - 0.23140495867768596
  - 0.21604938271604937
  - 0.23284823284823286
  test_f1_macro:
  - 0.4127487493950432
  - 0.3832560806950952
  - 0.3710269909119089
  - 0.38723725106082957
  - 0.3743436822064198
  test_f1_micro:
  - 0.6696080975862964
  - 0.6482318532305237
  - 0.6483516483516483
  - 0.6348284960422165
  - 0.6355437665782493
  test_f1_samples:
  - 0.6458889126746269
  - 0.6250769305391154
  - 0.6284459915658263
  - 0.6082314576141737
  - 0.6107050837820068
  test_f1_weighted:
  - 0.6155079660657596
  - 0.5922554383304222
  - 0.5817161441139294
  - 0.5830120327643217
  - 0.5772137252276215
  test_jaccard_macro:
  - 0.31116372568374845
  - 0.2876326497598693
  - 0.27972049088755335
  - 0.28391368096135133
  - 0.27752412354657124
  test_jaccard_micro:
  - 0.5033164260632071
  - 0.479543666404406
  - 0.4796747967479675
  - 0.46501739466563585
  - 0.46578538102643857
  test_jaccard_samples:
  - 0.5519560768030156
  - 0.5256419234360411
  - 0.5322961760461761
  - 0.5096046443268666
  - 0.5144534894534893
  test_jaccard_weighted:
  - 0.48612563821223265
  - 0.4661623336983986
  - 0.46141707745944216
  - 0.45147520028549826
  - 0.4503582650152155
  test_precision_macro:
  - 0.502446876279069
  - 0.4478069862798938
  - 0.5716966244857886
  - 0.6072575809102875
  - 0.44221654843032393
  test_precision_micro:
  - 0.7123136388735505
  - 0.7074869413813116
  - 0.7043774872086412
  - 0.6949740034662045
  - 0.6920854997111496
  test_precision_samples:
  - 0.7083333333333334
  - 0.7048969587835134
  - 0.7106060606060607
  - 0.6850480109739367
  - 0.68998613998614
  test_precision_weighted:
  - 0.6550879545649525
  - 0.6247693473118913
  - 0.6614787130574838
  - 0.6791761337444945
  - 0.6088145389539813
  test_recall_macro:
  - 0.39985298960340593
  - 0.36875248945371747
  - 0.36126121552010076
  - 0.3621015862268723
  - 0.3584831755214795
  test_recall_micro:
  - 0.6317335945151812
  - 0.5981354268891069
  - 0.6005816771691711
  - 0.5842642059252064
  - 0.5875429131927415
  test_recall_samples:
  - 0.6434397178784934
  - 0.6108710150726957
  - 0.6138306768988587
  - 0.5912396302828402
  - 0.591977691977692
  test_recall_weighted:
  - 0.6317335945151812
  - 0.5981354268891069
  - 0.6005816771691711
  - 0.5842642059252064
  - 0.5875429131927415
start: 2023-10-19 22:30:19.776620
wrapper: null
