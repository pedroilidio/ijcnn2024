active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz47+gmZmZmZkRQKCZmZmZmRVAYGZmZmZmGsDAzMzMzMwEwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j8AMzMzMzPjv6CZmZmZmRFAYGZmZmZmEsAAMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+gmZmZmZn5PzAzMzMzMwvAaGZmZmZmEkAwMzMzMzMLwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP2BmZmZmZva/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            4MzMzMzM/D+QmZmZmZkJwMCZmZmZmek/4MzMzMzM/D8gMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCYmZmZmem/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AM3MzMzM/D8AmpmZmZnpP8DMzMzMzBDAADMzMzMz87+AZmZmZmYGQA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz87+AmZmZmZnJv2hmZmZmZgZA0MzMzMzM/D+YmZmZmZkJwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzJcCAzMzMzMwMwMCZmZmZmRlAwJmZmZmZFUCAMzMzMzMDQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: yeast
  params:
    dataset: yeast
    min_positives: 15
directory: scores_per_level/runs
end: 2023-10-19 22:17:01.726188
estimator:
  call: proba_vs_embedding.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state: 0
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: 1
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: 10
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 1
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: 10
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 0.05
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                params:
                  max_components: 800
                  n_components: 0.1
                  random_state: 0
                  tol: 0.0
                  verbose: 0
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory: /tmp
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_proba__3
  params:
    memory: /tmp
hash: 4bbe7c1e917e49dc39f8202e7fe53f9d2a772d9005093d7afcd67f265df38799
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/scores_per_level/runs/4bbe7c1_20231019T221508549028_embedding_proba__3_yeast.yml
results:
  fit_time:
  - 104.44592428207397
  - 109.9410445690155
  - 102.10617542266846
  - 106.98555040359497
  - 108.4860610961914
  score_time:
  - 2.8452553749084473
  - 2.7205681800842285
  - 3.0559070110321045
  - 2.8579659461975098
  - 2.7540555000305176
  test_accuracy:
  - 0.2145748987854251
  - 0.22381930184804927
  - 0.20964360587002095
  - 0.22594142259414227
  - 0.23076923076923078
  test_f1_macro:
  - 0.4118827319744299
  - 0.3991828254114318
  - 0.39780447664884183
  - 0.4009256693011753
  - 0.38848129712740803
  test_f1_micro:
  - 0.6658051176014473
  - 0.65446941975954
  - 0.6552370747388159
  - 0.6587552742616033
  - 0.6506276150627615
  test_f1_samples:
  - 0.6341941908743528
  - 0.6290510652933651
  - 0.6317358160125456
  - 0.6336793320579932
  - 0.622573903343134
  test_f1_weighted:
  - 0.6130924136197087
  - 0.6004950073666405
  - 0.6022125984132235
  - 0.6064285739600976
  - 0.5921709682843589
  test_jaccard_macro:
  - 0.3083371031245514
  - 0.2974249053680133
  - 0.2964860714380419
  - 0.29936047645983865
  - 0.2906520268228391
  test_jaccard_micro:
  - 0.4990313831848121
  - 0.4864024864024864
  - 0.48725099601593624
  - 0.4911521824616595
  - 0.4821705426356589
  test_jaccard_samples:
  - 0.5340153267784847
  - 0.5300090965388706
  - 0.5289150111477156
  - 0.5373173606960218
  - 0.5298419298419298
  test_jaccard_weighted:
  - 0.48141792655705096
  - 0.470708033652077
  - 0.4727513890931407
  - 0.4774769958439786
  - 0.4658116570089513
  test_precision_macro:
  - 0.5526769560148684
  - 0.4782984423382043
  - 0.48825302149153427
  - 0.5578528151133859
  - 0.47978868300447114
  test_precision_micro:
  - 0.7065277015907844
  - 0.702187324733595
  - 0.724097098875074
  - 0.717816091954023
  - 0.7036199095022625
  test_precision_samples:
  - 0.6963707345286293
  - 0.6974968221374792
  - 0.7254367575122291
  - 0.7159344490934448
  - 0.6988367488367488
  test_precision_weighted:
  - 0.6689865257308161
  - 0.6369270468945789
  - 0.6552482656782268
  - 0.6805580209881096
  - 0.6379616917202819
  test_recall_macro:
  - 0.3952942328858824
  - 0.3831929441179537
  - 0.37038948468411037
  - 0.37736863449103025
  - 0.3733826347831867
  test_recall_micro:
  - 0.6295210166177908
  - 0.6128242780225159
  - 0.5983365949119374
  - 0.6086744639376218
  - 0.6050583657587548
  test_recall_samples:
  - 0.6354965940492256
  - 0.6245024311759424
  - 0.6107708562111077
  - 0.6113003918443249
  - 0.5996386496386498
  test_recall_weighted:
  - 0.6295210166177908
  - 0.6128242780225159
  - 0.5983365949119374
  - 0.6086744639376218
  - 0.6050583657587548
start: 2023-10-19 22:15:08.549028
wrapper: null
