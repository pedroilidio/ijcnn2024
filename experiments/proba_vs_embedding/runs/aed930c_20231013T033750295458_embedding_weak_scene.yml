active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0CAzMzMzMwEwMCZmZmZmRFAQGZmZmZmEsAAnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: scene
  params:
    dataset: scene
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:43:24.438300
estimator:
  call: proba_vs_embedding.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: 10
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 1
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state:
              call: numpy.random.mtrand.RandomState
              params: {}
            verbose: 10
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: 1
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_weak
  params: {}
hash: aed930c2db07162b9fa131dc2b7e92c21be607b6d204f4a335d8093a0814c9a4
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/aed930c_20231013T033750295458_embedding_weak_scene.yml
results:
  fit_time:
  - 327.96392846107483
  - 316.4726881980896
  - 314.89831042289734
  - 283.0109751224518
  - 312.4931137561798
  score_time:
  - 5.300500154495239
  - 5.966077089309692
  - 6.054285287857056
  - 7.235136270523071
  - 6.150069236755371
  test_accuracy:
  - 0.4906054279749478
  - 0.5289256198347108
  - 0.5387840670859538
  - 0.4670781893004115
  - 0.5093555093555093
  test_f1_macro:
  - 0.6282373603180809
  - 0.6688096456688658
  - 0.6722479501846013
  - 0.6158998711126344
  - 0.6451286393203355
  test_f1_micro:
  - 0.6353522867737947
  - 0.6723716381418092
  - 0.679658952496955
  - 0.6213836477987422
  - 0.6551724137931034
  test_f1_samples:
  - 0.5198329853862212
  - 0.5537190082644629
  - 0.5649895178197065
  - 0.49039780521262
  - 0.537075537075537
  test_f1_weighted:
  - 0.6087033744502831
  - 0.6474852252008387
  - 0.6543332465632478
  - 0.5970588459149315
  - 0.6226127722162704
  test_jaccard_macro:
  - 0.4843675878215352
  - 0.53034155616782
  - 0.5310836060806612
  - 0.4725031494977466
  - 0.5078865957313018
  test_jaccard_micro:
  - 0.46557971014492755
  - 0.5064456721915286
  - 0.514760147601476
  - 0.45072992700729925
  - 0.48717948717948717
  test_jaccard_samples:
  - 0.5125260960334029
  - 0.5475206611570248
  - 0.5583508036338225
  - 0.4845679012345679
  - 0.5301455301455301
  test_jaccard_weighted:
  - 0.4655102680922186
  - 0.5081311164426905
  - 0.5126594873166286
  - 0.4536962091698218
  - 0.48632875789990415
  test_precision_macro:
  - 0.8676003926003926
  - 0.909766188637644
  - 0.9204311066884165
  - 0.8785551706747358
  - 0.9012990576630394
  test_precision_micro:
  - 0.8801369863013698
  - 0.9136212624584718
  - 0.9177631578947368
  - 0.8884892086330936
  - 0.9016949152542373
  test_precision_samples:
  - 0.534446764091858
  - 0.5650826446280992
  - 0.5775681341719078
  - 0.5020576131687243
  - 0.5509355509355509
  test_precision_weighted:
  - 0.8630384787057902
  - 0.907057495183074
  - 0.917925040637043
  - 0.8767631343371398
  - 0.9005827646541109
  test_recall_macro:
  - 0.5168392394525357
  - 0.5545671943120994
  - 0.5581328373305451
  - 0.49703246407222434
  - 0.5367818680175922
  test_recall_micro:
  - 0.49709864603481624
  - 0.5319148936170213
  - 0.539651837524178
  - 0.47775628626692457
  - 0.5145067698259188
  test_recall_samples:
  - 0.5125260960334029
  - 0.5485537190082644
  - 0.5593990216631726
  - 0.4845679012345679
  - 0.5301455301455301
  test_recall_weighted:
  - 0.49709864603481624
  - 0.5319148936170213
  - 0.539651837524178
  - 0.47775628626692457
  - 0.5145067698259188
start: 2023-10-13 03:37:50.295458
wrapper: null
