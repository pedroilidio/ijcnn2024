active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b8AmZmZmZnZvyAzMzMzMwvAwJmZmZmZ+T/gzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: emotions
  params:
    dataset: emotions
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:16:49.756289
estimator:
  call: proba_vs_embedding.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: 1
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: proba
  params: {}
hash: e1b95d3a2043dc61539d52b1439a28a89f4ce48de7967f97a354749f3c260edf
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/e1b95d3_20231013T031638836042_proba_emotions.yml
results:
  fit_time:
  - 8.267519474029541
  - 8.019745111465454
  - 8.210495471954346
  - 8.259326696395874
  - 8.267436027526855
  score_time:
  - 1.7582495212554932
  - 1.70945405960083
  - 1.8025412559509277
  - 1.7351577281951904
  - 1.8584327697753906
  test_accuracy:
  - 0.3025210084033613
  - 0.2773109243697479
  - 0.32786885245901637
  - 0.29914529914529914
  - 0.3103448275862069
  test_f1_macro:
  - 0.6229727588763591
  - 0.6201755764564344
  - 0.6654088050314466
  - 0.6593642335720449
  - 0.5977137355515827
  test_f1_micro:
  - 0.6633165829145727
  - 0.6504854368932039
  - 0.691542288557214
  - 0.6801007556675064
  - 0.6479591836734694
  test_f1_samples:
  - 0.5985994397759103
  - 0.5823529411764705
  - 0.6202185792349727
  - 0.6042735042735043
  - 0.5701149425287355
  test_f1_weighted:
  - 0.6382268441799169
  - 0.6297462689264365
  - 0.6747260878226471
  - 0.6640433386402835
  - 0.6137551121319491
  test_jaccard_macro:
  - 0.47144710064365736
  - 0.4603292351396497
  - 0.5121527777777778
  - 0.5077246037611891
  - 0.4503777060692605
  test_jaccard_micro:
  - 0.49624060150375937
  - 0.48201438848920863
  - 0.5285171102661597
  - 0.5152671755725191
  - 0.47924528301886793
  test_jaccard_samples:
  - 0.5238095238095238
  - 0.5063025210084033
  - 0.5484972677595629
  - 0.5313390313390315
  - 0.5079022988505747
  test_jaccard_weighted:
  - 0.48767225273681514
  - 0.47049420379708257
  - 0.5223887631975866
  - 0.5112594045520875
  - 0.46682999962573724
  test_precision_macro:
  - 0.7610488665923447
  - 0.7400181787592559
  - 0.7811880066036077
  - 0.7850094722130901
  - 0.7754443604548794
  test_precision_micro:
  - 0.75
  - 0.708994708994709
  - 0.7679558011049724
  - 0.7670454545454546
  - 0.7426900584795322
  test_precision_samples:
  - 0.6652661064425771
  - 0.6344537815126051
  - 0.6666666666666667
  - 0.6737891737891738
  - 0.5991379310344828
  test_precision_weighted:
  - 0.7595816994730037
  - 0.7348446504134238
  - 0.7737725787409855
  - 0.7744238498929151
  - 0.7752379396035035
  test_recall_macro:
  - 0.5716635069663868
  - 0.5814647143200212
  - 0.6072186060976495
  - 0.5957910863571241
  - 0.5559034956528365
  test_recall_micro:
  - 0.5945945945945946
  - 0.600896860986547
  - 0.6289592760180995
  - 0.6108597285067874
  - 0.5746606334841629
  test_recall_samples:
  - 0.5952380952380952
  - 0.592436974789916
  - 0.6325136612021857
  - 0.5954415954415954
  - 0.5862068965517241
  test_recall_weighted:
  - 0.5945945945945946
  - 0.600896860986547
  - 0.6289592760180995
  - 0.6108597285067874
  - 0.5746606334841629
start: 2023-10-13 03:16:38.836042
wrapper: null
