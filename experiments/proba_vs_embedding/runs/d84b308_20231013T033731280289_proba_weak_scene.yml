active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMAAZ2ZmZmb2P8CZmZmZmRFAgMzMzMzMBMAAnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: scene
  params:
    dataset: scene
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:37:50.277497
estimator:
  call: proba_vs_embedding.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: 10
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 1
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state:
              call: numpy.random.mtrand.RandomState
              params: {}
            verbose: 10
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: 1
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: proba_weak
  params: {}
hash: d84b308badc1d8286a09f47a8940c5bf06bb9e48358be1d9661922cd5c5da859
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/d84b308_20231013T033731280289_proba_weak_scene.yml
results:
  fit_time:
  - 15.594758749008179
  - 15.256353616714478
  - 15.347562074661255
  - 15.334438800811768
  - 15.80107307434082
  score_time:
  - 1.8386905193328857
  - 1.7133419513702393
  - 2.0090625286102295
  - 2.013406753540039
  - 1.879758596420288
  test_accuracy:
  - 0.6845360824742268
  - 0.7041666666666667
  - 0.6582809224318659
  - 0.6818181818181818
  - 0.7505197505197505
  test_f1_macro:
  - 0.7687068453639054
  - 0.7935397037944307
  - 0.7567005287284964
  - 0.7727097397528621
  - 0.8233867788907002
  test_f1_micro:
  - 0.7615062761506276
  - 0.787434554973822
  - 0.7500000000000001
  - 0.7637877211238294
  - 0.818276220145379
  test_f1_samples:
  - 0.7202749140893472
  - 0.7451388888888888
  - 0.7127882599580713
  - 0.7245179063360881
  - 0.7879417879417879
  test_f1_weighted:
  - 0.7602359543375187
  - 0.7860798734782988
  - 0.743803930874772
  - 0.7615906401196778
  - 0.814110554688177
  test_jaccard_macro:
  - 0.6302574522489345
  - 0.6639726325044193
  - 0.629539468149706
  - 0.6426372595925985
  - 0.7114272768657538
  test_jaccard_micro:
  - 0.6148648648648649
  - 0.6493955094991365
  - 0.6
  - 0.6178451178451179
  - 0.6924428822495606
  test_jaccard_samples:
  - 0.711340206185567
  - 0.7347222222222222
  - 0.69916142557652
  - 0.7138429752066116
  - 0.7785862785862786
  test_jaccard_weighted:
  - 0.6193992295066095
  - 0.6541470908701733
  - 0.6127094271746567
  - 0.6284732927895791
  - 0.6979148903555273
  test_precision_macro:
  - 0.8406447736878467
  - 0.8631012120753389
  - 0.8218785723103802
  - 0.8366059669242422
  - 0.8877900903044839
  test_precision_micro:
  - 0.8329519450800915
  - 0.8545454545454545
  - 0.8206896551724138
  - 0.8228699551569507
  - 0.8873873873873874
  test_precision_samples:
  - 0.734020618556701
  - 0.7572916666666667
  - 0.7295597484276729
  - 0.7334710743801653
  - 0.8024948024948025
  test_precision_weighted:
  - 0.8325340235829899
  - 0.8542756403707065
  - 0.8106090301101964
  - 0.824357933557095
  - 0.8830271491243692
  test_recall_macro:
  - 0.7099302610838717
  - 0.7365593573023409
  - 0.7044525579033879
  - 0.7231279509955774
  - 0.7713851955770821
  test_recall_micro:
  - 0.7013487475915221
  - 0.7300970873786408
  - 0.690522243713733
  - 0.7126213592233009
  - 0.7591522157996147
  test_recall_samples:
  - 0.7154639175257732
  - 0.7434027777777777
  - 0.709643605870021
  - 0.7262396694214877
  - 0.7827442827442828
  test_recall_weighted:
  - 0.7013487475915221
  - 0.7300970873786408
  - 0.690522243713733
  - 0.7126213592233009
  - 0.7591522157996147
start: 2023-10-13 03:37:31.280289
wrapper: null
