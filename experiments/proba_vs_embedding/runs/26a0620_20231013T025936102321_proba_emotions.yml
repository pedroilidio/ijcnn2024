active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZEcBAMzMzMzPjP6CZmZmZmfk/oJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMBECAMzMzMzPjP4AzMzMzM+M/QGZmZmZm9r8gMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    error_score: raise
    n_jobs: 1
    return_estimator: false
    return_train_score: false
    scoring:
      accuracy: accuracy
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:sklearn.metrics._scorer._ThresholdScorer
        _kwargs: {}
        _score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_loss: !!python/object:sklearn.metrics._scorer._ThresholdScorer
        _kwargs: {}
        _score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: emotions
  params:
    dataset: emotions
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:00:40.119277
estimator:
  call: proba_vs_embedding.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: 1
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: proba
  params: {}
hash: 26a0620b2680ca09fe322e8609b8aa6f16516cb5b3beda80676b64b21bc77009
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/26a0620_20231013T025936102321_proba_emotions.yml
results:
  fit_time:
  - 8.790844917297363
  - 8.911176204681396
  - 8.873936653137207
  - 8.959922075271606
  - 8.90205717086792
  score_time:
  - 3.822936534881592
  - 3.7730562686920166
  - 3.743075132369995
  - 3.7774741649627686
  - 3.786926746368408
  test_accuracy:
  - 0.3103448275862069
  - 0.3559322033898305
  - 0.288135593220339
  - 0.31666666666666665
  - 0.2644628099173554
  test_f1_macro:
  - 0.650585247864022
  - 0.6458931714481103
  - 0.6069627429244302
  - 0.6217511572562505
  - 0.6242236425269166
  test_f1_micro:
  - 0.6717171717171717
  - 0.6684073107049607
  - 0.6510416666666666
  - 0.6699751861042184
  - 0.6601466992665037
  test_f1_samples:
  - 0.5890804597701149
  - 0.5833333333333334
  - 0.5655367231638418
  - 0.6294444444444445
  - 0.6
  test_f1_weighted:
  - 0.6547363506542877
  - 0.6513858712069849
  - 0.6225793163235114
  - 0.635862094894353
  - 0.6418800878265948
  test_jaccard_macro:
  - 0.5012221226353221
  - 0.49134093949431573
  - 0.4554654203330903
  - 0.4758132453250589
  - 0.4711070846219527
  test_jaccard_micro:
  - 0.5057034220532319
  - 0.5019607843137255
  - 0.4826254826254826
  - 0.503731343283582
  - 0.4927007299270073
  test_jaccard_samples:
  - 0.5229885057471264
  - 0.5268361581920904
  - 0.4985875706214689
  - 0.5506944444444445
  - 0.518595041322314
  test_jaccard_weighted:
  - 0.5032028937150127
  - 0.49670680213695956
  - 0.47242890360690043
  - 0.489649810116514
  - 0.49084428761140486
  test_label_ranking_average_precision_score:
  - 0.8421216475095782
  - 0.7907015065913369
  - 0.794632768361582
  - 0.8161574074074073
  - 0.7808539944903578
  test_label_ranking_loss:
  - 0.13613505747126436
  - 0.16916195856873825
  - 0.17316384180790964
  - 0.1385648148148148
  - 0.16942148760330578
  test_precision_macro:
  - 0.7883791079370709
  - 0.8265151515151515
  - 0.8063541205956067
  - 0.7547502515759095
  - 0.7090019670582332
  test_precision_micro:
  - 0.7823529411764706
  - 0.7901234567901234
  - 0.7621951219512195
  - 0.7377049180327869
  - 0.7180851063829787
  test_precision_samples:
  - 0.6379310344827588
  - 0.652542372881356
  - 0.6002824858757063
  - 0.6930555555555554
  - 0.6707988980716254
  test_precision_weighted:
  - 0.781787979746059
  - 0.8127313862607981
  - 0.8027552169193036
  - 0.7505501647973238
  - 0.7090713508947298
  test_recall_macro:
  - 0.5794198188438505
  - 0.5615649809308398
  - 0.5462856877951218
  - 0.5904514647838321
  - 0.5773516460238816
  test_recall_micro:
  - 0.588495575221239
  - 0.579185520361991
  - 0.5681818181818182
  - 0.6136363636363636
  - 0.6108597285067874
  test_recall_samples:
  - 0.589080459770115
  - 0.5677966101694916
  - 0.5861581920903955
  - 0.6333333333333333
  - 0.5991735537190082
  test_recall_weighted:
  - 0.588495575221239
  - 0.579185520361991
  - 0.5681818181818182
  - 0.6136363636363636
  - 0.6108597285067874
start: 2023-10-13 02:59:36.102321
wrapper: null
