active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwEAzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r/AmZmZmZn5P+DMzMzMzARAAJmZmZmZ2b8gMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    error_score: raise
    n_jobs: 1
    return_estimator: false
    return_train_score: false
    scoring:
      accuracy: accuracy
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:sklearn.metrics._scorer._ThresholdScorer
        _kwargs: {}
        _score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_loss: !!python/object:sklearn.metrics._scorer._ThresholdScorer
        _kwargs: {}
        _score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: emotions
  params:
    dataset: emotions
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:03:12.892545
estimator:
  call: proba_vs_embedding.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: 1
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding
  params: {}
hash: ab8ae7d14cbab4040dfe9d425c3e8da12a25396bc5d84ead59a75602186fba17
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/ab8ae7d_20231013T030040130439_embedding_emotions.yml
results:
  fit_time:
  - 23.255858898162842
  - 25.890406131744385
  - 26.56384801864624
  - 22.823426723480225
  - 25.610753774642944
  score_time:
  - 5.592089414596558
  - 5.701507806777954
  - 5.677496910095215
  - 5.652928590774536
  - 5.7087461948394775
  test_accuracy:
  - 0.35
  - 0.3162393162393162
  - 0.3103448275862069
  - 0.2857142857142857
  - 0.33884297520661155
  test_f1_macro:
  - 0.6320978168874823
  - 0.6211387940444143
  - 0.603752890666949
  - 0.6044141525378796
  - 0.6024681862358706
  test_f1_micro:
  - 0.6748166259168704
  - 0.6585365853658537
  - 0.6649616368286445
  - 0.6485148514851484
  - 0.6478149100257069
  test_f1_samples:
  - 0.6258333333333332
  - 0.6168091168091169
  - 0.6350574712643678
  - 0.588515406162465
  - 0.5696969696969697
  test_f1_weighted:
  - 0.6464359761013556
  - 0.63524485758901
  - 0.6265887330983806
  - 0.6152949705883215
  - 0.6158881992482058
  test_jaccard_macro:
  - 0.48308868689976503
  - 0.4659337068160598
  - 0.46009440291355186
  - 0.460609033403151
  - 0.4497152000847026
  test_jaccard_micro:
  - 0.5092250922509225
  - 0.4909090909090909
  - 0.49808429118773945
  - 0.47985347985347987
  - 0.4790874524714829
  test_jaccard_samples:
  - 0.5569444444444444
  - 0.5398860398860399
  - 0.555316091954023
  - 0.5126050420168067
  - 0.5110192837465565
  test_jaccard_weighted:
  - 0.4981355326041888
  - 0.4815368647458983
  - 0.48504503949443567
  - 0.4701188210747034
  - 0.4634692928292677
  test_label_ranking_average_precision_score:
  - 0.7827777777777779
  - 0.7976258309591646
  - 0.8460009578544059
  - 0.7714985994397758
  - 0.7977731864095502
  test_label_ranking_loss:
  - 0.17763888888888887
  - 0.18200379867046534
  - 0.12552681992337164
  - 0.18256302521008405
  - 0.15603764921946742
  test_precision_macro:
  - 0.7479925308939666
  - 0.7424741924741926
  - 0.7690336579871464
  - 0.6991480741480741
  - 0.8187619166211425
  test_precision_micro:
  - 0.7340425531914894
  - 0.7258064516129032
  - 0.7692307692307693
  - 0.7119565217391305
  - 0.75
  test_precision_samples:
  - 0.6763888888888888
  - 0.6837606837606838
  - 0.7471264367816093
  - 0.6372549019607844
  - 0.6432506887052342
  test_precision_weighted:
  - 0.7435411515675618
  - 0.7390992935635793
  - 0.7649762016041086
  - 0.6956753095389459
  - 0.8031388031115122
  test_recall_macro:
  - 0.5985269778219132
  - 0.5763027793213551
  - 0.5462422494200051
  - 0.5746787920502949
  - 0.5409325323323886
  test_recall_micro:
  - 0.6244343891402715
  - 0.6026785714285714
  - 0.5855855855855856
  - 0.5954545454545455
  - 0.5701357466063348
  test_recall_samples:
  - 0.625
  - 0.6153846153846154
  - 0.5977011494252873
  - 0.5994397759103642
  - 0.5550964187327824
  test_recall_weighted:
  - 0.6244343891402715
  - 0.6026785714285714
  - 0.5855855855855856
  - 0.5954545454545455
  - 0.5701357466063348
start: 2023-10-13 03:00:40.130439
wrapper: null
