active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T+YmZmZmZkRwEAzMzMzM+M/oJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMDEAgMzMzMzMLwJCZmZmZmRHAAJmZmZmZ2b9wZmZmZmYSQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: emotions
  params:
    dataset: emotions
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:18:34.157288
estimator:
  call: proba_vs_embedding.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: 10
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 1
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state:
              call: numpy.random.mtrand.RandomState
              params: {}
            verbose: 10
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: 1
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_weak
  params: {}
hash: 73f42ce1f567d8738c1a893834f2a816ff68002756953c1f76a9005c136992fc
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/73f42ce_20231013T031748528155_embedding_weak_emotions.yml
results:
  fit_time:
  - 42.40698480606079
  - 41.63888502120972
  - 42.34306883811951
  - 40.912548542022705
  - 40.853901624679565
  score_time:
  - 3.0651209354400635
  - 3.2637832164764404
  - 3.0919783115386963
  - 3.111898899078369
  - 3.1919126510620117
  test_accuracy:
  - 0.3391304347826087
  - 0.319672131147541
  - 0.36585365853658536
  - 0.31932773109243695
  - 0.34210526315789475
  test_f1_macro:
  - 0.6169170909884962
  - 0.6424164981488136
  - 0.6844619555018037
  - 0.6100849683137622
  - 0.6768205957482802
  test_f1_micro:
  - 0.6682577565632458
  - 0.6786516853932585
  - 0.7048054919908467
  - 0.6439024390243903
  - 0.714975845410628
  test_f1_samples:
  - 0.6376811594202898
  - 0.6423497267759563
  - 0.6574525745257452
  - 0.5966386554621849
  - 0.6599415204678363
  test_f1_weighted:
  - 0.6362197840874553
  - 0.6525687506532718
  - 0.6887722011479127
  - 0.6259738012798627
  - 0.6904051815133418
  test_jaccard_macro:
  - 0.46874999999999994
  - 0.49807607628745837
  - 0.5315377781821536
  - 0.45250265368776676
  - 0.5339299996546404
  test_jaccard_micro:
  - 0.5017921146953405
  - 0.5136054421768708
  - 0.5441696113074205
  - 0.4748201438848921
  - 0.556390977443609
  test_jaccard_samples:
  - 0.5597101449275363
  - 0.5628415300546448
  - 0.5867208672086721
  - 0.5233893557422971
  - 0.5833333333333334
  test_jaccard_weighted:
  - 0.49003987095203305
  - 0.5069141725683731
  - 0.5353040047451321
  - 0.469969648024669
  - 0.5495152134303863
  test_precision_macro:
  - 0.7021862528279824
  - 0.7013371459694989
  - 0.7657597988830643
  - 0.6904449997778334
  - 0.7576191501579098
  test_precision_micro:
  - 0.7106598984771574
  - 0.6863636363636364
  - 0.7162790697674418
  - 0.6947368421052632
  - 0.7589743589743589
  test_precision_samples:
  - 0.6753623188405796
  - 0.6721311475409836
  - 0.6842818428184282
  - 0.6456582633053222
  - 0.716374269005848
  test_precision_weighted:
  - 0.7051839244872875
  - 0.6981901234567902
  - 0.7517941739148954
  - 0.6912572700571882
  - 0.7561845401736025
  test_recall_macro:
  - 0.6004208026308836
  - 0.6504658997693054
  - 0.6753368555751873
  - 0.5731569997787296
  - 0.6511568967747926
  test_recall_micro:
  - 0.6306306306306306
  - 0.6711111111111111
  - 0.6936936936936937
  - 0.6
  - 0.6757990867579908
  test_recall_samples:
  - 0.66231884057971
  - 0.6707650273224044
  - 0.6829268292682927
  - 0.6008403361344536
  - 0.6681286549707601
  test_recall_weighted:
  - 0.6306306306306306
  - 0.6711111111111111
  - 0.6936936936936937
  - 0.6
  - 0.6757990867579908
start: 2023-10-13 03:17:48.528155
wrapper: null
