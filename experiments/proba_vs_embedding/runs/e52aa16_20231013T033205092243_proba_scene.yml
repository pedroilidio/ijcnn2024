active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz47+AMzMzMzMDQEBmZmZmZhrA4MzMzMzMJEBAZmZmZmYWwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: false
    scoring:
    - f1_macro
    - f1_micro
    - f1_weighted
    - f1_samples
    - precision_macro
    - precision_micro
    - precision_weighted
    - precision_samples
    - recall_macro
    - recall_micro
    - recall_weighted
    - recall_samples
    - jaccard_macro
    - jaccard_micro
    - jaccard_weighted
    - jaccard_samples
    - accuracy
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: scene
  params:
    dataset: scene
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:32:17.002642
estimator:
  call: proba_vs_embedding.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: 10
                  max_features: 1
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 1
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state:
                    call: numpy.random.mtrand.RandomState
                    params: {}
                  verbose: 10
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: proba
  params: {}
hash: e52aa1600dded68eac0f853a9706f9504a114142545f0403af9b2498804bfe59
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/e52aa16_20231013T033205092243_proba_scene.yml
results:
  fit_time:
  - 8.990941762924194
  - 8.902727842330933
  - 8.98414134979248
  - 8.625271797180176
  - 8.976421117782593
  score_time:
  - 2.0475032329559326
  - 2.003192663192749
  - 1.9079370498657227
  - 1.7718896865844727
  - 1.9043471813201904
  test_accuracy:
  - 0.6846473029045643
  - 0.6764091858037579
  - 0.7110655737704918
  - 0.7091295116772823
  - 0.6632443531827515
  test_f1_macro:
  - 0.7638360652805835
  - 0.7556147851909311
  - 0.798464469539501
  - 0.8001296302926738
  - 0.7497488003281186
  test_f1_micro:
  - 0.7580477673935617
  - 0.751063829787234
  - 0.7902542372881356
  - 0.7940865892291447
  - 0.7415254237288137
  test_f1_samples:
  - 0.7233748271092668
  - 0.7066805845511482
  - 0.7452185792349726
  - 0.759731068648266
  - 0.6919917864476386
  test_f1_weighted:
  - 0.7546714413091595
  - 0.7430539375351015
  - 0.786587838503194
  - 0.7886645986479894
  - 0.7407149190330465
  test_jaccard_macro:
  - 0.6278028851355628
  - 0.6232907587831036
  - 0.6788145595621357
  - 0.6814566981158982
  - 0.609999334316254
  test_jaccard_micro:
  - 0.6103678929765887
  - 0.6013628620102215
  - 0.6532399299474606
  - 0.658493870402802
  - 0.5892255892255892
  test_jaccard_samples:
  - 0.7136929460580913
  - 0.6990257480862908
  - 0.7366803278688525
  - 0.7469922151450815
  - 0.6848049281314168
  test_jaccard_weighted:
  - 0.6164179044054084
  - 0.6078430041959454
  - 0.6621231263530917
  - 0.6657344653900437
  - 0.5985557058112597
  test_precision_macro:
  - 0.8208609348327124
  - 0.8392817576688545
  - 0.8791493436398475
  - 0.8754728425696167
  - 0.8296396709674926
  test_precision_micro:
  - 0.8147321428571429
  - 0.8364928909952607
  - 0.8735362997658079
  - 0.8744186046511628
  - 0.8215962441314554
  test_precision_samples:
  - 0.7354771784232366
  - 0.7223382045929019
  - 0.7592213114754098
  - 0.7813163481953291
  - 0.704312114989733
  test_precision_weighted:
  - 0.812513339644309
  - 0.829728295534747
  - 0.8688994118095046
  - 0.8675968597862901
  - 0.8210476944158421
  test_recall_macro:
  - 0.7183395499389361
  - 0.6951212029601465
  - 0.7344921387368615
  - 0.7408842086163374
  - 0.6848008790207091
  test_recall_micro:
  - 0.7087378640776699
  - 0.6814671814671814
  - 0.7214700193423598
  - 0.7272727272727273
  - 0.6756756756756757
  test_recall_samples:
  - 0.720954356846473
  - 0.6990257480862908
  - 0.7397540983606558
  - 0.7505307855626328
  - 0.686858316221766
  test_recall_weighted:
  - 0.7087378640776699
  - 0.6814671814671814
  - 0.7214700193423598
  - 0.7272727272727273
  - 0.6756756756756757
start: 2023-10-13 03:32:05.092243
wrapper: null
