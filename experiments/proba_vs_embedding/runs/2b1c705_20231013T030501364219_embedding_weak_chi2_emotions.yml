active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T9AMzMzMzPjP6CZmZmZmfk/mJmZmZmZFcCgmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzA8BwZmZmZmYSQODMzMzMzAxAIDMzMzMzA8AgMzMzMzMLwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    error_score: raise
    n_jobs: 1
    return_estimator: false
    return_train_score: false
    scoring:
      accuracy: accuracy
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:sklearn.metrics._scorer._ThresholdScorer
        _kwargs: {}
        _score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_loss: !!python/object:sklearn.metrics._scorer._ThresholdScorer
        _kwargs: {}
        _score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
    verbose: 10
dataset:
  call: run_cascades.load_dataset_wrapper
  name: emotions
  params:
    dataset: emotions
    min_positives: 15
directory: proba_vs_embedding/runs
end: 2023-10-13 03:08:11.668160
estimator:
  call: proba_vs_embedding.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: false
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: 1
              max_leaf_nodes: null
              max_samples: null
              min_impurity_decrease: 0.0
              min_samples_leaf: 1
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: false
              random_state:
                call: numpy.random.mtrand.RandomState
                params: {}
              verbose: 10
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: 10
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 1
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state:
              call: numpy.random.mtrand.RandomState
              params: {}
            verbose: 10
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: 1
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: 10
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 1
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state:
                          call: numpy.random.mtrand.RandomState
                          params: {}
                        verbose: 10
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - pca
                - call: _lobpcg_truncated_svd.LOBPCGTruncatedSVD
                  params:
                    max_components: 800
                    n_components: 0.1
                    random_state:
                      call: numpy.random.mtrand.RandomState
                      params: {}
                    tol: 0.0
                    verbose: 0
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: null
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state:
      call: numpy.random.mtrand.RandomState
      params: {}
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: 0.2
    verbose: true
  name: embedding_weak_chi2
  params: {}
hash: 2b1c70593dfea4667b39487c0e8f7f79e6d6729b40055629ba8a213c91b06daf
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/proba_vs_embedding/runs/2b1c705_20231013T030501364219_embedding_weak_chi2_emotions.yml
results:
  fit_time:
  - 29.96584129333496
  - 30.45123028755188
  - 31.35415244102478
  - 38.82278800010681
  - 31.146913766860962
  score_time:
  - 5.686500072479248
  - 5.60416316986084
  - 5.620699167251587
  - 5.599987506866455
  - 5.684391975402832
  test_accuracy:
  - 0.2231404958677686
  - 0.38596491228070173
  - 0.3391304347826087
  - 0.32231404958677684
  - 0.3114754098360656
  test_f1_macro:
  - 0.5792272064770945
  - 0.6953355924892927
  - 0.6497162956944487
  - 0.6674609145722687
  - 0.5751289751289751
  test_f1_micro:
  - 0.6374695863746959
  - 0.7341176470588235
  - 0.681265206812652
  - 0.6862302483069977
  - 0.6308068459657702
  test_f1_samples:
  - 0.6041322314049588
  - 0.6716374269005848
  - 0.6376811594202899
  - 0.6484848484848486
  - 0.6046448087431694
  test_f1_weighted:
  - 0.6019536653974015
  - 0.705972345004603
  - 0.6554819951046366
  - 0.6732167001480954
  - 0.5936759203882492
  test_jaccard_macro:
  - 0.42975819512428864
  - 0.558484373701765
  - 0.5063029771068194
  - 0.5119398551811902
  - 0.4263792473511143
  test_jaccard_micro:
  - 0.46785714285714286
  - 0.5799256505576208
  - 0.5166051660516605
  - 0.5223367697594502
  - 0.4607142857142857
  test_jaccard_samples:
  - 0.5075757575757576
  - 0.6023391812865496
  - 0.5688405797101449
  - 0.5640495867768595
  - 0.5252732240437158
  test_jaccard_weighted:
  - 0.4534678373576564
  - 0.5696598233159498
  - 0.5105941317716794
  - 0.5179460183335131
  - 0.4451520929992009
  test_label_ranking_average_precision_score:
  - 0.7861340679522498
  - 0.8116228070175437
  - 0.7895652173913043
  - 0.792102846648301
  - 0.7922814207650273
  test_label_ranking_loss:
  - 0.16843434343434344
  - 0.1510964912280702
  - 0.1690821256038647
  - 0.16737832874196512
  - 0.18410746812386158
  test_precision_macro:
  - 0.6882589603005381
  - 0.7987982990464543
  - 0.7642999845012229
  - 0.7055060580132236
  - 0.6953754145279568
  test_precision_micro:
  - 0.6894736842105263
  - 0.7609756097560976
  - 0.7407407407407407
  - 0.7004608294930875
  - 0.6789473684210526
  test_precision_samples:
  - 0.6914600550964186
  - 0.726608187134503
  - 0.6927536231884057
  - 0.6735537190082644
  - 0.6407103825136611
  test_precision_weighted:
  - 0.6857259321639103
  - 0.7950594620924109
  - 0.7516548545960311
  - 0.7019367004354156
  - 0.6936928634444306
  test_recall_macro:
  - 0.5532334937902217
  - 0.6936686906694017
  - 0.6112602538532791
  - 0.6559236747361054
  - 0.5602941894514036
  test_recall_micro:
  - 0.5927601809954751
  - 0.7090909090909091
  - 0.6306306306306306
  - 0.672566371681416
  - 0.589041095890411
  test_recall_samples:
  - 0.606060606060606
  - 0.6798245614035088
  - 0.6434782608695652
  - 0.6859504132231405
  - 0.6188524590163934
  test_recall_weighted:
  - 0.5927601809954751
  - 0.7090909090909091
  - 0.6306306306306306
  - 0.672566371681416
  - 0.589041095890411
start: 2023-10-13 03:05:01.364219
wrapper: null
