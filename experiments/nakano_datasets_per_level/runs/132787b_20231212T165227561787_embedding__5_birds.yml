active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D+ZmZmZmZkBwJCZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j9oZmZmZmb2P6CZmZmZmdk/mJmZmZmZ+b+YmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:52:56.792173
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 132787bfdec468eac57d72b06c8163be4cd7618166a9328ae75355f7baec6301
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/132787b_20231212T165227561787_embedding__5_birds.yml
results:
  fit_time:
  - 13.412511587142944
  - 12.964271783828735
  - 13.181837320327759
  - 13.990559339523315
  - 13.92791748046875
  score_time:
  - 4.3230931758880615
  - 4.398926734924316
  - 4.570576190948486
  - 4.357146263122559
  - 4.439793348312378
  test_average_precision_macro:
  - 0.4814648840648715
  - 0.5085491135327646
  - 0.5339924959345526
  - 0.5269652921561004
  - 0.4945966540397159
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.48467049088210845
  - 0.4952419121547792
  - 0.5412967172977051
  - 0.4024455207635242
  - 0.5324803607040856
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3483497391927624
  - 0.34279728669263554
  - 0.3008375691374977
  - 0.35922829956687685
  - 0.2856648686937044
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5681506042968794
  - 0.5760553903919763
  - 0.6108602196466593
  - 0.49452835989679983
  - 0.5861434140173555
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9522643818849449
  - 0.9494084047327622
  - 0.9514483884128927
  - 0.9465524275805791
  - 0.9494084047327622
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9522643818849449
  - 0.9494084047327621
  - 0.9514483884128927
  - 0.9465524275805793
  - 0.9494084047327621
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9522643818849449
  - 0.9494084047327621
  - 0.9514483884128926
  - 0.9465524275805793
  - 0.9494084047327622
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9265091863517061
  - 0.9261525907792738
  - 0.9280091340664623
  - 0.9188056273327593
  - 0.9252236135957069
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9108434691320622
  - 0.9054590186383705
  - 0.9091412637932794
  - 0.9009932071922487
  - 0.9055861989551106
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9088785046728972
  - 0.9036893203883495
  - 0.9073929961089494
  - 0.8985282726568552
  - 0.9036893203883495
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9135106663923651
  - 0.9091513867550268
  - 0.9142060646914034
  - 0.9037319606581486
  - 0.9099031627848615
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8651568488307378
  - 0.8642890567448532
  - 0.8677489639958158
  - 0.852552484014896
  - 0.8627715419183826
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7824582663245456
  - 0.7769058138244183
  - 0.820217414098738
  - 0.731321322822691
  - 0.8050447136549449
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05192106753882666
  - 0.06089795485803271
  - 0.0638353287070443
  - 0.03428006330088685
  - 0.04041529422131468
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.27379928625496597
  - 0.2534424278471626
  - 0.2715515980085394
  - 0.18093784013261358
  - 0.20987863575348628
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.05147561911305006
  - 0.041673655650786554
  - 0.04637816731689081
  - 0.03871177524736887
  - 0.027973942776815502
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.13806015797135998
  - 0.1461457021045068
  - 0.15543880115666583
  - 0.08503831967407594
  - 0.1055195745739163
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.41425310851857944
  - 0.4062814365703174
  - 0.3589791179987674
  - 0.43777843123109084
  - 0.34566488342574825
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.131782945736434
  - -3.186046511627907
  - -2.8217054263565893
  - -3.4728682170542635
  - -3.193798449612403
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04773561811505508
  - -0.05059159526723787
  - -0.0485516115871073
  - -0.05344757241942064
  - -0.05059159526723787
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04773561811505508
  - -0.05059159526723786
  - -0.0485516115871073
  - -0.05344757241942064
  - -0.05059159526723786
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04773561811505507
  - -0.05059159526723786
  - -0.0485516115871073
  - -0.053447572419420636
  - -0.05059159526723785
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07349081364829396
  - -0.07384740922072625
  - -0.07199086593353765
  - -0.08119437266724089
  - -0.07477638640429339
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09011057911536707
  - -0.09765478542838323
  - -0.07235829036444631
  - -0.10723767543192987
  - -0.08532451740386077
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9522643818849449
  - 0.9494084047327622
  - 0.9514483884128927
  - 0.9465524275805791
  - 0.9494084047327622
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9522643818849449
  - 0.9494084047327621
  - 0.9514483884128927
  - 0.9465524275805793
  - 0.9494084047327621
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9522643818849449
  - 0.9494084047327621
  - 0.9514483884128926
  - 0.9465524275805793
  - 0.9494084047327622
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9265091863517061
  - 0.9261525907792738
  - 0.9280091340664623
  - 0.9188056273327593
  - 0.9252236135957069
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9522643818849449
  - 0.9494084047327622
  - 0.9514483884128927
  - 0.9465524275805791
  - 0.9494084047327622
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9522643818849449
  - 0.9494084047327621
  - 0.9514483884128927
  - 0.9465524275805793
  - 0.9494084047327621
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9522643818849449
  - 0.9494084047327621
  - 0.9514483884128926
  - 0.9465524275805793
  - 0.9494084047327622
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9265091863517061
  - 0.9261525907792738
  - 0.9280091340664623
  - 0.9188056273327593
  - 0.9252236135957069
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8552943967806731
  - 0.8886804121623431
  - 0.9216678461316077
  - 0.8689702894795247
  - 0.8800715088825232
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8912748858199954
  - 0.8955282944202612
  - 0.9178234481100894
  - 0.8793369794665131
  - 0.9054452656348392
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8700579824230481
  - 0.8909201392600821
  - 0.9262008889774733
  - 0.8455738376199378
  - 0.9011699512914607
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9609621407104479
  - 0.9564837750073716
  - 0.9672584917983144
  - 0.9687428175133705
  - 0.9656768395204108
  train_average_precision_macro_oob:
  - 0.48323099744496756
  - 0.45736763306358846
  - 0.4571868691005716
  - 0.43648196400889105
  - 0.4837081041803742
  train_average_precision_micro:
  - 0.9089101352843452
  - 0.9063424746813591
  - 0.9057653482527905
  - 0.9014121489450276
  - 0.9186551797254993
  train_average_precision_micro_oob:
  - 0.5610022424239572
  - 0.5117614886180453
  - 0.5214172296937897
  - 0.5390743925102353
  - 0.5641234420810382
  train_average_precision_samples:
  - 0.5087510766580534
  - 0.5077138704318935
  - 0.5295865633074935
  - 0.4877174080226406
  - 0.5344961240310077
  train_average_precision_samples_oob:
  - 0.3420098975947842
  - 0.32727990941307233
  - 0.33807742862232926
  - 0.3274347892379698
  - 0.3547088770709082
  train_average_precision_weighted:
  - 0.9587348832137681
  - 0.9572495462998155
  - 0.9601707376914556
  - 0.9641083687669113
  - 0.963397245939817
  train_average_precision_weighted_oob:
  - 0.5932452292538049
  - 0.553937822673566
  - 0.5627744594511555
  - 0.5717308010179784
  - 0.5944957868755084
  train_f1_macro:
  - 0.9580783353733168
  - 0.9566503467972254
  - 0.9558343533251733
  - 0.9592003263973887
  - 0.9566503467972256
  train_f1_macro_oob:
  - 0.951346389228886
  - 0.9506323949408403
  - 0.9503263973888207
  - 0.9521623827009384
  - 0.952468380252958
  train_f1_micro:
  - 0.958078335373317
  - 0.9566503467972256
  - 0.9558343533251734
  - 0.9592003263973888
  - 0.9566503467972256
  train_f1_micro_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9521623827009384
  - 0.952468380252958
  train_f1_samples:
  - 0.9580783353733171
  - 0.9566503467972256
  - 0.9558343533251734
  - 0.9592003263973888
  - 0.9566503467972256
  train_f1_samples_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9521623827009384
  - 0.9524683802529581
  train_f1_weighted:
  - 0.9451443743288764
  - 0.9415368477436059
  - 0.938512366186785
  - 0.9466102074651611
  - 0.9410837919403516
  train_f1_weighted_oob:
  - 0.930022946913199
  - 0.926613251201476
  - 0.9268069398301956
  - 0.9309046914907918
  - 0.9315196165453579
  train_jaccard_macro:
  - 0.9203786044748467
  - 0.9179052380482147
  - 0.9165923595404543
  - 0.922396333519648
  - 0.9179364927482456
  train_jaccard_macro_oob:
  - 0.9087558030533512
  - 0.9077217344779179
  - 0.9071499673694224
  - 0.9101885431689791
  - 0.9107557189323243
  train_jaccard_micro:
  - 0.9195301027900147
  - 0.9169029230618829
  - 0.9154049037804044
  - 0.9215993727949824
  - 0.9169029230618829
  train_jaccard_micro_oob:
  - 0.9072074700904581
  - 0.9059097978227061
  - 0.9053541929841609
  - 0.908692689574613
  - 0.9092502434274586
  train_jaccard_samples:
  - 0.924078080384956
  - 0.9215394045904663
  - 0.9199906766640842
  - 0.9261226120806506
  - 0.9215692057072239
  train_jaccard_samples_oob:
  - 0.9128875458324398
  - 0.9113776067770003
  - 0.9105604652621843
  - 0.9142202065432601
  - 0.9143441857547016
  train_jaccard_weighted:
  - 0.8965830717384021
  - 0.8901843452217046
  - 0.8851721941370753
  - 0.8991477139025312
  - 0.8895161402371419
  train_jaccard_weighted_oob:
  - 0.8707300598592187
  - 0.8651313127474354
  - 0.8654463517258129
  - 0.8721364111337971
  - 0.873300782120541
  train_label_ranking_average_precision_score:
  - 0.9699913867355726
  - 0.968954180509413
  - 0.9695090439276484
  - 0.964461594069152
  - 0.9744186046511624
  train_label_ranking_average_precision_score_oob:
  - 0.8032502076723032
  - 0.7885202194905914
  - 0.7779999092424842
  - 0.8041789752844808
  - 0.794631357691063
  train_matthews_corrcoef_macro:
  - 0.1553233356643259
  - 0.12167756622357548
  - 0.17392140615616095
  - 0.17730281953847596
  - 0.1494893183513343
  train_matthews_corrcoef_macro_oob:
  - 0.07382371417574218
  - 0.06230210749491485
  - 0.060973831682131385
  - 0.0715117828005199
  - 0.07871817207108914
  train_matthews_corrcoef_micro:
  - 0.4591032849730861
  - 0.41957780965026226
  - 0.4091763391688911
  - 0.46884678607341795
  - 0.42473395803851427
  train_matthews_corrcoef_micro_oob:
  - 0.30159626894041225
  - 0.2597261819445063
  - 0.2621285798404471
  - 0.3024661298585549
  - 0.3242358289769547
  train_matthews_corrcoef_samples:
  - 0.12594620724138217
  - 0.10928379856810336
  - 0.10411843131944803
  - 0.1285003248847774
  - 0.1195684418627871
  train_matthews_corrcoef_samples_oob:
  - 0.06723212676373864
  - 0.04488066833795953
  - 0.050388544597901645
  - 0.05894492854587484
  - 0.071742342064726
  train_matthews_corrcoef_weighted:
  - 0.31452860004899913
  - 0.26560172521621295
  - 0.2973095734471951
  - 0.34287598906020283
  - 0.29457349471888805
  train_matthews_corrcoef_weighted_oob:
  - 0.17529421923259983
  - 0.1502273597994736
  - 0.1481078245384611
  - 0.17599612077422355
  - 0.18928721350004446
  train_ndgc:
  - 0.5197646134741059
  - 0.5188729083120904
  - 0.5405896894305873
  - 0.5003998087545609
  - 0.5435762456653273
  train_ndgc_oob:
  - 0.4013566530044509
  - 0.39166874364230775
  - 0.404078085996237
  - 0.3867052490373022
  - 0.41669206148380145
  train_neg_coverage_error:
  - -1.1666666666666667
  - -1.176356589147287
  - -1.1705426356589148
  - -1.195736434108527
  - -1.1356589147286822
  train_neg_coverage_error_oob:
  - -2.9728682170542635
  - -3.1802325581395348
  - -3.3197674418604652
  - -3.0930232558139537
  - -3.0
  train_neg_hamming_loss_macro:
  - -0.04192166462668299
  - -0.043349653202774376
  - -0.04416564667482661
  - -0.040799673602611185
  - -0.043349653202774376
  train_neg_hamming_loss_macro_oob:
  - -0.04865361077111383
  - -0.04936760505915953
  - -0.04967360261117911
  - -0.04783761729906161
  - -0.04753161974704203
  train_neg_hamming_loss_micro:
  - -0.04192166462668299
  - -0.043349653202774376
  - -0.0441656466748266
  - -0.04079967360261118
  - -0.043349653202774376
  train_neg_hamming_loss_micro_oob:
  - -0.04865361077111383
  - -0.049367605059159526
  - -0.04967360261117911
  - -0.04783761729906161
  - -0.04753161974704202
  train_neg_hamming_loss_samples:
  - -0.04192166462668298
  - -0.04334965320277437
  - -0.0441656466748266
  - -0.04079967360261118
  - -0.04334965320277437
  train_neg_hamming_loss_samples_oob:
  - -0.048653610771113825
  - -0.049367605059159526
  - -0.049673602611179105
  - -0.0478376172990616
  - -0.04753161974704202
  train_neg_hamming_loss_weighted:
  - -0.05485562567112366
  - -0.05846315225639424
  - -0.06148763381321521
  - -0.053389792534838915
  - -0.0589162080596485
  train_neg_hamming_loss_weighted_oob:
  - -0.06997705308680112
  - -0.073386748798524
  - -0.07319306016980434
  - -0.06909530850920824
  - -0.06848038345464229
  train_neg_label_ranking_loss:
  - -0.005429002996547456
  - -0.00608308320346624
  - -0.005604299213225342
  - -0.0069609892754557605
  - -0.004356800859878835
  train_neg_label_ranking_loss_oob:
  - -0.08068081535933792
  - -0.08999750044124188
  - -0.0970736162682127
  - -0.08652524516067608
  - -0.08267630745400924
  train_precision_macro:
  - 0.9580783353733168
  - 0.9566503467972254
  - 0.9558343533251733
  - 0.9592003263973887
  - 0.9566503467972256
  train_precision_macro_oob:
  - 0.951346389228886
  - 0.9506323949408403
  - 0.9503263973888207
  - 0.9521623827009384
  - 0.952468380252958
  train_precision_micro:
  - 0.958078335373317
  - 0.9566503467972256
  - 0.9558343533251734
  - 0.9592003263973888
  - 0.9566503467972256
  train_precision_micro_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9521623827009384
  - 0.952468380252958
  train_precision_samples:
  - 0.9580783353733171
  - 0.9566503467972256
  - 0.9558343533251734
  - 0.9592003263973888
  - 0.9566503467972256
  train_precision_samples_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9521623827009384
  - 0.9524683802529581
  train_precision_weighted:
  - 0.9451443743288764
  - 0.9415368477436059
  - 0.938512366186785
  - 0.9466102074651611
  - 0.9410837919403516
  train_precision_weighted_oob:
  - 0.930022946913199
  - 0.926613251201476
  - 0.9268069398301956
  - 0.9309046914907918
  - 0.9315196165453579
  train_recall_macro:
  - 0.9580783353733168
  - 0.9566503467972254
  - 0.9558343533251733
  - 0.9592003263973887
  - 0.9566503467972256
  train_recall_macro_oob:
  - 0.951346389228886
  - 0.9506323949408403
  - 0.9503263973888207
  - 0.9521623827009384
  - 0.952468380252958
  train_recall_micro:
  - 0.958078335373317
  - 0.9566503467972256
  - 0.9558343533251734
  - 0.9592003263973888
  - 0.9566503467972256
  train_recall_micro_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9521623827009384
  - 0.952468380252958
  train_recall_samples:
  - 0.9580783353733171
  - 0.9566503467972256
  - 0.9558343533251734
  - 0.9592003263973888
  - 0.9566503467972256
  train_recall_samples_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9521623827009384
  - 0.9524683802529581
  train_recall_weighted:
  - 0.9451443743288764
  - 0.9415368477436059
  - 0.938512366186785
  - 0.9466102074651611
  - 0.9410837919403516
  train_recall_weighted_oob:
  - 0.930022946913199
  - 0.926613251201476
  - 0.9268069398301956
  - 0.9309046914907918
  - 0.9315196165453579
  train_roc_auc_macro:
  - 0.9976945490547231
  - 0.9976535205885024
  - 0.9979573410034681
  - 0.9979394108890569
  - 0.9979356305023472
  train_roc_auc_macro_oob:
  - 0.9068945728694126
  - 0.8869405771731155
  - 0.8760652302744156
  - 0.8871952569838273
  - 0.8940343296369336
  train_roc_auc_micro:
  - 0.9944894424786852
  - 0.9941454908080173
  - 0.9940802323731519
  - 0.9936319690220723
  - 0.9949007962621743
  train_roc_auc_micro_oob:
  - 0.9177349708395147
  - 0.9069235386419318
  - 0.9016658199005434
  - 0.9109588984242304
  - 0.9130669666359569
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9966080369076232
  - 0.9969951392520383
  - 0.9968551210147685
  - 0.9967525492360901
  - 0.9970813555453626
  train_roc_auc_weighted_oob:
  - 0.912723089491528
  - 0.8981047841049996
  - 0.8940859172253668
  - 0.9057476901881157
  - 0.9042778690682323
start: 2023-12-12 16:52:27.561787
wrapper: null
