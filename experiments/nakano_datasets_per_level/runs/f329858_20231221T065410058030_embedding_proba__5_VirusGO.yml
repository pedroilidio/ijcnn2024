active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AmpmZmZnZP4BmZmZmZvY/wMzMzMzMDMBAMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:54:34.034715
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__5
  params: {}
hash: f329858b7366e9117d9c3ec0f4809aaae067b6bfb23391ddd2b3e7809d62ce7f
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f329858_20231221T065410058030_embedding_proba__5_VirusGO.yml
results:
  fit_time:
  - 13.748361349105835
  - 13.681162357330322
  - 13.983275651931763
  - 13.849278450012207
  - 13.68915843963623
  score_time:
  - 3.2813291549682617
  - 3.397334575653076
  - 3.435964584350586
  - 3.450226068496704
  - 3.2862915992736816
  test_average_precision_macro:
  - 0.9451586475018284
  - 0.9648280327716808
  - 0.9307372939279444
  - 0.9703104105905913
  - 0.8911984419318707
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9344859802553097
  - 0.9440129297441525
  - 0.9196715937467385
  - 0.9709552615874575
  - 0.9000017800639917
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.95515873015873
  - 0.9418699186991868
  - 0.925
  - 0.9685185185185184
  - 0.9217948717948719
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9603562979076343
  - 0.9593784385549091
  - 0.9408891766789481
  - 0.9813692639060286
  - 0.9201846251552319
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9444444444444445
  - 0.9430894308943089
  - 0.9166666666666666
  - 0.9518518518518518
  - 0.9145299145299145
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9444444444444444
  - 0.943089430894309
  - 0.9166666666666666
  - 0.9518518518518518
  - 0.9145299145299145
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9444444444444444
  - 0.9430894308943091
  - 0.9166666666666666
  - 0.951851851851852
  - 0.9145299145299146
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9324586977648202
  - 0.917560975609756
  - 0.901923076923077
  - 0.9538461538461538
  - 0.8801674515960229
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8962670180061485
  - 0.8957752759088731
  - 0.8473550566573822
  - 0.9082446808510638
  - 0.8465993293276334
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8947368421052632
  - 0.8923076923076924
  - 0.8461538461538461
  - 0.9081272084805654
  - 0.84251968503937
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9098639455782314
  - 0.9094076655052267
  - 0.8678571428571429
  - 0.9206349206349207
  - 0.8669108669108669
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.874937484875373
  - 0.8512212890194086
  - 0.8224333805729155
  - 0.9118248772504092
  - 0.7879889285089141
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9551587301587302
  - 0.9418699186991868
  - 0.925
  - 0.9685185185185184
  - 0.9217948717948719
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6371350123799588
  - 0.8119666694241513
  - 0.47483027780950504
  - 0.6363482623099569
  - 0.6325669702565697
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8166202078336988
  - 0.8178260162773113
  - 0.7415790509024645
  - 0.8398086043122062
  - 0.7269358890668292
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.788805288765112
  - 0.7974967462463665
  - 0.6986145047900246
  - 0.7751656784896372
  - 0.7041232809645596
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7749466212323307
  - 0.7893353920051054
  - 0.6679561779046991
  - 0.8140217670176526
  - 0.655802077380624
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.967403089370749
  - 0.9576063294425101
  - 0.9465790148145551
  - 0.9767841313502265
  - 0.9441515161393422
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3333333333333333
  - -1.4146341463414633
  - -1.5
  - -1.2222222222222223
  - -1.5128205128205128
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05555555555555555
  - -0.056910569105691054
  - -0.08333333333333333
  - -0.048148148148148155
  - -0.08547008547008546
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05555555555555555
  - -0.056910569105691054
  - -0.08333333333333333
  - -0.04814814814814815
  - -0.08547008547008547
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.055555555555555546
  - -0.05691056910569105
  - -0.08333333333333333
  - -0.04814814814814815
  - -0.08547008547008546
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06754130223517978
  - -0.0824390243902439
  - -0.09807692307692309
  - -0.04615384615384615
  - -0.11983254840397699
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03273809523809524
  - -0.03841463414634146
  - -0.036250000000000004
  - -0.014444444444444446
  - -0.04608262108262109
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9444444444444445
  - 0.9430894308943089
  - 0.9166666666666666
  - 0.9518518518518518
  - 0.9145299145299145
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9444444444444444
  - 0.943089430894309
  - 0.9166666666666666
  - 0.9518518518518518
  - 0.9145299145299145
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9444444444444444
  - 0.9430894308943091
  - 0.9166666666666666
  - 0.951851851851852
  - 0.9145299145299146
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9324586977648202
  - 0.917560975609756
  - 0.901923076923077
  - 0.9538461538461538
  - 0.8801674515960229
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9444444444444445
  - 0.9430894308943089
  - 0.9166666666666666
  - 0.9518518518518518
  - 0.9145299145299145
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9444444444444444
  - 0.943089430894309
  - 0.9166666666666666
  - 0.9518518518518518
  - 0.9145299145299145
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9444444444444444
  - 0.9430894308943091
  - 0.9166666666666666
  - 0.951851851851852
  - 0.9145299145299146
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9324586977648202
  - 0.917560975609756
  - 0.901923076923077
  - 0.9538461538461538
  - 0.8801674515960229
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9648536357862983
  - 0.9842263481969363
  - 0.9785683761866627
  - 0.9908069521093591
  - 0.959357581416405
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9725545390570021
  - 0.9824489795918367
  - 0.976063829787234
  - 0.9903846153846153
  - 0.9616105901820188
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9672619047619048
  - 0.9615853658536585
  - 0.9637499999999999
  - 0.9855555555555554
  - 0.9539173789173788
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9742592745600264
  - 0.9729398516163223
  - 0.9713417621026318
  - 0.9925195062390184
  - 0.9570721795211591
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9865605081956957
  - 0.9795779912667083
  - 0.9859885892882421
  - 0.9780611908605166
  - 0.9858718177237552
  train_average_precision_macro_oob:
  - 0.925683710173698
  - 0.9301103450203282
  - 0.9245840097301414
  - 0.937688349245279
  - 0.9343792567300387
  train_average_precision_micro:
  - 0.974110609967014
  - 0.972038414829953
  - 0.9746856473143365
  - 0.965978023953381
  - 0.9771170027255592
  train_average_precision_micro_oob:
  - 0.9352905049531642
  - 0.9334811022910418
  - 0.9374592639265759
  - 0.9300039207068167
  - 0.942763701453836
  train_average_precision_samples:
  - 0.9797979797979798
  - 0.981425702811245
  - 0.9810379241516964
  - 0.9763374485596708
  - 0.9801587301587302
  train_average_precision_samples_oob:
  - 0.9620202020202021
  - 0.9507028112449799
  - 0.9571856287425149
  - 0.9405349794238683
  - 0.9535714285714285
  train_average_precision_weighted:
  - 0.9860905542823526
  - 0.9849375314143828
  - 0.9859920434732855
  - 0.9808500617105328
  - 0.9872275704992702
  train_average_precision_weighted_oob:
  - 0.9385132473046051
  - 0.9480777679095266
  - 0.9409964772552774
  - 0.9483422388711011
  - 0.9496822131070156
  train_f1_macro:
  - 0.9555555555555556
  - 0.9598393574297188
  - 0.9500998003992015
  - 0.941358024691358
  - 0.9652777777777777
  train_f1_macro_oob:
  - 0.9303030303030303
  - 0.9327309236947791
  - 0.9381237524950099
  - 0.9269547325102881
  - 0.9384920634920634
  train_f1_micro:
  - 0.9555555555555556
  - 0.9598393574297188
  - 0.9500998003992016
  - 0.941358024691358
  - 0.9652777777777778
  train_f1_micro_oob:
  - 0.9303030303030303
  - 0.9327309236947792
  - 0.93812375249501
  - 0.926954732510288
  - 0.9384920634920635
  train_f1_samples:
  - 0.9555555555555557
  - 0.9598393574297187
  - 0.9500998003992017
  - 0.941358024691358
  - 0.9652777777777779
  train_f1_samples_oob:
  - 0.9303030303030303
  - 0.9327309236947791
  - 0.9381237524950101
  - 0.9269547325102881
  - 0.9384920634920636
  train_f1_weighted:
  - 0.9497536945812809
  - 0.9490039365382321
  - 0.943682634730539
  - 0.9346604938271607
  - 0.9565740089139104
  train_f1_weighted_oob:
  - 0.9188535602328705
  - 0.9277108433734941
  - 0.9248802395209581
  - 0.9150617283950616
  - 0.9262549847525217
  train_jaccard_macro:
  - 0.915319188776539
  - 0.92388789371548
  - 0.9052472542758413
  - 0.889530971253205
  - 0.9336072732051443
  train_jaccard_macro_oob:
  - 0.8705843381291093
  - 0.8748362077627697
  - 0.8841294229521318
  - 0.8645043611497445
  - 0.8851830933258561
  train_jaccard_micro:
  - 0.9148936170212766
  - 0.9227799227799228
  - 0.9049429657794676
  - 0.8892128279883382
  - 0.9328859060402684
  train_jaccard_micro_oob:
  - 0.8696883852691218
  - 0.8739416745061148
  - 0.8834586466165414
  - 0.8638542665388304
  - 0.8841121495327103
  train_jaccard_samples:
  - 0.9271284271284271
  - 0.9351692484222605
  - 0.9190191046478472
  - 0.9054967666078778
  - 0.9434523809523809
  train_jaccard_samples_oob:
  - 0.8884559884559885
  - 0.8911359724612737
  - 0.9007698887938408
  - 0.8847736625514404
  - 0.9015022675736962
  train_jaccard_weighted:
  - 0.9046821444642693
  - 0.9035808137463992
  - 0.8936195566432603
  - 0.877532447180226
  - 0.9171920996884801
  train_jaccard_weighted_oob:
  - 0.85053489478903
  - 0.8657247904701275
  - 0.8607999004326732
  - 0.8438297874377954
  - 0.8639730288931464
  train_label_ranking_average_precision_score:
  - 0.9797979797979798
  - 0.9814257028112447
  - 0.9810379241516964
  - 0.9763374485596705
  - 0.9801587301587299
  train_label_ranking_average_precision_score_oob:
  - 0.9620202020202018
  - 0.9507028112449799
  - 0.9571856287425149
  - 0.9405349794238682
  - 0.9535714285714286
  train_matthews_corrcoef_macro:
  - 0.6774468950847011
  - 0.831351242539658
  - 0.6506097499003972
  - 0.6124556451130974
  - 0.8576056894268556
  train_matthews_corrcoef_macro_oob:
  - 0.5451079638929287
  - 0.49588966504061066
  - 0.6090916318027426
  - 0.5567224338215696
  - 0.6156620942283985
  train_matthews_corrcoef_micro:
  - 0.8599203124236093
  - 0.8729935852537879
  - 0.8386053239313573
  - 0.8141949662130769
  - 0.8897228811787442
  train_matthews_corrcoef_micro_oob:
  - 0.7762475342146029
  - 0.7823051785136597
  - 0.798021280801633
  - 0.7658475291690438
  - 0.800704953985477
  train_matthews_corrcoef_samples:
  - 0.8428703569043958
  - 0.8758423894894106
  - 0.8099948234247769
  - 0.7969510149460434
  - 0.884101361295383
  train_matthews_corrcoef_samples_oob:
  - 0.7313791454246896
  - 0.7282846774918144
  - 0.7626982348172953
  - 0.7314603281826584
  - 0.7674889862050869
  train_matthews_corrcoef_weighted:
  - 0.8315246990021088
  - 0.853181351108155
  - 0.8085761454441746
  - 0.7804359853823672
  - 0.8750315465278927
  train_matthews_corrcoef_weighted_oob:
  - 0.7265120821345697
  - 0.7152160646539453
  - 0.7602185376311374
  - 0.7236862005041635
  - 0.761673128175223
  train_ndgc:
  - 0.9857694038070239
  - 0.9870203495890132
  - 0.9867238406091641
  - 0.9829150051790787
  - 0.9860235215961841
  train_ndgc_oob:
  - 0.9729567373048829
  - 0.9648871318229412
  - 0.9692760302159402
  - 0.9571835920540008
  - 0.967610247926851
  train_neg_coverage_error:
  - -1.290909090909091
  - -1.2710843373493976
  - -1.251497005988024
  - -1.3024691358024691
  - -1.2678571428571428
  train_neg_coverage_error_oob:
  - -1.3575757575757577
  - -1.3795180722891567
  - -1.347305389221557
  - -1.4197530864197532
  - -1.3869047619047619
  train_neg_hamming_loss_macro:
  - -0.044444444444444446
  - -0.040160642570281124
  - -0.049900199600798396
  - -0.058641975308641965
  - -0.03472222222222222
  train_neg_hamming_loss_macro_oob:
  - -0.0696969696969697
  - -0.06726907630522089
  - -0.06187624750499002
  - -0.07304526748971192
  - -0.06150793650793651
  train_neg_hamming_loss_micro:
  - -0.044444444444444446
  - -0.040160642570281124
  - -0.0499001996007984
  - -0.05864197530864197
  - -0.034722222222222224
  train_neg_hamming_loss_micro_oob:
  - -0.0696969696969697
  - -0.06726907630522089
  - -0.06187624750499002
  - -0.07304526748971193
  - -0.061507936507936505
  train_neg_hamming_loss_samples:
  - -0.04444444444444444
  - -0.04016064257028112
  - -0.049900199600798396
  - -0.05864197530864197
  - -0.034722222222222224
  train_neg_hamming_loss_samples_oob:
  - -0.0696969696969697
  - -0.06726907630522087
  - -0.061876247504990024
  - -0.07304526748971193
  - -0.0615079365079365
  train_neg_hamming_loss_weighted:
  - -0.05024630541871921
  - -0.05099606346176786
  - -0.056317365269461094
  - -0.06533950617283951
  - -0.043425991086089605
  train_neg_hamming_loss_weighted_oob:
  - -0.08114643976712942
  - -0.07228915662650602
  - -0.07511976047904191
  - -0.08493827160493828
  - -0.07374501524747828
  train_neg_label_ranking_loss:
  - -0.01075757575757576
  - -0.009789156626506024
  - -0.0094311377245509
  - -0.01265432098765432
  - -0.010565476190476191
  train_neg_label_ranking_loss_oob:
  - -0.023333333333333334
  - -0.029651941097724233
  - -0.0279940119760479
  - -0.0345679012345679
  - -0.030803571428571427
  train_precision_macro:
  - 0.9555555555555556
  - 0.9598393574297188
  - 0.9500998003992015
  - 0.941358024691358
  - 0.9652777777777777
  train_precision_macro_oob:
  - 0.9303030303030303
  - 0.9327309236947791
  - 0.9381237524950099
  - 0.9269547325102881
  - 0.9384920634920634
  train_precision_micro:
  - 0.9555555555555556
  - 0.9598393574297188
  - 0.9500998003992016
  - 0.941358024691358
  - 0.9652777777777778
  train_precision_micro_oob:
  - 0.9303030303030303
  - 0.9327309236947792
  - 0.93812375249501
  - 0.926954732510288
  - 0.9384920634920635
  train_precision_samples:
  - 0.9555555555555557
  - 0.9598393574297187
  - 0.9500998003992017
  - 0.941358024691358
  - 0.9652777777777779
  train_precision_samples_oob:
  - 0.9303030303030303
  - 0.9327309236947791
  - 0.9381237524950101
  - 0.9269547325102881
  - 0.9384920634920636
  train_precision_weighted:
  - 0.9497536945812809
  - 0.9490039365382321
  - 0.943682634730539
  - 0.9346604938271607
  - 0.9565740089139104
  train_precision_weighted_oob:
  - 0.9188535602328705
  - 0.9277108433734941
  - 0.9248802395209581
  - 0.9150617283950616
  - 0.9262549847525217
  train_recall_macro:
  - 0.9555555555555556
  - 0.9598393574297188
  - 0.9500998003992015
  - 0.941358024691358
  - 0.9652777777777777
  train_recall_macro_oob:
  - 0.9303030303030303
  - 0.9327309236947791
  - 0.9381237524950099
  - 0.9269547325102881
  - 0.9384920634920634
  train_recall_micro:
  - 0.9555555555555556
  - 0.9598393574297188
  - 0.9500998003992016
  - 0.941358024691358
  - 0.9652777777777778
  train_recall_micro_oob:
  - 0.9303030303030303
  - 0.9327309236947792
  - 0.93812375249501
  - 0.926954732510288
  - 0.9384920634920635
  train_recall_samples:
  - 0.9555555555555557
  - 0.9598393574297187
  - 0.9500998003992017
  - 0.941358024691358
  - 0.9652777777777779
  train_recall_samples_oob:
  - 0.9303030303030303
  - 0.9327309236947791
  - 0.9381237524950101
  - 0.9269547325102881
  - 0.9384920634920636
  train_recall_weighted:
  - 0.9497536945812809
  - 0.9490039365382321
  - 0.943682634730539
  - 0.9346604938271607
  - 0.9565740089139104
  train_recall_weighted_oob:
  - 0.9188535602328705
  - 0.9277108433734941
  - 0.9248802395209581
  - 0.9150617283950616
  - 0.9262549847525217
  train_roc_auc_macro:
  - 0.995467188690109
  - 0.9945614511076264
  - 0.994936773435999
  - 0.9928419689821112
  - 0.9949356854466075
  train_roc_auc_macro_oob:
  - 0.9770644959426109
  - 0.9721633177836536
  - 0.9771647597599783
  - 0.9720098841664188
  - 0.9766138705868604
  train_roc_auc_micro:
  - 0.9930959370559773
  - 0.9918042496944908
  - 0.9930486284289277
  - 0.9898704663212435
  - 0.9926659119419883
  train_roc_auc_micro_oob:
  - 0.9793504046669714
  - 0.9773673840935732
  - 0.9786907730673317
  - 0.9758419689119172
  - 0.9783251231527094
  train_roc_auc_samples:
  - 0.9892424242424244
  - 0.990210843373494
  - 0.9905688622754492
  - 0.9873456790123456
  - 0.9894345238095239
  train_roc_auc_samples_oob:
  - 0.9766666666666667
  - 0.9703480589022758
  - 0.972005988023952
  - 0.9654320987654321
  - 0.9691964285714286
  train_roc_auc_weighted:
  - 0.992689926911312
  - 0.9937058571928623
  - 0.99278461846483
  - 0.9905944709377809
  - 0.9935171275878305
  train_roc_auc_weighted_oob:
  - 0.9735751092911845
  - 0.9751483987684483
  - 0.9755591989141719
  - 0.971075278849824
  - 0.9759442329315752
start: 2023-12-21 06:54:10.058030
wrapper: null
