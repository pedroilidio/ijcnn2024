active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACMAAAAAAAADwPwAAAAAAAAAAAAAAAAAA8D8AAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:46:53.972228
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__9
  params: {}
hash: d955eb620422e1de41de4b20c514eaa2aff344a811459aa36e0d1201bfa9892a
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d955eb6_20231221T232459573831_embedding_proba_weak__9_CHD_49.yml
results:
  fit_time:
  - 1220.3251185417175
  - 1207.6519377231598
  - 1224.5683109760284
  - 1240.8320443630219
  - 1292.7694108486176
  score_time:
  - 7.697784423828125
  - 7.653173446655273
  - 8.219030380249023
  - 7.61429238319397
  - 7.16168212890625
  test_average_precision_macro:
  - 0.5236850462085877
  - 0.5041998561527387
  - 0.5169849346628157
  - 0.5250630500301136
  - 0.5635220759840001
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6781243426580749
  - 0.6585397833552394
  - 0.6734122669299105
  - 0.6746420028007706
  - 0.7067484209697882
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7924707602339182
  - 0.7652777777777778
  - 0.7818068068068068
  - 0.8004924242424242
  - 0.816590909090909
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.656231342905042
  - 0.6265590422431745
  - 0.6429693336074456
  - 0.6442820638361151
  - 0.6872624085996727
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6900584795321638
  - 0.6969696969696969
  - 0.7132132132132133
  - 0.7106060606060606
  - 0.7287878787878787
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6900584795321637
  - 0.696969696969697
  - 0.7132132132132132
  - 0.7106060606060606
  - 0.7287878787878788
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6900584795321637
  - 0.6969696969696969
  - 0.7132132132132132
  - 0.7106060606060608
  - 0.7287878787878789
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6433053118908383
  - 0.6618942033576181
  - 0.6712971712971714
  - 0.671190781049936
  - 0.68834336395312
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5486492778883643
  - 0.5571678360925546
  - 0.5729810536644302
  - 0.5709666941918415
  - 0.5914798749244901
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5267857142857143
  - 0.5348837209302325
  - 0.5542590431738623
  - 0.5511163337250293
  - 0.5733015494636472
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5713602187286398
  - 0.582219598583235
  - 0.5961506961506962
  - 0.5983707201889021
  - 0.6152499016135379
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4803500488857149
  - 0.5028928250263149
  - 0.5111486282457535
  - 0.5118166580635024
  - 0.5324848752259796
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7924707602339179
  - 0.7743686868686868
  - 0.7908158158158157
  - 0.8004924242424243
  - 0.8256818181818181
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11645934898818099
  - 0.13780846273034567
  - 0.1867967128898639
  - 0.14941448079840403
  - 0.21695658330301223
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4154040404040404
  - 0.4344084551496795
  - 0.4465049966039068
  - 0.45000121380004054
  - 0.4787046236736991
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.42196461772628635
  - 0.4528961371448985
  - 0.45943950307267983
  - 0.4763188638984733
  - 0.5005085390330266
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.10208251057989653
  - 0.14498640746154334
  - 0.2023611144743508
  - 0.1499156117769669
  - 0.22923600658782076
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8623362884818382
  - 0.8375601802954661
  - 0.851092783045826
  - 0.870076851998397
  - 0.8769288990766858
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6228070175438596
  - -3.7181818181818183
  - -3.6036036036036037
  - -3.672727272727273
  - -3.518181818181818
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3099415204678363
  - -0.30303030303030304
  - -0.28678678678678676
  - -0.28939393939393937
  - -0.2712121212121212
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.30994152046783624
  - -0.30303030303030304
  - -0.28678678678678676
  - -0.28939393939393937
  - -0.27121212121212124
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.30994152046783624
  - -0.303030303030303
  - -0.28678678678678676
  - -0.28939393939393937
  - -0.2712121212121212
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.35669468810916183
  - -0.338105796642382
  - -0.3287028287028287
  - -0.32880921895006404
  - -0.31165663604688
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20116959064327486
  - -0.21499999999999994
  - -0.1995495495495495
  - -0.19967171717171714
  - -0.1808838383838384
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6900584795321638
  - 0.6969696969696969
  - 0.7132132132132133
  - 0.7106060606060606
  - 0.7287878787878787
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6900584795321637
  - 0.696969696969697
  - 0.7132132132132132
  - 0.7106060606060606
  - 0.7287878787878788
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6900584795321637
  - 0.6969696969696969
  - 0.7132132132132132
  - 0.7106060606060608
  - 0.7287878787878789
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6433053118908383
  - 0.6618942033576181
  - 0.6712971712971714
  - 0.671190781049936
  - 0.68834336395312
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6900584795321638
  - 0.6969696969696969
  - 0.7132132132132133
  - 0.7106060606060606
  - 0.7287878787878787
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6900584795321637
  - 0.696969696969697
  - 0.7132132132132132
  - 0.7106060606060606
  - 0.7287878787878788
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6900584795321637
  - 0.6969696969696969
  - 0.7132132132132132
  - 0.7106060606060608
  - 0.7287878787878789
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6433053118908383
  - 0.6618942033576181
  - 0.6712971712971714
  - 0.671190781049936
  - 0.68834336395312
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.547071364250725
  - 0.529996274226256
  - 0.578931889652104
  - 0.548212183879575
  - 0.5790717024239135
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7666947250280584
  - 0.759133497118196
  - 0.7802815605447184
  - 0.7779817201078814
  - 0.7914638817012453
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7988304093567251
  - .nan
  - .nan
  - 0.8003282828282829
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6006594909479518
  - 0.5541665329381943
  - 0.6128547189772148
  - 0.5794508546994863
  - 0.6158104676640092
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8379600330484541
  - 0.8289137184054
  - 0.8289624905488622
  - 0.840483937690283
  - 0.8426689676314435
  train_average_precision_macro_oob:
  - 0.6956216133507077
  - 0.7397219913901272
  - 0.6687067632124913
  - 0.6929140072582344
  - 0.7207830866053494
  train_average_precision_micro:
  - 0.8157767310691225
  - 0.807550443114136
  - 0.8023561030928498
  - 0.8050901894931441
  - 0.8227899525211282
  train_average_precision_micro_oob:
  - 0.8033019471557648
  - 0.7920228504419935
  - 0.7835365367536705
  - 0.795597512352954
  - 0.8108009280665636
  train_average_precision_samples:
  - 0.8915375409423029
  - 0.8631242197253433
  - 0.8565972222222222
  - 0.8746473158551811
  - 0.8824937578027466
  train_average_precision_samples_oob:
  - 0.8854875283446711
  - 0.8556960049937576
  - 0.8541134884884883
  - 0.8606460674157304
  - 0.8765387016229712
  train_average_precision_weighted:
  - 0.81611805225593
  - 0.8053122323527105
  - 0.8005725080814564
  - 0.8089617454836312
  - 0.815125513039694
  train_average_precision_weighted_oob:
  - 0.7949115071298825
  - 0.784141559616111
  - 0.7727586771756176
  - 0.7924954525656356
  - 0.79807137452877
  train_f1_macro:
  - 0.8522297808012093
  - 0.8367041198501873
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_f1_macro_oob:
  - 0.8397581254724112
  - 0.8161048689138578
  - 0.8337087087087086
  - 0.8340823970037453
  - 0.8468164794007492
  train_f1_micro:
  - 0.8522297808012094
  - 0.8367041198501872
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_f1_micro_oob:
  - 0.8397581254724111
  - 0.8161048689138577
  - 0.8337087087087087
  - 0.8340823970037453
  - 0.8468164794007491
  train_f1_samples:
  - 0.8522297808012094
  - 0.8367041198501873
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_f1_samples_oob:
  - 0.8397581254724111
  - 0.8161048689138577
  - 0.8337087087087088
  - 0.8340823970037455
  - 0.8468164794007491
  train_f1_weighted:
  - 0.8234483770198056
  - 0.8053010156518327
  - 0.8149812115780702
  - 0.8177856947108797
  - 0.8332368382316864
  train_f1_weighted_oob:
  - 0.805882609454038
  - 0.7804935969775771
  - 0.8004850400138359
  - 0.7967055553380575
  - 0.8122447377459399
  train_jaccard_macro:
  - 0.748098121602697
  - 0.7288699314084103
  - 0.7381335235489198
  - 0.7457933464572567
  - 0.7629980027960155
  train_jaccard_macro_oob:
  - 0.7306716275495009
  - 0.6999626522667365
  - 0.7223428240996784
  - 0.7249796414456506
  - 0.7413648972674025
  train_jaccard_micro:
  - 0.7425090549884754
  - 0.7192530585962653
  - 0.731556711082223
  - 0.7377155873739017
  - 0.7571569595261599
  train_jaccard_micro_oob:
  - 0.7237785016286645
  - 0.6893388168301171
  - 0.7148374637914386
  - 0.7153870864118214
  - 0.7343293277037999
  train_jaccard_samples:
  - 0.771137026239067
  - 0.7510773870324431
  - 0.7662074412074411
  - 0.7706814533780826
  - 0.7875256578627365
  train_jaccard_samples_oob:
  - 0.7545739219208606
  - 0.7234700131329345
  - 0.751204126204126
  - 0.7501357069896395
  - 0.7670441169317573
  train_jaccard_weighted:
  - 0.7016119183800392
  - 0.6785894376657018
  - 0.69011535680679
  - 0.6958336680148757
  - 0.7165338567416671
  train_jaccard_weighted_oob:
  - 0.6771520866189438
  - 0.6444419774851983
  - 0.6699868668395591
  - 0.6669342927788561
  - 0.6866214227399076
  train_label_ranking_average_precision_score:
  - 0.8983402620307382
  - 0.8676186017478146
  - 0.8611017267267265
  - 0.8813888888888889
  - 0.886988139825218
  train_label_ranking_average_precision_score_oob:
  - 0.8922902494331064
  - 0.860190387016229
  - 0.8586179929929924
  - 0.867387640449438
  - 0.8810330836454425
  train_matthews_corrcoef_macro:
  - 0.5205455020663579
  - 0.5034621479596918
  - 0.5064104310090798
  - 0.5183562483034404
  - 0.5429193725785795
  train_matthews_corrcoef_macro_oob:
  - 0.47726704787799407
  - 0.43928588090371284
  - 0.4693538146077156
  - 0.44896576147658546
  - 0.49155067723713314
  train_matthews_corrcoef_micro:
  - 0.7269962432433059
  - 0.7058071797990475
  - 0.7147397018298636
  - 0.7239061263465335
  - 0.7437478062334877
  train_matthews_corrcoef_micro_oob:
  - 0.7031120277963372
  - 0.6657735515826619
  - 0.6928418892935769
  - 0.6964560156241577
  - 0.7158133150224694
  train_matthews_corrcoef_samples:
  - 0.733371417386836
  - 0.7140135716589946
  - 0.7232988803913976
  - 0.7302734770485567
  - 0.749492193734394
  train_matthews_corrcoef_samples_oob:
  - 0.7119144891330231
  - 0.6742101709345355
  - 0.7009667732626575
  - 0.7011318485105262
  - 0.7223121284470457
  train_matthews_corrcoef_weighted:
  - 0.5837835722645853
  - 0.5619675790546458
  - 0.5666008126126294
  - 0.577040012515531
  - 0.611799932396552
  train_matthews_corrcoef_weighted_oob:
  - 0.5181104446979822
  - 0.4749885464075064
  - 0.5138527863422128
  - 0.46652119811322373
  - 0.5329548046508799
  train_ndgc:
  - 0.9273248656499742
  - 0.9074213498292146
  - 0.9007872127995027
  - 0.9149363716970031
  - 0.9212153736910348
  train_ndgc_oob:
  - 0.9236129630421188
  - 0.9016563615358595
  - 0.9002040546613134
  - 0.9055227601949677
  - 0.9190147104719866
  train_neg_coverage_error:
  - -3.0839002267573696
  - -3.1662921348314605
  - -3.1779279279279278
  - -3.1370786516853935
  - -3.0898876404494384
  train_neg_coverage_error_oob:
  - -3.142857142857143
  - -3.2112359550561798
  - -3.2454954954954953
  - -3.2292134831460673
  - -3.1820224719101122
  train_neg_hamming_loss_macro:
  - -0.14777021919879063
  - -0.16329588014981275
  - -0.15503003003003002
  - -0.15093632958801498
  - -0.13820224719101123
  train_neg_hamming_loss_macro_oob:
  - -0.1602418745275888
  - -0.18389513108614233
  - -0.1662912912912913
  - -0.1659176029962547
  - -0.15318352059925094
  train_neg_hamming_loss_micro:
  - -0.14777021919879063
  - -0.16329588014981272
  - -0.15503003003003002
  - -0.15093632958801498
  - -0.13820224719101123
  train_neg_hamming_loss_micro_oob:
  - -0.1602418745275888
  - -0.18389513108614233
  - -0.1662912912912913
  - -0.1659176029962547
  - -0.15318352059925094
  train_neg_hamming_loss_samples:
  - -0.14777021919879063
  - -0.16329588014981275
  - -0.15503003003003002
  - -0.15093632958801495
  - -0.1382022471910112
  train_neg_hamming_loss_samples_oob:
  - -0.1602418745275888
  - -0.18389513108614228
  - -0.16629129129129128
  - -0.16591760299625466
  - -0.15318352059925092
  train_neg_hamming_loss_weighted:
  - -0.1765516229801944
  - -0.1946989843481674
  - -0.1850187884219298
  - -0.1822143052891203
  - -0.16676316176831363
  train_neg_hamming_loss_weighted_oob:
  - -0.194117390545962
  - -0.21950640302242286
  - -0.19951495998616417
  - -0.2032944446619426
  - -0.18775526225406017
  train_neg_label_ranking_loss:
  - -0.09283824640967497
  - -0.11383895131086141
  - -0.11538413413413413
  - -0.10802122347066168
  - -0.09259675405742822
  train_neg_label_ranking_loss_oob:
  - -0.100100781053162
  - -0.12099250936329588
  - -0.12357357357357356
  - -0.12394506866416978
  - -0.10536828963795256
  train_precision_macro:
  - 0.8522297808012093
  - 0.8367041198501873
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_precision_macro_oob:
  - 0.8397581254724112
  - 0.8161048689138578
  - 0.8337087087087086
  - 0.8340823970037453
  - 0.8468164794007492
  train_precision_micro:
  - 0.8522297808012094
  - 0.8367041198501872
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_precision_micro_oob:
  - 0.8397581254724111
  - 0.8161048689138577
  - 0.8337087087087087
  - 0.8340823970037453
  - 0.8468164794007491
  train_precision_samples:
  - 0.8522297808012094
  - 0.8367041198501873
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_precision_samples_oob:
  - 0.8397581254724111
  - 0.8161048689138577
  - 0.8337087087087088
  - 0.8340823970037455
  - 0.8468164794007491
  train_precision_weighted:
  - 0.8234483770198056
  - 0.8053010156518327
  - 0.8149812115780702
  - 0.8177856947108797
  - 0.8332368382316864
  train_precision_weighted_oob:
  - 0.805882609454038
  - 0.7804935969775771
  - 0.8004850400138359
  - 0.7967055553380575
  - 0.8122447377459399
  train_recall_macro:
  - 0.8522297808012093
  - 0.8367041198501873
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_recall_macro_oob:
  - 0.8397581254724112
  - 0.8161048689138578
  - 0.8337087087087086
  - 0.8340823970037453
  - 0.8468164794007492
  train_recall_micro:
  - 0.8522297808012094
  - 0.8367041198501872
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_recall_micro_oob:
  - 0.8397581254724111
  - 0.8161048689138577
  - 0.8337087087087087
  - 0.8340823970037453
  - 0.8468164794007491
  train_recall_samples:
  - 0.8522297808012094
  - 0.8367041198501873
  - 0.84496996996997
  - 0.849063670411985
  - 0.8617977528089887
  train_recall_samples_oob:
  - 0.8397581254724111
  - 0.8161048689138577
  - 0.8337087087087088
  - 0.8340823970037455
  - 0.8468164794007491
  train_recall_weighted:
  - 0.8234483770198056
  - 0.8053010156518327
  - 0.8149812115780702
  - 0.8177856947108797
  - 0.8332368382316864
  train_recall_weighted_oob:
  - 0.805882609454038
  - 0.7804935969775771
  - 0.8004850400138359
  - 0.7967055553380575
  - 0.8122447377459399
  train_roc_auc_macro:
  - 0.8667220156093953
  - 0.8543834187982879
  - 0.8482005135928622
  - 0.8612142248562508
  - 0.875713419529253
  train_roc_auc_macro_oob:
  - 0.8346307352807804
  - 0.8260207832785826
  - 0.7938822281109691
  - 0.8226007862801108
  - 0.8415965851814445
  train_roc_auc_micro:
  - 0.9021415501941467
  - 0.8916666905290286
  - 0.8934306644868903
  - 0.8995296052782192
  - 0.9106785023981674
  train_roc_auc_micro_oob:
  - 0.8925645759034574
  - 0.8817180900565538
  - 0.8808469396905546
  - 0.8886894650812474
  - 0.8995890901281407
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8228601454803638
  - 0.8092398978721255
  - 0.79356216426121
  - 0.8097716516785269
  - 0.8306642363659823
  train_roc_auc_weighted_oob:
  - 0.8097798639486088
  - 0.7950225941682457
  - 0.7766912715432056
  - 0.7948681221570099
  - 0.8163037746118308
start: 2023-12-21 23:24:59.573831
wrapper: null
