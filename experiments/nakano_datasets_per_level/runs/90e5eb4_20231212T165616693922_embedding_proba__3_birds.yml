active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJvzMzMzMzM/O/mpmZmZmZ6T+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mZmZmZmZAcCcmZmZmZnpP5CZmZmZmcm/nJmZmZmZ6T+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+YmZmZmZn5v2hmZmZmZvY/aGZmZmZm9j+YmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/mJmZmZmZ+b+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:56:39.848282
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 90e5eb4545b4ed974349c6a134ea4b71e8002c7fc3a499445acc9850e8d46823
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/90e5eb4_20231212T165616693922_embedding_proba__3_birds.yml
results:
  fit_time:
  - 8.398504972457886
  - 8.33721137046814
  - 8.05942416191101
  - 9.200865983963013
  - 9.561125040054321
  score_time:
  - 3.766310930252075
  - 3.8461124897003174
  - 3.8535687923431396
  - 3.795604944229126
  - 3.8042995929718018
  test_average_precision_macro:
  - 0.4674284430183037
  - 0.48328604713758133
  - 0.46138359460773376
  - 0.5346211462307556
  - 0.5755831458224436
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.49537672153784257
  - 0.5600939035560106
  - 0.49151728915309467
  - 0.5327636043558709
  - 0.6216409892336927
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.32985546571837876
  - 0.3506939858056448
  - 0.31555217245241723
  - 0.3605290552347576
  - 0.34773923193895834
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5411232751587695
  - 0.5809990603209452
  - 0.5317824965943392
  - 0.5881228538148919
  - 0.6543624420606596
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.9559363525091801
  - 0.9596083231334149
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.95593635250918
  - 0.9596083231334149
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.95593635250918
  - 0.9596083231334149
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9336647138883958
  - 0.9410382898754991
  - 0.9301151045337094
  - 0.9355207018808966
  - 0.9448419797257006
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9132360347516949
  - 0.918921002873002
  - 0.9074616631397561
  - 0.9168958638833647
  - 0.9234470009416
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9118564742589703
  - 0.9178403755868545
  - 0.9059097978227061
  - 0.9155920281359906
  - 0.9223529411764706
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9177207580645398
  - 0.9231134105754935
  - 0.9117136991757822
  - 0.9203750636511002
  - 0.9267023112826955
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8768992599385789
  - 0.8894427254484466
  - 0.8709529143589093
  - 0.8801467818876741
  - 0.8964924214331828
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7949717447881463
  - 0.792554450921924
  - 0.796172327491177
  - 0.7946375823665405
  - 0.8051035730242296
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1418433495220125
  - 0.1642182962581844
  - 0.12971401066351904
  - 0.16951905384315016
  - 0.15927087591371042
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.38128376058730135
  - 0.4520508794804967
  - 0.31714758917797087
  - 0.4028446951592566
  - 0.4814404034326304
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11787903826111623
  - 0.1677742239869065
  - 0.09398229669744172
  - 0.1291837106715552
  - 0.1584337978993856
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.27261274696295085
  - 0.3316075689465285
  - 0.22802614802127788
  - 0.3092828225157563
  - 0.3393455314520593
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3909556048045304
  - 0.40988972327708595
  - 0.37920190507424506
  - 0.4230346227327003
  - 0.4064759378485498
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.116279069767442
  - -3.108527131782946
  - -3.2635658914728682
  - -3.1550387596899223
  - -2.7906976744186047
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.046103631170950635
  - -0.042839657282741736
  - -0.049367605059159526
  - -0.04406364749082007
  - -0.04039167686658506
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.046103631170950635
  - -0.042839657282741736
  - -0.049367605059159526
  - -0.044063647490820076
  - -0.04039167686658507
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.046103631170950635
  - -0.04283965728274173
  - -0.049367605059159526
  - -0.04406364749082007
  - -0.04039167686658507
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06633528611160425
  - -0.058961710124500834
  - -0.06988489546629081
  - -0.06447929811910343
  - -0.05515802027429935
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0913778689770482
  - -0.09591648028720531
  - -0.08802439580483357
  - -0.0925567643077903
  - -0.07527036157337115
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.9559363525091801
  - 0.9596083231334149
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.95593635250918
  - 0.9596083231334149
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.95593635250918
  - 0.9596083231334149
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9336647138883958
  - 0.9410382898754991
  - 0.9301151045337094
  - 0.9355207018808966
  - 0.9448419797257006
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.9559363525091801
  - 0.9596083231334149
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.95593635250918
  - 0.9596083231334149
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9538963688290494
  - 0.9571603427172583
  - 0.9506323949408405
  - 0.95593635250918
  - 0.9596083231334149
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9336647138883958
  - 0.9410382898754991
  - 0.9301151045337094
  - 0.9355207018808966
  - 0.9448419797257006
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8940184566123657
  - 0.8502714407881493
  - 0.866744627280727
  - 0.8864889189157745
  - 0.8922069940113232
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9079790734403792
  - 0.8864975760189215
  - 0.9000254812027129
  - 0.9081702488498956
  - 0.9279885990786465
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8922385397016773
  - 0.8710527354398547
  - 0.8896345156684571
  - 0.8889110965911212
  - 0.9105651719875626
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9497005614797862
  - 0.942987454460409
  - 0.9395872258840434
  - 0.9481016310660271
  - 0.9498949899068873
  train_average_precision_macro_oob:
  - 0.5745559260394184
  - 0.6126577900760138
  - 0.600172563524686
  - 0.5756185953572652
  - 0.5964737046243399
  train_average_precision_micro:
  - 0.9346804591254099
  - 0.9319337216937784
  - 0.9291715558526912
  - 0.9263818842954205
  - 0.9224389228161263
  train_average_precision_micro_oob:
  - 0.7566036779526152
  - 0.7593802116982193
  - 0.7414759248552495
  - 0.7367184574454452
  - 0.7391756495683977
  train_average_precision_samples:
  - 0.5233692475698289
  - 0.5180601698043559
  - 0.5257532761166482
  - 0.5108803986710964
  - 0.5180933923957179
  train_average_precision_samples_oob:
  - 0.4425951150549304
  - 0.44490447545450607
  - 0.44223650389118563
  - 0.43813816840947123
  - 0.4410157856849033
  train_average_precision_weighted:
  - 0.9553156540331281
  - 0.9500517361714328
  - 0.946395838492947
  - 0.9503350371383221
  - 0.9497310329476105
  train_average_precision_weighted_oob:
  - 0.7337481483628471
  - 0.7514710593496952
  - 0.7367142930227061
  - 0.7272247228866233
  - 0.7354263267498024
  train_f1_macro:
  - 0.9705222358221132
  - 0.970828233374133
  - 0.9702162382700938
  - 0.9709302325581396
  - 0.9694002447980417
  train_f1_macro_oob:
  - 0.9628722970216237
  - 0.9629742962056301
  - 0.9612403100775194
  - 0.9625662994696041
  - 0.9625662994696041
  train_f1_micro:
  - 0.9705222358221134
  - 0.970828233374133
  - 0.9702162382700938
  - 0.9709302325581395
  - 0.9694002447980417
  train_f1_micro_oob:
  - 0.9628722970216238
  - 0.9629742962056304
  - 0.9612403100775194
  - 0.9625662994696043
  - 0.9625662994696043
  train_f1_samples:
  - 0.9705222358221134
  - 0.9708282333741329
  - 0.9702162382700938
  - 0.9709302325581395
  - 0.9694002447980417
  train_f1_samples_oob:
  - 0.9628722970216239
  - 0.9629742962056305
  - 0.9612403100775195
  - 0.9625662994696044
  - 0.9625662994696044
  train_f1_weighted:
  - 0.9670135028977129
  - 0.9682831387923609
  - 0.9647413050580651
  - 0.9664008859357697
  - 0.9641213977158412
  train_f1_weighted_oob:
  - 0.9533290349355982
  - 0.9538076568950667
  - 0.9484058035581692
  - 0.9521520856404578
  - 0.953188798153737
  train_jaccard_macro:
  - 0.9431554110539563
  - 0.9436495670794095
  - 0.9425353164536779
  - 0.9438132621050169
  - 0.9410365721257037
  train_jaccard_macro_oob:
  - 0.9290299204189759
  - 0.9291925241881523
  - 0.9261225224223504
  - 0.9284660328413784
  - 0.9284809172917229
  train_jaccard_micro:
  - 0.9427325869414446
  - 0.9433102081268583
  - 0.9421553090332805
  - 0.943502824858757
  - 0.9406175771971497
  train_jaccard_micro_oob:
  - 0.9284028324154209
  - 0.9285925051637651
  - 0.9253731343283582
  - 0.9278340379510372
  - 0.9278340379510372
  train_jaccard_samples:
  - 0.9459978048577644
  - 0.9464592114996565
  - 0.9453476334922241
  - 0.9465892494203919
  - 0.9439096292989114
  train_jaccard_samples_oob:
  - 0.932617927797402
  - 0.9326798608648964
  - 0.9296453995392318
  - 0.9319746832765033
  - 0.9320263154439091
  train_jaccard_weighted:
  - 0.9365464189036717
  - 0.9388301497005206
  - 0.9321901466441438
  - 0.9352333216557942
  - 0.9310765267136278
  train_jaccard_weighted_oob:
  - 0.9112952859263753
  - 0.9121679820218361
  - 0.9024352917036764
  - 0.9091745621720371
  - 0.9110697274246865
  train_label_ranking_average_precision_score:
  - 0.976857619662852
  - 0.9773624953857514
  - 0.9753656792174233
  - 0.9721207087486156
  - 0.973519748984865
  train_label_ranking_average_precision_score_oob:
  - 0.8960834871479538
  - 0.9042068010359011
  - 0.8918489069919602
  - 0.8993784784869905
  - 0.8964421422740504
  train_matthews_corrcoef_macro:
  - 0.3342332572895193
  - 0.3416151513920573
  - 0.3331023759402918
  - 0.3745160454834108
  - 0.3614501547988537
  train_matthews_corrcoef_macro_oob:
  - 0.22288761782105912
  - 0.20993610542216995
  - 0.22862456925804617
  - 0.23604269100999709
  - 0.2203678734056859
  train_matthews_corrcoef_micro:
  - 0.6585057706100063
  - 0.661951864952223
  - 0.6532930255417362
  - 0.665694634785776
  - 0.6432440109371441
  train_matthews_corrcoef_micro_oob:
  - 0.5405748323910434
  - 0.5417995383170777
  - 0.5117695994045205
  - 0.5389567835629113
  - 0.5375931991099526
  train_matthews_corrcoef_samples:
  - 0.2745755905862016
  - 0.2807265162424604
  - 0.2648129726311857
  - 0.27261154129144377
  - 0.259978568948797
  train_matthews_corrcoef_samples_oob:
  - 0.19888832215221464
  - 0.20835130595374587
  - 0.1759115433127825
  - 0.19239147824249153
  - 0.20043439588928627
  train_matthews_corrcoef_weighted:
  - 0.5601443487908003
  - 0.573138749058848
  - 0.5550366567962861
  - 0.5867513456613045
  - 0.5554551967987018
  train_matthews_corrcoef_weighted_oob:
  - 0.42102798207448777
  - 0.4091000908766861
  - 0.40528706129961306
  - 0.4294647883998391
  - 0.40917808317593757
  train_ndgc:
  - 0.5321753114964047
  - 0.5264427987341028
  - 0.5342511948822473
  - 0.5216007379591289
  - 0.5279095938172024
  train_ndgc_oob:
  - 0.47774594252163277
  - 0.47714311293423894
  - 0.4770643680702871
  - 0.47182897920998407
  - 0.4748557070625798
  train_neg_coverage_error:
  - -1.1337209302325582
  - -1.1317829457364341
  - -1.125968992248062
  - -1.1666666666666667
  - -1.1531007751937985
  train_neg_coverage_error_oob:
  - -2.011627906976744
  - -1.939922480620155
  - -1.9767441860465116
  - -2.0833333333333335
  - -1.996124031007752
  train_neg_hamming_loss_macro:
  - -0.029477764177886584
  - -0.029171766625866992
  - -0.029783761729906166
  - -0.029069767441860465
  - -0.030599755201958387
  train_neg_hamming_loss_macro_oob:
  - -0.03712770297837618
  - -0.03702570379436965
  - -0.03875968992248061
  - -0.037433700530395755
  - -0.03743370053039576
  train_neg_hamming_loss_micro:
  - -0.029477764177886577
  - -0.029171766625866992
  - -0.029783761729906162
  - -0.029069767441860465
  - -0.030599755201958383
  train_neg_hamming_loss_micro_oob:
  - -0.03712770297837617
  - -0.03702570379436965
  - -0.03875968992248062
  - -0.037433700530395755
  - -0.037433700530395755
  train_neg_hamming_loss_samples:
  - -0.029477764177886574
  - -0.02917176662586699
  - -0.02978376172990616
  - -0.029069767441860465
  - -0.030599755201958383
  train_neg_hamming_loss_samples_oob:
  - -0.03712770297837617
  - -0.03702570379436964
  - -0.03875968992248062
  - -0.037433700530395755
  - -0.037433700530395755
  train_neg_hamming_loss_weighted:
  - -0.03298649710228704
  - -0.03171686120763908
  - -0.03525869494193472
  - -0.033599114064230336
  - -0.03587860228415883
  train_neg_hamming_loss_weighted_oob:
  - -0.04667096506440186
  - -0.04619234310493333
  - -0.051594196441830775
  - -0.04784791435954227
  - -0.04681120184626309
  train_neg_label_ranking_loss:
  - -0.0041912307558682384
  - -0.004346215230278158
  - -0.0045106317720886805
  - -0.005353229793209274
  - -0.004852289753110546
  train_neg_label_ranking_loss_oob:
  - -0.03848297940722701
  - -0.03417635763309498
  - -0.03744686480237096
  - -0.04001529974939687
  - -0.03801641134489972
  train_precision_macro:
  - 0.9705222358221132
  - 0.970828233374133
  - 0.9702162382700938
  - 0.9709302325581396
  - 0.9694002447980417
  train_precision_macro_oob:
  - 0.9628722970216237
  - 0.9629742962056301
  - 0.9612403100775194
  - 0.9625662994696041
  - 0.9625662994696041
  train_precision_micro:
  - 0.9705222358221134
  - 0.970828233374133
  - 0.9702162382700938
  - 0.9709302325581395
  - 0.9694002447980417
  train_precision_micro_oob:
  - 0.9628722970216238
  - 0.9629742962056304
  - 0.9612403100775194
  - 0.9625662994696043
  - 0.9625662994696043
  train_precision_samples:
  - 0.9705222358221134
  - 0.9708282333741329
  - 0.9702162382700938
  - 0.9709302325581395
  - 0.9694002447980417
  train_precision_samples_oob:
  - 0.9628722970216239
  - 0.9629742962056305
  - 0.9612403100775195
  - 0.9625662994696044
  - 0.9625662994696044
  train_precision_weighted:
  - 0.9670135028977129
  - 0.9682831387923609
  - 0.9647413050580651
  - 0.9664008859357697
  - 0.9641213977158412
  train_precision_weighted_oob:
  - 0.9533290349355982
  - 0.9538076568950667
  - 0.9484058035581692
  - 0.9521520856404578
  - 0.953188798153737
  train_recall_macro:
  - 0.9705222358221132
  - 0.970828233374133
  - 0.9702162382700938
  - 0.9709302325581396
  - 0.9694002447980417
  train_recall_macro_oob:
  - 0.9628722970216237
  - 0.9629742962056301
  - 0.9612403100775194
  - 0.9625662994696041
  - 0.9625662994696041
  train_recall_micro:
  - 0.9705222358221134
  - 0.970828233374133
  - 0.9702162382700938
  - 0.9709302325581395
  - 0.9694002447980417
  train_recall_micro_oob:
  - 0.9628722970216238
  - 0.9629742962056304
  - 0.9612403100775194
  - 0.9625662994696043
  - 0.9625662994696043
  train_recall_samples:
  - 0.9705222358221134
  - 0.9708282333741329
  - 0.9702162382700938
  - 0.9709302325581395
  - 0.9694002447980417
  train_recall_samples_oob:
  - 0.9628722970216239
  - 0.9629742962056305
  - 0.9612403100775195
  - 0.9625662994696044
  - 0.9625662994696044
  train_recall_weighted:
  - 0.9670135028977129
  - 0.9682831387923609
  - 0.9647413050580651
  - 0.9664008859357697
  - 0.9641213977158412
  train_recall_weighted_oob:
  - 0.9533290349355982
  - 0.9538076568950667
  - 0.9484058035581692
  - 0.9521520856404578
  - 0.953188798153737
  train_roc_auc_macro:
  - 0.9973665417765882
  - 0.9968852070660607
  - 0.9967953958937171
  - 0.9970164278908209
  - 0.997137677489679
  train_roc_auc_macro_oob:
  - 0.9474346978086571
  - 0.9577401990111213
  - 0.9510150783623764
  - 0.942566521940109
  - 0.9534867031696398
  train_roc_auc_micro:
  - 0.996184766962583
  - 0.99620717724166
  - 0.9959580649235822
  - 0.9957045863932381
  - 0.9956201467491446
  train_roc_auc_micro_oob:
  - 0.9624187493806606
  - 0.9663873801804836
  - 0.9619551622594218
  - 0.9583972000266859
  - 0.9636619011581996
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9967524796185128
  - 0.9964321343027991
  - 0.9959543623332211
  - 0.9962686538983951
  - 0.9962365960101315
  train_roc_auc_weighted_oob:
  - 0.9651929466338635
  - 0.9689334346424389
  - 0.9620355450514406
  - 0.9606379672601545
  - 0.9672824068933609
start: 2023-12-12 16:56:16.693922
wrapper: null
