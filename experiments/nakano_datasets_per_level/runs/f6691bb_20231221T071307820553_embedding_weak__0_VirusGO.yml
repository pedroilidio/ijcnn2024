active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0BgZmZmZmYWwAAzMzMzM+O/gGZmZmZm9j+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:13:12.505157
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__0
  params: {}
hash: f6691bbb79b6427fe368496598832689ab4d2215cf118765988efd4a845609c4
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f6691bb_20231221T071307820553_embedding_weak__0_VirusGO.yml
results:
  fit_time:
  - 1.356778860092163
  - 1.3660056591033936
  - 1.3824779987335205
  - 1.3838956356048584
  - 1.3943488597869873
  score_time:
  - 0.5578653812408447
  - 0.6016771793365479
  - 0.5559275150299072
  - 0.524158239364624
  - 0.6074740886688232
  test_average_precision_macro:
  - 0.9584676345746773
  - 0.9774325579905164
  - 0.9271356390431166
  - 0.8746887963640829
  - 0.9126672912113714
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.812964891483613
  - 0.8006653844566338
  - 0.7243264770466118
  - 0.7258205819696769
  - 0.7534904126068797
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8364035087719298
  - 0.8138297872340425
  - 0.746031746031746
  - 0.7995833333333333
  - 0.8479166666666667
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9570537364371035
  - 0.9869830945198594
  - 0.8943691354109814
  - 0.8566348664482194
  - 0.8879494698167384
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8289473684210525
  - 0.8936170212765958
  - 0.8492063492063493
  - 0.8250000000000001
  - 0.8208333333333334
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8289473684210527
  - 0.8936170212765957
  - 0.8492063492063492
  - 0.825
  - 0.8208333333333333
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8289473684210527
  - 0.8936170212765959
  - 0.8492063492063493
  - 0.825
  - 0.8208333333333334
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7642105263157896
  - 0.8731587561374794
  - 0.7936507936507937
  - 0.7284999999999999
  - 0.7219387755102041
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7183295540438398
  - 0.8111818801594711
  - 0.7483060417843026
  - 0.7199534293913933
  - 0.7149460910507216
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7078651685393258
  - 0.8076923076923077
  - 0.7379310344827587
  - 0.7021276595744681
  - 0.696113074204947
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7318295739348372
  - 0.8221884498480244
  - 0.7500000000000002
  - 0.7226190476190476
  - 0.7107142857142857
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.625641723356009
  - 0.7784462075428462
  - 0.6680340120237819
  - 0.5853424200401931
  - 0.5775883068717489
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8364035087719297
  - 0.8138297872340425
  - 0.7460317460317459
  - 0.7995833333333332
  - 0.8479166666666664
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.15628369592124156
  - 0.23806640730738063
  - 0.15794979141074214
  - 0.11142066427696644
  - 0.10298734302443968
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.424806814320448
  - 0.6117682200225717
  - 0.45468342113369153
  - 0.35306336486838785
  - 0.309038191360037
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2894736842105263
  - 0.45244491625675215
  - 0.30540925533894603
  - 0.24
  - 0.16999999999999998
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.30969003038758003
  - 0.48287529137694085
  - 0.3158995828214843
  - 0.23261631535979466
  - 0.21438181609169077
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8813598961850859
  - 0.8611852133111406
  - 0.8097524531131199
  - 0.853610773488447
  - 0.8913869630154331
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.894736842105263
  - -1.6808510638297873
  - -2.0
  - -2.0
  - -1.775
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17105263157894735
  - -0.10638297872340426
  - -0.15079365079365079
  - -0.17500000000000002
  - -0.17916666666666667
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17105263157894737
  - -0.10638297872340426
  - -0.15079365079365079
  - -0.175
  - -0.17916666666666667
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17105263157894735
  - -0.10638297872340426
  - -0.15079365079365079
  - -0.175
  - -0.17916666666666664
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23578947368421052
  - -0.12684124386252044
  - -0.20634920634920634
  - -0.27149999999999996
  - -0.27806122448979587
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.10555555555555556
  - -0.11648936170212768
  - -0.15952380952380954
  - -0.14250000000000002
  - -0.09874999999999999
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8289473684210525
  - 0.8936170212765958
  - 0.8492063492063493
  - 0.8250000000000001
  - 0.8208333333333334
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8289473684210527
  - 0.8936170212765957
  - 0.8492063492063492
  - 0.825
  - 0.8208333333333333
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8289473684210527
  - 0.8936170212765959
  - 0.8492063492063493
  - 0.825
  - 0.8208333333333334
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7642105263157896
  - 0.8731587561374794
  - 0.7936507936507937
  - 0.7284999999999999
  - 0.7219387755102041
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8289473684210525
  - 0.8936170212765958
  - 0.8492063492063493
  - 0.8250000000000001
  - 0.8208333333333334
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8289473684210527
  - 0.8936170212765957
  - 0.8492063492063492
  - 0.825
  - 0.8208333333333333
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8289473684210527
  - 0.8936170212765959
  - 0.8492063492063493
  - 0.825
  - 0.8208333333333334
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7642105263157896
  - 0.8731587561374794
  - 0.7936507936507937
  - 0.7284999999999999
  - 0.7219387755102041
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9810440488512121
  - 0.9951436388508892
  - 0.9670587182241318
  - 0.9359343649624979
  - 0.9717752439139907
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9156179775280898
  - 0.9061872909698998
  - 0.9020583357721198
  - 0.9010526315789474
  - 0.9153755743134951
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8944444444444444
  - 0.8835106382978721
  - 0.8404761904761906
  - 0.8574999999999999
  - 0.9012499999999999
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9702730476354765
  - 0.9962880143112701
  - 0.9422733303847854
  - 0.9289555400552842
  - 0.949691470791215
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9535285900464258
  - 0.9401256800987943
  - 0.9616957514534147
  - 0.9705005884024692
  - 0.9538837661763178
  train_average_precision_macro_oob:
  - 0.8964019135721237
  - 0.7937983039239894
  - 0.8742112944715945
  - 0.8733072790881042
  - 0.8908309287134202
  train_average_precision_micro:
  - 0.802493415313478
  - 0.7690350484239465
  - 0.8263192609389938
  - 0.7988595541040493
  - 0.7745925477563329
  train_average_precision_micro_oob:
  - 0.745043658877411
  - 0.7215032115916832
  - 0.7848954981257572
  - 0.7648937259458286
  - 0.7346769946784582
  train_average_precision_samples:
  - 0.869723865877712
  - 0.7842708333333334
  - 0.8882828282828282
  - 0.8268962075848302
  - 0.8352295409181634
  train_average_precision_samples_oob:
  - 0.8140039447731755
  - 0.7606076388888889
  - 0.853080808080808
  - 0.8100798403193613
  - 0.7891550232867598
  train_average_precision_weighted:
  - 0.9418434053390782
  - 0.9281286709472014
  - 0.9558689057816232
  - 0.9580062589144617
  - 0.9404370835018575
  train_average_precision_weighted_oob:
  - 0.8803105957890218
  - 0.8376753661842593
  - 0.9081948346351395
  - 0.8973695683286852
  - 0.8842321608537794
  train_f1_macro:
  - 0.8629191321499015
  - 0.8666666666666668
  - 0.8818181818181818
  - 0.8542914171656686
  - 0.8303393213572855
  train_f1_macro_oob:
  - 0.8530571992110453
  - 0.8375
  - 0.8646464646464648
  - 0.8413173652694611
  - 0.8303393213572855
  train_f1_micro:
  - 0.8629191321499013
  - 0.8666666666666667
  - 0.8818181818181818
  - 0.8542914171656687
  - 0.8303393213572854
  train_f1_micro_oob:
  - 0.8530571992110454
  - 0.8375
  - 0.8646464646464647
  - 0.8413173652694611
  - 0.8303393213572854
  train_f1_samples:
  - 0.8629191321499012
  - 0.8666666666666666
  - 0.8818181818181818
  - 0.8542914171656685
  - 0.8303393213572852
  train_f1_samples_oob:
  - 0.8530571992110453
  - 0.8375
  - 0.8646464646464644
  - 0.8413173652694611
  - 0.8303393213572852
  train_f1_weighted:
  - 0.8130529029234285
  - 0.8260000000000001
  - 0.8547565204281621
  - 0.8010316001660045
  - 0.7512757735760007
  train_f1_weighted_oob:
  - 0.7928408225437927
  - 0.7660000000000001
  - 0.8192371475953565
  - 0.7745005039426098
  - 0.7511872806111914
  train_jaccard_macro:
  - 0.7663299481904134
  - 0.7698808846771618
  - 0.7942007616833223
  - 0.7541046536049731
  - 0.723997083380032
  train_jaccard_macro_oob:
  - 0.7533673709535779
  - 0.7320787544858534
  - 0.7682117589700755
  - 0.7368516059755814
  - 0.7241351237954589
  train_jaccard_micro:
  - 0.7588898525585429
  - 0.7647058823529411
  - 0.7886178861788617
  - 0.7456445993031359
  - 0.7098976109215017
  train_jaccard_micro_oob:
  - 0.7437661220980224
  - 0.7204301075268817
  - 0.7615658362989324
  - 0.7260981912144703
  - 0.7098976109215017
  train_jaccard_samples:
  - 0.7783882783882783
  - 0.7836309523809524
  - 0.807070707070707
  - 0.763615625891075
  - 0.7251211861990305
  train_jaccard_samples_oob:
  - 0.7614821076359537
  - 0.7370535714285715
  - 0.780952380952381
  - 0.7405189620758484
  - 0.7246934702024523
  train_jaccard_weighted:
  - 0.6906800892893454
  - 0.706569148252186
  - 0.7526148609167013
  - 0.6748588144661403
  - 0.6123045972971919
  train_jaccard_weighted_oob:
  - 0.6640819523305013
  - 0.6288036852100067
  - 0.6987737895350671
  - 0.6395691603087121
  - 0.6124808890816863
  train_label_ranking_average_precision_score:
  - 0.8697238658777121
  - 0.7842708333333326
  - 0.8882828282828282
  - 0.8268962075848298
  - 0.8352295409181634
  train_label_ranking_average_precision_score_oob:
  - 0.8140039447731755
  - 0.7606076388888885
  - 0.8530808080808079
  - 0.810079840319361
  - 0.7891550232867595
  train_matthews_corrcoef_macro:
  - 0.18463154069005994
  - 0.20218153158858074
  - 0.22835700298376402
  - 0.17507479190800548
  - 0.12487612735587911
  train_matthews_corrcoef_macro_oob:
  - 0.16292525133098468
  - 0.14420836447607344
  - 0.19333194246250696
  - 0.14866246947110182
  - 0.12448874367307099
  train_matthews_corrcoef_micro:
  - 0.5106665597377845
  - 0.5491779828941286
  - 0.6011926967692656
  - 0.48128054957176764
  - 0.3596482271660631
  train_matthews_corrcoef_micro_oob:
  - 0.4642332003029286
  - 0.4189554149833899
  - 0.5292725463132375
  - 0.4166500262310713
  - 0.3596482271660631
  train_matthews_corrcoef_samples:
  - 0.38122596878245996
  - 0.4195877911000319
  - 0.47596391864245513
  - 0.3295041240972199
  - 0.20685377360240112
  train_matthews_corrcoef_samples_oob:
  - 0.3246132796228959
  - 0.2751370119777362
  - 0.3999361599054795
  - 0.2510452414391423
  - 0.20585051331517762
  train_matthews_corrcoef_weighted:
  - 0.3794741979870201
  - 0.41300729569833633
  - 0.4691321358701549
  - 0.3548203578778681
  - 0.2519068608328282
  train_matthews_corrcoef_weighted_oob:
  - 0.33507376673828665
  - 0.29375807374782814
  - 0.396900569385026
  - 0.3008266125915279
  - 0.2509095679322617
  train_ndgc:
  - 0.9054221506082197
  - 0.8412680942657724
  - 0.9199220993576823
  - 0.8725752052358035
  - 0.8791148683245155
  train_ndgc_oob:
  - 0.8632893619739495
  - 0.8220193149712989
  - 0.8927318034459725
  - 0.8598285285073822
  - 0.8443625525939268
  train_neg_coverage_error:
  - -1.668639053254438
  - -1.96875
  - -1.6363636363636365
  - -1.8203592814371257
  - -1.784431137724551
  train_neg_coverage_error_oob:
  - -1.8698224852071006
  - -2.15625
  - -1.7515151515151515
  - -1.8922155688622755
  - -1.9520958083832336
  train_neg_hamming_loss_macro:
  - -0.13708086785009863
  - -0.13333333333333333
  - -0.11818181818181817
  - -0.14570858283433133
  - -0.16966067864271459
  train_neg_hamming_loss_macro_oob:
  - -0.14694280078895464
  - -0.1625
  - -0.13535353535353534
  - -0.15868263473053892
  - -0.16966067864271459
  train_neg_hamming_loss_micro:
  - -0.13708086785009863
  - -0.13333333333333333
  - -0.11818181818181818
  - -0.14570858283433133
  - -0.16966067864271456
  train_neg_hamming_loss_micro_oob:
  - -0.14694280078895464
  - -0.1625
  - -0.13535353535353536
  - -0.15868263473053892
  - -0.16966067864271456
  train_neg_hamming_loss_samples:
  - -0.1370808678500986
  - -0.13333333333333333
  - -0.11818181818181817
  - -0.14570858283433133
  - -0.16966067864271453
  train_neg_hamming_loss_samples_oob:
  - -0.14694280078895464
  - -0.1625
  - -0.13535353535353534
  - -0.1586826347305389
  - -0.16966067864271453
  train_neg_hamming_loss_weighted:
  - -0.18694709707657156
  - -0.17400000000000002
  - -0.14524347957183778
  - -0.19896839983399536
  - -0.2487242264239993
  train_neg_hamming_loss_weighted_oob:
  - -0.20715917745620716
  - -0.234
  - -0.18076285240464346
  - -0.22549949605739014
  - -0.24881271938880858
  train_neg_label_ranking_loss:
  - -0.08742603550295858
  - -0.13897569444444446
  - -0.07491582491582492
  - -0.11764803725881572
  - -0.10815036593479707
  train_neg_label_ranking_loss_oob:
  - -0.12914201183431953
  - -0.1796701388888889
  - -0.10188552188552188
  - -0.13186959414504323
  - -0.14457751164337992
  train_precision_macro:
  - 0.8629191321499015
  - 0.8666666666666668
  - 0.8818181818181818
  - 0.8542914171656686
  - 0.8303393213572855
  train_precision_macro_oob:
  - 0.8530571992110453
  - 0.8375
  - 0.8646464646464648
  - 0.8413173652694611
  - 0.8303393213572855
  train_precision_micro:
  - 0.8629191321499013
  - 0.8666666666666667
  - 0.8818181818181818
  - 0.8542914171656687
  - 0.8303393213572854
  train_precision_micro_oob:
  - 0.8530571992110454
  - 0.8375
  - 0.8646464646464647
  - 0.8413173652694611
  - 0.8303393213572854
  train_precision_samples:
  - 0.8629191321499012
  - 0.8666666666666666
  - 0.8818181818181818
  - 0.8542914171656685
  - 0.8303393213572852
  train_precision_samples_oob:
  - 0.8530571992110453
  - 0.8375
  - 0.8646464646464644
  - 0.8413173652694611
  - 0.8303393213572852
  train_precision_weighted:
  - 0.8130529029234285
  - 0.8260000000000001
  - 0.8547565204281621
  - 0.8010316001660045
  - 0.7512757735760007
  train_precision_weighted_oob:
  - 0.7928408225437927
  - 0.7660000000000001
  - 0.8192371475953565
  - 0.7745005039426098
  - 0.7511872806111914
  train_recall_macro:
  - 0.8629191321499015
  - 0.8666666666666668
  - 0.8818181818181818
  - 0.8542914171656686
  - 0.8303393213572855
  train_recall_macro_oob:
  - 0.8530571992110453
  - 0.8375
  - 0.8646464646464648
  - 0.8413173652694611
  - 0.8303393213572855
  train_recall_micro:
  - 0.8629191321499013
  - 0.8666666666666667
  - 0.8818181818181818
  - 0.8542914171656687
  - 0.8303393213572854
  train_recall_micro_oob:
  - 0.8530571992110454
  - 0.8375
  - 0.8646464646464647
  - 0.8413173652694611
  - 0.8303393213572854
  train_recall_samples:
  - 0.8629191321499012
  - 0.8666666666666666
  - 0.8818181818181818
  - 0.8542914171656685
  - 0.8303393213572852
  train_recall_samples_oob:
  - 0.8530571992110453
  - 0.8375
  - 0.8646464646464644
  - 0.8413173652694611
  - 0.8303393213572852
  train_recall_weighted:
  - 0.8130529029234285
  - 0.8260000000000001
  - 0.8547565204281621
  - 0.8010316001660045
  - 0.7512757735760007
  train_recall_weighted_oob:
  - 0.7928408225437927
  - 0.7660000000000001
  - 0.8192371475953565
  - 0.7745005039426098
  - 0.7511872806111914
  train_roc_auc_macro:
  - 0.9819081973356535
  - 0.976984386008342
  - 0.9865767526776598
  - 0.9853154306912085
  - 0.9787990577011542
  train_roc_auc_macro_oob:
  - 0.9605316259005608
  - 0.9510092951617278
  - 0.9684441806286417
  - 0.9686775575856145
  - 0.9550884791835865
  train_roc_auc_micro:
  - 0.9238099302541092
  - 0.9061578947368422
  - 0.9289358026092605
  - 0.9160117574257425
  - 0.9095081906570406
  train_roc_auc_micro_oob:
  - 0.9075379212798127
  - 0.8895921052631579
  - 0.911967412620043
  - 0.9022153465346534
  - 0.8962311263463567
  train_roc_auc_samples:
  - 0.9125739644970414
  - 0.8610243055555558
  - 0.9250841750841748
  - 0.8823519627411842
  - 0.8918496340652028
  train_roc_auc_samples_oob:
  - 0.8708579881656805
  - 0.8203298611111112
  - 0.898114478114478
  - 0.8681304058549566
  - 0.85542248835662
  train_roc_auc_weighted:
  - 0.9716735729842867
  - 0.9628527418406903
  - 0.9789278820877857
  - 0.9733508776272952
  - 0.9643957139220061
  train_roc_auc_weighted_oob:
  - 0.9472988896488324
  - 0.9341226881668322
  - 0.9591469169378356
  - 0.9527729663762429
  - 0.937946996865527
start: 2023-12-21 07:13:07.820553
wrapper: null
