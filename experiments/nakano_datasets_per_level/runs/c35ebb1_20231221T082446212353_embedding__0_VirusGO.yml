active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0AAMzMzMzPjv8DMzMzMzAzAgJmZmZmZ+b9AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:24:50.786300
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__0
  params: {}
hash: c35ebb1f2afdbc9ec1916b5df605bbb94e1843bbd69a3d600473d80f99539449
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c35ebb1_20231221T082446212353_embedding__0_VirusGO.yml
results:
  fit_time:
  - 1.3978619575500488
  - 1.3878066539764404
  - 1.3486225605010986
  - 1.3416569232940674
  - 1.3369858264923096
  score_time:
  - 0.5110921859741211
  - 0.5431742668151855
  - 0.5948894023895264
  - 0.5654535293579102
  - 0.5379819869995117
  test_average_precision_macro:
  - 0.9694842425665265
  - 0.914400792648251
  - 0.8972149244686123
  - 0.7953540835744878
  - 0.9274193685855501
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8104708546401926
  - 0.6966824925027388
  - 0.7188756471080558
  - 0.6614560241210377
  - 0.749527397550654
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8205128205128204
  - 0.8212301587301586
  - 0.7477777777777778
  - 0.7740310077519379
  - 0.800219298245614
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9659010763513587
  - 0.863504856999566
  - 0.8931109880595404
  - 0.7843900123031387
  - 0.8988516349491582
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.782051282051282
  - 0.8055555555555557
  - 0.8111111111111112
  - 0.8023255813953488
  - 0.7807017543859649
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.782051282051282
  - 0.8055555555555556
  - 0.8111111111111111
  - 0.8023255813953488
  - 0.7807017543859649
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7820512820512818
  - 0.8055555555555558
  - 0.8111111111111114
  - 0.802325581395349
  - 0.7807017543859649
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6666666666666666
  - 0.685617103984451
  - 0.7111111111111111
  - 0.687642498860009
  - 0.6515789473684211
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6686187434602932
  - 0.7005199853758576
  - 0.7037263403328704
  - 0.6948261698199413
  - 0.6702007868674537
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6421052631578947
  - 0.6744186046511628
  - 0.6822429906542056
  - 0.6699029126213593
  - 0.6402877697841727
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6495726495726498
  - 0.6785714285714287
  - 0.6857142857142858
  - 0.6766334440753047
  - 0.6466165413533836
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5204551770645371
  - 0.5401829323527324
  - 0.5685076100024509
  - 0.543820552675591
  - 0.5038844118844118
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8205128205128204
  - 0.8212301587301587
  - 0.7477777777777778
  - 0.7740310077519379
  - 0.8002192982456139
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8647185771621099
  - 0.8684993062134642
  - 0.8115157888763055
  - 0.8334469441126675
  - 0.8557598486892003
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.9487179487179487
  - -1.7619047619047619
  - -1.9777777777777779
  - -1.9534883720930232
  - -2.026315789473684
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21794871794871798
  - -0.19444444444444442
  - -0.18888888888888888
  - -0.19767441860465115
  - -0.2192982456140351
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21794871794871795
  - -0.19444444444444445
  - -0.18888888888888888
  - -0.19767441860465115
  - -0.21929824561403508
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2179487179487179
  - -0.19444444444444442
  - -0.18888888888888886
  - -0.19767441860465113
  - -0.21929824561403516
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3333333333333333
  - -0.3143828960155491
  - -0.2888888888888889
  - -0.3123575011399909
  - -0.34842105263157896
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13076923076923078
  - -0.11964285714285715
  - -0.16944444444444445
  - -0.1458656330749354
  - -0.13552631578947372
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.782051282051282
  - 0.8055555555555557
  - 0.8111111111111112
  - 0.8023255813953488
  - 0.7807017543859649
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.782051282051282
  - 0.8055555555555556
  - 0.8111111111111111
  - 0.8023255813953488
  - 0.7807017543859649
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7820512820512818
  - 0.8055555555555558
  - 0.8111111111111114
  - 0.802325581395349
  - 0.7807017543859649
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6666666666666666
  - 0.685617103984451
  - 0.7111111111111111
  - 0.687642498860009
  - 0.6515789473684211
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.782051282051282
  - 0.8055555555555557
  - 0.8111111111111112
  - 0.8023255813953488
  - 0.7807017543859649
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.782051282051282
  - 0.8055555555555556
  - 0.8111111111111111
  - 0.8023255813953488
  - 0.7807017543859649
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7820512820512818
  - 0.8055555555555558
  - 0.8111111111111114
  - 0.802325581395349
  - 0.7807017543859649
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6666666666666666
  - 0.685617103984451
  - 0.7111111111111111
  - 0.687642498860009
  - 0.6515789473684211
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9835028329513623
  - 0.9669865841073272
  - 0.9738837768740359
  - 0.9258139134609723
  - 0.9678831637738184
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.908603878709954
  - 0.9077108675982708
  - 0.8922016295102516
  - 0.8809320829781188
  - 0.9129213483146067
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8692307692307694
  - 0.8803571428571427
  - 0.8305555555555556
  - 0.8541343669250645
  - 0.8644736842105265
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9732031448943214
  - 0.9382599355531686
  - 0.962413206617692
  - 0.9076096911391031
  - 0.9452734172848025
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9229905030795534
  - 0.9428525665114026
  - 0.9424677008777321
  - 0.9504490683729
  - 0.9319904449032405
  train_average_precision_macro_oob:
  - 0.7682174048441865
  - 0.8575658468751833
  - 0.8207201382210051
  - 0.8227703037603332
  - 0.8033226481765824
  train_average_precision_micro:
  - 0.7682544550603063
  - 0.7538820747242114
  - 0.7731422766890959
  - 0.7727976538632433
  - 0.763670521289172
  train_average_precision_micro_oob:
  - 0.7067094493912867
  - 0.694527139467699
  - 0.7248838538174627
  - 0.7312825420137271
  - 0.7226531556504475
  train_average_precision_samples:
  - 0.8165674603174603
  - 0.7990235690235691
  - 0.8025720164609053
  - 0.8240853658536584
  - 0.8149408284023668
  train_average_precision_samples_oob:
  - 0.7784556878306877
  - 0.7522053872053871
  - 0.7718449931412894
  - 0.7949695121951219
  - 0.773076923076923
  train_average_precision_weighted:
  - 0.9092423045928787
  - 0.9169162351674505
  - 0.9311395987356
  - 0.932171642532829
  - 0.9139228037903765
  train_average_precision_weighted_oob:
  - 0.8044084279545038
  - 0.828245963234908
  - 0.8534251373251369
  - 0.8488919143177007
  - 0.8399628413406555
  train_f1_macro:
  - 0.8005952380952381
  - 0.7949494949494951
  - 0.79320987654321
  - 0.7957317073170732
  - 0.8007889546351086
  train_f1_macro_oob:
  - 0.8005952380952381
  - 0.7949494949494951
  - 0.79320987654321
  - 0.7957317073170732
  - 0.8007889546351086
  train_f1_micro:
  - 0.8005952380952381
  - 0.794949494949495
  - 0.7932098765432098
  - 0.7957317073170732
  - 0.8007889546351085
  train_f1_micro_oob:
  - 0.8005952380952381
  - 0.794949494949495
  - 0.7932098765432098
  - 0.7957317073170732
  - 0.8007889546351085
  train_f1_samples:
  - 0.8005952380952381
  - 0.7949494949494949
  - 0.7932098765432097
  - 0.795731707317073
  - 0.8007889546351084
  train_f1_samples_oob:
  - 0.8005952380952381
  - 0.7949494949494949
  - 0.7932098765432097
  - 0.795731707317073
  - 0.8007889546351084
  train_f1_weighted:
  - 0.685708362947169
  - 0.6811762949693985
  - 0.6740679319452122
  - 0.6806516199490353
  - 0.6888511336340735
  train_f1_weighted_oob:
  - 0.685708362947169
  - 0.6811762949693985
  - 0.6740679319452122
  - 0.6806516199490353
  - 0.6888511336340735
  train_jaccard_macro:
  - 0.6927865164356004
  - 0.6850721005323633
  - 0.6839706679671348
  - 0.6864620729771923
  - 0.6923617229369277
  train_jaccard_macro_oob:
  - 0.6927865164356004
  - 0.6850721005323633
  - 0.6839706679671348
  - 0.6864620729771923
  - 0.6923617229369277
  train_jaccard_micro:
  - 0.6674937965260546
  - 0.6596814752724225
  - 0.6572890025575447
  - 0.660759493670886
  - 0.6677631578947368
  train_jaccard_micro_oob:
  - 0.6674937965260546
  - 0.6596814752724225
  - 0.6572890025575447
  - 0.660759493670886
  - 0.6677631578947368
  train_jaccard_samples:
  - 0.6727607709750567
  - 0.665800865800866
  - 0.6635802469135803
  - 0.6662311265969804
  - 0.6732882502113272
  train_jaccard_samples_oob:
  - 0.6727607709750567
  - 0.665800865800866
  - 0.6635802469135803
  - 0.6662311265969804
  - 0.6732882502113272
  train_jaccard_weighted:
  - 0.540652693696093
  - 0.5358552732658138
  - 0.5282612474425129
  - 0.5349319412459842
  - 0.5442832323859174
  train_jaccard_weighted_oob:
  - 0.540652693696093
  - 0.5358552732658138
  - 0.5282612474425129
  - 0.5349319412459842
  - 0.5442832323859174
  train_label_ranking_average_precision_score:
  - 0.81656746031746
  - 0.7990235690235684
  - 0.8025720164609049
  - 0.8240853658536584
  - 0.8149408284023664
  train_label_ranking_average_precision_score_oob:
  - 0.7784556878306875
  - 0.7522053872053868
  - 0.771844993141289
  - 0.7949695121951218
  - 0.773076923076923
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8658226082432928
  - 0.8512768702504302
  - 0.8541401155506669
  - 0.8707546025790213
  - 0.8630789647033659
  train_ndgc_oob:
  - 0.8373839211953847
  - 0.8166271143547168
  - 0.8312446767222732
  - 0.8480002968163172
  - 0.8312281775663013
  train_neg_coverage_error:
  - -1.8392857142857142
  - -1.878787878787879
  - -1.9320987654320987
  - -1.8719512195121952
  - -1.7810650887573964
  train_neg_coverage_error_oob:
  - -1.9880952380952381
  - -2.0545454545454547
  - -2.037037037037037
  - -1.9817073170731707
  - -1.952662721893491
  train_neg_hamming_loss_macro:
  - -0.19940476190476195
  - -0.20505050505050504
  - -0.20679012345679013
  - -0.20426829268292682
  - -0.19921104536489154
  train_neg_hamming_loss_macro_oob:
  - -0.19940476190476195
  - -0.20505050505050504
  - -0.20679012345679013
  - -0.20426829268292682
  - -0.19921104536489154
  train_neg_hamming_loss_micro:
  - -0.19940476190476192
  - -0.20505050505050504
  - -0.20679012345679013
  - -0.20426829268292682
  - -0.1992110453648915
  train_neg_hamming_loss_micro_oob:
  - -0.19940476190476192
  - -0.20505050505050504
  - -0.20679012345679013
  - -0.20426829268292682
  - -0.1992110453648915
  train_neg_hamming_loss_samples:
  - -0.19940476190476192
  - -0.205050505050505
  - -0.20679012345679013
  - -0.20426829268292682
  - -0.19921104536489154
  train_neg_hamming_loss_samples_oob:
  - -0.19940476190476192
  - -0.205050505050505
  - -0.20679012345679013
  - -0.20426829268292682
  - -0.19921104536489154
  train_neg_hamming_loss_weighted:
  - -0.31429163705283114
  - -0.3188237050306016
  - -0.32593206805478786
  - -0.31934838005096466
  - -0.31114886636592654
  train_neg_hamming_loss_weighted_oob:
  - -0.31429163705283114
  - -0.3188237050306016
  - -0.32593206805478786
  - -0.31934838005096466
  - -0.31114886636592654
  train_neg_label_ranking_loss:
  - -0.12164351851851851
  - -0.12831649831649833
  - -0.13617969821673526
  - -0.12545731707317073
  - -0.1155982905982906
  train_neg_label_ranking_loss_oob:
  - -0.15153769841269843
  - -0.16210437710437708
  - -0.15823045267489713
  - -0.15
  - -0.15057527942143328
  train_precision_macro:
  - 0.8005952380952381
  - 0.7949494949494951
  - 0.79320987654321
  - 0.7957317073170732
  - 0.8007889546351086
  train_precision_macro_oob:
  - 0.8005952380952381
  - 0.7949494949494951
  - 0.79320987654321
  - 0.7957317073170732
  - 0.8007889546351086
  train_precision_micro:
  - 0.8005952380952381
  - 0.794949494949495
  - 0.7932098765432098
  - 0.7957317073170732
  - 0.8007889546351085
  train_precision_micro_oob:
  - 0.8005952380952381
  - 0.794949494949495
  - 0.7932098765432098
  - 0.7957317073170732
  - 0.8007889546351085
  train_precision_samples:
  - 0.8005952380952381
  - 0.7949494949494949
  - 0.7932098765432097
  - 0.795731707317073
  - 0.8007889546351084
  train_precision_samples_oob:
  - 0.8005952380952381
  - 0.7949494949494949
  - 0.7932098765432097
  - 0.795731707317073
  - 0.8007889546351084
  train_precision_weighted:
  - 0.685708362947169
  - 0.6811762949693985
  - 0.6740679319452122
  - 0.6806516199490353
  - 0.6888511336340735
  train_precision_weighted_oob:
  - 0.685708362947169
  - 0.6811762949693985
  - 0.6740679319452122
  - 0.6806516199490353
  - 0.6888511336340735
  train_recall_macro:
  - 0.8005952380952381
  - 0.7949494949494951
  - 0.79320987654321
  - 0.7957317073170732
  - 0.8007889546351086
  train_recall_macro_oob:
  - 0.8005952380952381
  - 0.7949494949494951
  - 0.79320987654321
  - 0.7957317073170732
  - 0.8007889546351086
  train_recall_micro:
  - 0.8005952380952381
  - 0.794949494949495
  - 0.7932098765432098
  - 0.7957317073170732
  - 0.8007889546351085
  train_recall_micro_oob:
  - 0.8005952380952381
  - 0.794949494949495
  - 0.7932098765432098
  - 0.7957317073170732
  - 0.8007889546351085
  train_recall_samples:
  - 0.8005952380952381
  - 0.7949494949494949
  - 0.7932098765432097
  - 0.795731707317073
  - 0.8007889546351084
  train_recall_samples_oob:
  - 0.8005952380952381
  - 0.7949494949494949
  - 0.7932098765432097
  - 0.795731707317073
  - 0.8007889546351084
  train_recall_weighted:
  - 0.685708362947169
  - 0.6811762949693985
  - 0.6740679319452122
  - 0.6806516199490353
  - 0.6888511336340735
  train_recall_weighted_oob:
  - 0.685708362947169
  - 0.6811762949693985
  - 0.6740679319452122
  - 0.6806516199490353
  - 0.6888511336340735
  train_roc_auc_macro:
  - 0.9736226823465678
  - 0.9732162198490165
  - 0.9745149999156758
  - 0.9796328158715152
  - 0.9753860631337729
  train_roc_auc_macro_oob:
  - 0.9387602223305126
  - 0.9449282405543168
  - 0.9495257974157734
  - 0.9595357611238104
  - 0.9517971861361766
  train_roc_auc_micro:
  - 0.9099607291917119
  - 0.9075932173684441
  - 0.904149808673881
  - 0.91195999567933
  - 0.9117690094132567
  train_roc_auc_micro_oob:
  - 0.8915644824206107
  - 0.8902360400848768
  - 0.8904182072774907
  - 0.901615803485764
  - 0.8965761108130518
  train_roc_auc_samples:
  - 0.8783564814814814
  - 0.8716835016835015
  - 0.8638203017832646
  - 0.8745426829268294
  - 0.8844017094017094
  train_roc_auc_samples_oob:
  - 0.8484623015873017
  - 0.837895622895623
  - 0.8417695473251029
  - 0.8499999999999999
  - 0.8494247205785668
  train_roc_auc_weighted:
  - 0.9582146124969375
  - 0.9537886514641638
  - 0.9651447141529281
  - 0.9708341784356596
  - 0.961095516018606
  train_roc_auc_weighted_oob:
  - 0.923556587643105
  - 0.9154788346320322
  - 0.9337257176576839
  - 0.9490257741586401
  - 0.9375963164366455
start: 2023-12-21 08:24:46.212353
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
