active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j8AMjMzMzPjv4AzMzMzMwNAgMzMzMzMBMAAMjMzMzPjvw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:21:52.353412
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 830f7b93320931df58be1bcbb6e36fe4a116689b109349fb86ee1f08d69543ed
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/830f7b9_20231212T172123323805_embedding__0_scene.yml
results:
  fit_time:
  - 1.339808464050293
  - 1.3528375625610352
  - 1.3330914974212646
  - 1.3380613327026367
  - 1.3755073547363281
  score_time:
  - 3.374108076095581
  - 3.4134087562561035
  - 3.3792054653167725
  - 3.3340985774993896
  - 3.3190243244171143
  test_average_precision_macro:
  - 0.8497751302063926
  - 0.8331784929823315
  - 0.8809210249305539
  - 0.8500922169639722
  - 0.8559496383200478
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8564874232758284
  - 0.8394658532650621
  - 0.8834467815513534
  - 0.8523499057798923
  - 0.8658682681965716
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8835763888888889
  - 0.8710408022130013
  - 0.8989213639526792
  - 0.8821969696969697
  - 0.8828146611341632
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8375320436369326
  - 0.8242545736611483
  - 0.8733170649335871
  - 0.8406888149214354
  - 0.8462690717301985
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8972222222222221
  - 0.9031811894882434
  - 0.9039665970772442
  - 0.8963498622589533
  - 0.9035269709543569
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8972222222222223
  - 0.9031811894882434
  - 0.9039665970772442
  - 0.8963498622589532
  - 0.9035269709543569
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8972222222222223
  - 0.9031811894882436
  - 0.9039665970772444
  - 0.8963498622589533
  - 0.903526970954357
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8917469492614001
  - 0.8982718968123774
  - 0.8989391987659654
  - 0.891317527681164
  - 0.8983805341820087
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.817108112354052
  - 0.8268647411497688
  - 0.8282153338390273
  - 0.81540997674655
  - 0.8275805915013515
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8136020151133502
  - 0.8234552332912989
  - 0.8247619047619048
  - 0.8121684867394696
  - 0.8240302743614002
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8292658730158728
  - 0.8397055917802805
  - 0.8403916890346952
  - 0.827479338842975
  - 0.8387176447342422
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8083420193517535
  - 0.8189285458323219
  - 0.8201141235333279
  - 0.8074230770624143
  - 0.8192606823473408
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8835763888888888
  - 0.8710408022130011
  - 0.8989213639526787
  - 0.8821969696969696
  - 0.8828146611341628
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6140796317744827
  - 0.6374867368232888
  - 0.6437827657402222
  - 0.604020454640034
  - 0.6371211034201286
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6132629546635779
  - 0.6355258526769252
  - 0.6430955375892199
  - 0.6053193796293778
  - 0.6371493802329657
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.48147899707977365
  - 0.5080639688392222
  - 0.5089834253580834
  - 0.4678700633071767
  - 0.49253747042846885
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5959088947104041
  - 0.6218638946084409
  - 0.628357653681931
  - 0.58769636740342
  - 0.6204234030398016
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.913882142974345
  - 0.905296973867446
  - 0.9256601299015358
  - 0.9131565001275291
  - 0.9139254711626641
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4041666666666666
  - -1.4253112033195021
  - -1.3820459290187892
  - -1.4070247933884297
  - -1.3941908713692945
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10277777777777776
  - -0.09681881051175657
  - -0.09603340292275575
  - -0.10365013774104685
  - -0.09647302904564314
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10277777777777777
  - -0.09681881051175657
  - -0.09603340292275574
  - -0.10365013774104684
  - -0.09647302904564316
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10277777777777777
  - -0.09681881051175657
  - -0.09603340292275572
  - -0.10365013774104682
  - -0.09647302904564316
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10825305073859988
  - -0.10172810318762264
  - -0.10106080123403448
  - -0.10868247231883595
  - -0.10161946581799136
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06390625
  - -0.06893153526970955
  - -0.05835073068893529
  - -0.06575413223140494
  - -0.06296680497925311
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8972222222222221
  - 0.9031811894882434
  - 0.9039665970772442
  - 0.8963498622589533
  - 0.9035269709543569
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8972222222222223
  - 0.9031811894882434
  - 0.9039665970772442
  - 0.8963498622589532
  - 0.9035269709543569
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8972222222222223
  - 0.9031811894882436
  - 0.9039665970772444
  - 0.8963498622589533
  - 0.903526970954357
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8917469492614001
  - 0.8982718968123774
  - 0.8989391987659654
  - 0.891317527681164
  - 0.8983805341820087
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8972222222222221
  - 0.9031811894882434
  - 0.9039665970772442
  - 0.8963498622589533
  - 0.9035269709543569
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8972222222222223
  - 0.9031811894882434
  - 0.9039665970772442
  - 0.8963498622589532
  - 0.9035269709543569
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8972222222222223
  - 0.9031811894882436
  - 0.9039665970772444
  - 0.8963498622589533
  - 0.903526970954357
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8917469492614001
  - 0.8982718968123774
  - 0.8989391987659654
  - 0.891317527681164
  - 0.8983805341820087
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9495047871928036
  - 0.9453583028761897
  - 0.9599877356176164
  - 0.9469872573401593
  - 0.9516078404779892
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9557468464343919
  - 0.9523619593871532
  - 0.9634858592332481
  - 0.9529502859343597
  - 0.9587572652155977
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.93609375
  - 0.9310684647302905
  - 0.9416492693110646
  - 0.934245867768595
  - 0.937033195020747
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9446134127513601
  - 0.9411181009807102
  - 0.9563353378358147
  - 0.942319677259847
  - 0.9473205628259033
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9866695256605488
  - 0.9877439383502612
  - 0.9866608230376
  - 0.9874495404231101
  - 0.9869314555502001
  train_average_precision_macro_oob:
  - 0.8430144400189997
  - 0.8517023858203521
  - 0.8454304257614037
  - 0.8463266591662891
  - 0.845416776924299
  train_average_precision_micro:
  - 0.9854541078080441
  - 0.9866912348047261
  - 0.9857087911517007
  - 0.9859666619403658
  - 0.985831526782958
  train_average_precision_micro_oob:
  - 0.8502506912659717
  - 0.858115997587564
  - 0.8530603848648077
  - 0.8566715317682219
  - 0.8540702240136234
  train_average_precision_samples:
  - 0.980669434353918
  - 0.9801298701298702
  - 0.9785183264177041
  - 0.9805425550355347
  - 0.9804329004329005
  train_average_precision_samples_oob:
  - 0.8736896730669433
  - 0.8808311688311687
  - 0.8757607192254494
  - 0.8833420003466804
  - 0.8804545454545455
  train_average_precision_weighted:
  - 0.9862373361036764
  - 0.9874169247898776
  - 0.9861461403751212
  - 0.9870835519387073
  - 0.9864198509173568
  train_average_precision_weighted_oob:
  - 0.8332644644142666
  - 0.8425671124445716
  - 0.8355150011600493
  - 0.836182502440676
  - 0.8349502487047541
  train_f1_macro:
  - 0.9499221587960561
  - 0.9517748917748917
  - 0.949948132780083
  - 0.951638065522621
  - 0.9502164502164502
  train_f1_macro_oob:
  - 0.8996713371389032
  - 0.9008658008658008
  - 0.8984266943291841
  - 0.9012827179753856
  - 0.9014718614718614
  train_f1_micro:
  - 0.949922158796056
  - 0.9517748917748918
  - 0.9499481327800829
  - 0.9516380655226209
  - 0.9502164502164502
  train_f1_micro_oob:
  - 0.8996713371389033
  - 0.9008658008658008
  - 0.898426694329184
  - 0.9012827179753857
  - 0.9014718614718614
  train_f1_samples:
  - 0.949922158796056
  - 0.9517748917748918
  - 0.9499481327800829
  - 0.951638065522621
  - 0.9502164502164502
  train_f1_samples_oob:
  - 0.8996713371389033
  - 0.900865800865801
  - 0.898426694329184
  - 0.9012827179753857
  - 0.9014718614718615
  train_f1_weighted:
  - 0.9475278949819426
  - 0.9494170594992247
  - 0.9474528379495493
  - 0.9493504268472625
  - 0.9476634669678148
  train_f1_weighted_oob:
  - 0.8946054212040545
  - 0.8957875377401718
  - 0.8932904684703483
  - 0.8959835122964668
  - 0.8963448146056843
  train_jaccard_macro:
  - 0.905450127772976
  - 0.9087276352478767
  - 0.9055501003403806
  - 0.9084861314859326
  - 0.9060115428698535
  train_jaccard_macro_oob:
  - 0.8210964559088687
  - 0.822800284213749
  - 0.8188820655387308
  - 0.8237899256552601
  - 0.8239191700926969
  train_jaccard_micro:
  - 0.9046207066963182
  - 0.9079871148922111
  - 0.9046678192146209
  - 0.9077380952380952
  - 0.9051546391752577
  train_jaccard_micro_oob:
  - 0.8176387360477912
  - 0.8196140212682158
  - 0.8155850270736875
  - 0.8203044884436381
  - 0.8206179066834804
  train_jaccard_samples:
  - 0.9157955865272936
  - 0.918812615955473
  - 0.9155181782256471
  - 0.9187777034890919
  - 0.9162646876932592
  train_jaccard_samples_oob:
  - 0.8333951120666221
  - 0.8351638837353123
  - 0.8310116577751432
  - 0.8360696332615208
  - 0.836178107606679
  train_jaccard_weighted:
  - 0.9011732826640706
  - 0.9045147355672274
  - 0.9010903097989141
  - 0.9043827731556975
  - 0.9014629128973551
  train_jaccard_weighted_oob:
  - 0.8129916400389773
  - 0.814659031561928
  - 0.8106561883242079
  - 0.8152692978982864
  - 0.8156791997813021
  train_label_ranking_average_precision_score:
  - 0.9806694343539178
  - 0.98012987012987
  - 0.9785183264177039
  - 0.9805425550355344
  - 0.9804329004329002
  train_label_ranking_average_precision_score_oob:
  - 0.8736896730669431
  - 0.8808311688311685
  - 0.8757607192254491
  - 0.8833420003466805
  - 0.8804545454545454
  train_matthews_corrcoef_macro:
  - 0.8273934506750408
  - 0.8346160136386248
  - 0.8278889938133452
  - 0.8338840826568301
  - 0.829407900597865
  train_matthews_corrcoef_macro_oob:
  - 0.6194601695809275
  - 0.6283786970385624
  - 0.6155302077224627
  - 0.6296784875967197
  - 0.6305933185632584
  train_matthews_corrcoef_micro:
  - 0.8232470042314542
  - 0.8305244852713767
  - 0.8235484644119929
  - 0.8299058640834602
  - 0.8249234489177022
  train_matthews_corrcoef_micro_oob:
  - 0.6209767585147464
  - 0.6271021821719713
  - 0.615606968099469
  - 0.6290711405592442
  - 0.6299932764968251
  train_matthews_corrcoef_samples:
  - 0.7512121997649704
  - 0.7592926697924135
  - 0.7470186637513039
  - 0.7607232682695942
  - 0.7518458703451758
  train_matthews_corrcoef_samples_oob:
  - 0.4855012590991896
  - 0.49358248808420413
  - 0.47715329687235014
  - 0.4962320279634893
  - 0.49781557031695767
  train_matthews_corrcoef_weighted:
  - 0.8211615132460074
  - 0.8285641090109699
  - 0.8212855761999678
  - 0.827973907122356
  - 0.8226673583437926
  train_matthews_corrcoef_weighted_oob:
  - 0.6029798831086459
  - 0.6121079203840525
  - 0.5986679593185847
  - 0.6122637310167409
  - 0.6139940814588771
  train_ndgc:
  - 0.9858756542656942
  - 0.9854946042904152
  - 0.9842976273721094
  - 0.9857279111323104
  - 0.9857064733201235
  train_ndgc_oob:
  - 0.9070546796276204
  - 0.9120189107892763
  - 0.9083761197851253
  - 0.9141049652655172
  - 0.9119339014037761
  train_neg_coverage_error:
  - -1.1183186299948107
  - -1.1225974025974026
  - -1.1244813278008299
  - -1.1201248049921997
  - -1.1236363636363635
  train_neg_coverage_error_oob:
  - -1.4338349766476388
  - -1.414025974025974
  - -1.4211618257261411
  - -1.405096203848154
  - -1.412987012987013
  train_neg_hamming_loss_macro:
  - -0.05007784120394396
  - -0.048225108225108226
  - -0.05005186721991701
  - -0.0483619344773791
  - -0.049783549783549784
  train_neg_hamming_loss_macro_oob:
  - -0.1003286628610967
  - -0.09913419913419913
  - -0.10157330567081603
  - -0.09871728202461431
  - -0.09852813852813853
  train_neg_hamming_loss_micro:
  - -0.05007784120394396
  - -0.048225108225108226
  - -0.050051867219917015
  - -0.0483619344773791
  - -0.049783549783549784
  train_neg_hamming_loss_micro_oob:
  - -0.10032866286109669
  - -0.09913419913419913
  - -0.10157330567081604
  - -0.09871728202461431
  - -0.09852813852813853
  train_neg_hamming_loss_samples:
  - -0.05007784120394396
  - -0.04822510822510822
  - -0.050051867219917015
  - -0.0483619344773791
  - -0.04978354978354979
  train_neg_hamming_loss_samples_oob:
  - -0.10032866286109669
  - -0.09913419913419913
  - -0.10157330567081603
  - -0.09871728202461431
  - -0.0985281385281385
  train_neg_hamming_loss_weighted:
  - -0.05247210501805745
  - -0.050582940500775206
  - -0.05254716205045066
  - -0.05064957315273743
  - -0.05233653303218521
  train_neg_hamming_loss_weighted_oob:
  - -0.10539457879594552
  - -0.10421246225982814
  - -0.1067095315296516
  - -0.1040164877035333
  - -0.10365518539431584
  train_neg_label_ranking_loss:
  - -0.008990659055526727
  - -0.009220779220779221
  - -0.010088174273858923
  - -0.00891835673426937
  - -0.00935064935064935
  train_neg_label_ranking_loss_oob:
  - -0.07009600415153087
  - -0.06627272727272726
  - -0.06816649377593362
  - -0.06415756630265211
  - -0.06576623376623376
  train_precision_macro:
  - 0.9499221587960561
  - 0.9517748917748917
  - 0.949948132780083
  - 0.951638065522621
  - 0.9502164502164502
  train_precision_macro_oob:
  - 0.8996713371389032
  - 0.9008658008658008
  - 0.8984266943291841
  - 0.9012827179753856
  - 0.9014718614718614
  train_precision_micro:
  - 0.949922158796056
  - 0.9517748917748918
  - 0.9499481327800829
  - 0.9516380655226209
  - 0.9502164502164502
  train_precision_micro_oob:
  - 0.8996713371389033
  - 0.9008658008658008
  - 0.898426694329184
  - 0.9012827179753857
  - 0.9014718614718614
  train_precision_samples:
  - 0.949922158796056
  - 0.9517748917748918
  - 0.9499481327800829
  - 0.951638065522621
  - 0.9502164502164502
  train_precision_samples_oob:
  - 0.8996713371389033
  - 0.900865800865801
  - 0.898426694329184
  - 0.9012827179753857
  - 0.9014718614718615
  train_precision_weighted:
  - 0.9475278949819426
  - 0.9494170594992247
  - 0.9474528379495493
  - 0.9493504268472625
  - 0.9476634669678148
  train_precision_weighted_oob:
  - 0.8946054212040545
  - 0.8957875377401718
  - 0.8932904684703483
  - 0.8959835122964668
  - 0.8963448146056843
  train_recall_macro:
  - 0.9499221587960561
  - 0.9517748917748917
  - 0.949948132780083
  - 0.951638065522621
  - 0.9502164502164502
  train_recall_macro_oob:
  - 0.8996713371389032
  - 0.9008658008658008
  - 0.8984266943291841
  - 0.9012827179753856
  - 0.9014718614718614
  train_recall_micro:
  - 0.949922158796056
  - 0.9517748917748918
  - 0.9499481327800829
  - 0.9516380655226209
  - 0.9502164502164502
  train_recall_micro_oob:
  - 0.8996713371389033
  - 0.9008658008658008
  - 0.898426694329184
  - 0.9012827179753857
  - 0.9014718614718614
  train_recall_samples:
  - 0.949922158796056
  - 0.9517748917748918
  - 0.9499481327800829
  - 0.951638065522621
  - 0.9502164502164502
  train_recall_samples_oob:
  - 0.8996713371389033
  - 0.900865800865801
  - 0.898426694329184
  - 0.9012827179753857
  - 0.9014718614718615
  train_recall_weighted:
  - 0.9475278949819426
  - 0.9494170594992247
  - 0.9474528379495493
  - 0.9493504268472625
  - 0.9476634669678148
  train_recall_weighted_oob:
  - 0.8946054212040545
  - 0.8957875377401718
  - 0.8932904684703483
  - 0.8959835122964668
  - 0.8963448146056843
  train_roc_auc_macro:
  - 0.9964197005114741
  - 0.9967330258994145
  - 0.9964937281988128
  - 0.99668716412772
  - 0.9966114799331267
  train_roc_auc_macro_oob:
  - 0.9467853108034058
  - 0.9496904725920885
  - 0.9481108545703036
  - 0.9494073303303155
  - 0.9487915809626987
  train_roc_auc_micro:
  - 0.9965404499046218
  - 0.9967353495625475
  - 0.9965679018629747
  - 0.996618787460941
  - 0.9966529586824029
  train_roc_auc_micro_oob:
  - 0.9533846624981346
  - 0.9554171302081154
  - 0.9549219179476738
  - 0.9560400227680484
  - 0.9553388776778982
  train_roc_auc_samples:
  - 0.9910093409444732
  - 0.9907792207792208
  - 0.9899118257261412
  - 0.9910816432657306
  - 0.9906493506493507
  train_roc_auc_samples_oob:
  - 0.9299039958484691
  - 0.9337272727272727
  - 0.9318335062240665
  - 0.9358424336973479
  - 0.9342337662337663
  train_roc_auc_weighted:
  - 0.9962174214363303
  - 0.9965694669297513
  - 0.9962984479405025
  - 0.9965109913148772
  - 0.9964100713465034
  train_roc_auc_weighted_oob:
  - 0.9422265736465704
  - 0.9453918793768762
  - 0.9435814842356046
  - 0.9449566037306202
  - 0.9440965995732893
start: 2023-12-12 17:21:23.323805
wrapper: null
