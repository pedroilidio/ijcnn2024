active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j8AnJmZmZnZP0BmZmZmZhLAwJmZmZmZFUCAzMzMzMwEwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 11:54:41.545063
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__5
  params: {}
hash: e4d582da20ddd9bc3dfe1f6a14f86fa062df8e2cb3e5b6f00b092afc8ec07c19
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e4d582d_20231222T114247492778_embedding__5_scene.yml
results:
  fit_time:
  - 590.8662822246552
  - 557.5691633224487
  - 610.6035611629486
  - 628.9650950431824
  - 634.5477197170258
  score_time:
  - 11.779948472976685
  - 10.868447542190552
  - 12.106436967849731
  - 12.19721269607544
  - 11.910786628723145
  test_average_precision_macro:
  - 0.8230767402352449
  - 0.824517009782177
  - 0.8321766209732031
  - 0.842025458030916
  - 0.8590055837811582
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8296709201152533
  - 0.8383604155631854
  - 0.8289146657739335
  - 0.8609009046669869
  - 0.8650306212429385
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8636805555555555
  - 0.8732674982674982
  - 0.8603909465020576
  - 0.8915616246498599
  - 0.8759641873278238
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8098983470289622
  - 0.8122374692218127
  - 0.8231702848789557
  - 0.8285815535317368
  - 0.8505875935536713
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8934027777777779
  - 0.9036729036729035
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713498
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8934027777777778
  - 0.9036729036729036
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713499
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8934027777777779
  - 0.9036729036729039
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713499
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8880410206718348
  - 0.8979072990700899
  - 0.893545382907085
  - 0.9012077804094609
  - 0.901652094833913
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8108387582831731
  - 0.8284065628255103
  - 0.8163269643345488
  - 0.833600361021552
  - 0.8324554841361559
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8073423282083464
  - 0.8242730720606827
  - 0.8139968895800933
  - 0.8295964125560538
  - 0.8292913385826771
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8246527777777776
  - 0.8411543411543411
  - 0.8304428767391729
  - 0.8463385354141655
  - 0.8441066509248327
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8023370751683361
  - 0.8191002339488693
  - 0.80996225380807
  - 0.8244894640607865
  - 0.8243846231701835
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8636805555555553
  - 0.8732674982674982
  - 0.8603909465020574
  - 0.89156162464986
  - 0.8759641873278237
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5947439544881961
  - 0.6387839731966448
  - 0.6091979399154052
  - 0.6579285663467416
  - 0.6531757424056949
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5937739408958502
  - 0.6380818500174045
  - 0.6076771431886335
  - 0.6567146679903838
  - 0.651121572257043
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4709073255803242
  - 0.5227939058298124
  - 0.474808664305289
  - 0.5470145646403534
  - 0.5172837570386164
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5761967429755599
  - 0.6196065826105963
  - 0.5979179956270257
  - 0.6393593330540546
  - 0.637211940884568
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8999601855596651
  - 0.9064113894833535
  - 0.8967368067969368
  - 0.9212024758978986
  - 0.9083779926976812
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4604166666666667
  - -1.4261954261954262
  - -1.4526748971193415
  - -1.3991596638655461
  - -1.4400826446280992
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10659722222222222
  - -0.09632709632709634
  - -0.10253772290809328
  - -0.09313725490196079
  - -0.09331955922865014
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10659722222222222
  - -0.09632709632709632
  - -0.10253772290809328
  - -0.09313725490196079
  - -0.09331955922865014
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10659722222222223
  - -0.09632709632709632
  - -0.10253772290809327
  - -0.09313725490196077
  - -0.09331955922865014
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11195897932816538
  - -0.10209270092991023
  - -0.10645461709291497
  - -0.09879221959053892
  - -0.09834790516608699
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07385416666666668
  - -0.06964656964656965
  - -0.07669753086419753
  - -0.05866596638655462
  - -0.07215909090909091
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8934027777777779
  - 0.9036729036729035
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713498
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8934027777777778
  - 0.9036729036729036
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713499
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8934027777777779
  - 0.9036729036729039
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713499
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8880410206718348
  - 0.8979072990700899
  - 0.893545382907085
  - 0.9012077804094609
  - 0.901652094833913
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8934027777777779
  - 0.9036729036729035
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713498
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8934027777777778
  - 0.9036729036729036
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713499
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8934027777777779
  - 0.9036729036729039
  - 0.8974622770919067
  - 0.9068627450980392
  - 0.9066804407713499
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8880410206718348
  - 0.8979072990700899
  - 0.893545382907085
  - 0.9012077804094609
  - 0.901652094833913
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9409178320667424
  - 0.9394277017913583
  - 0.9420842524441655
  - 0.9449762041461711
  - 0.948490834761499
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9490254331772453
  - 0.9479663428515356
  - 0.9473063808824276
  - 0.9542690680415231
  - 0.9543071391353034
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9261458333333334
  - 0.9303534303534303
  - 0.9233024691358025
  - 0.9413340336134454
  - 0.9278409090909092
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9353465996018507
  - 0.9336184820838088
  - 0.9373020163153737
  - 0.9385025603857009
  - 0.944599724463684
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9946343263194201
  - 0.9950639353314376
  - 0.9938756789584321
  - 0.9949904897160424
  - 0.9940364928983817
  train_average_precision_macro_oob:
  - 0.8625151659742313
  - 0.8572297327999389
  - 0.8675248849005347
  - 0.8578655050947286
  - 0.8570246585540023
  train_average_precision_micro:
  - 0.9942251154499032
  - 0.994485039649207
  - 0.9937206800021235
  - 0.994358582027558
  - 0.993736326543632
  train_average_precision_micro_oob:
  - 0.8673981408948519
  - 0.8632585152756398
  - 0.8732699492094288
  - 0.8618914099868009
  - 0.862504994011721
  train_average_precision_samples:
  - 0.9889724961079398
  - 0.9899186569747317
  - 0.9863352420614263
  - 0.99110996029691
  - 0.9887328826486393
  train_average_precision_samples_oob:
  - 0.8865118491610449
  - 0.8822776047075113
  - 0.8897752906472324
  - 0.8775720697393407
  - 0.8845250476685734
  train_average_precision_weighted:
  - 0.9946088918432396
  - 0.9949348790689645
  - 0.9937764436621973
  - 0.9949088521575955
  - 0.9939582622082151
  train_average_precision_weighted_oob:
  - 0.8539218884459929
  - 0.8478601295833397
  - 0.8592448153670297
  - 0.849429129992361
  - 0.8474869352769901
  train_f1_macro:
  - 0.9551115723923197
  - 0.9552613361024577
  - 0.958962346000347
  - 0.9551182461591576
  - 0.9574449644652452
  train_f1_macro_oob:
  - 0.9003632589517384
  - 0.8946867428175841
  - 0.9026548672566372
  - 0.8979803210771621
  - 0.8972092217022013
  train_f1_micro:
  - 0.9551115723923197
  - 0.9552613361024576
  - 0.958962346000347
  - 0.9551182461591576
  - 0.9574449644652453
  train_f1_micro_oob:
  - 0.9003632589517384
  - 0.894686742817584
  - 0.9026548672566371
  - 0.8979803210771621
  - 0.8972092217022014
  train_f1_samples:
  - 0.9551115723923197
  - 0.9552613361024577
  - 0.9589623460003471
  - 0.9551182461591576
  - 0.9574449644652452
  train_f1_samples_oob:
  - 0.9003632589517384
  - 0.8946867428175841
  - 0.9026548672566371
  - 0.8979803210771622
  - 0.8972092217022015
  train_f1_weighted:
  - 0.9530697927219289
  - 0.9535292532248034
  - 0.9572169858340625
  - 0.9536944267604889
  - 0.9555743236018749
  train_f1_weighted_oob:
  - 0.8952536053131169
  - 0.8893423513900245
  - 0.8972330155252392
  - 0.892952231773646
  - 0.8917707651702295
  train_jaccard_macro:
  - 0.9146537170316468
  - 0.9147822844750325
  - 0.9215792527909547
  - 0.9144486460988092
  - 0.9188620068078218
  train_jaccard_macro_oob:
  - 0.8221056090290113
  - 0.8130352637578618
  - 0.8262344156719043
  - 0.8180351575360235
  - 0.817113123665859
  train_jaccard_micro:
  - 0.9140799602681897
  - 0.9143543444048704
  - 0.9211600966747229
  - 0.9140921856930447
  - 0.918363953778369
  train_jaccard_micro_oob:
  - 0.8187824445493157
  - 0.809441791278478
  - 0.8225806451612904
  - 0.8148496240601504
  - 0.8135806350204339
  train_jaccard_samples:
  - 0.924667012627573
  - 0.9245166394699105
  - 0.9307652264445601
  - 0.9244161672955044
  - 0.9284847584379565
  train_jaccard_samples_oob:
  - 0.8332097758667554
  - 0.8239010038075457
  - 0.8374110706229394
  - 0.8290794308401764
  - 0.8284921873065397
  train_jaccard_weighted:
  - 0.910960276126049
  - 0.9116414430247466
  - 0.918397309826234
  - 0.9118543681766981
  - 0.9154617989815036
  train_jaccard_weighted_oob:
  - 0.8139366897293853
  - 0.8045880863436736
  - 0.8175160852315148
  - 0.8100280278278836
  - 0.8084489610694393
  train_label_ranking_average_precision_score:
  - 0.9889724961079396
  - 0.9899186569747316
  - 0.9863352420614262
  - 0.9911099602969098
  - 0.9887328826486392
  train_label_ranking_average_precision_score_oob:
  - 0.8865118491610446
  - 0.8822776047075109
  - 0.8897752906472322
  - 0.8775720697393401
  - 0.8845250476685736
  train_matthews_corrcoef_macro:
  - 0.8461550815278045
  - 0.8461490076219533
  - 0.8599534202250542
  - 0.8442286471615376
  - 0.8544412105645671
  train_matthews_corrcoef_macro_oob:
  - 0.6262505338175527
  - 0.5977531699081088
  - 0.6365150234450089
  - 0.6141490829228804
  - 0.6119439795281284
  train_matthews_corrcoef_micro:
  - 0.8426392839816631
  - 0.8433512800829042
  - 0.8570541069716839
  - 0.8422802798782186
  - 0.8512719781147358
  train_matthews_corrcoef_micro_oob:
  - 0.6259120253366731
  - 0.6009106893064107
  - 0.636451382416196
  - 0.6143850705240199
  - 0.6121425458850809
  train_matthews_corrcoef_samples:
  - 0.7818471863936068
  - 0.7787822389642517
  - 0.8002423623501467
  - 0.776398133085592
  - 0.793561897129735
  train_matthews_corrcoef_samples_oob:
  - 0.47772911878667595
  - 0.44682937789001664
  - 0.49462988646638445
  - 0.4604476269526956
  - 0.4632316929368281
  train_matthews_corrcoef_weighted:
  - 0.8409953893222443
  - 0.8420189581596873
  - 0.8557070722305989
  - 0.8411037411243643
  - 0.8497784610138363
  train_matthews_corrcoef_weighted_oob:
  - 0.6098952309729242
  - 0.5796039751071261
  - 0.6186955436626328
  - 0.5978153891279231
  - 0.5937860860836656
  train_ndgc:
  - 0.9919573293408824
  - 0.9926675930625686
  - 0.9901077015535585
  - 0.9935512644369956
  - 0.9918638024045007
  train_ndgc_oob:
  - 0.9161321908051155
  - 0.9132327780547729
  - 0.9188905236348452
  - 0.9095693991609173
  - 0.9148552877786533
  train_neg_coverage_error:
  - -1.100155682407888
  - -1.09865005192108
  - -1.109838625715773
  - -1.092180217503884
  - -1.1024440977639105
  train_neg_coverage_error_oob:
  - -1.408406850025947
  - -1.4106957424714435
  - -1.4039562727745967
  - -1.424650440186432
  - -1.4102964118564743
  train_neg_hamming_loss_macro:
  - -0.04488842760768033
  - -0.044738663897542406
  - -0.04103765399965296
  - -0.04488175384084239
  - -0.042555035534754725
  train_neg_hamming_loss_macro_oob:
  - -0.09963674104826155
  - -0.10531325718241608
  - -0.09734513274336283
  - -0.1020196789228379
  - -0.10279077829779859
  train_neg_hamming_loss_micro:
  - -0.04488842760768033
  - -0.0447386638975424
  - -0.04103765399965296
  - -0.0448817538408424
  - -0.042555035534754725
  train_neg_hamming_loss_micro_oob:
  - -0.09963674104826155
  - -0.10531325718241606
  - -0.09734513274336283
  - -0.1020196789228379
  - -0.10279077829779858
  train_neg_hamming_loss_samples:
  - -0.04488842760768033
  - -0.0447386638975424
  - -0.04103765399965296
  - -0.04488175384084239
  - -0.04255503553475471
  train_neg_hamming_loss_samples_oob:
  - -0.09963674104826153
  - -0.10531325718241605
  - -0.09734513274336283
  - -0.1020196789228379
  - -0.10279077829779858
  train_neg_hamming_loss_weighted:
  - -0.04693020727807105
  - -0.04647074677519653
  - -0.04278301416593751
  - -0.04630557323951108
  - -0.04442567639812511
  train_neg_hamming_loss_weighted_oob:
  - -0.10474639468688322
  - -0.11065764860997557
  - -0.10276698447476079
  - -0.10704776822635395
  - -0.10822923482977057
  train_neg_label_ranking_loss:
  - -0.005111572392319669
  - -0.004672897196261682
  - -0.006298802706923478
  - -0.004168824443293631
  - -0.005213208528341133
  train_neg_label_ranking_loss_oob:
  - -0.06567202906071613
  - -0.06552440290758048
  - -0.06333940655908381
  - -0.06914810978767479
  - -0.06537961518460739
  train_precision_macro:
  - 0.9551115723923197
  - 0.9552613361024577
  - 0.958962346000347
  - 0.9551182461591576
  - 0.9574449644652452
  train_precision_macro_oob:
  - 0.9003632589517384
  - 0.8946867428175841
  - 0.9026548672566372
  - 0.8979803210771621
  - 0.8972092217022013
  train_precision_micro:
  - 0.9551115723923197
  - 0.9552613361024576
  - 0.958962346000347
  - 0.9551182461591576
  - 0.9574449644652453
  train_precision_micro_oob:
  - 0.9003632589517384
  - 0.894686742817584
  - 0.9026548672566371
  - 0.8979803210771621
  - 0.8972092217022014
  train_precision_samples:
  - 0.9551115723923197
  - 0.9552613361024577
  - 0.9589623460003471
  - 0.9551182461591576
  - 0.9574449644652452
  train_precision_samples_oob:
  - 0.9003632589517384
  - 0.8946867428175841
  - 0.9026548672566371
  - 0.8979803210771622
  - 0.8972092217022015
  train_precision_weighted:
  - 0.9530697927219289
  - 0.9535292532248034
  - 0.9572169858340625
  - 0.9536944267604889
  - 0.9555743236018749
  train_precision_weighted_oob:
  - 0.8952536053131169
  - 0.8893423513900245
  - 0.8972330155252392
  - 0.892952231773646
  - 0.8917707651702295
  train_recall_macro:
  - 0.9551115723923197
  - 0.9552613361024577
  - 0.958962346000347
  - 0.9551182461591576
  - 0.9574449644652452
  train_recall_macro_oob:
  - 0.9003632589517384
  - 0.8946867428175841
  - 0.9026548672566372
  - 0.8979803210771621
  - 0.8972092217022013
  train_recall_micro:
  - 0.9551115723923197
  - 0.9552613361024576
  - 0.958962346000347
  - 0.9551182461591576
  - 0.9574449644652453
  train_recall_micro_oob:
  - 0.9003632589517384
  - 0.894686742817584
  - 0.9026548672566371
  - 0.8979803210771621
  - 0.8972092217022014
  train_recall_samples:
  - 0.9551115723923197
  - 0.9552613361024577
  - 0.9589623460003471
  - 0.9551182461591576
  - 0.9574449644652452
  train_recall_samples_oob:
  - 0.9003632589517384
  - 0.8946867428175841
  - 0.9026548672566371
  - 0.8979803210771622
  - 0.8972092217022015
  train_recall_weighted:
  - 0.9530697927219289
  - 0.9535292532248034
  - 0.9572169858340625
  - 0.9536944267604889
  - 0.9555743236018749
  train_recall_weighted_oob:
  - 0.8952536053131169
  - 0.8893423513900245
  - 0.8972330155252392
  - 0.892952231773646
  - 0.8917707651702295
  train_roc_auc_macro:
  - 0.998751454419982
  - 0.9987481152329504
  - 0.9984550787593484
  - 0.9987322924900449
  - 0.9984848237032384
  train_roc_auc_macro_oob:
  - 0.9522881692603681
  - 0.9499844523303241
  - 0.9528789962092056
  - 0.9515759399290743
  - 0.9500440811096479
  train_roc_auc_micro:
  - 0.9986753231770024
  - 0.998724310639937
  - 0.9984932111548439
  - 0.9986679557646858
  - 0.998527294661671
  train_roc_auc_micro_oob:
  - 0.9571649981261153
  - 0.955745143961595
  - 0.958278900140006
  - 0.9561112033565339
  - 0.9562925186487081
  train_roc_auc_samples:
  - 0.9948884276076804
  - 0.9953271028037384
  - 0.9937011972930766
  - 0.9958311755567064
  - 0.9947867914716588
  train_roc_auc_samples_oob:
  - 0.9343279709392839
  - 0.9344755970924195
  - 0.9366605934409162
  - 0.9308518902123252
  - 0.9346203848153927
  train_roc_auc_weighted:
  - 0.9987332368391011
  - 0.9986813442923422
  - 0.9984022922790068
  - 0.998687225949364
  - 0.9984373110517276
  train_roc_auc_weighted_oob:
  - 0.948475817156149
  - 0.9456334931714505
  - 0.9491119159053701
  - 0.9479979911172846
  - 0.9456380897574027
start: 2023-12-22 11:42:47.492778
wrapper: null
