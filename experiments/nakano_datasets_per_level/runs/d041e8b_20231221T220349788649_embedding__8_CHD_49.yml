active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP5iZmZmZmem/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:05:06.243566
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__8
  params: {}
hash: d041e8b158110f3cb33d90b4beaae5b05eedc3cd5c166034abe71a3ad446a564
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d041e8b_20231221T220349788649_embedding__8_CHD_49.yml
results:
  fit_time:
  - 53.74262881278992
  - 54.45665645599365
  - 56.59952163696289
  - 55.54610013961792
  - 56.091145038604736
  score_time:
  - 5.190780878067017
  - 5.32232928276062
  - 6.075490236282349
  - 6.033037424087524
  - 6.135418176651001
  test_average_precision_macro:
  - 0.574256230373273
  - 0.5051350454679027
  - 0.5386857528559358
  - 0.5220890268464178
  - 0.5090364704727658
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7016046006422744
  - 0.6733769890987622
  - 0.7097148712983099
  - 0.6935501255807202
  - 0.6624729816537656
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7942212301587303
  - 0.7788413413413413
  - 0.7872747747747747
  - 0.7905835881753314
  - 0.7900421626984127
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6927188914464191
  - 0.6182926932204564
  - 0.6689036263663739
  - 0.6444080565110449
  - 0.617340122061103
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7113095238095237
  - 0.6921921921921922
  - 0.7072072072072073
  - 0.7110091743119268
  - 0.6979166666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7113095238095238
  - 0.6921921921921922
  - 0.7072072072072072
  - 0.7110091743119266
  - 0.6979166666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7113095238095238
  - 0.6921921921921922
  - 0.7072072072072071
  - 0.7110091743119266
  - 0.6979166666666666
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6698288690476191
  - 0.6484922422422422
  - 0.6675455943748627
  - 0.6703363914373089
  - 0.6533262072434608
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5699102067850684
  - 0.5523018127945758
  - 0.5642413726494536
  - 0.571440726688677
  - 0.5574009587749289
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5519630484988453
  - 0.529276693455798
  - 0.5470383275261324
  - 0.5516014234875445
  - 0.536
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5887407235621521
  - 0.5591162591162592
  - 0.5864474864474863
  - 0.5778942769768458
  - 0.5728857452071738
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5095435402276991
  - 0.489000167087962
  - 0.5061273318007059
  - 0.5100170947966784
  - 0.4923192550966771
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7942212301587303
  - 0.7878503503503504
  - 0.7872747747747746
  - 0.8089322120285424
  - 0.7900421626984129
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12418076763965057
  - 0.04542655937731571
  - 0.0973623090729323
  - 0.06919631463280732
  - 0.07596250247824206
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.40619286304424335
  - 0.3694148116184483
  - 0.4022814734274691
  - 0.41077383335341566
  - 0.3825090305655994
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4275689445116215
  - 0.4016262108438892
  - 0.4168199118240636
  - 0.42735766556123234
  - 0.4037510126634034
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.12373161413376378
  - 0.04248113945172313
  - 0.09934020446396509
  - 0.07505892900062087
  - 0.07709389756375162
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.866095902182369
  - 0.8548125454865846
  - 0.8588853177229253
  - 0.8669600195223532
  - 0.8609515207440503
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7142857142857144
  - -3.8018018018018016
  - -3.675675675675676
  - -3.7889908256880735
  - -3.6339285714285716
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2886904761904762
  - -0.3078078078078078
  - -0.29279279279279274
  - -0.28899082568807344
  - -0.3020833333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.28869047619047616
  - -0.3078078078078078
  - -0.2927927927927928
  - -0.2889908256880734
  - -0.3020833333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.28869047619047616
  - -0.3078078078078077
  - -0.29279279279279274
  - -0.2889908256880734
  - -0.3020833333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.330171130952381
  - -0.3515077577577578
  - -0.33245440562513734
  - -0.32966360856269117
  - -0.34667379275653926
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1986359126984127
  - -0.21388888888888885
  - -0.21236236236236233
  - -0.19678899082568807
  - -0.19955357142857144
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7113095238095237
  - 0.6921921921921922
  - 0.7072072072072073
  - 0.7110091743119268
  - 0.6979166666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7113095238095238
  - 0.6921921921921922
  - 0.7072072072072072
  - 0.7110091743119266
  - 0.6979166666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7113095238095238
  - 0.6921921921921922
  - 0.7072072072072071
  - 0.7110091743119266
  - 0.6979166666666666
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6698288690476191
  - 0.6484922422422422
  - 0.6675455943748627
  - 0.6703363914373089
  - 0.6533262072434608
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7113095238095237
  - 0.6921921921921922
  - 0.7072072072072073
  - 0.7110091743119268
  - 0.6979166666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7113095238095238
  - 0.6921921921921922
  - 0.7072072072072072
  - 0.7110091743119266
  - 0.6979166666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7113095238095238
  - 0.6921921921921922
  - 0.7072072072072071
  - 0.7110091743119266
  - 0.6979166666666666
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6698288690476191
  - 0.6484922422422422
  - 0.6675455943748627
  - 0.6703363914373089
  - 0.6533262072434608
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6222853017558135
  - 0.5902625589740093
  - 0.597811905226807
  - 0.6050306722687671
  - 0.5573567427108629
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8024540653935185
  - 0.7831698265726044
  - 0.7853603375837755
  - 0.7941520467836257
  - 0.7875889356759112
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8013640873015875
  - .nan
  - 0.7876376376376375
  - .nan
  - 0.8004464285714287
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6480116642366247
  - 0.55551085523652
  - 0.6203117017558498
  - 0.5764070181612818
  - 0.560656690305201
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9997332404863615
  - 0.9993345695035898
  - 0.9992180584356579
  - 0.9995988836497639
  - 0.9995962679761342
  train_average_precision_macro_oob:
  - 0.6864044538800943
  - 0.67868362993281
  - 0.6830688249037564
  - 0.6829831827554678
  - 0.6987205027336673
  train_average_precision_micro:
  - 0.9618970737095424
  - 0.9642192472058899
  - 0.964270023070671
  - 0.9647399465646536
  - 0.9635371805588068
  train_average_precision_micro_oob:
  - 0.7656733513855346
  - 0.7737238595676148
  - 0.7654054575324643
  - 0.767995295663934
  - 0.7681984704720569
  train_average_precision_samples:
  - 0.926834085778781
  - 0.9408752502502503
  - 0.9339182932932933
  - 0.9399040857000498
  - 0.928445573112616
  train_average_precision_samples_oob:
  - 0.8160741158765991
  - 0.8235892142142142
  - 0.8216873123123123
  - 0.8182392874937717
  - 0.8187014045648358
  train_average_precision_weighted:
  - 0.9997437643219459
  - 0.9994170485398701
  - 0.9993029398478103
  - 0.999644818558026
  - 0.9996269112326233
  train_average_precision_weighted_oob:
  - 0.815697783430268
  - 0.8101594414018097
  - 0.8123502810526803
  - 0.8115336576578149
  - 0.8260741644773164
  train_f1_macro:
  - 0.9273890142964634
  - 0.9234234234234234
  - 0.9283033033033031
  - 0.922645739910314
  - 0.9266365688487584
  train_f1_macro_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750373
  - 0.7768999247554552
  train_f1_micro:
  - 0.9273890142964635
  - 0.9234234234234234
  - 0.9283033033033034
  - 0.922645739910314
  - 0.9266365688487584
  train_f1_micro_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750373
  - 0.7768999247554552
  train_f1_samples:
  - 0.9273890142964636
  - 0.9234234234234234
  - 0.9283033033033034
  - 0.922645739910314
  - 0.9266365688487584
  train_f1_samples_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750374
  - 0.7768999247554551
  train_f1_weighted:
  - 0.9001582503275505
  - 0.897002772002772
  - 0.9007592745584011
  - 0.8955043572431102
  - 0.9000735404000284
  train_f1_weighted_oob:
  - 0.727817329397465
  - 0.7370928620928621
  - 0.7372496951099571
  - 0.7417067725906146
  - 0.7486805987053744
  train_jaccard_macro:
  - 0.8732716964106831
  - 0.8664070464287809
  - 0.8749145960666506
  - 0.8653542806030066
  - 0.8718322458442961
  train_jaccard_macro_oob:
  - 0.6248677148690758
  - 0.6362219217977014
  - 0.6367961747294385
  - 0.6381018174956811
  - 0.645735238569015
  train_jaccard_micro:
  - 0.8646089091546826
  - 0.8577405857740585
  - 0.866199649737303
  - 0.8563995837669095
  - 0.8633017875920084
  train_jaccard_micro_oob:
  - 0.6123748862602366
  - 0.6238951539164889
  - 0.6248856358645929
  - 0.6267477203647417
  - 0.6351891725622886
  train_jaccard_samples:
  - 0.8815973341932708
  - 0.8758258258258257
  - 0.8834191334191333
  - 0.8747597693786033
  - 0.8821885413307535
  train_jaccard_samples_oob:
  - 0.644362033752553
  - 0.653926328926329
  - 0.6548584298584299
  - 0.6591714712790945
  - 0.6673976136730086
  train_jaccard_weighted:
  - 0.8304376855274052
  - 0.8252483256952426
  - 0.8314686483636631
  - 0.8231333825537627
  - 0.8301678763440987
  train_jaccard_weighted_oob:
  - 0.5745099692202785
  - 0.5867799568760851
  - 0.5864291042389955
  - 0.5919798027144769
  - 0.6002177674145406
  train_label_ranking_average_precision_score:
  - 0.933606094808126
  - 0.9453797547547539
  - 0.9406750500500498
  - 0.9421462381664171
  - 0.9352175821419608
  train_label_ranking_average_precision_score_oob:
  - 0.8228461249059432
  - 0.8280937187187178
  - 0.8284440690690681
  - 0.820481439960139
  - 0.8254734135941808
  train_matthews_corrcoef_macro:
  - 0.606185617817956
  - 0.5993487309613704
  - 0.6222737433824738
  - 0.6003788661850525
  - 0.6055662969312903
  train_matthews_corrcoef_macro_oob:
  - 0.23812347914753126
  - 0.26620414674956966
  - 0.26370838824192067
  - 0.2651240901801758
  - 0.2792090974510035
  train_matthews_corrcoef_micro:
  - 0.8542726735388878
  - 0.8458108261121461
  - 0.8562848209920405
  - 0.8444046300891532
  - 0.8526487652682905
  train_matthews_corrcoef_micro_oob:
  - 0.5056473599402623
  - 0.5233680482141795
  - 0.5252639365382662
  - 0.5273706154782133
  - 0.5420991149532567
  train_matthews_corrcoef_samples:
  - 0.8474284176913149
  - 0.8427813773470129
  - 0.8525710756677898
  - 0.8392447115633402
  - 0.8457743327248742
  train_matthews_corrcoef_samples_oob:
  - 0.5023178687162021
  - 0.522324046667358
  - 0.5296334424534138
  - 0.5191386928450024
  - 0.536513107262063
  train_matthews_corrcoef_weighted:
  - 0.6322643034708091
  - 0.6272943846713769
  - 0.6585968887967318
  - 0.6265280650670946
  - 0.6319521431454989
  train_matthews_corrcoef_weighted_oob:
  - 0.2617336825360753
  - 0.28907147538582134
  - 0.2866945208920448
  - 0.29430914144867343
  - 0.30900678610295507
  train_ndgc:
  - 0.9493398816022839
  - 0.9614306325049601
  - 0.9551041841361424
  - 0.9605546602481
  - 0.951480050548745
  train_ndgc_oob:
  - 0.8760973604827876
  - 0.8819719852706018
  - 0.8810347501121769
  - 0.8781009651340312
  - 0.8778945971310036
  train_neg_coverage_error:
  - -2.871331828442438
  - -2.8626126126126126
  - -2.8626126126126126
  - -2.8520179372197307
  - -2.8984198645598194
  train_neg_coverage_error_oob:
  - -3.460496613995485
  - -3.43018018018018
  - -3.454954954954955
  - -3.4237668161434978
  - -3.4830699774266365
  train_neg_hamming_loss_macro:
  - -0.07261098570353648
  - -0.07657657657657659
  - -0.0716966966966967
  - -0.0773542600896861
  - -0.07336343115124154
  train_neg_hamming_loss_macro_oob:
  - -0.24040632054176073
  - -0.23160660660660662
  - -0.23085585585585586
  - -0.22944693572496264
  - -0.22310007524454478
  train_neg_hamming_loss_micro:
  - -0.0726109857035365
  - -0.07657657657657657
  - -0.07169669669669669
  - -0.0773542600896861
  - -0.07336343115124154
  train_neg_hamming_loss_micro_oob:
  - -0.24040632054176073
  - -0.23160660660660662
  - -0.23085585585585586
  - -0.22944693572496264
  - -0.22310007524454478
  train_neg_hamming_loss_samples:
  - -0.07261098570353648
  - -0.07657657657657657
  - -0.07169669669669669
  - -0.07735426008968609
  - -0.07336343115124154
  train_neg_hamming_loss_samples_oob:
  - -0.24040632054176073
  - -0.23160660660660662
  - -0.23085585585585586
  - -0.22944693572496258
  - -0.22310007524454478
  train_neg_hamming_loss_weighted:
  - -0.09984174967244944
  - -0.102997227997228
  - -0.0992407254415988
  - -0.10449564275688968
  - -0.09992645959997169
  train_neg_hamming_loss_weighted_oob:
  - -0.27218267060253515
  - -0.2629071379071379
  - -0.2627503048900429
  - -0.2582932274093853
  - -0.25131940129462566
  train_neg_label_ranking_loss:
  - -0.048507649862051666
  - -0.046114864864864866
  - -0.046765515515515506
  - -0.04578973592426507
  - -0.04974291447203411
  train_neg_label_ranking_loss_oob:
  - -0.15822673689490846
  - -0.15132632632632634
  - -0.15149524524524524
  - -0.15652092675635276
  - -0.15764986205166792
  train_precision_macro:
  - 0.9273890142964634
  - 0.9234234234234234
  - 0.9283033033033031
  - 0.922645739910314
  - 0.9266365688487584
  train_precision_macro_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750373
  - 0.7768999247554552
  train_precision_micro:
  - 0.9273890142964635
  - 0.9234234234234234
  - 0.9283033033033034
  - 0.922645739910314
  - 0.9266365688487584
  train_precision_micro_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750373
  - 0.7768999247554552
  train_precision_samples:
  - 0.9273890142964636
  - 0.9234234234234234
  - 0.9283033033033034
  - 0.922645739910314
  - 0.9266365688487584
  train_precision_samples_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750374
  - 0.7768999247554551
  train_precision_weighted:
  - 0.9001582503275505
  - 0.897002772002772
  - 0.9007592745584011
  - 0.8955043572431102
  - 0.9000735404000284
  train_precision_weighted_oob:
  - 0.727817329397465
  - 0.7370928620928621
  - 0.7372496951099571
  - 0.7417067725906146
  - 0.7486805987053744
  train_recall_macro:
  - 0.9273890142964634
  - 0.9234234234234234
  - 0.9283033033033031
  - 0.922645739910314
  - 0.9266365688487584
  train_recall_macro_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750373
  - 0.7768999247554552
  train_recall_micro:
  - 0.9273890142964635
  - 0.9234234234234234
  - 0.9283033033033034
  - 0.922645739910314
  - 0.9266365688487584
  train_recall_micro_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750373
  - 0.7768999247554552
  train_recall_samples:
  - 0.9273890142964636
  - 0.9234234234234234
  - 0.9283033033033034
  - 0.922645739910314
  - 0.9266365688487584
  train_recall_samples_oob:
  - 0.7595936794582393
  - 0.7683933933933934
  - 0.7691441441441441
  - 0.7705530642750374
  - 0.7768999247554551
  train_recall_weighted:
  - 0.9001582503275505
  - 0.897002772002772
  - 0.9007592745584011
  - 0.8955043572431102
  - 0.9000735404000284
  train_recall_weighted_oob:
  - 0.727817329397465
  - 0.7370928620928621
  - 0.7372496951099571
  - 0.7417067725906146
  - 0.7486805987053744
  train_roc_auc_macro:
  - 0.9997965080721417
  - 0.999557193566276
  - 0.99947302138914
  - 0.9997105226423582
  - 0.9997015377165431
  train_roc_auc_macro_oob:
  - 0.7364994076103527
  - 0.7351070218373611
  - 0.7316296678317595
  - 0.7294291012320774
  - 0.7653984593855357
  train_roc_auc_micro:
  - 0.9701610724150354
  - 0.9710422800883328
  - 0.9716217575916124
  - 0.9713014244227983
  - 0.9705058610425272
  train_roc_auc_micro_oob:
  - 0.8483922781313799
  - 0.8487929011777696
  - 0.8498006330296591
  - 0.8494089566264084
  - 0.8525313242725616
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9997871221297062
  - 0.9995890929452916
  - 0.9995058695306783
  - 0.9996924981130242
  - 0.9996907662934882
  train_roc_auc_weighted_oob:
  - 0.7745915465789163
  - 0.7756539313182216
  - 0.7652302749143289
  - 0.7807373319069671
  - 0.7853192289456584
start: 2023-12-21 22:03:49.788649
wrapper: null
