active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA/AAAAAAAAAAAAAAAAAADwvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+cmZmZmZnpPzIzMzMzM/O/zszMzMzM/D+ZmZmZmZkBwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJPzgzMzMzM/M/wJmZmZmZyT/IzMzMzMz8vw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMBMCgmZmZmZnZP6CZmZmZmdk/aGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:51:40.958907
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f37f480c5b67717341f894df5926e0b1f486ba3ef35be60a5ec7e446d35be76e
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f37f480_20231212T165123880677_embedding__2_birds.yml
results:
  fit_time:
  - 5.892938613891602
  - 5.8354575634002686
  - 6.763662099838257
  - 6.535381078720093
  - 6.008568286895752
  score_time:
  - 2.397871971130371
  - 2.4161651134490967
  - 2.385239362716675
  - 2.6269822120666504
  - 2.3920705318450928
  test_average_precision_macro:
  - 0.5214626545545303
  - 0.5669981532901809
  - 0.6069201154660371
  - 0.48883351145299114
  - 0.4926340079841934
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5022306875227441
  - 0.5354643172071122
  - 0.5469679970034657
  - 0.511390242593765
  - 0.5237626090079155
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.32194822075123036
  - 0.3617052327517443
  - 0.34465494626803334
  - 0.3329117937930067
  - 0.3192943038873271
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5771484656082075
  - 0.6164202578815154
  - 0.6431796123422098
  - 0.5609993861060618
  - 0.6009852968262404
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048143
  - 0.9518563851489187
  - 0.9502243982048144
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048144
  - 0.9518563851489188
  - 0.9502243982048144
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048143
  - 0.9518563851489189
  - 0.9502243982048144
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.923112259546368
  - 0.9287302445766481
  - 0.9261494763003729
  - 0.9259259259259259
  - 0.9266771580113075
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.902743299577586
  - 0.9106019666829649
  - 0.907171161504426
  - 0.9101473772555657
  - 0.9070065225376198
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9007367196587824
  - 0.9088785046728972
  - 0.9051690633501749
  - 0.9081354612689763
  - 0.9051690633501749
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9064533825908953
  - 0.9141840330212424
  - 0.910782532825
  - 0.9137086596136141
  - 0.9108646773965278
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8592358488416968
  - 0.8687886179239382
  - 0.8650436657058753
  - 0.8640926434581191
  - 0.8653847918265573
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7715606238520054
  - 0.7958137598835272
  - 0.802019287353305
  - 0.8057800108472705
  - 0.7844105829570945
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.054168443746446304
  - 0.08613089544804363
  - 0.04651460973666965
  - 0.04636864641116353
  - 0.06507873623728566
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.22188212909454771
  - 0.2973225754333953
  - 0.25547991884708093
  - 0.24595848767716083
  - 0.2800541996265171
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.03911935353167299
  - 0.05474880841192457
  - 0.04589327622405645
  - 0.05315378326135055
  - 0.055152002850840195
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.12591557558094155
  - 0.18439686669445815
  - 0.1155929085276272
  - 0.1212085649781372
  - 0.157971934234278
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3887794985958545
  - 0.42233046711334377
  - 0.40432267221995594
  - 0.39084979880856413
  - 0.3854517966770947
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.4031007751937983
  - -2.503875968992248
  - -2.9069767441860463
  - -3.131782945736434
  - -3.317829457364341
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0522235822113423
  - -0.047735618115055084
  - -0.04977560179518564
  - -0.04814361485108119
  - -0.049775601795185635
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05222358221134231
  - -0.04773561811505508
  - -0.049775601795185635
  - -0.04814361485108119
  - -0.049775601795185635
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05222358221134231
  - -0.04773561811505507
  - -0.049775601795185635
  - -0.04814361485108119
  - -0.049775601795185635
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07688774045363192
  - -0.07126975542335198
  - -0.07385052369962719
  - -0.07407407407407408
  - -0.07332284198869267
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1012216902264782
  - -0.06454511440831551
  - -0.07989372751684654
  - -0.0954809313906441
  - -0.09500937325834725
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048143
  - 0.9518563851489187
  - 0.9502243982048144
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048144
  - 0.9518563851489188
  - 0.9502243982048144
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048143
  - 0.9518563851489189
  - 0.9502243982048144
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.923112259546368
  - 0.9287302445766481
  - 0.9261494763003729
  - 0.9259259259259259
  - 0.9266771580113075
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048143
  - 0.9518563851489187
  - 0.9502243982048144
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048144
  - 0.9518563851489188
  - 0.9502243982048144
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9477764177886577
  - 0.9522643818849449
  - 0.9502243982048143
  - 0.9518563851489189
  - 0.9502243982048144
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.923112259546368
  - 0.9287302445766481
  - 0.9261494763003729
  - 0.9259259259259259
  - 0.9266771580113075
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8918402474169573
  - 0.8999535403350005
  - 0.9186774873227966
  - 0.8636432404476121
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8956182434593487
  - 0.9233619774452657
  - 0.9166112792840221
  - 0.9006332138590203
  - 0.8899767754156747
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8905137489188759
  - 0.9075151991815472
  - 0.916730862052641
  - 0.8828349316247297
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9501227114443754
  - 0.9671830653869374
  - 0.9606266389790464
  - 0.9617483440846482
  - 0.9685005743071393
  train_average_precision_macro_oob:
  - 0.49955990875384365
  - 0.4624275520462262
  - 0.4148136434167983
  - 0.49403611686397353
  - 0.4674827830639281
  train_average_precision_micro:
  - 0.9099309819132
  - 0.9038424661325106
  - 0.900413985988489
  - 0.9106118708705271
  - 0.9100995892448105
  train_average_precision_micro_oob:
  - 0.5508692923669426
  - 0.5309623883773911
  - 0.5053077122805135
  - 0.5456030404650408
  - 0.5414494356306112
  train_average_precision_samples:
  - 0.5137569982773471
  - 0.5039324935400517
  - 0.5145904085148272
  - 0.5200335302079487
  - 0.5144329088224437
  train_average_precision_samples_oob:
  - 0.34803264301324816
  - 0.33057865562466776
  - 0.3320146973472897
  - 0.3495072942513363
  - 0.3450336161396623
  train_average_precision_weighted:
  - 0.9521851111854781
  - 0.9615341304371677
  - 0.9562678151142757
  - 0.9562725449034093
  - 0.9662546011232085
  train_average_precision_weighted_oob:
  - 0.5876352231026697
  - 0.5678694739807147
  - 0.5309335675155499
  - 0.5873268164684862
  - 0.5793603422742114
  train_f1_macro:
  - 0.9568543451652388
  - 0.956956344349245
  - 0.9564463484292126
  - 0.9573643410852711
  - 0.9572623419012646
  train_f1_macro_oob:
  - 0.9512443900448795
  - 0.951754385964912
  - 0.9506323949408405
  - 0.9503263973888207
  - 0.9519583843329252
  train_f1_micro:
  - 0.9568543451652387
  - 0.9569563443492453
  - 0.9564463484292126
  - 0.9573643410852714
  - 0.9572623419012648
  train_f1_micro_oob:
  - 0.9512443900448796
  - 0.9517543859649122
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9519583843329253
  train_f1_samples:
  - 0.9568543451652386
  - 0.9569563443492451
  - 0.9564463484292126
  - 0.9573643410852715
  - 0.9572623419012648
  train_f1_samples_oob:
  - 0.9512443900448797
  - 0.9517543859649122
  - 0.9506323949408404
  - 0.950326397388821
  - 0.9519583843329253
  train_f1_weighted:
  - 0.9413675673253574
  - 0.9421853082318198
  - 0.9409785524775076
  - 0.9425908797275077
  - 0.9425448972607835
  train_f1_weighted_oob:
  - 0.9278054099266627
  - 0.9306386120339608
  - 0.9271273363273896
  - 0.927263184167254
  - 0.9301395646416403
  train_jaccard_macro:
  - 0.9183008517767707
  - 0.9184110040344123
  - 0.9175311349491164
  - 0.919167238403154
  - 0.9189976065697119
  train_jaccard_macro_oob:
  - 0.908826192238244
  - 0.9094915113279406
  - 0.9076666036101603
  - 0.9071151747272698
  - 0.9099000463228417
  train_jaccard_micro:
  - 0.9172777940745086
  - 0.9174652845687463
  - 0.9165281986120614
  - 0.9182156133828996
  - 0.9180279761322508
  train_jaccard_micro_oob:
  - 0.9070219801595021
  - 0.9079497907949791
  - 0.9059097978227061
  - 0.9053541929841609
  - 0.9083211678832117
  train_jaccard_samples:
  - 0.9219937165968511
  - 0.9222672339456971
  - 0.9212251979567451
  - 0.9227693116343268
  - 0.9225184278141811
  train_jaccard_samples_oob:
  - 0.9126042309561015
  - 0.913399960897433
  - 0.9114394741871992
  - 0.9109520781992977
  - 0.913600584058117
  train_jaccard_weighted:
  - 0.8899802977030811
  - 0.8913436772129147
  - 0.8892466205014778
  - 0.8921921603397653
  - 0.8920173162881514
  train_jaccard_weighted_oob:
  - 0.867327029933496
  - 0.8717675394023057
  - 0.865920601324618
  - 0.8663276571246927
  - 0.8709466708464364
  train_label_ranking_average_precision_score:
  - 0.9711213393626181
  - 0.9651728036175706
  - 0.970016765103974
  - 0.9715839178048478
  - 0.9679212809154667
  train_label_ranking_average_precision_score_oob:
  - 0.805396984098519
  - 0.7918189657021868
  - 0.7874410539364369
  - 0.801057681848235
  - 0.7985219882326855
  train_matthews_corrcoef_macro:
  - 0.1323377484368154
  - 0.15568462980848966
  - 0.1374994691345754
  - 0.16884794206135414
  - 0.14719054975769608
  train_matthews_corrcoef_macro_oob:
  - 0.05896473412270732
  - 0.07284854419733426
  - 0.06374598306608849
  - 0.0649881503045723
  - 0.07364891247925903
  train_matthews_corrcoef_micro:
  - 0.420431737064618
  - 0.43302185005879185
  - 0.4187286917200259
  - 0.4464864090565926
  - 0.43280748642824585
  train_matthews_corrcoef_micro_oob:
  - 0.2737387295981216
  - 0.3070294631592835
  - 0.26608803658496966
  - 0.2716887658788841
  - 0.30197346285951915
  train_matthews_corrcoef_samples:
  - 0.11717192645468948
  - 0.11887905406355263
  - 0.11083158239482316
  - 0.11730558702502449
  - 0.11268913767761098
  train_matthews_corrcoef_samples_oob:
  - 0.05482660464963008
  - 0.07213579951906036
  - 0.049225000629318325
  - 0.05267976638959347
  - 0.05997837540513679
  train_matthews_corrcoef_weighted:
  - 0.27393471360405997
  - 0.30554449922773363
  - 0.2878864850827899
  - 0.31836431696446826
  - 0.29865123425994256
  train_matthews_corrcoef_weighted_oob:
  - 0.14695036631453492
  - 0.1765606297451197
  - 0.1546793924769085
  - 0.15466358893510176
  - 0.17595956300503862
  train_ndgc:
  - 0.523926336206705
  - 0.5161646296096196
  - 0.5260835579584738
  - 0.5303753912592062
  - 0.5262282484815717
  train_ndgc_oob:
  - 0.4079759276252457
  - 0.39369470167499454
  - 0.395489309443675
  - 0.4107897497702311
  - 0.4053006092764361
  train_neg_coverage_error:
  - -1.1550387596899225
  - -1.187984496124031
  - -1.180232558139535
  - -1.1627906976744187
  - -1.180232558139535
  train_neg_coverage_error_oob:
  - -2.868217054263566
  - -3.1666666666666665
  - -3.102713178294574
  - -2.9186046511627906
  - -2.9728682170542635
  train_neg_hamming_loss_macro:
  - -0.04314565483476132
  - -0.0430436556507548
  - -0.04355365157078744
  - -0.04263565891472868
  - -0.04273765809873521
  train_neg_hamming_loss_macro_oob:
  - -0.048755609955120356
  - -0.04824561403508772
  - -0.04936760505915953
  - -0.04967360261117911
  - -0.04804161566707467
  train_neg_hamming_loss_micro:
  - -0.04314565483476132
  - -0.0430436556507548
  - -0.04355365157078744
  - -0.04263565891472868
  - -0.04273765809873521
  train_neg_hamming_loss_micro_oob:
  - -0.048755609955120356
  - -0.04824561403508772
  - -0.049367605059159526
  - -0.04967360261117911
  - -0.04804161566707466
  train_neg_hamming_loss_samples:
  - -0.04314565483476132
  - -0.04304365565075479
  - -0.04355365157078742
  - -0.04263565891472868
  - -0.042737658098735205
  train_neg_hamming_loss_samples_oob:
  - -0.048755609955120356
  - -0.04824561403508772
  - -0.049367605059159526
  - -0.049673602611179105
  - -0.048041615667074655
  train_neg_hamming_loss_weighted:
  - -0.05863243267464265
  - -0.05781469176818014
  - -0.05902144752249248
  - -0.05740912027249236
  - -0.05745510273921647
  train_neg_hamming_loss_weighted_oob:
  - -0.07219459007333721
  - -0.06936138796603912
  - -0.07287266367261033
  - -0.07273681583274606
  - -0.06986043535835973
  train_neg_label_ranking_loss:
  - -0.005505183339485665
  - -0.006212158636064244
  - -0.0059204083143891625
  - -0.005115674276070993
  - -0.006010793305594947
  train_neg_label_ranking_loss_oob:
  - -0.07802221812994727
  - -0.08827295453064947
  - -0.08769207419600716
  - -0.07662625649544254
  - -0.08202505982516242
  train_precision_macro:
  - 0.9568543451652388
  - 0.956956344349245
  - 0.9564463484292126
  - 0.9573643410852711
  - 0.9572623419012646
  train_precision_macro_oob:
  - 0.9512443900448795
  - 0.951754385964912
  - 0.9506323949408405
  - 0.9503263973888207
  - 0.9519583843329252
  train_precision_micro:
  - 0.9568543451652387
  - 0.9569563443492453
  - 0.9564463484292126
  - 0.9573643410852714
  - 0.9572623419012648
  train_precision_micro_oob:
  - 0.9512443900448796
  - 0.9517543859649122
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9519583843329253
  train_precision_samples:
  - 0.9568543451652386
  - 0.9569563443492451
  - 0.9564463484292126
  - 0.9573643410852715
  - 0.9572623419012648
  train_precision_samples_oob:
  - 0.9512443900448797
  - 0.9517543859649122
  - 0.9506323949408404
  - 0.950326397388821
  - 0.9519583843329253
  train_precision_weighted:
  - 0.9413675673253574
  - 0.9421853082318198
  - 0.9409785524775076
  - 0.9425908797275077
  - 0.9425448972607835
  train_precision_weighted_oob:
  - 0.9278054099266627
  - 0.9306386120339608
  - 0.9271273363273896
  - 0.927263184167254
  - 0.9301395646416403
  train_recall_macro:
  - 0.9568543451652388
  - 0.956956344349245
  - 0.9564463484292126
  - 0.9573643410852711
  - 0.9572623419012646
  train_recall_macro_oob:
  - 0.9512443900448795
  - 0.951754385964912
  - 0.9506323949408405
  - 0.9503263973888207
  - 0.9519583843329252
  train_recall_micro:
  - 0.9568543451652387
  - 0.9569563443492453
  - 0.9564463484292126
  - 0.9573643410852714
  - 0.9572623419012648
  train_recall_micro_oob:
  - 0.9512443900448796
  - 0.9517543859649122
  - 0.9506323949408405
  - 0.9503263973888209
  - 0.9519583843329253
  train_recall_samples:
  - 0.9568543451652386
  - 0.9569563443492451
  - 0.9564463484292126
  - 0.9573643410852715
  - 0.9572623419012648
  train_recall_samples_oob:
  - 0.9512443900448797
  - 0.9517543859649122
  - 0.9506323949408404
  - 0.950326397388821
  - 0.9519583843329253
  train_recall_weighted:
  - 0.9413675673253574
  - 0.9421853082318198
  - 0.9409785524775076
  - 0.9425908797275077
  - 0.9425448972607835
  train_recall_weighted_oob:
  - 0.9278054099266627
  - 0.9306386120339608
  - 0.9271273363273896
  - 0.927263184167254
  - 0.9301395646416403
  train_roc_auc_macro:
  - 0.9974117936960298
  - 0.9977940074825979
  - 0.99755148213224
  - 0.9976271683857558
  - 0.9978703059031472
  train_roc_auc_macro_oob:
  - 0.87078249070108
  - 0.893402003163185
  - 0.8764212813618923
  - 0.8984190725270843
  - 0.8940850543888582
  train_roc_auc_micro:
  - 0.9941102924620999
  - 0.9940603205394671
  - 0.9935465103462882
  - 0.9945509428045004
  - 0.9940270153085646
  train_roc_auc_micro_oob:
  - 0.9134748174640972
  - 0.9089844451629128
  - 0.9033612328730153
  - 0.9148776738928743
  - 0.9137519040336048
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9964628179076515
  - 0.9965106017568657
  - 0.9965519716555943
  - 0.9963293790273506
  - 0.9968142885068485
  train_roc_auc_weighted_oob:
  - 0.8983395874497089
  - 0.901020027783417
  - 0.8905914061039814
  - 0.9071912148815169
  - 0.9056450359444319
start: 2023-12-12 16:51:23.880677
wrapper: null
