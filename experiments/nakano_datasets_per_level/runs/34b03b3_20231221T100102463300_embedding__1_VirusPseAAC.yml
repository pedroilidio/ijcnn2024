active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AmZmZmZn5vwCamZmZmdk/gGZmZmZm9j+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:01:08.922081
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__1
  params: {}
hash: 34b03b302d97f7a12553cd464cf2d45f27a6c7b9ffa8cf1ec13394d6d2d3cd79
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/34b03b3_20231221T100102463300_embedding__1_VirusPseAAC.yml
results:
  fit_time:
  - 2.3658499717712402
  - 2.3348309993743896
  - 2.382864236831665
  - 2.337477922439575
  - 2.3734850883483887
  score_time:
  - 0.9157586097717285
  - 0.9246392250061035
  - 0.945117712020874
  - 0.9350039958953857
  - 0.9468374252319336
  test_average_precision_macro:
  - 0.4705447475442872
  - 0.5076555375525311
  - 0.29068984508991896
  - 0.458172859237783
  - 0.34527171093747927
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5029005450977313
  - 0.4827353986353212
  - 0.47888255885304815
  - 0.5047142717519987
  - 0.4603071296574956
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6920833333333334
  - 0.6573643410852713
  - 0.7085365853658536
  - 0.6757638888888888
  - 0.6897286821705426
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5210062926160223
  - 0.5442671675104499
  - 0.4372071911492392
  - 0.4973168836369132
  - 0.4553444380458122
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7999999999999999
  - 0.8023255813953488
  - 0.8130081300813008
  - 0.7958333333333334
  - 0.7906976744186046
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8
  - 0.8023255813953488
  - 0.8130081300813008
  - 0.7958333333333333
  - 0.7906976744186046
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8
  - 0.802325581395349
  - 0.8130081300813009
  - 0.7958333333333334
  - 0.7906976744186048
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6920000000000001
  - 0.6830825353397173
  - 0.7042682926829268
  - 0.6916666666666667
  - 0.6717352415026834
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6897183670639048
  - 0.6962148869229442
  - 0.7077014070410989
  - 0.6833993429738111
  - 0.6815163796014859
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6666666666666666
  - 0.6699029126213593
  - 0.684931506849315
  - 0.6608996539792388
  - 0.6538461538461539
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6779761904761905
  - 0.6760797342192693
  - 0.6898954703832754
  - 0.6726190476190477
  - 0.6611295681063123
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.547533656275075
  - 0.5367952779192239
  - 0.5601515010355803
  - 0.5459078537927099
  - 0.5276656794741901
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6920833333333332
  - 0.6573643410852713
  - 0.7085365853658536
  - 0.6757638888888889
  - 0.6897286821705426
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.034227350387130456
  - 0.006073424073445792
  - 0.047178209756024825
  - 0.05334267628898418
  - -0.010363203048773674
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18071682129971955
  - 0.06709951129499588
  - 0.18387896946044716
  - 0.17777807704253104
  - 0.05068961467062512
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0808113883008419
  - 0.018604651162790697
  - 0.03981598858618722
  - 0.07618033988749895
  - 0.019359430977527348
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06982379478974612
  - 0.0128613686261205
  - 0.09435641951204965
  - 0.10668535257796836
  - -0.022432695338632545
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7684871223595315
  - 0.7461364582414617
  - 0.7849303306816839
  - 0.7597439309912876
  - 0.7685734034765591
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3
  - -2.255813953488372
  - -2.268292682926829
  - -2.3
  - -2.2325581395348837
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20000000000000004
  - -0.19767441860465115
  - -0.1869918699186992
  - -0.2041666666666667
  - -0.20930232558139536
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2
  - -0.19767441860465115
  - -0.18699186991869918
  - -0.20416666666666666
  - -0.20930232558139536
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19999999999999998
  - -0.19767441860465113
  - -0.18699186991869918
  - -0.2041666666666667
  - -0.2093023255813953
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.308
  - -0.3169174646602827
  - -0.29573170731707316
  - -0.30833333333333335
  - -0.3282647584973166
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2125
  - -0.2116279069767442
  - -0.2121951219512195
  - -0.20958333333333332
  - -0.20872093023255808
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7999999999999999
  - 0.8023255813953488
  - 0.8130081300813008
  - 0.7958333333333334
  - 0.7906976744186046
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8
  - 0.8023255813953488
  - 0.8130081300813008
  - 0.7958333333333333
  - 0.7906976744186046
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8
  - 0.802325581395349
  - 0.8130081300813009
  - 0.7958333333333334
  - 0.7906976744186048
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6920000000000001
  - 0.6830825353397173
  - 0.7042682926829268
  - 0.6916666666666667
  - 0.6717352415026834
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7999999999999999
  - 0.8023255813953488
  - 0.8130081300813008
  - 0.7958333333333334
  - 0.7906976744186046
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8
  - 0.8023255813953488
  - 0.8130081300813008
  - 0.7958333333333333
  - 0.7906976744186046
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8
  - 0.802325581395349
  - 0.8130081300813009
  - 0.7958333333333334
  - 0.7906976744186048
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6920000000000001
  - 0.6830825353397173
  - 0.7042682926829268
  - 0.6916666666666667
  - 0.6717352415026834
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.650661291086483
  - 0.7590002154708038
  - 0.5947505173240467
  - 0.6356468257043705
  - 0.6350448284379417
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7971578947368421
  - 0.8169934640522876
  - 0.7806186868686867
  - 0.7939620292561469
  - 0.7921956684092606
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7875
  - 0.7883720930232557
  - 0.7878048780487806
  - 0.7904166666666667
  - 0.7912790697674417
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6256251776072749
  - 0.6941317723670666
  - 0.6072007722007723
  - 0.6171648281622706
  - 0.6408427943746893
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.929475519025393
  - 0.9355116341165447
  - 0.9152233442437927
  - 0.9350704295787376
  - 0.9914021164021163
  train_average_precision_macro_oob:
  - 0.37963396094048973
  - 0.34758096141226985
  - 0.3736375901013211
  - 0.3256722071134554
  - 0.3902013595996699
  train_average_precision_micro:
  - 0.9033375929190076
  - 0.8969696241288823
  - 0.9016503547265466
  - 0.8990786459381291
  - 0.8995596368618153
  train_average_precision_micro_oob:
  - 0.5579384351689209
  - 0.489740802232852
  - 0.5131312282976597
  - 0.48930177534556474
  - 0.4616670234054053
  train_average_precision_samples:
  - 0.8977045908183632
  - 0.8831300813008129
  - 0.8855421686746988
  - 0.8872255489021955
  - 0.8892276422764227
  train_average_precision_samples_oob:
  - 0.7167997338656021
  - 0.701659891598916
  - 0.7097724230254351
  - 0.6834830339321358
  - 0.6689871273712736
  train_average_precision_weighted:
  - 0.9771407307139383
  - 0.9777791376671974
  - 0.9695738906885554
  - 0.9783602411917877
  - 0.998452380952381
  train_average_precision_weighted_oob:
  - 0.5375952165780298
  - 0.4577594135789773
  - 0.47727659021136465
  - 0.45185150024214615
  - 0.4414841900929177
  train_f1_macro:
  - 0.9251497005988024
  - 0.9258130081300813
  - 0.927710843373494
  - 0.9261477045908184
  - 0.9247967479674797
  train_f1_macro_oob:
  - 0.8093812375249502
  - 0.8008130081300813
  - 0.8072289156626505
  - 0.8053892215568862
  - 0.8069105691056909
  train_f1_micro:
  - 0.9251497005988024
  - 0.9258130081300813
  - 0.927710843373494
  - 0.9261477045908184
  - 0.9247967479674797
  train_f1_micro_oob:
  - 0.8093812375249501
  - 0.8008130081300813
  - 0.8072289156626506
  - 0.8053892215568862
  - 0.806910569105691
  train_f1_samples:
  - 0.9251497005988024
  - 0.9258130081300814
  - 0.927710843373494
  - 0.9261477045908182
  - 0.9247967479674798
  train_f1_samples_oob:
  - 0.8093812375249498
  - 0.8008130081300812
  - 0.8072289156626504
  - 0.8053892215568861
  - 0.8069105691056909
  train_f1_weighted:
  - 0.9419280251378431
  - 0.946032034947215
  - 0.949740137018663
  - 0.9433074150207048
  - 0.9421341463414633
  train_f1_weighted_oob:
  - 0.706023596371613
  - 0.6920883387938356
  - 0.7048783368769194
  - 0.6958024250007447
  - 0.7015853658536585
  train_jaccard_macro:
  - 0.8644017931915636
  - 0.8656315245905296
  - 0.8694609499012323
  - 0.8659541871030886
  - 0.8638420595446482
  train_jaccard_macro_oob:
  - 0.7012334300577322
  - 0.6912693188403352
  - 0.6980967204487675
  - 0.6976123319173714
  - 0.6983773644803564
  train_jaccard_micro:
  - 0.8607242339832869
  - 0.8618732261116367
  - 0.8651685393258427
  - 0.862453531598513
  - 0.8601134215500945
  train_jaccard_micro_oob:
  - 0.6797988264878457
  - 0.6677966101694915
  - 0.6767676767676768
  - 0.6741854636591479
  - 0.676320272572402
  train_jaccard_samples:
  - 0.8766752209865982
  - 0.8770325203252033
  - 0.8803786574870912
  - 0.8763900769888793
  - 0.875
  train_jaccard_samples_oob:
  - 0.6887653264898775
  - 0.6769744483159117
  - 0.6893287435456111
  - 0.6833475905332194
  - 0.6865563298490128
  train_jaccard_weighted:
  - 0.8938142081731446
  - 0.9013864839036541
  - 0.9087553018306014
  - 0.8961274250420679
  - 0.8943829174185884
  train_jaccard_weighted_oob:
  - 0.561374099667907
  - 0.5471866619272534
  - 0.5605622639316811
  - 0.5511538164328574
  - 0.5566176219725614
  train_label_ranking_average_precision_score:
  - 0.8977045908183632
  - 0.883130081300813
  - 0.8855421686746988
  - 0.8872255489021955
  - 0.8892276422764228
  train_label_ranking_average_precision_score_oob:
  - 0.716799733865602
  - 0.701659891598916
  - 0.7097724230254349
  - 0.6834830339321359
  - 0.6689871273712737
  train_matthews_corrcoef_macro:
  - 0.31306029462026286
  - 0.3168371084025269
  - 0.32107192003327806
  - 0.3130654150237366
  - 0.3128555850314427
  train_matthews_corrcoef_macro_oob:
  - 0.06159213196773586
  - 0.03684424106862959
  - 0.06136631268418024
  - 0.039892623091505736
  - 0.05309208161652068
  train_matthews_corrcoef_micro:
  - 0.7581709547360508
  - 0.7632221306044796
  - 0.7701540462154054
  - 0.7605294979623005
  - 0.7587254679159885
  train_matthews_corrcoef_micro_oob:
  - 0.20433792354247723
  - 0.15518828752019007
  - 0.21470323078141612
  - 0.16304366055930014
  - 0.20020931420949412
  train_matthews_corrcoef_samples:
  - 0.6573159815319565
  - 0.6553589981525809
  - 0.6498280898471962
  - 0.6507133862990284
  - 0.6465471986268473
  train_matthews_corrcoef_samples_oob:
  - 0.07622647980918984
  - 0.06327460807094305
  - 0.10641512689197201
  - 0.06764890177306004
  - 0.08766485197338209
  train_matthews_corrcoef_weighted:
  - 0.6371534504449009
  - 0.6432556422683272
  - 0.6517075818809073
  - 0.6405121730904072
  - 0.6385916158601652
  train_matthews_corrcoef_weighted_oob:
  - 0.12470777071879227
  - 0.07438472565041052
  - 0.12363483741956918
  - 0.08040237276346146
  - 0.10890807351463333
  train_ndgc:
  - 0.9265678843649588
  - 0.9150426154857675
  - 0.9170111224274267
  - 0.9183961809214684
  - 0.9200779081353697
  train_ndgc_oob:
  - 0.7901653991274222
  - 0.7782628727796705
  - 0.7840252995991456
  - 0.7640537492571707
  - 0.7539979519450931
  train_neg_coverage_error:
  - -1.5449101796407185
  - -1.5975609756097562
  - -1.5903614457831325
  - -1.5568862275449102
  - -1.5975609756097562
  train_neg_coverage_error_oob:
  - -2.251497005988024
  - -2.274390243902439
  - -2.1987951807228914
  - -2.3293413173652695
  - -2.341463414634146
  train_neg_hamming_loss_macro:
  - -0.0748502994011976
  - -0.07418699186991871
  - -0.07228915662650602
  - -0.07385229540918165
  - -0.07520325203252033
  train_neg_hamming_loss_macro_oob:
  - -0.1906187624750499
  - -0.19918699186991873
  - -0.19277108433734938
  - -0.1946107784431138
  - -0.19308943089430897
  train_neg_hamming_loss_micro:
  - -0.0748502994011976
  - -0.0741869918699187
  - -0.07228915662650602
  - -0.07385229540918163
  - -0.07520325203252033
  train_neg_hamming_loss_micro_oob:
  - -0.1906187624750499
  - -0.1991869918699187
  - -0.1927710843373494
  - -0.19461077844311378
  - -0.19308943089430894
  train_neg_hamming_loss_samples:
  - -0.0748502994011976
  - -0.0741869918699187
  - -0.07228915662650602
  - -0.07385229540918165
  - -0.07520325203252032
  train_neg_hamming_loss_samples_oob:
  - -0.19061876247504989
  - -0.19918699186991873
  - -0.1927710843373494
  - -0.19461077844311378
  - -0.19308943089430897
  train_neg_hamming_loss_weighted:
  - -0.05807197486215688
  - -0.05396796505278486
  - -0.05025986298133711
  - -0.056692584979295135
  - -0.05786585365853658
  train_neg_hamming_loss_weighted_oob:
  - -0.2939764036283868
  - -0.3079116612061643
  - -0.2951216631230806
  - -0.3041975749992552
  - -0.2984146341463415
  train_neg_label_ranking_loss:
  - -0.06234198270126414
  - -0.07079945799457994
  - -0.06798862115127176
  - -0.06631736526946107
  - -0.07003726287262872
  train_neg_label_ranking_loss_oob:
  - -0.20550565535595475
  - -0.20880758807588073
  - -0.1952309236947791
  - -0.22380239520958084
  - -0.22306910569105692
  train_precision_macro:
  - 0.9251497005988024
  - 0.9258130081300813
  - 0.927710843373494
  - 0.9261477045908184
  - 0.9247967479674797
  train_precision_macro_oob:
  - 0.8093812375249502
  - 0.8008130081300813
  - 0.8072289156626505
  - 0.8053892215568862
  - 0.8069105691056909
  train_precision_micro:
  - 0.9251497005988024
  - 0.9258130081300813
  - 0.927710843373494
  - 0.9261477045908184
  - 0.9247967479674797
  train_precision_micro_oob:
  - 0.8093812375249501
  - 0.8008130081300813
  - 0.8072289156626506
  - 0.8053892215568862
  - 0.806910569105691
  train_precision_samples:
  - 0.9251497005988024
  - 0.9258130081300814
  - 0.927710843373494
  - 0.9261477045908182
  - 0.9247967479674798
  train_precision_samples_oob:
  - 0.8093812375249498
  - 0.8008130081300812
  - 0.8072289156626504
  - 0.8053892215568861
  - 0.8069105691056909
  train_precision_weighted:
  - 0.9419280251378431
  - 0.946032034947215
  - 0.949740137018663
  - 0.9433074150207048
  - 0.9421341463414633
  train_precision_weighted_oob:
  - 0.706023596371613
  - 0.6920883387938356
  - 0.7048783368769194
  - 0.6958024250007447
  - 0.7015853658536585
  train_recall_macro:
  - 0.9251497005988024
  - 0.9258130081300813
  - 0.927710843373494
  - 0.9261477045908184
  - 0.9247967479674797
  train_recall_macro_oob:
  - 0.8093812375249502
  - 0.8008130081300813
  - 0.8072289156626505
  - 0.8053892215568862
  - 0.8069105691056909
  train_recall_micro:
  - 0.9251497005988024
  - 0.9258130081300813
  - 0.927710843373494
  - 0.9261477045908184
  - 0.9247967479674797
  train_recall_micro_oob:
  - 0.8093812375249501
  - 0.8008130081300813
  - 0.8072289156626506
  - 0.8053892215568862
  - 0.806910569105691
  train_recall_samples:
  - 0.9251497005988024
  - 0.9258130081300814
  - 0.927710843373494
  - 0.9261477045908182
  - 0.9247967479674798
  train_recall_samples_oob:
  - 0.8093812375249498
  - 0.8008130081300812
  - 0.8072289156626504
  - 0.8053892215568861
  - 0.8069105691056909
  train_recall_weighted:
  - 0.9419280251378431
  - 0.946032034947215
  - 0.949740137018663
  - 0.9433074150207048
  - 0.9421341463414633
  train_recall_weighted_oob:
  - 0.706023596371613
  - 0.6920883387938356
  - 0.7048783368769194
  - 0.6958024250007447
  - 0.7015853658536585
  train_roc_auc_macro:
  - 0.9962224890196024
  - 0.9960012083569011
  - 0.994712395178197
  - 0.9958009165435215
  - 0.999648382559775
  train_roc_auc_macro_oob:
  - 0.6931861603948896
  - 0.629604597985478
  - 0.6695264685264681
  - 0.6389724114761458
  - 0.6150948365302648
  train_roc_auc_micro:
  - 0.9589047029702971
  - 0.956373941277012
  - 0.9591688948306596
  - 0.9586648530133354
  - 0.9570025510204081
  train_roc_auc_micro_oob:
  - 0.8103341584158416
  - 0.7935355152716621
  - 0.8062425727866904
  - 0.7962000236023379
  - 0.7825573979591836
  train_roc_auc_samples:
  - 0.937658017298736
  - 0.92920054200542
  - 0.9320113788487283
  - 0.933682634730539
  - 0.9299627371273712
  train_roc_auc_samples_oob:
  - 0.7944943446440451
  - 0.791192411924119
  - 0.8047690763052209
  - 0.7761976047904192
  - 0.776930894308943
  train_roc_auc_weighted:
  - 0.9986403498233086
  - 0.9984364414799818
  - 0.9979279195955112
  - 0.9984201181579249
  - 0.9999367088607595
  train_roc_auc_weighted_oob:
  - 0.7190287440991834
  - 0.6369331709473943
  - 0.6666304537968304
  - 0.6615410331663543
  - 0.6022686662708411
start: 2023-12-21 10:01:02.463300
wrapper: null
