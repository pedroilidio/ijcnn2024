active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:58:41.975510
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__9
  params: {}
hash: 6d38901be43d7adf35c3a60b8da542bc7349e1c6b74145220fd391a35baaf7c2
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6d38901_20231221T235645043141_embedding__9_CHD_49.yml
results:
  fit_time:
  - 91.06588339805603
  - 90.71536636352539
  - 90.74450063705444
  - 91.96092987060547
  - 94.50988149642944
  score_time:
  - 6.926028251647949
  - 6.440204620361328
  - 6.717900037765503
  - 7.171201705932617
  - 6.845361709594727
  test_average_precision_macro:
  - 0.5134236127401521
  - 0.5288913961651807
  - 0.48083228025633984
  - 0.5051481242487474
  - 0.5108066764281571
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.674898644091194
  - 0.7204553930254725
  - 0.6627350261538479
  - 0.6816291243105618
  - 0.6352115975417887
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7816592261904761
  - 0.7866080530071357
  - 0.7790690690690691
  - 0.7918450560652395
  - 0.7671661793372321
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6336253277800101
  - 0.6600575460078536
  - 0.5952700009577321
  - 0.6198060586954476
  - 0.606983394781927
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5773809523809524
  - 0.5596330275229358
  - 0.5720720720720721
  - 0.5611620795107034
  - 0.5804093567251462
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5773809523809523
  - 0.5596330275229358
  - 0.5720720720720721
  - 0.5611620795107034
  - 0.5804093567251462
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5773809523809523
  - 0.5596330275229359
  - 0.5720720720720721
  - 0.5611620795107033
  - 0.5804093567251462
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.45754245754245754
  - 0.43144750254841996
  - 0.447226173541963
  - 0.4344966959645859
  - 0.4596552356501008
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.44537171912541607
  - 0.4312168429669945
  - 0.4418733828581714
  - 0.43169228075751387
  - 0.44875897529469105
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.40585774058577406
  - 0.3885350318471338
  - 0.40063091482649843
  - 0.3900106269925611
  - 0.40885684860968075
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4237670068027211
  - 0.40873743993010064
  - 0.4218400218400219
  - 0.40301441677588473
  - 0.42568922305764423
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.31125693390991555
  - 0.2916117524291167
  - 0.3042537790051151
  - 0.2956479009322978
  - 0.3137590972070777
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7816592261904761
  - 0.7957823649337414
  - 0.797087087087087
  - 0.7918450560652397
  - 0.7671661793372322
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.01297498240269205
  - -0.015387094259851996
  - 0.0
  - -0.03021154682950149
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.06347288408353319
  - 0.006653022932265377
  - 0.0
  - -0.01422892597140211
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.009639902924407445
  - 0.002268014637614293
  - 0.0
  - -0.0006331575276777983
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.02286500395439438
  - -0.02724797941848791
  - 0.0
  - -0.053873737353306854
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8567505540637868
  - 0.8592720743535774
  - 0.8526636826374319
  - 0.8696066471927748
  - 0.8439485768086616
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6964285714285716
  - -3.834862385321101
  - -3.7117117117117115
  - -3.853211009174312
  - -3.6578947368421053
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4226190476190476
  - -0.44036697247706424
  - -0.42792792792792794
  - -0.43883792048929665
  - -0.4195906432748538
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4226190476190476
  - -0.44036697247706424
  - -0.42792792792792794
  - -0.43883792048929665
  - -0.4195906432748538
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.42261904761904756
  - -0.44036697247706413
  - -0.4279279279279279
  - -0.43883792048929665
  - -0.41959064327485374
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5424575424575424
  - -0.5685524974515802
  - -0.552773826458037
  - -0.5655033040354142
  - -0.5403447643498991
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.216046626984127
  - -0.2119520897043833
  - -0.2024024024024024
  - -0.2089959225280326
  - -0.22300194931773876
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5773809523809524
  - 0.5596330275229358
  - 0.5720720720720721
  - 0.5611620795107034
  - 0.5804093567251462
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5773809523809523
  - 0.5596330275229358
  - 0.5720720720720721
  - 0.5611620795107034
  - 0.5804093567251462
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5773809523809523
  - 0.5596330275229359
  - 0.5720720720720721
  - 0.5611620795107033
  - 0.5804093567251462
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.45754245754245754
  - 0.43144750254841996
  - 0.447226173541963
  - 0.4344966959645859
  - 0.4596552356501008
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5773809523809524
  - 0.5596330275229358
  - 0.5720720720720721
  - 0.5611620795107034
  - 0.5804093567251462
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5773809523809523
  - 0.5596330275229358
  - 0.5720720720720721
  - 0.5611620795107034
  - 0.5804093567251462
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5773809523809523
  - 0.5596330275229359
  - 0.5720720720720721
  - 0.5611620795107033
  - 0.5804093567251462
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.45754245754245754
  - 0.43144750254841996
  - 0.447226173541963
  - 0.4344966959645859
  - 0.4596552356501008
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5512395048139831
  - 0.5469069453494859
  - 0.506399546197985
  - 0.5300778356939914
  - 0.5278555126148321
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7745389325700207
  - 0.7866670461445051
  - 0.769572224524566
  - 0.7767368501064154
  - 0.7722553296061927
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.783953373015873
  - .nan
  - .nan
  - 0.7910040774719673
  - 0.7769980506822612
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5523216991268516
  - 0.5888477262535304
  - 0.5339274567969391
  - 0.5436186540731996
  - 0.5178567009048319
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.814355149287938
  - 0.8148809715126634
  - 0.8137634548342421
  - 0.8112511430125399
  - 0.8180010945499149
  train_average_precision_macro_oob:
  - 0.5879713159380148
  - 0.607052769340891
  - 0.6022398232495009
  - 0.6237203781905475
  - 0.585434742015357
  train_average_precision_micro:
  - 0.8870855057142008
  - 0.8796640262587911
  - 0.8854868906390836
  - 0.8876437588247977
  - 0.8895376875541615
  train_average_precision_micro_oob:
  - 0.7658024248051358
  - 0.7673293469247939
  - 0.7627528166102733
  - 0.7692995297161618
  - 0.7695207868885294
  train_average_precision_samples:
  - 0.883101329320291
  - 0.8859460637767813
  - 0.8912850350350349
  - 0.8875716243148979
  - 0.8887282690854119
  train_average_precision_samples_oob:
  - 0.8019093303235516
  - 0.7966741405082212
  - 0.8062468718718717
  - 0.8044874190333832
  - 0.8014613252708491
  train_average_precision_weighted:
  - 0.8744893106955647
  - 0.8667077355393498
  - 0.8730668262294294
  - 0.8752553174014314
  - 0.874514873497845
  train_average_precision_weighted_oob:
  - 0.7347123344269835
  - 0.7481474476227755
  - 0.742641903612318
  - 0.7672090097591268
  - 0.7345182398302981
  train_f1_macro:
  - 0.6587659894657637
  - 0.6659192825112107
  - 0.6572822822822822
  - 0.6621823617339312
  - 0.6568405139833712
  train_f1_macro_oob:
  - 0.5756207674943566
  - 0.5878176382660687
  - 0.5780780780780781
  - 0.5844544095665172
  - 0.5782312925170069
  train_f1_micro:
  - 0.6587659894657637
  - 0.6659192825112108
  - 0.6572822822822822
  - 0.6621823617339312
  - 0.6568405139833712
  train_f1_micro_oob:
  - 0.5756207674943566
  - 0.5878176382660688
  - 0.5780780780780781
  - 0.5844544095665172
  - 0.5782312925170068
  train_f1_samples:
  - 0.6587659894657638
  - 0.6659192825112108
  - 0.6572822822822822
  - 0.6621823617339313
  - 0.6568405139833711
  train_f1_samples_oob:
  - 0.5756207674943566
  - 0.5878176382660687
  - 0.5780780780780781
  - 0.5844544095665171
  - 0.5782312925170068
  train_f1_weighted:
  - 0.5924129073940568
  - 0.6023550440590799
  - 0.5895599173716
  - 0.5964203820659106
  - 0.5905197595777758
  train_f1_weighted_oob:
  - 0.45583224012070644
  - 0.4763496033114867
  - 0.46052569570442276
  - 0.4699950696123777
  - 0.4615869055045598
  train_jaccard_macro:
  - 0.5132019293428726
  - 0.520272239379481
  - 0.5115785682201482
  - 0.5168784350049963
  - 0.5112168868846982
  train_jaccard_macro_oob:
  - 0.4432369931947973
  - 0.4522213350893492
  - 0.4448634676658532
  - 0.4500433653056877
  - 0.4446114363172993
  train_jaccard_micro:
  - 0.491164095371669
  - 0.4991596638655462
  - 0.48951635448700026
  - 0.4949720670391061
  - 0.48902644907146875
  train_jaccard_micro_oob:
  - 0.4041204437400951
  - 0.4162476845726383
  - 0.4065469904963041
  - 0.41288278775079196
  - 0.40669856459330145
  train_jaccard_samples:
  - 0.5143296883703203
  - 0.5218566187176054
  - 0.5131059631059631
  - 0.5195494341234251
  - 0.5124510410224696
  train_jaccard_samples_oob:
  - 0.42249909608826086
  - 0.4353842719313572
  - 0.4245817245817246
  - 0.43271504280472894
  - 0.42544099891038667
  train_jaccard_weighted:
  - 0.42424133539873127
  - 0.4340397171551617
  - 0.42120429838591067
  - 0.42802279443360153
  - 0.4223682429240533
  train_jaccard_weighted_oob:
  - 0.30968198524207746
  - 0.3244266757031517
  - 0.3128460567491657
  - 0.3195349464961789
  - 0.3132420432353065
  train_label_ranking_average_precision_score:
  - 0.8898733383496357
  - 0.8904303687095154
  - 0.8935372872872864
  - 0.8942980817140007
  - 0.8955309901738467
  train_label_ranking_average_precision_score_oob:
  - 0.8086813393528955
  - 0.8011584454409554
  - 0.8084991241241231
  - 0.8112138764324858
  - 0.8082640463592835
  train_matthews_corrcoef_macro:
  - 0.144905560805509
  - 0.14925817601541402
  - 0.1436299875908625
  - 0.13485198687775438
  - 0.1427584080987222
  train_matthews_corrcoef_macro_oob:
  - 0.023578157229063427
  - 0.030158619980897774
  - 0.024774138429239295
  - 0.03534140462547059
  - 0.024409529185461246
  train_matthews_corrcoef_micro:
  - 0.3610477168996311
  - 0.37148473841878743
  - 0.35687479272456096
  - 0.36433492340923485
  - 0.3591231285202414
  train_matthews_corrcoef_micro_oob:
  - 0.09122316924858585
  - 0.14435039911646683
  - 0.1040711673291487
  - 0.13107698958238953
  - 0.12052710923502376
  train_matthews_corrcoef_samples:
  - 0.25526537716919645
  - 0.2665097588688967
  - 0.24975854263969138
  - 0.2589605574196508
  - 0.25566278569215445
  train_matthews_corrcoef_samples_oob:
  - 0.01878357845203664
  - 0.04782827554194268
  - 0.026223495113674083
  - 0.03660543215804401
  - 0.030806225980354124
  train_matthews_corrcoef_weighted:
  - 0.2226891697062368
  - 0.23285422889548502
  - 0.22285196132475096
  - 0.21547567597431044
  - 0.22291606516666004
  train_matthews_corrcoef_weighted_oob:
  - 0.038588051382557206
  - 0.05330483356763575
  - 0.04154173659956532
  - 0.059250187605776494
  - 0.04323364645250254
  train_ndgc:
  - 0.9245677340345804
  - 0.9288411818220887
  - 0.9331222594401354
  - 0.9265099705410101
  - 0.9292529183773968
  train_ndgc_oob:
  - 0.8721880849942872
  - 0.8677999589430491
  - 0.8759295233857137
  - 0.8704197820778391
  - 0.8716886702083055
  train_neg_coverage_error:
  - -3.304740406320542
  - -3.2757847533632285
  - -3.2972972972972974
  - -3.2309417040358746
  - -3.292517006802721
  train_neg_coverage_error_oob:
  - -3.715575620767494
  - -3.681614349775785
  - -3.7184684684684686
  - -3.6143497757847536
  - -3.7687074829931975
  train_neg_hamming_loss_macro:
  - -0.34123401053423624
  - -0.33408071748878926
  - -0.3427177177177177
  - -0.33781763826606875
  - -0.3431594860166289
  train_neg_hamming_loss_macro_oob:
  - -0.4243792325056433
  - -0.41218236173393125
  - -0.4219219219219219
  - -0.4155455904334828
  - -0.4217687074829932
  train_neg_hamming_loss_micro:
  - -0.34123401053423624
  - -0.33408071748878926
  - -0.3427177177177177
  - -0.33781763826606875
  - -0.3431594860166289
  train_neg_hamming_loss_micro_oob:
  - -0.42437923250564336
  - -0.41218236173393125
  - -0.4219219219219219
  - -0.4155455904334828
  - -0.4217687074829932
  train_neg_hamming_loss_samples:
  - -0.3412340105342363
  - -0.33408071748878926
  - -0.3427177177177177
  - -0.3378176382660688
  - -0.3431594860166288
  train_neg_hamming_loss_samples_oob:
  - -0.4243792325056433
  - -0.4121823617339312
  - -0.42192192192192196
  - -0.41554559043348277
  - -0.4217687074829932
  train_neg_hamming_loss_weighted:
  - -0.40758709260594317
  - -0.3976449559409201
  - -0.41044008262840004
  - -0.40357961793408936
  - -0.40948024042222425
  train_neg_hamming_loss_weighted_oob:
  - -0.5441677598792936
  - -0.5236503966885133
  - -0.5394743042955772
  - -0.5300049303876223
  - -0.5384130944954402
  train_neg_label_ranking_loss:
  - -0.11166290443942814
  - -0.11253736920777278
  - -0.10961586586586587
  - -0.10865097159940208
  - -0.10680272108843537
  train_neg_label_ranking_loss_oob:
  - -0.19066340606972662
  - -0.1950734927752865
  - -0.19460085085085088
  - -0.18409940209267564
  - -0.19474048878810785
  train_precision_macro:
  - 0.6587659894657637
  - 0.6659192825112107
  - 0.6572822822822822
  - 0.6621823617339312
  - 0.6568405139833712
  train_precision_macro_oob:
  - 0.5756207674943566
  - 0.5878176382660687
  - 0.5780780780780781
  - 0.5844544095665172
  - 0.5782312925170069
  train_precision_micro:
  - 0.6587659894657637
  - 0.6659192825112108
  - 0.6572822822822822
  - 0.6621823617339312
  - 0.6568405139833712
  train_precision_micro_oob:
  - 0.5756207674943566
  - 0.5878176382660688
  - 0.5780780780780781
  - 0.5844544095665172
  - 0.5782312925170068
  train_precision_samples:
  - 0.6587659894657638
  - 0.6659192825112108
  - 0.6572822822822822
  - 0.6621823617339313
  - 0.6568405139833711
  train_precision_samples_oob:
  - 0.5756207674943566
  - 0.5878176382660687
  - 0.5780780780780781
  - 0.5844544095665171
  - 0.5782312925170068
  train_precision_weighted:
  - 0.5924129073940568
  - 0.6023550440590799
  - 0.5895599173716
  - 0.5964203820659106
  - 0.5905197595777758
  train_precision_weighted_oob:
  - 0.45583224012070644
  - 0.4763496033114867
  - 0.46052569570442276
  - 0.4699950696123777
  - 0.4615869055045598
  train_recall_macro:
  - 0.6587659894657637
  - 0.6659192825112107
  - 0.6572822822822822
  - 0.6621823617339312
  - 0.6568405139833712
  train_recall_macro_oob:
  - 0.5756207674943566
  - 0.5878176382660687
  - 0.5780780780780781
  - 0.5844544095665172
  - 0.5782312925170069
  train_recall_micro:
  - 0.6587659894657637
  - 0.6659192825112108
  - 0.6572822822822822
  - 0.6621823617339312
  - 0.6568405139833712
  train_recall_micro_oob:
  - 0.5756207674943566
  - 0.5878176382660688
  - 0.5780780780780781
  - 0.5844544095665172
  - 0.5782312925170068
  train_recall_samples:
  - 0.6587659894657638
  - 0.6659192825112108
  - 0.6572822822822822
  - 0.6621823617339313
  - 0.6568405139833711
  train_recall_samples_oob:
  - 0.5756207674943566
  - 0.5878176382660687
  - 0.5780780780780781
  - 0.5844544095665171
  - 0.5782312925170068
  train_recall_weighted:
  - 0.5924129073940568
  - 0.6023550440590799
  - 0.5895599173716
  - 0.5964203820659106
  - 0.5905197595777758
  train_recall_weighted_oob:
  - 0.45583224012070644
  - 0.4763496033114867
  - 0.46052569570442276
  - 0.4699950696123777
  - 0.4615869055045598
  train_roc_auc_macro:
  - 0.8064150572168818
  - 0.8065669699552779
  - 0.7985113613390493
  - 0.8159781040361649
  - 0.8260420076890416
  train_roc_auc_macro_oob:
  - 0.6502794065304477
  - 0.6607984323583999
  - 0.6709083449498069
  - 0.6545219834214957
  - 0.6725122089359113
  train_roc_auc_micro:
  - 0.8915294860430114
  - 0.8876200496631307
  - 0.8923065473026135
  - 0.8934737478470155
  - 0.8944019852849192
  train_roc_auc_micro_oob:
  - 0.8126488960913045
  - 0.8137501369387793
  - 0.8136700078563264
  - 0.817506188048227
  - 0.8101737124304322
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.81247920605077
  - 0.8008476553002275
  - 0.8091656666952294
  - 0.8103847314448117
  - 0.8149775201893017
  train_roc_auc_weighted_oob:
  - 0.7066277590309173
  - 0.7117205496103828
  - 0.707792406025889
  - 0.7168503467663655
  - 0.7084936823242084
start: 2023-12-21 23:56:45.043141
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
