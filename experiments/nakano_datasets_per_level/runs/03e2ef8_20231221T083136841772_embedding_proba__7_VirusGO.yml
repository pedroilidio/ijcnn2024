active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T8AMzMzMzPjv4CZmZmZmfm/QDMzMzMzC0CAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:32:20.729176
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__7
  params: {}
hash: 03e2ef8a3f0d1b99430287ced18dae530c3d0ac228092d083a964568570dd797
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/03e2ef8_20231221T083136841772_embedding_proba__7_VirusGO.yml
results:
  fit_time:
  - 30.593053340911865
  - 30.725511074066162
  - 30.32536482810974
  - 30.011751174926758
  - 30.849782466888428
  score_time:
  - 4.567830801010132
  - 4.685269594192505
  - 4.388479471206665
  - 4.387787103652954
  - 4.6123738288879395
  test_average_precision_macro:
  - 0.9253693434904734
  - 0.9721165793251362
  - 0.9422185204141537
  - 0.8509753641330184
  - 0.8755475804921163
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8681815243821009
  - 0.9282297373524848
  - 0.8993377958062353
  - 0.9182550439763578
  - 0.8377867723368003
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9512195121951219
  - 0.9682539682539681
  - 0.9612403100775193
  - 0.9416666666666667
  - 0.9174418604651163
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8965996284417337
  - 0.9502958405618253
  - 0.924756097083542
  - 0.9100269482932526
  - 0.8452675521629264
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8211382113821138
  - 0.8055555555555555
  - 0.8178294573643411
  - 0.7807017543859649
  - 0.810077519379845
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8211382113821138
  - 0.8055555555555556
  - 0.8178294573643411
  - 0.7807017543859649
  - 0.810077519379845
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.821138211382114
  - 0.8055555555555558
  - 0.8178294573643412
  - 0.7807017543859648
  - 0.8100775193798452
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.74
  - 0.6833333333333332
  - 0.7200182398540812
  - 0.6526315789473685
  - 0.7131782945736435
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7125456816858285
  - 0.7006563578675779
  - 0.7110288932243778
  - 0.67004847004847
  - 0.7022494398506752
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.696551724137931
  - 0.6744186046511628
  - 0.6918032786885245
  - 0.6402877697841727
  - 0.6807817589576547
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7090592334494774
  - 0.6802721088435375
  - 0.6976744186046513
  - 0.6491228070175441
  - 0.6921373200442968
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6007394836225926
  - 0.537657473588787
  - 0.5776558535063442
  - 0.5045789765789767
  - 0.5723197669214868
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9512195121951219
  - 0.9682539682539681
  - 0.9612403100775193
  - 0.9416666666666667
  - 0.9174418604651162
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10895246377300018
  - 0.03156475079494043
  - 0.08559577024774745
  - 0.0
  - 0.03624458131686331
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.31304951684997057
  - 0.12686850487761128
  - 0.2528210449668659
  - 0.0
  - 0.18171486858152588
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14634146341463414
  - 0.023809523809523808
  - 0.07592816428063609
  - 0.0
  - 0.08372093023255814
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.21294607619067127
  - 0.06439209162167847
  - 0.17751994465596455
  - 0.0
  - 0.07248916263372662
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9644807363541832
  - 0.9773964414933248
  - 0.9723839546479666
  - 0.9600503144616681
  - 0.9419416145517546
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3414634146341464
  - -1.2857142857142858
  - -1.2790697674418605
  - -1.6842105263157894
  - -1.441860465116279
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17886178861788618
  - -0.19444444444444442
  - -0.1821705426356589
  - -0.2192982456140351
  - -0.18992248062015504
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17886178861788618
  - -0.19444444444444445
  - -0.1821705426356589
  - -0.21929824561403508
  - -0.18992248062015504
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17886178861788618
  - -0.19444444444444442
  - -0.18217054263565888
  - -0.21929824561403505
  - -0.18992248062015502
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26
  - -0.31666666666666665
  - -0.27998176014591886
  - -0.34736842105263166
  - -0.2868217054263566
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02378048780487805
  - -0.017261904761904763
  - -0.01686046511627907
  - -0.061476608187134504
  - -0.04470284237726098
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8211382113821138
  - 0.8055555555555555
  - 0.8178294573643411
  - 0.7807017543859649
  - 0.810077519379845
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8211382113821138
  - 0.8055555555555556
  - 0.8178294573643411
  - 0.7807017543859649
  - 0.810077519379845
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.821138211382114
  - 0.8055555555555558
  - 0.8178294573643412
  - 0.7807017543859648
  - 0.8100775193798452
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.74
  - 0.6833333333333332
  - 0.7200182398540812
  - 0.6526315789473685
  - 0.7131782945736435
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8211382113821138
  - 0.8055555555555555
  - 0.8178294573643411
  - 0.7807017543859649
  - 0.810077519379845
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8211382113821138
  - 0.8055555555555556
  - 0.8178294573643411
  - 0.7807017543859649
  - 0.810077519379845
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.821138211382114
  - 0.8055555555555558
  - 0.8178294573643412
  - 0.7807017543859648
  - 0.8100775193798452
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.74
  - 0.6833333333333332
  - 0.7200182398540812
  - 0.6526315789473685
  - 0.7131782945736435
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9672926603073662
  - 0.9829802106027596
  - 0.9785964471258589
  - 0.9422777175386283
  - 0.9577946563240681
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9729591836734695
  - 0.984009900990099
  - 0.9779293359856019
  - 0.9587640449438203
  - 0.9676044330775789
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.976219512195122
  - 0.9827380952380952
  - 0.9831395348837209
  - 0.9385233918128656
  - 0.9552971576227389
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9520945945945946
  - 0.9652333333333334
  - 0.968456510809452
  - 0.9594334507996747
  - 0.9407993966817497
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9526466071518443
  - 0.9297322881596322
  - 0.9524894240383106
  - 0.9535543919294844
  - 0.9528094619936264
  train_average_precision_macro_oob:
  - 0.9215281040923768
  - 0.8903518965571106
  - 0.922022956251658
  - 0.9209321089623926
  - 0.917837121580428
  train_average_precision_micro:
  - 0.9606083634050937
  - 0.9307426030405486
  - 0.9542039856022608
  - 0.9318496910560111
  - 0.9498915801276001
  train_average_precision_micro_oob:
  - 0.9282142838601809
  - 0.8840806036796183
  - 0.924388477806505
  - 0.8775817849353285
  - 0.908249084878243
  train_average_precision_samples:
  - 0.9728915662650602
  - 0.9714141414141414
  - 0.9607723577235772
  - 0.9568047337278106
  - 0.9740853658536586
  train_average_precision_samples_oob:
  - 0.9580321285140562
  - 0.9475757575757575
  - 0.9453252032520325
  - 0.9464497041420118
  - 0.9517276422764227
  train_average_precision_weighted:
  - 0.9606772575108171
  - 0.935781892749245
  - 0.960774627107483
  - 0.94734491172033
  - 0.9556033453264486
  train_average_precision_weighted_oob:
  - 0.9331191451577361
  - 0.8947634605293929
  - 0.9346111308492142
  - 0.9044085639243622
  - 0.92086320040812
  train_f1_macro:
  - 0.8373493975903613
  - 0.8212121212121213
  - 0.8241869918699187
  - 0.8323471400394477
  - 0.8404471544715446
  train_f1_macro_oob:
  - 0.823293172690763
  - 0.8121212121212121
  - 0.8048780487804877
  - 0.81163708086785
  - 0.8130081300813008
  train_f1_micro:
  - 0.8373493975903614
  - 0.8212121212121212
  - 0.8241869918699187
  - 0.8323471400394478
  - 0.8404471544715447
  train_f1_micro_oob:
  - 0.8232931726907631
  - 0.8121212121212121
  - 0.8048780487804879
  - 0.8116370808678501
  - 0.8130081300813008
  train_f1_samples:
  - 0.8373493975903614
  - 0.8212121212121208
  - 0.8241869918699185
  - 0.8323471400394477
  - 0.8404471544715446
  train_f1_samples_oob:
  - 0.8232931726907629
  - 0.8121212121212121
  - 0.8048780487804876
  - 0.81163708086785
  - 0.8130081300813007
  train_f1_weighted:
  - 0.7616605033997377
  - 0.7346834683468345
  - 0.7384722727824293
  - 0.7528560548362528
  - 0.7693847834000729
  train_f1_weighted_oob:
  - 0.7327329118454015
  - 0.7162316231623163
  - 0.6992476641184322
  - 0.7106743218700569
  - 0.7131416090280306
  train_jaccard_macro:
  - 0.7327873981372367
  - 0.7128909311057324
  - 0.7167180013313211
  - 0.7266915832840491
  - 0.7361668631389121
  train_jaccard_macro_oob:
  - 0.7167099760479726
  - 0.7030040325932587
  - 0.695777351332373
  - 0.7036870563222418
  - 0.7049462634601954
  train_jaccard_micro:
  - 0.7202072538860104
  - 0.6966580976863753
  - 0.7009507346585998
  - 0.7128378378378378
  - 0.7248028045574058
  train_jaccard_micro_oob:
  - 0.6996587030716723
  - 0.6836734693877551
  - 0.673469387755102
  - 0.6829875518672199
  - 0.684931506849315
  train_jaccard_samples:
  - 0.7336488812392428
  - 0.7070707070707072
  - 0.7131242740998839
  - 0.7209072978303748
  - 0.7388211382113822
  train_jaccard_samples_oob:
  - 0.7121342512908778
  - 0.6935064935064936
  - 0.6811846689895471
  - 0.6900535362073824
  - 0.6948315911730547
  train_jaccard_weighted:
  - 0.6238090380232115
  - 0.5926171567406591
  - 0.5964075972982708
  - 0.6138916140781052
  - 0.6329306746744044
  train_jaccard_weighted_oob:
  - 0.5907380002019533
  - 0.5725573627418924
  - 0.5538696737706704
  - 0.567061356969635
  - 0.5689773915549065
  train_label_ranking_average_precision_score:
  - 0.9728915662650602
  - 0.9714141414141414
  - 0.9607723577235772
  - 0.9568047337278106
  - 0.9740853658536586
  train_label_ranking_average_precision_score_oob:
  - 0.9580321285140562
  - 0.9475757575757577
  - 0.9453252032520325
  - 0.9464497041420118
  - 0.9517276422764227
  train_matthews_corrcoef_macro:
  - 0.14627317061393091
  - 0.11391688441614382
  - 0.12089058138598384
  - 0.12840196772010223
  - 0.15500629898132748
  train_matthews_corrcoef_macro_oob:
  - 0.11140515852329376
  - 0.08509066096471336
  - 0.06638735063267982
  - 0.06807351922171402
  - 0.08796937030024611
  train_matthews_corrcoef_micro:
  - 0.40554179212417285
  - 0.31790237442250874
  - 0.33777921483810097
  - 0.35973067176672663
  - 0.4270170970151196
  train_matthews_corrcoef_micro_oob:
  - 0.3220846936236375
  - 0.25001628705422896
  - 0.189627709466402
  - 0.20477151154790635
  - 0.25862867141163737
  train_matthews_corrcoef_samples:
  - 0.22103674571266918
  - 0.13479967750122432
  - 0.15839655929045526
  - 0.15397586932803425
  - 0.24588143488010217
  train_matthews_corrcoef_samples_oob:
  - 0.1487793168439821
  - 0.0929080128977861
  - 0.04815467436646968
  - 0.059939775906122504
  - 0.09957208614716283
  train_matthews_corrcoef_weighted:
  - 0.2994864622783226
  - 0.22982710821921332
  - 0.24548561237513833
  - 0.26084615578920484
  - 0.3166405862567486
  train_matthews_corrcoef_weighted_oob:
  - 0.22761964532116086
  - 0.17119343417938554
  - 0.13484511736230012
  - 0.13772988537944406
  - 0.17900128422609887
  train_ndgc:
  - 0.9814192583393779
  - 0.9798563284031788
  - 0.9721819521436934
  - 0.9698363344669622
  - 0.9811755742884603
  train_ndgc_oob:
  - 0.9709337913477426
  - 0.9639592617219302
  - 0.9611440119417876
  - 0.9625589269898601
  - 0.9650549659981191
  train_neg_coverage_error:
  - -1.3433734939759037
  - -1.3333333333333333
  - -1.3719512195121952
  - -1.331360946745562
  - -1.3109756097560976
  train_neg_coverage_error_oob:
  - -1.391566265060241
  - -1.4424242424242424
  - -1.4146341463414633
  - -1.3727810650887573
  - -1.3658536585365855
  train_neg_hamming_loss_macro:
  - -0.16265060240963855
  - -0.1787878787878788
  - -0.17581300813008136
  - -0.16765285996055226
  - -0.1595528455284553
  train_neg_hamming_loss_macro_oob:
  - -0.17670682730923695
  - -0.18787878787878787
  - -0.19512195121951223
  - -0.1883629191321499
  - -0.1869918699186992
  train_neg_hamming_loss_micro:
  - -0.16265060240963855
  - -0.1787878787878788
  - -0.1758130081300813
  - -0.16765285996055226
  - -0.15955284552845528
  train_neg_hamming_loss_micro_oob:
  - -0.17670682730923695
  - -0.18787878787878787
  - -0.1951219512195122
  - -0.1883629191321499
  - -0.18699186991869918
  train_neg_hamming_loss_samples:
  - -0.16265060240963855
  - -0.1787878787878788
  - -0.17581300813008127
  - -0.1676528599605523
  - -0.15955284552845528
  train_neg_hamming_loss_samples_oob:
  - -0.17670682730923695
  - -0.18787878787878787
  - -0.19512195121951217
  - -0.18836291913214992
  - -0.18699186991869918
  train_neg_hamming_loss_weighted:
  - -0.2383394966002624
  - -0.2653165316531654
  - -0.26152772721757067
  - -0.24714394516374716
  - -0.23061521659992723
  train_neg_hamming_loss_weighted_oob:
  - -0.2672670881545986
  - -0.2837683768376838
  - -0.3007523358815678
  - -0.28932567812994314
  - -0.2868583909719694
  train_neg_label_ranking_loss:
  - -0.02100066934404284
  - -0.01930976430976431
  - -0.026219512195121957
  - -0.02381656804733728
  - -0.016463414634146342
  train_neg_label_ranking_loss_oob:
  - -0.029116465863453813
  - -0.036043771043771045
  - -0.03429878048780488
  - -0.03121301775147929
  - -0.02682926829268293
  train_precision_macro:
  - 0.8373493975903613
  - 0.8212121212121213
  - 0.8241869918699187
  - 0.8323471400394477
  - 0.8404471544715446
  train_precision_macro_oob:
  - 0.823293172690763
  - 0.8121212121212121
  - 0.8048780487804877
  - 0.81163708086785
  - 0.8130081300813008
  train_precision_micro:
  - 0.8373493975903614
  - 0.8212121212121212
  - 0.8241869918699187
  - 0.8323471400394478
  - 0.8404471544715447
  train_precision_micro_oob:
  - 0.8232931726907631
  - 0.8121212121212121
  - 0.8048780487804879
  - 0.8116370808678501
  - 0.8130081300813008
  train_precision_samples:
  - 0.8373493975903614
  - 0.8212121212121208
  - 0.8241869918699185
  - 0.8323471400394477
  - 0.8404471544715446
  train_precision_samples_oob:
  - 0.8232931726907629
  - 0.8121212121212121
  - 0.8048780487804876
  - 0.81163708086785
  - 0.8130081300813007
  train_precision_weighted:
  - 0.7616605033997377
  - 0.7346834683468345
  - 0.7384722727824293
  - 0.7528560548362528
  - 0.7693847834000729
  train_precision_weighted_oob:
  - 0.7327329118454015
  - 0.7162316231623163
  - 0.6992476641184322
  - 0.7106743218700569
  - 0.7131416090280306
  train_recall_macro:
  - 0.8373493975903613
  - 0.8212121212121213
  - 0.8241869918699187
  - 0.8323471400394477
  - 0.8404471544715446
  train_recall_macro_oob:
  - 0.823293172690763
  - 0.8121212121212121
  - 0.8048780487804877
  - 0.81163708086785
  - 0.8130081300813008
  train_recall_micro:
  - 0.8373493975903614
  - 0.8212121212121212
  - 0.8241869918699187
  - 0.8323471400394478
  - 0.8404471544715447
  train_recall_micro_oob:
  - 0.8232931726907631
  - 0.8121212121212121
  - 0.8048780487804879
  - 0.8116370808678501
  - 0.8130081300813008
  train_recall_samples:
  - 0.8373493975903614
  - 0.8212121212121208
  - 0.8241869918699185
  - 0.8323471400394477
  - 0.8404471544715446
  train_recall_samples_oob:
  - 0.8232931726907629
  - 0.8121212121212121
  - 0.8048780487804876
  - 0.81163708086785
  - 0.8130081300813007
  train_recall_weighted:
  - 0.7616605033997377
  - 0.7346834683468345
  - 0.7384722727824293
  - 0.7528560548362528
  - 0.7693847834000729
  train_recall_weighted_oob:
  - 0.7327329118454015
  - 0.7162316231623163
  - 0.6992476641184322
  - 0.7106743218700569
  - 0.7131416090280306
  train_roc_auc_macro:
  - 0.9794545975441458
  - 0.9679707082478144
  - 0.9823637564099928
  - 0.9842866580699615
  - 0.9810155401785003
  train_roc_auc_macro_oob:
  - 0.971656204148326
  - 0.9618450503511569
  - 0.9739536413950178
  - 0.9748444696248101
  - 0.9735504367950183
  train_roc_auc_micro:
  - 0.9844159164027234
  - 0.9769908780218124
  - 0.9830858478997097
  - 0.9825391406135687
  - 0.9843979337031319
  train_roc_auc_micro_oob:
  - 0.9755655036536399
  - 0.9669862290797607
  - 0.9750227152869115
  - 0.973253914061357
  - 0.9763888094648088
  train_roc_auc_samples:
  - 0.9789993306559571
  - 0.9806902356902356
  - 0.973780487804878
  - 0.9761834319526629
  - 0.9835365853658538
  train_roc_auc_samples_oob:
  - 0.9708835341365463
  - 0.9639562289562291
  - 0.9657012195121951
  - 0.9687869822485209
  - 0.973170731707317
  train_roc_auc_weighted:
  - 0.9797385625042095
  - 0.9669177881620916
  - 0.981280410346824
  - 0.9764751927681457
  - 0.9784875405593189
  train_roc_auc_weighted_oob:
  - 0.9716440610897823
  - 0.9554823936424656
  - 0.9703646404938019
  - 0.9634305059465222
  - 0.966853607906832
start: 2023-12-21 08:31:36.841772
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
