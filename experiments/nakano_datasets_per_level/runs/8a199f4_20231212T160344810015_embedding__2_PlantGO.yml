active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADQzMzMz4z8ANDMzMzPjPwBmZmZmZva/ADQzMzMz4z8AmJmZmZnZvw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:04:14.630164
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 8a199f424084526f3b93834257bb3b88b7847be9d56711cbc5131a2a1befaf89
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8a199f4_20231212T160344810015_embedding__2_PlantGO.yml
results:
  fit_time:
  - 8.853723049163818
  - 8.769896268844604
  - 8.858464241027832
  - 8.613204956054688
  - 10.632746934890747
  score_time:
  - 3.6269445419311523
  - 3.3926639556884766
  - 3.619910478591919
  - 3.544633626937866
  - 3.3797547817230225
  test_average_precision_macro:
  - 0.8089882929797608
  - 0.8706616190909912
  - 0.7770907173772317
  - 0.8324106247703846
  - 0.787380562524784
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8297949376104816
  - 0.8709088617980814
  - 0.8160258358260133
  - 0.8385117104538954
  - 0.8172952316209684
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8864491064491063
  - 0.905042735042735
  - 0.8660041312325575
  - 0.8823789173789174
  - 0.8592184601113173
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8663691842127454
  - 0.8936847469527801
  - 0.8662206674398806
  - 0.8805492723184105
  - 0.854990966254345
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9512820512820513
  - 0.9491452991452992
  - 0.9454314720812182
  - 0.9504273504273505
  - 0.9464285714285715
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9512820512820512
  - 0.9491452991452991
  - 0.9454314720812182
  - 0.9504273504273504
  - 0.9464285714285714
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9512820512820512
  - 0.949145299145299
  - 0.9454314720812182
  - 0.9504273504273504
  - 0.9464285714285714
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9321801006011531
  - 0.9276704338315712
  - 0.9223088105621887
  - 0.9282297830374753
  - 0.9216097654014878
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9085270085403298
  - 0.9050006811921562
  - 0.8984040927193976
  - 0.9075987246373116
  - 0.900276579801757
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9070904645476773
  - 0.9032126880845872
  - 0.8965102286401926
  - 0.9055374592833876
  - 0.8983050847457628
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9122006198929274
  - 0.9081431389123696
  - 0.9018910023986164
  - 0.9104874612566919
  - 0.9032294236375867
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8745112320008495
  - 0.8671326562804632
  - 0.8580599664803263
  - 0.8685693529941942
  - 0.8567370227639671
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8864491064491063
  - 0.905042735042735
  - 0.8660041312325578
  - 0.8823789173789174
  - 0.8592184601113171
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.35017674862548015
  - 0.3025324896691457
  - 0.2763925586789005
  - 0.33841849359596704
  - 0.3081070864831464
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6561729996579421
  - 0.6416184823241435
  - 0.6103950213357033
  - 0.6469936933496329
  - 0.6220954673941238
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5194632146672666
  - 0.493083820022556
  - 0.47184918824299676
  - 0.5024078293465654
  - 0.4684976773819473
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5921057547622728
  - 0.5485061750655118
  - 0.521712537057689
  - 0.5712346760837478
  - 0.5401023435421956
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9158955994953719
  - 0.9303592016761252
  - 0.900778407773917
  - 0.9137902310996114
  - 0.8953903658905016
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.471794871794872
  - -1.3948717948717948
  - -1.649746192893401
  - -1.4564102564102563
  - -1.6326530612244898
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04871794871794872
  - -0.05085470085470085
  - -0.054568527918781716
  - -0.04957264957264957
  - -0.053571428571428575
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04871794871794872
  - -0.050854700854700854
  - -0.05456852791878172
  - -0.04957264957264957
  - -0.05357142857142857
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04871794871794872
  - -0.05085470085470084
  - -0.054568527918781716
  - -0.04957264957264958
  - -0.05357142857142857
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06781989939884676
  - -0.07232956616842873
  - -0.0776911894378113
  - -0.07177021696252465
  - -0.07839023459851231
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03377622377622377
  - -0.026736596736596736
  - -0.047749918815908655
  - -0.032920659587326255
  - -0.046683673469387746
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9512820512820513
  - 0.9491452991452992
  - 0.9454314720812182
  - 0.9504273504273505
  - 0.9464285714285715
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9512820512820512
  - 0.9491452991452991
  - 0.9454314720812182
  - 0.9504273504273504
  - 0.9464285714285714
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9512820512820512
  - 0.949145299145299
  - 0.9454314720812182
  - 0.9504273504273504
  - 0.9464285714285714
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9321801006011531
  - 0.9276704338315712
  - 0.9223088105621887
  - 0.9282297830374753
  - 0.9216097654014878
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9512820512820513
  - 0.9491452991452992
  - 0.9454314720812182
  - 0.9504273504273505
  - 0.9464285714285715
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9512820512820512
  - 0.9491452991452991
  - 0.9454314720812182
  - 0.9504273504273504
  - 0.9464285714285714
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9512820512820512
  - 0.949145299145299
  - 0.9454314720812182
  - 0.9504273504273504
  - 0.9464285714285714
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9321801006011531
  - 0.9276704338315712
  - 0.9223088105621887
  - 0.9282297830374753
  - 0.9216097654014878
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9711808537492677
  - 0.9853713842412418
  - 0.9586682237581975
  - 0.9713801285390099
  - 0.971231305549381
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9724841090397167
  - 0.9820566360728287
  - 0.9626835864092037
  - 0.9739500649444364
  - 0.9687322416792705
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9662237762237761
  - 0.9732634032634032
  - 0.9522500811840913
  - 0.9670793404126738
  - 0.9533163265306124
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9763190327133134
  - 0.9811728422728266
  - 0.9715381578814397
  - 0.9731408939332439
  - 0.9685164490961744
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.962691642545967
  - 0.9459494885403327
  - 0.9571707134428672
  - 0.9566946393432741
  - 0.9534873273903305
  train_average_precision_macro_oob:
  - 0.7772661704286431
  - 0.7437007786318676
  - 0.7787467842355872
  - 0.7723073452092263
  - 0.7532496051570474
  train_average_precision_micro:
  - 0.951597736525427
  - 0.9477165105185692
  - 0.9475379784635459
  - 0.9566098021100522
  - 0.951655040081009
  train_average_precision_micro_oob:
  - 0.825741228403689
  - 0.8144760840920062
  - 0.821256457984803
  - 0.8293620009808608
  - 0.8274289313490458
  train_average_precision_samples:
  - 0.9588122605363985
  - 0.9612601106853982
  - 0.9605206999573198
  - 0.9600893997445722
  - 0.9574168797953965
  train_average_precision_samples_oob:
  - 0.8711691352495948
  - 0.8611643713176279
  - 0.8793717308442021
  - 0.8786090240113229
  - 0.8819729077401711
  train_average_precision_weighted:
  - 0.9718881776392857
  - 0.9645202791468396
  - 0.96847512059828
  - 0.9723497327423967
  - 0.9702339177347602
  train_average_precision_weighted_oob:
  - 0.8543809667062696
  - 0.8385959554893846
  - 0.8463338618852903
  - 0.8522769098257345
  - 0.8503866935176589
  train_f1_macro:
  - 0.9614729672200935
  - 0.9606215410813114
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.9637681159420289
  train_f1_macro_oob:
  - 0.9431673052362707
  - 0.9427415921668797
  - 0.9452624839948783
  - 0.945934440187314
  - 0.9456521739130435
  train_f1_micro:
  - 0.9614729672200937
  - 0.9606215410813111
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.9637681159420289
  train_f1_micro_oob:
  - 0.9431673052362708
  - 0.9427415921668795
  - 0.9452624839948783
  - 0.9459344401873138
  - 0.9456521739130435
  train_f1_samples:
  - 0.9614729672200936
  - 0.9606215410813113
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.963768115942029
  train_f1_samples_oob:
  - 0.9431673052362708
  - 0.9427415921668795
  - 0.9452624839948783
  - 0.9459344401873137
  - 0.9456521739130435
  train_f1_weighted:
  - 0.9528047245092978
  - 0.9520104350141939
  - 0.9550259883637824
  - 0.9539340260343396
  - 0.9583205354726291
  train_f1_weighted_oob:
  - 0.917869079644575
  - 0.914812998977078
  - 0.9202100966846207
  - 0.9241798489447393
  - 0.9229224130328346
  train_jaccard_macro:
  - 0.9262451389320443
  - 0.9247036421952157
  - 0.9292974526574994
  - 0.926664171924832
  - 0.930362832383668
  train_jaccard_macro_oob:
  - 0.8944957704574593
  - 0.8938275729001747
  - 0.8985324931060085
  - 0.8992431905015318
  - 0.8988613279495299
  train_jaccard_micro:
  - 0.9258044681287149
  - 0.924226909686668
  - 0.9287919324963985
  - 0.9261992619926199
  - 0.9300699300699301
  train_jaccard_micro_oob:
  - 0.8924471299093656
  - 0.8916851218039058
  - 0.896206373292868
  - 0.8974151857835219
  - 0.8969072164948454
  train_jaccard_samples:
  - 0.9302878475292268
  - 0.9286598459012252
  - 0.9333567840610094
  - 0.9307425652253238
  - 0.934470644445069
  train_jaccard_samples_oob:
  - 0.8971664350974696
  - 0.8966050552257449
  - 0.900966638994808
  - 0.9022244677417091
  - 0.9017284505775556
  train_jaccard_weighted:
  - 0.9103361631173458
  - 0.9089627706866662
  - 0.9145537836117222
  - 0.9124152650330308
  - 0.9202749830626082
  train_jaccard_weighted_oob:
  - 0.8502295626971219
  - 0.8450008626331122
  - 0.8547946187004388
  - 0.8609875845471787
  - 0.8590083626258684
  train_label_ranking_average_precision_score:
  - 0.9588122605363986
  - 0.9612601106853982
  - 0.9605206999573198
  - 0.9600893997445722
  - 0.9574168797953965
  train_label_ranking_average_precision_score_oob:
  - 0.8711691352495957
  - 0.8611643713176284
  - 0.8793717308442028
  - 0.878609024011323
  - 0.8819729077401719
  train_matthews_corrcoef_macro:
  - 0.4403624711795637
  - 0.395383202466341
  - 0.4311891689708223
  - 0.4613510455177308
  - 0.4105393134374749
  train_matthews_corrcoef_macro_oob:
  - 0.23320790847485331
  - 0.275931744633566
  - 0.29769157159076864
  - 0.27238989050749984
  - 0.25625728760777877
  train_matthews_corrcoef_micro:
  - 0.7402496715119369
  - 0.7330603801842651
  - 0.7517840921098105
  - 0.7421310291508252
  - 0.7563235154815472
  train_matthews_corrcoef_micro_oob:
  - 0.5880244084968438
  - 0.5830939103199682
  - 0.6060789511552512
  - 0.6135626605316177
  - 0.6083987655497878
  train_matthews_corrcoef_samples:
  - 0.6180179686160798
  - 0.6059915200484606
  - 0.6415034765121761
  - 0.6281283822275368
  - 0.6410318956889217
  train_matthews_corrcoef_samples_oob:
  - 0.41860101942786987
  - 0.4203137100744173
  - 0.4448445088806344
  - 0.4522515937892064
  - 0.4451962547498317
  train_matthews_corrcoef_weighted:
  - 0.6846680644816981
  - 0.6688594247018754
  - 0.695609751595138
  - 0.6924950175047256
  - 0.6896177189940849
  train_matthews_corrcoef_weighted_oob:
  - 0.48865476749349995
  - 0.5029150647973759
  - 0.5268765592048834
  - 0.5264381331988724
  - 0.512534756471056
  train_ndgc:
  - 0.9696584575010727
  - 0.9714856306276033
  - 0.9709980458346431
  - 0.9704578314001635
  - 0.9685666656381683
  train_ndgc_oob:
  - 0.9047944914019165
  - 0.8971835184813141
  - 0.9106813963141063
  - 0.9101201937575837
  - 0.9125970219149138
  train_neg_coverage_error:
  - -1.1787994891443168
  - -1.169859514687101
  - -1.1677336747759284
  - -1.173690932311622
  - -1.1777493606138107
  train_neg_coverage_error_oob:
  - -1.5874840357598978
  - -1.6143039591315453
  - -1.5672215108834826
  - -1.5466155810983397
  - -1.5601023017902813
  train_neg_hamming_loss_macro:
  - -0.038527032779906344
  - -0.039378458918688804
  - -0.036918480580452405
  - -0.038314176245210725
  - -0.036231884057971016
  train_neg_hamming_loss_macro_oob:
  - -0.05683269476372924
  - -0.05725840783312047
  - -0.05473751600512164
  - -0.054065559812686244
  - -0.05434782608695651
  train_neg_hamming_loss_micro:
  - -0.038527032779906344
  - -0.039378458918688804
  - -0.03691848058045241
  - -0.038314176245210725
  - -0.036231884057971016
  train_neg_hamming_loss_micro_oob:
  - -0.05683269476372925
  - -0.05725840783312048
  - -0.05473751600512164
  - -0.05406555981268625
  - -0.05434782608695652
  train_neg_hamming_loss_samples:
  - -0.03852703277990634
  - -0.039378458918688804
  - -0.036918480580452405
  - -0.038314176245210725
  - -0.03623188405797101
  train_neg_hamming_loss_samples_oob:
  - -0.05683269476372925
  - -0.05725840783312047
  - -0.05473751600512164
  - -0.054065559812686244
  - -0.05434782608695652
  train_neg_hamming_loss_weighted:
  - -0.04719527549070224
  - -0.047989564985806206
  - -0.04497401163621764
  - -0.04606597396566048
  - -0.04167946452737121
  train_neg_hamming_loss_weighted_oob:
  - -0.08213092035542513
  - -0.08518700102292193
  - -0.07978990331537922
  - -0.07582015105526077
  - -0.07707758696716552
  train_neg_label_ranking_loss:
  - -0.008726042889516708
  - -0.008145525067619576
  - -0.007950180421371203
  - -0.008302264879531802
  - -0.009149896234295211
  train_neg_label_ranking_loss_oob:
  - -0.042823509681747224
  - -0.04580156610807952
  - -0.041317356234129604
  - -0.039482952126630284
  - -0.041037398710032987
  train_precision_macro:
  - 0.9614729672200935
  - 0.9606215410813114
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.9637681159420289
  train_precision_macro_oob:
  - 0.9431673052362707
  - 0.9427415921668797
  - 0.9452624839948783
  - 0.945934440187314
  - 0.9456521739130435
  train_precision_micro:
  - 0.9614729672200937
  - 0.9606215410813111
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.9637681159420289
  train_precision_micro_oob:
  - 0.9431673052362708
  - 0.9427415921668795
  - 0.9452624839948783
  - 0.9459344401873138
  - 0.9456521739130435
  train_precision_samples:
  - 0.9614729672200936
  - 0.9606215410813113
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.963768115942029
  train_precision_samples_oob:
  - 0.9431673052362708
  - 0.9427415921668795
  - 0.9452624839948783
  - 0.9459344401873137
  - 0.9456521739130435
  train_precision_weighted:
  - 0.9528047245092978
  - 0.9520104350141939
  - 0.9550259883637824
  - 0.9539340260343396
  - 0.9583205354726291
  train_precision_weighted_oob:
  - 0.917869079644575
  - 0.914812998977078
  - 0.9202100966846207
  - 0.9241798489447393
  - 0.9229224130328346
  train_recall_macro:
  - 0.9614729672200935
  - 0.9606215410813114
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.9637681159420289
  train_recall_macro_oob:
  - 0.9431673052362707
  - 0.9427415921668797
  - 0.9452624839948783
  - 0.945934440187314
  - 0.9456521739130435
  train_recall_micro:
  - 0.9614729672200937
  - 0.9606215410813111
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.9637681159420289
  train_recall_micro_oob:
  - 0.9431673052362708
  - 0.9427415921668795
  - 0.9452624839948783
  - 0.9459344401873138
  - 0.9456521739130435
  train_recall_samples:
  - 0.9614729672200936
  - 0.9606215410813113
  - 0.9630815194195476
  - 0.9616858237547893
  - 0.963768115942029
  train_recall_samples_oob:
  - 0.9431673052362708
  - 0.9427415921668795
  - 0.9452624839948783
  - 0.9459344401873137
  - 0.9456521739130435
  train_recall_weighted:
  - 0.9528047245092978
  - 0.9520104350141939
  - 0.9550259883637824
  - 0.9539340260343396
  - 0.9583205354726291
  train_recall_weighted_oob:
  - 0.917869079644575
  - 0.914812998977078
  - 0.9202100966846207
  - 0.9241798489447393
  - 0.9229224130328346
  train_roc_auc_macro:
  - 0.9969226871574715
  - 0.9962864225201926
  - 0.9966711723894601
  - 0.997566220856335
  - 0.9966190163561262
  train_roc_auc_macro_oob:
  - 0.9681600038158709
  - 0.9668508594791742
  - 0.9669576891518163
  - 0.9718749550673115
  - 0.9671578187105089
  train_roc_auc_micro:
  - 0.995263710892677
  - 0.9949614069932922
  - 0.995140596413942
  - 0.9959542897579243
  - 0.9952685324280346
  train_roc_auc_micro_oob:
  - 0.9685100852999323
  - 0.9668663464991422
  - 0.9688170575835462
  - 0.9710415808417701
  - 0.9681130485869692
  train_roc_auc_samples:
  - 0.9912739571104833
  - 0.9918544749323803
  - 0.9920498195786287
  - 0.9916977351204682
  - 0.9908501037657049
  train_roc_auc_samples_oob:
  - 0.9571764903182527
  - 0.9541984338919205
  - 0.9586826437658705
  - 0.9605170478733697
  - 0.958962601289967
  train_roc_auc_weighted:
  - 0.9958966360809531
  - 0.9955946573848994
  - 0.9954823152825304
  - 0.9966832209844518
  - 0.9962311364473301
  train_roc_auc_weighted_oob:
  - 0.9711041400599901
  - 0.9714552169404589
  - 0.9702795814801807
  - 0.9732683039182957
  - 0.9734376983087984
start: 2023-12-12 16:03:44.810015
wrapper: null
