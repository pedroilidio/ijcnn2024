active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMBMA0MzMzMzMDQKCZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ+T80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b9mZmZmZmb2vw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0BAZmZmZmYWwABnZmZmZvY/ADIzMzMz478AZ2ZmZmb2Pw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:58:35.133600
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: fba85684348718dd41cb0e5e073869f08097fe0d48ad9d3d871e472083802943
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fba8568_20231212T155628651958_embedding_proba_weak__9_Gram_negative.yml
results:
  fit_time:
  - 68.03186583518982
  - 68.47946262359619
  - 66.50546073913574
  - 71.12013483047485
  - 74.02592897415161
  score_time:
  - 12.517263412475586
  - 12.512210607528687
  - 13.23630166053772
  - 13.133774042129517
  - 13.094743490219116
  test_average_precision_macro:
  - 0.7141107836886755
  - 0.7004676545121631
  - 0.6567910816700755
  - 0.7929859266284969
  - 0.7271746257249281
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9410026328967019
  - 0.9320236655370583
  - 0.8956857144698733
  - 0.9374326946654744
  - 0.9166101144422097
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9743636363636363
  - 0.9557260228034876
  - 0.9489169675090253
  - 0.9698327359617681
  - 0.9581829121540312
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9612804351987498
  - 0.973489510553678
  - 0.9435637621536584
  - 0.9777961452405936
  - 0.9551610142483561
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9636363636363636
  - 0.962588028169014
  - 0.9476534296028881
  - 0.9619175627240144
  - 0.953971119133574
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9636363636363636
  - 0.9625880281690141
  - 0.9476534296028881
  - 0.9619175627240143
  - 0.953971119133574
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9636363636363636
  - 0.9625880281690141
  - 0.9476534296028881
  - 0.9619175627240143
  - 0.953971119133574
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9731008717310087
  - 0.981142955292732
  - 0.9680672894413637
  - 0.9803298476394586
  - 0.9678639172734504
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9308746778519488
  - 0.9293907220923101
  - 0.9028175619019868
  - 0.9285610806284058
  - 0.9137605780999314
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9298245614035088
  - 0.927874416631311
  - 0.9005145797598628
  - 0.926629261976694
  - 0.911993097497843
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9389384756657484
  - 0.9375160051216389
  - 0.9155015862597089
  - 0.9382209188660802
  - 0.9233344273055464
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9479803121986216
  - 0.9631346178686991
  - 0.9385286832167533
  - 0.9619413137183903
  - 0.9381468488208023
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9743636363636365
  - 0.9557260228034874
  - 0.9489169675090253
  - 0.9698327359617681
  - 0.9581829121540315
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6992271965298507
  - 0.6735754065382205
  - 0.6654045713862191
  - 0.7036795911471869
  - 0.7169153483563923
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.853729880558071
  - 0.8506816805130086
  - 0.8008184752952461
  - 0.8502916982265175
  - 0.821180402107876
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8939650577643509
  - 0.8926750772067504
  - 0.8554576336874951
  - 0.9028231462694046
  - 0.8679394314772555
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9124754512098597
  - 0.9344462342208274
  - 0.8966910906037096
  - 0.9297850666030395
  - 0.8976416614924668
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9822652966442342
  - 0.96720229127172
  - 0.9624504165821899
  - 0.9784649017375115
  - 0.9697205705137486
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.16
  - -1.1408450704225352
  - -1.227436823104693
  - -1.136200716845878
  - -1.1805054151624548
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03636363636363637
  - -0.037411971830985914
  - -0.05234657039711191
  - -0.03808243727598566
  - -0.046028880866425995
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03636363636363636
  - -0.037411971830985914
  - -0.052346570397111915
  - -0.03808243727598566
  - -0.046028880866425995
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.03636363636363636
  - -0.037411971830985914
  - -0.052346570397111915
  - -0.03808243727598566
  - -0.046028880866425995
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.026899128268991285
  - -0.018857044707268
  - -0.03193271055863635
  - -0.019670152360541454
  - -0.032136082726549595
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.011212121212121211
  - -0.01827632461435278
  - -0.023852501289324392
  - -0.011819423109745689
  - -0.015299982809008076
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9636363636363636
  - 0.962588028169014
  - 0.9476534296028881
  - 0.9619175627240144
  - 0.953971119133574
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9636363636363636
  - 0.9625880281690141
  - 0.9476534296028881
  - 0.9619175627240143
  - 0.953971119133574
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9636363636363636
  - 0.9625880281690141
  - 0.9476534296028881
  - 0.9619175627240143
  - 0.953971119133574
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9731008717310087
  - 0.981142955292732
  - 0.9680672894413637
  - 0.9803298476394586
  - 0.9678639172734504
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9636363636363636
  - 0.962588028169014
  - 0.9476534296028881
  - 0.9619175627240144
  - 0.953971119133574
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9636363636363636
  - 0.9625880281690141
  - 0.9476534296028881
  - 0.9619175627240143
  - 0.953971119133574
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9636363636363636
  - 0.9625880281690141
  - 0.9476534296028881
  - 0.9619175627240143
  - 0.953971119133574
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9731008717310087
  - 0.981142955292732
  - 0.9680672894413637
  - 0.9803298476394586
  - 0.9678639172734504
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - .nan
  - .nan
  - 0.9709307030610355
  - 0.9895217961484264
  - 0.976289118379907
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9897179503747738
  - 0.9898963480458842
  - 0.9820047306645245
  - 0.9903705710203583
  - 0.9836816982680279
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9887878787878787
  - 0.9817236753856474
  - 0.9761474987106757
  - 0.9881805768902544
  - 0.9847000171909921
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - .nan
  - .nan
  - 0.9880159681095043
  - 0.995821819915038
  - 0.9875031867950992
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7383823299486937
  - 0.730226015665272
  - 0.6945453895121534
  - 0.6971925642548322
  - 0.7229279222882568
  train_average_precision_macro_oob:
  - 0.7336831211130047
  - 0.7245879707688169
  - 0.6817180268446771
  - 0.6715682291344001
  - 0.696312594832476
  train_average_precision_micro:
  - 0.9484545669848072
  - 0.9325257332018745
  - 0.9249785668558215
  - 0.9346196117106683
  - 0.9312126212683327
  train_average_precision_micro_oob:
  - 0.9435507201395551
  - 0.9284475508425366
  - 0.9176508895884004
  - 0.9288433048012404
  - 0.9261269290317166
  train_average_precision_samples:
  - 0.9811250373022977
  - 0.9599127557160048
  - 0.970777279521674
  - 0.972596585804133
  - 0.9674887892376681
  train_average_precision_samples_oob:
  - 0.9753815492177175
  - 0.959424961320268
  - 0.9615855221012171
  - 0.9680978051597998
  - 0.9612278453982489
  train_average_precision_weighted:
  - 0.974563368965517
  - 0.9679246728559915
  - 0.9673880455175707
  - 0.9662841323279204
  - 0.9724592629716304
  train_average_precision_weighted_oob:
  - 0.9690354927743937
  - 0.9630640890802014
  - 0.9623870062602633
  - 0.9575111298359542
  - 0.965271270651007
  train_f1_macro:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_f1_macro_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.959641255605381
  - 0.9603548966756513
  - 0.9559417040358744
  train_f1_micro:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_f1_micro_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.9596412556053812
  - 0.9603548966756514
  - 0.9559417040358744
  train_f1_samples:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_f1_samples_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.9596412556053812
  - 0.9603548966756514
  - 0.9559417040358744
  train_f1_weighted:
  - 0.9831693570468271
  - 0.9799328624854469
  - 0.9833307030543312
  - 0.9823328667445601
  - 0.9832748172095341
  train_f1_weighted_oob:
  - 0.981154263844921
  - 0.976755102481988
  - 0.9800211705383092
  - 0.9793806323241906
  - 0.9815575717546726
  train_jaccard_macro:
  - 0.9329881728261796
  - 0.9234987956874174
  - 0.926397314297101
  - 0.9256593647650214
  - 0.9189685990700998
  train_jaccard_macro_oob:
  - 0.9324834062298077
  - 0.9210916990234621
  - 0.9243774751937226
  - 0.9254058642313809
  - 0.9181013190884624
  train_jaccard_micro:
  - 0.9312729630430084
  - 0.921526121829612
  - 0.9242800129435875
  - 0.9237333909473912
  - 0.916219119226638
  train_jaccard_micro_oob:
  - 0.9308556611927399
  - 0.9192378477860778
  - 0.9224137931034483
  - 0.9237333909473912
  - 0.9156018468807043
  train_jaccard_samples:
  - 0.9403054719079785
  - 0.9326441308390768
  - 0.9351361145083118
  - 0.9348852405456178
  - 0.9274321692258912
  train_jaccard_samples_oob:
  - 0.9397484242605103
  - 0.930550997338001
  - 0.9336105449109934
  - 0.9349288028533311
  - 0.9272437378266974
  train_jaccard_weighted:
  - 0.9670727547310682
  - 0.9609839819095615
  - 0.9675459799248851
  - 0.965575239838643
  - 0.9674962606159736
  train_jaccard_weighted_oob:
  - 0.9631835180758354
  - 0.9549112396358221
  - 0.9611587989886617
  - 0.9598440780471581
  - 0.9641434471716822
  train_label_ranking_average_precision_score:
  - 0.9811250373022979
  - 0.959912755716005
  - 0.970777279521674
  - 0.9725965858041332
  - 0.967488789237668
  train_label_ranking_average_precision_score_oob:
  - 0.9753815492177177
  - 0.9594249613202684
  - 0.9615855221012172
  - 0.9680978051598003
  - 0.9612278453982489
  train_matthews_corrcoef_macro:
  - 0.7290716659566482
  - 0.7186559759391646
  - 0.7171098991057334
  - 0.7129781888117779
  - 0.7041403018611376
  train_matthews_corrcoef_macro_oob:
  - 0.7251710956227264
  - 0.7112485513581775
  - 0.7143220481065136
  - 0.7124344205344509
  - 0.7012082317513038
  train_matthews_corrcoef_micro:
  - 0.8607275576422975
  - 0.8430021226605167
  - 0.8486239928896561
  - 0.8471005610645845
  - 0.8347702204357941
  train_matthews_corrcoef_micro_oob:
  - 0.8584083372381012
  - 0.8365712126674784
  - 0.8434916347449458
  - 0.8450260937221166
  - 0.8314452641165965
  train_matthews_corrcoef_samples:
  - 0.9023119095911708
  - 0.8917518682952662
  - 0.8991639301844127
  - 0.8987388184560807
  - 0.8866767598402694
  train_matthews_corrcoef_samples_oob:
  - 0.8998139992437322
  - 0.8845729811047803
  - 0.8943559997470009
  - 0.894133470789276
  - 0.883549068083415
  train_matthews_corrcoef_weighted:
  - 0.9376693348581351
  - 0.9280550972711302
  - 0.9376364543428833
  - 0.9335064921623887
  - 0.9366885041939782
  train_matthews_corrcoef_weighted_oob:
  - 0.9327722080336011
  - 0.9196280824679357
  - 0.9298598263571649
  - 0.9265049662455422
  - 0.9313890617805435
  train_ndgc:
  - 0.9865019379902793
  - 0.9707483394014169
  - 0.9787646358663719
  - 0.9803225504001376
  - 0.9764597933533521
  train_ndgc_oob:
  - 0.9826645134005261
  - 0.9704954816396097
  - 0.9725345480698747
  - 0.9771166695031213
  - 0.9716926166472811
  train_neg_coverage_error:
  - -1.1029543419874663
  - -1.1561371841155235
  - -1.1228699551569508
  - -1.1275831087151842
  - -1.1309417040358745
  train_neg_coverage_error_oob:
  - -1.1298119964189794
  - -1.1705776173285198
  - -1.1632286995515695
  - -1.1572327044025157
  - -1.1623318385650223
  train_neg_hamming_loss_macro:
  - -0.0355863921217547
  - -0.04083935018050543
  - -0.03934977578475336
  - -0.03964510332434861
  - -0.043721973094170405
  train_neg_hamming_loss_macro_oob:
  - -0.03581020590868397
  - -0.04208032490974729
  - -0.04035874439461883
  - -0.039645103324348605
  - -0.04405829596412556
  train_neg_hamming_loss_micro:
  - -0.0355863921217547
  - -0.04083935018050541
  - -0.03934977578475336
  - -0.039645103324348605
  - -0.043721973094170405
  train_neg_hamming_loss_micro_oob:
  - -0.03581020590868397
  - -0.042080324909747294
  - -0.04035874439461883
  - -0.039645103324348605
  - -0.04405829596412556
  train_neg_hamming_loss_samples:
  - -0.0355863921217547
  - -0.04083935018050541
  - -0.03934977578475336
  - -0.039645103324348605
  - -0.043721973094170405
  train_neg_hamming_loss_samples_oob:
  - -0.03581020590868397
  - -0.042080324909747294
  - -0.04035874439461883
  - -0.039645103324348605
  - -0.04405829596412556
  train_neg_hamming_loss_weighted:
  - -0.01683064295317293
  - -0.020067137514553152
  - -0.0166692969456687
  - -0.017667133255440004
  - -0.01672518279046593
  train_neg_hamming_loss_weighted_oob:
  - -0.01884573615507911
  - -0.02324489751801194
  - -0.01997882946169095
  - -0.020619367675809495
  - -0.0184424282453274
  train_neg_label_ranking_loss:
  - -0.007737562348126358
  - -0.013752793536187035
  - -0.010527439675421737
  - -0.010460788088820434
  - -0.011808669656203289
  train_neg_label_ranking_loss_oob:
  - -0.011041480155177558
  - -0.015471892728210417
  - -0.015460175101430704
  - -0.014086766782184573
  - -0.016132820841341024
  train_precision_macro:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_precision_macro_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.959641255605381
  - 0.9603548966756513
  - 0.9559417040358744
  train_precision_micro:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_precision_micro_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.9596412556053812
  - 0.9603548966756514
  - 0.9559417040358744
  train_precision_samples:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_precision_samples_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.9596412556053812
  - 0.9603548966756514
  - 0.9559417040358744
  train_precision_weighted:
  - 0.9831693570468271
  - 0.9799328624854469
  - 0.9833307030543312
  - 0.9823328667445601
  - 0.9832748172095341
  train_precision_weighted_oob:
  - 0.981154263844921
  - 0.976755102481988
  - 0.9800211705383092
  - 0.9793806323241906
  - 0.9815575717546726
  train_recall_macro:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_recall_macro_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.959641255605381
  - 0.9603548966756513
  - 0.9559417040358744
  train_recall_micro:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_recall_micro_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.9596412556053812
  - 0.9603548966756514
  - 0.9559417040358744
  train_recall_samples:
  - 0.9644136078782453
  - 0.9591606498194946
  - 0.9606502242152466
  - 0.9603548966756514
  - 0.9562780269058296
  train_recall_samples_oob:
  - 0.964189794091316
  - 0.9579196750902527
  - 0.9596412556053812
  - 0.9603548966756514
  - 0.9559417040358744
  train_recall_weighted:
  - 0.9831693570468271
  - 0.9799328624854469
  - 0.9833307030543312
  - 0.9823328667445601
  - 0.9832748172095341
  train_recall_weighted_oob:
  - 0.981154263844921
  - 0.976755102481988
  - 0.9800211705383092
  - 0.9793806323241906
  - 0.9815575717546726
  train_roc_auc_macro:
  - 0.9863509243897448
  - 0.9856189999791705
  - 0.9835015697461749
  - 0.9862623498257126
  - 0.9859269702815088
  train_roc_auc_macro_oob:
  - 0.984674387025473
  - 0.9840806804224316
  - 0.9817593741188826
  - 0.9845025268381732
  - 0.9832663408865772
  train_roc_auc_micro:
  - 0.9928055355112104
  - 0.9901274032275189
  - 0.9893442690995427
  - 0.9905160141460647
  - 0.989689226448039
  train_roc_auc_micro_oob:
  - 0.9906351640305405
  - 0.9883800207993927
  - 0.9876135844796241
  - 0.988625139821882
  - 0.9883470602725362
  train_roc_auc_samples:
  - 0.9922624376518735
  - 0.986247206463813
  - 0.9894725603245781
  - 0.9895392119111796
  - 0.9881913303437967
  train_roc_auc_samples_oob:
  - 0.9890864134373535
  - 0.9845281072717896
  - 0.9846679478966475
  - 0.9859132332178153
  - 0.9838671791586591
  train_roc_auc_weighted:
  - 0.9973439305855804
  - 0.9966641659745887
  - 0.9969129094348441
  - 0.99710746837712
  - 0.9972582526123973
  train_roc_auc_weighted_oob:
  - 0.9940247702157552
  - 0.9941451228232601
  - 0.9950156331802952
  - 0.9943446897704543
  - 0.9952942873250555
start: 2023-12-12 15:56:28.651958
wrapper: null
