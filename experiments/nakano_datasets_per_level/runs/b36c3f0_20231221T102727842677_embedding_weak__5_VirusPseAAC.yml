active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          oJmZmZmZGUDAzMzMzMwMwICZmZmZmfm/gJmZmZmZ+b8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:28:19.881200
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__5
  params: {}
hash: b36c3f05f5d67a35291690261cac20bdda1841d9bf332950c13ceeb2c712e2c0
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b36c3f0_20231221T102727842677_embedding_weak__5_VirusPseAAC.yml
results:
  fit_time:
  - 42.2626428604126
  - 43.02151584625244
  - 41.87032651901245
  - 43.618468046188354
  - 43.61267638206482
  score_time:
  - 2.246535539627075
  - 2.614630699157715
  - 2.3714804649353027
  - 2.7303314208984375
  - 2.4553487300872803
  test_average_precision_macro:
  - 0.5209903240483377
  - 0.34143165233995393
  - 0.3377821860018004
  - 0.4388377351103148
  - 0.3599402907726537
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5593418534177875
  - 0.41126644227106157
  - 0.40905967146683364
  - 0.43559338107099305
  - 0.42804936462869464
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7171428571428571
  - 0.6755555555555556
  - 0.6332687338501292
  - 0.6562015503875969
  - 0.6977642276422764
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5490384417162459
  - 0.4203256408367962
  - 0.4028068657578229
  - 0.4673249038246816
  - 0.42238067157239323
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7666666666666666
  - 0.7962962962962963
  - 0.7868217054263565
  - 0.8023255813953488
  - 0.7886178861788617
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7666666666666667
  - 0.7962962962962963
  - 0.7868217054263565
  - 0.8023255813953488
  - 0.7886178861788617
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7666666666666668
  - 0.7962962962962964
  - 0.7868217054263564
  - 0.802325581395349
  - 0.7886178861788619
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.630252100840336
  - 0.6822222222222223
  - 0.6627906976744187
  - 0.6897674418604651
  - 0.6525634644101543
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.653259594436065
  - 0.6896376089501226
  - 0.679412417152696
  - 0.6950852521416934
  - 0.6830005705050782
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6216216216216216
  - 0.6615384615384615
  - 0.6485623003194888
  - 0.6699029126213593
  - 0.6510067114093959
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.635374149659864
  - 0.6825396825396826
  - 0.668327796234773
  - 0.6794019933554818
  - 0.6660859465737514
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4810625104742751
  - 0.5416285534603829
  - 0.5223454250160046
  - 0.5470287703540017
  - 0.5073203227335272
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.717142857142857
  - 0.6755555555555555
  - 0.6332687338501293
  - 0.6562015503875969
  - 0.6977642276422764
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.043336445378089
  - 0.01844147888293236
  - 0.0221592925442099
  - 0.016815854437600957
  - -0.01617327492093344
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.16949890539175788
  - 0.19069251784911845
  - 0.19470319968074912
  - 0.1205550442335168
  - 0.08908376922055368
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07853380851572897
  - 0.1633040732900114
  - 0.15380452004925269
  - 0.06121989609380641
  - 0.060579810584955165
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08994086461238715
  - 0.03356490095040754
  - 0.04172573323929421
  - 0.03430434305270595
  - -0.03366681718235124
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7930869933217277
  - 0.7562734465120557
  - 0.7273336057616951
  - 0.7452746424835879
  - 0.7747730743368965
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.5714285714285716
  - -2.2
  - -2.372093023255814
  - -2.2093023255813953
  - -2.1463414634146343
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2333333333333333
  - -0.2037037037037037
  - -0.21317829457364337
  - -0.19767441860465115
  - -0.21138211382113822
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23333333333333334
  - -0.2037037037037037
  - -0.2131782945736434
  - -0.19767441860465115
  - -0.21138211382113822
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2333333333333333
  - -0.2037037037037037
  - -0.2131782945736434
  - -0.19767441860465113
  - -0.2113821138211382
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.36974789915966383
  - -0.31777777777777777
  - -0.3372093023255814
  - -0.3102325581395349
  - -0.34743653558984566
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21214285714285716
  - -0.21999999999999997
  - -0.23714470284237724
  - -0.20872093023255814
  - -0.19417344173441733
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7666666666666666
  - 0.7962962962962963
  - 0.7868217054263565
  - 0.8023255813953488
  - 0.7886178861788617
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7666666666666667
  - 0.7962962962962963
  - 0.7868217054263565
  - 0.8023255813953488
  - 0.7886178861788617
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7666666666666668
  - 0.7962962962962964
  - 0.7868217054263564
  - 0.802325581395349
  - 0.7886178861788619
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.630252100840336
  - 0.6822222222222223
  - 0.6627906976744187
  - 0.6897674418604651
  - 0.6525634644101543
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7666666666666666
  - 0.7962962962962963
  - 0.7868217054263565
  - 0.8023255813953488
  - 0.7886178861788617
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7666666666666667
  - 0.7962962962962963
  - 0.7868217054263565
  - 0.8023255813953488
  - 0.7886178861788617
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7666666666666668
  - 0.7962962962962964
  - 0.7868217054263564
  - 0.802325581395349
  - 0.7886178861788619
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.630252100840336
  - 0.6822222222222223
  - 0.6627906976744187
  - 0.6897674418604651
  - 0.6525634644101543
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6419772209959252
  - 0.6356381172860265
  - 0.5179118339017909
  - 0.701002017357828
  - 0.636484593837535
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8046614872364041
  - 0.7828181818181817
  - 0.7626960418222555
  - 0.8049038461538461
  - 0.7929141199627059
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7878571428571429
  - 0.7799999999999999
  - 0.7628552971576227
  - 0.7912790697674418
  - 0.8058265582655827
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6159095727685973
  - 0.6424668417479045
  - 0.5303115729382146
  - 0.6561900174095296
  - 0.5872691933916423
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9160239354065017
  - 0.9600331823724857
  - 0.9216104109370847
  - 0.9294143829153166
  - 0.9315689337315819
  train_average_precision_macro_oob:
  - 0.38907485148896676
  - 0.4521015413578855
  - 0.4219499321846735
  - 0.428250904307309
  - 0.42001607411434255
  train_average_precision_micro:
  - 0.9029955513927619
  - 0.8436680013371479
  - 0.8195866812491988
  - 0.893246707610351
  - 0.8874712242894953
  train_average_precision_micro_oob:
  - 0.5823903988079577
  - 0.6252364315119929
  - 0.5581876164894543
  - 0.6066831014604823
  - 0.6226553959721493
  train_average_precision_samples:
  - 0.9069767441860465
  - 0.8676268861454046
  - 0.8838414634146341
  - 0.8922764227642277
  - 0.8760040160642569
  train_average_precision_samples_oob:
  - 0.7445090439276485
  - 0.7372770919067216
  - 0.7121443089430893
  - 0.7275745257452575
  - 0.7282965194109773
  train_average_precision_weighted:
  - 0.9652862436529751
  - 0.9477963254369641
  - 0.9358148927203155
  - 0.9750723892830113
  - 0.9658289755178532
  train_average_precision_weighted_oob:
  - 0.5389969873325388
  - 0.605634803292027
  - 0.5673161719914094
  - 0.5914978199858693
  - 0.5927166515944587
  train_f1_macro:
  - 0.9253875968992248
  - 0.9176954732510287
  - 0.9166666666666666
  - 0.9227642276422764
  - 0.9206827309236948
  train_f1_macro_oob:
  - 0.8284883720930232
  - 0.8467078189300411
  - 0.8323170731707316
  - 0.8262195121951219
  - 0.8333333333333334
  train_f1_micro:
  - 0.9253875968992248
  - 0.9176954732510288
  - 0.9166666666666666
  - 0.9227642276422764
  - 0.9206827309236948
  train_f1_micro_oob:
  - 0.8284883720930233
  - 0.8467078189300411
  - 0.8323170731707317
  - 0.8262195121951219
  - 0.8333333333333334
  train_f1_samples:
  - 0.9253875968992248
  - 0.917695473251029
  - 0.9166666666666667
  - 0.9227642276422766
  - 0.9206827309236947
  train_f1_samples_oob:
  - 0.8284883720930233
  - 0.8467078189300411
  - 0.8323170731707317
  - 0.8262195121951219
  - 0.8333333333333333
  train_f1_weighted:
  - 0.940674534305218
  - 0.9289817870675957
  - 0.9251219512195121
  - 0.9388432745713595
  - 0.9353374087482939
  train_f1_weighted_oob:
  - 0.7432893671178988
  - 0.7838283828382837
  - 0.7533841463414634
  - 0.7421818401352329
  - 0.7587987417650899
  train_jaccard_macro:
  - 0.864004408218669
  - 0.8507862468161352
  - 0.8490179576039405
  - 0.8602738839021723
  - 0.8561569582324223
  train_jaccard_macro_oob:
  - 0.7238866525183837
  - 0.7442328432744499
  - 0.7264327700714858
  - 0.7190398950905238
  - 0.7271271152810491
  train_jaccard_micro:
  - 0.8611361587015329
  - 0.8479087452471483
  - 0.8461538461538461
  - 0.8566037735849057
  - 0.8530232558139534
  train_jaccard_micro_oob:
  - 0.707196029776675
  - 0.7341659232827832
  - 0.7127937336814621
  - 0.7038961038961039
  - 0.7142857142857143
  train_jaccard_samples:
  - 0.8762458471760796
  - 0.8669900058788949
  - 0.8648373983739838
  - 0.8728222996515679
  - 0.8691910499139415
  train_jaccard_samples_oob:
  - 0.720514950166113
  - 0.757201646090535
  - 0.7341753774680604
  - 0.7200929152148665
  - 0.7290590935169249
  train_jaccard_weighted:
  - 0.890740766562818
  - 0.8699017498850314
  - 0.8633585098195156
  - 0.8882938633448062
  - 0.8815126206500381
  train_jaccard_weighted_oob:
  - 0.6054886155510465
  - 0.6518740696839044
  - 0.6138302704658175
  - 0.6005738391292831
  - 0.6206132052149469
  train_label_ranking_average_precision_score:
  - 0.9069767441860465
  - 0.8676268861454044
  - 0.8838414634146339
  - 0.8922764227642275
  - 0.8760040160642569
  train_label_ranking_average_precision_score_oob:
  - 0.7445090439276485
  - 0.7372770919067214
  - 0.7121443089430896
  - 0.7275745257452573
  - 0.7282965194109771
  train_matthews_corrcoef_macro:
  - 0.30925725182012265
  - 0.299858797666483
  - 0.2970950059381315
  - 0.3107574504117135
  - 0.3065101870827086
  train_matthews_corrcoef_macro_oob:
  - 0.09376356988831071
  - 0.1517850407898368
  - 0.1214439979806519
  - 0.11385542430254085
  - 0.12742091492906388
  train_matthews_corrcoef_micro:
  - 0.7507959876277586
  - 0.7357703313897169
  - 0.7268371557376547
  - 0.7523048351975843
  - 0.7435796913799116
  train_matthews_corrcoef_micro_oob:
  - 0.30675799584413954
  - 0.46465803926546173
  - 0.3921122989814863
  - 0.3463213920534856
  - 0.3797335772361835
  train_matthews_corrcoef_samples:
  - 0.6439190200422635
  - 0.6530561942162969
  - 0.6333554830078424
  - 0.6467145013930237
  - 0.6286389846221043
  train_matthews_corrcoef_samples_oob:
  - 0.15997806840707463
  - 0.397098416478738
  - 0.3171568030703581
  - 0.21610943163232932
  - 0.2348763035205067
  train_matthews_corrcoef_weighted:
  - 0.6278730008343812
  - 0.6148146193746298
  - 0.6056151171779032
  - 0.6325563067897177
  - 0.6206638643864753
  train_matthews_corrcoef_weighted_oob:
  - 0.18853077196036244
  - 0.31209689034765814
  - 0.24801173908516616
  - 0.23141171084861922
  - 0.25888097382703756
  train_ndgc:
  - 0.9323185559351749
  - 0.9037603571668742
  - 0.9150439183973308
  - 0.9219477921698647
  - 0.9096718211616495
  train_ndgc_oob:
  - 0.8094648408833544
  - 0.8055535635750021
  - 0.7859851174507447
  - 0.7969541117260004
  - 0.7980988093478291
  train_neg_coverage_error:
  - -1.436046511627907
  - -1.6419753086419753
  - -1.5731707317073171
  - -1.5426829268292683
  - -1.6144578313253013
  train_neg_coverage_error_oob:
  - -2.0813953488372094
  - -2.2160493827160495
  - -2.2134146341463414
  - -2.225609756097561
  - -2.253012048192771
  train_neg_hamming_loss_macro:
  - -0.0746124031007752
  - -0.0823045267489712
  - -0.08333333333333333
  - -0.0772357723577236
  - -0.07931726907630521
  train_neg_hamming_loss_macro_oob:
  - -0.17151162790697674
  - -0.15329218106995882
  - -0.16768292682926833
  - -0.1737804878048781
  - -0.16666666666666666
  train_neg_hamming_loss_micro:
  - -0.07461240310077519
  - -0.0823045267489712
  - -0.08333333333333333
  - -0.07723577235772358
  - -0.07931726907630522
  train_neg_hamming_loss_micro_oob:
  - -0.17151162790697674
  - -0.15329218106995884
  - -0.1676829268292683
  - -0.17378048780487804
  - -0.16666666666666666
  train_neg_hamming_loss_samples:
  - -0.07461240310077519
  - -0.08230452674897118
  - -0.08333333333333334
  - -0.07723577235772357
  - -0.07931726907630522
  train_neg_hamming_loss_samples_oob:
  - -0.17151162790697677
  - -0.15329218106995884
  - -0.1676829268292683
  - -0.17378048780487804
  - -0.16666666666666666
  train_neg_hamming_loss_weighted:
  - -0.0593254656947819
  - -0.07101821293240436
  - -0.0748780487804878
  - -0.061156725428640424
  - -0.06466259125170633
  train_neg_hamming_loss_weighted_oob:
  - -0.25671063288210116
  - -0.21617161716171615
  - -0.2466158536585366
  - -0.25781815986476697
  - -0.24120125823491007
  train_neg_label_ranking_loss:
  - -0.05122739018087856
  - -0.07698902606310014
  - -0.06874999999999999
  - -0.059518970189701904
  - -0.0744645247657296
  train_neg_label_ranking_loss_oob:
  - -0.18325258397932817
  - -0.19132373113854595
  - -0.19793360433604335
  - -0.19928861788617888
  - -0.20329651941097723
  train_precision_macro:
  - 0.9253875968992248
  - 0.9176954732510287
  - 0.9166666666666666
  - 0.9227642276422764
  - 0.9206827309236948
  train_precision_macro_oob:
  - 0.8284883720930232
  - 0.8467078189300411
  - 0.8323170731707316
  - 0.8262195121951219
  - 0.8333333333333334
  train_precision_micro:
  - 0.9253875968992248
  - 0.9176954732510288
  - 0.9166666666666666
  - 0.9227642276422764
  - 0.9206827309236948
  train_precision_micro_oob:
  - 0.8284883720930233
  - 0.8467078189300411
  - 0.8323170731707317
  - 0.8262195121951219
  - 0.8333333333333334
  train_precision_samples:
  - 0.9253875968992248
  - 0.917695473251029
  - 0.9166666666666667
  - 0.9227642276422766
  - 0.9206827309236947
  train_precision_samples_oob:
  - 0.8284883720930233
  - 0.8467078189300411
  - 0.8323170731707317
  - 0.8262195121951219
  - 0.8333333333333333
  train_precision_weighted:
  - 0.940674534305218
  - 0.9289817870675957
  - 0.9251219512195121
  - 0.9388432745713595
  - 0.9353374087482939
  train_precision_weighted_oob:
  - 0.7432893671178988
  - 0.7838283828382837
  - 0.7533841463414634
  - 0.7421818401352329
  - 0.7587987417650899
  train_recall_macro:
  - 0.9253875968992248
  - 0.9176954732510287
  - 0.9166666666666666
  - 0.9227642276422764
  - 0.9206827309236948
  train_recall_macro_oob:
  - 0.8284883720930232
  - 0.8467078189300411
  - 0.8323170731707316
  - 0.8262195121951219
  - 0.8333333333333334
  train_recall_micro:
  - 0.9253875968992248
  - 0.9176954732510288
  - 0.9166666666666666
  - 0.9227642276422764
  - 0.9206827309236948
  train_recall_micro_oob:
  - 0.8284883720930233
  - 0.8467078189300411
  - 0.8323170731707317
  - 0.8262195121951219
  - 0.8333333333333334
  train_recall_samples:
  - 0.9253875968992248
  - 0.917695473251029
  - 0.9166666666666667
  - 0.9227642276422766
  - 0.9206827309236947
  train_recall_samples_oob:
  - 0.8284883720930233
  - 0.8467078189300411
  - 0.8323170731707317
  - 0.8262195121951219
  - 0.8333333333333333
  train_recall_weighted:
  - 0.940674534305218
  - 0.9289817870675957
  - 0.9251219512195121
  - 0.9388432745713595
  - 0.9353374087482939
  train_recall_weighted_oob:
  - 0.7432893671178988
  - 0.7838283828382837
  - 0.7533841463414634
  - 0.7421818401352329
  - 0.7587987417650899
  train_roc_auc_macro:
  - 0.9937559033524518
  - 0.988600300781805
  - 0.9845601605891378
  - 0.9949515146316533
  - 0.9935644470123314
  train_roc_auc_macro_oob:
  - 0.7066425711738477
  - 0.7528227478067202
  - 0.7288644861670823
  - 0.742057748907004
  - 0.6975447591472972
  train_roc_auc_micro:
  - 0.964707150169729
  - 0.9503086022888003
  - 0.9489477040816325
  - 0.960953128560938
  - 0.9576093776206835
  train_roc_auc_micro_oob:
  - 0.8222246169872658
  - 0.8343127169859842
  - 0.8185586734693877
  - 0.8267769871616317
  - 0.8176656582535611
  train_roc_auc_samples:
  - 0.9487726098191214
  - 0.9230109739368998
  - 0.9312499999999999
  - 0.940481029810298
  - 0.9255354752342706
  train_roc_auc_samples_oob:
  - 0.8167474160206718
  - 0.808676268861454
  - 0.8020663956639567
  - 0.8007113821138211
  - 0.7967034805890228
  train_roc_auc_weighted:
  - 0.9957657185269125
  - 0.978179462690871
  - 0.974863374913613
  - 0.9939854347053574
  - 0.9931191246041604
  train_roc_auc_weighted_oob:
  - 0.7420389062923498
  - 0.7779075087724364
  - 0.7344304669036913
  - 0.7627907875438312
  - 0.7551374501882242
start: 2023-12-21 10:27:27.842677
wrapper: null
