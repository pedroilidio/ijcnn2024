active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T8yMzMzMzPzvzIzMzMzM/O/nJmZmZmZ6T+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMBMBoZmZmZmb2P2hmZmZmZvY/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:08:18.277451
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: b0a006bb0f468c2a64700296dd1be39c209798252b34d1770d131db6db77319d
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b0a006b_20231212T170730076099_embedding_weak__8_birds.yml
results:
  fit_time:
  - 26.37710928916931
  - 27.087382793426514
  - 26.34241247177124
  - 26.261494398117065
  - 28.45197892189026
  score_time:
  - 5.8958964347839355
  - 6.212841510772705
  - 5.995361804962158
  - 6.429301977157593
  - 6.8125245571136475
  test_average_precision_macro:
  - 0.31760427098618704
  - 0.285780612322408
  - 0.3268312819194142
  - 0.26806583886908747
  - 0.34965983143580714
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.24578056432227693
  - 0.2101337668090068
  - 0.22469573912619736
  - 0.1916581678384033
  - 0.2855240934425628
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.23820220793545005
  - 0.250982075972896
  - 0.20807203685560657
  - 0.22889605469569826
  - 0.2824549118780765
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.3934202361770008
  - 0.3994217619480593
  - 0.4367070053865545
  - 0.36096613896371277
  - 0.4572621713068888
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9224806201550388
  - 0.915544675642595
  - 0.9028967768257854
  - 0.908200734394125
  - 0.926968584251326
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9224806201550387
  - 0.9155446756425949
  - 0.9028967768257854
  - 0.9082007343941249
  - 0.926968584251326
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9224806201550387
  - 0.9155446756425949
  - 0.9028967768257854
  - 0.9082007343941249
  - 0.9269685842513259
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9086463923673227
  - 0.8987002389695168
  - 0.9003665645093446
  - 0.8955591611081064
  - 0.9119309902663635
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8570486510843282
  - 0.8460820756916195
  - 0.8248442061925679
  - 0.8340719864734158
  - 0.8652621719499067
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8561151079136691
  - 0.8442437923250564
  - 0.8229825213834139
  - 0.8318385650224215
  - 0.8638783269961977
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8698572918424621
  - 0.8622530694544688
  - 0.8469244336169014
  - 0.8498303187281954
  - 0.8782342264209471
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8335002720299762
  - 0.81761911181939
  - 0.820435805920205
  - 0.8130241748379613
  - 0.839782329662125
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7033184870052177
  - 0.6773386651201828
  - 0.7041960678633586
  - 0.6707565198119774
  - 0.7320673149788517
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2476099047890417
  - 0.1724850331736907
  - 0.23881864700116867
  - 0.19671974457061323
  - 0.26106895218455406
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2762906927692016
  - 0.20270794438701242
  - 0.24075020509969264
  - 0.20174549847964315
  - 0.3009021509524753
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09956533080500408
  - 0.05870121111455098
  - 0.09114731858724186
  - 0.07545460836055881
  - 0.11024832729494405
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3206687349223572
  - 0.23108469386637331
  - 0.32795711184666015
  - 0.2323113230438155
  - 0.3413056891543932
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3223753424571545
  - 0.3425587488578575
  - 0.2898876935474967
  - 0.31878696180534083
  - 0.3584711885449253
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.75968992248062
  - -4.2015503875969
  - -4.038759689922481
  - -4.116279069767442
  - -3.3410852713178296
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07751937984496125
  - -0.08445532435740515
  - -0.0971032231742146
  - -0.09179926560587515
  - -0.07303141574867401
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07751937984496124
  - -0.08445532435740515
  - -0.0971032231742146
  - -0.09179926560587515
  - -0.07303141574867401
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07751937984496124
  - -0.08445532435740513
  - -0.0971032231742146
  - -0.09179926560587515
  - -0.073031415748674
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09135360763267741
  - -0.10129976103048317
  - -0.0996334354906556
  - -0.10444083889189354
  - -0.08806900973363642
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.12643195521102496
  - -0.14633682930536554
  - -0.1360750113999088
  - -0.1404012767897857
  - -0.1069366287560542
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9224806201550388
  - 0.915544675642595
  - 0.9028967768257854
  - 0.908200734394125
  - 0.926968584251326
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9224806201550387
  - 0.9155446756425949
  - 0.9028967768257854
  - 0.9082007343941249
  - 0.926968584251326
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9224806201550387
  - 0.9155446756425949
  - 0.9028967768257854
  - 0.9082007343941249
  - 0.9269685842513259
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9086463923673227
  - 0.8987002389695168
  - 0.9003665645093446
  - 0.8955591611081064
  - 0.9119309902663635
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9224806201550388
  - 0.915544675642595
  - 0.9028967768257854
  - 0.908200734394125
  - 0.926968584251326
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9224806201550387
  - 0.9155446756425949
  - 0.9028967768257854
  - 0.9082007343941249
  - 0.926968584251326
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9224806201550387
  - 0.9155446756425949
  - 0.9028967768257854
  - 0.9082007343941249
  - 0.9269685842513259
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9086463923673227
  - 0.8987002389695168
  - 0.9003665645093446
  - 0.8955591611081064
  - 0.9119309902663635
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8517687207536809
  - 0.8137369277590668
  - 0.8616862036593316
  - 0.8437425750868122
  - 0.8833332330274501
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8633911112584098
  - 0.8384756109428013
  - 0.8621510459440871
  - 0.840557792333527
  - 0.8901340927815655
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8559204490522747
  - 0.8460759164199972
  - 0.8723470241969207
  - 0.8414103070089504
  - 0.8840098263512455
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.35006733227193515
  - 0.39438128783292464
  - 0.3601450487779127
  - 0.3505213056904182
  - 0.3868005066411496
  train_average_precision_macro_oob:
  - 0.2839840694570188
  - 0.3207908781340394
  - 0.29779996994293517
  - 0.29321078871579326
  - 0.3110758187347458
  train_average_precision_micro:
  - 0.3282306149379218
  - 0.3141785419816508
  - 0.29700942935734115
  - 0.27499165371431267
  - 0.3203624708051233
  train_average_precision_micro_oob:
  - 0.2694309359196778
  - 0.2536405476217106
  - 0.24522453515163756
  - 0.22884493033633013
  - 0.25502223319329775
  train_average_precision_samples:
  - 0.35538080755377266
  - 0.32587298665302544
  - 0.32263768576026325
  - 0.3028670500472826
  - 0.34147554578998374
  train_average_precision_samples_oob:
  - 0.2840989316982234
  - 0.24713033036800197
  - 0.2637686697934766
  - 0.2345449286663782
  - 0.2736619025570939
  train_average_precision_weighted:
  - 0.4833998566243937
  - 0.50411252431973
  - 0.4935876637573038
  - 0.47199412439731864
  - 0.5017584217589118
  train_average_precision_weighted_oob:
  - 0.3921945808553009
  - 0.40650933436916403
  - 0.4013478973320789
  - 0.39064392447980373
  - 0.40354953279968186
  train_f1_macro:
  - 0.915340677274582
  - 0.9121787025703796
  - 0.9068747450020398
  - 0.9020807833537332
  - 0.9174826601387189
  train_f1_macro_oob:
  - 0.9207466340269277
  - 0.9174826601387189
  - 0.9128926968584251
  - 0.9077927376580988
  - 0.9255405956752345
  train_f1_micro:
  - 0.9153406772745818
  - 0.9121787025703795
  - 0.90687474500204
  - 0.9020807833537332
  - 0.9174826601387189
  train_f1_micro_oob:
  - 0.9207466340269278
  - 0.9174826601387189
  - 0.9128926968584251
  - 0.9077927376580988
  - 0.9255405956752346
  train_f1_samples:
  - 0.9153406772745817
  - 0.9121787025703796
  - 0.9068747450020399
  - 0.9020807833537332
  - 0.9174826601387189
  train_f1_samples_oob:
  - 0.9207466340269278
  - 0.9174826601387189
  - 0.9128926968584252
  - 0.9077927376580988
  - 0.9255405956752346
  train_f1_weighted:
  - 0.9105827267885672
  - 0.9074417116755197
  - 0.905972683647102
  - 0.9012661498708009
  - 0.912247615646714
  train_f1_weighted_oob:
  - 0.9092475886147111
  - 0.9050871163088277
  - 0.9049464747139165
  - 0.9017903285345144
  - 0.9138471038105016
  train_jaccard_macro:
  - 0.844229809997016
  - 0.839232503452607
  - 0.8300804085683202
  - 0.8226777477366518
  - 0.847917018771898
  train_jaccard_macro_oob:
  - 0.8538009876420632
  - 0.8488381733173739
  - 0.8404992541572924
  - 0.8325595847936683
  - 0.8622503681675653
  train_jaccard_micro:
  - 0.843896934361482
  - 0.8385372714486639
  - 0.8296164971540543
  - 0.8216276477146043
  - 0.8475454631112787
  train_jaccard_micro_oob:
  - 0.853132974199036
  - 0.8475454631112787
  - 0.8397447926440232
  - 0.8311542771759433
  - 0.8614011771406873
  train_jaccard_samples:
  - 0.8593910236366044
  - 0.8570979750010003
  - 0.8490342372686666
  - 0.8431722569406054
  - 0.8626661380849114
  train_jaccard_samples_oob:
  - 0.8679415015073931
  - 0.8653844502190098
  - 0.8573559855058932
  - 0.8520111790690454
  - 0.8751385602127092
  train_jaccard_weighted:
  - 0.8360509516793827
  - 0.8312526222949707
  - 0.8285319577269368
  - 0.8207900726993089
  - 0.8389904931789909
  train_jaccard_weighted_oob:
  - 0.8341690874306272
  - 0.8280932629411556
  - 0.8271224698104033
  - 0.8219719046961929
  - 0.8422180432563892
  train_label_ranking_average_precision_score:
  - 0.808869179646795
  - 0.7890512812266683
  - 0.7683741198687899
  - 0.7621693756286778
  - 0.7988398868752543
  train_label_ranking_average_precision_score_oob:
  - 0.7375873037912464
  - 0.7103086249416447
  - 0.7095051039020036
  - 0.6938472542477726
  - 0.7310262436423649
  train_matthews_corrcoef_macro:
  - 0.3341571807658981
  - 0.3138997142024398
  - 0.30903378090105915
  - 0.3140065702458273
  - 0.3070633953316072
  train_matthews_corrcoef_macro_oob:
  - 0.29050111588163147
  - 0.2871986740505555
  - 0.2717832817815713
  - 0.2816947693502567
  - 0.2908657125801429
  train_matthews_corrcoef_micro:
  - 0.3577357777108586
  - 0.3270476351592764
  - 0.3195913375921847
  - 0.3255086065028303
  - 0.3303792752034555
  train_matthews_corrcoef_micro_oob:
  - 0.32026577511013476
  - 0.2861166361575077
  - 0.2755904529638435
  - 0.29411293332846444
  - 0.2987426133377117
  train_matthews_corrcoef_samples:
  - 0.16036929607226946
  - 0.129587236532622
  - 0.14617124552611754
  - 0.13642321822913278
  - 0.13833361735646715
  train_matthews_corrcoef_samples_oob:
  - 0.12907375658647216
  - 0.10104899588202174
  - 0.10767307690817013
  - 0.11258748739948793
  - 0.11511700321658822
  train_matthews_corrcoef_weighted:
  - 0.40063645224005806
  - 0.38063906468887815
  - 0.3831663217746063
  - 0.39153661632120074
  - 0.37843739183514963
  train_matthews_corrcoef_weighted_oob:
  - 0.34968486932375653
  - 0.32315374409069625
  - 0.3192269222613168
  - 0.34818050551707597
  - 0.3381212410351638
  train_ndgc:
  - 0.4128220547248558
  - 0.38753633259774956
  - 0.3913234419393068
  - 0.37117545890192266
  - 0.4022732407705565
  train_ndgc_oob:
  - 0.3598420357003266
  - 0.3287699986253907
  - 0.3476122623766995
  - 0.3191144188774338
  - 0.3524027308361956
  train_neg_coverage_error:
  - -2.0872093023255816
  - -2.2810077519379846
  - -2.3333333333333335
  - -2.501937984496124
  - -2.125968992248062
  train_neg_coverage_error_oob:
  - -3.39922480620155
  - -3.6744186046511627
  - -3.804263565891473
  - -3.9844961240310077
  - -3.554263565891473
  train_neg_hamming_loss_macro:
  - -0.08465932272541819
  - -0.08782129742962054
  - -0.09312525499796002
  - -0.09791921664626684
  - -0.08251733986128111
  train_neg_hamming_loss_macro_oob:
  - -0.0792533659730722
  - -0.08251733986128112
  - -0.08710730314157486
  - -0.09220726234190128
  - -0.07445940432476542
  train_neg_hamming_loss_micro:
  - -0.08465932272541819
  - -0.08782129742962057
  - -0.09312525499796001
  - -0.09791921664626684
  - -0.08251733986128111
  train_neg_hamming_loss_micro_oob:
  - -0.07925336597307221
  - -0.08251733986128111
  - -0.08710730314157487
  - -0.09220726234190127
  - -0.0744594043247654
  train_neg_hamming_loss_samples:
  - -0.08465932272541819
  - -0.08782129742962055
  - -0.09312525499796002
  - -0.09791921664626684
  - -0.08251733986128111
  train_neg_hamming_loss_samples_oob:
  - -0.07925336597307221
  - -0.08251733986128111
  - -0.08710730314157486
  - -0.09220726234190124
  - -0.0744594043247654
  train_neg_hamming_loss_weighted:
  - -0.08941727321143264
  - -0.09255828832448035
  - -0.09402731635289774
  - -0.09873385012919896
  - -0.08775238435328601
  train_neg_hamming_loss_weighted_oob:
  - -0.09075241138528907
  - -0.0949128836911723
  - -0.0950535252860834
  - -0.09820967146548544
  - -0.08615289618949844
  train_neg_label_ranking_loss:
  - -0.04880232753009771
  - -0.061533307916686854
  - -0.05912405237388138
  - -0.0703612201688467
  - -0.04982624186625555
  train_neg_label_ranking_loss_oob:
  - -0.10278087308268566
  - -0.12139587498684624
  - -0.12139725995745147
  - -0.1343080916524829
  - -0.11094332435816703
  train_precision_macro:
  - 0.915340677274582
  - 0.9121787025703796
  - 0.9068747450020398
  - 0.9020807833537332
  - 0.9174826601387189
  train_precision_macro_oob:
  - 0.9207466340269277
  - 0.9174826601387189
  - 0.9128926968584251
  - 0.9077927376580988
  - 0.9255405956752345
  train_precision_micro:
  - 0.9153406772745818
  - 0.9121787025703795
  - 0.90687474500204
  - 0.9020807833537332
  - 0.9174826601387189
  train_precision_micro_oob:
  - 0.9207466340269278
  - 0.9174826601387189
  - 0.9128926968584251
  - 0.9077927376580988
  - 0.9255405956752346
  train_precision_samples:
  - 0.9153406772745817
  - 0.9121787025703796
  - 0.9068747450020399
  - 0.9020807833537332
  - 0.9174826601387189
  train_precision_samples_oob:
  - 0.9207466340269278
  - 0.9174826601387189
  - 0.9128926968584252
  - 0.9077927376580988
  - 0.9255405956752346
  train_precision_weighted:
  - 0.9105827267885672
  - 0.9074417116755197
  - 0.905972683647102
  - 0.9012661498708009
  - 0.912247615646714
  train_precision_weighted_oob:
  - 0.9092475886147111
  - 0.9050871163088277
  - 0.9049464747139165
  - 0.9017903285345144
  - 0.9138471038105016
  train_recall_macro:
  - 0.915340677274582
  - 0.9121787025703796
  - 0.9068747450020398
  - 0.9020807833537332
  - 0.9174826601387189
  train_recall_macro_oob:
  - 0.9207466340269277
  - 0.9174826601387189
  - 0.9128926968584251
  - 0.9077927376580988
  - 0.9255405956752345
  train_recall_micro:
  - 0.9153406772745818
  - 0.9121787025703795
  - 0.90687474500204
  - 0.9020807833537332
  - 0.9174826601387189
  train_recall_micro_oob:
  - 0.9207466340269278
  - 0.9174826601387189
  - 0.9128926968584251
  - 0.9077927376580988
  - 0.9255405956752346
  train_recall_samples:
  - 0.9153406772745817
  - 0.9121787025703796
  - 0.9068747450020399
  - 0.9020807833537332
  - 0.9174826601387189
  train_recall_samples_oob:
  - 0.9207466340269278
  - 0.9174826601387189
  - 0.9128926968584252
  - 0.9077927376580988
  - 0.9255405956752346
  train_recall_weighted:
  - 0.9105827267885672
  - 0.9074417116755197
  - 0.905972683647102
  - 0.9012661498708009
  - 0.912247615646714
  train_recall_weighted_oob:
  - 0.9092475886147111
  - 0.9050871163088277
  - 0.9049464747139165
  - 0.9017903285345144
  - 0.9138471038105016
  train_roc_auc_macro:
  - 0.9429521745512165
  - 0.942167377129212
  - 0.9352859037361787
  - 0.9302228002399243
  - 0.9451433373760184
  train_roc_auc_macro_oob:
  - 0.8786501654202511
  - 0.8722294774066421
  - 0.8672504014544227
  - 0.8617293453050119
  - 0.8712762506289956
  train_roc_auc_micro:
  - 0.9397392817188736
  - 0.9363722471245913
  - 0.9300322797509993
  - 0.9251579860309249
  - 0.9401818650607481
  train_roc_auc_micro_oob:
  - 0.8830491988023164
  - 0.8751051134066916
  - 0.869290923180351
  - 0.8646471551224219
  - 0.8777327676558992
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9479983593853105
  - 0.947513421042015
  - 0.9437102590991688
  - 0.9376246105298485
  - 0.9491204664220869
  train_roc_auc_weighted_oob:
  - 0.8793258282522489
  - 0.8729778194238261
  - 0.8718505646521386
  - 0.8665566328763382
  - 0.8729452096483413
start: 2023-12-12 17:07:30.076099
wrapper: null
