active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJyZmZmZ2T9AZmZmZmYWwIDMzMzMzATAwJmZmZmZFUCAMzMzMzMDQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:22:09.019860
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__0
  params: {}
hash: c992a8a2d0fcff677bea92d85b79bded88c4d41f2a35e61a0b03b637afd08f60
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c992a8a_20231222T162137444229_embedding_weak__0_scene.yml
results:
  fit_time:
  - 1.4110519886016846
  - 1.4438672065734863
  - 1.4143154621124268
  - 1.3792593479156494
  - 1.4193305969238281
  score_time:
  - 3.494666337966919
  - 3.6323189735412598
  - 3.659393548965454
  - 3.5308241844177246
  - 3.576406240463257
  test_average_precision_macro:
  - 0.8503889387537124
  - 0.8500790216891764
  - 0.8745521880895203
  - 0.8552732467648504
  - 0.8431597528930105
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8594147705949798
  - 0.8497478243411752
  - 0.8773116934956627
  - 0.8680321172067859
  - 0.8507051480698654
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8821552321552322
  - 0.8790896646132786
  - 0.8948002754820937
  - 0.8898284313725489
  - 0.875052192066806
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8382050735467534
  - 0.8417609806811188
  - 0.8659121683341429
  - 0.8468749412396172
  - 0.8339618764846581
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9022869022869022
  - 0.8959616700889802
  - 0.9035812672176308
  - 0.9009103641456582
  - 0.9053583855254002
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9022869022869023
  - 0.8959616700889802
  - 0.9035812672176309
  - 0.9009103641456583
  - 0.9053583855254002
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9022869022869024
  - 0.8959616700889802
  - 0.9035812672176309
  - 0.9009103641456584
  - 0.9053583855254002
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.897174007639124
  - 0.8916144070148178
  - 0.8983318918572618
  - 0.8955541676129911
  - 0.9007240261182426
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8255357075069992
  - 0.8137403479219719
  - 0.8272610574546483
  - 0.8239038211997394
  - 0.8303657517623854
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.821969696969697
  - 0.8115313081215128
  - 0.8241206030150754
  - 0.8196877986619943
  - 0.8270820089001907
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8370953370953369
  - 0.8256086828982104
  - 0.8386462022825658
  - 0.8360844337735093
  - 0.8434735063127546
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8173774605870612
  - 0.806810885621802
  - 0.8188495944732141
  - 0.8152257517308057
  - 0.8227348437570073
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.882155232155232
  - 0.8790896646132783
  - 0.8948002754820935
  - 0.8898284313725487
  - 0.8750521920668055
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6316527520101418
  - 0.6048896486908822
  - 0.6396676497454435
  - 0.6294551773486602
  - 0.6486259089423009
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.632518043323354
  - 0.6014033140143907
  - 0.6373200309550401
  - 0.6320663778296927
  - 0.6480963291125997
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4991975503217066
  - 0.45020351260918584
  - 0.4878521739956348
  - 0.5061615186442368
  - 0.5242573872913127
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6152235856309078
  - 0.5920586340111225
  - 0.6227653851303236
  - 0.6120588568861164
  - 0.6343103305091694
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9130680719423262
  - 0.9108260655940671
  - 0.9225506423726105
  - 0.9192630813049955
  - 0.9079547326705141
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3866943866943866
  - -1.408624229979466
  - -1.3636363636363635
  - -1.411764705882353
  - -1.432150313152401
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09771309771309772
  - -0.10403832991101986
  - -0.09641873278236913
  - -0.09908963585434173
  - -0.09464161447459984
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09771309771309772
  - -0.10403832991101986
  - -0.09641873278236915
  - -0.09908963585434173
  - -0.09464161447459986
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09771309771309772
  - -0.10403832991101984
  - -0.09641873278236916
  - -0.09908963585434173
  - -0.09464161447459984
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1028259923608761
  - -0.1083855929851823
  - -0.10166810814273818
  - -0.10444583238700887
  - -0.0992759738817572
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06174636174636174
  - -0.06714579055441479
  - -0.0574896694214876
  - -0.062342436974789917
  - -0.06899791231732776
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9022869022869022
  - 0.8959616700889802
  - 0.9035812672176308
  - 0.9009103641456582
  - 0.9053583855254002
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9022869022869023
  - 0.8959616700889802
  - 0.9035812672176309
  - 0.9009103641456583
  - 0.9053583855254002
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9022869022869024
  - 0.8959616700889802
  - 0.9035812672176309
  - 0.9009103641456584
  - 0.9053583855254002
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.897174007639124
  - 0.8916144070148178
  - 0.8983318918572618
  - 0.8955541676129911
  - 0.9007240261182426
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9022869022869022
  - 0.8959616700889802
  - 0.9035812672176308
  - 0.9009103641456582
  - 0.9053583855254002
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9022869022869023
  - 0.8959616700889802
  - 0.9035812672176309
  - 0.9009103641456583
  - 0.9053583855254002
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9022869022869024
  - 0.8959616700889802
  - 0.9035812672176309
  - 0.9009103641456584
  - 0.9053583855254002
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.897174007639124
  - 0.8916144070148178
  - 0.8983318918572618
  - 0.8955541676129911
  - 0.9007240261182426
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9502188858629688
  - 0.9481950784785109
  - 0.9572617358643295
  - 0.952212261817377
  - 0.9475480062845083
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.958167337192948
  - 0.9531178730429979
  - 0.9616038850583668
  - 0.9597476310478876
  - 0.9526994367984086
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9382536382536383
  - 0.9328542094455853
  - 0.9425103305785124
  - 0.9376575630252102
  - 0.9310020876826723
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9447747695543355
  - 0.9441492939469713
  - 0.9536353781236035
  - 0.9479416646117864
  - 0.9431900083192657
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9870057763334378
  - 0.9872885317454791
  - 0.9867146295381061
  - 0.9872281421639233
  - 0.9874405957274588
  train_average_precision_macro_oob:
  - 0.8482385489477587
  - 0.8465371834815255
  - 0.8396087281605223
  - 0.8418065391442561
  - 0.850460218502001
  train_average_precision_micro:
  - 0.9854020035796748
  - 0.9860825475320624
  - 0.9857089659659095
  - 0.9862327413694684
  - 0.9865345480893876
  train_average_precision_micro_oob:
  - 0.8549832961513523
  - 0.8559401237519698
  - 0.849261216856615
  - 0.8508806868303487
  - 0.8581637689474905
  train_average_precision_samples:
  - 0.9790584977500866
  - 0.980859375
  - 0.9791991679667187
  - 0.9821336095287416
  - 0.9809387966804979
  train_average_precision_samples_oob:
  - 0.877297507788162
  - 0.8789887152777778
  - 0.8754420176807072
  - 0.8773260832038667
  - 0.8769623098201936
  train_average_precision_weighted:
  - 0.9866782236310584
  - 0.9869309364185115
  - 0.986282171213854
  - 0.9867317639173665
  - 0.9870111866250938
  train_average_precision_weighted_oob:
  - 0.8392737420780196
  - 0.836801098719177
  - 0.82915221203331
  - 0.8312849929724241
  - 0.8404791370502923
  train_f1_macro:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535969
  - 0.9500258933195237
  - 0.9532330567081604
  train_f1_macro_oob:
  - 0.9017826237452407
  - 0.9021701388888889
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585062
  train_f1_micro:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535968
  - 0.9500258933195236
  - 0.9532330567081605
  train_f1_micro_oob:
  - 0.9017826237452405
  - 0.9021701388888889
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585062
  train_f1_samples:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535968
  - 0.9500258933195236
  - 0.9532330567081605
  train_f1_samples_oob:
  - 0.9017826237452407
  - 0.9021701388888891
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585064
  train_f1_weighted:
  - 0.94754640901364
  - 0.948110183841316
  - 0.9476189004060888
  - 0.94757974503536
  - 0.9508485356790292
  train_f1_weighted_oob:
  - 0.89689713201907
  - 0.8971743468795357
  - 0.8941404538733506
  - 0.8952972871267234
  - 0.8957827535975987
  train_jaccard_macro:
  - 0.9053448655159881
  - 0.9065473195687623
  - 0.9059199898839658
  - 0.90561483567383
  - 0.9114317566993835
  train_jaccard_macro_oob:
  - 0.8242177155774343
  - 0.8251241930535803
  - 0.8199937272284631
  - 0.8226062915092697
  - 0.8230651849423904
  train_jaccard_micro:
  - 0.9045735475896168
  - 0.9057071960297767
  - 0.9050606786097581
  - 0.9048088779284833
  - 0.9106449748121233
  train_jaccard_micro_oob:
  - 0.8211330864392089
  - 0.821775915236815
  - 0.8167217760982523
  - 0.8191238813000471
  - 0.8197262859839547
  train_jaccard_samples:
  - 0.9158260396578153
  - 0.9169394841269842
  - 0.9162147438278483
  - 0.9158713718527287
  - 0.9211124283738392
  train_jaccard_samples_oob:
  - 0.8369678089304258
  - 0.8376736111111109
  - 0.8324418691033355
  - 0.8346156691573573
  - 0.8351857340446551
  train_jaccard_weighted:
  - 0.9011516761180269
  - 0.9022337941918381
  - 0.9013876374974822
  - 0.901241385560642
  - 0.9071507890728479
  train_jaccard_weighted_oob:
  - 0.8163114120818307
  - 0.8170472004839853
  - 0.8119938719804793
  - 0.8141898259690722
  - 0.8147980426532755
  train_label_ranking_average_precision_score:
  - 0.9790584977500862
  - 0.9808593749999998
  - 0.9791991679667185
  - 0.9821336095287414
  - 0.9809387966804975
  train_label_ranking_average_precision_score_oob:
  - 0.8772975077881615
  - 0.8789887152777776
  - 0.8754420176807068
  - 0.8773260832038662
  - 0.8769623098201933
  train_matthews_corrcoef_macro:
  - 0.827548850337616
  - 0.8302863181821007
  - 0.8293083909307648
  - 0.8277391688807422
  - 0.8397995895913253
  train_matthews_corrcoef_macro_oob:
  - 0.6323145611991269
  - 0.6337319541813214
  - 0.6194976515639407
  - 0.6237172877702098
  - 0.6272355851108028
  train_matthews_corrcoef_micro:
  - 0.8234571123430283
  - 0.8261798441728443
  - 0.8247842997521039
  - 0.8234498234421653
  - 0.8356230115205799
  train_matthews_corrcoef_micro_oob:
  - 0.6309069629923907
  - 0.6333604527730533
  - 0.6198264655945774
  - 0.624194434488911
  - 0.6266417039867003
  train_matthews_corrcoef_samples:
  - 0.7504872218849408
  - 0.7544653532741296
  - 0.7521001260275596
  - 0.7476915274242592
  - 0.7671936464256301
  train_matthews_corrcoef_samples_oob:
  - 0.49912020066237767
  - 0.5035333395322523
  - 0.4859687660616271
  - 0.48974636958464085
  - 0.49279763175832947
  train_matthews_corrcoef_weighted:
  - 0.821471992271143
  - 0.8239873675144069
  - 0.8225906400239069
  - 0.8213273805529948
  - 0.8335586410587459
  train_matthews_corrcoef_weighted_oob:
  - 0.6168428664343711
  - 0.6178828605582848
  - 0.6034883037817977
  - 0.6062449560258742
  - 0.6105869670635613
  train_ndgc:
  - 0.9847029634915171
  - 0.9859776491976124
  - 0.9847596692829933
  - 0.9870056418666671
  - 0.9860651833276014
  train_ndgc_oob:
  - 0.9095828829795719
  - 0.9107923157887005
  - 0.9081401903830014
  - 0.9095718490323058
  - 0.9093803960600724
  train_neg_coverage_error:
  - -1.1230529595015577
  - -1.1234375
  - -1.1242849713988559
  - -1.1160020714655619
  - -1.1187759336099585
  train_neg_coverage_error_oob:
  - -1.4236760124610592
  - -1.4234375
  - -1.4284971398855955
  - -1.4122216468151216
  - -1.4180497925311204
  train_neg_hamming_loss_macro:
  - -0.05010384215991692
  - -0.049479166666666664
  - -0.049835326746403195
  - -0.04997410668047644
  - -0.04676694329183956
  train_neg_hamming_loss_macro_oob:
  - -0.09821737625475942
  - -0.0978298611111111
  - -0.10088403536141444
  - -0.09943034697048163
  - -0.09906639004149377
  train_neg_hamming_loss_micro:
  - -0.05010384215991693
  - -0.049479166666666664
  - -0.04983532674640319
  - -0.049974106680476436
  - -0.04676694329183956
  train_neg_hamming_loss_micro_oob:
  - -0.09821737625475943
  - -0.09782986111111111
  - -0.10088403536141445
  - -0.09943034697048161
  - -0.09906639004149377
  train_neg_hamming_loss_samples:
  - -0.050103842159916916
  - -0.049479166666666664
  - -0.04983532674640319
  - -0.049974106680476436
  - -0.04676694329183955
  train_neg_hamming_loss_samples_oob:
  - -0.09821737625475942
  - -0.0978298611111111
  - -0.10088403536141445
  - -0.09943034697048161
  - -0.09906639004149377
  train_neg_hamming_loss_weighted:
  - -0.05245359098635999
  - -0.05188981615868408
  - -0.05238109959391126
  - -0.05242025496464001
  - -0.04915146432097081
  train_neg_hamming_loss_weighted_oob:
  - -0.10310286798092998
  - -0.10282565312046443
  - -0.10585954612664931
  - -0.10470271287327655
  - -0.10421724640240133
  train_neg_label_ranking_loss:
  - -0.00951453790238837
  - -0.009166666666666667
  - -0.009438377535101404
  - -0.008726048679440705
  - -0.008934128630705395
  train_neg_label_ranking_loss_oob:
  - -0.06805555555555555
  - -0.06760416666666667
  - -0.0690457618304732
  - -0.0666882444329363
  - -0.06718101659751037
  train_precision_macro:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535969
  - 0.9500258933195237
  - 0.9532330567081604
  train_precision_macro_oob:
  - 0.9017826237452407
  - 0.9021701388888889
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585062
  train_precision_micro:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535968
  - 0.9500258933195236
  - 0.9532330567081605
  train_precision_micro_oob:
  - 0.9017826237452405
  - 0.9021701388888889
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585062
  train_precision_samples:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535968
  - 0.9500258933195236
  - 0.9532330567081605
  train_precision_samples_oob:
  - 0.9017826237452407
  - 0.9021701388888891
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585064
  train_precision_weighted:
  - 0.94754640901364
  - 0.948110183841316
  - 0.9476189004060888
  - 0.94757974503536
  - 0.9508485356790292
  train_precision_weighted_oob:
  - 0.89689713201907
  - 0.8971743468795357
  - 0.8941404538733506
  - 0.8952972871267234
  - 0.8957827535975987
  train_recall_macro:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535969
  - 0.9500258933195237
  - 0.9532330567081604
  train_recall_macro_oob:
  - 0.9017826237452407
  - 0.9021701388888889
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585062
  train_recall_micro:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535968
  - 0.9500258933195236
  - 0.9532330567081605
  train_recall_micro_oob:
  - 0.9017826237452405
  - 0.9021701388888889
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585062
  train_recall_samples:
  - 0.9498961578400831
  - 0.9505208333333334
  - 0.9501646732535968
  - 0.9500258933195236
  - 0.9532330567081605
  train_recall_samples_oob:
  - 0.9017826237452407
  - 0.9021701388888891
  - 0.8991159646385856
  - 0.9005696530295184
  - 0.9009336099585064
  train_recall_weighted:
  - 0.94754640901364
  - 0.948110183841316
  - 0.9476189004060888
  - 0.94757974503536
  - 0.9508485356790292
  train_recall_weighted_oob:
  - 0.89689713201907
  - 0.8971743468795357
  - 0.8941404538733506
  - 0.8952972871267234
  - 0.8957827535975987
  train_roc_auc_macro:
  - 0.9965962677758099
  - 0.9966976873546808
  - 0.9965634514398957
  - 0.9964280629667636
  - 0.9966571358109273
  train_roc_auc_macro_oob:
  - 0.9492539435760513
  - 0.9490374949856429
  - 0.9464084770744122
  - 0.9470300764990432
  - 0.9493517712052851
  train_roc_auc_micro:
  - 0.9965387501087062
  - 0.9966624787077114
  - 0.9965952850340516
  - 0.9965504277773483
  - 0.9967429247684007
  train_roc_auc_micro_oob:
  - 0.9549736168182729
  - 0.9554494414886145
  - 0.953365567609111
  - 0.9538088795799788
  - 0.956034867148529
  train_roc_auc_samples:
  - 0.9904854620976117
  - 0.9908333333333333
  - 0.9905616224648985
  - 0.9912739513205593
  - 0.9910658713692947
  train_roc_auc_samples_oob:
  - 0.9319444444444446
  - 0.9323958333333334
  - 0.9309542381695268
  - 0.9333117555670637
  - 0.9328189834024896
  train_roc_auc_weighted:
  - 0.9964349373181376
  - 0.9965279395657417
  - 0.9963928707933859
  - 0.9962082163440539
  - 0.9964675115582124
  train_roc_auc_weighted_oob:
  - 0.9450559147724076
  - 0.9446145845588954
  - 0.9416340793850818
  - 0.9423966953128197
  - 0.9447619447781586
start: 2023-12-22 16:21:37.444229
wrapper: null
