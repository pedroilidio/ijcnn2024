active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b8AZ2ZmZmb2P8CZmZmZmRFAQGZmZmZmHsCAMzMzMzMLQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:52:02.091423
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 3a90b5eab6b6d96e2c9b3429cb9f143192b41015923776d3ed85c66c39d71dc6
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3a90b5e_20231212T185048311146_embedding_weak__1_scene.yml
results:
  fit_time:
  - 35.9490807056427
  - 32.574766397476196
  - 40.26766395568848
  - 40.10631465911865
  - 40.1814227104187
  score_time:
  - 4.905039072036743
  - 5.429260969161987
  - 4.844881057739258
  - 5.020363092422485
  - 4.871410369873047
  test_average_precision_macro:
  - 0.8343835211254979
  - 0.8577887466193178
  - 0.8439720442550008
  - 0.8250179643120413
  - 0.8091168585793561
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8432706802217625
  - 0.8571457929446639
  - 0.8585611451604896
  - 0.8241234573523561
  - 0.8217063966736374
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8770186335403727
  - 0.8857986111111111
  - 0.8760656883298392
  - 0.8661554192229038
  - 0.8600069735006974
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8228357979346815
  - 0.8489031471411737
  - 0.8321238938998003
  - 0.8154965538795947
  - 0.7956686027738668
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8995859213250519
  - 0.9059027777777778
  - 0.907058001397624
  - 0.8994546693933198
  - 0.8950488145048815
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8995859213250518
  - 0.9059027777777777
  - 0.907058001397624
  - 0.8994546693933198
  - 0.8950488145048815
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8995859213250518
  - 0.9059027777777778
  - 0.9070580013976239
  - 0.8994546693933198
  - 0.8950488145048814
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8935088962841045
  - 0.9003090879897238
  - 0.9010645010278643
  - 0.8950159318970847
  - 0.889484822539216
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8220222434904864
  - 0.8316937571364256
  - 0.8341756011277545
  - 0.8200447395409668
  - 0.8140796881452642
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8174976481655691
  - 0.827991113932085
  - 0.829923273657289
  - 0.8172808919170022
  - 0.8100347112653834
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8353544316277235
  - 0.8428075396825396
  - 0.8463112708395725
  - 0.8344532086863375
  - 0.8272066148635184
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8123661631870362
  - 0.8226072984309123
  - 0.824539059305911
  - 0.8128688771049897
  - 0.8053392881099606
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8770186335403722
  - 0.885798611111111
  - 0.876065688329839
  - 0.8661554192229036
  - 0.8600069735006973
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6161831471590062
  - 0.6547663372822957
  - 0.6541901546167771
  - 0.616905721903532
  - 0.6020870912882151
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6195424385739401
  - 0.6512754121995823
  - 0.655077521588525
  - 0.61340231962446
  - 0.6043916567973937
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5090067791760288
  - 0.5194325334726223
  - 0.5364788833178679
  - 0.49476104229540824
  - 0.4858373419890329
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5945808216920634
  - 0.6366560732459016
  - 0.6333013197229004
  - 0.6031315663920558
  - 0.5834395254699547
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9095910343582781
  - 0.915907013655098
  - 0.9085847590374965
  - 0.9009519292823593
  - 0.8971487562606622
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4223602484472049
  - -1.4166666666666667
  - -1.440251572327044
  - -1.413087934560327
  - -1.4748953974895398
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10041407867494823
  - -0.09409722222222222
  - -0.09294199860237597
  - -0.1005453306066803
  - -0.10495118549511855
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10041407867494824
  - -0.09409722222222222
  - -0.09294199860237597
  - -0.1005453306066803
  - -0.10495118549511855
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10041407867494824
  - -0.09409722222222222
  - -0.09294199860237595
  - -0.1005453306066803
  - -0.10495118549511855
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10649110371589558
  - -0.09969091201027616
  - -0.09893549897213572
  - -0.1049840681029153
  - -0.11051517746078415
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06821946169772257
  - -0.06505208333333333
  - -0.07017819706498951
  - -0.07085889570552147
  - -0.07526150627615064
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8995859213250519
  - 0.9059027777777778
  - 0.907058001397624
  - 0.8994546693933198
  - 0.8950488145048815
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8995859213250518
  - 0.9059027777777777
  - 0.907058001397624
  - 0.8994546693933198
  - 0.8950488145048815
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8995859213250518
  - 0.9059027777777778
  - 0.9070580013976239
  - 0.8994546693933198
  - 0.8950488145048814
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8935088962841045
  - 0.9003090879897238
  - 0.9010645010278643
  - 0.8950159318970847
  - 0.889484822539216
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8995859213250519
  - 0.9059027777777778
  - 0.907058001397624
  - 0.8994546693933198
  - 0.8950488145048815
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8995859213250518
  - 0.9059027777777777
  - 0.907058001397624
  - 0.8994546693933198
  - 0.8950488145048815
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8995859213250518
  - 0.9059027777777778
  - 0.9070580013976239
  - 0.8994546693933198
  - 0.8950488145048814
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8935088962841045
  - 0.9003090879897238
  - 0.9010645010278643
  - 0.8950159318970847
  - 0.889484822539216
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9422331368703555
  - 0.9494419369486949
  - 0.9469589243514598
  - 0.9431565547591396
  - 0.935548252493644
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9501777856125664
  - 0.9548222194475252
  - 0.9548326514740983
  - 0.9493382961124898
  - 0.943695062843999
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9317805383022775
  - 0.9349479166666667
  - 0.9298218029350105
  - 0.9291411042944786
  - 0.9247384937238494
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9370523729491496
  - 0.9451622141811591
  - 0.9419768781717238
  - 0.9384211905318675
  - 0.929143167245423
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9838973171648343
  - 0.980256388780074
  - 0.9835882356717539
  - 0.9801585306425241
  - 0.9845320772287313
  train_average_precision_macro_oob:
  - 0.8534386157852877
  - 0.8428350861292357
  - 0.8508794653540891
  - 0.8459262577304433
  - 0.853640965344129
  train_average_precision_micro:
  - 0.9801898939172714
  - 0.9761777385635069
  - 0.9795630255717444
  - 0.9772347034898087
  - 0.9799455979334034
  train_average_precision_micro_oob:
  - 0.8575669483434797
  - 0.8491277061143288
  - 0.8552815440294154
  - 0.8549969280636784
  - 0.8589464360817471
  train_average_precision_samples:
  - 0.9833246708246709
  - 0.9779882373291818
  - 0.9812176165803109
  - 0.9797966631908238
  - 0.9809054777950578
  train_average_precision_samples_oob:
  - 0.8806739431739431
  - 0.8746713371389033
  - 0.8826511226252158
  - 0.8811131386861314
  - 0.882128045619492
  train_average_precision_weighted:
  - 0.984014578924739
  - 0.980404005005262
  - 0.9836974814408442
  - 0.9802205009812511
  - 0.9845373025312296
  train_average_precision_weighted_oob:
  - 0.8444365113388973
  - 0.8329625629402199
  - 0.8418750709786295
  - 0.8358932644755999
  - 0.8446150510769984
  train_f1_macro:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.9525043177892919
  - 0.9526416405978452
  - 0.9532573008467254
  train_f1_macro_oob:
  - 0.901074151074151
  - 0.8980280228334198
  - 0.8988773747841106
  - 0.9022419186652765
  - 0.9020217729393468
  train_f1_micro:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.9525043177892919
  - 0.952641640597845
  - 0.9532573008467254
  train_f1_micro_oob:
  - 0.9010741510741511
  - 0.8980280228334199
  - 0.8988773747841106
  - 0.9022419186652764
  - 0.9020217729393468
  train_f1_samples:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.952504317789292
  - 0.9526416405978451
  - 0.9532573008467256
  train_f1_samples_oob:
  - 0.9010741510741512
  - 0.8980280228334199
  - 0.8988773747841106
  - 0.9022419186652764
  - 0.9020217729393469
  train_f1_weighted:
  - 0.9497365055875695
  - 0.9512760280740744
  - 0.9506032389677355
  - 0.9507648282330505
  - 0.9513265180978436
  train_f1_weighted_oob:
  - 0.8958742163529396
  - 0.8924854477891239
  - 0.8936755024905509
  - 0.8966182854199563
  - 0.8968394953605788
  train_jaccard_macro:
  - 0.9083060760716141
  - 0.9109651412696604
  - 0.9098343929231509
  - 0.9100887822884851
  - 0.9112157122708663
  train_jaccard_macro_oob:
  - 0.8233087219873331
  - 0.8187674152100324
  - 0.8197545590639758
  - 0.8258582142781692
  - 0.8249884576870045
  train_jaccard_micro:
  - 0.9077838373822509
  - 0.9104428288169201
  - 0.909315746084089
  - 0.90956608313283
  - 0.9106892282294676
  train_jaccard_micro_oob:
  - 0.8199590099322087
  - 0.8149281846008948
  - 0.8163281311269704
  - 0.8218950368083591
  - 0.8215297450424929
  train_jaccard_samples:
  - 0.9195252945252944
  - 0.9224306224825165
  - 0.9213175425610658
  - 0.9213218133968916
  - 0.9222888740773655
  train_jaccard_samples_oob:
  - 0.8353009603009601
  - 0.8302073294289173
  - 0.8310510732790524
  - 0.8372933114851778
  - 0.8366659260904984
  train_jaccard_weighted:
  - 0.9048399605392874
  - 0.907627102711753
  - 0.9064092789056727
  - 0.9066964140724915
  - 0.9077184053556816
  train_jaccard_weighted_oob:
  - 0.8150192030819519
  - 0.8099888905134228
  - 0.8114327256124814
  - 0.8168996821481211
  - 0.8166536128991759
  train_label_ranking_average_precision_score:
  - 0.9833246708246707
  - 0.9779882373291816
  - 0.9812176165803106
  - 0.9797966631908236
  - 0.9809054777950578
  train_label_ranking_average_precision_score_oob:
  - 0.8806739431739429
  - 0.8746713371389031
  - 0.8826511226252155
  - 0.8811131386861317
  - 0.8821280456194921
  train_matthews_corrcoef_macro:
  - 0.83273778273603
  - 0.8374063874232539
  - 0.8354657219520675
  - 0.8365943187424646
  - 0.8382608810885306
  train_matthews_corrcoef_macro_oob:
  - 0.6292042123446819
  - 0.6112056242218055
  - 0.6183599183304745
  - 0.6334669125996254
  - 0.6317797516120002
  train_matthews_corrcoef_micro:
  - 0.8293684994681507
  - 0.8342102461481196
  - 0.8321139036649581
  - 0.8333994346175918
  - 0.8347504071401501
  train_matthews_corrcoef_micro_oob:
  - 0.6283059065918015
  - 0.6138593206558851
  - 0.6182931060527475
  - 0.634639882398386
  - 0.6315625457898528
  train_matthews_corrcoef_samples:
  - 0.7705045842053875
  - 0.7815624519369122
  - 0.7777135091442728
  - 0.7798189607919017
  - 0.7796957607789519
  train_matthews_corrcoef_samples_oob:
  - 0.490819541739306
  - 0.4736308486278275
  - 0.4733498190321289
  - 0.5008132867175239
  - 0.49210629908953124
  train_matthews_corrcoef_weighted:
  - 0.8280855408400088
  - 0.8329507609142461
  - 0.8308964310104808
  - 0.8320549029830804
  - 0.8334328853640383
  train_matthews_corrcoef_weighted_oob:
  - 0.6121749210676627
  - 0.5922176400928011
  - 0.6014484953821498
  - 0.6145684409601481
  - 0.6149185451303355
  train_ndgc:
  - 0.9877787629957939
  - 0.9838844146300124
  - 0.9863225973834908
  - 0.9852111987059011
  - 0.985958887706705
  train_ndgc_oob:
  - 0.9120248724574352
  - 0.9074993991340577
  - 0.913351329845467
  - 0.9125278169349333
  - 0.9129362514349105
  train_neg_coverage_error:
  - -1.1122661122661122
  - -1.1209133367929425
  - -1.1160621761658032
  - -1.1246089676746611
  - -1.1145671332296527
  train_neg_coverage_error_oob:
  - -1.4178794178794178
  - -1.4307213284898805
  - -1.4134715025906737
  - -1.4259645464025026
  - -1.4064282011404874
  train_neg_hamming_loss_macro:
  - -0.04833679833679833
  - -0.04687770281958139
  - -0.04749568221070812
  - -0.04735835940215502
  - -0.04674269915327458
  train_neg_hamming_loss_macro_oob:
  - -0.09892584892584892
  - -0.10197197716658017
  - -0.10112262521588948
  - -0.09775808133472368
  - -0.09797822706065319
  train_neg_hamming_loss_micro:
  - -0.04833679833679834
  - -0.04687770281958139
  - -0.047495682210708115
  - -0.04735835940215502
  - -0.04674269915327458
  train_neg_hamming_loss_micro_oob:
  - -0.09892584892584892
  - -0.10197197716658017
  - -0.10112262521588947
  - -0.09775808133472368
  - -0.09797822706065319
  train_neg_hamming_loss_samples:
  - -0.04833679833679834
  - -0.046877702819581375
  - -0.047495682210708115
  - -0.04735835940215502
  - -0.04674269915327458
  train_neg_hamming_loss_samples_oob:
  - -0.09892584892584892
  - -0.10197197716658017
  - -0.10112262521588944
  - -0.09775808133472366
  - -0.09797822706065319
  train_neg_hamming_loss_weighted:
  - -0.05026349441243058
  - -0.04872397192592552
  - -0.04939676103226452
  - -0.049235171766949526
  - -0.04867348190215646
  train_neg_hamming_loss_weighted_oob:
  - -0.10412578364706024
  - -0.10751455221087607
  - -0.10632449750944908
  - -0.10338171458004376
  - -0.10316050463942128
  train_neg_label_ranking_loss:
  - -0.007341476091476092
  - -0.009561494551115724
  - -0.008419689119170985
  - -0.008954640250260687
  - -0.008527734577501297
  train_neg_label_ranking_loss_oob:
  - -0.06682692307692308
  - -0.07010897768552153
  - -0.06656735751295338
  - -0.06724452554744526
  - -0.06565578019699327
  train_precision_macro:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.9525043177892919
  - 0.9526416405978452
  - 0.9532573008467254
  train_precision_macro_oob:
  - 0.901074151074151
  - 0.8980280228334198
  - 0.8988773747841106
  - 0.9022419186652765
  - 0.9020217729393468
  train_precision_micro:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.9525043177892919
  - 0.952641640597845
  - 0.9532573008467254
  train_precision_micro_oob:
  - 0.9010741510741511
  - 0.8980280228334199
  - 0.8988773747841106
  - 0.9022419186652764
  - 0.9020217729393468
  train_precision_samples:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.952504317789292
  - 0.9526416405978451
  - 0.9532573008467256
  train_precision_samples_oob:
  - 0.9010741510741512
  - 0.8980280228334199
  - 0.8988773747841106
  - 0.9022419186652764
  - 0.9020217729393469
  train_precision_weighted:
  - 0.9497365055875695
  - 0.9512760280740744
  - 0.9506032389677355
  - 0.9507648282330505
  - 0.9513265180978436
  train_precision_weighted_oob:
  - 0.8958742163529396
  - 0.8924854477891239
  - 0.8936755024905509
  - 0.8966182854199563
  - 0.8968394953605788
  train_recall_macro:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.9525043177892919
  - 0.9526416405978452
  - 0.9532573008467254
  train_recall_macro_oob:
  - 0.901074151074151
  - 0.8980280228334198
  - 0.8988773747841106
  - 0.9022419186652765
  - 0.9020217729393468
  train_recall_micro:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.9525043177892919
  - 0.952641640597845
  - 0.9532573008467254
  train_recall_micro_oob:
  - 0.9010741510741511
  - 0.8980280228334199
  - 0.8988773747841106
  - 0.9022419186652764
  - 0.9020217729393468
  train_recall_samples:
  - 0.9516632016632016
  - 0.9531222971804186
  - 0.952504317789292
  - 0.9526416405978451
  - 0.9532573008467256
  train_recall_samples_oob:
  - 0.9010741510741512
  - 0.8980280228334199
  - 0.8988773747841106
  - 0.9022419186652764
  - 0.9020217729393469
  train_recall_weighted:
  - 0.9497365055875695
  - 0.9512760280740744
  - 0.9506032389677355
  - 0.9507648282330505
  - 0.9513265180978436
  train_recall_weighted_oob:
  - 0.8958742163529396
  - 0.8924854477891239
  - 0.8936755024905509
  - 0.8966182854199563
  - 0.8968394953605788
  train_roc_auc_macro:
  - 0.9970678509760439
  - 0.9962642163660701
  - 0.9969407190115428
  - 0.9963956494471523
  - 0.9971343698158558
  train_roc_auc_macro_oob:
  - 0.9504311784826207
  - 0.9465285214547335
  - 0.9486810923791723
  - 0.9467325492398838
  - 0.9498614607553956
  train_roc_auc_micro:
  - 0.9966809155655784
  - 0.9958757791531525
  - 0.9964901425908145
  - 0.9961063102598039
  - 0.9966399112430536
  train_roc_auc_micro_oob:
  - 0.9557414414752775
  - 0.9527077585426503
  - 0.9540147924635649
  - 0.9531365987633653
  - 0.9555252466176094
  train_roc_auc_samples:
  - 0.9926585239085239
  - 0.9904385054488843
  - 0.991580310880829
  - 0.9910453597497393
  - 0.9914722654224988
  train_roc_auc_samples_oob:
  - 0.933173076923077
  - 0.9298910223144785
  - 0.9334326424870466
  - 0.9327554744525548
  - 0.9343442198030066
  train_roc_auc_weighted:
  - 0.9970612449652259
  - 0.9962479045965434
  - 0.9969205241033815
  - 0.9963579190662281
  - 0.9971196921785589
  train_roc_auc_weighted_oob:
  - 0.9462945217839159
  - 0.9419545609036132
  - 0.944521329736659
  - 0.942264517418583
  - 0.9458557376986271
start: 2023-12-12 18:50:48.311146
wrapper: null
