active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MjMzMzMz878yMzMzMzPzv5CZmZmZmcm/nJmZmZmZ6T/OzMzMzMz8Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz8z/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/IzMzMzMz8vw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b+gmZmZmZnZP2hmZmZmZvY/zMzMzMzMBMA0MzMzMzMDQA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:04:06.269785
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: d9cf4e5f4f3d6a8004a1db6a78c9054f616025b4d3b1d3ddb2d07fada156c6fc
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d9cf4e5_20231212T170356306342_embedding_weak__0_birds.yml
results:
  fit_time:
  - 1.6146714687347412
  - 1.6250863075256348
  - 1.6780660152435303
  - 1.6827771663665771
  - 1.703334093093872
  score_time:
  - 1.3977692127227783
  - 1.3759279251098633
  - 1.3548104763031006
  - 1.3752481937408447
  - 1.4266035556793213
  test_average_precision_macro:
  - 0.5336121662213617
  - 0.4735158090606311
  - 0.6244735909343212
  - 0.5685892006254352
  - 0.5940653172944866
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5263411228695238
  - 0.4851496642374235
  - 0.5445065367536226
  - 0.5342467760102257
  - 0.5813509587150806
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3594037260555728
  - 0.30985559681290115
  - 0.3666077095625659
  - 0.33380694772623637
  - 0.33480914004169815
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.610983012063337
  - 0.5718451455844483
  - 0.6567167263736073
  - 0.6241818820503777
  - 0.6575373276660844
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9498164014687881
  - 0.9494084047327622
  - 0.9538963688290494
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9498164014687882
  - 0.9494084047327621
  - 0.9538963688290494
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9506323949408404
  - 0.9498164014687881
  - 0.9498164014687882
  - 0.9494084047327621
  - 0.9538963688290494
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9290668531794603
  - 0.9271554529853839
  - 0.9260629551327226
  - 0.924712238665727
  - 0.9297403716008368
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9076073083571392
  - 0.9061321740696414
  - 0.9062282289150562
  - 0.905665307608967
  - 0.9137096275796758
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9059097978227061
  - 0.9044289044289044
  - 0.9044289044289044
  - 0.9036893203883495
  - 0.9118564742589703
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9110004420924542
  - 0.9101431766750271
  - 0.9096482665744546
  - 0.909738873641806
  - 0.9175225459856402
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8694857284035432
  - 0.8658659004862589
  - 0.8640175120417087
  - 0.8619824090090695
  - 0.8705434412165847
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7935122531873557
  - 0.7594679999136762
  - 0.7852123607253567
  - 0.8066751647804999
  - 0.8386851090339463
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06961857012981536
  - 0.043914087245320074
  - 0.04898197545259954
  - 0.04626872265750203
  - 0.06008965425967352
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.29283003418853853
  - 0.24081947464180053
  - 0.2543859020120924
  - 0.24221131357522865
  - 0.3133903129293563
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.055243436584518066
  - 0.039884905213975405
  - 0.05289921881346054
  - 0.054531918235284305
  - 0.0686735996097403
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1614000788425734
  - 0.12102468806081183
  - 0.1300563129945924
  - 0.12031371253811665
  - 0.15811812137360323
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4189597557428216
  - 0.3808771656233447
  - 0.42974195739973864
  - 0.3954873973605132
  - 0.3854089914830185
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.007751937984496
  - -3.24031007751938
  - -2.86046511627907
  - -2.9612403100775193
  - -2.5813953488372094
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.049367605059159526
  - -0.05018359853121175
  - -0.05018359853121175
  - -0.05059159526723786
  - -0.046103631170950635
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.049367605059159526
  - -0.05018359853121175
  - -0.05018359853121175
  - -0.05059159526723786
  - -0.046103631170950635
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.049367605059159526
  - -0.050183598531211744
  - -0.05018359853121175
  - -0.05059159526723786
  - -0.04610363117095063
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07093314682053972
  - -0.07284454701461626
  - -0.07393704486727744
  - -0.07528776133427297
  - -0.07025962839916329
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08690557618396194
  - -0.091828165374677
  - -0.08116228403506105
  - -0.07765427876576987
  - -0.06589868306694573
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9498164014687881
  - 0.9494084047327622
  - 0.9538963688290494
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9498164014687882
  - 0.9494084047327621
  - 0.9538963688290494
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9506323949408404
  - 0.9498164014687881
  - 0.9498164014687882
  - 0.9494084047327621
  - 0.9538963688290494
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9290668531794603
  - 0.9271554529853839
  - 0.9260629551327226
  - 0.924712238665727
  - 0.9297403716008368
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9498164014687881
  - 0.9494084047327622
  - 0.9538963688290494
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9498164014687882
  - 0.9494084047327621
  - 0.9538963688290494
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9506323949408404
  - 0.9498164014687881
  - 0.9498164014687882
  - 0.9494084047327621
  - 0.9538963688290494
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9290668531794603
  - 0.9271554529853839
  - 0.9260629551327226
  - 0.924712238665727
  - 0.9297403716008368
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8991166228718974
  - 0.8728545541748546
  - 0.8965888459582181
  - 0.9138650369801143
  - 0.9131033166813485
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9125801994200341
  - 0.8919748618057384
  - 0.9155788153200831
  - 0.9147588432840696
  - 0.9218876941457588
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9012715334082109
  - 0.8779765265723761
  - 0.9148664204863539
  - 0.9042184775076603
  - 0.9148822044239185
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9446780750871171
  - 0.9343132529204867
  - 0.9410574946126321
  - 0.9498385770043725
  - 0.9452172954161189
  train_average_precision_macro_oob:
  - 0.4293388103166215
  - 0.4666704539909821
  - 0.4180109854521445
  - 0.4204996394563002
  - 0.42700390795407045
  train_average_precision_micro:
  - 0.8527457877148443
  - 0.8559639192815488
  - 0.8475609891566295
  - 0.8645059787031977
  - 0.8712664643463942
  train_average_precision_micro_oob:
  - 0.5038458564892923
  - 0.521089752350082
  - 0.4928966749558612
  - 0.5109115443937813
  - 0.5129944027171949
  train_average_precision_samples:
  - 0.48740233173372705
  - 0.49266180632459705
  - 0.4850480650916698
  - 0.5018004798818751
  - 0.5096896917681802
  train_average_precision_samples_oob:
  - 0.3353753810134909
  - 0.34290620291587787
  - 0.32737628889261927
  - 0.3412606321385527
  - 0.3449239438710198
  train_average_precision_weighted:
  - 0.932569918308118
  - 0.9250483205262908
  - 0.9307286053369112
  - 0.9410374628324762
  - 0.9396877752553852
  train_average_precision_weighted_oob:
  - 0.5380744370872043
  - 0.5567842745601512
  - 0.5226179828276327
  - 0.5406924346543603
  - 0.5393738466817805
  train_f1_macro:
  - 0.9562423500611994
  - 0.9562423500611994
  - 0.9560383516931864
  - 0.9549163606691145
  - 0.9560383516931864
  train_f1_macro_oob:
  - 0.9507343941248468
  - 0.9501223990208078
  - 0.9500203998368013
  - 0.9503263973888207
  - 0.9496124031007751
  train_f1_micro:
  - 0.9562423500611995
  - 0.9562423500611995
  - 0.9560383516931864
  - 0.9549163606691147
  - 0.9560383516931864
  train_f1_micro_oob:
  - 0.950734394124847
  - 0.9501223990208079
  - 0.9500203998368013
  - 0.9503263973888209
  - 0.9496124031007752
  train_f1_samples:
  - 0.9562423500611995
  - 0.9562423500611995
  - 0.9560383516931866
  - 0.9549163606691146
  - 0.9560383516931865
  train_f1_samples_oob:
  - 0.950734394124847
  - 0.9501223990208079
  - 0.9500203998368013
  - 0.950326397388821
  - 0.9496124031007752
  train_f1_weighted:
  - 0.9412429882902588
  - 0.9403004431796286
  - 0.9407429683091271
  - 0.937713475303692
  - 0.9420843610523845
  train_f1_weighted_oob:
  - 0.9269666264934756
  - 0.925763706701054
  - 0.9253170572336572
  - 0.9265570703020585
  - 0.9261070002349072
  train_jaccard_macro:
  - 0.9171652284950522
  - 0.9172586242415277
  - 0.9167934957677903
  - 0.914861482201866
  - 0.9167060446526191
  train_jaccard_macro_oob:
  - 0.9079017434334999
  - 0.906911027905765
  - 0.9067596924982296
  - 0.9071547926809664
  - 0.9058891464403336
  train_jaccard_micro:
  - 0.9161536206391088
  - 0.9161536206391088
  - 0.9157791890571568
  - 0.9137224282646886
  - 0.9157791890571568
  train_jaccard_micro_oob:
  - 0.9060950714494022
  - 0.9049839696881375
  - 0.9047989119875656
  - 0.9053541929841609
  - 0.9040590405904059
  train_jaccard_samples:
  - 0.9209571702873018
  - 0.9208426347834842
  - 0.9206347419011727
  - 0.918581269870451
  - 0.920298572902213
  train_jaccard_samples_oob:
  - 0.9118245724615796
  - 0.9106567662760787
  - 0.9107882304191708
  - 0.9109634223208541
  - 0.9097371410187386
  train_jaccard_weighted:
  - 0.8896746807437385
  - 0.8882582982779054
  - 0.8888286298864913
  - 0.8836409605802246
  - 0.891090901636226
  train_jaccard_weighted_oob:
  - 0.8657617074625478
  - 0.8638934230965571
  - 0.8632834586447683
  - 0.8650247524189084
  - 0.8643471530920113
  train_label_ranking_average_precision_score:
  - 0.9486426418112462
  - 0.950026147409868
  - 0.9501643441614369
  - 0.9533508674787743
  - 0.9534881413805828
  train_label_ranking_average_precision_score_oob:
  - 0.7966156910910098
  - 0.8002705440011488
  - 0.7924925679623862
  - 0.7928110197354514
  - 0.7887223934834225
  train_matthews_corrcoef_macro:
  - 0.10028434869060493
  - 0.12841328118429302
  - 0.10201451528015384
  - 0.1045991937863293
  - 0.12612433057005973
  train_matthews_corrcoef_macro_oob:
  - 0.060012954128111244
  - 0.04716548185211276
  - 0.05614892067236783
  - 0.05506363560435045
  - 0.047572052853433876
  train_matthews_corrcoef_micro:
  - 0.4105194638033566
  - 0.41447739882832063
  - 0.407975749813539
  - 0.38228229247688406
  - 0.4189929938716518
  train_matthews_corrcoef_micro_oob:
  - 0.26563096507162015
  - 0.24851481946008475
  - 0.24451095389197736
  - 0.25320559742121734
  - 0.24700869782600274
  train_matthews_corrcoef_samples:
  - 0.11164983698855364
  - 0.11373767176835485
  - 0.10785872513257241
  - 0.09661724089333952
  - 0.11613215198318246
  train_matthews_corrcoef_samples_oob:
  - 0.05877620028326761
  - 0.048603334846349176
  - 0.04960288532004044
  - 0.04947330949805283
  - 0.049622416591864116
  train_matthews_corrcoef_weighted:
  - 0.24585835168486925
  - 0.2735480659747788
  - 0.24496414163628435
  - 0.24061840883258914
  - 0.2784503430373622
  train_matthews_corrcoef_weighted_oob:
  - 0.14920198394403758
  - 0.12123798435171282
  - 0.1342055625970266
  - 0.13865001977641642
  - 0.1231350833118523
  train_ndgc:
  - 0.504674806604833
  - 0.5098326340735384
  - 0.5024636389891094
  - 0.5177127969697293
  - 0.5257618095094104
  train_ndgc_oob:
  - 0.3975974682834802
  - 0.402975680440143
  - 0.38970446081237997
  - 0.40352615461254304
  - 0.40874230571771714
  train_neg_coverage_error:
  - -1.2577519379844961
  - -1.2771317829457365
  - -1.255813953488372
  - -1.25
  - -1.25
  train_neg_coverage_error_oob:
  - -2.945736434108527
  - -2.9244186046511627
  - -2.9748062015503876
  - -3.0174418604651163
  - -3.0251937984496124
  train_neg_hamming_loss_macro:
  - -0.04375764993880049
  - -0.04375764993880049
  - -0.043961648306813546
  - -0.045083639330885356
  - -0.043961648306813546
  train_neg_hamming_loss_macro_oob:
  - -0.049265605875152996
  - -0.049877600979192166
  - -0.049979600163198704
  - -0.04967360261117911
  - -0.050387596899224806
  train_neg_hamming_loss_micro:
  - -0.04375764993880049
  - -0.04375764993880049
  - -0.043961648306813546
  - -0.045083639330885356
  - -0.043961648306813546
  train_neg_hamming_loss_micro_oob:
  - -0.049265605875152996
  - -0.049877600979192166
  - -0.0499796001631987
  - -0.04967360261117911
  - -0.050387596899224806
  train_neg_hamming_loss_samples:
  - -0.043757649938800484
  - -0.043757649938800484
  - -0.04396164830681354
  - -0.045083639330885356
  - -0.04396164830681354
  train_neg_hamming_loss_samples_oob:
  - -0.049265605875153
  - -0.049877600979192166
  - -0.04997960016319869
  - -0.049673602611179105
  - -0.0503875968992248
  train_neg_hamming_loss_weighted:
  - -0.058757011709741264
  - -0.05969955682037144
  - -0.05925703169087291
  - -0.06228652469630819
  - -0.05791563894761569
  train_neg_hamming_loss_weighted_oob:
  - -0.07303337350652443
  - -0.07423629329894615
  - -0.07468294276634295
  - -0.07344292969794174
  - -0.07389299976509278
  train_neg_label_ranking_loss:
  - -0.009701569457041414
  - -0.009920396552578495
  - -0.009740268597997736
  - -0.009144341497282674
  - -0.008649748659153583
  train_neg_label_ranking_loss_oob:
  - -0.07992706772631533
  - -0.08067842645903521
  - -0.08166386958281624
  - -0.08367892873706828
  - -0.08336110930160176
  train_precision_macro:
  - 0.9562423500611994
  - 0.9562423500611994
  - 0.9560383516931864
  - 0.9549163606691145
  - 0.9560383516931864
  train_precision_macro_oob:
  - 0.9507343941248468
  - 0.9501223990208078
  - 0.9500203998368013
  - 0.9503263973888207
  - 0.9496124031007751
  train_precision_micro:
  - 0.9562423500611995
  - 0.9562423500611995
  - 0.9560383516931864
  - 0.9549163606691147
  - 0.9560383516931864
  train_precision_micro_oob:
  - 0.950734394124847
  - 0.9501223990208079
  - 0.9500203998368013
  - 0.9503263973888209
  - 0.9496124031007752
  train_precision_samples:
  - 0.9562423500611995
  - 0.9562423500611995
  - 0.9560383516931866
  - 0.9549163606691146
  - 0.9560383516931865
  train_precision_samples_oob:
  - 0.950734394124847
  - 0.9501223990208079
  - 0.9500203998368013
  - 0.950326397388821
  - 0.9496124031007752
  train_precision_weighted:
  - 0.9412429882902588
  - 0.9403004431796286
  - 0.9407429683091271
  - 0.937713475303692
  - 0.9420843610523845
  train_precision_weighted_oob:
  - 0.9269666264934756
  - 0.925763706701054
  - 0.9253170572336572
  - 0.9265570703020585
  - 0.9261070002349072
  train_recall_macro:
  - 0.9562423500611994
  - 0.9562423500611994
  - 0.9560383516931864
  - 0.9549163606691145
  - 0.9560383516931864
  train_recall_macro_oob:
  - 0.9507343941248468
  - 0.9501223990208078
  - 0.9500203998368013
  - 0.9503263973888207
  - 0.9496124031007751
  train_recall_micro:
  - 0.9562423500611995
  - 0.9562423500611995
  - 0.9560383516931864
  - 0.9549163606691147
  - 0.9560383516931864
  train_recall_micro_oob:
  - 0.950734394124847
  - 0.9501223990208079
  - 0.9500203998368013
  - 0.9503263973888209
  - 0.9496124031007752
  train_recall_samples:
  - 0.9562423500611995
  - 0.9562423500611995
  - 0.9560383516931866
  - 0.9549163606691146
  - 0.9560383516931865
  train_recall_samples_oob:
  - 0.950734394124847
  - 0.9501223990208079
  - 0.9500203998368013
  - 0.950326397388821
  - 0.9496124031007752
  train_recall_weighted:
  - 0.9412429882902588
  - 0.9403004431796286
  - 0.9407429683091271
  - 0.937713475303692
  - 0.9420843610523845
  train_recall_weighted_oob:
  - 0.9269666264934756
  - 0.925763706701054
  - 0.9253170572336572
  - 0.9265570703020585
  - 0.9261070002349072
  train_roc_auc_macro:
  - 0.9948211329660794
  - 0.9945984851191871
  - 0.9952292601074698
  - 0.9960615335613996
  - 0.9957045119267793
  train_roc_auc_macro_oob:
  - 0.8827439844453624
  - 0.8839077436892104
  - 0.888582581757026
  - 0.8679106823761189
  - 0.880402412337973
  train_roc_auc_micro:
  - 0.9898216519868012
  - 0.9893507634895445
  - 0.9892865192053832
  - 0.9899279782646923
  - 0.990683639434448
  train_roc_auc_micro_oob:
  - 0.9069636507656557
  - 0.9100007560832252
  - 0.9057536070720654
  - 0.9047919344572488
  - 0.90614974943484
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9918567493257503
  - 0.9918146240929773
  - 0.9925685664213717
  - 0.9939725073042809
  - 0.9935098591777461
  train_roc_auc_weighted_oob:
  - 0.8913932919748294
  - 0.8946233604599643
  - 0.8890434470627406
  - 0.8930680901230695
  - 0.8926306960081701
start: 2023-12-12 17:03:56.306342
wrapper: null
