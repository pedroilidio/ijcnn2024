active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r+AZmZmZmYSQAAzMzMzMwPAADMzMzMzC8AAzczMzMwEQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 10:53:50.024494
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__8
  params: {}
hash: 58bbfb38c4bf2246256b676b393e1a194983de596bec1d8c39c9c4d02c0b1b7b
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/58bbfb3_20231222T104317038183_embedding_proba_weak__8_PlantGO.yml
results:
  fit_time:
  - 581.7543549537659
  - 2.7823920249938965
  - 572.1343359947205
  - 573.0548722743988
  - 576.6692082881927
  score_time:
  - 11.973400831222534
  - 0.0
  - 12.032105207443237
  - 12.424373865127563
  - 11.791167974472046
  test_average_precision_macro:
  - 0.7541013188402824
  - .nan
  - 0.7945535897768239
  - 0.6791171387496607
  - 0.7900360664827405
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7716073914844823
  - .nan
  - 0.8022428608587661
  - 0.7299072838801841
  - 0.7610053400815285
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8622572717750382
  - .nan
  - 0.8820346320346321
  - 0.8464744356704156
  - 0.8523377744880335
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8341760130069442
  - .nan
  - 0.831741138529284
  - 0.7744221091918645
  - 0.8315253583086035
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9310490693739427
  - .nan
  - 0.9238215488215489
  - 0.9271356783919599
  - 0.9248704663212436
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9310490693739425
  - .nan
  - 0.9238215488215489
  - 0.9271356783919598
  - 0.9248704663212435
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9310490693739426
  - .nan
  - 0.9238215488215489
  - 0.9271356783919598
  - 0.9248704663212435
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8903602344343902
  - .nan
  - 0.8681389365351627
  - 0.8905978490583759
  - 0.8789381921764116
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8754596705071952
  - .nan
  - 0.8645282114107188
  - 0.8687511826529503
  - 0.8653483415880237
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8709932726553226
  - .nan
  - 0.8584278451310129
  - 0.8641686182669789
  - 0.8602409638554217
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8742455514029115
  - .nan
  - 0.8612498612498609
  - 0.8672262410955875
  - 0.8638045891931901
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8061364887362494
  - .nan
  - 0.7733619362522364
  - 0.806998802695761
  - 0.7879762620187271
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8622572717750382
  - .nan
  - 0.8820346320346322
  - 0.8464744356704155
  - 0.8523377744880335
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10125401105015869
  - .nan
  - 0.09216449255857939
  - 0.07851382115022758
  - 0.09477647559518991
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4433007238592335
  - .nan
  - 0.36606080241157357
  - 0.4146924361248146
  - 0.4011306696724761
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.24015514466409585
  - .nan
  - 0.17033976124885217
  - 0.20979835334001234
  - 0.21055110692416393
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.27180783958259014
  - .nan
  - 0.21884277376872907
  - 0.22966932169818108
  - 0.25354718242325164
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8983221935759118
  - .nan
  - 0.9127113098551239
  - 0.8851141181610882
  - 0.8908443861735141
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6395939086294415
  - .nan
  - -1.4848484848484849
  - -1.7688442211055277
  - -1.6269430051813472
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06895093062605753
  - .nan
  - -0.07617845117845118
  - -0.0728643216080402
  - -0.07512953367875648
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06895093062605753
  - .nan
  - -0.07617845117845118
  - -0.0728643216080402
  - -0.07512953367875648
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06895093062605752
  - .nan
  - -0.07617845117845118
  - -0.07286432160804018
  - -0.07512953367875648
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10963976556560975
  - .nan
  - -0.13186106346483706
  - -0.10940215094162402
  - -0.12106180782358865
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04817805807653524
  - .nan
  - -0.03620293847566574
  - -0.060135695311574706
  - -0.046585021196420155
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9310490693739427
  - .nan
  - 0.9238215488215489
  - 0.9271356783919599
  - 0.9248704663212436
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9310490693739425
  - .nan
  - 0.9238215488215489
  - 0.9271356783919598
  - 0.9248704663212435
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9310490693739426
  - .nan
  - 0.9238215488215489
  - 0.9271356783919598
  - 0.9248704663212435
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8903602344343902
  - .nan
  - 0.8681389365351627
  - 0.8905978490583759
  - 0.8789381921764116
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9310490693739427
  - .nan
  - 0.9238215488215489
  - 0.9271356783919599
  - 0.9248704663212436
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9310490693739425
  - .nan
  - 0.9238215488215489
  - 0.9271356783919598
  - 0.9248704663212435
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9310490693739426
  - .nan
  - 0.9238215488215489
  - 0.9271356783919598
  - 0.9248704663212435
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8903602344343902
  - .nan
  - 0.8681389365351627
  - 0.8905978490583759
  - 0.8789381921764116
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9516002465579936
  - .nan
  - 0.9693954393435552
  - 0.9580746067500231
  - 0.9633257925579778
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9546471548648486
  - .nan
  - 0.9713755100617305
  - 0.9500995193837106
  - 0.9632177955893775
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9518219419234648
  - .nan
  - 0.9637970615243344
  - 0.9398643046884253
  - 0.9534149788035798
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9618862833259395
  - .nan
  - 0.9647717020987783
  - 0.9554432569468213
  - 0.961728231262853
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8382439516884448
  - .nan
  - 0.8399733981056388
  - 0.8349516433461907
  - 0.8735981846762443
  train_average_precision_macro_oob:
  - 0.7472097671093793
  - .nan
  - 0.7594795048683244
  - 0.7228594931053128
  - 0.7879595882681646
  train_average_precision_micro:
  - 0.8567645148326192
  - .nan
  - 0.8638090414581372
  - 0.8416035232241217
  - 0.8729457925099583
  train_average_precision_micro_oob:
  - 0.8048368742774508
  - .nan
  - 0.8179323074983813
  - 0.7834297993267176
  - 0.8199601416559463
  train_average_precision_samples:
  - 0.9116466475621404
  - .nan
  - 0.920074323824324
  - 0.9072259362374895
  - 0.9188292387018502
  train_average_precision_samples_oob:
  - 0.8714240447275019
  - .nan
  - 0.8889729252229251
  - 0.8724016249048341
  - 0.8781018097260136
  train_average_precision_weighted:
  - 0.8800791485183509
  - .nan
  - 0.8808623452022846
  - 0.8695366474782956
  - 0.9063001206400578
  train_average_precision_weighted_oob:
  - 0.8356005140376105
  - .nan
  - 0.8351154326271802
  - 0.8255124406557739
  - 0.8623213118230935
  train_f1_macro:
  - 0.9348058045241143
  - .nan
  - 0.9326923076923076
  - 0.9307873341891315
  - 0.9324840764331209
  train_f1_macro_oob:
  - 0.923388817755015
  - .nan
  - 0.9246794871794871
  - 0.9238339751818572
  - 0.924203821656051
  train_f1_micro:
  - 0.9348058045241144
  - .nan
  - 0.9326923076923077
  - 0.9307873341891314
  - 0.932484076433121
  train_f1_micro_oob:
  - 0.9233888177550149
  - .nan
  - 0.9246794871794872
  - 0.9238339751818571
  - 0.924203821656051
  train_f1_samples:
  - 0.9348058045241143
  - .nan
  - 0.9326923076923076
  - 0.9307873341891313
  - 0.9324840764331209
  train_f1_samples_oob:
  - 0.9233888177550147
  - .nan
  - 0.9246794871794872
  - 0.9238339751818571
  - 0.9242038216560509
  train_f1_weighted:
  - 0.8982195057135264
  - .nan
  - 0.8897283815433282
  - 0.8905362068202319
  - 0.8918978476771214
  train_f1_weighted_oob:
  - 0.8740049646075422
  - .nan
  - 0.8722876174833472
  - 0.8760339408888801
  - 0.8754928004346907
  train_jaccard_macro:
  - 0.8805564197159835
  - .nan
  - 0.877525048464244
  - 0.8743795281933786
  - 0.8769983261817216
  train_jaccard_macro_oob:
  - 0.8629465368721618
  - .nan
  - 0.8653780563074749
  - 0.86379564985759
  - 0.8642825576781511
  train_jaccard_micro:
  - 0.877591906240609
  - .nan
  - 0.8738738738738738
  - 0.870535267633817
  - 0.8735083532219571
  train_jaccard_micro_oob:
  - 0.8576808721506441
  - .nan
  - 0.8599105812220567
  - 0.8584493041749502
  - 0.8590882178804026
  train_jaccard_samples:
  - 0.8812961686201121
  - .nan
  - 0.877418991265145
  - 0.8743274697061604
  - 0.8772142507174353
  train_jaccard_samples_oob:
  - 0.860747703001224
  - .nan
  - 0.8629585798816567
  - 0.8617162042065765
  - 0.862011618954294
  train_jaccard_weighted:
  - 0.8177454114382093
  - .nan
  - 0.8050071041724601
  - 0.8056246857306819
  - 0.8078808478637505
  train_jaccard_weighted_oob:
  - 0.780535227675014
  - .nan
  - 0.7787678574651683
  - 0.7835184599014594
  - 0.7827836094657886
  train_label_ranking_average_precision_score:
  - 0.9116466475621408
  - .nan
  - 0.9200743238243241
  - 0.9072259362374896
  - 0.9188292387018503
  train_label_ranking_average_precision_score_oob:
  - 0.8714240447275028
  - .nan
  - 0.8889729252229258
  - 0.872401624904834
  - 0.8781018097260141
  train_matthews_corrcoef_macro:
  - 0.17870245106687377
  - .nan
  - 0.17350519147999777
  - 0.14855495211811928
  - 0.1666899021037459
  train_matthews_corrcoef_macro_oob:
  - 0.09262796769582426
  - .nan
  - 0.11500612419841028
  - 0.08066976693253958
  - 0.0940565692243493
  train_matthews_corrcoef_micro:
  - 0.5095353327737674
  - .nan
  - 0.483850427664274
  - 0.46175366689654085
  - 0.4777511766858217
  train_matthews_corrcoef_micro_oob:
  - 0.3747110788612377
  - .nan
  - 0.38749315256232136
  - 0.3753199069376051
  - 0.3757941467686952
  train_matthews_corrcoef_samples:
  - 0.30772347036449255
  - .nan
  - 0.2790195268010458
  - 0.268613115460831
  - 0.27595985980424664
  train_matthews_corrcoef_samples_oob:
  - 0.17767619584298636
  - .nan
  - 0.188402936004962
  - 0.18776986812930327
  - 0.17635580740870774
  train_matthews_corrcoef_weighted:
  - 0.40587619127106195
  - .nan
  - 0.38635444193239976
  - 0.35463575192188457
  - 0.3789583184750705
  train_matthews_corrcoef_weighted_oob:
  - 0.2387407988841089
  - .nan
  - 0.2703547932551204
  - 0.22341344332712992
  - 0.2394730453344466
  train_ndgc:
  - 0.934091563156411
  - .nan
  - 0.9413118402483571
  - 0.9311846992055038
  - 0.9397612078325883
  train_ndgc_oob:
  - 0.9042442862548138
  - .nan
  - 0.9182387763849073
  - 0.9051937253529833
  - 0.9097902039103063
  train_neg_coverage_error:
  - -1.4571062740076826
  - .nan
  - -1.3692307692307693
  - -1.428754813863928
  - -1.3834394904458598
  train_neg_coverage_error_oob:
  - -1.6363636363636365
  - .nan
  - -1.4961538461538462
  - -1.644415917843389
  - -1.5490445859872612
  train_neg_hamming_loss_macro:
  - -0.0651941954758856
  - .nan
  - -0.0673076923076923
  - -0.06921266581086861
  - -0.06751592356687898
  train_neg_hamming_loss_macro_oob:
  - -0.07661118224498507
  - .nan
  - -0.07532051282051283
  - -0.0761660248181429
  - -0.07579617834394904
  train_neg_hamming_loss_micro:
  - -0.06519419547588562
  - .nan
  - -0.0673076923076923
  - -0.06921266581086863
  - -0.06751592356687898
  train_neg_hamming_loss_micro_oob:
  - -0.07661118224498506
  - .nan
  - -0.07532051282051282
  - -0.07616602481814291
  - -0.07579617834394904
  train_neg_hamming_loss_samples:
  - -0.06519419547588562
  - .nan
  - -0.0673076923076923
  - -0.06921266581086864
  - -0.06751592356687898
  train_neg_hamming_loss_samples_oob:
  - -0.07661118224498506
  - .nan
  - -0.07532051282051282
  - -0.07616602481814293
  - -0.07579617834394904
  train_neg_hamming_loss_weighted:
  - -0.10178049428647357
  - .nan
  - -0.11027161845667184
  - -0.10946379317976797
  - -0.1081021523228786
  train_neg_hamming_loss_weighted_oob:
  - -0.12599503539245768
  - .nan
  - -0.12771238251665298
  - -0.12396605911111994
  - -0.12450719956530926
  train_neg_label_ranking_loss:
  - -0.03275973564065753
  - .nan
  - -0.023993783993783994
  - -0.030360299615755326
  - -0.02643161980741599
  train_neg_label_ranking_loss_oob:
  - -0.04756506593894558
  - .nan
  - -0.03455840455840456
  - -0.048595713229859575
  - -0.040452722554633384
  train_precision_macro:
  - 0.9348058045241143
  - .nan
  - 0.9326923076923076
  - 0.9307873341891315
  - 0.9324840764331209
  train_precision_macro_oob:
  - 0.923388817755015
  - .nan
  - 0.9246794871794871
  - 0.9238339751818572
  - 0.924203821656051
  train_precision_micro:
  - 0.9348058045241144
  - .nan
  - 0.9326923076923077
  - 0.9307873341891314
  - 0.932484076433121
  train_precision_micro_oob:
  - 0.9233888177550149
  - .nan
  - 0.9246794871794872
  - 0.9238339751818571
  - 0.924203821656051
  train_precision_samples:
  - 0.9348058045241143
  - .nan
  - 0.9326923076923076
  - 0.9307873341891313
  - 0.9324840764331209
  train_precision_samples_oob:
  - 0.9233888177550147
  - .nan
  - 0.9246794871794872
  - 0.9238339751818571
  - 0.9242038216560509
  train_precision_weighted:
  - 0.8982195057135264
  - .nan
  - 0.8897283815433282
  - 0.8905362068202319
  - 0.8918978476771214
  train_precision_weighted_oob:
  - 0.8740049646075422
  - .nan
  - 0.8722876174833472
  - 0.8760339408888801
  - 0.8754928004346907
  train_recall_macro:
  - 0.9348058045241143
  - .nan
  - 0.9326923076923076
  - 0.9307873341891315
  - 0.9324840764331209
  train_recall_macro_oob:
  - 0.923388817755015
  - .nan
  - 0.9246794871794871
  - 0.9238339751818572
  - 0.924203821656051
  train_recall_micro:
  - 0.9348058045241144
  - .nan
  - 0.9326923076923077
  - 0.9307873341891314
  - 0.932484076433121
  train_recall_micro_oob:
  - 0.9233888177550149
  - .nan
  - 0.9246794871794872
  - 0.9238339751818571
  - 0.924203821656051
  train_recall_samples:
  - 0.9348058045241143
  - .nan
  - 0.9326923076923076
  - 0.9307873341891313
  - 0.9324840764331209
  train_recall_samples_oob:
  - 0.9233888177550147
  - .nan
  - 0.9246794871794872
  - 0.9238339751818571
  - 0.9242038216560509
  train_recall_weighted:
  - 0.8982195057135264
  - .nan
  - 0.8897283815433282
  - 0.8905362068202319
  - 0.8918978476771214
  train_recall_weighted_oob:
  - 0.8740049646075422
  - .nan
  - 0.8722876174833472
  - 0.8760339408888801
  - 0.8754928004346907
  train_roc_auc_macro:
  - 0.9713540194270013
  - .nan
  - 0.9777830748956093
  - 0.9746735775676315
  - 0.9819509968529596
  train_roc_auc_macro_oob:
  - 0.9622149921824841
  - .nan
  - 0.9701689108911662
  - 0.9543305624508532
  - 0.97014056011361
  train_roc_auc_micro:
  - 0.9728943056453256
  - .nan
  - 0.9801671515666593
  - 0.9755036315480279
  - 0.9784410202394426
  train_roc_auc_micro_oob:
  - 0.9608743459089983
  - .nan
  - 0.9718210637548432
  - 0.9597985124371942
  - 0.9661160374814317
  train_roc_auc_samples:
  - 0.9672402643593425
  - .nan
  - 0.976006216006216
  - 0.9696397003842446
  - 0.9735683801925841
  train_roc_auc_samples_oob:
  - 0.9524349340610544
  - .nan
  - 0.9654415954415955
  - 0.9514042867701406
  - 0.9595472774453666
  train_roc_auc_weighted:
  - 0.9695034463704151
  - .nan
  - 0.9764146914410009
  - 0.9714661665942823
  - 0.9807255330610627
  train_roc_auc_weighted_oob:
  - 0.9618965087096893
  - .nan
  - 0.9698587209176629
  - 0.9616171226400806
  - 0.9720226618073425
start: 2023-12-22 10:43:17.038183
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
