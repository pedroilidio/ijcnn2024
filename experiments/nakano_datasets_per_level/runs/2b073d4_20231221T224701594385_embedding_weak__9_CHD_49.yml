active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvyAzMzMzM/O/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJPzQzMzMzM/M/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:04:53.893499
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__9
  params: {}
hash: 2b073d4e1ca38c6df1673a6d50d08afc17fb711b65c6d7e223fd2c9ddd278017
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2b073d4_20231221T224701594385_embedding_weak__9_CHD_49.yml
results:
  fit_time:
  - 1028.5267832279205
  - 1030.5891404151917
  - 1037.7872734069824
  - 1051.0532929897308
  - 1052.5656864643097
  score_time:
  - 6.0863728523254395
  - 6.143662691116333
  - 5.616242408752441
  - 6.061648368835449
  - 5.9026408195495605
  test_average_precision_macro:
  - 0.542945994967064
  - 0.5752962134298708
  - 0.5111737406953734
  - 0.5288859043452061
  - 0.5504459209719844
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.664851857747971
  - 0.7081627705157834
  - 0.6774367081540141
  - 0.6645272416442254
  - 0.7209997417462809
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7700575575575576
  - 0.7686455260570304
  - 0.7779279279279279
  - 0.7779744346116028
  - 0.7757528556593978
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6597162554050013
  - 0.707380471307536
  - 0.6317681865041552
  - 0.644514874450392
  - 0.6819059246426022
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6966966966966966
  - 0.6932153392330385
  - 0.6861861861861862
  - 0.6976401179941002
  - 0.70404984423676
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6966966966966966
  - 0.6932153392330384
  - 0.6861861861861862
  - 0.6976401179941003
  - 0.7040498442367601
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6966966966966965
  - 0.6932153392330384
  - 0.686186186186186
  - 0.6976401179941003
  - 0.7040498442367601
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6536115062430852
  - 0.6449656538152113
  - 0.6417042042042042
  - 0.6494711849773365
  - 0.6678648454349388
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5560967324530766
  - 0.5535328722305422
  - 0.5470979038603133
  - 0.5586228723323773
  - 0.5634801581273219
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5345622119815668
  - 0.5304740406320542
  - 0.5222857142857142
  - 0.535673839184598
  - 0.5432692307692307
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.572976872976873
  - 0.5686932536490058
  - 0.5541398541398542
  - 0.5671340458951079
  - 0.5759760488732452
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49462413651361065
  - 0.48452266965580837
  - 0.48122159895281275
  - 0.4899322157393255
  - 0.5104106683154276
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7700575575575574
  - 0.7686455260570304
  - 0.7869369369369371
  - 0.7779744346116026
  - 0.7944444444444445
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06168962770149724
  - 0.07643986665020243
  - 0.032641703800910145
  - 0.08064433766874972
  - 0.0491277650458301
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.40910739411539954
  - 0.4097741294459162
  - 0.3876518761163785
  - 0.4125853107169825
  - 0.41777229151314754
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4135005531720688
  - 0.4160249432788747
  - 0.40140485850119756
  - 0.42462590128981686
  - 0.419441250766315
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.05445129754706037
  - 0.06335104814122974
  - 0.025896584326907127
  - 0.06616572682273708
  - 0.042193468545133644
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8462540070868897
  - 0.8443288812728457
  - 0.8569165596735766
  - 0.8542613872298556
  - 0.8500025914293521
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.855855855855856
  - -3.8584070796460175
  - -3.7837837837837838
  - -3.743362831858407
  - -3.97196261682243
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3033033033033033
  - -0.30678466076696165
  - -0.31381381381381385
  - -0.3023598820058997
  - -0.29595015576323985
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3033033033033033
  - -0.30678466076696165
  - -0.3138138138138138
  - -0.3023598820058997
  - -0.29595015576323985
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.30330330330330324
  - -0.30678466076696165
  - -0.3138138138138137
  - -0.3023598820058997
  - -0.29595015576323985
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34638849375691483
  - -0.35503434618478863
  - -0.3582957957957958
  - -0.35052881502266353
  - -0.3321351545650611
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22917917917917918
  - -0.22647492625368734
  - -0.2087087087087087
  - -0.21315142576204524
  - -0.21253894080996885
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6966966966966966
  - 0.6932153392330385
  - 0.6861861861861862
  - 0.6976401179941002
  - 0.70404984423676
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6966966966966966
  - 0.6932153392330384
  - 0.6861861861861862
  - 0.6976401179941003
  - 0.7040498442367601
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6966966966966965
  - 0.6932153392330384
  - 0.686186186186186
  - 0.6976401179941003
  - 0.7040498442367601
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6536115062430852
  - 0.6449656538152113
  - 0.6417042042042042
  - 0.6494711849773365
  - 0.6678648454349388
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6966966966966966
  - 0.6932153392330385
  - 0.6861861861861862
  - 0.6976401179941002
  - 0.70404984423676
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6966966966966966
  - 0.6932153392330384
  - 0.6861861861861862
  - 0.6976401179941003
  - 0.7040498442367601
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6966966966966965
  - 0.6932153392330384
  - 0.686186186186186
  - 0.6976401179941003
  - 0.7040498442367601
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6536115062430852
  - 0.6449656538152113
  - 0.6417042042042042
  - 0.6494711849773365
  - 0.6678648454349388
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5809235192089446
  - 0.6094091486337649
  - 0.5697425611478298
  - 0.532565658780508
  - 0.6011787215293088
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7790394621724914
  - 0.788702369059512
  - 0.777796149323927
  - 0.7775648965842966
  - 0.7893454859746993
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7708208208208209
  - 0.7735250737463127
  - .nan
  - 0.7868485742379548
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6078919652248603
  - 0.6764443344079226
  - 0.5702914149122704
  - 0.563871978607291
  - 0.6319704294830399
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8768794912721352
  - 0.8607674381015734
  - 0.8645634417537883
  - 0.8675852937920895
  - 0.8625652291183327
  train_average_precision_macro_oob:
  - 0.6583061745318388
  - 0.6300788132560505
  - 0.6304459672113132
  - 0.6428327234660269
  - 0.6294562712738179
  train_average_precision_micro:
  - 0.7492168620129523
  - 0.7257494208877864
  - 0.7468282921066237
  - 0.7567091725050236
  - 0.7337623981171966
  train_average_precision_micro_oob:
  - 0.724777433146381
  - 0.6925139805616258
  - 0.7106541178755739
  - 0.7162384955562847
  - 0.7012313227770804
  train_average_precision_samples:
  - 0.8106825575575575
  - 0.8155071644042232
  - 0.8013951451451452
  - 0.8039529914529914
  - 0.800093005952381
  train_average_precision_samples_oob:
  - 0.7864458208208207
  - 0.7876853946706888
  - 0.7887981731731731
  - 0.7863404977375565
  - 0.783541046626984
  train_average_precision_weighted:
  - 0.8345589700118591
  - 0.8120307246066328
  - 0.8172892109457953
  - 0.8260529298398491
  - 0.8158934794894727
  train_average_precision_weighted_oob:
  - 0.7681744893416218
  - 0.7374840991291856
  - 0.739319669678474
  - 0.7552893700729385
  - 0.7419297063610045
  train_f1_macro:
  - 0.7882882882882883
  - 0.8001508295625942
  - 0.7897897897897899
  - 0.7888386123680241
  - 0.7853422619047619
  train_f1_macro_oob:
  - 0.7214714714714714
  - 0.7179487179487181
  - 0.721846846846847
  - 0.7243589743589745
  - 0.7113095238095238
  train_f1_micro:
  - 0.7882882882882883
  - 0.8001508295625943
  - 0.7897897897897898
  - 0.7888386123680241
  - 0.7853422619047619
  train_f1_micro_oob:
  - 0.7214714714714715
  - 0.717948717948718
  - 0.7218468468468469
  - 0.7243589743589743
  - 0.7113095238095238
  train_f1_samples:
  - 0.7882882882882883
  - 0.8001508295625942
  - 0.7897897897897898
  - 0.788838612368024
  - 0.7853422619047619
  train_f1_samples_oob:
  - 0.7214714714714715
  - 0.7179487179487181
  - 0.7218468468468469
  - 0.7243589743589742
  - 0.7113095238095237
  train_f1_weighted:
  - 0.7288441449295852
  - 0.7443498140295184
  - 0.7295584483084483
  - 0.7299136517220256
  - 0.7254347419596111
  train_f1_weighted_oob:
  - 0.6725378386232789
  - 0.6708638348613711
  - 0.6732678920178921
  - 0.6759133750913869
  - 0.6616881700324109
  train_jaccard_macro:
  - 0.6874048920355094
  - 0.7002196894216244
  - 0.6901055045788693
  - 0.6891029111124051
  - 0.6830267547280172
  train_jaccard_macro_oob:
  - 0.5868101232868059
  - 0.5819740873864541
  - 0.5870734590789682
  - 0.5901839734488306
  - 0.5750381407558957
  train_jaccard_micro:
  - 0.6505576208178439
  - 0.6668761785040854
  - 0.652605459057072
  - 0.651307596513076
  - 0.6465543644716693
  train_jaccard_micro_oob:
  - 0.5642982971227246
  - 0.56
  - 0.5647577092511014
  - 0.5678391959798995
  - 0.5519630484988453
  train_jaccard_samples:
  - 0.6818854568854568
  - 0.6973928032751562
  - 0.6853077103077103
  - 0.6843568196509373
  - 0.6786893166357452
  train_jaccard_samples_oob:
  - 0.5973314223314222
  - 0.5930099312452253
  - 0.6006132756132756
  - 0.6015729368670546
  - 0.5856302179962894
  train_jaccard_weighted:
  - 0.6013240995447092
  - 0.6182978975072624
  - 0.6031332013392454
  - 0.6039772821498265
  - 0.596400867211616
  train_jaccard_weighted_oob:
  - 0.5169942957043193
  - 0.5147847040419323
  - 0.5182644637958534
  - 0.521197408216843
  - 0.5043908396818096
  train_label_ranking_average_precision_score:
  - 0.8174393143143143
  - 0.8222944947209649
  - 0.8058996496496492
  - 0.8107403217697332
  - 0.8023251488095238
  train_label_ranking_average_precision_score_oob:
  - 0.7932025775775765
  - 0.7944727249874304
  - 0.7933026776776775
  - 0.793127828054298
  - 0.7857731894841268
  train_matthews_corrcoef_macro:
  - 0.3148728817747364
  - 0.3668326606904398
  - 0.3264490722182755
  - 0.30937669839854914
  - 0.32821671690710286
  train_matthews_corrcoef_macro_oob:
  - 0.14990856971884123
  - 0.13775331053681208
  - 0.14855164062750853
  - 0.1536468345437325
  - 0.13158400694163236
  train_matthews_corrcoef_micro:
  - 0.6209469682940177
  - 0.6401356525463425
  - 0.6257064156786293
  - 0.6228387491145664
  - 0.6152259234479005
  train_matthews_corrcoef_micro_oob:
  - 0.45767168855755835
  - 0.44930293032788277
  - 0.4622149242793224
  - 0.465462189207326
  - 0.4361437831459993
  train_matthews_corrcoef_samples:
  - 0.6381186527510341
  - 0.6549732720333525
  - 0.6447477411519015
  - 0.6404194365759039
  - 0.6329129514830342
  train_matthews_corrcoef_samples_oob:
  - 0.474249533741251
  - 0.46359903891881277
  - 0.4740924456323728
  - 0.4817864077893251
  - 0.44960587044725625
  train_matthews_corrcoef_weighted:
  - 0.2708601337088341
  - 0.3344460356702602
  - 0.2763722415733146
  - 0.2618911833263459
  - 0.2887727092796614
  train_matthews_corrcoef_weighted_oob:
  - 0.1226255106668761
  - 0.11253925275869583
  - 0.12098387407319447
  - 0.1254231149071341
  - 0.10662544758627951
  train_ndgc:
  - 0.8740068608576665
  - 0.8781731056036439
  - 0.8661978176494943
  - 0.8688743843512023
  - 0.8664208775597524
  train_ndgc_oob:
  - 0.8581088036275428
  - 0.8606827327298401
  - 0.8597129889870475
  - 0.857686884596032
  - 0.8562671341471084
  train_neg_coverage_error:
  - -3.518018018018018
  - -3.497737556561086
  - -3.536036036036036
  - -3.5384615384615383
  - -3.5245535714285716
  train_neg_coverage_error_oob:
  - -3.7072072072072073
  - -3.726244343891403
  - -3.7004504504504503
  - -3.7036199095022626
  - -3.669642857142857
  train_neg_hamming_loss_macro:
  - -0.2117117117117117
  - -0.19984917043740572
  - -0.21021021021021025
  - -0.21116138763197587
  - -0.2146577380952381
  train_neg_hamming_loss_macro_oob:
  - -0.27852852852852855
  - -0.28205128205128205
  - -0.2781531531531532
  - -0.27564102564102566
  - -0.28869047619047616
  train_neg_hamming_loss_micro:
  - -0.21171171171171171
  - -0.19984917043740574
  - -0.21021021021021022
  - -0.21116138763197587
  - -0.21465773809523808
  train_neg_hamming_loss_micro_oob:
  - -0.27852852852852855
  - -0.28205128205128205
  - -0.27815315315315314
  - -0.27564102564102566
  - -0.28869047619047616
  train_neg_hamming_loss_samples:
  - -0.21171171171171171
  - -0.19984917043740572
  - -0.21021021021021022
  - -0.2111613876319758
  - -0.2146577380952381
  train_neg_hamming_loss_samples_oob:
  - -0.27852852852852855
  - -0.28205128205128205
  - -0.27815315315315314
  - -0.2756410256410256
  - -0.28869047619047616
  train_neg_hamming_loss_weighted:
  - -0.2711558550704148
  - -0.2556501859704816
  - -0.2704415516915517
  - -0.2700863482779743
  - -0.27456525804038895
  train_neg_hamming_loss_weighted_oob:
  - -0.32746216137672113
  - -0.3291361651386289
  - -0.326732107982108
  - -0.32408662490861306
  - -0.3383118299675892
  train_neg_label_ranking_loss:
  - -0.1616428928928929
  - -0.1577237305178482
  - -0.16898773773773776
  - -0.16575540472599296
  - -0.17108754960317457
  train_neg_label_ranking_loss_oob:
  - -0.1956956956956957
  - -0.19502890899949724
  - -0.19369994994994996
  - -0.1928230266465561
  - -0.19698660714285715
  train_precision_macro:
  - 0.7882882882882883
  - 0.8001508295625942
  - 0.7897897897897899
  - 0.7888386123680241
  - 0.7853422619047619
  train_precision_macro_oob:
  - 0.7214714714714714
  - 0.7179487179487181
  - 0.721846846846847
  - 0.7243589743589745
  - 0.7113095238095238
  train_precision_micro:
  - 0.7882882882882883
  - 0.8001508295625943
  - 0.7897897897897898
  - 0.7888386123680241
  - 0.7853422619047619
  train_precision_micro_oob:
  - 0.7214714714714715
  - 0.717948717948718
  - 0.7218468468468469
  - 0.7243589743589743
  - 0.7113095238095238
  train_precision_samples:
  - 0.7882882882882883
  - 0.8001508295625942
  - 0.7897897897897898
  - 0.788838612368024
  - 0.7853422619047619
  train_precision_samples_oob:
  - 0.7214714714714715
  - 0.7179487179487181
  - 0.7218468468468469
  - 0.7243589743589742
  - 0.7113095238095237
  train_precision_weighted:
  - 0.7288441449295852
  - 0.7443498140295184
  - 0.7295584483084483
  - 0.7299136517220256
  - 0.7254347419596111
  train_precision_weighted_oob:
  - 0.6725378386232789
  - 0.6708638348613711
  - 0.6732678920178921
  - 0.6759133750913869
  - 0.6616881700324109
  train_recall_macro:
  - 0.7882882882882883
  - 0.8001508295625942
  - 0.7897897897897899
  - 0.7888386123680241
  - 0.7853422619047619
  train_recall_macro_oob:
  - 0.7214714714714714
  - 0.7179487179487181
  - 0.721846846846847
  - 0.7243589743589745
  - 0.7113095238095238
  train_recall_micro:
  - 0.7882882882882883
  - 0.8001508295625943
  - 0.7897897897897898
  - 0.7888386123680241
  - 0.7853422619047619
  train_recall_micro_oob:
  - 0.7214714714714715
  - 0.717948717948718
  - 0.7218468468468469
  - 0.7243589743589743
  - 0.7113095238095238
  train_recall_samples:
  - 0.7882882882882883
  - 0.8001508295625942
  - 0.7897897897897898
  - 0.788838612368024
  - 0.7853422619047619
  train_recall_samples_oob:
  - 0.7214714714714715
  - 0.7179487179487181
  - 0.7218468468468469
  - 0.7243589743589742
  - 0.7113095238095237
  train_recall_weighted:
  - 0.7288441449295852
  - 0.7443498140295184
  - 0.7295584483084483
  - 0.7299136517220256
  - 0.7254347419596111
  train_recall_weighted_oob:
  - 0.6725378386232789
  - 0.6708638348613711
  - 0.6732678920178921
  - 0.6759133750913869
  - 0.6616881700324109
  train_roc_auc_macro:
  - 0.8472141735388415
  - 0.8342585392664312
  - 0.8402657659991322
  - 0.8395630609847969
  - 0.8390837517588725
  train_roc_auc_macro_oob:
  - 0.7148157488277306
  - 0.6832408327456535
  - 0.6666264379412016
  - 0.6694062588688926
  - 0.6738700989869911
  train_roc_auc_micro:
  - 0.8443553703191784
  - 0.8422557588146542
  - 0.8486750092013249
  - 0.8454586022144114
  - 0.8442954459542354
  train_roc_auc_micro_oob:
  - 0.8116154089743729
  - 0.8037663192488915
  - 0.811198587596614
  - 0.8132366279052922
  - 0.8071734312999821
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7780756279726881
  - 0.7594505084571702
  - 0.7698816444338458
  - 0.7716242933574956
  - 0.7671588477166554
  train_roc_auc_weighted_oob:
  - 0.7085533844856033
  - 0.6776803909202824
  - 0.6938961085372792
  - 0.6967878138121223
  - 0.6906511501653141
start: 2023-12-21 22:47:01.594385
wrapper: null
