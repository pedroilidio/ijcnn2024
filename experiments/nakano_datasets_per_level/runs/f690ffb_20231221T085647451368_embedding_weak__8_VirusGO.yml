active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMCAZmZmZmb2P8DMzMzMzATAAJqZmZmZ2T+gmZmZmZkRQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:04:05.179610
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__8
  params: {}
hash: f690ffba49cf75a0fb6ee6f3176b80c2edaa190ef6dc96319837d8df7cdeec82
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f690ffb_20231221T085647451368_embedding_weak__8_VirusGO.yml
results:
  fit_time:
  - 415.1399645805359
  - 417.77382135391235
  - 424.6088466644287
  - 427.14257550239563
  - 428.0292122364044
  score_time:
  - 3.4390950202941895
  - 3.393338441848755
  - 3.706561326980591
  - 3.1392579078674316
  - 3.3972859382629395
  test_average_precision_macro:
  - 0.9533500381684404
  - 0.9360213217852106
  - 0.8852854156846727
  - 0.9393855279879001
  - 0.9337932174801598
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9044386885332524
  - 0.8969158350786499
  - 0.8009594731520523
  - 0.8747150120362596
  - 0.9049162251477401
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9185185185185184
  - 0.96125
  - 0.9223484848484848
  - 0.9264227642276422
  - 0.9265765765765765
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9554696725635534
  - 0.9288199247333863
  - 0.8417993227659044
  - 0.9249133416094939
  - 0.9343068401449648
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8185185185185185
  - 0.7833333333333333
  - 0.8068181818181818
  - 0.8008130081300813
  - 0.7882882882882883
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8185185185185185
  - 0.7833333333333333
  - 0.8068181818181818
  - 0.8008130081300813
  - 0.7882882882882883
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8185185185185188
  - 0.7833333333333334
  - 0.8068181818181821
  - 0.8008130081300814
  - 0.7882882882882882
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7124183006535948
  - 0.6644230769230769
  - 0.7045454545454545
  - 0.692882030861125
  - 0.6618863761720906
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7146305161576912
  - 0.6710120529095701
  - 0.698407707107552
  - 0.691415272395111
  - 0.6785836741031733
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6927899686520376
  - 0.6438356164383562
  - 0.6761904761904762
  - 0.6677966101694915
  - 0.6505576208178439
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6968253968253969
  - 0.6511904761904763
  - 0.6812770562770564
  - 0.6736353077816493
  - 0.6563706563706565
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5681722230728378
  - 0.5184059096481385
  - 0.5611836337962015
  - 0.5492212855265849
  - 0.5142975141887624
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9185185185185186
  - 0.9612499999999999
  - 0.9223484848484848
  - 0.9264227642276422
  - 0.9265765765765765
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06301895565949547
  - 0.0
  - 0.0
  - 0.0
  - 0.043213581570144294
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.17901299975847712
  - 0.0
  - 0.0
  - 0.0
  - 0.17915489095645087
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.03627678960074836
  - 0.0
  - 0.0
  - 0.0
  - 0.03418678551533383
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.12965824928897132
  - 0.0
  - 0.0
  - 0.0
  - 0.0899548024521371
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9407222494688497
  - 0.9749848296328757
  - 0.9437508475298759
  - 0.948445024208526
  - 0.9466242813498666
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3777777777777778
  - -1.475
  - -1.3863636363636365
  - -1.5121951219512195
  - -1.5945945945945945
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18148148148148147
  - -0.21666666666666667
  - -0.19318181818181815
  - -0.19918699186991873
  - -0.21171171171171174
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1814814814814815
  - -0.21666666666666667
  - -0.19318181818181818
  - -0.1991869918699187
  - -0.21171171171171171
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18148148148148147
  - -0.2166666666666667
  - -0.19318181818181815
  - -0.19918699186991867
  - -0.21171171171171171
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2875816993464052
  - -0.335576923076923
  - -0.29545454545454547
  - -0.30711796913887507
  - -0.33811362382790955
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04666666666666667
  - -0.025277777777777777
  - -0.04318181818181818
  - -0.05392953929539296
  - -0.0527027027027027
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8185185185185185
  - 0.7833333333333333
  - 0.8068181818181818
  - 0.8008130081300813
  - 0.7882882882882883
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8185185185185185
  - 0.7833333333333333
  - 0.8068181818181818
  - 0.8008130081300813
  - 0.7882882882882883
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8185185185185188
  - 0.7833333333333334
  - 0.8068181818181821
  - 0.8008130081300814
  - 0.7882882882882882
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7124183006535948
  - 0.6644230769230769
  - 0.7045454545454545
  - 0.692882030861125
  - 0.6618863761720906
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8185185185185185
  - 0.7833333333333333
  - 0.8068181818181818
  - 0.8008130081300813
  - 0.7882882882882883
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8185185185185185
  - 0.7833333333333333
  - 0.8068181818181818
  - 0.8008130081300813
  - 0.7882882882882883
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8185185185185188
  - 0.7833333333333334
  - 0.8068181818181821
  - 0.8008130081300814
  - 0.7882882882882882
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7124183006535948
  - 0.6644230769230769
  - 0.7045454545454545
  - 0.692882030861125
  - 0.6618863761720906
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.983441656878497
  - 0.9799031986531986
  - 0.9577952427217133
  - 0.9757453093850152
  - 0.9624039254020279
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9734533082639448
  - 0.97800736497545
  - 0.9629936481634908
  - 0.9608929866362789
  - 0.9618968974873187
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9533333333333333
  - 0.9747222222222224
  - 0.9568181818181817
  - 0.9460704607046071
  - 0.9472972972972972
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9822449043326739
  - 0.9750874125874126
  - 0.9330359771536241
  - 0.9652788721666272
  - 0.9575179045225128
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9507898718741324
  - 0.9568864012684658
  - 0.9538135858637694
  - 0.9617850971890186
  - 0.9541282257921853
  train_average_precision_macro_oob:
  - 0.8856850864905018
  - 0.8974264011612464
  - 0.9108309892000824
  - 0.8813301514408258
  - 0.8700304825786773
  train_average_precision_micro:
  - 0.9246679122963507
  - 0.9290363200883037
  - 0.9350196356398964
  - 0.9412726638890203
  - 0.9248358011434599
  train_average_precision_micro_oob:
  - 0.8370374179123404
  - 0.8291849353149965
  - 0.8468824782094014
  - 0.8613768949293116
  - 0.8413643316350975
  train_average_precision_samples:
  - 0.9409465020576132
  - 0.9700598802395209
  - 0.9618609406952965
  - 0.9570281124497992
  - 0.9636274509803922
  train_average_precision_samples_oob:
  - 0.9020576131687245
  - 0.9117764471057883
  - 0.9193251533742329
  - 0.8943775100401606
  - 0.9161764705882353
  train_average_precision_weighted:
  - 0.9491750713793781
  - 0.9520220768708678
  - 0.9557013821362496
  - 0.963814958759564
  - 0.9523090038222534
  train_average_precision_weighted_oob:
  - 0.88205390490275
  - 0.87428313592032
  - 0.8929493787876402
  - 0.8947905691128283
  - 0.873093408445765
  train_f1_macro:
  - 0.8004115226337448
  - 0.8053892215568862
  - 0.7985685071574641
  - 0.8092369477911646
  - 0.8205882352941177
  train_f1_macro_oob:
  - 0.79320987654321
  - 0.8003992015968063
  - 0.7944785276073619
  - 0.8082329317269076
  - 0.8058823529411766
  train_f1_micro:
  - 0.8004115226337448
  - 0.8053892215568862
  - 0.7985685071574642
  - 0.8092369477911646
  - 0.8205882352941176
  train_f1_micro_oob:
  - 0.7932098765432098
  - 0.8003992015968064
  - 0.7944785276073619
  - 0.8082329317269076
  - 0.8058823529411765
  train_f1_samples:
  - 0.8004115226337446
  - 0.8053892215568861
  - 0.798568507157464
  - 0.8092369477911645
  - 0.8205882352941176
  train_f1_samples_oob:
  - 0.7932098765432097
  - 0.8003992015968061
  - 0.7944785276073619
  - 0.8082329317269074
  - 0.8058823529411763
  train_f1_weighted:
  - 0.6925864504637307
  - 0.6966167664670658
  - 0.6842474742850166
  - 0.7062436939877739
  - 0.73033903216459
  train_f1_weighted_oob:
  - 0.6779374731281863
  - 0.6864071856287426
  - 0.6760675151848121
  - 0.7042257700753755
  - 0.7003477252970153
  train_jaccard_macro:
  - 0.6903257584582455
  - 0.6974350962740187
  - 0.6896565692123504
  - 0.7008041312210089
  - 0.7131084142584432
  train_jaccard_macro_oob:
  - 0.6830763368340769
  - 0.6923472791698494
  - 0.685475473919289
  - 0.6997626606143209
  - 0.6974213113734256
  train_jaccard_micro:
  - 0.6672384219554031
  - 0.6741854636591479
  - 0.6646808510638298
  - 0.6795952782462057
  - 0.6957605985037406
  train_jaccard_micro_oob:
  - 0.6572890025575447
  - 0.6672212978369384
  - 0.6590330788804071
  - 0.6781802864363943
  - 0.6748768472906403
  train_jaccard_samples:
  - 0.6746031746031748
  - 0.6810664385514686
  - 0.6719252118025124
  - 0.6894721744119335
  - 0.7037815126050421
  train_jaccard_samples_oob:
  - 0.6635802469135803
  - 0.6725121186199031
  - 0.6649138182880514
  - 0.6877510040160644
  - 0.6819327731092438
  train_jaccard_weighted:
  - 0.5473308399784039
  - 0.5517488653140513
  - 0.5387352577848059
  - 0.5612610539018077
  - 0.5880903833360818
  train_jaccard_weighted_oob:
  - 0.5325860726232706
  - 0.5413401313590547
  - 0.530373067198683
  - 0.5591678518942771
  - 0.5561072237074386
  train_label_ranking_average_precision_score:
  - 0.9409465020576132
  - 0.9700598802395209
  - 0.9618609406952965
  - 0.9570281124497992
  - 0.9636274509803923
  train_label_ranking_average_precision_score_oob:
  - 0.9020576131687245
  - 0.9117764471057882
  - 0.919325153374233
  - 0.8943775100401606
  - 0.9161764705882353
  train_matthews_corrcoef_macro:
  - 0.05804757072560502
  - 0.04928168101873159
  - 0.03164305443075246
  - 0.07817098617172379
  - 0.1012542164008969
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.07387520227859652
  - 0.047401342459855944
  train_matthews_corrcoef_micro:
  - 0.1668070967683532
  - 0.14181089871014477
  - 0.12599781038140218
  - 0.22729165553315445
  - 0.28371219719539453
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.21826376806478393
  - 0.14080399929021134
  train_matthews_corrcoef_samples:
  - 0.036403497506796466
  - 0.029940119760479042
  - 0.024539877300613498
  - 0.0783132530120482
  - 0.10035084856629063
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.07228915662650602
  - 0.029411764705882353
  train_matthews_corrcoef_weighted:
  - 0.11793317028207251
  - 0.10066803839435527
  - 0.06328610886150492
  - 0.15987456430137234
  - 0.20515921989792954
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.15124067352109682
  - 0.09522739731838209
  train_ndgc:
  - 0.9582643599577005
  - 0.9784079118808416
  - 0.9723145003329623
  - 0.9692063795332968
  - 0.97396500188822
  train_ndgc_oob:
  - 0.931202430677324
  - 0.9355018771579687
  - 0.9419533646546108
  - 0.9246268181856087
  - 0.9413144155011748
  train_neg_coverage_error:
  - -1.4506172839506173
  - -1.2994011976047903
  - -1.3558282208588956
  - -1.3614457831325302
  - -1.3294117647058823
  train_neg_coverage_error_oob:
  - -1.6049382716049383
  - -1.4910179640718564
  - -1.4969325153374233
  - -1.6024096385542168
  - -1.5294117647058822
  train_neg_hamming_loss_macro:
  - -0.19958847736625515
  - -0.1946107784431138
  - -0.2014314928425358
  - -0.19076305220883538
  - -0.17941176470588235
  train_neg_hamming_loss_macro_oob:
  - -0.20679012345679013
  - -0.19960079840319364
  - -0.20552147239263807
  - -0.1917670682730924
  - -0.1941176470588235
  train_neg_hamming_loss_micro:
  - -0.19958847736625515
  - -0.19461077844311378
  - -0.20143149284253578
  - -0.19076305220883535
  - -0.17941176470588235
  train_neg_hamming_loss_micro_oob:
  - -0.20679012345679013
  - -0.1996007984031936
  - -0.20552147239263804
  - -0.19176706827309237
  - -0.19411764705882353
  train_neg_hamming_loss_samples:
  - -0.19958847736625512
  - -0.19461077844311378
  - -0.20143149284253575
  - -0.19076305220883533
  - -0.17941176470588235
  train_neg_hamming_loss_samples_oob:
  - -0.20679012345679013
  - -0.19960079840319359
  - -0.20552147239263804
  - -0.19176706827309234
  - -0.19411764705882353
  train_neg_hamming_loss_weighted:
  - -0.30741354953626926
  - -0.30338323353293417
  - -0.31575252571498336
  - -0.29375630601222624
  - -0.26966096783541005
  train_neg_hamming_loss_weighted_oob:
  - -0.3220625268718137
  - -0.31359281437125747
  - -0.3239324848151879
  - -0.2957742299246246
  - -0.29965227470298467
  train_neg_label_ranking_loss:
  - -0.03633401920438958
  - -0.01931137724550898
  - -0.023773006134969327
  - -0.02530120481927711
  - -0.024771241830065356
  train_neg_label_ranking_loss_oob:
  - -0.0627914951989026
  - -0.0561377245508982
  - -0.04792092706203136
  - -0.06760374832663989
  - -0.05754901960784314
  train_precision_macro:
  - 0.8004115226337448
  - 0.8053892215568862
  - 0.7985685071574641
  - 0.8092369477911646
  - 0.8205882352941177
  train_precision_macro_oob:
  - 0.79320987654321
  - 0.8003992015968063
  - 0.7944785276073619
  - 0.8082329317269076
  - 0.8058823529411766
  train_precision_micro:
  - 0.8004115226337448
  - 0.8053892215568862
  - 0.7985685071574642
  - 0.8092369477911646
  - 0.8205882352941176
  train_precision_micro_oob:
  - 0.7932098765432098
  - 0.8003992015968064
  - 0.7944785276073619
  - 0.8082329317269076
  - 0.8058823529411765
  train_precision_samples:
  - 0.8004115226337446
  - 0.8053892215568861
  - 0.798568507157464
  - 0.8092369477911645
  - 0.8205882352941176
  train_precision_samples_oob:
  - 0.7932098765432097
  - 0.8003992015968061
  - 0.7944785276073619
  - 0.8082329317269074
  - 0.8058823529411763
  train_precision_weighted:
  - 0.6925864504637307
  - 0.6966167664670658
  - 0.6842474742850166
  - 0.7062436939877739
  - 0.73033903216459
  train_precision_weighted_oob:
  - 0.6779374731281863
  - 0.6864071856287426
  - 0.6760675151848121
  - 0.7042257700753755
  - 0.7003477252970153
  train_recall_macro:
  - 0.8004115226337448
  - 0.8053892215568862
  - 0.7985685071574641
  - 0.8092369477911646
  - 0.8205882352941177
  train_recall_macro_oob:
  - 0.79320987654321
  - 0.8003992015968063
  - 0.7944785276073619
  - 0.8082329317269076
  - 0.8058823529411766
  train_recall_micro:
  - 0.8004115226337448
  - 0.8053892215568862
  - 0.7985685071574642
  - 0.8092369477911646
  - 0.8205882352941176
  train_recall_micro_oob:
  - 0.7932098765432098
  - 0.8003992015968064
  - 0.7944785276073619
  - 0.8082329317269076
  - 0.8058823529411765
  train_recall_samples:
  - 0.8004115226337446
  - 0.8053892215568861
  - 0.798568507157464
  - 0.8092369477911645
  - 0.8205882352941176
  train_recall_samples_oob:
  - 0.7932098765432097
  - 0.8003992015968061
  - 0.7944785276073619
  - 0.8082329317269074
  - 0.8058823529411763
  train_recall_weighted:
  - 0.6925864504637307
  - 0.6966167664670658
  - 0.6842474742850166
  - 0.7062436939877739
  - 0.73033903216459
  train_recall_weighted_oob:
  - 0.6779374731281863
  - 0.6864071856287426
  - 0.6760675151848121
  - 0.7042257700753755
  - 0.7003477252970153
  train_roc_auc_macro:
  - 0.9820312591397741
  - 0.9833938471385303
  - 0.9814604434268727
  - 0.9865409663232465
  - 0.9853545844163055
  train_roc_auc_macro_oob:
  - 0.9624869059716566
  - 0.9655147623368433
  - 0.9695568358206913
  - 0.9597173419394404
  - 0.9639427175126651
  train_roc_auc_micro:
  - 0.9766698285485671
  - 0.9813591022443889
  - 0.9795168302630989
  - 0.9806092720168469
  - 0.9793911402403361
  train_roc_auc_micro_oob:
  - 0.9539333165560008
  - 0.9571820448877806
  - 0.9609417519865281
  - 0.955578056765168
  - 0.9550198672302247
  train_roc_auc_samples:
  - 0.9636659807956104
  - 0.9806886227544909
  - 0.9762269938650306
  - 0.974698795180723
  - 0.9752287581699347
  train_roc_auc_samples_oob:
  - 0.9372085048010974
  - 0.9438622754491018
  - 0.9520790729379686
  - 0.93239625167336
  - 0.9424509803921569
  train_roc_auc_weighted:
  - 0.9748751468895658
  - 0.9773416164634092
  - 0.9776224276395804
  - 0.9811694126653036
  - 0.979599295438886
  train_roc_auc_weighted_oob:
  - 0.9524330860510382
  - 0.948194054400681
  - 0.9568337612273085
  - 0.9554572516712677
  - 0.9559489097635351
start: 2023-12-21 08:56:47.451368
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
