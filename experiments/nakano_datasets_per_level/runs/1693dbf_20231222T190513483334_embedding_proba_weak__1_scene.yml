active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0CAMzMzMzMDQEBmZmZmZhbAgDMzMzMzA0AAmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 19:06:50.842815
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__1
  params: {}
hash: 1693dbf18233618c2eb9d051a3f3430f0eff9c13c492eed2413ae41ac562e6b4
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1693dbf_20231222T190513483334_embedding_proba_weak__1_scene.yml
results:
  fit_time:
  - 38.96803903579712
  - 49.42345976829529
  - 58.14203143119812
  - 54.512895345687866
  - 52.36168074607849
  score_time:
  - 7.430898904800415
  - 6.4228575229644775
  - 5.764559268951416
  - 6.238220930099487
  - 6.42466402053833
  test_average_precision_macro:
  - 0.8452971355545073
  - 0.8582465859838896
  - 0.8630214423877849
  - 0.8263119761315667
  - 0.8536900189282969
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8526557247777302
  - 0.8618692292651179
  - 0.8710212899303825
  - 0.8355893608360411
  - 0.8555902443378172
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8873695198329853
  - 0.8801670146137788
  - 0.8913244353182751
  - 0.8689631176061239
  - 0.8742581090407177
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8351413290047927
  - 0.8502987224321598
  - 0.8536878498119536
  - 0.8109112041541733
  - 0.8447650107104083
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9144050104384133
  - 0.9161447459986082
  - 0.9240246406570841
  - 0.907794015309673
  - 0.9185645272601795
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9144050104384134
  - 0.9161447459986082
  - 0.9240246406570842
  - 0.907794015309673
  - 0.9185645272601795
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9144050104384134
  - 0.9161447459986083
  - 0.9240246406570842
  - 0.907794015309673
  - 0.9185645272601795
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9097693050076118
  - 0.9122323639364956
  - 0.9196875037235035
  - 0.9018910286178087
  - 0.9137789075677274
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8448023578556833
  - 0.8475440801750337
  - 0.8616587582420617
  - 0.8355882256009523
  - 0.8519667836934982
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8423076923076923
  - 0.8452648475120386
  - 0.8587786259541985
  - 0.8311564192417967
  - 0.8493937460114869
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.86191470325082
  - 0.8640023859230538
  - 0.8770411655421921
  - 0.8520727706531463
  - 0.8684314305432317
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.837110107556152
  - 0.8410231290255222
  - 0.854321294923506
  - 0.8260748189359327
  - 0.8440811224590795
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8873695198329851
  - 0.8801670146137788
  - 0.8913244353182748
  - 0.8689631176061238
  - 0.8742581090407174
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6929504375596979
  - 0.6963235247951313
  - 0.725863349149722
  - 0.6669930860919027
  - 0.7073326344614945
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6862616297284801
  - 0.6919266929617757
  - 0.7208832906366296
  - 0.6609714410445025
  - 0.7009789934861782
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6164456431445882
  - 0.614958952832339
  - 0.6572129466176415
  - 0.6018971918516554
  - 0.6311575789661977
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6785799071395577
  - 0.6848088287249368
  - 0.7126685180175497
  - 0.6487008511357802
  - 0.6927552085670623
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.916933672739187
  - 0.9112206295441402
  - 0.9197497075487199
  - 0.9039605452727176
  - 0.9074486125647016
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3924843423799582
  - -1.4217118997912317
  - -1.3696098562628336
  - -1.4592901878914406
  - -1.4472049689440993
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08559498956158663
  - -0.08385525400139178
  - -0.07597535934291581
  - -0.09220598469032708
  - -0.08143547273982056
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08559498956158663
  - -0.0838552540013918
  - -0.07597535934291581
  - -0.09220598469032706
  - -0.08143547273982056
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08559498956158663
  - -0.0838552540013918
  - -0.07597535934291581
  - -0.09220598469032706
  - -0.08143547273982056
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09023069499238823
  - -0.0877676360635044
  - -0.08031249627649645
  - -0.0981089713821913
  - -0.08622109243227255
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06132567849686848
  - -0.06842379958246346
  - -0.060574948665297744
  - -0.07228601252609604
  - -0.07236024844720497
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9144050104384133
  - 0.9161447459986082
  - 0.9240246406570841
  - 0.907794015309673
  - 0.9185645272601795
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9144050104384134
  - 0.9161447459986082
  - 0.9240246406570842
  - 0.907794015309673
  - 0.9185645272601795
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9144050104384134
  - 0.9161447459986083
  - 0.9240246406570842
  - 0.907794015309673
  - 0.9185645272601795
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9097693050076118
  - 0.9122323639364956
  - 0.9196875037235035
  - 0.9018910286178087
  - 0.9137789075677274
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9144050104384133
  - 0.9161447459986082
  - 0.9240246406570841
  - 0.907794015309673
  - 0.9185645272601795
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9144050104384134
  - 0.9161447459986082
  - 0.9240246406570842
  - 0.907794015309673
  - 0.9185645272601795
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9144050104384134
  - 0.9161447459986083
  - 0.9240246406570842
  - 0.907794015309673
  - 0.9185645272601795
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9097693050076118
  - 0.9122323639364956
  - 0.9196875037235035
  - 0.9018910286178087
  - 0.9137789075677274
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9511047382826828
  - 0.950137276476256
  - 0.9532436325287589
  - 0.9398369206457357
  - 0.9480246072760411
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9566983896685375
  - 0.955926879302523
  - 0.9595386786876148
  - 0.9490451505002999
  - 0.9538423477499107
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9386743215031316
  - 0.9315762004175366
  - 0.9394250513347022
  - 0.927713987473904
  - 0.9276397515527951
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.946819359422107
  - 0.946198486323769
  - 0.9486374683900137
  - 0.9329882091306984
  - 0.9440494867861997
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9921927711256497
  - 0.9895952178125101
  - 0.9890994259199898
  - 0.9889430078448945
  - 0.9901482899154398
  train_average_precision_macro_oob:
  - 0.9337635464228068
  - 0.935136946113913
  - 0.9331394135203652
  - 0.932319381252113
  - 0.9297511382374649
  train_average_precision_micro:
  - 0.9903807765807648
  - 0.988436376213209
  - 0.9873085789903107
  - 0.9883515723416181
  - 0.9898732504869063
  train_average_precision_micro_oob:
  - 0.9303580265614273
  - 0.9312007849620225
  - 0.9293818531359476
  - 0.9312094549512441
  - 0.929123614314922
  train_average_precision_samples:
  - 0.9843533886583679
  - 0.9856932918395575
  - 0.9850260416666666
  - 0.9834457123098203
  - 0.9861399861399862
  train_average_precision_samples_oob:
  - 0.932667704011065
  - 0.9343274550484093
  - 0.9309548611111111
  - 0.9342496542185339
  - 0.9360620235620235
  train_average_precision_weighted:
  - 0.991984236766642
  - 0.9891271294000691
  - 0.9888253241805174
  - 0.9886087957798818
  - 0.9897418497330743
  train_average_precision_weighted_oob:
  - 0.9310354372548317
  - 0.9325160677243285
  - 0.9306706575989567
  - 0.9293939653800685
  - 0.9260088929144673
  train_f1_macro:
  - 0.9700899031811895
  - 0.9708679114799446
  - 0.9711805555555556
  - 0.9706085753803597
  - 0.970980595980596
  train_f1_macro_oob:
  - 0.9352524204702629
  - 0.9368084370677733
  - 0.9352430555555555
  - 0.9377593360995852
  - 0.9327789327789328
  train_f1_micro:
  - 0.9700899031811895
  - 0.9708679114799447
  - 0.9711805555555556
  - 0.9706085753803596
  - 0.9709805959805959
  train_f1_micro_oob:
  - 0.9352524204702628
  - 0.9368084370677732
  - 0.9352430555555555
  - 0.9377593360995851
  - 0.9327789327789328
  train_f1_samples:
  - 0.9700899031811896
  - 0.9708679114799448
  - 0.9711805555555556
  - 0.9706085753803597
  - 0.970980595980596
  train_f1_samples_oob:
  - 0.9352524204702629
  - 0.9368084370677732
  - 0.9352430555555556
  - 0.9377593360995851
  - 0.9327789327789329
  train_f1_weighted:
  - 0.9691244572501745
  - 0.9699430839361529
  - 0.9703437298517086
  - 0.9698031453405781
  - 0.9697199432322801
  train_f1_weighted_oob:
  - 0.932630049278875
  - 0.9344096512637652
  - 0.9324024822695035
  - 0.9352820994887517
  - 0.929879946933648
  train_jaccard_macro:
  - 0.9420491741002245
  - 0.943509411308293
  - 0.9440897380677522
  - 0.9430168306675356
  - 0.9438179263908304
  train_jaccard_macro_oob:
  - 0.8793202145888164
  - 0.8818940215410044
  - 0.8793441547931171
  - 0.8836199534313449
  - 0.8751381157168817
  train_jaccard_micro:
  - 0.941917072351855
  - 0.9433851322973541
  - 0.9439757003037462
  - 0.9428955324151831
  - 0.9435979459550468
  train_jaccard_micro_oob:
  - 0.8783794755216368
  - 0.8811285470363445
  - 0.8783629545083972
  - 0.8828125
  - 0.874025974025974
  train_jaccard_samples:
  - 0.9498616874135546
  - 0.9512571626160837
  - 0.9521825396825396
  - 0.9511460185734045
  - 0.9516755766755766
  train_jaccard_samples_oob:
  - 0.8934005137324639
  - 0.8955863465718236
  - 0.8931423611111111
  - 0.8973893499308436
  - 0.8888352638352638
  train_jaccard_weighted:
  - 0.9402328060343097
  - 0.9417650713875757
  - 0.9425071953965234
  - 0.9414917448997674
  - 0.9414482524400307
  train_jaccard_weighted_oob:
  - 0.874754434176572
  - 0.8776835016201553
  - 0.8744231156095057
  - 0.8792763118502314
  - 0.8701241114529742
  train_label_ranking_average_precision_score:
  - 0.9843533886583677
  - 0.9856932918395572
  - 0.9850260416666666
  - 0.9834457123098199
  - 0.986139986139986
  train_label_ranking_average_precision_score_oob:
  - 0.9326677040110647
  - 0.9343274550484093
  - 0.9309548611111109
  - 0.9342496542185335
  - 0.9360620235620235
  train_matthews_corrcoef_macro:
  - 0.8974881587754918
  - 0.9000945416170705
  - 0.901358818752881
  - 0.8988999562680426
  - 0.9015376068154127
  train_matthews_corrcoef_macro_oob:
  - 0.770993826328076
  - 0.7768681372784876
  - 0.7728330504018744
  - 0.7804831433816051
  - 0.7624707193199626
  train_matthews_corrcoef_micro:
  - 0.8960097833117336
  - 0.8987231838348606
  - 0.9001156710275597
  - 0.8977971387790872
  - 0.8993319429812128
  train_matthews_corrcoef_micro_oob:
  - 0.766697149750748
  - 0.7728085771552973
  - 0.7675797707870103
  - 0.776367354646476
  - 0.7575129446699657
  train_matthews_corrcoef_samples:
  - 0.8658542778927294
  - 0.871350075036687
  - 0.873833272877193
  - 0.868453705961684
  - 0.8702929605811819
  train_matthews_corrcoef_samples_oob:
  - 0.6932526845201743
  - 0.696613508756447
  - 0.6924130846576032
  - 0.7023650850229309
  - 0.6767492609535509
  train_matthews_corrcoef_weighted:
  - 0.8953290088370129
  - 0.8980270723584313
  - 0.8995471213979029
  - 0.8971497098679908
  - 0.8983709729160682
  train_matthews_corrcoef_weighted_oob:
  - 0.7642675493220303
  - 0.770845451637512
  - 0.7654361422773703
  - 0.7740991279333646
  - 0.7548728328807611
  train_ndgc:
  - 0.9885473748639667
  - 0.9895794986033215
  - 0.9890833799481551
  - 0.9878952198375096
  - 0.9898831377056634
  train_ndgc_oob:
  - 0.950650514640668
  - 0.9517700946559293
  - 0.949213783708577
  - 0.9517218206331924
  - 0.9531582378753235
  train_neg_coverage_error:
  - -1.1094398340248963
  - -1.1058091286307055
  - -1.1104166666666666
  - -1.1099585062240664
  - -1.106029106029106
  train_neg_coverage_error_oob:
  - -1.2800829875518671
  - -1.2748962655601659
  - -1.2833333333333334
  - -1.2733402489626555
  - -1.2645530145530146
  train_neg_hamming_loss_macro:
  - -0.029910096818810517
  - -0.029132088520055322
  - -0.028819444444444443
  - -0.029391424619640383
  - -0.029019404019404022
  train_neg_hamming_loss_macro_oob:
  - -0.06474757952973721
  - -0.06319156293222684
  - -0.06475694444444445
  - -0.06224066390041494
  - -0.06722106722106723
  train_neg_hamming_loss_micro:
  - -0.029910096818810513
  - -0.029132088520055326
  - -0.028819444444444446
  - -0.029391424619640387
  - -0.02901940401940402
  train_neg_hamming_loss_micro_oob:
  - -0.06474757952973721
  - -0.06319156293222683
  - -0.06475694444444445
  - -0.06224066390041494
  - -0.06722106722106722
  train_neg_hamming_loss_samples:
  - -0.029910096818810506
  - -0.029132088520055322
  - -0.028819444444444443
  - -0.029391424619640387
  - -0.029019404019404015
  train_neg_hamming_loss_samples_oob:
  - -0.0647475795297372
  - -0.06319156293222683
  - -0.06475694444444444
  - -0.06224066390041493
  - -0.06722106722106722
  train_neg_hamming_loss_weighted:
  - -0.030875542749825437
  - -0.03005691606384707
  - -0.029656270148291423
  - -0.030196854659421974
  - -0.03028005676772005
  train_neg_hamming_loss_weighted_oob:
  - -0.06736995072112491
  - -0.06559034873623475
  - -0.06759751773049646
  - -0.06471790051124827
  - -0.07012005306635206
  train_neg_label_ranking_loss:
  - -0.0071576763485477184
  - -0.006314834024896266
  - -0.0064453125
  - -0.007339211618257261
  - -0.006159043659043659
  train_neg_label_ranking_loss_oob:
  - -0.03944502074688797
  - -0.038641078838174275
  - -0.03975260416666667
  - -0.038641078838174275
  - -0.0364475051975052
  train_precision_macro:
  - 0.9700899031811895
  - 0.9708679114799446
  - 0.9711805555555556
  - 0.9706085753803597
  - 0.970980595980596
  train_precision_macro_oob:
  - 0.9352524204702629
  - 0.9368084370677733
  - 0.9352430555555555
  - 0.9377593360995852
  - 0.9327789327789328
  train_precision_micro:
  - 0.9700899031811895
  - 0.9708679114799447
  - 0.9711805555555556
  - 0.9706085753803596
  - 0.9709805959805959
  train_precision_micro_oob:
  - 0.9352524204702628
  - 0.9368084370677732
  - 0.9352430555555555
  - 0.9377593360995851
  - 0.9327789327789328
  train_precision_samples:
  - 0.9700899031811896
  - 0.9708679114799448
  - 0.9711805555555556
  - 0.9706085753803597
  - 0.970980595980596
  train_precision_samples_oob:
  - 0.9352524204702629
  - 0.9368084370677732
  - 0.9352430555555556
  - 0.9377593360995851
  - 0.9327789327789329
  train_precision_weighted:
  - 0.9691244572501745
  - 0.9699430839361529
  - 0.9703437298517086
  - 0.9698031453405781
  - 0.9697199432322801
  train_precision_weighted_oob:
  - 0.932630049278875
  - 0.9344096512637652
  - 0.9324024822695035
  - 0.9352820994887517
  - 0.929879946933648
  train_recall_macro:
  - 0.9700899031811895
  - 0.9708679114799446
  - 0.9711805555555556
  - 0.9706085753803597
  - 0.970980595980596
  train_recall_macro_oob:
  - 0.9352524204702629
  - 0.9368084370677733
  - 0.9352430555555555
  - 0.9377593360995852
  - 0.9327789327789328
  train_recall_micro:
  - 0.9700899031811895
  - 0.9708679114799447
  - 0.9711805555555556
  - 0.9706085753803596
  - 0.9709805959805959
  train_recall_micro_oob:
  - 0.9352524204702628
  - 0.9368084370677732
  - 0.9352430555555555
  - 0.9377593360995851
  - 0.9327789327789328
  train_recall_samples:
  - 0.9700899031811896
  - 0.9708679114799448
  - 0.9711805555555556
  - 0.9706085753803597
  - 0.970980595980596
  train_recall_samples_oob:
  - 0.9352524204702629
  - 0.9368084370677732
  - 0.9352430555555556
  - 0.9377593360995851
  - 0.9327789327789329
  train_recall_weighted:
  - 0.9691244572501745
  - 0.9699430839361529
  - 0.9703437298517086
  - 0.9698031453405781
  - 0.9697199432322801
  train_recall_weighted_oob:
  - 0.932630049278875
  - 0.9344096512637652
  - 0.9324024822695035
  - 0.9352820994887517
  - 0.929879946933648
  train_roc_auc_macro:
  - 0.9983273996811475
  - 0.9979192668040878
  - 0.9979086054166193
  - 0.997942126578943
  - 0.998107185528978
  train_roc_auc_macro_oob:
  - 0.9766913444867317
  - 0.9769699108615709
  - 0.9775064136765185
  - 0.9773561327230743
  - 0.9756074926847734
  train_roc_auc_micro:
  - 0.9981876972411688
  - 0.9978939046317155
  - 0.9977580400124092
  - 0.9979267535376158
  - 0.9981307072009289
  train_roc_auc_micro_oob:
  - 0.9772527232006515
  - 0.9776075739650752
  - 0.977917285013723
  - 0.9784082255929961
  - 0.9776929442753952
  train_roc_auc_samples:
  - 0.9928423236514522
  - 0.9936851659751038
  - 0.9935546875
  - 0.9926607883817428
  - 0.9938409563409564
  train_roc_auc_samples_oob:
  - 0.9605549792531121
  - 0.9613589211618258
  - 0.9602473958333333
  - 0.9613589211618258
  - 0.9635524948024948
  train_roc_auc_weighted:
  - 0.9982630068470227
  - 0.9978137284160509
  - 0.9978527024398598
  - 0.9978600654804077
  - 0.9980170768115071
  train_roc_auc_weighted_oob:
  - 0.9751775306716547
  - 0.9755290828991707
  - 0.9762444369675205
  - 0.9758677943638594
  - 0.9737305324547209
start: 2023-12-22 19:05:13.483334
wrapper: null
