active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b+AzMzMzMwEwMCZmZmZmRFAgMzMzMzMDMCAMzMzMzMLQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 13:55:01.761071
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__2
  params: {}
hash: 6fbe45d4f9dd97172c3fd2a735eeb5de61235448d4a47d8aefa99464250994b5
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6fbe45d_20231222T135245199457_embedding_proba__2_scene.yml
results:
  fit_time:
  - 63.78416204452515
  - 80.45238161087036
  - 75.70177459716797
  - 84.03512454032898
  - 83.39227938652039
  score_time:
  - 11.350953340530396
  - 8.607296705245972
  - 8.15383791923523
  - 7.849184989929199
  - 7.9993414878845215
  test_average_precision_macro:
  - 0.8639193143291624
  - 0.8687282472502504
  - 0.8440064625767109
  - 0.8144373738335436
  - 0.8436594546397808
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8649401574645011
  - 0.8765363100313718
  - 0.8507675049330937
  - 0.8136013172287779
  - 0.8538115707688412
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8911490683229814
  - 0.8869834710743801
  - 0.8792103424178895
  - 0.8535395189003437
  - 0.8831938633193862
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8524892162644312
  - 0.8602965248998045
  - 0.8328688071288255
  - 0.8016829314256263
  - 0.8329448942648585
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9285714285714285
  - 0.9269972451790635
  - 0.9154437456324249
  - 0.9103092783505154
  - 0.9194560669456068
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9285714285714286
  - 0.9269972451790633
  - 0.9154437456324249
  - 0.9103092783505154
  - 0.9194560669456067
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9285714285714286
  - 0.9269972451790633
  - 0.9154437456324248
  - 0.9103092783505154
  - 0.9194560669456067
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9237894229029731
  - 0.9229502693543488
  - 0.9103682347359585
  - 0.9060183895235442
  - 0.9146621217750925
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8693733193929173
  - 0.8665320216632942
  - 0.8474686552718338
  - 0.8374221377419931
  - 0.8541844273184487
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8666666666666667
  - 0.8639281129653402
  - 0.8440721649484536
  - 0.8353831598864712
  - 0.850919651500484
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8860297742285319
  - 0.8822314049586777
  - 0.8656783468104222
  - 0.8573883161512026
  - 0.8706415620641561
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8613367499414866
  - 0.8596049011876492
  - 0.83908006767456
  - 0.8303433435368912
  - 0.8461791737089012
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8911490683229811
  - 0.8869834710743799
  - 0.8792103424178892
  - 0.8535395189003434
  - 0.8831938633193861
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7487497705395662
  - 0.740266999522048
  - 0.7006900423687529
  - 0.6760563681018144
  - 0.7136792933025361
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7414582733568844
  - 0.7345305218939975
  - 0.6930705465893168
  - 0.668730197376301
  - 0.7087329306041121
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7007118919935312
  - 0.68159309386028
  - 0.6457657221609175
  - 0.6110345238032423
  - 0.654270314704972
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.73431578989677
  - 0.7280325131442403
  - 0.685755022822697
  - 0.6637083390678894
  - 0.6987399421670767
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9196413951868535
  - 0.9169016614619817
  - 0.9116755734341142
  - 0.8914080886618081
  - 0.913976271977568
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3623188405797102
  - -1.390495867768595
  - -1.4465408805031446
  - -1.5072164948453608
  - -1.4393305439330544
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07142857142857142
  - -0.07300275482093664
  - -0.08455625436757512
  - -0.08969072164948454
  - -0.08054393305439331
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07142857142857142
  - -0.07300275482093664
  - -0.08455625436757512
  - -0.08969072164948454
  - -0.08054393305439331
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07142857142857142
  - -0.07300275482093663
  - -0.0845562543675751
  - -0.08969072164948454
  - -0.08054393305439331
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07621057709702707
  - -0.07704973064565117
  - -0.08963176526404146
  - -0.09398161047645584
  - -0.08533787822490753
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.058333333333333334
  - -0.062241735537190084
  - -0.06844863731656185
  - -0.08649484536082475
  - -0.06872384937238495
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9285714285714285
  - 0.9269972451790635
  - 0.9154437456324249
  - 0.9103092783505154
  - 0.9194560669456068
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9285714285714286
  - 0.9269972451790633
  - 0.9154437456324249
  - 0.9103092783505154
  - 0.9194560669456067
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9285714285714286
  - 0.9269972451790633
  - 0.9154437456324248
  - 0.9103092783505154
  - 0.9194560669456067
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9237894229029731
  - 0.9229502693543488
  - 0.9103682347359585
  - 0.9060183895235442
  - 0.9146621217750925
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9285714285714285
  - 0.9269972451790635
  - 0.9154437456324249
  - 0.9103092783505154
  - 0.9194560669456068
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9285714285714286
  - 0.9269972451790633
  - 0.9154437456324249
  - 0.9103092783505154
  - 0.9194560669456067
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9285714285714286
  - 0.9269972451790633
  - 0.9154437456324248
  - 0.9103092783505154
  - 0.9194560669456067
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9237894229029731
  - 0.9229502693543488
  - 0.9103682347359585
  - 0.9060183895235442
  - 0.9146621217750925
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9547491695405393
  - 0.9555241400184425
  - 0.9470289625805997
  - 0.9362059155241006
  - 0.9447055398146572
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9605905911207625
  - 0.9607375216659549
  - 0.954533082033876
  - 0.9419283712761974
  - 0.9520323667132178
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9416666666666668
  - 0.93775826446281
  - 0.9315513626834382
  - 0.9135051546391753
  - 0.931276150627615
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9492402548390236
  - 0.9519700881901665
  - 0.941503728814082
  - 0.9308479918486238
  - 0.9397619268919317
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9960828986791913
  - 0.995834114401311
  - 0.9959937929804928
  - 0.9962217026127246
  - 0.9959201228955084
  train_average_precision_macro_oob:
  - 0.9566575953733415
  - 0.9573373861351976
  - 0.9596178311722419
  - 0.9601753268591852
  - 0.9579054483135412
  train_average_precision_micro:
  - 0.996116586705654
  - 0.9958679750941063
  - 0.9960890747110978
  - 0.9962091426501487
  - 0.9960196934556498
  train_average_precision_micro_oob:
  - 0.9560463116980771
  - 0.9550880168347773
  - 0.9582568502721872
  - 0.9592807389897384
  - 0.9562162813274321
  train_average_precision_samples:
  - 0.9896483021483022
  - 0.9894695787831513
  - 0.9886010362694301
  - 0.9894640998959418
  - 0.9891135303265941
  train_average_precision_samples_oob:
  - 0.9523042273042271
  - 0.9516033974692321
  - 0.9513471502590674
  - 0.9529483177245924
  - 0.9515552099533436
  train_average_precision_weighted:
  - 0.995962240360456
  - 0.9957418370011706
  - 0.9958588453557561
  - 0.9961207587763895
  - 0.9957885088373324
  train_average_precision_weighted_oob:
  - 0.9550140498844651
  - 0.9560450240574201
  - 0.9582859570164262
  - 0.9588953331774211
  - 0.9563397215862915
  train_f1_macro:
  - 0.9755717255717257
  - 0.9770324146299184
  - 0.9777202072538861
  - 0.9774540409295872
  - 0.9766718506998444
  train_f1_macro_oob:
  - 0.9511434511434511
  - 0.9503380135205409
  - 0.9519861830742659
  - 0.9527402011793272
  - 0.9504924831518923
  train_f1_micro:
  - 0.9755717255717256
  - 0.9770324146299185
  - 0.977720207253886
  - 0.9774540409295872
  - 0.9766718506998445
  train_f1_micro_oob:
  - 0.9511434511434511
  - 0.9503380135205408
  - 0.951986183074266
  - 0.9527402011793271
  - 0.9504924831518922
  train_f1_samples:
  - 0.9755717255717256
  - 0.9770324146299186
  - 0.977720207253886
  - 0.9774540409295872
  - 0.9766718506998445
  train_f1_samples_oob:
  - 0.9511434511434511
  - 0.9503380135205408
  - 0.9519861830742661
  - 0.9527402011793272
  - 0.9504924831518922
  train_f1_weighted:
  - 0.9747991302339128
  - 0.9762963052371225
  - 0.9770088994898828
  - 0.9765873920842212
  - 0.9758424555513673
  train_f1_weighted_oob:
  - 0.9496522442174616
  - 0.9488330210190999
  - 0.9505797696956335
  - 0.950989157701898
  - 0.948821779861423
  train_jaccard_macro:
  - 0.9524012810398071
  - 0.9551944549714384
  - 0.9565030035129526
  - 0.9560058841821327
  - 0.9545274794325412
  train_jaccard_macro_oob:
  - 0.907142033971429
  - 0.9056714623010896
  - 0.9086833703880742
  - 0.9102133684313743
  - 0.9060276478525497
  train_jaccard_micro:
  - 0.9523084728564181
  - 0.9550961619927137
  - 0.9564115560060821
  - 0.9559023066485753
  - 0.9544072948328267
  train_jaccard_micro_oob:
  - 0.9068384539147671
  - 0.9053752786722814
  - 0.9083717864205669
  - 0.9097457977974662
  - 0.9056557174611015
  train_jaccard_samples:
  - 0.9590510840510841
  - 0.9616794195577347
  - 0.9624599062422897
  - 0.9621178336058669
  - 0.9608111777629663
  train_jaccard_samples_oob:
  - 0.9194386694386695
  - 0.9182329197929822
  - 0.9207007155193683
  - 0.9219934591942915
  - 0.9182403910242168
  train_jaccard_weighted:
  - 0.9509318541468323
  - 0.953784354354042
  - 0.9551390207979795
  - 0.9543535295799652
  - 0.9529444392125062
  train_jaccard_weighted_oob:
  - 0.9044425183332313
  - 0.9029501328709123
  - 0.9061185173208205
  - 0.9070319600288745
  - 0.9030096319591581
  train_label_ranking_average_precision_score:
  - 0.9896483021483021
  - 0.9894695787831511
  - 0.9886010362694301
  - 0.9894640998959416
  - 0.989113530326594
  train_label_ranking_average_precision_score_oob:
  - 0.952304227304227
  - 0.9516033974692316
  - 0.9513471502590668
  - 0.9529483177245921
  - 0.9515552099533433
  train_matthews_corrcoef_macro:
  - 0.9168013839175272
  - 0.9218546438282434
  - 0.9240427776860818
  - 0.9237170318101647
  - 0.9205584895963373
  train_matthews_corrcoef_macro_oob:
  - 0.8296415913483218
  - 0.8266939067519673
  - 0.8318497559182082
  - 0.8361181135349707
  - 0.8270430215119499
  train_matthews_corrcoef_micro:
  - 0.9157008855755767
  - 0.9207506237264573
  - 0.9229772394786523
  - 0.9223043626391796
  - 0.9193004559759865
  train_matthews_corrcoef_micro_oob:
  - 0.8274010870489094
  - 0.8242696413412752
  - 0.8298452538750236
  - 0.8332075712180922
  - 0.824410723817982
  train_matthews_corrcoef_samples:
  - 0.8937660778681717
  - 0.900069768540055
  - 0.9007914136747032
  - 0.9006737631946636
  - 0.8970243047818616
  train_matthews_corrcoef_samples_oob:
  - 0.7774671085783348
  - 0.7720689247795096
  - 0.7783423145132458
  - 0.785177746081573
  - 0.7703574536964647
  train_matthews_corrcoef_weighted:
  - 0.9150841632108223
  - 0.9201546453923406
  - 0.9223838316310002
  - 0.9216483809780408
  - 0.9186085067947506
  train_matthews_corrcoef_weighted_oob:
  - 0.8263201548743188
  - 0.8234254091211815
  - 0.828681148397376
  - 0.8318585361145922
  - 0.8231666196671092
  train_ndgc:
  - 0.9924664768596313
  - 0.9922964974707161
  - 0.9916230853755532
  - 0.9923487474055709
  - 0.9920678734481846
  train_ndgc_oob:
  - 0.9652305897499728
  - 0.9645800696079272
  - 0.964359929233599
  - 0.9655615610103967
  - 0.9646615553388063
  train_neg_coverage_error:
  - -1.0987525987525988
  - -1.0998439937597504
  - -1.0958549222797926
  - -1.099375650364204
  - -1.0959046137895283
  train_neg_coverage_error_oob:
  - -1.226091476091476
  - -1.2288091523660947
  - -1.2186528497409326
  - -1.2154006243496358
  - -1.219284603421462
  train_neg_hamming_loss_macro:
  - -0.02442827442827443
  - -0.022967585370081475
  - -0.022279792746113986
  - -0.022545959070412763
  - -0.02332814930015552
  train_neg_hamming_loss_macro_oob:
  - -0.04885654885654886
  - -0.04966198647945918
  - -0.048013816925734025
  - -0.04725979882067291
  - -0.04950751684810783
  train_neg_hamming_loss_micro:
  - -0.02442827442827443
  - -0.02296758537008147
  - -0.02227979274611399
  - -0.022545959070412763
  - -0.02332814930015552
  train_neg_hamming_loss_micro_oob:
  - -0.04885654885654886
  - -0.04966198647945918
  - -0.048013816925734025
  - -0.04725979882067291
  - -0.04950751684810783
  train_neg_hamming_loss_samples:
  - -0.02442827442827443
  - -0.022967585370081468
  - -0.02227979274611399
  - -0.022545959070412763
  - -0.023328149300155518
  train_neg_hamming_loss_samples_oob:
  - -0.04885654885654886
  - -0.04966198647945918
  - -0.04801381692573402
  - -0.0472597988206729
  - -0.04950751684810783
  train_neg_hamming_loss_weighted:
  - -0.02520086976608716
  - -0.023703694762877557
  - -0.022991100510117154
  - -0.023412607915778746
  - -0.0241575444486328
  train_neg_hamming_loss_weighted_oob:
  - -0.05034775578253839
  - -0.05116697898090005
  - -0.04942023030436656
  - -0.04901084229810202
  - -0.05117822013857695
  train_neg_label_ranking_loss:
  - -0.004404885654885655
  - -0.004784191367654705
  - -0.004844559585492228
  - -0.004578563995837669
  - -0.004730430274753759
  train_neg_label_ranking_loss_oob:
  - -0.028313409563409563
  - -0.02922516900676027
  - -0.028186528497409324
  - -0.02672996878251821
  - -0.027890098496630378
  train_precision_macro:
  - 0.9755717255717257
  - 0.9770324146299184
  - 0.9777202072538861
  - 0.9774540409295872
  - 0.9766718506998444
  train_precision_macro_oob:
  - 0.9511434511434511
  - 0.9503380135205409
  - 0.9519861830742659
  - 0.9527402011793272
  - 0.9504924831518923
  train_precision_micro:
  - 0.9755717255717256
  - 0.9770324146299185
  - 0.977720207253886
  - 0.9774540409295872
  - 0.9766718506998445
  train_precision_micro_oob:
  - 0.9511434511434511
  - 0.9503380135205408
  - 0.951986183074266
  - 0.9527402011793271
  - 0.9504924831518922
  train_precision_samples:
  - 0.9755717255717256
  - 0.9770324146299186
  - 0.977720207253886
  - 0.9774540409295872
  - 0.9766718506998445
  train_precision_samples_oob:
  - 0.9511434511434511
  - 0.9503380135205408
  - 0.9519861830742661
  - 0.9527402011793272
  - 0.9504924831518922
  train_precision_weighted:
  - 0.9747991302339128
  - 0.9762963052371225
  - 0.9770088994898828
  - 0.9765873920842212
  - 0.9758424555513673
  train_precision_weighted_oob:
  - 0.9496522442174616
  - 0.9488330210190999
  - 0.9505797696956335
  - 0.950989157701898
  - 0.948821779861423
  train_recall_macro:
  - 0.9755717255717257
  - 0.9770324146299184
  - 0.9777202072538861
  - 0.9774540409295872
  - 0.9766718506998444
  train_recall_macro_oob:
  - 0.9511434511434511
  - 0.9503380135205409
  - 0.9519861830742659
  - 0.9527402011793272
  - 0.9504924831518923
  train_recall_micro:
  - 0.9755717255717256
  - 0.9770324146299185
  - 0.977720207253886
  - 0.9774540409295872
  - 0.9766718506998445
  train_recall_micro_oob:
  - 0.9511434511434511
  - 0.9503380135205408
  - 0.951986183074266
  - 0.9527402011793271
  - 0.9504924831518922
  train_recall_samples:
  - 0.9755717255717256
  - 0.9770324146299186
  - 0.977720207253886
  - 0.9774540409295872
  - 0.9766718506998445
  train_recall_samples_oob:
  - 0.9511434511434511
  - 0.9503380135205408
  - 0.9519861830742661
  - 0.9527402011793272
  - 0.9504924831518922
  train_recall_weighted:
  - 0.9747991302339128
  - 0.9762963052371225
  - 0.9770088994898828
  - 0.9765873920842212
  - 0.9758424555513673
  train_recall_weighted_oob:
  - 0.9496522442174616
  - 0.9488330210190999
  - 0.9505797696956335
  - 0.950989157701898
  - 0.948821779861423
  train_roc_auc_macro:
  - 0.9990988260536033
  - 0.9990572447649573
  - 0.9990828360940469
  - 0.9991210738138774
  - 0.9990644959199667
  train_roc_auc_macro_oob:
  - 0.9850587551673521
  - 0.9852602414951216
  - 0.9865379262270945
  - 0.9865498755745113
  - 0.9855965362275088
  train_roc_auc_micro:
  - 0.9991463287777687
  - 0.9990954332014568
  - 0.9991403762812892
  - 0.999157310908649
  - 0.9991257428577694
  train_roc_auc_micro_oob:
  - 0.9853142952132407
  - 0.9855947928815213
  - 0.9868560612838838
  - 0.9869385107611344
  - 0.9858044150392786
  train_roc_auc_samples:
  - 0.9955951143451144
  - 0.9952158086323454
  - 0.9951554404145078
  - 0.9954214360041623
  - 0.9952695697252463
  train_roc_auc_samples_oob:
  - 0.9716865904365903
  - 0.9707748309932398
  - 0.9718134715025907
  - 0.9732700312174818
  - 0.9721099015033696
  train_roc_auc_weighted:
  - 0.9990595576958776
  - 0.9990260754163762
  - 0.9990405011958461
  - 0.9990864508407907
  - 0.9990226408081329
  train_roc_auc_weighted_oob:
  - 0.9842742982788538
  - 0.9844830398968163
  - 0.9857955352721988
  - 0.9858296598219944
  - 0.9847568925980872
start: 2023-12-22 13:52:45.199457
wrapper: null
