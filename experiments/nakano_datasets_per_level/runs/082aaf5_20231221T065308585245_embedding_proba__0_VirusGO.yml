active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          YGZmZmZmEsAAmpmZmZnZP4BmZmZmZvY/gGZmZmZm9j+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:53:13.108174
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__0
  params: {}
hash: 082aaf5815ede1657f81bddd68623e5dafee1155e360e0e0dbb72100dc1787b6
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/082aaf5_20231221T065308585245_embedding_proba__0_VirusGO.yml
results:
  fit_time:
  - 1.285212755203247
  - 1.2733097076416016
  - 1.2875709533691406
  - 1.3093712329864502
  - 1.2829363346099854
  score_time:
  - 0.6226942539215088
  - 0.5645363330841064
  - 0.5323367118835449
  - 0.5187098979949951
  - 0.5376288890838623
  test_average_precision_macro:
  - 0.9914604730781201
  - 0.9175315301709629
  - 0.9826966622897703
  - 0.934412193770661
  - 0.8985579512053082
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7978010360280632
  - 0.7540789703621432
  - 0.8165124648195529
  - 0.6799737369781477
  - 0.749369287367461
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8061594202898551
  - 0.7985772357723577
  - 0.8416666666666666
  - 0.7664583333333332
  - 0.8370833333333334
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9823269051210227
  - 0.8974256216880511
  - 0.9777011910711312
  - 0.8852374412996704
  - 0.8899039178637225
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8695652173913043
  - 0.8292682926829268
  - 0.8208333333333333
  - 0.8041666666666667
  - 0.8416666666666668
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8695652173913043
  - 0.8292682926829268
  - 0.8208333333333333
  - 0.8041666666666667
  - 0.8416666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8695652173913045
  - 0.829268292682927
  - 0.8208333333333332
  - 0.8041666666666666
  - 0.8416666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8256688963210702
  - 0.7431850789096127
  - 0.7345
  - 0.71
  - 0.7653061224489796
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7746833564758093
  - 0.7236992945326278
  - 0.7118619032756305
  - 0.6920573516318198
  - 0.7389670954638828
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7692307692307693
  - 0.7083333333333334
  - 0.696113074204947
  - 0.6724738675958188
  - 0.7266187050359713
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7841614906832299
  - 0.7259001161440187
  - 0.7071428571428571
  - 0.6839285714285716
  - 0.7505952380952381
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7065757512927324
  - 0.600718435522357
  - 0.5927064701469952
  - 0.5653974394399927
  - 0.627591214017513
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.806159420289855
  - 0.7985772357723575
  - 0.8416666666666666
  - 0.7664583333333332
  - 0.8370833333333332
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.19474394198786746
  - 0.1288588696353045
  - 0.11982113031270776
  - 0.07019175901177588
  - 0.14626683779957775
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5148677086363541
  - 0.37453490417330143
  - 0.33788028964228645
  - 0.21593853097439358
  - 0.42436227711404617
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.32608695652173914
  - 0.23005989102521157
  - 0.1566227766016838
  - 0.10581138830084189
  - 0.315
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.39382705323061007
  - 0.26597795217262593
  - 0.24443510583792388
  - 0.14010512138478096
  - 0.3044738256236108
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8569597549516509
  - 0.8500160800937844
  - 0.8849214413029465
  - 0.8264312517954326
  - 0.8812189508874422
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7608695652173914
  - -1.829268292682927
  - -1.875
  - -2.0
  - -1.875
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.13043478260869565
  - -0.1707317073170732
  - -0.1791666666666667
  - -0.19583333333333333
  - -0.15833333333333335
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.13043478260869565
  - -0.17073170731707318
  - -0.17916666666666667
  - -0.19583333333333333
  - -0.15833333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.13043478260869565
  - -0.17073170731707318
  - -0.17916666666666664
  - -0.19583333333333333
  - -0.1583333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.17433110367892976
  - -0.2568149210903874
  - -0.2655
  - -0.29
  - -0.23469387755102045
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.12119565217391305
  - -0.12439024390243904
  - -0.115625
  - -0.1525
  - -0.11993055555555557
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8695652173913043
  - 0.8292682926829268
  - 0.8208333333333333
  - 0.8041666666666667
  - 0.8416666666666668
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8695652173913043
  - 0.8292682926829268
  - 0.8208333333333333
  - 0.8041666666666667
  - 0.8416666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8695652173913045
  - 0.829268292682927
  - 0.8208333333333332
  - 0.8041666666666666
  - 0.8416666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8256688963210702
  - 0.7431850789096127
  - 0.7345
  - 0.71
  - 0.7653061224489796
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8695652173913043
  - 0.8292682926829268
  - 0.8208333333333333
  - 0.8041666666666667
  - 0.8416666666666668
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8695652173913043
  - 0.8292682926829268
  - 0.8208333333333333
  - 0.8041666666666667
  - 0.8416666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8695652173913045
  - 0.829268292682927
  - 0.8208333333333332
  - 0.8041666666666666
  - 0.8416666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8256688963210702
  - 0.7431850789096127
  - 0.7345
  - 0.71
  - 0.7653061224489796
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9907333623104414
  - 0.9665979689956673
  - 0.9894649284834706
  - 0.9694685694326038
  - 0.9277671213412901
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9122596153846154
  - 0.9120160884866767
  - 0.9153684210526316
  - 0.8973684210526316
  - 0.8961427502938348
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8788043478260871
  - 0.8756097560975611
  - 0.884375
  - 0.8474999999999999
  - 0.8800694444444443
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9807929139825691
  - 0.9434869464017952
  - 0.9803140096618357
  - 0.9421256038647343
  - 0.9049097900029576
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9355484265030399
  - 0.9634555128515468
  - 0.9494735754585357
  - 0.9568988249872633
  - 0.9624330166461491
  train_average_precision_macro_oob:
  - 0.8390994838153998
  - 0.8745951391675754
  - 0.8430494186148191
  - 0.8147360646299285
  - 0.8673212218515053
  train_average_precision_micro:
  - 0.7734056621499228
  - 0.7987007982076749
  - 0.7792322575883803
  - 0.7938799771272583
  - 0.7890952665340479
  train_average_precision_micro_oob:
  - 0.716795485103566
  - 0.7548979280914004
  - 0.7301640525892688
  - 0.744112844459962
  - 0.7445157517813733
  train_average_precision_samples:
  - 0.8145962732919253
  - 0.8319779116465864
  - 0.8227544910179639
  - 0.8370259481037924
  - 0.8418662674650697
  train_average_precision_samples_oob:
  - 0.784472049689441
  - 0.8090863453815261
  - 0.7813705921490353
  - 0.8090818363273453
  - 0.8171656686626745
  train_average_precision_weighted:
  - 0.923560737712994
  - 0.9548790147119944
  - 0.9351235855133773
  - 0.942883307225702
  - 0.9447675670594006
  train_average_precision_weighted_oob:
  - 0.832124945155761
  - 0.8925567590429885
  - 0.8772961535566893
  - 0.8628051558687007
  - 0.8777358682681792
  train_f1_macro:
  - 0.849896480331263
  - 0.857429718875502
  - 0.8383233532934132
  - 0.8353293413173652
  - 0.8502994011976049
  train_f1_macro_oob:
  - 0.829192546583851
  - 0.8493975903614458
  - 0.8303393213572855
  - 0.8323353293413174
  - 0.8303393213572855
  train_f1_micro:
  - 0.849896480331263
  - 0.857429718875502
  - 0.8383233532934131
  - 0.8353293413173652
  - 0.8502994011976048
  train_f1_micro_oob:
  - 0.8291925465838509
  - 0.8493975903614458
  - 0.8303393213572854
  - 0.8323353293413174
  - 0.8303393213572854
  train_f1_samples:
  - 0.849896480331263
  - 0.8574297188755019
  - 0.838323353293413
  - 0.8353293413173651
  - 0.8502994011976048
  train_f1_samples_oob:
  - 0.8291925465838509
  - 0.8493975903614456
  - 0.8303393213572854
  - 0.8323353293413172
  - 0.8303393213572852
  train_f1_weighted:
  - 0.7911490683229814
  - 0.8059102079961639
  - 0.7649552380387739
  - 0.7568032252327029
  - 0.7926609834518156
  train_f1_weighted_oob:
  - 0.7487888198757763
  - 0.7893664209075107
  - 0.7487104997924942
  - 0.7506966265488824
  - 0.7517182384000471
  train_jaccard_macro:
  - 0.7475802098234058
  - 0.7572853208765742
  - 0.7337906259740165
  - 0.7307847593378956
  - 0.7482442506628403
  train_jaccard_macro_oob:
  - 0.7222595579826577
  - 0.7472438848302384
  - 0.7243722596911724
  - 0.7272163504172272
  - 0.7236258080649655
  train_jaccard_micro:
  - 0.738973897389739
  - 0.7504393673110721
  - 0.7216494845360825
  - 0.7172236503856041
  - 0.7395833333333334
  train_jaccard_micro_oob:
  - 0.7082228116710876
  - 0.7382198952879581
  - 0.7098976109215017
  - 0.7128205128205128
  - 0.7098976109215017
  train_jaccard_samples:
  - 0.759242827565809
  - 0.7703671830177854
  - 0.7395209580838324
  - 0.7319646421442829
  - 0.7577701739378387
  train_jaccard_samples_oob:
  - 0.7244897959183674
  - 0.7570281124497992
  - 0.7266894781864842
  - 0.7276874821785002
  - 0.723552894211577
  train_jaccard_weighted:
  - 0.6600237530964338
  - 0.679331959669
  - 0.6276309999106114
  - 0.6186046042846699
  - 0.6625794377909748
  train_jaccard_weighted_oob:
  - 0.6081999499672374
  - 0.6586495988571441
  - 0.6084775345273482
  - 0.6113309227126053
  - 0.6120679443147061
  train_label_ranking_average_precision_score:
  - 0.8145962732919252
  - 0.8319779116465861
  - 0.8227544910179637
  - 0.837025948103792
  - 0.8418662674650693
  train_label_ranking_average_precision_score_oob:
  - 0.7844720496894406
  - 0.8090863453815258
  - 0.7813705921490348
  - 0.809081836327345
  - 0.8171656686626745
  train_matthews_corrcoef_macro:
  - 0.17058710895349705
  - 0.18118233678086212
  - 0.14113436554974532
  - 0.13427108241226748
  - 0.16916935817845033
  train_matthews_corrcoef_macro_oob:
  - 0.1253896717057639
  - 0.16506999854771362
  - 0.1201636050286798
  - 0.1256634121050202
  - 0.1251768600457818
  train_matthews_corrcoef_micro:
  - 0.4755330926713677
  - 0.494143014700572
  - 0.39979922494019543
  - 0.3845762358539031
  - 0.4658045316049439
  train_matthews_corrcoef_micro_oob:
  - 0.3713275317082884
  - 0.4566594377059609
  - 0.3536507362670079
  - 0.3666007746932045
  - 0.3596482271660631
  train_matthews_corrcoef_samples:
  - 0.3443599179360374
  - 0.36141405537471116
  - 0.2542809045752536
  - 0.22161372009382238
  - 0.3045803057728584
  train_matthews_corrcoef_samples_oob:
  - 0.23018412581533793
  - 0.3154354075913758
  - 0.21595755128184044
  - 0.21064093247685425
  - 0.2013604115223697
  train_matthews_corrcoef_weighted:
  - 0.34854714844217966
  - 0.36770597426297386
  - 0.28695818213112834
  - 0.2745866714309326
  - 0.34363842726897853
  train_matthews_corrcoef_weighted_oob:
  - 0.2561614077663416
  - 0.3345193671558919
  - 0.2442662810286017
  - 0.2569441642164547
  - 0.2535555313333926
  train_ndgc:
  - 0.8637090080430555
  - 0.8769408108277655
  - 0.8697553584503185
  - 0.8801350035984217
  - 0.8843954414857368
  train_ndgc_oob:
  - 0.8410185574118884
  - 0.8587461983928174
  - 0.8385374416161373
  - 0.8589929162888674
  - 0.8653739118929752
  train_neg_coverage_error:
  - -1.8695652173913044
  - -1.7891566265060241
  - -1.7904191616766467
  - -1.7604790419161678
  - -1.7305389221556886
  train_neg_coverage_error_oob:
  - -2.0
  - -1.927710843373494
  - -1.9401197604790419
  - -1.8982035928143712
  - -1.8263473053892216
  train_neg_hamming_loss_macro:
  - -0.15010351966873706
  - -0.142570281124498
  - -0.16167664670658682
  - -0.16467065868263472
  - -0.1497005988023952
  train_neg_hamming_loss_macro_oob:
  - -0.17080745341614909
  - -0.1506024096385542
  - -0.16966067864271459
  - -0.16766467065868265
  - -0.1696606786427146
  train_neg_hamming_loss_micro:
  - -0.15010351966873706
  - -0.142570281124498
  - -0.16167664670658682
  - -0.16467065868263472
  - -0.1497005988023952
  train_neg_hamming_loss_micro_oob:
  - -0.17080745341614906
  - -0.15060240963855423
  - -0.16966067864271456
  - -0.16766467065868262
  - -0.16966067864271456
  train_neg_hamming_loss_samples:
  - -0.15010351966873706
  - -0.142570281124498
  - -0.1616766467065868
  - -0.1646706586826347
  - -0.1497005988023952
  train_neg_hamming_loss_samples_oob:
  - -0.17080745341614906
  - -0.1506024096385542
  - -0.16966067864271456
  - -0.16766467065868262
  - -0.16966067864271453
  train_neg_hamming_loss_weighted:
  - -0.20885093167701868
  - -0.19408979200383622
  - -0.23504476196122603
  - -0.2431967747672971
  - -0.2073390165481844
  train_neg_hamming_loss_weighted_oob:
  - -0.2512111801242236
  - -0.21063357909248934
  - -0.25128950020750573
  - -0.24930337345111755
  - -0.24828176159995283
  train_neg_label_ranking_loss:
  - -0.12103174603174605
  - -0.11045850066934407
  - -0.11159347970725217
  - -0.10665335994677311
  - -0.09910179640718561
  train_neg_label_ranking_loss_oob:
  - -0.14827467218771567
  - -0.1392235609103079
  - -0.14271457085828343
  - -0.13344976713240186
  - -0.12005988023952097
  train_precision_macro:
  - 0.849896480331263
  - 0.857429718875502
  - 0.8383233532934132
  - 0.8353293413173652
  - 0.8502994011976049
  train_precision_macro_oob:
  - 0.829192546583851
  - 0.8493975903614458
  - 0.8303393213572855
  - 0.8323353293413174
  - 0.8303393213572855
  train_precision_micro:
  - 0.849896480331263
  - 0.857429718875502
  - 0.8383233532934131
  - 0.8353293413173652
  - 0.8502994011976048
  train_precision_micro_oob:
  - 0.8291925465838509
  - 0.8493975903614458
  - 0.8303393213572854
  - 0.8323353293413174
  - 0.8303393213572854
  train_precision_samples:
  - 0.849896480331263
  - 0.8574297188755019
  - 0.838323353293413
  - 0.8353293413173651
  - 0.8502994011976048
  train_precision_samples_oob:
  - 0.8291925465838509
  - 0.8493975903614456
  - 0.8303393213572854
  - 0.8323353293413172
  - 0.8303393213572852
  train_precision_weighted:
  - 0.7911490683229814
  - 0.8059102079961639
  - 0.7649552380387739
  - 0.7568032252327029
  - 0.7926609834518156
  train_precision_weighted_oob:
  - 0.7487888198757763
  - 0.7893664209075107
  - 0.7487104997924942
  - 0.7506966265488824
  - 0.7517182384000471
  train_recall_macro:
  - 0.849896480331263
  - 0.857429718875502
  - 0.8383233532934132
  - 0.8353293413173652
  - 0.8502994011976049
  train_recall_macro_oob:
  - 0.829192546583851
  - 0.8493975903614458
  - 0.8303393213572855
  - 0.8323353293413174
  - 0.8303393213572855
  train_recall_micro:
  - 0.849896480331263
  - 0.857429718875502
  - 0.8383233532934131
  - 0.8353293413173652
  - 0.8502994011976048
  train_recall_micro_oob:
  - 0.8291925465838509
  - 0.8493975903614458
  - 0.8303393213572854
  - 0.8323353293413174
  - 0.8303393213572854
  train_recall_samples:
  - 0.849896480331263
  - 0.8574297188755019
  - 0.838323353293413
  - 0.8353293413173651
  - 0.8502994011976048
  train_recall_samples_oob:
  - 0.8291925465838509
  - 0.8493975903614456
  - 0.8303393213572854
  - 0.8323353293413172
  - 0.8303393213572852
  train_recall_weighted:
  - 0.7911490683229814
  - 0.8059102079961639
  - 0.7649552380387739
  - 0.7568032252327029
  - 0.7926609834518156
  train_recall_weighted_oob:
  - 0.7487888198757763
  - 0.7893664209075107
  - 0.7487104997924942
  - 0.7506966265488824
  - 0.7517182384000471
  train_roc_auc_macro:
  - 0.9729818043583361
  - 0.9839416136363784
  - 0.979876916594733
  - 0.9798773967048122
  - 0.9822614713689486
  train_roc_auc_macro_oob:
  - 0.94454016814224
  - 0.962440363790641
  - 0.9592391565001588
  - 0.9526642220620923
  - 0.9668075983750981
  train_roc_auc_micro:
  - 0.9104797650130547
  - 0.9201914953534216
  - 0.9144430693069308
  - 0.9173793316831683
  - 0.9195854423941257
  train_roc_auc_micro_oob:
  - 0.8936945169712794
  - 0.9025063362433118
  - 0.8991893564356436
  - 0.8993069306930692
  - 0.9082103861353785
  train_roc_auc_samples:
  - 0.878968253968254
  - 0.889541499330656
  - 0.8884065202927478
  - 0.8933466400532267
  - 0.9008982035928143
  train_roc_auc_samples_oob:
  - 0.8517253278122844
  - 0.860776439089692
  - 0.8572854291417163
  - 0.8665502328675979
  - 0.8799401197604789
  train_roc_auc_weighted:
  - 0.9555963720267525
  - 0.9764909849230514
  - 0.9668285268529193
  - 0.9651537857294835
  - 0.966490830396802
  train_roc_auc_weighted_oob:
  - 0.9219158482224609
  - 0.95579655959067
  - 0.9415443183809986
  - 0.9347030091237499
  - 0.946950664793289
start: 2023-12-21 06:53:08.585245
wrapper: null
