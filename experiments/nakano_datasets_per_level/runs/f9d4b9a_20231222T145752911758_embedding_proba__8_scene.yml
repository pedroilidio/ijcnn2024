active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZEUAAmZmZmZn5vwCcmZmZmdk/ADIzMzMz47+AzMzMzMwEwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 15:24:18.470038
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__8
  params: {}
hash: f9d4b9af5b172c4e0c013d4babffbe94167dcd3d8c653d4572d4d0c9c056f533
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f9d4b9a_20231222T145752911758_embedding_proba__8_scene.yml
results:
  fit_time:
  - 1470.6912517547607
  - 1474.4019191265106
  - 1332.4947521686554
  - 1448.8736288547516
  - 1461.0272285938263
  score_time:
  - 19.4526584148407
  - 18.943525791168213
  - 16.49430274963379
  - 16.139777421951294
  - 17.937671422958374
  test_average_precision_macro:
  - 0.8300083381352567
  - 0.8554081286459371
  - 0.8318320135505752
  - 0.8526435267214826
  - 0.8202963885887282
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8228283415677883
  - 0.8506495138038115
  - 0.8303964906075557
  - 0.8440262624373542
  - 0.8136211955538223
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8793151642208245
  - 0.8883712905452036
  - 0.8806479556479557
  - 0.8879322268326417
  - 0.8654269972451791
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8201683908801479
  - 0.8444886640454772
  - 0.8210829600907995
  - 0.8404152438916876
  - 0.808905833316013
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9227812718378757
  - 0.924775707384403
  - 0.924116424116424
  - 0.9256569847856154
  - 0.9132231404958677
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9227812718378756
  - 0.9247757073844031
  - 0.9241164241164241
  - 0.9256569847856155
  - 0.9132231404958677
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9227812718378756
  - 0.9247757073844032
  - 0.9241164241164241
  - 0.9256569847856154
  - 0.9132231404958677
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9189174914273641
  - 0.9199674824096656
  - 0.9195518328466306
  - 0.9202312371590863
  - 0.9088555793101248
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8586648606615649
  - 0.8631086827519073
  - 0.8613810826039243
  - 0.8654497764178478
  - 0.8429553400742836
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8566331495296788
  - 0.8600770218228498
  - 0.8589371980676328
  - 0.8616028323141294
  - 0.8403041825095057
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8780573025856044
  - 0.8813467415951887
  - 0.881942381942382
  - 0.8821379174076269
  - 0.8635379771743407
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.85211608161578
  - 0.8551463097827351
  - 0.853670221474889
  - 0.8563923350172392
  - 0.8356530464708863
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8793151642208245
  - 0.8883712905452033
  - 0.8806479556479554
  - 0.8879322268326415
  - 0.8654269972451789
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7322359215029088
  - 0.7390872349889412
  - 0.7384133627226305
  - 0.7403234714087666
  - 0.692087228712014
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7243033266193835
  - 0.7298080491512441
  - 0.7295827641339909
  - 0.732269486212852
  - 0.685021506255522
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6949841471593153
  - 0.7010502799055742
  - 0.7100758362510905
  - 0.702328525433736
  - 0.6490629694974681
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.72181745452789
  - 0.7248387533640542
  - 0.7245845121573907
  - 0.7238745626407023
  - 0.6796168591154709
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9119411182844104
  - 0.917524932370558
  - 0.9121562428915362
  - 0.9175344501882283
  - 0.9004583662642178
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4549266247379455
  - -1.3850931677018634
  - -1.4241164241164241
  - -1.4024896265560165
  - -1.4483471074380165
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0772187281621244
  - -0.07522429261559696
  - -0.07588357588357589
  - -0.07434301521438451
  - -0.08677685950413223
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07721872816212438
  - -0.07522429261559696
  - -0.07588357588357589
  - -0.07434301521438451
  - -0.08677685950413223
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07721872816212438
  - -0.07522429261559696
  - -0.07588357588357589
  - -0.0743430152143845
  - -0.08677685950413223
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08108250857263583
  - -0.08003251759033442
  - -0.08044816715336947
  - -0.07976876284091367
  - -0.09114442068987522
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.070020964360587
  - -0.061697722567287776
  - -0.06777546777546777
  - -0.06395228215767636
  - -0.0743801652892562
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9227812718378757
  - 0.924775707384403
  - 0.924116424116424
  - 0.9256569847856154
  - 0.9132231404958677
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9227812718378756
  - 0.9247757073844031
  - 0.9241164241164241
  - 0.9256569847856155
  - 0.9132231404958677
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9227812718378756
  - 0.9247757073844032
  - 0.9241164241164241
  - 0.9256569847856154
  - 0.9132231404958677
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9189174914273641
  - 0.9199674824096656
  - 0.9195518328466306
  - 0.9202312371590863
  - 0.9088555793101248
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9227812718378757
  - 0.924775707384403
  - 0.924116424116424
  - 0.9256569847856154
  - 0.9132231404958677
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9227812718378756
  - 0.9247757073844031
  - 0.9241164241164241
  - 0.9256569847856155
  - 0.9132231404958677
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9227812718378756
  - 0.9247757073844032
  - 0.9241164241164241
  - 0.9256569847856154
  - 0.9132231404958677
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9189174914273641
  - 0.9199674824096656
  - 0.9195518328466306
  - 0.9202312371590863
  - 0.9088555793101248
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9395506763235182
  - 0.9507873527357121
  - 0.9414149080096723
  - 0.9456689087529236
  - 0.9391461777857738
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.944358532088265
  - 0.9545897283214878
  - 0.9465332164402473
  - 0.9496934620207408
  - 0.9428600556010448
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9299790356394131
  - 0.9383022774327123
  - 0.9322245322245323
  - 0.9360477178423238
  - 0.9256198347107438
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9342940996970464
  - 0.945699419094681
  - 0.9355598801466413
  - 0.9402793962525446
  - 0.9340474889000571
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9975997080595161
  - 0.9974093608310118
  - 0.9974928774201501
  - 0.9973602958803661
  - 0.9973324983971673
  train_average_precision_macro_oob:
  - 0.9770884382603887
  - 0.9743370651851966
  - 0.9737227125425192
  - 0.9762781341189225
  - 0.9747153050354699
  train_average_precision_micro:
  - 0.9977237419698011
  - 0.9974744745774359
  - 0.9974821092470793
  - 0.9975056811180372
  - 0.9973475840547363
  train_average_precision_micro_oob:
  - 0.9767522748740438
  - 0.974263406323585
  - 0.9731851296498177
  - 0.9760037212526809
  - 0.9744474034008003
  train_average_precision_samples:
  - 0.9897668393782384
  - 0.991467428967429
  - 0.9903080650744202
  - 0.9907792207792208
  - 0.9914629918530075
  train_average_precision_samples_oob:
  - 0.9715112262521589
  - 0.9703309078309079
  - 0.9696088611976462
  - 0.9711428571428571
  - 0.9703241462991853
  train_average_precision_weighted:
  - 0.9975470240720449
  - 0.9973157110269614
  - 0.9974251130104609
  - 0.9972846047212728
  - 0.9972541684821669
  train_average_precision_weighted_oob:
  - 0.9765125879628689
  - 0.9734917996216913
  - 0.9728754372993295
  - 0.9757794508202865
  - 0.9739019892011798
  train_f1_macro:
  - 0.982901554404145
  - 0.9825883575883575
  - 0.9831256490134995
  - 0.982857142857143
  - 0.982492633038655
  train_f1_macro_oob:
  - 0.9672711571675302
  - 0.964050589050589
  - 0.9643475250951887
  - 0.9648484848484848
  - 0.9662853180793899
  train_f1_micro:
  - 0.9829015544041451
  - 0.9825883575883576
  - 0.9831256490134995
  - 0.9828571428571429
  - 0.9824926330386549
  train_f1_micro_oob:
  - 0.9672711571675302
  - 0.964050589050589
  - 0.9643475250951886
  - 0.9648484848484848
  - 0.9662853180793899
  train_f1_samples:
  - 0.9829015544041451
  - 0.9825883575883576
  - 0.9831256490134995
  - 0.9828571428571429
  - 0.982492633038655
  train_f1_samples_oob:
  - 0.9672711571675303
  - 0.9640505890505892
  - 0.9643475250951887
  - 0.964848484848485
  - 0.9662853180793898
  train_f1_weighted:
  - 0.9827375243227812
  - 0.9823061139550501
  - 0.9826780621625508
  - 0.9825040466779598
  - 0.9822189113979652
  train_f1_weighted_oob:
  - 0.9668511483357833
  - 0.9634058437249927
  - 0.963464498144814
  - 0.9643551038333648
  - 0.9655764846946079
  train_jaccard_macro:
  - 0.9664396028985823
  - 0.965831815592761
  - 0.9668566825951008
  - 0.9663536499746249
  - 0.9656187080527898
  train_jaccard_macro_oob:
  - 0.9367195239606323
  - 0.9307355170066721
  - 0.9312683415293045
  - 0.9321745020007368
  - 0.9348791260339725
  train_jaccard_micro:
  - 0.9663779928680591
  - 0.9657726692209451
  - 0.9668113352055144
  - 0.9662921348314607
  - 0.965587734241908
  train_jaccard_micro_oob:
  - 0.9366167739777573
  - 0.9305962036959612
  - 0.9311497326203209
  - 0.9320843091334895
  - 0.9347698499203488
  train_jaccard_samples:
  - 0.9712681963977301
  - 0.9707330957330957
  - 0.9716288384512684
  - 0.9712801484230056
  - 0.9707550206770175
  train_jaccard_samples_oob:
  - 0.9462250185048113
  - 0.941020691020691
  - 0.9414651634277802
  - 0.9422758194186766
  - 0.9445930218161107
  train_jaccard_weighted:
  - 0.9661197840980857
  - 0.9652832701200599
  - 0.9659888181172338
  - 0.9656673932965066
  - 0.9650875375591337
  train_jaccard_weighted_oob:
  - 0.9359257658807352
  - 0.9295226573933707
  - 0.9296247002507585
  - 0.9312453516579365
  - 0.9335480634404872
  train_label_ranking_average_precision_score:
  - 0.9897668393782382
  - 0.9914674289674288
  - 0.9903080650744202
  - 0.9907792207792206
  - 0.9914629918530073
  train_label_ranking_average_precision_score_oob:
  - 0.9715112262521588
  - 0.9703309078309076
  - 0.9696088611976462
  - 0.971142857142857
  - 0.9703241462991851
  train_matthews_corrcoef_macro:
  - 0.9409806631099435
  - 0.9402385984312489
  - 0.9424570964435603
  - 0.9414225434175677
  - 0.9398918637928592
  train_matthews_corrcoef_macro_oob:
  - 0.8855360417816284
  - 0.8746529414508778
  - 0.8761816867505804
  - 0.877282927723566
  - 0.8829840709413208
  train_matthews_corrcoef_micro:
  - 0.941123378704745
  - 0.9401159221948356
  - 0.9418813806244911
  - 0.9410796306287652
  - 0.9397693101739463
  train_matthews_corrcoef_micro_oob:
  - 0.8856293012959864
  - 0.8742803139920945
  - 0.8751549545010797
  - 0.8772457372128186
  - 0.8823585806809836
  train_matthews_corrcoef_samples:
  - 0.925807326362507
  - 0.9285071513849499
  - 0.9283043006020127
  - 0.928370952186741
  - 0.9263561851946918
  train_matthews_corrcoef_samples_oob:
  - 0.8583211833804201
  - 0.8461127847624901
  - 0.8451140737551119
  - 0.8470316908446308
  - 0.8554710581811907
  train_matthews_corrcoef_weighted:
  - 0.9408924791378823
  - 0.9398068579740806
  - 0.9414986400434878
  - 0.9407411540638877
  - 0.9395104550885314
  train_matthews_corrcoef_weighted_oob:
  - 0.8851697448773174
  - 0.8736311649882949
  - 0.874477585092831
  - 0.8767754765250074
  - 0.8817296999934714
  train_ndgc:
  - 0.9924790049758254
  - 0.9937689247046658
  - 0.9928821667703664
  - 0.9932526811074167
  - 0.9937393450801131
  train_ndgc_oob:
  - 0.9794596181001929
  - 0.9785641137428877
  - 0.9779009806445279
  - 0.9791078609131098
  - 0.9785380785168688
  train_neg_coverage_error:
  - -1.094300518134715
  - -1.093035343035343
  - -1.0934579439252337
  - -1.0955844155844157
  - -1.0930837233489339
  train_neg_coverage_error_oob:
  - -1.1632124352331605
  - -1.1668399168399168
  - -1.170301142263759
  - -1.1662337662337663
  - -1.171606864274571
  train_neg_hamming_loss_macro:
  - -0.01709844559585492
  - -0.017411642411642413
  - -0.01687435098650052
  - -0.017142857142857144
  - -0.01750736696134512
  train_neg_hamming_loss_macro_oob:
  - -0.032728842832469775
  - -0.035949410949410954
  - -0.035652474904811354
  - -0.035151515151515156
  - -0.03371468192061016
  train_neg_hamming_loss_micro:
  - -0.01709844559585492
  - -0.017411642411642413
  - -0.01687435098650052
  - -0.017142857142857144
  - -0.01750736696134512
  train_neg_hamming_loss_micro_oob:
  - -0.032728842832469775
  - -0.03594941094941095
  - -0.035652474904811354
  - -0.03515151515151515
  - -0.03371468192061016
  train_neg_hamming_loss_samples:
  - -0.01709844559585492
  - -0.017411642411642413
  - -0.01687435098650052
  - -0.017142857142857144
  - -0.017507366961345118
  train_neg_hamming_loss_samples_oob:
  - -0.03272884283246977
  - -0.03594941094941095
  - -0.03565247490481135
  - -0.03515151515151515
  - -0.033714681920610154
  train_neg_hamming_loss_weighted:
  - -0.01726247567721885
  - -0.017693886044949876
  - -0.017321937837449324
  - -0.017495953322040278
  - -0.017781088602034645
  train_neg_hamming_loss_weighted_oob:
  - -0.033148851664216654
  - -0.036594156275007346
  - -0.03653550185518593
  - -0.0356448961666353
  - -0.03442351530539209
  train_neg_label_ranking_loss:
  - -0.004404145077720207
  - -0.003547297297297298
  - -0.004075804776739357
  - -0.003961038961038961
  - -0.00358814352574103
  train_neg_label_ranking_loss_oob:
  - -0.01670984455958549
  - -0.017047817047817045
  - -0.018263239875389407
  - -0.016779220779220783
  - -0.017862714508580343
  train_precision_macro:
  - 0.982901554404145
  - 0.9825883575883575
  - 0.9831256490134995
  - 0.982857142857143
  - 0.982492633038655
  train_precision_macro_oob:
  - 0.9672711571675302
  - 0.964050589050589
  - 0.9643475250951887
  - 0.9648484848484848
  - 0.9662853180793899
  train_precision_micro:
  - 0.9829015544041451
  - 0.9825883575883576
  - 0.9831256490134995
  - 0.9828571428571429
  - 0.9824926330386549
  train_precision_micro_oob:
  - 0.9672711571675302
  - 0.964050589050589
  - 0.9643475250951886
  - 0.9648484848484848
  - 0.9662853180793899
  train_precision_samples:
  - 0.9829015544041451
  - 0.9825883575883576
  - 0.9831256490134995
  - 0.9828571428571429
  - 0.982492633038655
  train_precision_samples_oob:
  - 0.9672711571675303
  - 0.9640505890505892
  - 0.9643475250951887
  - 0.964848484848485
  - 0.9662853180793898
  train_precision_weighted:
  - 0.9827375243227812
  - 0.9823061139550501
  - 0.9826780621625508
  - 0.9825040466779598
  - 0.9822189113979652
  train_precision_weighted_oob:
  - 0.9668511483357833
  - 0.9634058437249927
  - 0.963464498144814
  - 0.9643551038333648
  - 0.9655764846946079
  train_recall_macro:
  - 0.982901554404145
  - 0.9825883575883575
  - 0.9831256490134995
  - 0.982857142857143
  - 0.982492633038655
  train_recall_macro_oob:
  - 0.9672711571675302
  - 0.964050589050589
  - 0.9643475250951887
  - 0.9648484848484848
  - 0.9662853180793899
  train_recall_micro:
  - 0.9829015544041451
  - 0.9825883575883576
  - 0.9831256490134995
  - 0.9828571428571429
  - 0.9824926330386549
  train_recall_micro_oob:
  - 0.9672711571675302
  - 0.964050589050589
  - 0.9643475250951886
  - 0.9648484848484848
  - 0.9662853180793899
  train_recall_samples:
  - 0.9829015544041451
  - 0.9825883575883576
  - 0.9831256490134995
  - 0.9828571428571429
  - 0.982492633038655
  train_recall_samples_oob:
  - 0.9672711571675303
  - 0.9640505890505892
  - 0.9643475250951887
  - 0.964848484848485
  - 0.9662853180793898
  train_recall_weighted:
  - 0.9827375243227812
  - 0.9823061139550501
  - 0.9826780621625508
  - 0.9825040466779598
  - 0.9822189113979652
  train_recall_weighted_oob:
  - 0.9668511483357833
  - 0.9634058437249927
  - 0.963464498144814
  - 0.9643551038333648
  - 0.9655764846946079
  train_roc_auc_macro:
  - 0.9994606773074649
  - 0.999408439604756
  - 0.9994322277837068
  - 0.9994041741649932
  - 0.9993945582287772
  train_roc_auc_macro_oob:
  - 0.9922493082308687
  - 0.991109911551035
  - 0.9908873232097437
  - 0.9921805285080391
  - 0.9913004200932788
  train_roc_auc_micro:
  - 0.9995038941199017
  - 0.9994506635107078
  - 0.9994497953213093
  - 0.9994602672292545
  - 0.9994210933005228
  train_roc_auc_micro_oob:
  - 0.9923655847806455
  - 0.9915103655942775
  - 0.9911362855076471
  - 0.9921028251696935
  - 0.9915428949023057
  train_roc_auc_samples:
  - 0.9955958549222798
  - 0.9964527027027028
  - 0.9959241952232607
  - 0.9960389610389611
  - 0.9964118564742589
  train_roc_auc_samples_oob:
  - 0.9832901554404145
  - 0.9829521829521829
  - 0.9817367601246106
  - 0.9832207792207792
  - 0.9821372854914197
  train_roc_auc_weighted:
  - 0.9994426327370107
  - 0.9993793428745131
  - 0.9994105124498734
  - 0.9993810748494267
  - 0.9993692573850299
  train_roc_auc_weighted_oob:
  - 0.9918790645385425
  - 0.9906301178869056
  - 0.9904521697140843
  - 0.9919227191735088
  - 0.9909055663485088
start: 2023-12-22 14:57:52.911758
wrapper: null
