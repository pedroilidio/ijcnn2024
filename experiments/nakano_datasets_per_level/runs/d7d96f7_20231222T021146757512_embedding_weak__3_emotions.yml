active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjPzAzMzMzMwPAQDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzC8DAmZmZmZn5P0BmZmZmZva/gDMzMzMz4z/gzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:12:17.771221
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__3
  params: {}
hash: d7d96f766debd0fa349dfd6d2b5468ce7b5a0e41e60157b2108e77b88f143159
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d7d96f7_20231222T021146757512_embedding_weak__3_emotions.yml
results:
  fit_time:
  - 16.459739446640015
  - 17.275912046432495
  - 17.3832950592041
  - 16.68250298500061
  - 17.820127964019775
  score_time:
  - 3.1018357276916504
  - 3.189499616622925
  - 3.1988298892974854
  - 2.8743555545806885
  - 3.1319215297698975
  test_average_precision_macro:
  - 0.6487583419863415
  - 0.7308360131693433
  - 0.7614960331346747
  - 0.6834549161060074
  - 0.7766365970412289
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6082066743794663
  - 0.6724786258523416
  - 0.6770467257890292
  - 0.6512339614867911
  - 0.7019194085386207
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7538023679417123
  - 0.8020180436847103
  - 0.7849074074074074
  - 0.7657485875706214
  - 0.784626436781609
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.647040037910847
  - 0.7210954960686408
  - 0.7555478076986883
  - 0.6788595351650425
  - 0.7704288254794789
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.790983606557377
  - 0.8119658119658119
  - 0.8027777777777777
  - 0.788135593220339
  - 0.8146551724137931
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7909836065573771
  - 0.811965811965812
  - 0.8027777777777778
  - 0.788135593220339
  - 0.8146551724137931
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7909836065573771
  - 0.811965811965812
  - 0.8027777777777778
  - 0.788135593220339
  - 0.8146551724137931
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7821378236035903
  - 0.8083630370625887
  - 0.7939732142857142
  - 0.7807010785824344
  - 0.8103840125391849
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6572364092824047
  - 0.6854997189282113
  - 0.6754337910946436
  - 0.6531872698229017
  - 0.6902723829194207
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6542372881355932
  - 0.6834532374100719
  - 0.6705336426914154
  - 0.6503496503496503
  - 0.6872727272727273
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6907494145199062
  - 0.7125356125356125
  - 0.7043650793650793
  - 0.6828894269572234
  - 0.7179392446633825
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.645607768134834
  - 0.6802678010890645
  - 0.6630814785970889
  - 0.6429369718434306
  - 0.6839137784249335
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7538023679417122
  - 0.8020180436847103
  - 0.7849074074074076
  - 0.7657485875706213
  - 0.784626436781609
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4841314066040953
  - 0.5474024352012878
  - 0.5246342599591357
  - 0.4766372980173916
  - 0.5503871356727025
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.49160315858276227
  - 0.5496748824768318
  - 0.5210637133262448
  - 0.48590069153926974
  - 0.5556348721288877
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4999865034114165
  - 0.5563928304085626
  - 0.5020059680476351
  - 0.47213503822974134
  - 0.5497011703076626
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4853495852495001
  - 0.5542142045147144
  - 0.5240894960994321
  - 0.4797143446762932
  - 0.5553803914403818
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8285283765545313
  - 0.8627659248645294
  - 0.8503860642266966
  - 0.8394488025552539
  - 0.8508347938662865
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8934426229508197
  - -2.769230769230769
  - -2.75
  - -2.864406779661017
  - -2.8017241379310347
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20901639344262293
  - -0.18803418803418803
  - -0.19722222222222222
  - -0.21186440677966104
  - -0.18534482758620693
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20901639344262296
  - -0.18803418803418803
  - -0.19722222222222222
  - -0.211864406779661
  - -0.1853448275862069
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20901639344262296
  - -0.188034188034188
  - -0.19722222222222222
  - -0.211864406779661
  - -0.18534482758620693
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21786217639640978
  - -0.19163696293741136
  - -0.2060267857142857
  - -0.21929892141756546
  - -0.18961598746081504
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2046903460837887
  - -0.1578347578347578
  - -0.1613888888888889
  - -0.18239171374764596
  - -0.1698515325670498
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.790983606557377
  - 0.8119658119658119
  - 0.8027777777777777
  - 0.788135593220339
  - 0.8146551724137931
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7909836065573771
  - 0.811965811965812
  - 0.8027777777777778
  - 0.788135593220339
  - 0.8146551724137931
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7909836065573771
  - 0.811965811965812
  - 0.8027777777777778
  - 0.788135593220339
  - 0.8146551724137931
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7821378236035903
  - 0.8083630370625887
  - 0.7939732142857142
  - 0.7807010785824344
  - 0.8103840125391849
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.790983606557377
  - 0.8119658119658119
  - 0.8027777777777777
  - 0.788135593220339
  - 0.8146551724137931
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7909836065573771
  - 0.811965811965812
  - 0.8027777777777778
  - 0.788135593220339
  - 0.8146551724137931
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7909836065573771
  - 0.811965811965812
  - 0.8027777777777778
  - 0.788135593220339
  - 0.8146551724137931
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7821378236035903
  - 0.8083630370625887
  - 0.7939732142857142
  - 0.7807010785824344
  - 0.8103840125391849
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7978920020634441
  - 0.8629274162508169
  - 0.8623722613441558
  - 0.8335072212115655
  - 0.8773666212366716
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8114423851732475
  - 0.8632801894829475
  - 0.8567648329493087
  - 0.8417008196721312
  - 0.8699866310160429
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7953096539162113
  - 0.8421652421652421
  - 0.8386111111111112
  - 0.817608286252354
  - 0.8301484674329501
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7978384477960615
  - 0.8568117660853881
  - 0.8579399153916921
  - 0.8313944756224168
  - 0.8748364551432427
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9009717775871126
  - 0.9043591825888032
  - 0.9074288032169634
  - 0.9051153185970732
  - 0.9083135640107965
  train_average_precision_macro_oob:
  - 0.7477929023154122
  - 0.7382885580560007
  - 0.7370899066022166
  - 0.7468317771559755
  - 0.7301426398932235
  train_average_precision_micro:
  - 0.7755644776547481
  - 0.7787974273040292
  - 0.7637339141242601
  - 0.7723588115258012
  - 0.7578099142848592
  train_average_precision_micro_oob:
  - 0.6826300790478143
  - 0.6772072476712718
  - 0.6606241701510348
  - 0.6772373295417811
  - 0.658042415749697
  train_average_precision_samples:
  - 0.8691318707242274
  - 0.8716386554621848
  - 0.8604886070002349
  - 0.8686900584795321
  - 0.8568134171907756
  train_average_precision_samples_oob:
  - 0.7881221986317527
  - 0.7812091503267974
  - 0.7798097251585624
  - 0.7885263157894736
  - 0.7791637549499185
  train_average_precision_weighted:
  - 0.8817787312737013
  - 0.8850431738297156
  - 0.8862016043864934
  - 0.8849773333099717
  - 0.8869913457142655
  train_average_precision_weighted_oob:
  - 0.741360461259577
  - 0.7318480039682554
  - 0.7298871691835023
  - 0.7400450869220988
  - 0.7237829433658302
  train_f1_macro:
  - 0.8743807501769286
  - 0.8721988795518207
  - 0.8745595489781536
  - 0.8736842105263157
  - 0.8651292802236199
  train_f1_macro_oob:
  - 0.8096249115357397
  - 0.8056722689075629
  - 0.7945736434108528
  - 0.8098245614035089
  - 0.7941998602375961
  train_f1_micro:
  - 0.8743807501769285
  - 0.8721988795518207
  - 0.8745595489781536
  - 0.8736842105263158
  - 0.8651292802236199
  train_f1_micro_oob:
  - 0.8096249115357396
  - 0.805672268907563
  - 0.7945736434108527
  - 0.8098245614035088
  - 0.794199860237596
  train_f1_samples:
  - 0.8743807501769286
  - 0.8721988795518207
  - 0.8745595489781538
  - 0.873684210526316
  - 0.8651292802236198
  train_f1_samples_oob:
  - 0.8096249115357397
  - 0.805672268907563
  - 0.7945736434108528
  - 0.8098245614035087
  - 0.794199860237596
  train_f1_weighted:
  - 0.8637047994504246
  - 0.862897023216066
  - 0.8626151550228157
  - 0.8637458511142722
  - 0.8531574026857045
  train_f1_weighted_oob:
  - 0.8017387266412463
  - 0.8004130465745619
  - 0.7872896597246802
  - 0.8037837837837838
  - 0.7864137722628288
  train_jaccard_macro:
  - 0.7811785041727671
  - 0.7776365097478938
  - 0.7828472220625712
  - 0.7803753412883646
  - 0.7677162904988122
  train_jaccard_macro_oob:
  - 0.6838280076484864
  - 0.677347878241871
  - 0.6622977626863865
  - 0.6837571645780106
  - 0.662042312232
  train_jaccard_micro:
  - 0.7767997485067589
  - 0.7733623098416641
  - 0.7770820288040076
  - 0.7757009345794392
  - 0.7623152709359606
  train_jaccard_micro_oob:
  - 0.6801426872770512
  - 0.6745822339489885
  - 0.6591639871382636
  - 0.6804245283018868
  - 0.658649666763257
  train_jaccard_samples:
  - 0.8029926195531291
  - 0.7992396958783513
  - 0.8039263062518877
  - 0.8013433583959898
  - 0.7907756813417189
  train_jaccard_samples_oob:
  - 0.7092407238904054
  - 0.7049219687875149
  - 0.6892278264371289
  - 0.7119699248120301
  - 0.6908355795148247
  train_jaccard_weighted:
  - 0.7652315608415696
  - 0.7635668241128033
  - 0.7652069866340542
  - 0.7654850920676574
  - 0.7502063705453622
  train_jaccard_weighted_oob:
  - 0.6726386365086721
  - 0.6698468101410215
  - 0.65236894614893
  - 0.6750945627498467
  - 0.6514112347307427
  train_label_ranking_average_precision_score:
  - 0.8691318707242266
  - 0.871638655462184
  - 0.8604886070002342
  - 0.8686900584795311
  - 0.8568134171907749
  train_label_ranking_average_precision_score_oob:
  - 0.7881221986317516
  - 0.7812091503267964
  - 0.7798097251585616
  - 0.7885263157894724
  - 0.7791637549499173
  train_matthews_corrcoef_macro:
  - 0.723449895517618
  - 0.7116216699979545
  - 0.7246829804126547
  - 0.7183539973496759
  - 0.7021878682658834
  train_matthews_corrcoef_macro_oob:
  - 0.5456841739566033
  - 0.51401738840215
  - 0.49693580074448956
  - 0.5341969282409794
  - 0.49418110226200285
  train_matthews_corrcoef_micro:
  - 0.7035958990675271
  - 0.6945256913463348
  - 0.7021629160045453
  - 0.699261420516493
  - 0.6785304095016834
  train_matthews_corrcoef_micro_oob:
  - 0.5414533605721044
  - 0.5234501723010677
  - 0.4984776207276741
  - 0.5372225803294918
  - 0.4967290920483611
  train_matthews_corrcoef_samples:
  - 0.6923207174206069
  - 0.682950257302773
  - 0.6909909910816544
  - 0.6911752964085315
  - 0.6758980602636667
  train_matthews_corrcoef_samples_oob:
  - 0.5263642452087899
  - 0.5100628087764687
  - 0.49081749537856106
  - 0.5217511965319923
  - 0.4931500059224784
  train_matthews_corrcoef_weighted:
  - 0.7117622787354833
  - 0.7026289660140479
  - 0.7113485410630306
  - 0.7082833630205245
  - 0.6894125735057602
  train_matthews_corrcoef_weighted_oob:
  - 0.544772537981869
  - 0.5198737851995829
  - 0.500444649708601
  - 0.5377058716099431
  - 0.4968025482584675
  train_ndgc:
  - 0.9060771512922366
  - 0.9075279965708195
  - 0.8992472725110302
  - 0.9056411964673712
  - 0.8969451804936417
  train_ndgc_oob:
  - 0.8533977653775265
  - 0.8489269328709503
  - 0.8467054554807537
  - 0.8538042470829871
  - 0.847265522736617
  train_neg_coverage_error:
  - -2.239915074309979
  - -2.203781512605042
  - -2.2431289640591965
  - -2.2294736842105265
  - -2.249475890985325
  train_neg_coverage_error_oob:
  - -2.7558386411889595
  - -2.7857142857142856
  - -2.792811839323467
  - -2.7621052631578946
  - -2.811320754716981
  train_neg_hamming_loss_macro:
  - -0.12561924982307146
  - -0.1278011204481793
  - -0.1254404510218464
  - -0.12631578947368421
  - -0.13487071977638013
  train_neg_hamming_loss_macro_oob:
  - -0.19037508846426043
  - -0.19432773109243698
  - -0.2054263565891473
  - -0.19017543859649125
  - -0.20580013976240388
  train_neg_hamming_loss_micro:
  - -0.1256192498230715
  - -0.12780112044817926
  - -0.12544045102184637
  - -0.12631578947368421
  - -0.13487071977638015
  train_neg_hamming_loss_micro_oob:
  - -0.19037508846426043
  - -0.19432773109243698
  - -0.2054263565891473
  - -0.19017543859649122
  - -0.2058001397624039
  train_neg_hamming_loss_samples:
  - -0.12561924982307146
  - -0.12780112044817926
  - -0.12544045102184637
  - -0.12631578947368421
  - -0.13487071977638015
  train_neg_hamming_loss_samples_oob:
  - -0.19037508846426046
  - -0.19432773109243698
  - -0.20542635658914726
  - -0.19017543859649122
  - -0.2058001397624039
  train_neg_hamming_loss_weighted:
  - -0.13629520054957547
  - -0.1371029767839339
  - -0.13738484497718426
  - -0.13625414888572784
  - -0.14684259731429544
  train_neg_hamming_loss_weighted_oob:
  - -0.1982612733587536
  - -0.19958695342543797
  - -0.2127103402753197
  - -0.19621621621621624
  - -0.21358622773717112
  train_neg_label_ranking_loss:
  - -0.07322481717386176
  - -0.07197128851540616
  - -0.07846488137185811
  - -0.07389473684210525
  - -0.0810214302352667
  train_neg_label_ranking_loss_oob:
  - -0.16091648973814576
  - -0.16676587301587303
  - -0.1716055907916373
  - -0.16241520467836257
  - -0.17146517586769158
  train_precision_macro:
  - 0.8743807501769286
  - 0.8721988795518207
  - 0.8745595489781536
  - 0.8736842105263157
  - 0.8651292802236199
  train_precision_macro_oob:
  - 0.8096249115357397
  - 0.8056722689075629
  - 0.7945736434108528
  - 0.8098245614035089
  - 0.7941998602375961
  train_precision_micro:
  - 0.8743807501769285
  - 0.8721988795518207
  - 0.8745595489781536
  - 0.8736842105263158
  - 0.8651292802236199
  train_precision_micro_oob:
  - 0.8096249115357396
  - 0.805672268907563
  - 0.7945736434108527
  - 0.8098245614035088
  - 0.794199860237596
  train_precision_samples:
  - 0.8743807501769286
  - 0.8721988795518207
  - 0.8745595489781538
  - 0.873684210526316
  - 0.8651292802236198
  train_precision_samples_oob:
  - 0.8096249115357397
  - 0.805672268907563
  - 0.7945736434108528
  - 0.8098245614035087
  - 0.794199860237596
  train_precision_weighted:
  - 0.8637047994504246
  - 0.862897023216066
  - 0.8626151550228157
  - 0.8637458511142722
  - 0.8531574026857045
  train_precision_weighted_oob:
  - 0.8017387266412463
  - 0.8004130465745619
  - 0.7872896597246802
  - 0.8037837837837838
  - 0.7864137722628288
  train_recall_macro:
  - 0.8743807501769286
  - 0.8721988795518207
  - 0.8745595489781536
  - 0.8736842105263157
  - 0.8651292802236199
  train_recall_macro_oob:
  - 0.8096249115357397
  - 0.8056722689075629
  - 0.7945736434108528
  - 0.8098245614035089
  - 0.7941998602375961
  train_recall_micro:
  - 0.8743807501769285
  - 0.8721988795518207
  - 0.8745595489781536
  - 0.8736842105263158
  - 0.8651292802236199
  train_recall_micro_oob:
  - 0.8096249115357396
  - 0.805672268907563
  - 0.7945736434108527
  - 0.8098245614035088
  - 0.794199860237596
  train_recall_samples:
  - 0.8743807501769286
  - 0.8721988795518207
  - 0.8745595489781538
  - 0.873684210526316
  - 0.8651292802236198
  train_recall_samples_oob:
  - 0.8096249115357397
  - 0.805672268907563
  - 0.7945736434108528
  - 0.8098245614035087
  - 0.794199860237596
  train_recall_weighted:
  - 0.8637047994504246
  - 0.862897023216066
  - 0.8626151550228157
  - 0.8637458511142722
  - 0.8531574026857045
  train_recall_weighted_oob:
  - 0.8017387266412463
  - 0.8004130465745619
  - 0.7872896597246802
  - 0.8037837837837838
  - 0.7864137722628288
  train_roc_auc_macro:
  - 0.9592624629244543
  - 0.9602985873121522
  - 0.9599831666144928
  - 0.9592635596953728
  - 0.9584190278840977
  train_roc_auc_macro_oob:
  - 0.867656940552139
  - 0.8585217549931495
  - 0.8619240789142192
  - 0.8633635025738083
  - 0.8554976842534399
  train_roc_auc_micro:
  - 0.9397456702248338
  - 0.9420936918653815
  - 0.9383495741419157
  - 0.9411137054485679
  - 0.9356915806383891
  train_roc_auc_micro_oob:
  - 0.8627373912214307
  - 0.859327480099866
  - 0.8542628648971594
  - 0.8607064633440781
  - 0.8497962247962247
  train_roc_auc_samples:
  - 0.9267751828261382
  - 0.9280287114845939
  - 0.9215351186281419
  - 0.9261052631578947
  - 0.9189785697647334
  train_roc_auc_samples_oob:
  - 0.8390835102618542
  - 0.8332341269841269
  - 0.8283944092083627
  - 0.8375847953216374
  - 0.8285348241323084
  train_roc_auc_weighted:
  - 0.9490523130563261
  - 0.9498247872254281
  - 0.9489996225787632
  - 0.9484748704111328
  - 0.9470131436584598
  train_roc_auc_weighted_oob:
  - 0.8641340647399905
  - 0.8550994729543253
  - 0.8582458757043732
  - 0.8600012118537724
  - 0.851583856026958
start: 2023-12-22 02:11:46.757512
wrapper: null
