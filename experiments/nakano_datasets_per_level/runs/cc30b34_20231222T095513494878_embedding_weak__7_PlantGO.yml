active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T8AmpmZmZn5PwAzMzMzMwPAAGZmZmZm9r8ANDMzMzPjPw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 10:00:03.787315
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__7
  params: {}
hash: cc30b3448982a2ed09fdbf5a304d036aaebfc0140ce439ab20318e7994e62464
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cc30b34_20231222T095513494878_embedding_weak__7_PlantGO.yml
results:
  fit_time:
  - 244.4315369129181
  - 242.01550960540771
  - 235.5275821685791
  - 241.6677691936493
  - 244.01667499542236
  score_time:
  - 8.507973194122314
  - 8.640069723129272
  - 8.09035611152649
  - 9.585331916809082
  - 9.648000955581665
  test_average_precision_macro:
  - 0.7391755472943621
  - 0.7327935888298703
  - 0.7570765999239543
  - 0.6550523985641834
  - 0.6714636219982203
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7001882668076745
  - 0.7245784602854349
  - 0.6739048766102805
  - 0.6702783016787395
  - 0.7337429944832687
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7847058582883326
  - 0.7951012332455631
  - 0.7639269680936348
  - 0.7771374001069433
  - 0.822938542938543
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8176226885069054
  - 0.8092621094024207
  - 0.7954713981606559
  - 0.786964609490733
  - 0.7764454906770811
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9153780068728522
  - 0.9128006872852233
  - 0.9132996632996634
  - 0.9124365482233503
  - 0.9115384615384615
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9153780068728522
  - 0.9128006872852233
  - 0.9132996632996633
  - 0.9124365482233503
  - 0.9115384615384615
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9153780068728521
  - 0.9128006872852235
  - 0.9132996632996632
  - 0.9124365482233503
  - 0.9115384615384615
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8479011493118926
  - 0.8458206282367746
  - 0.8423093494183542
  - 0.8418494397088401
  - 0.8368009768009766
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8518655087191003
  - 0.8476016272163128
  - 0.8491060080140386
  - 0.847672759808039
  - 0.846812783201638
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8439603960396039
  - 0.8395890952192809
  - 0.8404337722695585
  - 0.838973162193699
  - 0.8374558303886925
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8455874022884331
  - 0.8413730599297609
  - 0.8417138417138414
  - 0.8401294137334745
  - 0.8385573400958014
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7432452978471366
  - 0.7409223929186064
  - 0.7367020140220113
  - 0.7359115207553834
  - 0.729318488042335
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7847058582883325
  - 0.7951012332455629
  - 0.7639269680936348
  - 0.777137400106943
  - 0.8229385429385427
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03238605384767775
  - 0.028871401881168882
  - 0.0196140176475892
  - 0.02002872252087749
  - 0.016208054275322896
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.22823509357483115
  - 0.20601731500988857
  - 0.1530721467004021
  - 0.14638138289984312
  - 0.11410677353894223
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.06654170571696345
  - 0.05623242736644799
  - 0.03902662993572085
  - 0.029995385325334564
  - 0.015384615384615385
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.10599072168330902
  - 0.09434035544269269
  - 0.0635828818528484
  - 0.06462097266169907
  - 0.05279194821105172
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.839038997574187
  - 0.8474572002112244
  - 0.8227234849635089
  - 0.8321974292392983
  - 0.8681018153800476
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.9845360824742269
  - -2.0257731958762886
  - -2.101010101010101
  - -2.0964467005076144
  - -1.8615384615384616
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08462199312714776
  - -0.08719931271477664
  - -0.08670033670033671
  - -0.08756345177664976
  - -0.08846153846153848
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08462199312714777
  - -0.08719931271477663
  - -0.0867003367003367
  - -0.08756345177664974
  - -0.08846153846153847
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08462199312714776
  - -0.08719931271477664
  - -0.08670033670033671
  - -0.08756345177664974
  - -0.08846153846153847
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15209885068810733
  - -0.1541793717632254
  - -0.15769065058164589
  - -0.15815056029115984
  - -0.16319902319902324
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07914714151827554
  - -0.0791280502620709
  - -0.09095500459136822
  - -0.09100138440239962
  - -0.06724423724423724
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9153780068728522
  - 0.9128006872852233
  - 0.9132996632996634
  - 0.9124365482233503
  - 0.9115384615384615
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9153780068728522
  - 0.9128006872852233
  - 0.9132996632996633
  - 0.9124365482233503
  - 0.9115384615384615
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9153780068728521
  - 0.9128006872852235
  - 0.9132996632996632
  - 0.9124365482233503
  - 0.9115384615384615
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8479011493118926
  - 0.8458206282367746
  - 0.8423093494183542
  - 0.8418494397088401
  - 0.8368009768009766
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9153780068728522
  - 0.9128006872852233
  - 0.9132996632996634
  - 0.9124365482233503
  - 0.9115384615384615
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9153780068728522
  - 0.9128006872852233
  - 0.9132996632996633
  - 0.9124365482233503
  - 0.9115384615384615
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9153780068728521
  - 0.9128006872852235
  - 0.9132996632996632
  - 0.9124365482233503
  - 0.9115384615384615
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8479011493118926
  - 0.8458206282367746
  - 0.8423093494183542
  - 0.8418494397088401
  - 0.8368009768009766
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9519837235791321
  - 0.9623224039733111
  - 0.9561680845844155
  - 0.9475594683538834
  - 0.9606160102985104
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9387744964109187
  - 0.9397529384343889
  - 0.932729879710605
  - 0.9281230272848426
  - 0.9470422535211267
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9208528584817245
  - 0.9208719497379291
  - 0.9090449954086317
  - 0.9089986155976004
  - 0.9327557627557629
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9583302007554353
  - 0.9696232661201168
  - 0.9562988240499702
  - 0.9545100581962331
  - 0.9665674548207708
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.866545545098111
  - 0.8345290959801371
  - 0.8517775703208667
  - 0.8519868648274533
  - 0.8228369996545123
  train_average_precision_macro_oob:
  - 0.667842609759585
  - 0.5719860434317987
  - 0.6154143591512456
  - 0.5884813089218087
  - 0.5899089313576171
  train_average_precision_micro:
  - 0.8788289965166014
  - 0.8637354438682099
  - 0.8603990211936219
  - 0.8672460169865575
  - 0.874704468910355
  train_average_precision_micro_oob:
  - 0.7347659651297714
  - 0.7143962366056626
  - 0.7011145065888943
  - 0.7180965414690271
  - 0.7391894376646131
  train_average_precision_samples:
  - 0.8971012512147717
  - 0.8875329460788643
  - 0.8837601750101751
  - 0.8878162916895312
  - 0.8965776631485444
  train_average_precision_samples_oob:
  - 0.7942203558912743
  - 0.7858429870866095
  - 0.7696118233618233
  - 0.7826571458133558
  - 0.8078855052992984
  train_average_precision_weighted:
  - 0.9177921198005767
  - 0.8974949280762597
  - 0.9023375123738123
  - 0.9089874867488492
  - 0.8966629846867059
  train_average_precision_weighted_oob:
  - 0.7920152190602797
  - 0.7468253756106906
  - 0.7573319819831011
  - 0.7666128870075531
  - 0.7617342333067018
  train_f1_macro:
  - 0.914965986394558
  - 0.9145408163265305
  - 0.9163461538461538
  - 0.9165599658557403
  - 0.9145381013197107
  train_f1_macro_oob:
  - 0.9142219387755102
  - 0.9141156462585034
  - 0.9162393162393161
  - 0.9153862569355526
  - 0.911558109833972
  train_f1_micro:
  - 0.9149659863945578
  - 0.9145408163265306
  - 0.9163461538461538
  - 0.9165599658557405
  - 0.9145381013197105
  train_f1_micro_oob:
  - 0.9142219387755102
  - 0.9141156462585034
  - 0.9162393162393162
  - 0.9153862569355528
  - 0.9115581098339719
  train_f1_samples:
  - 0.9149659863945577
  - 0.9145408163265305
  - 0.9163461538461538
  - 0.9165599658557404
  - 0.9145381013197105
  train_f1_samples_oob:
  - 0.9142219387755101
  - 0.9141156462585032
  - 0.9162393162393162
  - 0.9153862569355526
  - 0.9115581098339718
  train_f1_weighted:
  - 0.8491988107299658
  - 0.8467266954287653
  - 0.8539023575161018
  - 0.854018101925475
  - 0.8479357954159014
  train_f1_weighted_oob:
  - 0.8472659453852464
  - 0.8453451451839643
  - 0.8535545023696683
  - 0.8501920614596671
  - 0.838244651507251
  train_jaccard_macro:
  - 0.8509863968791009
  - 0.8505959894908505
  - 0.8527933445023715
  - 0.8531524772917655
  - 0.8504080624824506
  train_jaccard_macro_oob:
  - 0.8499540331838124
  - 0.8500472995580511
  - 0.8526488441844707
  - 0.8515808302363856
  - 0.8466335030543161
  train_jaccard_micro:
  - 0.8432601880877743
  - 0.8425381903642774
  - 0.8456078083407276
  - 0.8459720307268072
  - 0.8425335817236984
  train_jaccard_micro_oob:
  - 0.8419970631424376
  - 0.8418167580266249
  - 0.8454258675078864
  - 0.8439744220363994
  - 0.8374889997066588
  train_jaccard_samples:
  - 0.8448194662480377
  - 0.8439280107647454
  - 0.8474612566920259
  - 0.8477972731493857
  - 0.844014988842575
  train_jaccard_samples_oob:
  - 0.8434458398744112
  - 0.8431430814083877
  - 0.8472640180332487
  - 0.8456585667853272
  - 0.8385134660996729
  train_jaccard_weighted:
  - 0.7454356487441065
  - 0.7420041197835604
  - 0.7514621354185383
  - 0.7516696462626866
  - 0.7436355390318389
  train_jaccard_weighted_oob:
  - 0.74280951543405
  - 0.740221203327338
  - 0.750991653340824
  - 0.7465464124451492
  - 0.7313604037554909
  train_label_ranking_average_precision_score:
  - 0.8971012512147717
  - 0.8875329460788643
  - 0.8837601750101752
  - 0.8878162916895311
  - 0.8965776631485444
  train_label_ranking_average_precision_score_oob:
  - 0.7942203558912746
  - 0.7858429870866095
  - 0.7696118233618237
  - 0.7826571458133554
  - 0.8078855052992987
  train_matthews_corrcoef_macro:
  - 0.04328266042098764
  - 0.02911026987662715
  - 0.037276874022830093
  - 0.03746398945905215
  - 0.03061122719479005
  train_matthews_corrcoef_macro_oob:
  - 0.02968258167470102
  - 0.02743066495958477
  - 0.03693687598953382
  - 0.03341368263610352
  - 0.017066857560038482
  train_matthews_corrcoef_micro:
  - 0.22299597675634691
  - 0.20269740194961852
  - 0.25664760426403405
  - 0.2571060361565259
  - 0.21275058390269483
  train_matthews_corrcoef_micro_oob:
  - 0.2052523386909692
  - 0.1916515054432813
  - 0.2545127693493979
  - 0.23228772456814908
  - 0.1223599758330854
  train_matthews_corrcoef_samples:
  - 0.058673469387755105
  - 0.04962894248608534
  - 0.08011843805210905
  - 0.07926900244441858
  - 0.05480088238708928
  train_matthews_corrcoef_samples_oob:
  - 0.04974489795918367
  - 0.04452690166975881
  - 0.07883638677005778
  - 0.0663485042486323
  - 0.019040984558225938
  train_matthews_corrcoef_weighted:
  - 0.12233203729268667
  - 0.09459109071550105
  - 0.12137067513594442
  - 0.12212460620815575
  - 0.0995498844157196
  train_matthews_corrcoef_weighted_oob:
  - 0.09641576175186573
  - 0.08913337212520657
  - 0.12026366732137313
  - 0.10892147079954029
  - 0.055502632633119234
  train_ndgc:
  - 0.9234242632157076
  - 0.9160730501640922
  - 0.9131985616926438
  - 0.9159474616633594
  - 0.9230771340728978
  train_ndgc_oob:
  - 0.8451917175633734
  - 0.839300762176622
  - 0.8267239595901116
  - 0.8365305664147586
  - 0.8564266871086234
  train_neg_coverage_error:
  - -1.5612244897959184
  - -1.6058673469387754
  - -1.6525641025641025
  - -1.6209987195902689
  - -1.5402298850574712
  train_neg_coverage_error_oob:
  - -2.108418367346939
  - -2.1556122448979593
  - -2.2512820512820513
  - -2.2215108834827144
  - -2.0140485312899106
  train_neg_hamming_loss_macro:
  - -0.08503401360544217
  - -0.0854591836734694
  - -0.08365384615384615
  - -0.08344003414425949
  - -0.08546189868028949
  train_neg_hamming_loss_macro_oob:
  - -0.08577806122448979
  - -0.08588435374149661
  - -0.08376068376068375
  - -0.0846137430644473
  - -0.0884418901660281
  train_neg_hamming_loss_micro:
  - -0.08503401360544217
  - -0.08545918367346939
  - -0.08365384615384615
  - -0.08344003414425949
  - -0.08546189868028949
  train_neg_hamming_loss_micro_oob:
  - -0.08577806122448979
  - -0.0858843537414966
  - -0.08376068376068375
  - -0.08461374306444729
  - -0.0884418901660281
  train_neg_hamming_loss_samples:
  - -0.08503401360544219
  - -0.08545918367346939
  - -0.08365384615384615
  - -0.0834400341442595
  - -0.08546189868028949
  train_neg_hamming_loss_samples_oob:
  - -0.08577806122448979
  - -0.0858843537414966
  - -0.08376068376068375
  - -0.08461374306444729
  - -0.0884418901660281
  train_neg_hamming_loss_weighted:
  - -0.15080118927003427
  - -0.15327330457123464
  - -0.14609764248389842
  - -0.14598189807452502
  - -0.1520642045840985
  train_neg_hamming_loss_weighted_oob:
  - -0.1527340546147537
  - -0.1546548548160357
  - -0.14644549763033177
  - -0.14980793854033292
  - -0.161755348492749
  train_neg_label_ranking_loss:
  - -0.04108603037174466
  - -0.04582431457431457
  - -0.048853923853923856
  - -0.046926369973745136
  - -0.03978869151282945
  train_neg_label_ranking_loss_oob:
  - -0.09064797636226207
  - -0.09460442005084863
  - -0.10222502805836138
  - -0.09947016041766361
  - -0.08047331553078681
  train_precision_macro:
  - 0.914965986394558
  - 0.9145408163265305
  - 0.9163461538461538
  - 0.9165599658557403
  - 0.9145381013197107
  train_precision_macro_oob:
  - 0.9142219387755102
  - 0.9141156462585034
  - 0.9162393162393161
  - 0.9153862569355526
  - 0.911558109833972
  train_precision_micro:
  - 0.9149659863945578
  - 0.9145408163265306
  - 0.9163461538461538
  - 0.9165599658557405
  - 0.9145381013197105
  train_precision_micro_oob:
  - 0.9142219387755102
  - 0.9141156462585034
  - 0.9162393162393162
  - 0.9153862569355528
  - 0.9115581098339719
  train_precision_samples:
  - 0.9149659863945577
  - 0.9145408163265305
  - 0.9163461538461538
  - 0.9165599658557404
  - 0.9145381013197105
  train_precision_samples_oob:
  - 0.9142219387755101
  - 0.9141156462585032
  - 0.9162393162393162
  - 0.9153862569355526
  - 0.9115581098339718
  train_precision_weighted:
  - 0.8491988107299658
  - 0.8467266954287653
  - 0.8539023575161018
  - 0.854018101925475
  - 0.8479357954159014
  train_precision_weighted_oob:
  - 0.8472659453852464
  - 0.8453451451839643
  - 0.8535545023696683
  - 0.8501920614596671
  - 0.838244651507251
  train_recall_macro:
  - 0.914965986394558
  - 0.9145408163265305
  - 0.9163461538461538
  - 0.9165599658557403
  - 0.9145381013197107
  train_recall_macro_oob:
  - 0.9142219387755102
  - 0.9141156462585034
  - 0.9162393162393161
  - 0.9153862569355526
  - 0.911558109833972
  train_recall_micro:
  - 0.9149659863945578
  - 0.9145408163265306
  - 0.9163461538461538
  - 0.9165599658557405
  - 0.9145381013197105
  train_recall_micro_oob:
  - 0.9142219387755102
  - 0.9141156462585034
  - 0.9162393162393162
  - 0.9153862569355528
  - 0.9115581098339719
  train_recall_samples:
  - 0.9149659863945577
  - 0.9145408163265305
  - 0.9163461538461538
  - 0.9165599658557404
  - 0.9145381013197105
  train_recall_samples_oob:
  - 0.9142219387755101
  - 0.9141156462585032
  - 0.9162393162393162
  - 0.9153862569355526
  - 0.9115581098339718
  train_recall_weighted:
  - 0.8491988107299658
  - 0.8467266954287653
  - 0.8539023575161018
  - 0.854018101925475
  - 0.8479357954159014
  train_recall_weighted_oob:
  - 0.8472659453852464
  - 0.8453451451839643
  - 0.8535545023696683
  - 0.8501920614596671
  - 0.838244651507251
  train_roc_auc_macro:
  - 0.9768957851605632
  - 0.9730085413223922
  - 0.9733904693351421
  - 0.9799172356174916
  - 0.9760675985274053
  train_roc_auc_macro_oob:
  - 0.9488386567635726
  - 0.9300422731428913
  - 0.9299825732169286
  - 0.9307633612971437
  - 0.9439770527228619
  train_roc_auc_micro:
  - 0.9682640265994722
  - 0.9658547602713705
  - 0.9642407851181718
  - 0.9678628368192422
  - 0.9718135323111798
  train_roc_auc_micro_oob:
  - 0.9318128980491621
  - 0.9253273312210957
  - 0.9198645315536522
  - 0.9254413141014809
  - 0.9391903365743584
  train_roc_auc_samples:
  - 0.9589139696282553
  - 0.9541756854256854
  - 0.9511460761460762
  - 0.9530736300262549
  - 0.9602113084871704
  train_roc_auc_samples_oob:
  - 0.909352023637738
  - 0.9053955799491514
  - 0.8977749719416387
  - 0.9005298395823365
  - 0.9195266844692133
  train_roc_auc_weighted:
  - 0.9811289960333286
  - 0.9764314343519874
  - 0.9777568561291875
  - 0.9811812918964531
  - 0.9797788398307016
  train_roc_auc_weighted_oob:
  - 0.9586014718992145
  - 0.9504045860363709
  - 0.9489757465616732
  - 0.9556180052491311
  - 0.9578253770834817
start: 2023-12-22 09:55:13.494878
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
