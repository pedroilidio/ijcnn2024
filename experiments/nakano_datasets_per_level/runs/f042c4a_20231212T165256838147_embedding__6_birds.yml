active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+QmZmZmZnJvzIzMzMzM/O/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMDMBoZmZmZmb2P6CZmZmZmdk/aGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:53:30.420644
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f042c4aa12286cd79c42ca3b728bf56852793e9825b6ed2e86044ae9db0358bb
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f042c4a_20231212T165256838147_embedding__6_birds.yml
results:
  fit_time:
  - 14.641069173812866
  - 14.89892315864563
  - 16.132060527801514
  - 14.620085716247559
  - 16.72217845916748
  score_time:
  - 5.382145404815674
  - 5.048149824142456
  - 4.753862142562866
  - 5.194306135177612
  - 5.270509481430054
  test_average_precision_macro:
  - 0.5147618243777405
  - 0.4541492155547039
  - 0.4789215446634351
  - 0.5462694501553238
  - 0.48495916627405317
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5182011830598723
  - 0.4450541621017296
  - 0.5075422887541009
  - 0.541973658568175
  - 0.4741977610953771
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.31970701025933584
  - 0.3245438056142571
  - 0.3376198364955205
  - 0.3114027107141562
  - 0.35672458463156137
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5883086808399333
  - 0.5222493694188644
  - 0.5864416295385528
  - 0.6198366965405289
  - 0.5645141334881837
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9465524275805793
  - 0.9506323949408405
  - 0.94859241126071
  - 0.9518563851489187
  - 0.9510403916768667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9465524275805793
  - 0.9506323949408405
  - 0.9485924112607099
  - 0.9518563851489188
  - 0.9510403916768666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9465524275805793
  - 0.9506323949408404
  - 0.9485924112607099
  - 0.9518563851489188
  - 0.9510403916768665
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9170426935091983
  - 0.9260260801634517
  - 0.9245206038351694
  - 0.9288396317829458
  - 0.927072152653548
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9011038127890615
  - 0.907810600977424
  - 0.9040919326108894
  - 0.9099949560097255
  - 0.9085091660214019
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8985282726568552
  - 0.9059097978227061
  - 0.9022118742724098
  - 0.9081354612689763
  - 0.9066511085180864
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9057906086723074
  - 0.9108226567276112
  - 0.9079014907124109
  - 0.9144184149745322
  - 0.911320922645493
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8495914856668806
  - 0.8641230432684729
  - 0.86177797558311
  - 0.8694883685382441
  - 0.8661253594287076
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8390868552205764
  - 0.7353965187925516
  - 0.7872322395962958
  - 0.8075267417219082
  - 0.7598253598253599
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02761537782578949
  - 0.04751951090358451
  - 0.05488942187162558
  - 0.04785682624184458
  - 0.051863530983771285
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.14822872147270866
  - 0.24883219832408618
  - 0.22641703095015825
  - 0.2726689780100206
  - 0.2702993771330617
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.01491768945383141
  - 0.062248698968445926
  - 0.03826860419340647
  - 0.06249859946781617
  - 0.052979265708900776
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06692687959423083
  - 0.1234603319747376
  - 0.13266113908075602
  - 0.1255999132955978
  - 0.1347396073048145
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3755217350402379
  - 0.4005323675064987
  - 0.40207967270577777
  - 0.3676635035365265
  - 0.42571570235790074
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.89922480620155
  - -3.255813953488372
  - -3.0
  - -2.86046511627907
  - -3.2635658914728682
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05344757241942064
  - -0.049367605059159526
  - -0.05140758873929008
  - -0.04814361485108119
  - -0.04895960832313342
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05344757241942064
  - -0.049367605059159526
  - -0.051407588739290085
  - -0.04814361485108119
  - -0.04895960832313342
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05344757241942064
  - -0.049367605059159526
  - -0.051407588739290085
  - -0.04814361485108119
  - -0.04895960832313342
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08295730649080181
  - -0.07397391983654829
  - -0.07547939616483068
  - -0.07116036821705427
  - -0.07292784734645201
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07008585286629063
  - -0.0975008866595734
  - -0.08448155748087348
  - -0.08093600489291324
  - -0.09801641586867306
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9465524275805793
  - 0.9506323949408405
  - 0.94859241126071
  - 0.9518563851489187
  - 0.9510403916768667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9465524275805793
  - 0.9506323949408405
  - 0.9485924112607099
  - 0.9518563851489188
  - 0.9510403916768666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9465524275805793
  - 0.9506323949408404
  - 0.9485924112607099
  - 0.9518563851489188
  - 0.9510403916768665
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9170426935091983
  - 0.9260260801634517
  - 0.9245206038351694
  - 0.9288396317829458
  - 0.927072152653548
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9465524275805793
  - 0.9506323949408405
  - 0.94859241126071
  - 0.9518563851489187
  - 0.9510403916768667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9465524275805793
  - 0.9506323949408405
  - 0.9485924112607099
  - 0.9518563851489188
  - 0.9510403916768666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9465524275805793
  - 0.9506323949408404
  - 0.9485924112607099
  - 0.9518563851489188
  - 0.9510403916768665
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9170426935091983
  - 0.9260260801634517
  - 0.9245206038351694
  - 0.9288396317829458
  - 0.927072152653548
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8872801192049298
  - 0.8790677599555651
  - 0.8741502036391106
  - 0.9207836102619918
  - 0.877714456153434
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9174514780435329
  - 0.8888221193972049
  - 0.9027746242223332
  - 0.9151084266035299
  - 0.8945646770291321
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9055889170457135
  - 0.8690073794221844
  - 0.8969751083646657
  - 0.9117591502797032
  - 0.8764457264759945
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.964882941575358
  - 0.9626580920931286
  - 0.9714994127833173
  - 0.9585196362177231
  - 0.9595344865298453
  train_average_precision_macro_oob:
  - 0.4392857908008054
  - 0.481756287942032
  - 0.4579749794367604
  - 0.46212670912366877
  - 0.4684051813698472
  train_average_precision_micro:
  - 0.9128701254319239
  - 0.9148940144931845
  - 0.9066849331043731
  - 0.9052023941677814
  - 0.909040741415521
  train_average_precision_micro_oob:
  - 0.5420371491424739
  - 0.5503289330017442
  - 0.5210569071473745
  - 0.51723847419044
  - 0.5481668809469953
  train_average_precision_samples:
  - 0.5323564199581642
  - 0.5058324104835732
  - 0.5107559677617817
  - 0.5229352774701611
  - 0.4999211732496617
  train_average_precision_samples_oob:
  - 0.34303792526203253
  - 0.33365011670982225
  - 0.3282196662007124
  - 0.34102568418921514
  - 0.33540747504522794
  train_average_precision_weighted:
  - 0.9609146924631953
  - 0.9579605232515606
  - 0.9664197042463746
  - 0.959885678376353
  - 0.9586353382762874
  train_average_precision_weighted_oob:
  - 0.5701758349516252
  - 0.5804853447293193
  - 0.5619153477242051
  - 0.5616066382839991
  - 0.5810330007548087
  train_f1_macro:
  - 0.9571603427172581
  - 0.9580783353733168
  - 0.9570583435332518
  - 0.9553243574051407
  - 0.9572623419012646
  train_f1_macro_oob:
  - 0.9521623827009382
  - 0.9523663810689512
  - 0.9516523867809057
  - 0.950530395756834
  - 0.9508363933088533
  train_f1_micro:
  - 0.9571603427172583
  - 0.958078335373317
  - 0.9570583435332517
  - 0.9553243574051408
  - 0.9572623419012648
  train_f1_micro_oob:
  - 0.9521623827009384
  - 0.9523663810689514
  - 0.9516523867809058
  - 0.950530395756834
  - 0.9508363933088535
  train_f1_samples:
  - 0.9571603427172583
  - 0.9580783353733171
  - 0.9570583435332518
  - 0.9553243574051408
  - 0.9572623419012649
  train_f1_samples_oob:
  - 0.9521623827009384
  - 0.9523663810689514
  - 0.9516523867809058
  - 0.9505303957568341
  - 0.9508363933088536
  train_f1_weighted:
  - 0.9417486583184259
  - 0.9444259874492432
  - 0.9413880581469743
  - 0.9392924514398563
  - 0.9430328717675602
  train_f1_weighted_oob:
  - 0.9309965712581992
  - 0.9320671834625323
  - 0.928848814890863
  - 0.9269903027087573
  - 0.9282390969879873
  train_jaccard_macro:
  - 0.9188091256221628
  - 0.9204114367007117
  - 0.9187001201808532
  - 0.9155649000527928
  - 0.9189897823487205
  train_jaccard_macro_oob:
  - 0.9102030547973362
  - 0.9104706661527703
  - 0.9094728654087917
  - 0.9075421475400404
  - 0.9079845830701776
  train_jaccard_micro:
  - 0.9178403755868545
  - 0.9195301027900147
  - 0.9176528117359413
  - 0.9144698301113063
  - 0.9180279761322508
  train_jaccard_micro_oob:
  - 0.908692689574613
  - 0.909064355953656
  - 0.9077641564506713
  - 0.905724560209933
  - 0.906280381100525
  train_jaccard_samples:
  - 0.922302871266471
  - 0.9242181857576196
  - 0.9222671245168717
  - 0.9192769307986699
  - 0.9226979640402291
  train_jaccard_samples_oob:
  - 0.9136633378418011
  - 0.9144117215780513
  - 0.9131203009438602
  - 0.9111227324523584
  - 0.9119351101656462
  train_jaccard_weighted:
  - 0.8906568600921649
  - 0.8953115160020892
  - 0.8900638569878909
  - 0.8863364204511893
  - 0.8928790849943751
  train_jaccard_weighted_oob:
  - 0.8723823557455789
  - 0.8740288505839539
  - 0.8689575222650399
  - 0.8659005326372552
  - 0.8678252203952174
  train_label_ranking_average_precision_score:
  - 0.9722789005783192
  - 0.9728866740494645
  - 0.9681203088470529
  - 0.9686717115786881
  - 0.9689134213116769
  train_label_ranking_average_precision_score_oob:
  - 0.7829604058821873
  - 0.8007043802757129
  - 0.7855840072859832
  - 0.7867621182977418
  - 0.8043997231072437
  train_matthews_corrcoef_macro:
  - 0.16188577884971975
  - 0.16797165692243576
  - 0.14428932077821235
  - 0.11483074989184482
  - 0.16555674872452983
  train_matthews_corrcoef_macro_oob:
  - 0.07210059841152673
  - 0.07906518377795936
  - 0.07099158706314672
  - 0.06504491120664058
  - 0.06224351118017429
  train_matthews_corrcoef_micro:
  - 0.4289340272952286
  - 0.45583639076069127
  - 0.42849910548562503
  - 0.39950965497833274
  - 0.4376956351693521
  train_matthews_corrcoef_micro_oob:
  - 0.30518380851736576
  - 0.32394223516568543
  - 0.29259565579374563
  - 0.27183032909434346
  - 0.2760838633302563
  train_matthews_corrcoef_samples:
  - 0.11252695637227889
  - 0.1212677938303871
  - 0.10713848376309688
  - 0.10513971181077732
  - 0.1173063709465313
  train_matthews_corrcoef_samples_oob:
  - 0.062930616622998
  - 0.06773999646983046
  - 0.05734843648414781
  - 0.05108281819868982
  - 0.05762224015936841
  train_matthews_corrcoef_weighted:
  - 0.30984577420350595
  - 0.3233216305414862
  - 0.287671091861286
  - 0.25572392232804964
  - 0.30602177807338565
  train_matthews_corrcoef_weighted_oob:
  - 0.17680831762118437
  - 0.1909711071181731
  - 0.16825065802208802
  - 0.15366901443644618
  - 0.15365672107443662
  train_ndgc:
  - 0.5420818662240692
  - 0.5158414183072082
  - 0.5219635852009873
  - 0.5347041087598867
  - 0.5115643380788979
  train_ndgc_oob:
  - 0.4067527663373414
  - 0.39470811587799637
  - 0.3931332075924825
  - 0.40632172299332475
  - 0.39512184413850826
  train_neg_coverage_error:
  - -1.1337209302325582
  - -1.1666666666666667
  - -1.1589147286821706
  - -1.186046511627907
  - -1.191860465116279
  train_neg_coverage_error_oob:
  - -3.1569767441860463
  - -3.054263565891473
  - -3.143410852713178
  - -3.122093023255814
  - -2.998062015503876
  train_neg_hamming_loss_macro:
  - -0.042839657282741736
  - -0.04192166462668299
  - -0.04294165646674827
  - -0.04467564259485925
  - -0.04273765809873521
  train_neg_hamming_loss_macro_oob:
  - -0.04783761729906161
  - -0.04763361893104855
  - -0.048347613219094254
  - -0.04946960424316606
  - -0.04916360669114647
  train_neg_hamming_loss_micro:
  - -0.042839657282741736
  - -0.04192166462668299
  - -0.04294165646674827
  - -0.04467564259485924
  - -0.04273765809873521
  train_neg_hamming_loss_micro_oob:
  - -0.04783761729906161
  - -0.04763361893104855
  - -0.04834761321909425
  - -0.04946960424316606
  - -0.04916360669114647
  train_neg_hamming_loss_samples:
  - -0.042839657282741736
  - -0.04192166462668298
  - -0.04294165646674827
  - -0.04467564259485925
  - -0.042737658098735205
  train_neg_hamming_loss_samples_oob:
  - -0.0478376172990616
  - -0.047633618931048546
  - -0.04834761321909425
  - -0.04946960424316606
  - -0.049163606691146465
  train_neg_hamming_loss_weighted:
  - -0.05825134168157424
  - -0.05557401255075674
  - -0.058611941853025644
  - -0.06070754856014384
  - -0.056967128232439795
  train_neg_hamming_loss_weighted_oob:
  - -0.06900342874180085
  - -0.0679328165374677
  - -0.07115118510913718
  - -0.07300969729124294
  - -0.07176090301201256
  train_neg_label_ranking_loss:
  - -0.004710627791168147
  - -0.005191527515398924
  - -0.005618014945990322
  - -0.005975177290156771
  - -0.006058677446331345
  train_neg_label_ranking_loss_oob:
  - -0.09271871539313399
  - -0.08310117850559028
  - -0.08835203356834684
  - -0.08707044684301866
  - -0.08149214888698472
  train_precision_macro:
  - 0.9571603427172581
  - 0.9580783353733168
  - 0.9570583435332518
  - 0.9553243574051407
  - 0.9572623419012646
  train_precision_macro_oob:
  - 0.9521623827009382
  - 0.9523663810689512
  - 0.9516523867809057
  - 0.950530395756834
  - 0.9508363933088533
  train_precision_micro:
  - 0.9571603427172583
  - 0.958078335373317
  - 0.9570583435332517
  - 0.9553243574051408
  - 0.9572623419012648
  train_precision_micro_oob:
  - 0.9521623827009384
  - 0.9523663810689514
  - 0.9516523867809058
  - 0.950530395756834
  - 0.9508363933088535
  train_precision_samples:
  - 0.9571603427172583
  - 0.9580783353733171
  - 0.9570583435332518
  - 0.9553243574051408
  - 0.9572623419012649
  train_precision_samples_oob:
  - 0.9521623827009384
  - 0.9523663810689514
  - 0.9516523867809058
  - 0.9505303957568341
  - 0.9508363933088536
  train_precision_weighted:
  - 0.9417486583184259
  - 0.9444259874492432
  - 0.9413880581469743
  - 0.9392924514398563
  - 0.9430328717675602
  train_precision_weighted_oob:
  - 0.9309965712581992
  - 0.9320671834625323
  - 0.928848814890863
  - 0.9269903027087573
  - 0.9282390969879873
  train_recall_macro:
  - 0.9571603427172581
  - 0.9580783353733168
  - 0.9570583435332518
  - 0.9553243574051407
  - 0.9572623419012646
  train_recall_macro_oob:
  - 0.9521623827009382
  - 0.9523663810689512
  - 0.9516523867809057
  - 0.950530395756834
  - 0.9508363933088533
  train_recall_micro:
  - 0.9571603427172583
  - 0.958078335373317
  - 0.9570583435332517
  - 0.9553243574051408
  - 0.9572623419012648
  train_recall_micro_oob:
  - 0.9521623827009384
  - 0.9523663810689514
  - 0.9516523867809058
  - 0.950530395756834
  - 0.9508363933088535
  train_recall_samples:
  - 0.9571603427172583
  - 0.9580783353733171
  - 0.9570583435332518
  - 0.9553243574051408
  - 0.9572623419012649
  train_recall_samples_oob:
  - 0.9521623827009384
  - 0.9523663810689514
  - 0.9516523867809058
  - 0.9505303957568341
  - 0.9508363933088536
  train_recall_weighted:
  - 0.9417486583184259
  - 0.9444259874492432
  - 0.9413880581469743
  - 0.9392924514398563
  - 0.9430328717675602
  train_recall_weighted_oob:
  - 0.9309965712581992
  - 0.9320671834625323
  - 0.928848814890863
  - 0.9269903027087573
  - 0.9282390969879873
  train_roc_auc_macro:
  - 0.9979292590733052
  - 0.9979113379460437
  - 0.9981157865188308
  - 0.9976930938144947
  - 0.9978364726677973
  train_roc_auc_macro_oob:
  - 0.8874617701504877
  - 0.8901773669606419
  - 0.8964754902094841
  - 0.8800471887684257
  - 0.9033771270731992
  train_roc_auc_micro:
  - 0.9949688048917907
  - 0.994777967658666
  - 0.9941789864989621
  - 0.9938031583770267
  - 0.9942733696367466
  train_roc_auc_micro_oob:
  - 0.9044727488151658
  - 0.91313041737872
  - 0.9100686186108261
  - 0.9077952915314612
  - 0.9150080613319295
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9970071349644124
  - 0.9970576352521244
  - 0.9970390875678709
  - 0.996902275729379
  - 0.996777646921624
  train_roc_auc_weighted_oob:
  - 0.8988138115982948
  - 0.9058740979744072
  - 0.9016227038610316
  - 0.8951282609801975
  - 0.9102139837982894
start: 2023-12-12 16:52:56.838147
wrapper: null
