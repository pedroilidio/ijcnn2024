active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0AAmpmZmZnZPwAzMzMzM+O/ADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:38:31.414140
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__6
  params: {}
hash: eafefcb990cd0acbab3081f5843019ce153bd1680408d0e29350e2e5d079a6e3
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/eafefcb_20231221T123635638282_embedding_proba_weak__6_VirusPseAAC.yml
results:
  fit_time:
  - 101.40708780288696
  - 100.04291296005249
  - 103.87358808517456
  - 103.73934125900269
  - 103.04402351379395
  score_time:
  - 4.029742956161499
  - 4.174883842468262
  - 4.243544816970825
  - 4.271254539489746
  - 4.310057640075684
  test_average_precision_macro:
  - 0.42251307175430286
  - 0.34198004213412975
  - 0.4561213668610127
  - 0.40441174762769233
  - 0.41476504455131225
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4364274908307303
  - 0.3896749830516912
  - 0.47500621742864185
  - 0.42704502475538764
  - 0.41162369336512467
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6457264957264958
  - 0.6207317073170733
  - 0.6863095238095239
  - 0.6918650793650795
  - 0.6540051679586564
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.46491163553164444
  - 0.39607578295911394
  - 0.4781352039761261
  - 0.44143026704418814
  - 0.44587434793675285
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7905982905982906
  - 0.7886178861788617
  - 0.7976190476190476
  - 0.7936507936507936
  - 0.8062015503875969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7905982905982906
  - 0.7886178861788617
  - 0.7976190476190477
  - 0.7936507936507936
  - 0.8062015503875969
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7905982905982905
  - 0.7886178861788619
  - 0.7976190476190478
  - 0.7936507936507937
  - 0.8062015503875972
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6718995290423863
  - 0.6663414634146342
  - 0.6904761904761905
  - 0.6804029304029304
  - 0.6827906976744186
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.680766351949365
  - 0.679293842773912
  - 0.6871680272564576
  - 0.6832132249965706
  - 0.7020652270589985
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6537102473498233
  - 0.6510067114093959
  - 0.6633663366336634
  - 0.6578947368421053
  - 0.6753246753246753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6654456654456656
  - 0.6567944250871081
  - 0.6683673469387756
  - 0.663265306122449
  - 0.6805094130675527
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5245035437520116
  - 0.5222810732133688
  - 0.5457579829680919
  - 0.5351974480935424
  - 0.5373434283755675
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6457264957264957
  - 0.620731707317073
  - 0.6863095238095236
  - 0.6918650793650793
  - 0.6540051679586562
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.010279899245732686
  - -0.044357553951864755
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.09418702645237981
  - -0.045727457118891424
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.041025641025641026
  - -0.00975609756097561
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.020140210767149752
  - -0.0904894100618041
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.736038464835128
  - 0.7205706378659706
  - 0.7673222358019393
  - 0.771279565849302
  - 0.7431364880060707
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.282051282051282
  - -2.6341463414634148
  - -2.3333333333333335
  - -2.3095238095238093
  - -2.186046511627907
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2094017094017094
  - -0.21138211382113822
  - -0.2023809523809524
  - -0.20634920634920637
  - -0.1937984496124031
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2094017094017094
  - -0.21138211382113822
  - -0.20238095238095238
  - -0.20634920634920634
  - -0.1937984496124031
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20940170940170938
  - -0.2113821138211382
  - -0.20238095238095233
  - -0.20634920634920634
  - -0.19379844961240308
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3281004709576138
  - -0.3336585365853659
  - -0.30952380952380953
  - -0.31959706959706957
  - -0.31720930232558137
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21282051282051279
  - -0.2695121951219512
  - -0.22023809523809523
  - -0.2172619047619047
  - -0.20691214470284233
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7905982905982906
  - 0.7886178861788617
  - 0.7976190476190476
  - 0.7936507936507936
  - 0.8062015503875969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7905982905982906
  - 0.7886178861788617
  - 0.7976190476190477
  - 0.7936507936507936
  - 0.8062015503875969
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7905982905982905
  - 0.7886178861788619
  - 0.7976190476190478
  - 0.7936507936507937
  - 0.8062015503875972
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6718995290423863
  - 0.6663414634146342
  - 0.6904761904761905
  - 0.6804029304029304
  - 0.6827906976744186
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7905982905982906
  - 0.7886178861788617
  - 0.7976190476190476
  - 0.7936507936507936
  - 0.8062015503875969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7905982905982906
  - 0.7886178861788617
  - 0.7976190476190477
  - 0.7936507936507936
  - 0.8062015503875969
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7905982905982905
  - 0.7886178861788619
  - 0.7976190476190478
  - 0.7936507936507937
  - 0.8062015503875972
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6718995290423863
  - 0.6663414634146342
  - 0.6904761904761905
  - 0.6804029304029304
  - 0.6827906976744186
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6927292546933481
  - 0.5023198052609817
  - 0.6185505781259873
  - 0.6606471009456414
  - 0.6980586598233657
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8050744622173194
  - 0.7381632653061224
  - 0.7698761096478393
  - 0.7898076923076923
  - 0.7947115384615384
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7871794871794873
  - 0.7304878048780487
  - 0.7797619047619048
  - 0.7827380952380952
  - 0.7930878552971574
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6139579533855207
  - 0.5276879516879517
  - 0.5732566710894884
  - 0.617685078079815
  - 0.5969500049500048
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7236408032659254
  - 0.7351212416808943
  - 0.720121198855835
  - 0.6990093492729055
  - 0.7110948268140745
  train_average_precision_macro_oob:
  - 0.6291584844535886
  - 0.587877033594362
  - 0.5435285260745474
  - 0.5616233477856561
  - 0.5803096893010785
  train_average_precision_micro:
  - 0.7736035731260128
  - 0.7789210768224468
  - 0.7586728627137387
  - 0.7397016461906343
  - 0.7521501690510802
  train_average_precision_micro_oob:
  - 0.7035673640118036
  - 0.7305191071816225
  - 0.6852191375574266
  - 0.6817290237615525
  - 0.696525105541284
  train_average_precision_samples:
  - 0.8198412698412698
  - 0.8318273092369477
  - 0.8284343434343434
  - 0.8151515151515152
  - 0.8100609756097561
  train_average_precision_samples_oob:
  - 0.7575727513227513
  - 0.7953647925033468
  - 0.7557912457912458
  - 0.7592760942760943
  - 0.776219512195122
  train_average_precision_weighted:
  - 0.744526712018196
  - 0.7752846385866827
  - 0.7427144194272145
  - 0.7254381669824721
  - 0.7355895868762962
  train_average_precision_weighted_oob:
  - 0.7157224149187119
  - 0.7216056719412866
  - 0.6813710701638067
  - 0.6824031446949662
  - 0.6826388482826946
  train_f1_macro:
  - 0.8621031746031748
  - 0.8634538152610441
  - 0.8585858585858587
  - 0.8595959595959597
  - 0.8628048780487805
  train_f1_macro_oob:
  - 0.8412698412698414
  - 0.8534136546184738
  - 0.8212121212121213
  - 0.8424242424242424
  - 0.8333333333333331
  train_f1_micro:
  - 0.8621031746031746
  - 0.8634538152610441
  - 0.8585858585858586
  - 0.8595959595959596
  - 0.8628048780487805
  train_f1_micro_oob:
  - 0.8412698412698413
  - 0.8534136546184738
  - 0.8212121212121212
  - 0.8424242424242424
  - 0.8333333333333334
  train_f1_samples:
  - 0.8621031746031745
  - 0.863453815261044
  - 0.8585858585858586
  - 0.8595959595959595
  - 0.8628048780487804
  train_f1_samples_oob:
  - 0.8412698412698413
  - 0.8534136546184736
  - 0.8212121212121212
  - 0.8424242424242424
  - 0.8333333333333331
  train_f1_weighted:
  - 0.8140687309406521
  - 0.8145353691995706
  - 0.805939996984773
  - 0.8083939393939393
  - 0.8157148031876359
  train_f1_weighted_oob:
  - 0.7717276565798734
  - 0.7966718358582847
  - 0.7295642997135534
  - 0.7733333333333333
  - 0.7600821057715528
  train_jaccard_macro:
  - 0.7637099101040894
  - 0.7659993959506061
  - 0.7592548724365143
  - 0.7605435370275705
  - 0.7645423250798391
  train_jaccard_macro_oob:
  - 0.7372141519416501
  - 0.7524598645301389
  - 0.7139671200141136
  - 0.7386573629316745
  - 0.7267123111249133
  train_jaccard_micro:
  - 0.7576285963382737
  - 0.7597173144876325
  - 0.7522123893805309
  - 0.7537643932683791
  - 0.7587131367292225
  train_jaccard_micro_oob:
  - 0.726027397260274
  - 0.7443082311733801
  - 0.6966580976863753
  - 0.7277486910994765
  - 0.7142857142857143
  train_jaccard_samples:
  - 0.7687074829931972
  - 0.7728055077452669
  - 0.7663780663780665
  - 0.7673881673881675
  - 0.7746806039488967
  train_jaccard_samples_oob:
  - 0.7371031746031745
  - 0.7578886976477338
  - 0.707936507936508
  - 0.7428571428571429
  - 0.7283681765389083
  train_jaccard_weighted:
  - 0.6902091105912774
  - 0.6908320055880032
  - 0.6792332418046757
  - 0.6824099160416737
  - 0.6924970033397517
  train_jaccard_weighted_oob:
  - 0.6363442058790639
  - 0.6670931099723081
  - 0.5867184015903476
  - 0.637721882872097
  - 0.6218647185874882
  train_label_ranking_average_precision_score:
  - 0.8198412698412698
  - 0.8318273092369475
  - 0.8284343434343434
  - 0.815151515151515
  - 0.8100609756097559
  train_label_ranking_average_precision_score_oob:
  - 0.757572751322751
  - 0.7953647925033466
  - 0.7557912457912458
  - 0.7592760942760942
  - 0.7762195121951218
  train_matthews_corrcoef_macro:
  - 0.1935701170820524
  - 0.23585841923216058
  - 0.1884793953066757
  - 0.18816952227648234
  - 0.24621874049876666
  train_matthews_corrcoef_macro_oob:
  - 0.15219876470507585
  - 0.17866966243776974
  - 0.11082659277451268
  - 0.15433833218976153
  - 0.14261243707341903
  train_matthews_corrcoef_micro:
  - 0.5185061489839735
  - 0.5281594563862029
  - 0.5076887424367593
  - 0.5078121769351962
  - 0.5318392989791861
  train_matthews_corrcoef_micro_oob:
  - 0.42035913756946625
  - 0.48391006272836956
  - 0.3122896065648142
  - 0.4267720427660011
  - 0.39434280556293727
  train_matthews_corrcoef_samples:
  - 0.32200192997722304
  - 0.34996014958477334
  - 0.3268730095515461
  - 0.33220433759720447
  - 0.34841044746221367
  train_matthews_corrcoef_samples_oob:
  - 0.22532367528852065
  - 0.3008075094940066
  - 0.13542169813091506
  - 0.25369481367436003
  - 0.21601944344046178
  train_matthews_corrcoef_weighted:
  - 0.39491931523094703
  - 0.42875488215786167
  - 0.3851553525143257
  - 0.38392614253742496
  - 0.4349421722000296
  train_matthews_corrcoef_weighted_oob:
  - 0.3108851857998064
  - 0.3640695383320733
  - 0.22652266892528886
  - 0.314861814773646
  - 0.28850500207758734
  train_ndgc:
  - 0.8658937953734898
  - 0.8755045421366937
  - 0.873559702357903
  - 0.8628744614073343
  - 0.8606099322946793
  train_ndgc_oob:
  - 0.8215824384737573
  - 0.8496394656033389
  - 0.8196545862948855
  - 0.8218191862975012
  - 0.8360492740785904
  train_neg_coverage_error:
  - -1.8154761904761905
  - -1.7710843373493976
  - -1.7818181818181817
  - -1.8242424242424242
  - -1.8902439024390243
  train_neg_coverage_error_oob:
  - -2.0714285714285716
  - -1.9337349397590362
  - -2.0727272727272728
  - -2.0727272727272728
  - -2.048780487804878
  train_neg_hamming_loss_macro:
  - -0.13789682539682538
  - -0.13654618473895583
  - -0.1414141414141414
  - -0.1404040404040404
  - -0.1371951219512195
  train_neg_hamming_loss_macro_oob:
  - -0.15873015873015875
  - -0.1465863453815261
  - -0.17878787878787875
  - -0.15757575757575756
  - -0.1666666666666667
  train_neg_hamming_loss_micro:
  - -0.1378968253968254
  - -0.13654618473895583
  - -0.1414141414141414
  - -0.1404040404040404
  - -0.13719512195121952
  train_neg_hamming_loss_micro_oob:
  - -0.15873015873015872
  - -0.1465863453815261
  - -0.1787878787878788
  - -0.15757575757575756
  - -0.16666666666666666
  train_neg_hamming_loss_samples:
  - -0.13789682539682538
  - -0.1365461847389558
  - -0.1414141414141414
  - -0.1404040404040404
  - -0.1371951219512195
  train_neg_hamming_loss_samples_oob:
  - -0.15873015873015875
  - -0.14658634538152607
  - -0.1787878787878788
  - -0.15757575757575756
  - -0.16666666666666663
  train_neg_hamming_loss_weighted:
  - -0.18593126905934787
  - -0.18546463080042944
  - -0.1940600030152269
  - -0.19160606060606064
  - -0.18428519681236416
  train_neg_hamming_loss_weighted_oob:
  - -0.22827234342012667
  - -0.20332816414171537
  - -0.2704357002864466
  - -0.22666666666666668
  - -0.23991789422844725
  train_neg_label_ranking_loss:
  - -0.11949404761904761
  - -0.10759705488621149
  - -0.10915824915824916
  - -0.11991582491582492
  - -0.1249830623306233
  train_neg_label_ranking_loss_oob:
  - -0.16545965608465607
  - -0.13875502008032128
  - -0.167020202020202
  - -0.16860269360269364
  - -0.15394647696476962
  train_precision_macro:
  - 0.8621031746031748
  - 0.8634538152610441
  - 0.8585858585858587
  - 0.8595959595959597
  - 0.8628048780487805
  train_precision_macro_oob:
  - 0.8412698412698414
  - 0.8534136546184738
  - 0.8212121212121213
  - 0.8424242424242424
  - 0.8333333333333331
  train_precision_micro:
  - 0.8621031746031746
  - 0.8634538152610441
  - 0.8585858585858586
  - 0.8595959595959596
  - 0.8628048780487805
  train_precision_micro_oob:
  - 0.8412698412698413
  - 0.8534136546184738
  - 0.8212121212121212
  - 0.8424242424242424
  - 0.8333333333333334
  train_precision_samples:
  - 0.8621031746031745
  - 0.863453815261044
  - 0.8585858585858586
  - 0.8595959595959595
  - 0.8628048780487804
  train_precision_samples_oob:
  - 0.8412698412698413
  - 0.8534136546184736
  - 0.8212121212121212
  - 0.8424242424242424
  - 0.8333333333333331
  train_precision_weighted:
  - 0.8140687309406521
  - 0.8145353691995706
  - 0.805939996984773
  - 0.8083939393939393
  - 0.8157148031876359
  train_precision_weighted_oob:
  - 0.7717276565798734
  - 0.7966718358582847
  - 0.7295642997135534
  - 0.7733333333333333
  - 0.7600821057715528
  train_recall_macro:
  - 0.8621031746031748
  - 0.8634538152610441
  - 0.8585858585858587
  - 0.8595959595959597
  - 0.8628048780487805
  train_recall_macro_oob:
  - 0.8412698412698414
  - 0.8534136546184738
  - 0.8212121212121213
  - 0.8424242424242424
  - 0.8333333333333331
  train_recall_micro:
  - 0.8621031746031746
  - 0.8634538152610441
  - 0.8585858585858586
  - 0.8595959595959596
  - 0.8628048780487805
  train_recall_micro_oob:
  - 0.8412698412698413
  - 0.8534136546184738
  - 0.8212121212121212
  - 0.8424242424242424
  - 0.8333333333333334
  train_recall_samples:
  - 0.8621031746031745
  - 0.863453815261044
  - 0.8585858585858586
  - 0.8595959595959595
  - 0.8628048780487804
  train_recall_samples_oob:
  - 0.8412698412698413
  - 0.8534136546184736
  - 0.8212121212121212
  - 0.8424242424242424
  - 0.8333333333333331
  train_recall_weighted:
  - 0.8140687309406521
  - 0.8145353691995706
  - 0.805939996984773
  - 0.8083939393939393
  - 0.8157148031876359
  train_recall_weighted_oob:
  - 0.7717276565798734
  - 0.7966718358582847
  - 0.7295642997135534
  - 0.7733333333333333
  - 0.7600821057715528
  train_roc_auc_macro:
  - 0.8293228843384854
  - 0.8521652873690795
  - 0.8299099783682032
  - 0.8184900201381818
  - 0.8061183157939226
  train_roc_auc_macro_oob:
  - 0.8057522697869343
  - 0.8348402072907805
  - 0.7725499159997459
  - 0.7973083725608645
  - 0.7850181066648751
  train_roc_auc_micro:
  - 0.8933451641526176
  - 0.8976980821507843
  - 0.8888384440282743
  - 0.8814620253164558
  - 0.8738826568078802
  train_roc_auc_micro_oob:
  - 0.8612918030780529
  - 0.8778212833877846
  - 0.851490330350781
  - 0.8518924050632911
  - 0.8551885239674863
  train_roc_auc_samples:
  - 0.8805059523809524
  - 0.8924029451137886
  - 0.8908417508417508
  - 0.880084175084175
  - 0.8750169376693768
  train_roc_auc_samples_oob:
  - 0.8345403439153439
  - 0.8612449799196787
  - 0.8329797979797982
  - 0.8313973063973064
  - 0.8460535230352304
  train_roc_auc_weighted:
  - 0.7803050663391405
  - 0.8218509674708478
  - 0.7780889641616091
  - 0.7681089896946491
  - 0.7664588563319
  train_roc_auc_weighted_oob:
  - 0.7751365313805223
  - 0.8152942681858114
  - 0.7608708469341652
  - 0.7706107286485667
  - 0.7614378401260078
start: 2023-12-21 12:36:35.638282
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
