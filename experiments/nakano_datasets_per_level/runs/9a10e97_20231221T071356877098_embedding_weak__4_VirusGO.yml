active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0AAMzMzMzPjvwAzMzMzM+O/gJmZmZmZ+b8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:14:26.466038
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__4
  params: {}
hash: 9a10e972a459689e1f39135099003ca3c06a2af39a9930772abcd51e54bbdc06
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a10e97_20231221T071356877098_embedding_weak__4_VirusGO.yml
results:
  fit_time:
  - 21.867947101593018
  - 22.04591464996338
  - 22.561676502227783
  - 22.044980764389038
  - 22.936402320861816
  score_time:
  - 1.844881296157837
  - 1.8943214416503906
  - 2.0862913131713867
  - 2.24702525138855
  - 1.8864257335662842
  test_average_precision_macro:
  - 0.8931823542982712
  - 0.8754992178696877
  - 0.9564122503170491
  - 0.9956534631492011
  - 0.975004056429952
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.906508911242119
  - 0.8991707473453061
  - 0.8435050981816358
  - 0.9477131223040574
  - 0.9192881948350027
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9166666666666665
  - 0.9384920634920635
  - 0.9305555555555555
  - 0.9492248062015503
  - 0.951984126984127
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.909050320094738
  - 0.9158082990786506
  - 0.9278766182498728
  - 0.9912288970919002
  - 0.9787741338233052
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9385964912280702
  - 0.9404761904761906
  - 0.9206349206349206
  - 0.9263565891472868
  - 0.9404761904761906
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9385964912280702
  - 0.9404761904761905
  - 0.9206349206349206
  - 0.9263565891472868
  - 0.9404761904761905
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9385964912280703
  - 0.9404761904761907
  - 0.9206349206349207
  - 0.9263565891472867
  - 0.9404761904761905
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9473684210526315
  - 0.9360410830999066
  - 0.9008746355685132
  - 0.915474060822898
  - 0.9523809523809523
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8857127966884065
  - 0.8882076579751
  - 0.8549668315797868
  - 0.8635248569568642
  - 0.8888225020682049
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8842975206611571
  - 0.8876404494382022
  - 0.8529411764705882
  - 0.8628158844765343
  - 0.8876404494382022
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9022556390977445
  - 0.8996598639455782
  - 0.8735827664399093
  - 0.8803986710963454
  - 0.9047619047619048
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9010531363443259
  - 0.8802470671143723
  - 0.820538365606455
  - 0.844525486847411
  - 0.909999297080722
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9166666666666665
  - 0.9384920634920635
  - 0.9305555555555555
  - 0.9492248062015503
  - 0.951984126984127
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5011166066110079
  - 0.5986461268019789
  - 0.5223134497137341
  - 0.5051628150102955
  - 0.44693217184417033
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.811541573480797
  - 0.8090089102024158
  - 0.736661021572557
  - 0.7592641987688876
  - 0.8083193416177561
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7328947368421053
  - 0.7647472486036887
  - 0.7390939711357623
  - 0.6952875952581635
  - 0.7785087284785959
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7621056176858478
  - 0.7728988082583729
  - 0.6908297074548605
  - 0.6943882425175073
  - 0.7318455741325052
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.937273311352866
  - 0.9581041882838155
  - 0.950259709212457
  - 0.9646808060257257
  - 0.9704639386356824
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5789473684210527
  - -1.4047619047619047
  - -1.3571428571428572
  - -1.441860465116279
  - -1.4761904761904763
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06140350877192982
  - -0.059523809523809514
  - -0.07936507936507936
  - -0.07364341085271318
  - -0.059523809523809514
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06140350877192982
  - -0.05952380952380952
  - -0.07936507936507936
  - -0.07364341085271318
  - -0.05952380952380952
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06140350877192983
  - -0.059523809523809514
  - -0.07936507936507936
  - -0.07364341085271317
  - -0.05952380952380952
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05263157894736842
  - -0.06395891690009337
  - -0.09912536443148687
  - -0.08452593917710197
  - -0.047619047619047616
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05921052631578947
  - -0.030952380952380953
  - -0.03419312169312169
  - -0.040697674418604654
  - -0.036309523809523805
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9385964912280702
  - 0.9404761904761906
  - 0.9206349206349206
  - 0.9263565891472868
  - 0.9404761904761906
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9385964912280702
  - 0.9404761904761905
  - 0.9206349206349206
  - 0.9263565891472868
  - 0.9404761904761905
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9385964912280703
  - 0.9404761904761907
  - 0.9206349206349207
  - 0.9263565891472867
  - 0.9404761904761905
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9473684210526315
  - 0.9360410830999066
  - 0.9008746355685132
  - 0.915474060822898
  - 0.9523809523809523
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9385964912280702
  - 0.9404761904761906
  - 0.9206349206349206
  - 0.9263565891472868
  - 0.9404761904761906
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9385964912280702
  - 0.9404761904761905
  - 0.9206349206349206
  - 0.9263565891472868
  - 0.9404761904761905
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9385964912280703
  - 0.9404761904761907
  - 0.9206349206349207
  - 0.9263565891472867
  - 0.9404761904761905
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9473684210526315
  - 0.9360410830999066
  - 0.9008746355685132
  - 0.915474060822898
  - 0.9523809523809523
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9555686858076564
  - 0.9596504127966977
  - 0.9800926881473836
  - 0.9970102228925759
  - 0.9938748000699755
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9618059514308517
  - 0.9623939127889961
  - 0.9657183070272444
  - 0.9819828230022405
  - 0.972978246024778
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9407894736842105
  - 0.9690476190476189
  - 0.9658068783068783
  - 0.9593023255813954
  - 0.9636904761904762
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9504212399245412
  - 0.9654179566563468
  - 0.961345029239766
  - 0.9939644970414201
  - 0.9911123018708159
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.975235813577885
  - 0.9668550914398005
  - 0.9737153905386416
  - 0.9704251883249219
  - 0.9620538545998819
  train_average_precision_macro_oob:
  - 0.9283815339196096
  - 0.9360952310588853
  - 0.9358351959369254
  - 0.9354663260136462
  - 0.9330472173416205
  train_average_precision_micro:
  - 0.9135571166839261
  - 0.9232611262477257
  - 0.9344920757035438
  - 0.9246311000771331
  - 0.8994068881841216
  train_average_precision_micro_oob:
  - 0.867760215072113
  - 0.8972831106609769
  - 0.9109606472874601
  - 0.9047337436353695
  - 0.8849443385709559
  train_average_precision_samples:
  - 0.9664694280078896
  - 0.9585858585858585
  - 0.9626262626262625
  - 0.9583333333333333
  - 0.9464646464646466
  train_average_precision_samples_oob:
  - 0.9313609467455621
  - 0.9242424242424242
  - 0.9327272727272726
  - 0.9299796747967479
  - 0.924949494949495
  train_average_precision_weighted:
  - 0.9594971160025185
  - 0.9552876374665393
  - 0.9662724442477589
  - 0.9645821875623112
  - 0.9478714360738808
  train_average_precision_weighted_oob:
  - 0.9162936825871754
  - 0.9352430695987985
  - 0.9475252547191733
  - 0.9485301027422679
  - 0.9356535406849037
  train_f1_macro:
  - 0.9349112426035502
  - 0.9404040404040405
  - 0.9444444444444445
  - 0.9380081300813008
  - 0.9424242424242424
  train_f1_macro_oob:
  - 0.9240631163708087
  - 0.9262626262626261
  - 0.9252525252525253
  - 0.9268292682926829
  - 0.9323232323232323
  train_f1_micro:
  - 0.9349112426035503
  - 0.9404040404040404
  - 0.9444444444444444
  - 0.9380081300813008
  - 0.9424242424242424
  train_f1_micro_oob:
  - 0.9240631163708086
  - 0.9262626262626262
  - 0.9252525252525252
  - 0.926829268292683
  - 0.9323232323232323
  train_f1_samples:
  - 0.9349112426035503
  - 0.9404040404040404
  - 0.9444444444444445
  - 0.9380081300813009
  - 0.9424242424242424
  train_f1_samples_oob:
  - 0.9240631163708088
  - 0.9262626262626263
  - 0.9252525252525252
  - 0.926829268292683
  - 0.9323232323232322
  train_f1_weighted:
  - 0.9345031626198734
  - 0.9397859188903965
  - 0.9463800567248843
  - 0.9382926829268292
  - 0.9368008442635309
  train_f1_weighted_oob:
  - 0.9211239688693268
  - 0.9238655208804464
  - 0.929064039408867
  - 0.9266768292682925
  - 0.9260063319764814
  train_jaccard_macro:
  - 0.8782194745747729
  - 0.88781114288448
  - 0.8949320094493071
  - 0.883939746174396
  - 0.8913415125091122
  train_jaccard_macro_oob:
  - 0.8594039616580601
  - 0.8632449281377919
  - 0.861550532608416
  - 0.8643062335164126
  - 0.8735838815441448
  train_jaccard_micro:
  - 0.8777777777777778
  - 0.8875119161105816
  - 0.8947368421052632
  - 0.8832535885167464
  - 0.8911174785100286
  train_jaccard_micro_oob:
  - 0.8588450962419798
  - 0.8626528692380057
  - 0.8609022556390977
  - 0.8636363636363636
  - 0.8732261116367077
  train_jaccard_samples:
  - 0.8929275852352777
  - 0.9044733044733045
  - 0.9090909090909091
  - 0.898809523809524
  - 0.9070707070707071
  train_jaccard_samples_oob:
  - 0.8767258382643
  - 0.8826839826839826
  - 0.8783549783549784
  - 0.8812427409988385
  - 0.8906204906204905
  train_jaccard_weighted:
  - 0.8772378609172028
  - 0.8865993644094825
  - 0.8983182674091686
  - 0.8840975254845511
  - 0.8812341617584529
  train_jaccard_weighted_oob:
  - 0.8539737958760005
  - 0.8587356889743321
  - 0.8678537453569103
  - 0.8636608248008156
  - 0.8623044107510239
  train_label_ranking_average_precision_score:
  - 0.9664694280078895
  - 0.9585858585858583
  - 0.9626262626262625
  - 0.9583333333333331
  - 0.9464646464646462
  train_label_ranking_average_precision_score_oob:
  - 0.9313609467455621
  - 0.9242424242424242
  - 0.9327272727272727
  - 0.9299796747967479
  - 0.9249494949494949
  train_matthews_corrcoef_macro:
  - 0.5014090777690374
  - 0.5904893273231417
  - 0.6039573724135243
  - 0.5113650459002894
  - 0.6163270632989722
  train_matthews_corrcoef_macro_oob:
  - 0.4024006948510373
  - 0.5065064987683222
  - 0.39934250623315054
  - 0.44268795179429743
  - 0.5646988619850443
  train_matthews_corrcoef_micro:
  - 0.7876729007077833
  - 0.8090921685277989
  - 0.8235407828171453
  - 0.8011504685455094
  - 0.8167822730858886
  train_matthews_corrcoef_micro_oob:
  - 0.7498151077969751
  - 0.7605417583835209
  - 0.7587696916220936
  - 0.7629466408460582
  - 0.7822564243792547
  train_matthews_corrcoef_samples:
  - 0.7458485984554986
  - 0.7785624298885302
  - 0.7819941133189354
  - 0.7606167887633637
  - 0.7908170834961297
  train_matthews_corrcoef_samples_oob:
  - 0.6957096188826911
  - 0.7070201669958782
  - 0.6806012519363007
  - 0.702813928229622
  - 0.7384991711807741
  train_matthews_corrcoef_weighted:
  - 0.7287516701757455
  - 0.7789053294417234
  - 0.7925208033419727
  - 0.7433500371422884
  - 0.7862814709673525
  train_matthews_corrcoef_weighted_oob:
  - 0.6631713148521374
  - 0.715750326930365
  - 0.6741189612470435
  - 0.694052636640226
  - 0.7457976587254578
  train_ndgc:
  - 0.9756620095080949
  - 0.9699865090543907
  - 0.97326333987512
  - 0.9704211895086206
  - 0.9613183356032051
  train_ndgc_oob:
  - 0.9521105362716342
  - 0.9455698457465072
  - 0.9524671059431944
  - 0.9503076077509388
  - 0.9460377547880191
  train_neg_coverage_error:
  - -1.2840236686390532
  - -1.3272727272727274
  - -1.3272727272727274
  - -1.329268292682927
  - -1.3696969696969696
  train_neg_coverage_error_oob:
  - -1.4497041420118344
  - -1.509090909090909
  - -1.490909090909091
  - -1.4573170731707317
  - -1.4666666666666666
  train_neg_hamming_loss_macro:
  - -0.0650887573964497
  - -0.0595959595959596
  - -0.05555555555555555
  - -0.061991869918699184
  - -0.05757575757575758
  train_neg_hamming_loss_macro_oob:
  - -0.0759368836291913
  - -0.07373737373737374
  - -0.07474747474747474
  - -0.07317073170731708
  - -0.06767676767676767
  train_neg_hamming_loss_micro:
  - -0.0650887573964497
  - -0.0595959595959596
  - -0.05555555555555555
  - -0.061991869918699184
  - -0.05757575757575758
  train_neg_hamming_loss_micro_oob:
  - -0.07593688362919132
  - -0.07373737373737374
  - -0.07474747474747474
  - -0.07317073170731707
  - -0.06767676767676768
  train_neg_hamming_loss_samples:
  - -0.0650887573964497
  - -0.05959595959595959
  - -0.05555555555555555
  - -0.061991869918699184
  - -0.05757575757575758
  train_neg_hamming_loss_samples_oob:
  - -0.07593688362919132
  - -0.07373737373737374
  - -0.07474747474747474
  - -0.07317073170731707
  - -0.06767676767676768
  train_neg_hamming_loss_weighted:
  - -0.06549683738012652
  - -0.06021408110960349
  - -0.05361994327511569
  - -0.06170731707317073
  - -0.06319915573646917
  train_neg_hamming_loss_weighted_oob:
  - -0.07887603113067304
  - -0.07613447911955375
  - -0.07093596059113301
  - -0.07332317073170733
  - -0.07399366802351877
  train_neg_label_ranking_loss:
  - -0.015680473372781067
  - -0.020673400673400677
  - -0.01787878787878788
  - -0.019884823848238482
  - -0.02824915824915825
  train_neg_label_ranking_loss_oob:
  - -0.04220907297830375
  - -0.052710437710437714
  - -0.046363636363636364
  - -0.04175135501355014
  - -0.04537037037037037
  train_precision_macro:
  - 0.9349112426035502
  - 0.9404040404040405
  - 0.9444444444444445
  - 0.9380081300813008
  - 0.9424242424242424
  train_precision_macro_oob:
  - 0.9240631163708087
  - 0.9262626262626261
  - 0.9252525252525253
  - 0.9268292682926829
  - 0.9323232323232323
  train_precision_micro:
  - 0.9349112426035503
  - 0.9404040404040404
  - 0.9444444444444444
  - 0.9380081300813008
  - 0.9424242424242424
  train_precision_micro_oob:
  - 0.9240631163708086
  - 0.9262626262626262
  - 0.9252525252525252
  - 0.926829268292683
  - 0.9323232323232323
  train_precision_samples:
  - 0.9349112426035503
  - 0.9404040404040404
  - 0.9444444444444445
  - 0.9380081300813009
  - 0.9424242424242424
  train_precision_samples_oob:
  - 0.9240631163708088
  - 0.9262626262626263
  - 0.9252525252525252
  - 0.926829268292683
  - 0.9323232323232322
  train_precision_weighted:
  - 0.9345031626198734
  - 0.9397859188903965
  - 0.9463800567248843
  - 0.9382926829268292
  - 0.9368008442635309
  train_precision_weighted_oob:
  - 0.9211239688693268
  - 0.9238655208804464
  - 0.929064039408867
  - 0.9266768292682925
  - 0.9260063319764814
  train_recall_macro:
  - 0.9349112426035502
  - 0.9404040404040405
  - 0.9444444444444445
  - 0.9380081300813008
  - 0.9424242424242424
  train_recall_macro_oob:
  - 0.9240631163708087
  - 0.9262626262626261
  - 0.9252525252525253
  - 0.9268292682926829
  - 0.9323232323232323
  train_recall_micro:
  - 0.9349112426035503
  - 0.9404040404040404
  - 0.9444444444444444
  - 0.9380081300813008
  - 0.9424242424242424
  train_recall_micro_oob:
  - 0.9240631163708086
  - 0.9262626262626262
  - 0.9252525252525252
  - 0.926829268292683
  - 0.9323232323232323
  train_recall_samples:
  - 0.9349112426035503
  - 0.9404040404040404
  - 0.9444444444444445
  - 0.9380081300813009
  - 0.9424242424242424
  train_recall_samples_oob:
  - 0.9240631163708088
  - 0.9262626262626263
  - 0.9252525252525252
  - 0.926829268292683
  - 0.9323232323232322
  train_recall_weighted:
  - 0.9345031626198734
  - 0.9397859188903965
  - 0.9463800567248843
  - 0.9382926829268292
  - 0.9368008442635309
  train_recall_weighted_oob:
  - 0.9211239688693268
  - 0.9238655208804464
  - 0.929064039408867
  - 0.9266768292682925
  - 0.9260063319764814
  train_roc_auc_macro:
  - 0.9902052909988969
  - 0.9887498681832927
  - 0.9903989945237117
  - 0.9891141876972268
  - 0.9859703267848685
  train_roc_auc_macro_oob:
  - 0.9693472471089667
  - 0.9760329097661313
  - 0.9744879987592103
  - 0.9735225934059333
  - 0.9740741598733119
  train_roc_auc_micro:
  - 0.9808786816737836
  - 0.9829086506630347
  - 0.9835285207278373
  - 0.9806218112244899
  - 0.9765557510293904
  train_roc_auc_micro_oob:
  - 0.9635856723743114
  - 0.9675324265869638
  - 0.9679771658915506
  - 0.9668494897959184
  - 0.9630806676377303
  train_roc_auc_samples:
  - 0.9843195266272191
  - 0.9793265993265994
  - 0.9821212121212122
  - 0.9801151761517615
  - 0.9717508417508418
  train_roc_auc_samples_oob:
  - 0.9577909270216963
  - 0.9472895622895623
  - 0.9536363636363636
  - 0.9582486449864498
  - 0.9546296296296296
  train_roc_auc_weighted:
  - 0.9814135906470848
  - 0.9812155430412313
  - 0.9846226387132374
  - 0.982409131857683
  - 0.9764889131498494
  train_roc_auc_weighted_oob:
  - 0.962795932684228
  - 0.9720133846395883
  - 0.9743116754584265
  - 0.9732785563524788
  - 0.9697621417370659
start: 2023-12-21 07:13:56.877098
wrapper: null
