active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmJmZmZnJvwCamZmZmek/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:02:09.958403
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: d35e566f149bef33bafd71c2df9a6da5e003bd037d1cf48d234351256b99d78f
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d35e566_20231221T170129215161_embedding_proba__6_Gram_positive.yml
results:
  fit_time:
  - 22.35910439491272
  - 23.637211799621582
  - 23.129425048828125
  - 23.665693521499634
  - 22.98832941055298
  score_time:
  - 4.975351095199585
  - 5.176632881164551
  - 5.132533073425293
  - 5.016019821166992
  - 5.096338272094727
  test_average_precision_macro:
  - 0.9426558409461676
  - 0.9560109364344153
  - 0.9070766276599668
  - 0.8797858134457172
  - 0.9194540649985392
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9899786276581051
  - 0.9828802558465869
  - 0.977004218277594
  - 0.9425476828432656
  - 0.9777847390775624
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9743589743589745
  - 0.9735576923076923
  - 0.9627831715210357
  - 0.9543269230769231
  - 0.9663461538461539
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9856366103131662
  - 0.9893539628886718
  - 0.9729882927812334
  - 0.9326228499074458
  - 0.9729324226184005
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8221153846153847
  - 0.810096153846154
  - 0.8082524271844661
  - 0.8293269230769231
  - 0.8076923076923077
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8221153846153846
  - 0.8100961538461539
  - 0.808252427184466
  - 0.8293269230769231
  - 0.8076923076923077
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8221153846153846
  - 0.8100961538461539
  - 0.808252427184466
  - 0.8293269230769231
  - 0.8076923076923077
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7643306213017751
  - 0.7632783882783883
  - 0.751587005227782
  - 0.788919413919414
  - 0.7608058608058609
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7115750982385814
  - 0.6914208754208755
  - 0.6915415361007471
  - 0.7165351390887966
  - 0.6878768652646154
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6979591836734694
  - 0.6808080808080809
  - 0.6782077393075356
  - 0.7084188911704312
  - 0.6774193548387096
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7153846153846153
  - 0.6974358974358973
  - 0.6944983818770224
  - 0.7294871794871793
  - 0.6935897435897436
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6247690080420826
  - 0.6198043931377264
  - 0.606103114275984
  - 0.6532097354318165
  - 0.6161696497013361
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9743589743589743
  - 0.9735576923076923
  - 0.9627831715210355
  - 0.9543269230769231
  - 0.9663461538461539
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3579254362773398
  - 0.3071588151560627
  - 0.3153643062053633
  - 0.360433114613425
  - 0.27771394188246984
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.48286708498473785
  - 0.4443650722776459
  - 0.4373943919445604
  - 0.5100360434683516
  - 0.43517823919175164
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.28846153846153844
  - 0.25
  - 0.24271844660194175
  - 0.3333333333333333
  - 0.2403846153846154
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.45124812682583276
  - 0.40684211745197163
  - 0.4081178327495704
  - 0.4731101085298247
  - 0.38469202028369504
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9809972982142868
  - 0.9810756161845705
  - 0.9723752307558959
  - 0.9661357171792795
  - 0.9748564627926213
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0576923076923077
  - -1.0769230769230769
  - -1.0970873786407767
  - -1.1153846153846154
  - -1.1057692307692308
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1778846153846154
  - -0.18990384615384615
  - -0.19174757281553398
  - -0.17067307692307693
  - -0.19230769230769232
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1778846153846154
  - -0.18990384615384615
  - -0.19174757281553398
  - -0.17067307692307693
  - -0.19230769230769232
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1778846153846154
  - -0.18990384615384615
  - -0.19174757281553398
  - -0.17067307692307693
  - -0.19230769230769232
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23566937869822488
  - -0.2367216117216117
  - -0.24841299477221807
  - -0.2110805860805861
  - -0.23919413919413918
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.019230769230769232
  - -0.020833333333333332
  - -0.02912621359223301
  - -0.035256410256410256
  - -0.03205128205128205
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8221153846153847
  - 0.810096153846154
  - 0.8082524271844661
  - 0.8293269230769231
  - 0.8076923076923077
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8221153846153846
  - 0.8100961538461539
  - 0.808252427184466
  - 0.8293269230769231
  - 0.8076923076923077
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8221153846153846
  - 0.8100961538461539
  - 0.808252427184466
  - 0.8293269230769231
  - 0.8076923076923077
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7643306213017751
  - 0.7632783882783883
  - 0.751587005227782
  - 0.788919413919414
  - 0.7608058608058609
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8221153846153847
  - 0.810096153846154
  - 0.8082524271844661
  - 0.8293269230769231
  - 0.8076923076923077
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8221153846153846
  - 0.8100961538461539
  - 0.808252427184466
  - 0.8293269230769231
  - 0.8076923076923077
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8221153846153846
  - 0.8100961538461539
  - 0.808252427184466
  - 0.8293269230769231
  - 0.8076923076923077
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7643306213017751
  - 0.7632783882783883
  - 0.751587005227782
  - 0.788919413919414
  - 0.7608058608058609
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9954567367817352
  - 0.9939097226273115
  - 0.9898449343424351
  - 0.9729834614624943
  - 0.9825915606424898
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9966099605522682
  - 0.9928341754708314
  - 0.9916645854145854
  - 0.9773082223242995
  - 0.9892818863879957
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9807692307692307
  - 0.9791666666666667
  - 0.9708737864077671
  - 0.9647435897435899
  - 0.9679487179487178
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9966964526214461
  - 0.9973266833887497
  - 0.99238981114492
  - 0.96886415898225
  - 0.9898956343640775
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9734324861698109
  - 0.9482817824900021
  - 0.947804531979481
  - 0.9324542165485119
  - 0.9743443634793024
  train_average_precision_macro_oob:
  - 0.9513256944079178
  - 0.8871364977349324
  - 0.9149664075003859
  - 0.8479956300931693
  - 0.8874059309240386
  train_average_precision_micro:
  - 0.988593473961901
  - 0.9902445504912567
  - 0.9902254614954716
  - 0.9822546910881481
  - 0.9892980294734502
  train_average_precision_micro_oob:
  - 0.9804428718160634
  - 0.9814211839206904
  - 0.9834301217986094
  - 0.9703307353465971
  - 0.9806698836441389
  train_average_precision_samples:
  - 0.9785140562248995
  - 0.9759036144578314
  - 0.9803685897435896
  - 0.9744979919678716
  - 0.9751004016064257
  train_average_precision_samples_oob:
  - 0.9684738955823292
  - 0.967871485943775
  - 0.9651442307692307
  - 0.9680722891566265
  - 0.9628514056224899
  train_average_precision_weighted:
  - 0.9881844360072843
  - 0.9869686338883289
  - 0.9865604333788527
  - 0.9760473160668298
  - 0.9885178284570945
  train_average_precision_weighted_oob:
  - 0.9797722700444562
  - 0.9739407437975424
  - 0.978013866021328
  - 0.9560874729465078
  - 0.9722637459720801
  train_f1_macro:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615385
  - 0.8397590361445784
  - 0.8457831325301205
  train_f1_macro_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384615
  - 0.8246987951807229
  - 0.8265060240963855
  train_f1_micro:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615384
  - 0.8397590361445784
  - 0.8457831325301205
  train_f1_micro_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8265060240963855
  train_f1_samples:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615384
  - 0.8397590361445784
  - 0.8457831325301205
  train_f1_samples_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8265060240963855
  train_f1_weighted:
  - 0.8035253184576012
  - 0.8078169135873638
  - 0.7927930512208555
  - 0.797832478238312
  - 0.8063123306623625
  train_f1_weighted_oob:
  - 0.7786583086522701
  - 0.7849311120078399
  - 0.7817835505783
  - 0.7788839568801521
  - 0.7826655905920332
  train_jaccard_macro:
  - 0.7366448740587072
  - 0.7417822642822642
  - 0.7255608613433757
  - 0.7317914727293755
  - 0.7401287478070895
  train_jaccard_macro_oob:
  - 0.7092443121475163
  - 0.715805307314406
  - 0.7173258215485608
  - 0.7112028812957422
  - 0.7134217778749029
  train_jaccard_micro:
  - 0.7291666666666666
  - 0.7345872518286312
  - 0.717234262125903
  - 0.7237798546209762
  - 0.732776617954071
  train_jaccard_micro_oob:
  - 0.6999487967229903
  - 0.7069408740359897
  - 0.7075423293996922
  - 0.7016914402870323
  - 0.704312114989733
  train_jaccard_samples:
  - 0.7503614457831325
  - 0.7561445783132529
  - 0.7374999999999999
  - 0.7445783132530119
  - 0.7542168674698793
  train_jaccard_samples_oob:
  - 0.718875502008032
  - 0.7262650602409638
  - 0.7269230769230769
  - 0.7204819277108431
  - 0.7233734939759034
  train_jaccard_weighted:
  - 0.6736520991232098
  - 0.6793428039839522
  - 0.659118276929521
  - 0.6656943625417049
  - 0.6774106702450131
  train_jaccard_weighted_oob:
  - 0.6397304794140132
  - 0.6477916891219924
  - 0.6452835076643991
  - 0.6399822609836461
  - 0.6447843082206869
  train_label_ranking_average_precision_score:
  - 0.9785140562248997
  - 0.9759036144578314
  - 0.9803685897435896
  - 0.9744979919678713
  - 0.9751004016064257
  train_label_ranking_average_precision_score_oob:
  - 0.9684738955823291
  - 0.9678714859437751
  - 0.9651442307692306
  - 0.9680722891566264
  - 0.9628514056224899
  train_matthews_corrcoef_macro:
  - 0.4079237373666724
  - 0.41306120553086223
  - 0.3832324420795624
  - 0.3944202993336915
  - 0.40916519073797875
  train_matthews_corrcoef_macro_oob:
  - 0.34980853383705535
  - 0.35547865904148584
  - 0.37159552068586044
  - 0.35067540622521776
  - 0.35277868527731815
  train_matthews_corrcoef_micro:
  - 0.5601277579561178
  - 0.5707274804765069
  - 0.532577455520777
  - 0.5472600934093745
  - 0.5668579705795034
  train_matthews_corrcoef_micro_oob:
  - 0.4932322577381746
  - 0.5087201722062662
  - 0.5101340917974609
  - 0.49613908352991176
  - 0.5024566723321193
  train_matthews_corrcoef_samples:
  - 0.38211409703419186
  - 0.39518072289156625
  - 0.3485576923076923
  - 0.36626506024096384
  - 0.39036144578313253
  train_matthews_corrcoef_samples_oob:
  - 0.3036144578313253
  - 0.3204819277108434
  - 0.32211538461538464
  - 0.3060240963855422
  - 0.3132530120481928
  train_matthews_corrcoef_weighted:
  - 0.5271165475685636
  - 0.53750848805532
  - 0.4987605804367602
  - 0.513953952021898
  - 0.5333274766030872
  train_matthews_corrcoef_weighted_oob:
  - 0.4591948393397076
  - 0.4723173735685215
  - 0.4778368726982811
  - 0.4619312567877079
  - 0.4671254523800411
  train_ndgc:
  - 0.9840076788363318
  - 0.9820805781025922
  - 0.9854146878822218
  - 0.9810999575151523
  - 0.9815824953356295
  train_ndgc_oob:
  - 0.976631345407375
  - 0.9760378862223951
  - 0.9742496155312197
  - 0.9764487560225121
  - 0.9725759590603782
  train_neg_coverage_error:
  - -1.0650602409638554
  - -1.0674698795180724
  - -1.0552884615384615
  - -1.0650602409638554
  - -1.0602409638554218
  train_neg_coverage_error_oob:
  - -1.0987951807228915
  - -1.0939759036144578
  - -1.0961538461538463
  - -1.0867469879518072
  - -1.0987951807228915
  train_neg_hamming_loss_macro:
  - -0.1566265060240964
  - -0.1530120481927711
  - -0.16466346153846154
  - -0.1602409638554217
  - -0.1542168674698795
  train_neg_hamming_loss_macro_oob:
  - -0.17650602409638552
  - -0.1716867469879518
  - -0.17127403846153844
  - -0.1753012048192771
  - -0.17349397590361443
  train_neg_hamming_loss_micro:
  - -0.1566265060240964
  - -0.1530120481927711
  - -0.16466346153846154
  - -0.1602409638554217
  - -0.15421686746987953
  train_neg_hamming_loss_micro_oob:
  - -0.17650602409638555
  - -0.1716867469879518
  - -0.17127403846153846
  - -0.1753012048192771
  - -0.17349397590361446
  train_neg_hamming_loss_samples:
  - -0.1566265060240964
  - -0.1530120481927711
  - -0.16466346153846154
  - -0.1602409638554217
  - -0.15421686746987953
  train_neg_hamming_loss_samples_oob:
  - -0.17650602409638555
  - -0.1716867469879518
  - -0.17127403846153846
  - -0.1753012048192771
  - -0.17349397590361446
  train_neg_hamming_loss_weighted:
  - -0.1964746815423987
  - -0.19218308641263618
  - -0.2072069487791445
  - -0.2021675217616879
  - -0.1936876693376376
  train_neg_hamming_loss_weighted_oob:
  - -0.2213416913477298
  - -0.21506888799216
  - -0.21821644942170004
  - -0.2211160431198478
  - -0.21733440940796678
  train_neg_label_ranking_loss:
  - -0.018473895582329317
  - -0.020080321285140562
  - -0.016025641025641024
  - -0.01927710843373494
  - -0.017670682730923697
  train_neg_label_ranking_loss_oob:
  - -0.02931726907630522
  - -0.028915662650602407
  - -0.029246794871794872
  - -0.02610441767068273
  - -0.030120481927710843
  train_precision_macro:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615385
  - 0.8397590361445784
  - 0.8457831325301205
  train_precision_macro_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384615
  - 0.8246987951807229
  - 0.8265060240963855
  train_precision_micro:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615384
  - 0.8397590361445784
  - 0.8457831325301205
  train_precision_micro_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8265060240963855
  train_precision_samples:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615384
  - 0.8397590361445784
  - 0.8457831325301205
  train_precision_samples_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8265060240963855
  train_precision_weighted:
  - 0.8035253184576012
  - 0.8078169135873638
  - 0.7927930512208555
  - 0.797832478238312
  - 0.8063123306623625
  train_precision_weighted_oob:
  - 0.7786583086522701
  - 0.7849311120078399
  - 0.7817835505783
  - 0.7788839568801521
  - 0.7826655905920332
  train_recall_macro:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615385
  - 0.8397590361445784
  - 0.8457831325301205
  train_recall_macro_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384615
  - 0.8246987951807229
  - 0.8265060240963855
  train_recall_micro:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615384
  - 0.8397590361445784
  - 0.8457831325301205
  train_recall_micro_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8265060240963855
  train_recall_samples:
  - 0.8433734939759037
  - 0.846987951807229
  - 0.8353365384615384
  - 0.8397590361445784
  - 0.8457831325301205
  train_recall_samples_oob:
  - 0.8234939759036145
  - 0.8283132530120482
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8265060240963855
  train_recall_weighted:
  - 0.8035253184576012
  - 0.8078169135873638
  - 0.7927930512208555
  - 0.797832478238312
  - 0.8063123306623625
  train_recall_weighted_oob:
  - 0.7786583086522701
  - 0.7849311120078399
  - 0.7817835505783
  - 0.7788839568801521
  - 0.7826655905920332
  train_roc_auc_macro:
  - 0.9945319658565228
  - 0.9956249519958457
  - 0.9936701449390768
  - 0.9925736386551346
  - 0.9955362838097311
  train_roc_auc_macro_oob:
  - 0.9896788621708318
  - 0.987868030421529
  - 0.9887561208020915
  - 0.979621953195111
  - 0.9854496100059585
  train_roc_auc_micro:
  - 0.9952055756097842
  - 0.9964846789789581
  - 0.9956350461511919
  - 0.9940056553328864
  - 0.9959530468683786
  train_roc_auc_micro_oob:
  - 0.9909284798039921
  - 0.9911876199061553
  - 0.9925218774860779
  - 0.9880536871383554
  - 0.9903786145204909
  train_roc_auc_samples:
  - 0.9815261044176707
  - 0.9799196787148593
  - 0.9839743589743589
  - 0.980722891566265
  - 0.9823293172690762
  train_roc_auc_samples_oob:
  - 0.9706827309236948
  - 0.9710843373493976
  - 0.9707532051282051
  - 0.9738955823293172
  - 0.9698795180722891
  train_roc_auc_weighted:
  - 0.9951820854464575
  - 0.996567667063171
  - 0.9963177903001442
  - 0.9937225038705381
  - 0.9955182712743089
  train_roc_auc_weighted_oob:
  - 0.9910170759496995
  - 0.9918730018261317
  - 0.9936699225138957
  - 0.9897079577815101
  - 0.9911979941783045
start: 2023-12-21 17:01:29.215161
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
