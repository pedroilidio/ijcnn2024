active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r8AmJmZmZnZvwA0MzMzM+M/AM3MzMzMBEAAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:16:26.527056
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e06a138b787fc134a0ba710b9883525c656927db462d267db1b5d2b4712c69ce
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e06a138_20231212T161522653655_embedding_proba__5_PlantGO.yml
results:
  fit_time:
  - 26.904139041900635
  - 25.451194047927856
  - 26.721171617507935
  - 28.042500019073486
  - 29.40827441215515
  score_time:
  - 7.243116855621338
  - 7.214595079421997
  - 8.158012866973877
  - 7.931466102600098
  - 7.85459566116333
  test_average_precision_macro:
  - 0.78057748582851
  - 0.742646939308309
  - 0.7625900821754154
  - 0.8407942867647099
  - 0.8275423756542851
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8654586496450524
  - 0.8269524291449704
  - 0.8312420563921435
  - 0.8662377607059195
  - 0.8617572932526179
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.87908710015309
  - 0.882284580498866
  - 0.9028227328227326
  - 0.8915001233654083
  - 0.8994500846023689
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.866100574065778
  - 0.8315012206835426
  - 0.8577707653134793
  - 0.8891498397112275
  - 0.8776830249467908
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9631979695431472
  - 0.9570578231292517
  - 0.9602564102564103
  - 0.9602763385146805
  - 0.9581218274111675
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9631979695431472
  - 0.9570578231292517
  - 0.9602564102564103
  - 0.9602763385146805
  - 0.9581218274111675
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9631979695431472
  - 0.9570578231292516
  - 0.9602564102564103
  - 0.9602763385146804
  - 0.9581218274111675
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9510736159767402
  - 0.9387514439738158
  - 0.9452747252747253
  - 0.9429802710243126
  - 0.9413609807489703
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.929904881149878
  - 0.9187211653743045
  - 0.9242795717483219
  - 0.9242598515116107
  - 0.9206720048343046
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9290085679314566
  - 0.9176518548715858
  - 0.9235511713933415
  - 0.9235880398671097
  - 0.9196102314250914
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.934021308640598
  - 0.9231666292890782
  - 0.9300535362073823
  - 0.9292831520810796
  - 0.9255647905394097
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9081609749137624
  - 0.8857737780534515
  - 0.8971828004766157
  - 0.8927222461433847
  - 0.8904612183345334
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8790871001530898
  - 0.8822845804988662
  - 0.902822732822733
  - 0.8915001233654083
  - 0.899450084602369
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4983900956714566
  - 0.42276464627098137
  - 0.4359838737191489
  - 0.48315363709268583
  - 0.4492471972554126
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7541685926749279
  - 0.7085219003595954
  - 0.7351360599284862
  - 0.7334460747456799
  - 0.7177661860153971
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6650957760435818
  - 0.6158375632578205
  - 0.680402643504621
  - 0.6624256184158103
  - 0.6493594761748761
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7048784574472607
  - 0.6533013802788176
  - 0.676625766706965
  - 0.6843444696285251
  - 0.669325236307996
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.910614207389398
  - 0.9134781235602603
  - 0.9282481668183499
  - 0.9205535385709258
  - 0.9258151821315422
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.50253807106599
  - -1.4591836734693877
  - -1.476923076923077
  - -1.378238341968912
  - -1.365482233502538
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03680203045685279
  - -0.0429421768707483
  - -0.03974358974358974
  - -0.039723661485319514
  - -0.04187817258883248
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03680203045685279
  - -0.0429421768707483
  - -0.03974358974358974
  - -0.039723661485319514
  - -0.04187817258883249
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.036802030456852784
  - -0.042942176870748285
  - -0.03974358974358974
  - -0.039723661485319514
  - -0.04187817258883248
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.048926384023259696
  - -0.06124855602618405
  - -0.054725274725274727
  - -0.057019728975687516
  - -0.05863901925102959
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03615597600369174
  - -0.032169483955198246
  - -0.033776223776223774
  - -0.025294394724446542
  - -0.0251046847493548
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9631979695431472
  - 0.9570578231292517
  - 0.9602564102564103
  - 0.9602763385146805
  - 0.9581218274111675
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9631979695431472
  - 0.9570578231292517
  - 0.9602564102564103
  - 0.9602763385146805
  - 0.9581218274111675
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9631979695431472
  - 0.9570578231292516
  - 0.9602564102564103
  - 0.9602763385146804
  - 0.9581218274111675
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9510736159767402
  - 0.9387514439738158
  - 0.9452747252747253
  - 0.9429802710243126
  - 0.9413609807489703
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9631979695431472
  - 0.9570578231292517
  - 0.9602564102564103
  - 0.9602763385146805
  - 0.9581218274111675
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9631979695431472
  - 0.9570578231292517
  - 0.9602564102564103
  - 0.9602763385146805
  - 0.9581218274111675
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9631979695431472
  - 0.9570578231292516
  - 0.9602564102564103
  - 0.9602763385146804
  - 0.9581218274111675
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9510736159767402
  - 0.9387514439738158
  - 0.9452747252747253
  - 0.9429802710243126
  - 0.9413609807489703
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9762855106788596
  - 0.9586320018549029
  - 0.9525557069510224
  - 0.9790285614167913
  - 0.9785902860741693
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9797211909298655
  - 0.9729324634103333
  - 0.9684730605857366
  - 0.9824136075025545
  - 0.9823398155292137
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9638440239963082
  - 0.9678305160448017
  - 0.9662237762237761
  - 0.9747056052755535
  - 0.9748953152506452
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9746051345289447
  - 0.9678965089141182
  - 0.9665856152330404
  - 0.9777439024400488
  - 0.9753860500597382
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9587669678017049
  - 0.9768623632244658
  - 0.9658492444107227
  - 0.9697755426069837
  - 0.9680835810937266
  train_average_precision_macro_oob:
  - 0.8316859829936676
  - 0.8573559000298513
  - 0.8467269655178797
  - 0.8485726934228176
  - 0.8548046392471939
  train_average_precision_micro:
  - 0.9715706012953593
  - 0.9797075972684968
  - 0.9707039995851112
  - 0.9703965338648342
  - 0.9725448735406923
  train_average_precision_micro_oob:
  - 0.9081488358898259
  - 0.9215949819025374
  - 0.9082681521466336
  - 0.905545812940284
  - 0.9117097816888933
  train_average_precision_samples:
  - 0.9684165599658556
  - 0.9688832054560954
  - 0.9686036611323968
  - 0.9668789808917198
  - 0.9678830559112249
  train_average_precision_samples_oob:
  - 0.931721134890149
  - 0.93635722404904
  - 0.9347092987897585
  - 0.9306288545142049
  - 0.9340299371989512
  train_average_precision_weighted:
  - 0.9754740715157308
  - 0.9856846982170603
  - 0.9768306401930197
  - 0.9785007612622928
  - 0.9783916566668862
  train_average_precision_weighted_oob:
  - 0.9090318219716789
  - 0.9230060259933118
  - 0.9098645636727308
  - 0.9092249041920513
  - 0.9174680756519918
  train_f1_macro:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316349
  - 0.9763124199743917
  train_f1_macro_oob:
  - 0.9652155356380708
  - 0.9635549872122761
  - 0.9642401021711368
  - 0.9641188959660297
  - 0.9658557405036278
  train_f1_micro:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316348
  - 0.9763124199743918
  train_f1_micro_oob:
  - 0.9652155356380708
  - 0.9635549872122762
  - 0.9642401021711366
  - 0.9641188959660297
  - 0.9658557405036279
  train_f1_samples:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316348
  - 0.9763124199743918
  train_f1_samples_oob:
  - 0.9652155356380709
  - 0.9635549872122762
  - 0.9642401021711365
  - 0.9641188959660296
  - 0.9658557405036278
  train_f1_weighted:
  - 0.9767123579307851
  - 0.9758504670628889
  - 0.9727946677548799
  - 0.9741523097631958
  - 0.9735685763453795
  train_f1_weighted_oob:
  - 0.9578240333818938
  - 0.9566461274282265
  - 0.9566528372894422
  - 0.9544679987065628
  - 0.9589281618753825
  train_jaccard_macro:
  - 0.9572638009138242
  - 0.9550588393760019
  - 0.9531121632715469
  - 0.9542081897252399
  - 0.953804863329656
  train_jaccard_macro_oob:
  - 0.9330785683544299
  - 0.9299811708560536
  - 0.9312818757763431
  - 0.9311966732492755
  - 0.9341873247627648
  train_jaccard_micro:
  - 0.95718909888274
  - 0.955
  - 0.9530243192683434
  - 0.9541541333886526
  - 0.9537210756722951
  train_jaccard_micro_oob:
  - 0.9327696432254073
  - 0.9296730413325108
  - 0.9309494451294698
  - 0.9307235089157614
  - 0.9339661576557986
  train_jaccard_samples:
  - 0.960625290202755
  - 0.9582305162867822
  - 0.9567119980913084
  - 0.9577350038496535
  - 0.9574453715298786
  train_jaccard_samples_oob:
  - 0.9376567094876954
  - 0.934532475197437
  - 0.9357051632913702
  - 0.9356729894309511
  - 0.938754203542936
  train_jaccard_weighted:
  - 0.9545443340562731
  - 0.9528931219480902
  - 0.9471320520851109
  - 0.9496716901792747
  - 0.948645815597544
  train_jaccard_weighted_oob:
  - 0.9194416298963889
  - 0.9172218304446159
  - 0.9173376918618079
  - 0.9135780036028371
  - 0.9213885654121196
  train_label_ranking_average_precision_score:
  - 0.9684165599658556
  - 0.9688832054560954
  - 0.9686036611323968
  - 0.9668789808917198
  - 0.9678830559112249
  train_label_ranking_average_precision_score_oob:
  - 0.9317211348901492
  - 0.9363572240490401
  - 0.9347092987897585
  - 0.9306288545142049
  - 0.9340299371989516
  train_matthews_corrcoef_macro:
  - 0.6536145775630123
  - 0.6156682599583804
  - 0.6492775447010749
  - 0.643055048743472
  - 0.6076838274708148
  train_matthews_corrcoef_macro_oob:
  - 0.4214731529418509
  - 0.4145685930509353
  - 0.4296108957438968
  - 0.44808676218131177
  - 0.4421170623826456
  train_matthews_corrcoef_micro:
  - 0.8593338946122916
  - 0.8514584960285944
  - 0.8446002448979136
  - 0.8485674962638987
  - 0.8471446272243615
  train_matthews_corrcoef_micro_oob:
  - 0.7682926738795517
  - 0.755644181600399
  - 0.7610432012478726
  - 0.760488359633469
  - 0.7731559970921807
  train_matthews_corrcoef_samples:
  - 0.80484205800084
  - 0.7802620691434913
  - 0.7821096349654665
  - 0.7824441183760732
  - 0.7885654432907723
  train_matthews_corrcoef_samples_oob:
  - 0.6879178387964109
  - 0.6601939971739474
  - 0.6663942363449064
  - 0.6769814186536373
  - 0.6904981673991122
  train_matthews_corrcoef_weighted:
  - 0.8350079521231338
  - 0.8197720385672961
  - 0.8201893483280824
  - 0.8238790617011934
  - 0.8151808661807973
  train_matthews_corrcoef_weighted_oob:
  - 0.7051430852020204
  - 0.6909254578680077
  - 0.7024571714071325
  - 0.703975895368629
  - 0.7149097738410009
  train_ndgc:
  - 0.9767113440459203
  - 0.9770369225074682
  - 0.9767761030356427
  - 0.9756245138187066
  - 0.9763188042298093
  train_ndgc_oob:
  - 0.9501542443051403
  - 0.9535555506623624
  - 0.9522791152395084
  - 0.9491055893415233
  - 0.9519175882049
  train_neg_coverage_error:
  - -1.144686299615877
  - -1.145780051150895
  - -1.1468710089399745
  - -1.1490445859872611
  - -1.147247119078105
  train_neg_coverage_error_oob:
  - -1.3111395646606914
  - -1.2902813299232736
  - -1.3052362707535121
  - -1.305732484076433
  - -1.3149807938540332
  train_neg_hamming_loss_macro:
  - -0.021873666239863424
  - -0.023017902813299237
  - -0.024052788420604515
  - -0.02346072186836518
  - -0.023687580025608192
  train_neg_hamming_loss_macro_oob:
  - -0.03478446436192915
  - -0.03644501278772378
  - -0.035759897828863345
  - -0.035881104033970275
  - -0.03414425949637217
  train_neg_hamming_loss_micro:
  - -0.021873666239863424
  - -0.023017902813299233
  - -0.02405278842060451
  - -0.023460721868365182
  - -0.023687580025608196
  train_neg_hamming_loss_micro_oob:
  - -0.03478446436192915
  - -0.03644501278772379
  - -0.035759897828863345
  - -0.035881104033970275
  - -0.034144259496372176
  train_neg_hamming_loss_samples:
  - -0.02187366623986342
  - -0.023017902813299233
  - -0.024052788420604508
  - -0.02346072186836518
  - -0.023687580025608196
  train_neg_hamming_loss_samples_oob:
  - -0.03478446436192915
  - -0.03644501278772378
  - -0.035759897828863345
  - -0.035881104033970275
  - -0.034144259496372176
  train_neg_hamming_loss_weighted:
  - -0.02328764206921512
  - -0.024149532937111095
  - -0.027205332245120045
  - -0.025847690236804312
  - -0.026431423654620485
  train_neg_hamming_loss_weighted_oob:
  - -0.042175966618106395
  - -0.04335387257177356
  - -0.04334716271055795
  - -0.0455320012934373
  - -0.04107183812461744
  train_neg_label_ranking_loss:
  - -0.006000465603538587
  - -0.006120669611718205
  - -0.006165099268547544
  - -0.006260267215681228
  - -0.0061285065766499836
  train_neg_label_ranking_loss_oob:
  - -0.018916221541061488
  - -0.017541786147924256
  - -0.018335547901320567
  - -0.018986038731261663
  - -0.01925529300689352
  train_precision_macro:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316349
  - 0.9763124199743917
  train_precision_macro_oob:
  - 0.9652155356380708
  - 0.9635549872122761
  - 0.9642401021711368
  - 0.9641188959660297
  - 0.9658557405036278
  train_precision_micro:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316348
  - 0.9763124199743918
  train_precision_micro_oob:
  - 0.9652155356380708
  - 0.9635549872122762
  - 0.9642401021711366
  - 0.9641188959660297
  - 0.9658557405036279
  train_precision_samples:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316348
  - 0.9763124199743918
  train_precision_samples_oob:
  - 0.9652155356380709
  - 0.9635549872122762
  - 0.9642401021711365
  - 0.9641188959660296
  - 0.9658557405036278
  train_precision_weighted:
  - 0.9767123579307851
  - 0.9758504670628889
  - 0.9727946677548799
  - 0.9741523097631958
  - 0.9735685763453795
  train_precision_weighted_oob:
  - 0.9578240333818938
  - 0.9566461274282265
  - 0.9566528372894422
  - 0.9544679987065628
  - 0.9589281618753825
  train_recall_macro:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316349
  - 0.9763124199743917
  train_recall_macro_oob:
  - 0.9652155356380708
  - 0.9635549872122761
  - 0.9642401021711368
  - 0.9641188959660297
  - 0.9658557405036278
  train_recall_micro:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316348
  - 0.9763124199743918
  train_recall_micro_oob:
  - 0.9652155356380708
  - 0.9635549872122762
  - 0.9642401021711366
  - 0.9641188959660297
  - 0.9658557405036279
  train_recall_samples:
  - 0.9781263337601366
  - 0.9769820971867008
  - 0.9759472115793955
  - 0.9765392781316348
  - 0.9763124199743918
  train_recall_samples_oob:
  - 0.9652155356380709
  - 0.9635549872122762
  - 0.9642401021711365
  - 0.9641188959660296
  - 0.9658557405036278
  train_recall_weighted:
  - 0.9767123579307851
  - 0.9758504670628889
  - 0.9727946677548799
  - 0.9741523097631958
  - 0.9735685763453795
  train_recall_weighted_oob:
  - 0.9578240333818938
  - 0.9566461274282265
  - 0.9566528372894422
  - 0.9544679987065628
  - 0.9589281618753825
  train_roc_auc_macro:
  - 0.9971989829534444
  - 0.998662646377879
  - 0.9974041881073897
  - 0.9975254731070661
  - 0.9976098045628036
  train_roc_auc_macro_oob:
  - 0.9804905079325351
  - 0.9859945101964643
  - 0.9828160316561764
  - 0.9829826165314572
  - 0.9825487771819442
  train_roc_auc_micro:
  - 0.9973296009891038
  - 0.9980662669201645
  - 0.997325202976364
  - 0.9973275560637574
  - 0.9975124990490194
  train_roc_auc_micro_oob:
  - 0.9860236193064578
  - 0.9877481627591314
  - 0.9865234627736539
  - 0.9862417785389482
  - 0.9866716680943546
  train_roc_auc_samples:
  - 0.9939995343964614
  - 0.9938793303882818
  - 0.9938349007314525
  - 0.9937397327843187
  - 0.99387149342335
  train_roc_auc_samples_oob:
  - 0.9810837784589385
  - 0.9824582138520758
  - 0.9816644520986794
  - 0.9810139612687383
  - 0.9807447069931065
  train_roc_auc_weighted:
  - 0.9972061324002085
  - 0.9981801411386262
  - 0.9970108157083759
  - 0.9969685279999921
  - 0.9971199551968115
  train_roc_auc_weighted_oob:
  - 0.9864960793399618
  - 0.9875459664122721
  - 0.9857128495885145
  - 0.9852469065590896
  - 0.9859519163667835
start: 2023-12-12 16:15:22.653655
wrapper: null
