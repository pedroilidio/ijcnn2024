active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz87+AZmZmZmYGQACYmZmZmcm/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:26:16.227311
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__8
  params: {}
hash: d96aa7e6924f0ada7759eb055726b0f178127c5de1cfc551be5cbfb3ce10fa1c
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d96aa7e_20231221T202451865747_embedding_proba__8_GrampositivePseAAC.yml
results:
  fit_time:
  - 59.95611047744751
  - 60.7805917263031
  - 61.0228807926178
  - 61.422980070114136
  - 60.76233506202698
  score_time:
  - 7.167237043380737
  - 6.9039647579193115
  - 6.875275135040283
  - 7.300171852111816
  - 7.016303300857544
  test_average_precision_macro:
  - 0.34056945274744554
  - 0.38157764142182016
  - 0.4491625854668422
  - 0.34469451603845186
  - 0.3606532177517406
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.44783878679132316
  - 0.44784118110855387
  - 0.4786383908156838
  - 0.46283136734349023
  - 0.47307581618549327
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6777777777777777
  - 0.6963696369636961
  - 0.6955128205128205
  - 0.7003205128205128
  - 0.6849206349206348
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4315563040620318
  - 0.4612454122126064
  - 0.47354689805710826
  - 0.4454465688326723
  - 0.4818708205205702
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6836477987421384
  - 0.6638516792855755
  - 0.6720695970695971
  - 0.6751831501831502
  - 0.6790022675736961
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6256970858500769
  - 0.6167978502978503
  - 0.6179965844675858
  - 0.6173036657549128
  - 0.6270262304745063
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6061185468451242
  - 0.5936883629191322
  - 0.5969289827255279
  - 0.5969289827255279
  - 0.6061185468451242
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6088888888888887
  - 0.5986798679867986
  - 0.5974358974358972
  - 0.5987179487179486
  - 0.6076190476190475
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5257705909797153
  - 0.5039321673243242
  - 0.5134611510617555
  - 0.5162064290091075
  - 0.5194812849985264
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6777777777777781
  - 0.6963696369636965
  - 0.6955128205128206
  - 0.7003205128205129
  - 0.6849206349206349
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.08651891026449454
  - 0.003143977946203889
  - 0.0
  - 0.007576792656726439
  - 0.042666009299143076
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.14598374184985416
  - 0.053824686876962784
  - 0.0
  - 0.03961660067615511
  - 0.11980845957463075
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.02857142857142857
  - 0.016501650165016504
  - 0.0
  - 0.006410256410256411
  - 0.01904761904761905
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1089922609319923
  - 0.005055023364484685
  - 0.0
  - 0.011834228530506058
  - 0.06826561487862892
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7600499772123293
  - 0.7743462030934524
  - 0.7730428506016936
  - 0.777034221877627
  - 0.7652462098565274
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.838095238095238
  - -1.7920792079207921
  - -1.8076923076923077
  - -1.8269230769230769
  - -1.819047619047619
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24523809523809523
  - -0.25495049504950495
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.24523809523809526
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24523809523809523
  - -0.25495049504950495
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.24523809523809523
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24523809523809523
  - -0.25495049504950495
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.24523809523809523
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3163522012578616
  - -0.33614832071442435
  - -0.327930402930403
  - -0.32481684981684983
  - -0.3209977324263038
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.27619047619047615
  - -0.2599009900990099
  - -0.266025641025641
  - -0.2708333333333333
  - -0.27301587301587293
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6836477987421384
  - 0.6638516792855755
  - 0.6720695970695971
  - 0.6751831501831502
  - 0.6790022675736961
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7547619047619047
  - 0.745049504950495
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.7547619047619047
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6836477987421384
  - 0.6638516792855755
  - 0.6720695970695971
  - 0.6751831501831502
  - 0.6790022675736961
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.602028790889293
  - 0.692834902766746
  - 0.6888180808789153
  - 0.6059382420800582
  - 0.5608852930060914
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7256038937627689
  - 0.7535385014933126
  - 0.7463788087582299
  - 0.7376512019598835
  - 0.7446107331821616
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7238095238095238
  - 0.7400990099009901
  - 0.733974358974359
  - 0.7291666666666667
  - 0.7269841269841271
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6004240501543415
  - 0.63664764865693
  - 0.6222062378948775
  - 0.6244854354877156
  - 0.6297724645413721
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7354897357149709
  - 0.788570878283143
  - 0.7632093268475622
  - 0.7593050644292709
  - 0.7926185792524492
  train_average_precision_macro_oob:
  - 0.6776473734897035
  - 0.7138354248325998
  - 0.6535975065045709
  - 0.6583108171998995
  - 0.7151056794644413
  train_average_precision_micro:
  - 0.7934970991318835
  - 0.81354352022675
  - 0.840096639706837
  - 0.8233389065052296
  - 0.8220647668744856
  train_average_precision_micro_oob:
  - 0.7724986656444789
  - 0.7824961238488349
  - 0.8199206928695383
  - 0.7975042945661956
  - 0.7970006227667213
  train_average_precision_samples:
  - 0.8297101449275363
  - 0.8401116427432217
  - 0.8546184738955823
  - 0.8475903614457831
  - 0.841988727858293
  train_average_precision_samples_oob:
  - 0.8097826086956522
  - 0.8259569377990431
  - 0.8383534136546184
  - 0.8305220883534137
  - 0.823268921095008
  train_average_precision_weighted:
  - 0.7839409758105812
  - 0.8095039122266205
  - 0.8300735470626747
  - 0.817264213254838
  - 0.8130509037022902
  train_average_precision_weighted_oob:
  - 0.7669243954755001
  - 0.7836521692502347
  - 0.809289210122546
  - 0.7911372112795274
  - 0.795373061586505
  train_f1_macro:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.8692771084337348
  - 0.8677536231884058
  train_f1_macro_oob:
  - 0.858695652173913
  - 0.8403110047846891
  - 0.8487951807228915
  - 0.8506024096385542
  - 0.8484299516908211
  train_f1_micro:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.869277108433735
  - 0.8677536231884058
  train_f1_micro_oob:
  - 0.8586956521739131
  - 0.840311004784689
  - 0.8487951807228916
  - 0.8506024096385543
  - 0.8484299516908212
  train_f1_samples:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.869277108433735
  - 0.8677536231884058
  train_f1_samples_oob:
  - 0.8586956521739131
  - 0.840311004784689
  - 0.8487951807228916
  - 0.8506024096385543
  - 0.8484299516908212
  train_f1_weighted:
  - 0.8343122603366583
  - 0.8329052495198264
  - 0.833291058972733
  - 0.8346284660171787
  - 0.8331888680858932
  train_f1_weighted_oob:
  - 0.8196167703518344
  - 0.7993556012683404
  - 0.8096327895313311
  - 0.8100536115754885
  - 0.8079016711739825
  train_jaccard_macro:
  - 0.7739504938452624
  - 0.7723565317303269
  - 0.7726286685131103
  - 0.774421261035827
  - 0.772117325510682
  train_jaccard_macro_oob:
  - 0.7594313274631248
  - 0.7323784003501802
  - 0.7444367865040942
  - 0.7474841200786702
  - 0.7442978671699767
  train_jaccard_micro:
  - 0.7682861719167111
  - 0.7665081880612784
  - 0.766897285790314
  - 0.768779968034097
  - 0.7664
  train_jaccard_micro_oob:
  - 0.7523809523809524
  - 0.7246003094378546
  - 0.7373103087388801
  - 0.740041928721174
  - 0.7367593078133193
  train_jaccard_samples:
  - 0.790660225442834
  - 0.7888357256778309
  - 0.7892369477911645
  - 0.791164658634538
  - 0.7884057971014492
  train_jaccard_samples_oob:
  - 0.7742351046698872
  - 0.7451355661881975
  - 0.7583935742971886
  - 0.7612851405622488
  - 0.7578099838969403
  train_jaccard_weighted:
  - 0.7177749230601057
  - 0.7161070069948122
  - 0.7162804600429258
  - 0.7182311011056697
  - 0.7163836138919165
  train_jaccard_weighted_oob:
  - 0.6972073669755645
  - 0.66788612872971
  - 0.6820571249283984
  - 0.6832464729997259
  - 0.6804126988562761
  train_label_ranking_average_precision_score:
  - 0.8297101449275356
  - 0.8401116427432211
  - 0.8546184738955819
  - 0.8475903614457823
  - 0.8419887278582926
  train_label_ranking_average_precision_score_oob:
  - 0.8097826086956514
  - 0.8259569377990423
  - 0.8383534136546181
  - 0.830522088353413
  - 0.8232689210950076
  train_matthews_corrcoef_macro:
  - 0.4728482514086791
  - 0.47252624896594336
  - 0.47078581472219194
  - 0.4733985768649421
  - 0.47244842778817786
  train_matthews_corrcoef_macro_oob:
  - 0.4501131215967561
  - 0.39843798251017204
  - 0.41947404404880706
  - 0.4273920720392628
  - 0.42516347320392445
  train_matthews_corrcoef_micro:
  - 0.6388544673375843
  - 0.6354021788974603
  - 0.6361713214746041
  - 0.639798238133469
  - 0.6360173218654083
  train_matthews_corrcoef_micro_oob:
  - 0.6075636704735737
  - 0.5490502347517071
  - 0.576502226272123
  - 0.5822426079507944
  - 0.5763457143703455
  train_matthews_corrcoef_samples:
  - 0.48105000130043296
  - 0.476446652005692
  - 0.4774812061165765
  - 0.48230048322501023
  - 0.47659275622405434
  train_matthews_corrcoef_samples_oob:
  - 0.4399871993680658
  - 0.36740992887365936
  - 0.4003727723816367
  - 0.4076016880442873
  - 0.40031896330330646
  train_matthews_corrcoef_weighted:
  - 0.6061564773073153
  - 0.6023520591895639
  - 0.6036400696599417
  - 0.6070114432180396
  - 0.6028286015546075
  train_matthews_corrcoef_weighted_oob:
  - 0.5748076035991904
  - 0.5160767502276031
  - 0.5437411577667345
  - 0.5495705069764071
  - 0.5435418317583566
  train_ndgc:
  - 0.8731654471146075
  - 0.8811718256541303
  - 0.8918477269459465
  - 0.8866219354023005
  - 0.882682841232459
  train_ndgc_oob:
  - 0.8585482633428995
  - 0.8703649647414644
  - 0.8796490658603864
  - 0.8737199249446745
  - 0.8686714924312952
  train_neg_coverage_error:
  - -1.4565217391304348
  - -1.423444976076555
  - -1.3879518072289156
  - -1.4096385542168675
  - -1.4154589371980677
  train_neg_coverage_error_oob:
  - -1.5096618357487923
  - -1.4832535885167464
  - -1.455421686746988
  - -1.472289156626506
  - -1.4830917874396135
  train_neg_hamming_loss_macro:
  - -0.13103864734299517
  - -0.13217703349282298
  - -0.13192771084337349
  - -0.13072289156626504
  - -0.1322463768115942
  train_neg_hamming_loss_macro_oob:
  - -0.14130434782608697
  - -0.159688995215311
  - -0.15120481927710844
  - -0.1493975903614458
  - -0.15157004830917875
  train_neg_hamming_loss_micro:
  - -0.13103864734299517
  - -0.13217703349282298
  - -0.13192771084337349
  - -0.13072289156626507
  - -0.1322463768115942
  train_neg_hamming_loss_micro_oob:
  - -0.14130434782608695
  - -0.159688995215311
  - -0.15120481927710844
  - -0.1493975903614458
  - -0.15157004830917875
  train_neg_hamming_loss_samples:
  - -0.13103864734299517
  - -0.13217703349282298
  - -0.13192771084337349
  - -0.13072289156626507
  - -0.1322463768115942
  train_neg_hamming_loss_samples_oob:
  - -0.14130434782608695
  - -0.159688995215311
  - -0.15120481927710844
  - -0.1493975903614458
  - -0.15157004830917875
  train_neg_hamming_loss_weighted:
  - -0.1656877396633418
  - -0.1670947504801737
  - -0.16670894102726694
  - -0.1653715339828212
  - -0.16681113191410674
  train_neg_hamming_loss_weighted_oob:
  - -0.18038322964816556
  - -0.20064439873165965
  - -0.19036721046866895
  - -0.1899463884245114
  - -0.19209832882601763
  train_neg_label_ranking_loss:
  - -0.14955716586151369
  - -0.13815789473684212
  - -0.12650602409638553
  - -0.13373493975903614
  - -0.13466183574879226
  train_neg_label_ranking_loss_oob:
  - -0.1668679549114332
  - -0.15809409888357256
  - -0.14859437751004015
  - -0.15461847389558234
  - -0.15680354267310787
  train_precision_macro:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.8692771084337348
  - 0.8677536231884058
  train_precision_macro_oob:
  - 0.858695652173913
  - 0.8403110047846891
  - 0.8487951807228915
  - 0.8506024096385542
  - 0.8484299516908211
  train_precision_micro:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.869277108433735
  - 0.8677536231884058
  train_precision_micro_oob:
  - 0.8586956521739131
  - 0.840311004784689
  - 0.8487951807228916
  - 0.8506024096385543
  - 0.8484299516908212
  train_precision_samples:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.869277108433735
  - 0.8677536231884058
  train_precision_samples_oob:
  - 0.8586956521739131
  - 0.840311004784689
  - 0.8487951807228916
  - 0.8506024096385543
  - 0.8484299516908212
  train_precision_weighted:
  - 0.8343122603366583
  - 0.8329052495198264
  - 0.833291058972733
  - 0.8346284660171787
  - 0.8331888680858932
  train_precision_weighted_oob:
  - 0.8196167703518344
  - 0.7993556012683404
  - 0.8096327895313311
  - 0.8100536115754885
  - 0.8079016711739825
  train_recall_macro:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.8692771084337348
  - 0.8677536231884058
  train_recall_macro_oob:
  - 0.858695652173913
  - 0.8403110047846891
  - 0.8487951807228915
  - 0.8506024096385542
  - 0.8484299516908211
  train_recall_micro:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.869277108433735
  - 0.8677536231884058
  train_recall_micro_oob:
  - 0.8586956521739131
  - 0.840311004784689
  - 0.8487951807228916
  - 0.8506024096385543
  - 0.8484299516908212
  train_recall_samples:
  - 0.8689613526570048
  - 0.867822966507177
  - 0.8680722891566265
  - 0.869277108433735
  - 0.8677536231884058
  train_recall_samples_oob:
  - 0.8586956521739131
  - 0.840311004784689
  - 0.8487951807228916
  - 0.8506024096385543
  - 0.8484299516908212
  train_recall_weighted:
  - 0.8343122603366583
  - 0.8329052495198264
  - 0.833291058972733
  - 0.8346284660171787
  - 0.8331888680858932
  train_recall_weighted_oob:
  - 0.8196167703518344
  - 0.7993556012683404
  - 0.8096327895313311
  - 0.8100536115754885
  - 0.8079016711739825
  train_roc_auc_macro:
  - 0.8369309318028524
  - 0.8736430963583521
  - 0.8747812613795427
  - 0.871088889025659
  - 0.8866944196748634
  train_roc_auc_macro_oob:
  - 0.8159855141730126
  - 0.8496737108404557
  - 0.8413317567929
  - 0.835992609744494
  - 0.863625188579729
  train_roc_auc_micro:
  - 0.8748507247470789
  - 0.8964230041145231
  - 0.9097958994984167
  - 0.9010008552342649
  - 0.905299487520387
  train_roc_auc_micro_oob:
  - 0.8587589976444994
  - 0.8708852395518265
  - 0.8907919777484996
  - 0.8780058402484031
  - 0.8851616668341437
  train_roc_auc_samples:
  - 0.8504428341384864
  - 0.8618421052631579
  - 0.8734939759036144
  - 0.8662650602409638
  - 0.8653381642512077
  train_roc_auc_samples_oob:
  - 0.8331320450885668
  - 0.8419059011164275
  - 0.8514056224899598
  - 0.8453815261044176
  - 0.8431964573268922
  train_roc_auc_weighted:
  - 0.8217328765147799
  - 0.8550245616618037
  - 0.8774857417459684
  - 0.8646109835266342
  - 0.8648936206029241
  train_roc_auc_weighted_oob:
  - 0.8047841849019763
  - 0.828766263000026
  - 0.8617862043813305
  - 0.8434556260652412
  - 0.8494146947988225
start: 2023-12-21 20:24:51.865747
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
