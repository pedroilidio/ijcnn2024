active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz47/AmZmZmZkdQIAzMzMzMwNAQGZmZmZmEsBAZmZmZmYSwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 11:26:37.924076
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__1
  params: {}
hash: 5f4b56bac1d652367157b987d7b2799e7790db936258aaf836f36cb9a9aa24f1
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5f4b56b_20231222T112505394141_embedding__1_scene.yml
results:
  fit_time:
  - 51.71208930015564
  - 50.16976284980774
  - 46.02402901649475
  - 46.55794358253479
  - 51.485374212265015
  score_time:
  - 5.038009881973267
  - 5.7791571617126465
  - 5.749948740005493
  - 5.758326768875122
  - 5.231267690658569
  test_average_precision_macro:
  - 0.827205551796097
  - 0.8300581056714303
  - 0.8552503292972404
  - 0.8335506313429649
  - 0.8408085995583261
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8310315157218539
  - 0.8392380312717899
  - 0.864120314865864
  - 0.8473439691209075
  - 0.8533596876959363
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8657676348547718
  - 0.8760724331926864
  - 0.8835768963117605
  - 0.863991769547325
  - 0.8766117969821674
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8167933269500208
  - 0.8182854463060383
  - 0.8451087280375082
  - 0.8231787102440149
  - 0.8306728185266558
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8976486860304288
  - 0.8906469760900141
  - 0.9053583855254002
  - 0.9012345679012347
  - 0.9046639231824418
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8976486860304288
  - 0.8906469760900141
  - 0.9053583855254002
  - 0.9012345679012346
  - 0.9046639231824417
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8976486860304289
  - 0.8906469760900142
  - 0.9053583855254002
  - 0.9012345679012346
  - 0.9046639231824417
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.892910744239428
  - 0.8851333153784001
  - 0.8994473305173892
  - 0.8954264690723693
  - 0.8998149743197116
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8172945763211742
  - 0.8066332511094526
  - 0.830957615743952
  - 0.8244880369344484
  - 0.8291744321811495
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8143036386449184
  - 0.8028526148969889
  - 0.8270820089001907
  - 0.8202247191011236
  - 0.8259236067626801
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8306658763090297
  - 0.8195197910387783
  - 0.8423799582463465
  - 0.8357828728199098
  - 0.8418577307466194
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8097522679960216
  - 0.7979448675795319
  - 0.8215001194192694
  - 0.8151582027480124
  - 0.8213525764583678
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8657676348547717
  - 0.876072433192686
  - 0.8835768963117604
  - 0.8639917695473248
  - 0.8766117969821673
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6130083112600163
  - 0.5846205479067913
  - 0.6480092345873018
  - 0.6231169030989073
  - 0.6403038448911952
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6118597852288667
  - 0.5876146822221942
  - 0.6475274003483533
  - 0.626056130721809
  - 0.6387752916794398
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.48116034961107634
  - 0.45713410584959324
  - 0.5179155869993888
  - 0.4945121046803635
  - 0.5121431914485008
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5976489621648877
  - 0.5663343556606791
  - 0.6279830159392144
  - 0.602930584932149
  - 0.6245472394920002
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9013667218348362
  - 0.909227741195979
  - 0.9144114673941409
  - 0.8995641804219917
  - 0.9087448334213823
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4647302904564314
  - -1.4493670886075949
  - -1.4029227557411275
  - -1.462962962962963
  - -1.4094650205761317
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10235131396957124
  - -0.10935302390998593
  - -0.09464161447459986
  - -0.09876543209876543
  - -0.09533607681755829
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10235131396957123
  - -0.10935302390998594
  - -0.09464161447459986
  - -0.09876543209876543
  - -0.0953360768175583
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10235131396957124
  - -0.10935302390998593
  - -0.09464161447459984
  - -0.09876543209876543
  - -0.0953360768175583
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1070892557605721
  - -0.11486668462159978
  - -0.10055266948261074
  - -0.10457353092763069
  - -0.10018502568028839
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07603734439834026
  - -0.06882911392405064
  - -0.0633089770354906
  - -0.07674897119341563
  - -0.06810699588477366
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8976486860304288
  - 0.8906469760900141
  - 0.9053583855254002
  - 0.9012345679012347
  - 0.9046639231824418
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8976486860304288
  - 0.8906469760900141
  - 0.9053583855254002
  - 0.9012345679012346
  - 0.9046639231824417
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8976486860304289
  - 0.8906469760900142
  - 0.9053583855254002
  - 0.9012345679012346
  - 0.9046639231824417
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.892910744239428
  - 0.8851333153784001
  - 0.8994473305173892
  - 0.8954264690723693
  - 0.8998149743197116
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8976486860304288
  - 0.8906469760900141
  - 0.9053583855254002
  - 0.9012345679012347
  - 0.9046639231824418
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8976486860304288
  - 0.8906469760900141
  - 0.9053583855254002
  - 0.9012345679012346
  - 0.9046639231824417
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8976486860304289
  - 0.8906469760900142
  - 0.9053583855254002
  - 0.9012345679012346
  - 0.9046639231824417
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.892910744239428
  - 0.8851333153784001
  - 0.8994473305173892
  - 0.8954264690723693
  - 0.8998149743197116
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9391577254325442
  - 0.9410569515716588
  - 0.9513345419322669
  - 0.9436106593846011
  - 0.9468299806106021
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9464660490685126
  - 0.9493108816774573
  - 0.9581323845592442
  - 0.9495282719327226
  - 0.9544404069767443
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9239626556016598
  - 0.9311708860759493
  - 0.9366910229645095
  - 0.9232510288065844
  - 0.9318930041152262
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9341062147220202
  - 0.9354021038359758
  - 0.9468764044105715
  - 0.9386853548067503
  - 0.9422289823752554
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9945922053438082
  - 0.9943349931519777
  - 0.993996929639985
  - 0.9933480663381071
  - 0.9943651763946488
  train_average_precision_macro_oob:
  - 0.8622079059423431
  - 0.847825619431176
  - 0.8474037905097048
  - 0.8432113345295936
  - 0.8514639800208058
  train_average_precision_micro:
  - 0.9943910735368299
  - 0.993401307999198
  - 0.9935521991452778
  - 0.99317595212741
  - 0.9938757497445134
  train_average_precision_micro_oob:
  - 0.8669518482376773
  - 0.8560683399933682
  - 0.8540179054127071
  - 0.8520306194734776
  - 0.8584105895814873
  train_average_precision_samples:
  - 0.9895238095238095
  - 0.9893085014657699
  - 0.9878112033195021
  - 0.9881572097865695
  - 0.9892417143848691
  train_average_precision_samples_oob:
  - 0.8847272727272727
  - 0.8777547853078117
  - 0.8770098547717843
  - 0.8750737463126843
  - 0.8808346347388514
  train_average_precision_weighted:
  - 0.994482562406971
  - 0.9942199027518699
  - 0.9939319982224006
  - 0.9933083068748523
  - 0.9942907347817971
  train_average_precision_weighted_oob:
  - 0.8536105400740378
  - 0.838059755511643
  - 0.8380860226346929
  - 0.8331552288027814
  - 0.842130820215731
  train_f1_macro:
  - 0.9566233766233766
  - 0.956113122952233
  - 0.9528872752420471
  - 0.954624327607149
  - 0.9555786916536526
  train_f1_macro_oob:
  - 0.8974891774891777
  - 0.8961889981031214
  - 0.8939315352697096
  - 0.8946729134131529
  - 0.8945861530452889
  train_f1_micro:
  - 0.9566233766233766
  - 0.9561131229522332
  - 0.952887275242047
  - 0.9546243276071491
  - 0.9555786916536526
  train_f1_micro_oob:
  - 0.8974891774891774
  - 0.8961889981031212
  - 0.8939315352697096
  - 0.8946729134131529
  - 0.8945861530452889
  train_f1_samples:
  - 0.9566233766233766
  - 0.9561131229522332
  - 0.9528872752420471
  - 0.9546243276071491
  - 0.9555786916536526
  train_f1_samples_oob:
  - 0.8974891774891776
  - 0.8961889981031214
  - 0.8939315352697096
  - 0.894672913413153
  - 0.894586153045289
  train_f1_weighted:
  - 0.9548908538270241
  - 0.9542785339832154
  - 0.9510688307338724
  - 0.9528394829048479
  - 0.9538878499170597
  train_f1_weighted_oob:
  - 0.8919736742947575
  - 0.8907214209880114
  - 0.88871310132383
  - 0.8890242507406546
  - 0.8891260366899489
  train_jaccard_macro:
  - 0.9172924409667843
  - 0.9163986808934883
  - 0.9105423161271168
  - 0.9136569002184668
  - 0.9153680373307446
  train_jaccard_macro_oob:
  - 0.8178000454979714
  - 0.8157408780028009
  - 0.811797625074664
  - 0.8133882276188404
  - 0.8130150769355774
  train_jaccard_micro:
  - 0.9168533731640528
  - 0.9159164119930618
  - 0.9100140345083795
  - 0.9131878164163001
  - 0.9149360358863599
  train_jaccard_micro_oob:
  - 0.8140411496780273
  - 0.811904389939072
  - 0.8082063305978898
  - 0.8094191522762951
  - 0.8092771368024488
  train_jaccard_samples:
  - 0.9268274582560296
  - 0.9259847757002438
  - 0.9207049002173484
  - 0.923551721573585
  - 0.9253241119456631
  train_jaccard_samples_oob:
  - 0.82860853432282
  - 0.8262754662133865
  - 0.8227622999407231
  - 0.8241367343397535
  - 0.8238392702213628
  train_jaccard_weighted:
  - 0.914138633062502
  - 0.913075003683972
  - 0.9072549752295662
  - 0.9104202860772999
  - 0.9122975026880936
  train_jaccard_weighted_oob:
  - 0.8090379372431394
  - 0.8070817910825518
  - 0.803501953904025
  - 0.8044732658044229
  - 0.8043679413076971
  train_label_ranking_average_precision_score:
  - 0.9895238095238093
  - 0.9893085014657697
  - 0.9878112033195018
  - 0.9881572097865694
  - 0.9892417143848689
  train_label_ranking_average_precision_score_oob:
  - 0.8847272727272727
  - 0.8777547853078116
  - 0.8770098547717848
  - 0.8750737463126841
  - 0.8808346347388514
  train_matthews_corrcoef_macro:
  - 0.8510682074678452
  - 0.8488890174359106
  - 0.8373771102331092
  - 0.8440539978813669
  - 0.8474790292469258
  train_matthews_corrcoef_macro_oob:
  - 0.6113715484500736
  - 0.6018201114610245
  - 0.5931847234711752
  - 0.5963374153313161
  - 0.5985664595449752
  train_matthews_corrcoef_micro:
  - 0.8482918486209282
  - 0.8458284712847223
  - 0.8345311279168272
  - 0.8411964449121779
  - 0.8448518359727386
  train_matthews_corrcoef_micro_oob:
  - 0.613250241414264
  - 0.6058869641668126
  - 0.5970320625687274
  - 0.6009787878673472
  - 0.6015617129562728
  train_matthews_corrcoef_samples:
  - 0.7859575124563796
  - 0.7830151119909625
  - 0.765951564894405
  - 0.7785504425834288
  - 0.780935752937417
  train_matthews_corrcoef_samples_oob:
  - 0.46239247089648794
  - 0.4524447409972088
  - 0.44138016138765696
  - 0.4504017356802479
  - 0.4473072118949273
  train_matthews_corrcoef_weighted:
  - 0.8468998742784033
  - 0.8443904999417362
  - 0.832968028279752
  - 0.8397501863221722
  - 0.8435054679007137
  train_matthews_corrcoef_weighted_oob:
  - 0.5928862588329881
  - 0.5829937866684318
  - 0.5758893409935106
  - 0.5766797628169492
  - 0.5803475893597124
  train_ndgc:
  - 0.9923158701556063
  - 0.9922225600197975
  - 0.9910784223385039
  - 0.9913962233064801
  - 0.9922659464130303
  train_ndgc_oob:
  - 0.9151059977768397
  - 0.9097882946877132
  - 0.9093748649325608
  - 0.9079191568972563
  - 0.9124454489161414
  train_neg_coverage_error:
  - -1.1002597402597403
  - -1.0962234868080702
  - -1.1016597510373445
  - -1.1046330036439354
  - -1.103591879229568
  train_neg_coverage_error_oob:
  - -1.4083116883116884
  - -1.429901707190895
  - -1.4325726141078838
  - -1.4346694429984383
  - -1.4226965122332118
  train_neg_hamming_loss_macro:
  - -0.043376623376623374
  - -0.04388687704776686
  - -0.04711272475795297
  - -0.04537567239285095
  - -0.04442130834634739
  train_neg_hamming_loss_macro_oob:
  - -0.10251082251082251
  - -0.10381100189687877
  - -0.10606846473029045
  - -0.10532708658684713
  - -0.10541384695471108
  train_neg_hamming_loss_micro:
  - -0.043376623376623374
  - -0.04388687704776686
  - -0.04711272475795297
  - -0.045375672392850945
  - -0.04442130834634739
  train_neg_hamming_loss_micro_oob:
  - -0.10251082251082251
  - -0.10381100189687877
  - -0.10606846473029045
  - -0.10532708658684713
  - -0.1054138469547111
  train_neg_hamming_loss_samples:
  - -0.043376623376623374
  - -0.04388687704776685
  - -0.04711272475795297
  - -0.04537567239285094
  - -0.04442130834634739
  train_neg_hamming_loss_samples_oob:
  - -0.1025108225108225
  - -0.10381100189687875
  - -0.10606846473029045
  - -0.10532708658684711
  - -0.1054138469547111
  train_neg_hamming_loss_weighted:
  - -0.04510914617297597
  - -0.045721466016784715
  - -0.04893116926612773
  - -0.04716051709515202
  - -0.04611215008294023
  train_neg_hamming_loss_weighted_oob:
  - -0.10802632570524254
  - -0.10927857901198866
  - -0.11128689867617005
  - -0.1109757492593453
  - -0.11087396331005103
  train_neg_label_ranking_loss:
  - -0.005090909090909091
  - -0.005031039834454217
  - -0.005588692946058091
  - -0.0055700156168662154
  - -0.004971369078604894
  train_neg_label_ranking_loss_oob:
  - -0.06481818181818182
  - -0.07002069322296949
  - -0.069774377593361
  - -0.06998958875585631
  - -0.06671004685059866
  train_precision_macro:
  - 0.9566233766233766
  - 0.956113122952233
  - 0.9528872752420471
  - 0.954624327607149
  - 0.9555786916536526
  train_precision_macro_oob:
  - 0.8974891774891777
  - 0.8961889981031214
  - 0.8939315352697096
  - 0.8946729134131529
  - 0.8945861530452889
  train_precision_micro:
  - 0.9566233766233766
  - 0.9561131229522332
  - 0.952887275242047
  - 0.9546243276071491
  - 0.9555786916536526
  train_precision_micro_oob:
  - 0.8974891774891774
  - 0.8961889981031212
  - 0.8939315352697096
  - 0.8946729134131529
  - 0.8945861530452889
  train_precision_samples:
  - 0.9566233766233766
  - 0.9561131229522332
  - 0.9528872752420471
  - 0.9546243276071491
  - 0.9555786916536526
  train_precision_samples_oob:
  - 0.8974891774891776
  - 0.8961889981031214
  - 0.8939315352697096
  - 0.894672913413153
  - 0.894586153045289
  train_precision_weighted:
  - 0.9548908538270241
  - 0.9542785339832154
  - 0.9510688307338724
  - 0.9528394829048479
  - 0.9538878499170597
  train_precision_weighted_oob:
  - 0.8919736742947575
  - 0.8907214209880114
  - 0.88871310132383
  - 0.8890242507406546
  - 0.8891260366899489
  train_recall_macro:
  - 0.9566233766233766
  - 0.956113122952233
  - 0.9528872752420471
  - 0.954624327607149
  - 0.9555786916536526
  train_recall_macro_oob:
  - 0.8974891774891777
  - 0.8961889981031214
  - 0.8939315352697096
  - 0.8946729134131529
  - 0.8945861530452889
  train_recall_micro:
  - 0.9566233766233766
  - 0.9561131229522332
  - 0.952887275242047
  - 0.9546243276071491
  - 0.9555786916536526
  train_recall_micro_oob:
  - 0.8974891774891774
  - 0.8961889981031212
  - 0.8939315352697096
  - 0.8946729134131529
  - 0.8945861530452889
  train_recall_samples:
  - 0.9566233766233766
  - 0.9561131229522332
  - 0.9528872752420471
  - 0.9546243276071491
  - 0.9555786916536526
  train_recall_samples_oob:
  - 0.8974891774891776
  - 0.8961889981031214
  - 0.8939315352697096
  - 0.894672913413153
  - 0.894586153045289
  train_recall_weighted:
  - 0.9548908538270241
  - 0.9542785339832154
  - 0.9510688307338724
  - 0.9528394829048479
  - 0.9538878499170597
  train_recall_weighted_oob:
  - 0.8919736742947575
  - 0.8907214209880114
  - 0.88871310132383
  - 0.8890242507406546
  - 0.8891260366899489
  train_roc_auc_macro:
  - 0.9986460853259892
  - 0.9986104353584295
  - 0.9985292430835906
  - 0.9983960633704384
  - 0.9985998237335285
  train_roc_auc_macro_oob:
  - 0.9527251842365256
  - 0.947786044126476
  - 0.9463424889902471
  - 0.9467497084600907
  - 0.9488047370515491
  train_roc_auc_micro:
  - 0.9986882404082744
  - 0.9984613132508356
  - 0.998475355270029
  - 0.9984018919012954
  - 0.9985714127280495
  train_roc_auc_micro_oob:
  - 0.9578136340585459
  - 0.9536798687236275
  - 0.9523259831832925
  - 0.9529405414145052
  - 0.9542233670114169
  train_roc_auc_samples:
  - 0.9949090909090909
  - 0.9949689601655457
  - 0.9944113070539419
  - 0.9944299843831338
  - 0.995028630921395
  train_roc_auc_samples_oob:
  - 0.9351818181818181
  - 0.9299793067770306
  - 0.930225622406639
  - 0.9300104112441436
  - 0.9332899531494013
  train_roc_auc_weighted:
  - 0.9985914431485488
  - 0.998554348379816
  - 0.9984872651462059
  - 0.9983723696134894
  - 0.9985586788909363
  train_roc_auc_weighted_oob:
  - 0.9486991939217811
  - 0.9435398579579999
  - 0.9420173488099843
  - 0.9425089366713476
  - 0.9444651563651646
start: 2023-12-22 11:25:05.394141
wrapper: null
