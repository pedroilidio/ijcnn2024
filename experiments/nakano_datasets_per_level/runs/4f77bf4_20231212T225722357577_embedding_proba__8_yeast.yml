active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ+b9gZmZmZmYawKCZmZmZmRFAoJmZmZmZFUCAmZmZmZn5vw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z/QzMzMzMwMQJiZmZmZmRHAMDMzMzMzA8DQzMzMzMwEQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP2BmZmZmZva/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMzE0BkZmZmZmYkwHBmZmZmZg5AkJmZmZmZCcA4MzMzMzMTQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AJiZmZmZ6b8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AzczMzMz8PwAzMzMzM/O/AJiZmZmZyb8AmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkDQzMzMzMz8P4CZmZmZmcm/MDMzMzMz87+YmZmZmZkJwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzI8AgMzMzMzMhwODMzMzMzCpAgDMzMzMzC0AAZ2ZmZmb2Pw==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 23:08:46.979219
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 4f77bf4f3c30410e5e9c599ae822582e767f271c23d784744b51b78680148afb
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4f77bf4_20231212T225722357577_embedding_proba__8_yeast.yml
results:
  fit_time:
  - 529.3364024162292
  - 541.8730049133301
  - 562.3462097644806
  - 540.8817286491394
  - 551.1208741664886
  score_time:
  - 38.16974592208862
  - 32.36230397224426
  - 26.981245040893555
  - 32.05046105384827
  - 29.65566086769104
  test_average_precision_macro:
  - 0.4909163499053332
  - 0.4897106360643698
  - 0.4876013855036022
  - 0.5065909742875508
  - 0.48327049353032026
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6789016609437499
  - 0.6782539827431152
  - 0.6955888848634229
  - 0.6951726549324411
  - 0.6740014351225186
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7422188373246038
  - 0.7431666373427408
  - 0.7469866076562851
  - 0.7487552544227891
  - 0.7491388042282753
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6508228441191095
  - 0.646122955115336
  - 0.6566962526906805
  - 0.6626133340502011
  - 0.6389362411557602
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7949869603013618
  - 0.8005226480836237
  - 0.791337386018237
  - 0.7989583333333332
  - 0.7925311203319502
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.794986960301362
  - 0.8005226480836237
  - 0.7913373860182371
  - 0.7989583333333333
  - 0.7925311203319502
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.794986960301362
  - 0.8005226480836237
  - 0.791337386018237
  - 0.7989583333333333
  - 0.7925311203319502
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7392307187997289
  - 0.7491472702767865
  - 0.7403111416151911
  - 0.7480009751340808
  - 0.7424281467804278
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6702245420833349
  - 0.6769400210511632
  - 0.6641753128183208
  - 0.6744705610241664
  - 0.6662393475843942
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6597330768305879
  - 0.6673928830791576
  - 0.654721488746385
  - 0.6652211621856028
  - 0.6563573883161512
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6874982690715645
  - 0.6984759780008459
  - 0.6828042834441279
  - 0.6962016992342323
  - 0.6858831323835493
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5903169118911592
  - 0.6025572866350546
  - 0.5915684501924374
  - 0.6016069678220173
  - 0.5943045671735376
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7422188373246039
  - 0.7431666373427408
  - 0.7469866076562847
  - 0.7487552544227891
  - 0.7491388042282744
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.25098249185595434
  - 0.27286625849275836
  - 0.2196270170204033
  - 0.2531276827323462
  - 0.2536820901027957
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5076010436265472
  - 0.5232816038418285
  - 0.5027103452127809
  - 0.5184818498513102
  - 0.5028050795516
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5157988461708284
  - 0.5286800920054756
  - 0.512329804555114
  - 0.5151051967242216
  - 0.5031597325256432
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.26346496637693495
  - 0.29171903382158954
  - 0.22886911949674585
  - 0.2719291273032813
  - 0.2780454920251354
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8428742222737756
  - 0.8413568886773983
  - 0.8477286473759473
  - 0.8448854256754895
  - 0.8475660505066966
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.255578093306288
  - -7.252032520325203
  - -7.546808510638298
  - -7.454166666666667
  - -7.524896265560166
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20501303969863807
  - -0.19947735191637633
  - -0.2086626139817629
  - -0.20104166666666665
  - -0.20746887966804978
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20501303969863807
  - -0.1994773519163763
  - -0.20866261398176292
  - -0.20104166666666667
  - -0.2074688796680498
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20501303969863804
  - -0.1994773519163763
  - -0.2086626139817629
  - -0.20104166666666667
  - -0.2074688796680498
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.260769281200271
  - -0.25085272972321354
  - -0.259688858384809
  - -0.2519990248659191
  - -0.2575718532195721
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.179682122426979
  - -0.18437656154337337
  - -0.18508869001650158
  - -0.19232004974192474
  - -0.19094200397179056
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7949869603013618
  - 0.8005226480836237
  - 0.791337386018237
  - 0.7989583333333332
  - 0.7925311203319502
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.794986960301362
  - 0.8005226480836237
  - 0.7913373860182371
  - 0.7989583333333333
  - 0.7925311203319502
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.794986960301362
  - 0.8005226480836237
  - 0.791337386018237
  - 0.7989583333333333
  - 0.7925311203319502
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7392307187997289
  - 0.7491472702767865
  - 0.7403111416151911
  - 0.7480009751340808
  - 0.7424281467804278
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7949869603013618
  - 0.8005226480836237
  - 0.791337386018237
  - 0.7989583333333332
  - 0.7925311203319502
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.794986960301362
  - 0.8005226480836237
  - 0.7913373860182371
  - 0.7989583333333333
  - 0.7925311203319502
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.794986960301362
  - 0.8005226480836237
  - 0.791337386018237
  - 0.7989583333333333
  - 0.7925311203319502
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7392307187997289
  - 0.7491472702767865
  - 0.7403111416151911
  - 0.7480009751340808
  - 0.7424281467804278
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6957344912723836
  - 0.6914250744404129
  - 0.6907460495414554
  - 0.6914530620691698
  - 0.6816229835934687
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8197030567949601
  - 0.8235034994682193
  - 0.8233906433459629
  - 0.8221200049832296
  - 0.8182787140497638
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8203390067143327
  - 0.8157068305533026
  - 0.8149645014728601
  - 0.8077030984062233
  - 0.8091055409798
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6888167071223259
  - 0.6918013224561743
  - 0.6796611081664835
  - 0.6953816514803893
  - 0.6794037692913076
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9934633872877147
  - 0.9931220528044827
  - 0.9943673638819718
  - 0.9938113701239596
  - 0.9940752587000041
  train_average_precision_macro_oob:
  - 0.9665769498668445
  - 0.9630791929631728
  - 0.9690068682259186
  - 0.9668936000040739
  - 0.9618039253747341
  train_average_precision_micro:
  - 0.9982939830427016
  - 0.9982465096707077
  - 0.9983172635049296
  - 0.9983620253617048
  - 0.9984028283946205
  train_average_precision_micro_oob:
  - 0.993334965362006
  - 0.993132242176608
  - 0.9934628606780196
  - 0.9936847887643796
  - 0.9934543199449368
  train_average_precision_samples:
  - 0.9975834075834075
  - 0.9974717274788704
  - 0.9978946008343037
  - 0.9970464772124646
  - 0.9976647004506916
  train_average_precision_samples_oob:
  - 0.992057707042722
  - 0.9924525348675008
  - 0.9923904193967723
  - 0.9905383927196162
  - 0.9924295526403469
  train_average_precision_weighted:
  - 0.9977215824432528
  - 0.9974713551371124
  - 0.9977540832575502
  - 0.9975798843120636
  - 0.997886854839056
  train_average_precision_weighted_oob:
  - 0.9904352110186869
  - 0.9893532918058668
  - 0.9907521778956362
  - 0.990177096939651
  - 0.9905903381308022
  train_f1_macro:
  - 0.9846673596673599
  - 0.9843784786641929
  - 0.9849218578032136
  - 0.9856184084372002
  - 0.985529715762274
  train_f1_macro_oob:
  - 0.9772794772794772
  - 0.9767346938775509
  - 0.9787952160833518
  - 0.97805885389778
  - 0.9794019933554818
  train_f1_micro:
  - 0.9846673596673596
  - 0.9843784786641929
  - 0.9849218578032137
  - 0.9856184084372004
  - 0.9855297157622739
  train_f1_micro_oob:
  - 0.9772794772794773
  - 0.9767346938775511
  - 0.9787952160833516
  - 0.97805885389778
  - 0.9794019933554817
  train_f1_samples:
  - 0.9846673596673596
  - 0.984378478664193
  - 0.9849218578032137
  - 0.9856184084372005
  - 0.9855297157622739
  train_f1_samples_oob:
  - 0.9772794772794773
  - 0.9767346938775511
  - 0.9787952160833517
  - 0.97805885389778
  - 0.9794019933554817
  train_f1_weighted:
  - 0.9866397681984949
  - 0.9866980233842406
  - 0.9860779227941926
  - 0.9873658206647367
  - 0.9867790174320871
  train_f1_weighted_oob:
  - 0.9803244095230923
  - 0.9802019144101256
  - 0.9799321432231123
  - 0.9812703959838704
  - 0.981968011117795
  train_jaccard_macro:
  - 0.9698602673202902
  - 0.9693187994268966
  - 0.9703630159758468
  - 0.9717207264412189
  - 0.9715283645061594
  train_jaccard_macro_oob:
  - 0.9557226554611005
  - 0.9547037721185099
  - 0.9586018689622742
  - 0.9572468035350072
  - 0.9597504164330084
  train_jaccard_micro:
  - 0.9697977988226261
  - 0.9692375141573198
  - 0.9702916621489754
  - 0.9716446124763705
  - 0.9714722363728986
  train_jaccard_micro_oob:
  - 0.9555684623203137
  - 0.9545273234942162
  - 0.9584710446903291
  - 0.9570598636019196
  - 0.9596354166666666
  train_jaccard_samples:
  - 0.9727134374193198
  - 0.972209060976863
  - 0.973160317028712
  - 0.9743514621836562
  - 0.9741865531742413
  train_jaccard_samples_oob:
  - 0.960165699755483
  - 0.959282654050456
  - 0.9626872704586931
  - 0.96157185786396
  - 0.9637704853916724
  train_jaccard_weighted:
  - 0.9737262454073564
  - 0.9738566386291401
  - 0.9726360623072576
  - 0.9751273931491181
  - 0.9739774799858496
  train_jaccard_weighted_oob:
  - 0.961639307664383
  - 0.961420535921064
  - 0.9608317839247436
  - 0.9634521092021893
  - 0.9647237873832479
  train_label_ranking_average_precision_score:
  - 0.9975834075834075
  - 0.9974717274788705
  - 0.9978946008343038
  - 0.9970464772124643
  - 0.9976647004506918
  train_label_ranking_average_precision_score_oob:
  - 0.9920577070427223
  - 0.9924525348675014
  - 0.992390419396772
  - 0.9905383927196161
  - 0.9924295526403476
  train_matthews_corrcoef_macro:
  - 0.9182376486091873
  - 0.9203122878756407
  - 0.9277049549713074
  - 0.9289618072731688
  - 0.9238475290575104
  train_matthews_corrcoef_macro_oob:
  - 0.8509588645485059
  - 0.8892452545658532
  - 0.8975688108617045
  - 0.8947035695424187
  - 0.8781668430986036
  train_matthews_corrcoef_micro:
  - 0.9636928960994626
  - 0.9629583682902167
  - 0.9640380703458359
  - 0.9657979517936893
  - 0.9656189036502505
  train_matthews_corrcoef_micro_oob:
  - 0.9461183936286035
  - 0.944747191717781
  - 0.9493615523562863
  - 0.9477353370090972
  - 0.9510000992101608
  train_matthews_corrcoef_samples:
  - 0.9664999257650971
  - 0.9666768163910553
  - 0.9674783058646755
  - 0.9679589927519205
  - 0.9683780621195728
  train_matthews_corrcoef_samples_oob:
  - 0.9503236169903847
  - 0.9501221353521516
  - 0.9526851263306029
  - 0.9511149566200703
  - 0.9553183568455631
  train_matthews_corrcoef_weighted:
  - 0.9620670038101379
  - 0.9619584291269739
  - 0.9616929208117443
  - 0.9639755464645752
  - 0.9631025802980133
  train_matthews_corrcoef_weighted_oob:
  - 0.9425452416217437
  - 0.9434411450678539
  - 0.9450270788531252
  - 0.9461398489762971
  - 0.9480734037056654
  train_ndgc:
  - 0.9988233565524273
  - 0.998809455215519
  - 0.9992181309972733
  - 0.9985866624958419
  - 0.9990200390627448
  train_ndgc_oob:
  - 0.9965006917273146
  - 0.9965522029102731
  - 0.9966696937209985
  - 0.995507839295772
  - 0.9965579779537362
  train_neg_coverage_error:
  - -4.298336798336798
  - -4.290909090909091
  - -4.251669234720082
  - -4.271553949406298
  - -4.2806201550387595
  train_neg_coverage_error_oob:
  - -4.446985446985447
  - -4.4166233766233765
  - -4.388803287108372
  - -4.423335054207538
  - -4.401550387596899
  train_neg_hamming_loss_macro:
  - -0.015332640332640332
  - -0.01562152133580705
  - -0.015078142196786267
  - -0.014381591562799615
  - -0.014470284237726101
  train_neg_hamming_loss_macro_oob:
  - -0.022720522720522725
  - -0.023265306122448978
  - -0.02120478391664832
  - -0.021941146102219932
  - -0.020598006644518274
  train_neg_hamming_loss_micro:
  - -0.015332640332640333
  - -0.01562152133580705
  - -0.015078142196786265
  - -0.014381591562799617
  - -0.014470284237726097
  train_neg_hamming_loss_micro_oob:
  - -0.02272052272052272
  - -0.02326530612244898
  - -0.021204783916648325
  - -0.02194114610221993
  - -0.020598006644518274
  train_neg_hamming_loss_samples:
  - -0.015332640332640333
  - -0.01562152133580705
  - -0.015078142196786264
  - -0.014381591562799615
  - -0.014470284237726097
  train_neg_hamming_loss_samples_oob:
  - -0.022720522720522718
  - -0.023265306122448974
  - -0.021204783916648318
  - -0.021941146102219925
  - -0.020598006644518267
  train_neg_hamming_loss_weighted:
  - -0.013360231801505128
  - -0.013301976615759607
  - -0.013922077205807468
  - -0.012634179335263486
  - -0.013220982567913004
  train_neg_hamming_loss_weighted_oob:
  - -0.019675590476907714
  - -0.019798085589874444
  - -0.02006785677688771
  - -0.01872960401612957
  - -0.018031988882205092
  train_neg_label_ranking_loss:
  - -0.0011373559450482528
  - -0.0013627113970342169
  - -0.0013514983276154307
  - -0.0015137515294237765
  - -0.0014106758874200735
  train_neg_label_ranking_loss_oob:
  - -0.0057770305709866155
  - -0.00541086855836392
  - -0.0058015309748745796
  - -0.006629345325045597
  - -0.005680483537626395
  train_precision_macro:
  - 0.9846673596673599
  - 0.9843784786641929
  - 0.9849218578032136
  - 0.9856184084372002
  - 0.985529715762274
  train_precision_macro_oob:
  - 0.9772794772794772
  - 0.9767346938775509
  - 0.9787952160833518
  - 0.97805885389778
  - 0.9794019933554818
  train_precision_micro:
  - 0.9846673596673596
  - 0.9843784786641929
  - 0.9849218578032137
  - 0.9856184084372004
  - 0.9855297157622739
  train_precision_micro_oob:
  - 0.9772794772794773
  - 0.9767346938775511
  - 0.9787952160833516
  - 0.97805885389778
  - 0.9794019933554817
  train_precision_samples:
  - 0.9846673596673596
  - 0.984378478664193
  - 0.9849218578032137
  - 0.9856184084372005
  - 0.9855297157622739
  train_precision_samples_oob:
  - 0.9772794772794773
  - 0.9767346938775511
  - 0.9787952160833517
  - 0.97805885389778
  - 0.9794019933554817
  train_precision_weighted:
  - 0.9866397681984949
  - 0.9866980233842406
  - 0.9860779227941926
  - 0.9873658206647367
  - 0.9867790174320871
  train_precision_weighted_oob:
  - 0.9803244095230923
  - 0.9802019144101256
  - 0.9799321432231123
  - 0.9812703959838704
  - 0.981968011117795
  train_recall_macro:
  - 0.9846673596673599
  - 0.9843784786641929
  - 0.9849218578032136
  - 0.9856184084372002
  - 0.985529715762274
  train_recall_macro_oob:
  - 0.9772794772794772
  - 0.9767346938775509
  - 0.9787952160833518
  - 0.97805885389778
  - 0.9794019933554818
  train_recall_micro:
  - 0.9846673596673596
  - 0.9843784786641929
  - 0.9849218578032137
  - 0.9856184084372004
  - 0.9855297157622739
  train_recall_micro_oob:
  - 0.9772794772794773
  - 0.9767346938775511
  - 0.9787952160833516
  - 0.97805885389778
  - 0.9794019933554817
  train_recall_samples:
  - 0.9846673596673596
  - 0.984378478664193
  - 0.9849218578032137
  - 0.9856184084372005
  - 0.9855297157622739
  train_recall_samples_oob:
  - 0.9772794772794773
  - 0.9767346938775511
  - 0.9787952160833517
  - 0.97805885389778
  - 0.9794019933554817
  train_recall_weighted:
  - 0.9866397681984949
  - 0.9866980233842406
  - 0.9860779227941926
  - 0.9873658206647367
  - 0.9867790174320871
  train_recall_weighted_oob:
  - 0.9803244095230923
  - 0.9802019144101256
  - 0.9799321432231123
  - 0.9812703959838704
  - 0.981968011117795
  train_roc_auc_macro:
  - 0.9990469656312408
  - 0.998976055532081
  - 0.9990705864592695
  - 0.9990211110882949
  - 0.9991443920511777
  train_roc_auc_macro_oob:
  - 0.9924314934729193
  - 0.9921583985284155
  - 0.9937792324391842
  - 0.9926962984463398
  - 0.9930755450086792
  train_roc_auc_micro:
  - 0.9992383709899496
  - 0.9992207106110769
  - 0.9992615282866224
  - 0.9992756046433138
  - 0.999297576167014
  train_roc_auc_micro_oob:
  - 0.9963133295856278
  - 0.996294221241406
  - 0.9964889771582662
  - 0.9965677789853614
  - 0.9964987232203416
  train_roc_auc_samples:
  - 0.9988626440549517
  - 0.9986372886029657
  - 0.9986485016723845
  - 0.9984862484705762
  - 0.99858932411258
  train_roc_auc_samples_oob:
  - 0.9942229694290134
  - 0.9945891314416361
  - 0.9941984690251255
  - 0.9933706546749543
  - 0.9943195164623736
  train_roc_auc_weighted:
  - 0.9992562162343326
  - 0.9992243570771022
  - 0.9992582939744978
  - 0.999278582177691
  - 0.9993317348711427
  train_roc_auc_weighted_oob:
  - 0.9959700830452936
  - 0.995925912044872
  - 0.9961661123540124
  - 0.9963237480788805
  - 0.996044364406242
start: 2023-12-12 22:57:22.357577
wrapper: null
