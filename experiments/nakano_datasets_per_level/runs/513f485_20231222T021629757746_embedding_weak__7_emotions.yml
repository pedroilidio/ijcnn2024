active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZFcCgmZmZmZn5P6CZmZmZmfk/oJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzC8CAMzMzMzPjP+DMzMzMzAxAwJmZmZmZ+T8gMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:20:23.208347
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__7
  params: {}
hash: 513f4850890eda0b93d45ca2ad1923f8f7843724e7294202d5d906cbfbef9af6
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/513f485_20231222T021629757746_embedding_weak__7_emotions.yml
results:
  fit_time:
  - 212.99128699302673
  - 210.03355240821838
  - 208.79610586166382
  - 209.6762466430664
  - 209.4506938457489
  score_time:
  - 6.4681713581085205
  - 5.172788619995117
  - 5.972692251205444
  - 6.584059238433838
  - 5.99261999130249
  test_average_precision_macro:
  - 0.6850075039440265
  - 0.7483438721432448
  - 0.7014533402770402
  - 0.7432411567147673
  - 0.7262423477938561
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6196889328830963
  - 0.661178316207044
  - 0.6588857641343998
  - 0.6585346246416788
  - 0.6475232869336787
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7204918032786886
  - 0.7576977401129944
  - 0.7792028985507246
  - 0.7873219373219373
  - 0.7508953168044077
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6887948420401968
  - 0.7393557065951817
  - 0.7030427097865919
  - 0.7298814633143946
  - 0.725745585293718
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.766393442622951
  - 0.8079096045197741
  - 0.7913043478260869
  - 0.8076923076923076
  - 0.7865013774104682
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7663934426229508
  - 0.807909604519774
  - 0.7913043478260869
  - 0.8076923076923077
  - 0.7865013774104683
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7663934426229508
  - 0.807909604519774
  - 0.7913043478260869
  - 0.8076923076923077
  - 0.7865013774104682
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7514985195349174
  - 0.7944244190505407
  - 0.782251340083383
  - 0.7998445998445998
  - 0.7730077409221794
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6289772349481969
  - 0.6836908929978308
  - 0.657971206022207
  - 0.682046820292601
  - 0.6539425797044424
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6212624584717608
  - 0.6777251184834123
  - 0.6546762589928058
  - 0.6774193548387096
  - 0.6481271282633371
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6489071038251365
  - 0.707828894269572
  - 0.6890683229813663
  - 0.7078551078551076
  - 0.6867768595041323
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.610597953751992
  - 0.6657601345656239
  - 0.6458397554664249
  - 0.6710228712566603
  - 0.6367030502186487
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7204918032786887
  - 0.7576977401129944
  - 0.7792028985507246
  - 0.787321937321937
  - 0.7508953168044076
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.45149031985731086
  - 0.5577906996254942
  - 0.5026006130378131
  - 0.5404943506723056
  - 0.48661646330838426
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.43502414937220746
  - 0.5407976345067248
  - 0.5027799848844957
  - 0.5426221190392753
  - 0.4854862243648121
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4135320075662196
  - 0.5330938844789362
  - 0.5008380290913529
  - 0.5620624559692426
  - 0.4745776570119708
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4450650744405106
  - 0.548917968386532
  - 0.5032961097568673
  - 0.5409328953757173
  - 0.4822323909789943
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8067289240747351
  - 0.8302985398479632
  - 0.8496942201036539
  - 0.85673947779861
  - 0.8229038618202666
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.0163934426229506
  - -2.889830508474576
  - -2.9130434782608696
  - -2.8119658119658117
  - -2.768595041322314
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23360655737704916
  - -0.192090395480226
  - -0.20869565217391306
  - -0.19230769230769232
  - -0.2134986225895317
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2336065573770492
  - -0.192090395480226
  - -0.20869565217391303
  - -0.19230769230769232
  - -0.21349862258953167
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23360655737704916
  - -0.19209039548022602
  - -0.20869565217391303
  - -0.19230769230769232
  - -0.21349862258953167
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2485014804650827
  - -0.20557558094945932
  - -0.21774865991661704
  - -0.20015540015540015
  - -0.22699225907782059
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.208879781420765
  - -0.18780602636534838
  - -0.17847826086956523
  - -0.1636039886039886
  - -0.18608815426997244
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.766393442622951
  - 0.8079096045197741
  - 0.7913043478260869
  - 0.8076923076923076
  - 0.7865013774104682
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7663934426229508
  - 0.807909604519774
  - 0.7913043478260869
  - 0.8076923076923077
  - 0.7865013774104683
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7663934426229508
  - 0.807909604519774
  - 0.7913043478260869
  - 0.8076923076923077
  - 0.7865013774104682
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7514985195349174
  - 0.7944244190505407
  - 0.782251340083383
  - 0.7998445998445998
  - 0.7730077409221794
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.766393442622951
  - 0.8079096045197741
  - 0.7913043478260869
  - 0.8076923076923076
  - 0.7865013774104682
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7663934426229508
  - 0.807909604519774
  - 0.7913043478260869
  - 0.8076923076923077
  - 0.7865013774104683
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7663934426229508
  - 0.807909604519774
  - 0.7913043478260869
  - 0.8076923076923077
  - 0.7865013774104682
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7514985195349174
  - 0.7944244190505407
  - 0.782251340083383
  - 0.7998445998445998
  - 0.7730077409221794
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8267626215521692
  - 0.8575330545102555
  - 0.8365166062014725
  - 0.8650320808466461
  - 0.8552866118314292
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8093339730448815
  - 0.8459587278285188
  - 0.8346663564358355
  - 0.8618351565447001
  - 0.8443349312306796
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.791120218579235
  - 0.8121939736346516
  - 0.8215217391304347
  - 0.8363960113960114
  - 0.8139118457300275
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8256909719368951
  - 0.8532083726637398
  - 0.8380080158555856
  - 0.8570475319481708
  - 0.8549651346567159
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8852585206913943
  - 0.927164053215816
  - 0.909595098776109
  - 0.8776480263735782
  - 0.8919329442314657
  train_average_precision_macro_oob:
  - 0.7372641994712854
  - 0.7318233886611841
  - 0.7426739807176848
  - 0.7176295648767802
  - 0.7299841436756304
  train_average_precision_micro:
  - 0.7262635192622906
  - 0.7488866201989292
  - 0.7415541428413973
  - 0.7397881585668026
  - 0.7368036580676341
  train_average_precision_micro_oob:
  - 0.6481811326447974
  - 0.641650850515118
  - 0.6466664689642732
  - 0.654854316420368
  - 0.6436592587011024
  train_average_precision_samples:
  - 0.824144845482425
  - 0.8470175438596492
  - 0.8425964667596467
  - 0.8335667600373484
  - 0.8422787193973634
  train_average_precision_samples_oob:
  - 0.7639301722104269
  - 0.760233918128655
  - 0.762133891213389
  - 0.780485527544351
  - 0.759310263653484
  train_average_precision_weighted:
  - 0.8625269889443701
  - 0.9070895286093288
  - 0.8875234264331334
  - 0.8587617896742716
  - 0.8722208211698876
  train_average_precision_weighted_oob:
  - 0.7298769478827396
  - 0.72579914433785
  - 0.7326494674521957
  - 0.713725005965536
  - 0.722136751086027
  train_f1_macro:
  - 0.8552724699221513
  - 0.8656140350877193
  - 0.8622733612273361
  - 0.8543417366946781
  - 0.859816384180791
  train_f1_macro_oob:
  - 0.7922859164897383
  - 0.783157894736842
  - 0.7900976290097629
  - 0.7934173669467787
  - 0.7881355932203391
  train_f1_micro:
  - 0.8552724699221514
  - 0.8656140350877193
  - 0.8622733612273361
  - 0.8543417366946778
  - 0.859816384180791
  train_f1_micro_oob:
  - 0.7922859164897381
  - 0.783157894736842
  - 0.7900976290097629
  - 0.7934173669467787
  - 0.788135593220339
  train_f1_samples:
  - 0.8552724699221514
  - 0.8656140350877194
  - 0.8622733612273361
  - 0.854341736694678
  - 0.8598163841807911
  train_f1_samples_oob:
  - 0.7922859164897382
  - 0.783157894736842
  - 0.7900976290097628
  - 0.7934173669467788
  - 0.788135593220339
  train_f1_weighted:
  - 0.8384050164959237
  - 0.8502604877469887
  - 0.8477651067675118
  - 0.8413037512302218
  - 0.843893910152294
  train_f1_weighted_oob:
  - 0.7787786991717094
  - 0.7702913427876342
  - 0.7779061613114261
  - 0.783535373608903
  - 0.7745590736246728
  train_jaccard_macro:
  - 0.7563676770975686
  - 0.7730724437624966
  - 0.7658724334745782
  - 0.7515552253225946
  - 0.7627807948012196
  train_jaccard_macro_oob:
  - 0.6623997128530998
  - 0.6494892064110745
  - 0.6588808371754918
  - 0.6625853813075003
  - 0.6568237009631973
  train_jaccard_micro:
  - 0.7471406491499227
  - 0.7630683575626354
  - 0.7578915108795586
  - 0.7457212713936431
  - 0.7541034375967792
  train_jaccard_micro_oob:
  - 0.6560210958101377
  - 0.643598615916955
  - 0.6530259365994237
  - 0.6575739988392338
  - 0.6503496503496503
  train_jaccard_samples:
  - 0.7752198968759477
  - 0.7886616541353382
  - 0.7850667463638173
  - 0.7760704281712684
  - 0.7799535916061339
  train_jaccard_samples_oob:
  - 0.6898999090081892
  - 0.6754486215538846
  - 0.685026897788404
  - 0.6900960384153662
  - 0.6807001614205004
  train_jaccard_weighted:
  - 0.7329610362076974
  - 0.7515796319972748
  - 0.7453290346803781
  - 0.7327087557450793
  - 0.7405394834990578
  train_jaccard_weighted_oob:
  - 0.6448510569230204
  - 0.632910827089111
  - 0.6428605675207447
  - 0.6492563308779099
  - 0.6392576005870496
  train_label_ranking_average_precision_score:
  - 0.8241448454824243
  - 0.8470175438596484
  - 0.8425964667596457
  - 0.8335667600373473
  - 0.8422787193973628
  train_label_ranking_average_precision_score_oob:
  - 0.7639301722104259
  - 0.7602339181286536
  - 0.7621338912133879
  - 0.7804855275443503
  - 0.7593102636534832
  train_matthews_corrcoef_macro:
  - 0.6916604392410841
  - 0.7114648308117184
  - 0.7016139521569497
  - 0.6837002353807854
  - 0.6996374765256897
  train_matthews_corrcoef_macro_oob:
  - 0.5120554096669002
  - 0.48178362924258494
  - 0.4956858866592235
  - 0.4946033791689515
  - 0.5035257960294445
  train_matthews_corrcoef_micro:
  - 0.6604308910696527
  - 0.6818452314975689
  - 0.6727057651705509
  - 0.6565414239565087
  - 0.6716029147815002
  train_matthews_corrcoef_micro_oob:
  - 0.5009356157174921
  - 0.47288216788963094
  - 0.4894491071243981
  - 0.499027331132676
  - 0.49130242148988834
  train_matthews_corrcoef_samples:
  - 0.657989790529068
  - 0.6741918232805335
  - 0.664475868728373
  - 0.6523760223312545
  - 0.6703744754625502
  train_matthews_corrcoef_samples_oob:
  - 0.49699060230164427
  - 0.45924593003836733
  - 0.4773629517782417
  - 0.4949770000210431
  - 0.48105183998590795
  train_matthews_corrcoef_weighted:
  - 0.6722017694899579
  - 0.6941570831889005
  - 0.6853172426954643
  - 0.6696007795672554
  - 0.6810915585031123
  train_matthews_corrcoef_weighted_oob:
  - 0.5056866946956667
  - 0.4771355695271753
  - 0.49113862797386554
  - 0.4951882790572908
  - 0.4963616541095732
  train_ndgc:
  - 0.872005969440086
  - 0.8894298494007097
  - 0.8863646168841965
  - 0.8791257480700753
  - 0.8862562627318775
  train_ndgc_oob:
  - 0.8360472113991397
  - 0.8333667997678238
  - 0.8332134964330553
  - 0.8486186119191313
  - 0.8323740865967204
  train_neg_coverage_error:
  - -2.3227176220806793
  - -2.2673684210526317
  - -2.271966527196653
  - -2.3046218487394956
  - -2.2966101694915255
  train_neg_coverage_error_oob:
  - -2.849256900212314
  - -2.8378947368421055
  - -2.784518828451883
  - -2.8151260504201683
  - -2.8495762711864407
  train_neg_hamming_loss_macro:
  - -0.14472753007784853
  - -0.1343859649122807
  - -0.13772663877266386
  - -0.14565826330532214
  - -0.14018361581920905
  train_neg_hamming_loss_macro_oob:
  - -0.20771408351026185
  - -0.21684210526315786
  - -0.20990237099023712
  - -0.2065826330532213
  - -0.21186440677966104
  train_neg_hamming_loss_micro:
  - -0.14472753007784855
  - -0.1343859649122807
  - -0.1377266387726639
  - -0.14565826330532214
  - -0.14018361581920905
  train_neg_hamming_loss_micro_oob:
  - -0.20771408351026185
  - -0.2168421052631579
  - -0.2099023709902371
  - -0.20658263305322128
  - -0.211864406779661
  train_neg_hamming_loss_samples:
  - -0.14472753007784855
  - -0.1343859649122807
  - -0.1377266387726639
  - -0.14565826330532214
  - -0.14018361581920902
  train_neg_hamming_loss_samples_oob:
  - -0.20771408351026188
  - -0.2168421052631579
  - -0.2099023709902371
  - -0.2065826330532213
  - -0.211864406779661
  train_neg_hamming_loss_weighted:
  - -0.16159498350407636
  - -0.14973951225301133
  - -0.15223489323248823
  - -0.15869624876977817
  - -0.15610608984770605
  train_neg_hamming_loss_weighted_oob:
  - -0.22122130082829056
  - -0.22970865721236575
  - -0.222093838688574
  - -0.21646462639109698
  - -0.22544092637532726
  train_neg_label_ranking_loss:
  - -0.0975171030903515
  - -0.08390643274853801
  - -0.08537889353788937
  - -0.09356909430438841
  - -0.08729990583804143
  train_neg_label_ranking_loss_oob:
  - -0.1799539985845718
  - -0.17771929824561403
  - -0.17315202231520224
  - -0.17110177404295052
  - -0.1804084274952919
  train_precision_macro:
  - 0.8552724699221513
  - 0.8656140350877193
  - 0.8622733612273361
  - 0.8543417366946781
  - 0.859816384180791
  train_precision_macro_oob:
  - 0.7922859164897383
  - 0.783157894736842
  - 0.7900976290097629
  - 0.7934173669467787
  - 0.7881355932203391
  train_precision_micro:
  - 0.8552724699221514
  - 0.8656140350877193
  - 0.8622733612273361
  - 0.8543417366946778
  - 0.859816384180791
  train_precision_micro_oob:
  - 0.7922859164897381
  - 0.783157894736842
  - 0.7900976290097629
  - 0.7934173669467787
  - 0.788135593220339
  train_precision_samples:
  - 0.8552724699221514
  - 0.8656140350877194
  - 0.8622733612273361
  - 0.854341736694678
  - 0.8598163841807911
  train_precision_samples_oob:
  - 0.7922859164897382
  - 0.783157894736842
  - 0.7900976290097628
  - 0.7934173669467788
  - 0.788135593220339
  train_precision_weighted:
  - 0.8384050164959237
  - 0.8502604877469887
  - 0.8477651067675118
  - 0.8413037512302218
  - 0.843893910152294
  train_precision_weighted_oob:
  - 0.7787786991717094
  - 0.7702913427876342
  - 0.7779061613114261
  - 0.783535373608903
  - 0.7745590736246728
  train_recall_macro:
  - 0.8552724699221513
  - 0.8656140350877193
  - 0.8622733612273361
  - 0.8543417366946781
  - 0.859816384180791
  train_recall_macro_oob:
  - 0.7922859164897383
  - 0.783157894736842
  - 0.7900976290097629
  - 0.7934173669467787
  - 0.7881355932203391
  train_recall_micro:
  - 0.8552724699221514
  - 0.8656140350877193
  - 0.8622733612273361
  - 0.8543417366946778
  - 0.859816384180791
  train_recall_micro_oob:
  - 0.7922859164897381
  - 0.783157894736842
  - 0.7900976290097629
  - 0.7934173669467787
  - 0.788135593220339
  train_recall_samples:
  - 0.8552724699221514
  - 0.8656140350877194
  - 0.8622733612273361
  - 0.854341736694678
  - 0.8598163841807911
  train_recall_samples_oob:
  - 0.7922859164897382
  - 0.783157894736842
  - 0.7900976290097628
  - 0.7934173669467788
  - 0.788135593220339
  train_recall_weighted:
  - 0.8384050164959237
  - 0.8502604877469887
  - 0.8477651067675118
  - 0.8413037512302218
  - 0.843893910152294
  train_recall_weighted_oob:
  - 0.7787786991717094
  - 0.7702913427876342
  - 0.7779061613114261
  - 0.783535373608903
  - 0.7745590736246728
  train_roc_auc_macro:
  - 0.9527521477825882
  - 0.9646692332417298
  - 0.9593306350412996
  - 0.9516426163347145
  - 0.9559406198203185
  train_roc_auc_macro_oob:
  - 0.8618117956195227
  - 0.8580375473499805
  - 0.8650447669971921
  - 0.852147065005521
  - 0.8583181805043497
  train_roc_auc_micro:
  - 0.9214301346039936
  - 0.9313879487543225
  - 0.9300563680171611
  - 0.92431780103274
  - 0.92472242590054
  train_roc_auc_micro_oob:
  - 0.845934597574035
  - 0.8421393295699873
  - 0.8504084791321247
  - 0.8411544166117337
  - 0.8437771524128875
  train_roc_auc_samples:
  - 0.9024828969096486
  - 0.9160935672514621
  - 0.9146211064621107
  - 0.9064309056956116
  - 0.9127000941619585
  train_roc_auc_samples_oob:
  - 0.8200460014154282
  - 0.8222807017543861
  - 0.8268479776847978
  - 0.8288982259570494
  - 0.8195915725047082
  train_roc_auc_weighted:
  - 0.9410515198847976
  - 0.9541473261243577
  - 0.9476807450245534
  - 0.9415625631578071
  - 0.9450357449460287
  train_roc_auc_weighted_oob:
  - 0.8581606268518058
  - 0.8546928559389487
  - 0.859690168818646
  - 0.8497771336456595
  - 0.8538841774566869
start: 2023-12-22 02:16:29.757746
wrapper: null
