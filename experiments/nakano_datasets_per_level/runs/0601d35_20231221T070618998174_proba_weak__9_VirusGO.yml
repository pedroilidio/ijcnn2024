active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AmpmZmZnZP0AzMzMzMwtAwMzMzMzMBMAAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:13:03.968210
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__9
  params: {}
hash: 0601d3510f77f134070ee164164dd3241e16179759f6b79439363b7394957ec2
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0601d35_20231221T070618998174_proba_weak__9_VirusGO.yml
results:
  fit_time:
  - 379.1328094005585
  - 379.50043392181396
  - 393.3877580165863
  - 392.4540550708771
  - 396.8047745227814
  score_time:
  - 2.3275749683380127
  - 2.2587244510650635
  - 2.222425699234009
  - 2.382699966430664
  - 2.3929197788238525
  test_average_precision_macro:
  - 0.978427164145958
  - 0.9158062186808902
  - 0.89433756064176
  - 0.8966893513754948
  - 0.8670941886423913
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8670735108517815
  - 0.8440792445453611
  - 0.8370358342226312
  - 0.8132374933020874
  - 0.8415902645085819
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9127906976744186
  - 0.9073170731707317
  - 0.874561403508772
  - 0.8651515151515152
  - 0.8540650406504064
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9559914148577542
  - 0.9233241220356498
  - 0.9102711235472122
  - 0.8771128935569796
  - 0.9019696166322465
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9186046511627906
  - 0.9105691056910569
  - 0.9078947368421052
  - 0.9090909090909091
  - 0.9146341463414633
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9186046511627907
  - 0.9105691056910569
  - 0.9078947368421053
  - 0.9090909090909091
  - 0.9146341463414634
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9186046511627907
  - 0.910569105691057
  - 0.9078947368421053
  - 0.9090909090909093
  - 0.9146341463414634
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9037209302325582
  - 0.9043519846963176
  - 0.8963480128893664
  - 0.9010695187165775
  - 0.9124820659971306
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8513920663715826
  - 0.8366480783568752
  - 0.8327228327228325
  - 0.8346614896343983
  - 0.8432503327852164
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8494623655913979
  - 0.835820895522388
  - 0.8313253012048193
  - 0.8333333333333334
  - 0.8426966292134831
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.867109634551495
  - 0.856562137049942
  - 0.8596491228070177
  - 0.8506493506493507
  - 0.8658536585365854
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8259828647630948
  - 0.8261461339139325
  - 0.8123645062420574
  - 0.8213802252322452
  - 0.8393506427706153
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9127906976744186
  - 0.9073170731707316
  - 0.874561403508772
  - 0.8651515151515152
  - 0.8540650406504064
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3818507525031914
  - 0.3711117482135402
  - 0.3670298786093296
  - 0.3314225058799602
  - 0.387384339973386
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7223904890348563
  - 0.7102735761563318
  - 0.713173303006698
  - 0.6868807690114105
  - 0.7257705974113136
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.634067699164357
  - 0.6425507363805119
  - 0.6811172508429915
  - 0.5938595938212432
  - 0.6807835282821295
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6337209272659979
  - 0.6208038143284044
  - 0.6221175572962261
  - 0.589572198901138
  - 0.646675736228666
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9352824515791418
  - 0.9304563979116452
  - 0.9127397886046019
  - 0.9009293250164102
  - 0.8933298291154863
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.372093023255814
  - -1.5365853658536586
  - -1.7894736842105263
  - -1.5909090909090908
  - -1.829268292682927
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08139534883720931
  - -0.08943089430894309
  - -0.09210526315789473
  - -0.0909090909090909
  - -0.08536585365853659
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08139534883720931
  - -0.08943089430894309
  - -0.09210526315789473
  - -0.09090909090909091
  - -0.08536585365853659
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08139534883720931
  - -0.08943089430894309
  - -0.09210526315789473
  - -0.0909090909090909
  - -0.08536585365853659
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09627906976744185
  - -0.09564801530368246
  - -0.1036519871106337
  - -0.09893048128342245
  - -0.08751793400286945
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04302325581395349
  - -0.05853658536585367
  - -0.08486842105263157
  - -0.08181818181818182
  - -0.1084688346883469
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9186046511627906
  - 0.9105691056910569
  - 0.9078947368421052
  - 0.9090909090909091
  - 0.9146341463414633
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9186046511627907
  - 0.9105691056910569
  - 0.9078947368421053
  - 0.9090909090909091
  - 0.9146341463414634
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9186046511627907
  - 0.910569105691057
  - 0.9078947368421053
  - 0.9090909090909093
  - 0.9146341463414634
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9037209302325582
  - 0.9043519846963176
  - 0.8963480128893664
  - 0.9010695187165775
  - 0.9124820659971306
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9186046511627906
  - 0.9105691056910569
  - 0.9078947368421052
  - 0.9090909090909091
  - 0.9146341463414633
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9186046511627907
  - 0.9105691056910569
  - 0.9078947368421053
  - 0.9090909090909091
  - 0.9146341463414634
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9186046511627907
  - 0.910569105691057
  - 0.9078947368421053
  - 0.9090909090909093
  - 0.9146341463414634
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9037209302325582
  - 0.9043519846963176
  - 0.8963480128893664
  - 0.9010695187165775
  - 0.9124820659971306
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9815233785822022
  - 0.9698201352613118
  - 0.9590484807070433
  - 0.9696982342944676
  - 0.9396968168387606
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9627884615384615
  - 0.9524384112619406
  - 0.9403146733553757
  - 0.9440301942373194
  - 0.9276018099547512
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9569767441860466
  - 0.9414634146341462
  - 0.9151315789473684
  - 0.9181818181818181
  - 0.8915311653116531
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9623076923076923
  - 0.968695771896464
  - 0.9545634759978563
  - 0.9474626527774102
  - 0.9349043691115302
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9372760163302183
  - 0.9363944789255295
  - 0.9435341886673897
  - 0.9615561429651601
  - 0.9213560607433227
  train_average_precision_macro_oob:
  - 0.8984941935653209
  - 0.919541072085464
  - 0.9350073219355033
  - 0.9122581083481496
  - 0.8852800441163318
  train_average_precision_micro:
  - 0.8610576822775133
  - 0.8702956247060875
  - 0.8789267477039838
  - 0.8669191575607751
  - 0.8596641286089446
  train_average_precision_micro_oob:
  - 0.8343765661445361
  - 0.8523523503386821
  - 0.8583468884549796
  - 0.8451853325459232
  - 0.8385539771491837
  train_average_precision_samples:
  - 0.9024390243902439
  - 0.9267068273092368
  - 0.9309664694280078
  - 0.8984662576687116
  - 0.8989959839357431
  train_average_precision_samples_oob:
  - 0.8834349593495935
  - 0.8944779116465864
  - 0.9059171597633136
  - 0.882719836400818
  - 0.8659638554216867
  train_average_precision_weighted:
  - 0.93036299908837
  - 0.9326660340530825
  - 0.930036390022051
  - 0.9523767633427652
  - 0.9205472448350345
  train_average_precision_weighted_oob:
  - 0.9056673228803069
  - 0.9234075201714056
  - 0.9325665829482513
  - 0.9213990199160412
  - 0.8948418566272492
  train_f1_macro:
  - 0.9258130081300813
  - 0.9267068273092369
  - 0.923076923076923
  - 0.927402862985685
  - 0.9186746987951806
  train_f1_macro_oob:
  - 0.9186991869918698
  - 0.9206827309236947
  - 0.9181459566074951
  - 0.9233128834355827
  - 0.9166666666666666
  train_f1_micro:
  - 0.9258130081300813
  - 0.9267068273092369
  - 0.9230769230769231
  - 0.9274028629856851
  - 0.9186746987951807
  train_f1_micro_oob:
  - 0.9186991869918699
  - 0.9206827309236948
  - 0.9181459566074951
  - 0.9233128834355828
  - 0.9166666666666666
  train_f1_samples:
  - 0.9258130081300812
  - 0.926706827309237
  - 0.9230769230769231
  - 0.9274028629856852
  - 0.9186746987951807
  train_f1_samples_oob:
  - 0.91869918699187
  - 0.9206827309236947
  - 0.9181459566074952
  - 0.9233128834355828
  - 0.9166666666666666
  train_f1_weighted:
  - 0.9256822023665782
  - 0.9245938979799796
  - 0.9254088086979333
  - 0.9248847785611819
  - 0.9182700953065995
  train_f1_weighted_oob:
  - 0.9175319971021493
  - 0.9185997722232213
  - 0.9203952546127612
  - 0.9215883771327412
  - 0.9105376730803812
  train_jaccard_macro:
  - 0.8625039382663425
  - 0.8641830836647548
  - 0.8579010944248556
  - 0.8655426766553721
  - 0.8507084523161369
  train_jaccard_macro_oob:
  - 0.8501983372196021
  - 0.8537418889846465
  - 0.8497835523503167
  - 0.8582800757085606
  - 0.8471898599035753
  train_jaccard_micro:
  - 0.8618732261116367
  - 0.8634237605238541
  - 0.8571428571428571
  - 0.8646329837940896
  - 0.8495821727019499
  train_jaccard_micro_oob:
  - 0.849624060150376
  - 0.8530232558139534
  - 0.8486782133090246
  - 0.8575498575498576
  - 0.8461538461538461
  train_jaccard_samples:
  - 0.879500580720093
  - 0.8802352266207688
  - 0.8739081431389124
  - 0.8819748758399065
  - 0.8711990820424553
  train_jaccard_samples_oob:
  - 0.8677409988385599
  - 0.8707687894434881
  - 0.86545505776275
  - 0.8756938358165353
  - 0.8671830177854273
  train_jaccard_weighted:
  - 0.861919297223641
  - 0.8600880053430076
  - 0.8617129365303284
  - 0.8607162702934062
  - 0.849726618852979
  train_jaccard_weighted_oob:
  - 0.8478028515403682
  - 0.8496776367555073
  - 0.8533979949422109
  - 0.8548628307243342
  - 0.8365246281209642
  train_label_ranking_average_precision_score:
  - 0.9024390243902436
  - 0.9267068273092367
  - 0.9309664694280078
  - 0.8984662576687116
  - 0.8989959839357431
  train_label_ranking_average_precision_score_oob:
  - 0.8834349593495935
  - 0.8944779116465861
  - 0.9059171597633136
  - 0.882719836400818
  - 0.8659638554216865
  train_matthews_corrcoef_macro:
  - 0.40932582265815776
  - 0.4074389932134128
  - 0.3839822141781201
  - 0.4165703177691382
  - 0.38810222515639153
  train_matthews_corrcoef_macro_oob:
  - 0.3821991402051585
  - 0.3817864002808544
  - 0.35859895894061583
  - 0.3996915799831416
  - 0.3836217962494852
  train_matthews_corrcoef_micro:
  - 0.7610915266969858
  - 0.7605796884237862
  - 0.746174803301534
  - 0.7666152965952465
  - 0.7360079760163594
  train_matthews_corrcoef_micro_oob:
  - 0.7364331470577623
  - 0.739411290588484
  - 0.7284840888104226
  - 0.752571258343924
  - 0.7288166714111943
  train_matthews_corrcoef_samples:
  - 0.6952989554733191
  - 0.6897854063160931
  - 0.6662939641821137
  - 0.7045631089637461
  - 0.6961455875163164
  train_matthews_corrcoef_samples_oob:
  - 0.6548571534487235
  - 0.658069074604844
  - 0.6329658249393109
  - 0.6788043157241724
  - 0.6825834387093918
  train_matthews_corrcoef_weighted:
  - 0.674062585119399
  - 0.6735832591472593
  - 0.6595874415309243
  - 0.6794776402321517
  - 0.6578008850876663
  train_matthews_corrcoef_weighted_oob:
  - 0.6476739303319615
  - 0.6508982378978551
  - 0.6373185194956321
  - 0.6657670102904055
  - 0.641849474949133
  train_ndgc:
  - 0.9291065562672282
  - 0.9466400499248976
  - 0.9495065351758681
  - 0.9257908395649334
  - 0.9262232553879682
  train_ndgc_oob:
  - 0.9155931106761233
  - 0.9239672848232532
  - 0.9319793802744355
  - 0.9151734886320662
  - 0.902193523288841
  train_neg_coverage_error:
  - -1.5
  - -1.4216867469879517
  - -1.3964497041420119
  - -1.5766871165644172
  - -1.4939759036144578
  train_neg_coverage_error_oob:
  - -1.6402439024390243
  - -1.5783132530120483
  - -1.5207100591715976
  - -1.6748466257668713
  - -1.6566265060240963
  train_neg_hamming_loss_macro:
  - -0.07418699186991871
  - -0.07329317269076306
  - -0.07692307692307691
  - -0.07259713701431493
  - -0.08132530120481928
  train_neg_hamming_loss_macro_oob:
  - -0.08130081300813008
  - -0.07931726907630522
  - -0.08185404339250492
  - -0.07668711656441718
  - -0.08333333333333333
  train_neg_hamming_loss_micro:
  - -0.0741869918699187
  - -0.07329317269076305
  - -0.07692307692307693
  - -0.07259713701431493
  - -0.08132530120481928
  train_neg_hamming_loss_micro_oob:
  - -0.08130081300813008
  - -0.07931726907630522
  - -0.08185404339250493
  - -0.07668711656441718
  - -0.08333333333333333
  train_neg_hamming_loss_samples:
  - -0.0741869918699187
  - -0.07329317269076305
  - -0.07692307692307693
  - -0.07259713701431492
  - -0.08132530120481928
  train_neg_hamming_loss_samples_oob:
  - -0.08130081300813008
  - -0.07931726907630522
  - -0.08185404339250492
  - -0.07668711656441718
  - -0.08333333333333334
  train_neg_hamming_loss_weighted:
  - -0.07431779763342189
  - -0.07540610202002038
  - -0.07459119130206664
  - -0.07511522143881819
  - -0.08172990469340047
  train_neg_hamming_loss_weighted_oob:
  - -0.08246800289785076
  - -0.08140022777677874
  - -0.07960474538723876
  - -0.0784116228672588
  - -0.08946232691961876
  train_neg_label_ranking_loss:
  - -0.05067750677506776
  - -0.04042838018741633
  - -0.037195923734385274
  - -0.06479209270620313
  - -0.05391566265060241
  train_neg_label_ranking_loss_oob:
  - -0.07483062330623307
  - -0.06723560910307898
  - -0.05788954635108482
  - -0.08058963871847308
  - -0.08350066934404284
  train_precision_macro:
  - 0.9258130081300813
  - 0.9267068273092369
  - 0.923076923076923
  - 0.927402862985685
  - 0.9186746987951806
  train_precision_macro_oob:
  - 0.9186991869918698
  - 0.9206827309236947
  - 0.9181459566074951
  - 0.9233128834355827
  - 0.9166666666666666
  train_precision_micro:
  - 0.9258130081300813
  - 0.9267068273092369
  - 0.9230769230769231
  - 0.9274028629856851
  - 0.9186746987951807
  train_precision_micro_oob:
  - 0.9186991869918699
  - 0.9206827309236948
  - 0.9181459566074951
  - 0.9233128834355828
  - 0.9166666666666666
  train_precision_samples:
  - 0.9258130081300812
  - 0.926706827309237
  - 0.9230769230769231
  - 0.9274028629856852
  - 0.9186746987951807
  train_precision_samples_oob:
  - 0.91869918699187
  - 0.9206827309236947
  - 0.9181459566074952
  - 0.9233128834355828
  - 0.9166666666666666
  train_precision_weighted:
  - 0.9256822023665782
  - 0.9245938979799796
  - 0.9254088086979333
  - 0.9248847785611819
  - 0.9182700953065995
  train_precision_weighted_oob:
  - 0.9175319971021493
  - 0.9185997722232213
  - 0.9203952546127612
  - 0.9215883771327412
  - 0.9105376730803812
  train_recall_macro:
  - 0.9258130081300813
  - 0.9267068273092369
  - 0.923076923076923
  - 0.927402862985685
  - 0.9186746987951806
  train_recall_macro_oob:
  - 0.9186991869918698
  - 0.9206827309236947
  - 0.9181459566074951
  - 0.9233128834355827
  - 0.9166666666666666
  train_recall_micro:
  - 0.9258130081300813
  - 0.9267068273092369
  - 0.9230769230769231
  - 0.9274028629856851
  - 0.9186746987951807
  train_recall_micro_oob:
  - 0.9186991869918699
  - 0.9206827309236948
  - 0.9181459566074951
  - 0.9233128834355828
  - 0.9166666666666666
  train_recall_samples:
  - 0.9258130081300812
  - 0.926706827309237
  - 0.9230769230769231
  - 0.9274028629856852
  - 0.9186746987951807
  train_recall_samples_oob:
  - 0.91869918699187
  - 0.9206827309236947
  - 0.9181459566074952
  - 0.9233128834355828
  - 0.9166666666666666
  train_recall_weighted:
  - 0.9256822023665782
  - 0.9245938979799796
  - 0.9254088086979333
  - 0.9248847785611819
  - 0.9182700953065995
  train_recall_weighted_oob:
  - 0.9175319971021493
  - 0.9185997722232213
  - 0.9203952546127612
  - 0.9215883771327412
  - 0.9105376730803812
  train_roc_auc_macro:
  - 0.97603046039525
  - 0.9784324354473609
  - 0.982832233580128
  - 0.9849317337625686
  - 0.9792744839433739
  train_roc_auc_macro_oob:
  - 0.9596726280997016
  - 0.9694974559713367
  - 0.9715441044108556
  - 0.9637693652822324
  - 0.961594706919345
  train_roc_auc_micro:
  - 0.9575441239776151
  - 0.9606120341687787
  - 0.96677458346747
  - 0.9550189848697311
  - 0.9595606871303859
  train_roc_auc_micro_oob:
  - 0.9430946291560102
  - 0.9467880722175287
  - 0.9531503404542224
  - 0.9425011365309872
  - 0.9462185925717326
  train_roc_auc_samples:
  - 0.9493224932249323
  - 0.9595716198125837
  - 0.9628040762656148
  - 0.9352079072937969
  - 0.9460843373493977
  train_roc_auc_samples_oob:
  - 0.9251693766937669
  - 0.9327643908969211
  - 0.9421104536489152
  - 0.9194103612815269
  - 0.9164993306559571
  train_roc_auc_weighted:
  - 0.9640652985540381
  - 0.9697887815611698
  - 0.9745562947619463
  - 0.9761802155232793
  - 0.9723742358302739
  train_roc_auc_weighted_oob:
  - 0.949424022289406
  - 0.960171993567516
  - 0.9661170650867997
  - 0.9602096276745059
  - 0.9554287784178603
start: 2023-12-21 07:06:18.998174
wrapper: null
