active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAMAAAAAAAAAAAAAAAAAAAPA/AAAAAAAA8D8AAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T8yMzMzMzPzvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz8z84MzMzMzPzPzgzMzMzM/M/wJmZmZmZyT9kZmZmZmYOwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz4780MzMzMzMDQGhmZmZmZvY/zMzMzMzMDMCgmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:10:55.511845
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: fc9ef759af0ed53617908beb9ae7695a81fc8b5a4a47811316ec62a43615f997
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fc9ef75_20231212T171024532226_embedding_proba_weak__4_birds.yml
results:
  fit_time:
  - 13.267037630081177
  - 14.241373777389526
  - 14.30347204208374
  - 14.636096715927124
  - 15.231415033340454
  score_time:
  - 4.549197673797607
  - 4.697863578796387
  - 4.352910280227661
  - 4.191866636276245
  - 4.6406943798065186
  test_average_precision_macro:
  - 0.3087548845091796
  - 0.3759016205218084
  - 0.3182785754535935
  - 0.4086120826834646
  - 0.34504035562959673
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.22304641593578012
  - 0.271321416393396
  - 0.2512139286212087
  - 0.3080633869324843
  - 0.2845298948357443
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2720666703086844
  - 0.276470441960518
  - 0.2537059468648016
  - 0.2914851781951645
  - 0.25677562228963813
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.40830240500710246
  - 0.4691397822050184
  - 0.44563856431304144
  - 0.45312718251122897
  - 0.4574223687758386
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9016727866177071
  - 0.9073847409220728
  - 0.9171766625866993
  - 0.9053447572419421
  - 0.9114647082823338
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9016727866177071
  - 0.9073847409220727
  - 0.9171766625866993
  - 0.9053447572419421
  - 0.9114647082823337
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.901672786617707
  - 0.9073847409220727
  - 0.9171766625866993
  - 0.905344757241942
  - 0.9114647082823337
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8961587411778318
  - 0.904392764857881
  - 0.9119428294573645
  - 0.8985036956913647
  - 0.9111639223674534
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8217424303544834
  - 0.8315818009610181
  - 0.8485978000844144
  - 0.8290680719818156
  - 0.8384245544866921
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8209509658246656
  - 0.830470500373413
  - 0.8470233609645818
  - 0.8270592620201267
  - 0.8373313343328336
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8404248429796122
  - 0.8548941681353384
  - 0.8620501983629723
  - 0.8454838998148738
  - 0.8549332367824286
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8127042808633892
  - 0.8264810749295981
  - 0.8398086824257004
  - 0.8172343426078598
  - 0.8375830533162446
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6751674455024829
  - 0.7493386590147818
  - 0.7188222259345692
  - 0.7333456433114437
  - 0.7528996532973902
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2616127366170346
  - 0.29426826374266546
  - 0.2787457678795005
  - 0.3617040654397827
  - 0.2935457771105126
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.29461796237083016
  - 0.3227082312427562
  - 0.3100779212823324
  - 0.3497764939506794
  - 0.3421416766958666
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14107625952195085
  - 0.1464801707483071
  - 0.11955234076674441
  - 0.17934810759554018
  - 0.13977508870127708
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.33318750259233665
  - 0.37075203116602784
  - 0.3759816574314639
  - 0.39388680593493547
  - 0.3938793788213329
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.36469058522524833
  - 0.34951581703835544
  - 0.3333825598425257
  - 0.36648405945579154
  - 0.33405884060706376
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.10077519379845
  - -3.604651162790698
  - -3.7906976744186047
  - -3.4031007751937983
  - -3.798449612403101
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09832721338229294
  - -0.09261525907792738
  - -0.08282333741330068
  - -0.09465524275805795
  - -0.08853529171766626
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09832721338229294
  - -0.09261525907792738
  - -0.0828233374133007
  - -0.09465524275805794
  - -0.08853529171766626
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09832721338229293
  - -0.09261525907792736
  - -0.0828233374133007
  - -0.09465524275805792
  - -0.08853529171766626
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10384125882216824
  - -0.09560723514211887
  - -0.08805717054263568
  - -0.1014963043086353
  - -0.08883607763254683
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13968073017320623
  - -0.11901568120788367
  - -0.1285415229498677
  - -0.10868781621175602
  - -0.11453732655853038
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9016727866177071
  - 0.9073847409220728
  - 0.9171766625866993
  - 0.9053447572419421
  - 0.9114647082823338
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9016727866177071
  - 0.9073847409220727
  - 0.9171766625866993
  - 0.9053447572419421
  - 0.9114647082823337
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.901672786617707
  - 0.9073847409220727
  - 0.9171766625866993
  - 0.905344757241942
  - 0.9114647082823337
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8961587411778318
  - 0.904392764857881
  - 0.9119428294573645
  - 0.8985036956913647
  - 0.9111639223674534
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9016727866177071
  - 0.9073847409220728
  - 0.9171766625866993
  - 0.9053447572419421
  - 0.9114647082823338
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9016727866177071
  - 0.9073847409220727
  - 0.9171766625866993
  - 0.9053447572419421
  - 0.9114647082823337
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.901672786617707
  - 0.9073847409220727
  - 0.9171766625866993
  - 0.905344757241942
  - 0.9114647082823337
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8961587411778318
  - 0.904392764857881
  - 0.9119428294573645
  - 0.8985036956913647
  - 0.9111639223674534
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8275721605138833
  - 0.8740880795851957
  - 0.8131936553223224
  - 0.8990790193170037
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8456895496621339
  - 0.8816385048643113
  - 0.8531700656478691
  - 0.8812304281927502
  - 0.8826659684939026
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8462059317668441
  - 0.8825160787337901
  - 0.8499077368793201
  - 0.8745112976102908
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.4046165804173663
  - 0.3883253972175228
  - 0.43514743243960874
  - 0.4094171123993303
  - 0.4363240356909093
  train_average_precision_macro_oob:
  - 0.36995290353117966
  - 0.36541553306984187
  - 0.39768821678388216
  - 0.37239501508530937
  - 0.3771729124642044
  train_average_precision_micro:
  - 0.36321614923510726
  - 0.3652070525680349
  - 0.36513732024274675
  - 0.3719180559811108
  - 0.3996400368917419
  train_average_precision_micro_oob:
  - 0.333824452016802
  - 0.33002651604312255
  - 0.33367415222702246
  - 0.3403636551593655
  - 0.35600454656663355
  train_average_precision_samples:
  - 0.3527911497775839
  - 0.3950207639403376
  - 0.36042866774698173
  - 0.37502545876819127
  - 0.3803960067889331
  train_average_precision_samples_oob:
  - 0.3146363338844649
  - 0.34686491319813256
  - 0.3241388184304116
  - 0.3349280566786102
  - 0.3371514823499683
  train_average_precision_weighted:
  - 0.550093708680475
  - 0.5179999116760666
  - 0.5524807283435801
  - 0.5390606382060084
  - 0.5741783022947301
  train_average_precision_weighted_oob:
  - 0.5046194056857765
  - 0.4732326061514167
  - 0.5066522480358006
  - 0.49098888126479256
  - 0.5108072951798843
  train_f1_macro:
  - 0.916156670746634
  - 0.9190126478988169
  - 0.9172786617707057
  - 0.9165646674826602
  - 0.9254385964912281
  train_f1_macro_oob:
  - 0.9199306405548756
  - 0.918298653610771
  - 0.9174826601387189
  - 0.9187066503467972
  - 0.9257445940432475
  train_f1_micro:
  - 0.916156670746634
  - 0.9190126478988168
  - 0.9172786617707058
  - 0.9165646674826602
  - 0.9254385964912281
  train_f1_micro_oob:
  - 0.9199306405548756
  - 0.9182986536107711
  - 0.9174826601387189
  - 0.9187066503467972
  - 0.9257445940432476
  train_f1_samples:
  - 0.9161566707466341
  - 0.9190126478988169
  - 0.9172786617707058
  - 0.9165646674826602
  - 0.925438596491228
  train_f1_samples_oob:
  - 0.9199306405548756
  - 0.9182986536107711
  - 0.9174826601387189
  - 0.9187066503467973
  - 0.9257445940432477
  train_f1_weighted:
  - 0.9194916517590935
  - 0.9243305144467935
  - 0.923147493147051
  - 0.9218235511258769
  - 0.9300713718081357
  train_f1_weighted_oob:
  - 0.9208668753726895
  - 0.9189827049565423
  - 0.9203363103133199
  - 0.9210815799187891
  - 0.925753077534374
  train_jaccard_macro:
  - 0.8455756592360522
  - 0.8505777374515384
  - 0.8478883947135809
  - 0.8467737998246231
  - 0.8616819903984381
  train_jaccard_macro_oob:
  - 0.8520485522860376
  - 0.8494353506216828
  - 0.8481771311041759
  - 0.8504855082509618
  - 0.8622018231209976
  train_jaccard_micro:
  - 0.8452851496329757
  - 0.85016040762408
  - 0.8471973622232689
  - 0.8459800414234607
  - 0.8612244897959184
  train_jaccard_micro_oob:
  - 0.8517329303994712
  - 0.848939179632249
  - 0.8475454631112787
  - 0.849636826714461
  - 0.8617546524876567
  train_jaccard_samples:
  - 0.860658939838507
  - 0.8686709674761663
  - 0.8617699576883938
  - 0.8610665760733169
  - 0.8740087955462535
  train_jaccard_samples_oob:
  - 0.8661008509960779
  - 0.8673650051158099
  - 0.8619999333076516
  - 0.8643416898421955
  - 0.8741603305570741
  train_jaccard_weighted:
  - 0.8512142590775199
  - 0.8596496704261306
  - 0.8577593753092997
  - 0.8554204891862182
  - 0.8697741843045003
  train_jaccard_weighted_oob:
  - 0.8535861961215472
  - 0.8506203719598884
  - 0.8528499897392862
  - 0.8542553984894099
  - 0.8623139708728301
  train_label_ranking_average_precision_score:
  - 0.8217833978395986
  - 0.8465711515372365
  - 0.8139170398400051
  - 0.8343277843495868
  - 0.8261324408974601
  train_label_ranking_average_precision_score_oob:
  - 0.7836285819464802
  - 0.7984153007950312
  - 0.7776271905234349
  - 0.7942303822600053
  - 0.7828879164584948
  train_matthews_corrcoef_macro:
  - 0.39314807384450107
  - 0.412148459537599
  - 0.42309851680086935
  - 0.4066398226199557
  - 0.41132726294699556
  train_matthews_corrcoef_macro_oob:
  - 0.3783732198178571
  - 0.3879841866867566
  - 0.4107132998846172
  - 0.3930307769199145
  - 0.39586560365422574
  train_matthews_corrcoef_micro:
  - 0.4268133596513706
  - 0.44424687206670066
  - 0.45119481144726226
  - 0.43530767414602095
  - 0.4537317686177961
  train_matthews_corrcoef_micro_oob:
  - 0.41480134599666957
  - 0.40734674153653183
  - 0.42992920852229344
  - 0.42101080929688683
  - 0.4261714794973145
  train_matthews_corrcoef_samples:
  - 0.1999093772913356
  - 0.23028672234716718
  - 0.2270858531832121
  - 0.2025779314018579
  - 0.23035690437948084
  train_matthews_corrcoef_samples_oob:
  - 0.18905873389409644
  - 0.19868691772261124
  - 0.20554262534242057
  - 0.18704836637783123
  - 0.20867008058228095
  train_matthews_corrcoef_weighted:
  - 0.4979625748394636
  - 0.5146961285088268
  - 0.5279474054900171
  - 0.5059863679336284
  - 0.5171596968150656
  train_matthews_corrcoef_weighted_oob:
  - 0.47952938536552886
  - 0.47022515611005483
  - 0.5017316571176327
  - 0.486304375748155
  - 0.48465593011486985
  train_ndgc:
  - 0.4111498054383805
  - 0.4454400169784016
  - 0.4200939966712658
  - 0.42857692980006595
  - 0.4344952544987277
  train_ndgc_oob:
  - 0.383633415526769
  - 0.41070118905531394
  - 0.39391361080798637
  - 0.3983696446052917
  - 0.4032871091301676
  train_neg_coverage_error:
  - -2.0872093023255816
  - -1.994186046511628
  - -2.108527131782946
  - -2.062015503875969
  - -1.930232558139535
  train_neg_coverage_error_oob:
  - -2.866279069767442
  - -2.854651162790698
  - -2.8352713178294575
  - -2.8275193798449614
  - -2.796511627906977
  train_neg_hamming_loss_macro:
  - -0.08384332925336598
  - -0.08098735210118319
  - -0.08272133822929416
  - -0.08343533251733987
  - -0.07456140350877193
  train_neg_hamming_loss_macro_oob:
  - -0.08006935944512444
  - -0.08170134638922888
  - -0.08251733986128111
  - -0.08129334965320277
  - -0.07425540595675234
  train_neg_hamming_loss_micro:
  - -0.08384332925336598
  - -0.08098735210118319
  - -0.08272133822929417
  - -0.08343533251733987
  - -0.07456140350877193
  train_neg_hamming_loss_micro_oob:
  - -0.08006935944512444
  - -0.08170134638922888
  - -0.08251733986128111
  - -0.08129334965320277
  - -0.07425540595675234
  train_neg_hamming_loss_samples:
  - -0.08384332925336596
  - -0.08098735210118319
  - -0.08272133822929414
  - -0.08343533251733985
  - -0.07456140350877193
  train_neg_hamming_loss_samples_oob:
  - -0.08006935944512443
  - -0.08170134638922888
  - -0.08251733986128111
  - -0.08129334965320277
  - -0.07425540595675234
  train_neg_hamming_loss_weighted:
  - -0.08050834824090639
  - -0.07566948555320649
  - -0.07685250685294898
  - -0.0781764488741233
  - -0.06992862819186421
  train_neg_hamming_loss_weighted_oob:
  - -0.07913312462731067
  - -0.08101729504345782
  - -0.07966368968668022
  - -0.07891842008121076
  - -0.07424692246562607
  train_neg_label_ranking_loss:
  - -0.04486164248048653
  - -0.03782969086064161
  - -0.04792858680940076
  - -0.04373344472951176
  - -0.04112583390541667
  train_neg_label_ranking_loss_oob:
  - -0.07641322678942379
  - -0.07480678616109532
  - -0.0779676631634566
  - -0.07427002827567122
  - -0.07664880924542347
  train_precision_macro:
  - 0.916156670746634
  - 0.9190126478988169
  - 0.9172786617707057
  - 0.9165646674826602
  - 0.9254385964912281
  train_precision_macro_oob:
  - 0.9199306405548756
  - 0.918298653610771
  - 0.9174826601387189
  - 0.9187066503467972
  - 0.9257445940432475
  train_precision_micro:
  - 0.916156670746634
  - 0.9190126478988168
  - 0.9172786617707058
  - 0.9165646674826602
  - 0.9254385964912281
  train_precision_micro_oob:
  - 0.9199306405548756
  - 0.9182986536107711
  - 0.9174826601387189
  - 0.9187066503467972
  - 0.9257445940432476
  train_precision_samples:
  - 0.9161566707466341
  - 0.9190126478988169
  - 0.9172786617707058
  - 0.9165646674826602
  - 0.925438596491228
  train_precision_samples_oob:
  - 0.9199306405548756
  - 0.9182986536107711
  - 0.9174826601387189
  - 0.9187066503467973
  - 0.9257445940432477
  train_precision_weighted:
  - 0.9194916517590935
  - 0.9243305144467935
  - 0.923147493147051
  - 0.9218235511258769
  - 0.9300713718081357
  train_precision_weighted_oob:
  - 0.9208668753726895
  - 0.9189827049565423
  - 0.9203363103133199
  - 0.9210815799187891
  - 0.925753077534374
  train_recall_macro:
  - 0.916156670746634
  - 0.9190126478988169
  - 0.9172786617707057
  - 0.9165646674826602
  - 0.9254385964912281
  train_recall_macro_oob:
  - 0.9199306405548756
  - 0.918298653610771
  - 0.9174826601387189
  - 0.9187066503467972
  - 0.9257445940432475
  train_recall_micro:
  - 0.916156670746634
  - 0.9190126478988168
  - 0.9172786617707058
  - 0.9165646674826602
  - 0.9254385964912281
  train_recall_micro_oob:
  - 0.9199306405548756
  - 0.9182986536107711
  - 0.9174826601387189
  - 0.9187066503467972
  - 0.9257445940432476
  train_recall_samples:
  - 0.9161566707466341
  - 0.9190126478988169
  - 0.9172786617707058
  - 0.9165646674826602
  - 0.925438596491228
  train_recall_samples_oob:
  - 0.9199306405548756
  - 0.9182986536107711
  - 0.9174826601387189
  - 0.9187066503467973
  - 0.9257445940432477
  train_recall_weighted:
  - 0.9194916517590935
  - 0.9243305144467935
  - 0.923147493147051
  - 0.9218235511258769
  - 0.9300713718081357
  train_recall_weighted_oob:
  - 0.9208668753726895
  - 0.9189827049565423
  - 0.9203363103133199
  - 0.9210815799187891
  - 0.925753077534374
  train_roc_auc_macro:
  - 0.951372463443525
  - 0.9517294504939683
  - 0.9546083473138797
  - 0.9480287159700316
  - 0.9560809283457125
  train_roc_auc_macro_oob:
  - 0.9150392371423529
  - 0.9076450278903598
  - 0.9222528027489826
  - 0.9149359315281399
  - 0.9132918541245959
  train_roc_auc_micro:
  - 0.9471224273356974
  - 0.948123599350556
  - 0.9475180257971554
  - 0.9480099969721696
  - 0.9532807137282853
  train_roc_auc_micro_oob:
  - 0.9172584968349187
  - 0.9149692469651234
  - 0.9198194223712499
  - 0.919617364350633
  - 0.9192307043455641
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9572283325396238
  - 0.9566505811191419
  - 0.9592034908198932
  - 0.9553830815970529
  - 0.9620687029782903
  train_roc_auc_weighted_oob:
  - 0.921758033275683
  - 0.9171373722649474
  - 0.9267443937402143
  - 0.9232344599123005
  - 0.9210624951640058
start: 2023-12-12 17:10:24.532226
wrapper: null
