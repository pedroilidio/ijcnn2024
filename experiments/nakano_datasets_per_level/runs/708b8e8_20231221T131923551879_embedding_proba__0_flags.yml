active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D8wMzMzMzPzv4CZmZmZmcm/MDMzMzMz87+gmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z+AmZmZmZnJPzAzMzMzM/M/0MzMzMzM/L+gmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZmZmZmZmFsA0MzMzMzMDQDQzMzMzMwtAmpmZmZmZEUBmZmZmZmYSwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z+YmZmZmZnpv5iZmZmZmem/mJmZmZmZ6b80MzMzMzPzPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmBkCQmZmZmZkBwMCZmZmZmek/AJmZmZmZyb8gMzMzMzPzvw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:19:27.895445
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__0
  params: {}
hash: 708b8e867779511ad3910d4ac926423e75041a9bfb31caa5f0200fd503ad17b4
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/708b8e8_20231221T131923551879_embedding_proba__0_flags.yml
results:
  fit_time:
  - 1.3574531078338623
  - 1.3719096183776855
  - 1.3435370922088623
  - 1.35038423538208
  - 1.3830575942993164
  score_time:
  - 0.5257947444915771
  - 0.5868701934814453
  - 0.5922162532806396
  - 0.5989367961883545
  - 0.5952064990997314
  test_average_precision_macro:
  - 0.8130812564446472
  - 0.7316988290945028
  - 0.7949892480924322
  - 0.7772333995085621
  - 0.7419448700016412
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8702605036015532
  - 0.7751659783197428
  - 0.8364303668874039
  - 0.795807980108221
  - 0.8081557729928622
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8808090828924162
  - 0.8059717382888113
  - 0.855641186299081
  - 0.8227665852665851
  - 0.822311507936508
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8657090996907685
  - 0.7698756301317365
  - 0.8443912306372455
  - 0.8351654788220235
  - 0.8083577624377375
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7658730158730158
  - 0.7421602787456445
  - 0.7669172932330827
  - 0.7875457875457875
  - 0.7321428571428571
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7658730158730159
  - 0.7421602787456446
  - 0.7669172932330827
  - 0.7875457875457875
  - 0.7321428571428571
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7658730158730159
  - 0.7421602787456446
  - 0.7669172932330828
  - 0.7875457875457876
  - 0.7321428571428571
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7683792815371763
  - 0.720990391722099
  - 0.750725238292582
  - 0.7672734390291643
  - 0.7203703703703703
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6322733987509938
  - 0.5969161053389974
  - 0.6287237661049648
  - 0.6529123213373434
  - 0.5846965299229224
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6205787781350482
  - 0.590027700831025
  - 0.6219512195121951
  - 0.649546827794562
  - 0.5774647887323944
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6518939393939394
  - 0.6156196107415619
  - 0.6507575757575758
  - 0.6795130795130796
  - 0.612794289044289
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6336140737788648
  - 0.5679490737150323
  - 0.6061439878429142
  - 0.6243938295832471
  - 0.5662400494153571
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8808090828924162
  - 0.8059717382888113
  - 0.855641186299081
  - 0.8227665852665851
  - 0.8223115079365078
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21718341143427183
  - 0.2116591812017865
  - 0.26681568620052115
  - 0.2831598530890686
  - 0.17013078721891578
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.53175232609064
  - 0.480450567518495
  - 0.5324759425763634
  - 0.5747139460885342
  - 0.46322369481325704
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5109333221537947
  - 0.4600837491213051
  - 0.49558852941569304
  - 0.5405930220675238
  - 0.4274856911839966
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.20112811307971054
  - 0.1731164700870509
  - 0.2339742901976162
  - 0.260625722290105
  - 0.16508780855660873
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9398258518122454
  - 0.8837474960012905
  - 0.9092117320777878
  - 0.8852722291464469
  - 0.8943302967647011
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.888888888888889
  - -4.658536585365853
  - -4.315789473684211
  - -4.487179487179487
  - -4.65
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23412698412698413
  - -0.2578397212543554
  - -0.23308270676691728
  - -0.21245421245421245
  - -0.26785714285714285
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23412698412698413
  - -0.2578397212543554
  - -0.23308270676691728
  - -0.21245421245421245
  - -0.26785714285714285
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23412698412698413
  - -0.2578397212543554
  - -0.23308270676691725
  - -0.21245421245421248
  - -0.2678571428571428
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2316207184628237
  - -0.2790096082779009
  - -0.24927476170741816
  - -0.23272656097083577
  - -0.2796296296296297
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15787037037037038
  - -0.20772357723577234
  - -0.15789473684210525
  - -0.1730769230769231
  - -0.20083333333333334
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7658730158730158
  - 0.7421602787456445
  - 0.7669172932330827
  - 0.7875457875457875
  - 0.7321428571428571
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7658730158730159
  - 0.7421602787456446
  - 0.7669172932330827
  - 0.7875457875457875
  - 0.7321428571428571
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7658730158730159
  - 0.7421602787456446
  - 0.7669172932330828
  - 0.7875457875457876
  - 0.7321428571428571
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7683792815371763
  - 0.720990391722099
  - 0.750725238292582
  - 0.7672734390291643
  - 0.7203703703703703
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7658730158730158
  - 0.7421602787456445
  - 0.7669172932330827
  - 0.7875457875457875
  - 0.7321428571428571
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7658730158730159
  - 0.7421602787456446
  - 0.7669172932330827
  - 0.7875457875457875
  - 0.7321428571428571
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7658730158730159
  - 0.7421602787456446
  - 0.7669172932330828
  - 0.7875457875457876
  - 0.7321428571428571
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7683792815371763
  - 0.720990391722099
  - 0.750725238292582
  - 0.7672734390291643
  - 0.7203703703703703
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.829438749644836
  - 0.7244210646985642
  - 0.7907910462108463
  - 0.7627394417775543
  - 0.7988646581663218
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8534150502306185
  - 0.8174975562072336
  - 0.8533393757434997
  - 0.8485646704655413
  - 0.8202298850574712
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7922764227642277
  - 0.8421052631578947
  - .nan
  - 0.7991666666666667
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8092942255387843
  - 0.6969419633945325
  - 0.7570348817284936
  - 0.7412710877355313
  - 0.7786837689059911
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8793567795152603
  - 0.8920779776162407
  - 0.8824373661680791
  - 0.8842690484130458
  - 0.8783795050773271
  train_average_precision_macro_oob:
  - 0.7124081641735656
  - 0.7372073185586004
  - 0.7290939510548302
  - 0.6927196269510493
  - 0.7235117607540352
  train_average_precision_micro:
  - 0.8897313959360856
  - 0.9072213501170763
  - 0.8966646349236618
  - 0.8954276078481704
  - 0.8979955031421578
  train_average_precision_micro_oob:
  - 0.7978616007551935
  - 0.8274113648880664
  - 0.8042728966619315
  - 0.7991363279628922
  - 0.806117413883708
  train_average_precision_samples:
  - 0.87291968053044
  - 0.8910322647577549
  - 0.8764537545787545
  - 0.8872347670250897
  - 0.8786853226138941
  train_average_precision_samples_oob:
  - 0.8216541089009445
  - 0.8440919701213818
  - 0.8276536426536427
  - 0.8334784946236559
  - 0.8309755720470007
  train_average_precision_weighted:
  - 0.9240762796426816
  - 0.9311677424905184
  - 0.9238539435365262
  - 0.925517787663619
  - 0.9229349597717232
  train_average_precision_weighted_oob:
  - 0.7829786537992348
  - 0.8092896250738131
  - 0.7899725146060809
  - 0.7672164459602273
  - 0.7858708894849763
  train_f1_macro:
  - 0.801989150090416
  - 0.8179271708683472
  - 0.8150183150183149
  - 0.8175115207373272
  - 0.8191094619666048
  train_f1_macro_oob:
  - 0.7450271247739603
  - 0.7497665732959852
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076068
  train_f1_micro:
  - 0.8019891500904159
  - 0.8179271708683473
  - 0.815018315018315
  - 0.8175115207373271
  - 0.8191094619666048
  train_f1_micro_oob:
  - 0.7450271247739603
  - 0.7497665732959851
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076066
  train_f1_samples:
  - 0.8019891500904158
  - 0.8179271708683473
  - 0.815018315018315
  - 0.817511520737327
  - 0.8191094619666047
  train_f1_samples_oob:
  - 0.74502712477396
  - 0.749766573295985
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076066
  train_f1_weighted:
  - 0.7906931886678723
  - 0.8070777106786948
  - 0.8018615094886281
  - 0.8040154251086492
  - 0.8067219587296068
  train_f1_weighted_oob:
  - 0.7324894514767932
  - 0.7449737816546137
  - 0.7404872277753635
  - 0.7287874150700864
  - 0.7422338655608254
  train_jaccard_macro:
  - 0.6716475201742228
  - 0.6931024049006417
  - 0.6895091051114555
  - 0.6928514322471051
  - 0.6959337620675049
  train_jaccard_macro_oob:
  - 0.5982414223243723
  - 0.6034373240098697
  - 0.6040026087169
  - 0.5889406550653847
  - 0.6042700793318564
  train_jaccard_micro:
  - 0.669433962264151
  - 0.6919431279620853
  - 0.6877897990726429
  - 0.691348402182385
  - 0.6936370777690495
  train_jaccard_micro_oob:
  - 0.5936599423631124
  - 0.5997012696041822
  - 0.6
  - 0.5827862873814734
  - 0.599406528189911
  train_jaccard_samples:
  - 0.7006147158045893
  - 0.7212857585406605
  - 0.716598679098679
  - 0.7200097751710655
  - 0.719674012855831
  train_jaccard_samples_oob:
  - 0.622472534497851
  - 0.6326015306407463
  - 0.6323727910266371
  - 0.6166025014412111
  - 0.6289813721631903
  train_jaccard_weighted:
  - 0.655719914815607
  - 0.6775192130758737
  - 0.6706584302946844
  - 0.6735010697957011
  - 0.6783986937985635
  train_jaccard_weighted_oob:
  - 0.5812010476354253
  - 0.5956434084239882
  - 0.5902134843032927
  - 0.5776840889253141
  - 0.5944163372487423
  train_label_ranking_average_precision_score:
  - 0.87291968053044
  - 0.8910322647577548
  - 0.8764537545787547
  - 0.8872347670250892
  - 0.8786853226138939
  train_label_ranking_average_precision_score_oob:
  - 0.8216541089009445
  - 0.8440919701213818
  - 0.8276536426536429
  - 0.8334784946236558
  - 0.8309755720470008
  train_matthews_corrcoef_macro:
  - 0.31847472938596005
  - 0.376052246053164
  - 0.38143828206409
  - 0.37832835635147727
  - 0.381456638540667
  train_matthews_corrcoef_macro_oob:
  - 0.1503265489494548
  - 0.17631438131380853
  - 0.21072935468950685
  - 0.17388416257395076
  - 0.18620287913068995
  train_matthews_corrcoef_micro:
  - 0.6028028864245633
  - 0.6357070723018676
  - 0.6299070873887154
  - 0.6352057898541844
  - 0.6383448957658012
  train_matthews_corrcoef_micro_oob:
  - 0.48841927004920643
  - 0.4994801134155909
  - 0.49943656595508085
  - 0.4722423836877095
  - 0.49853374979030113
  train_matthews_corrcoef_samples:
  - 0.5806902586967352
  - 0.6116688261726725
  - 0.60859323598417
  - 0.6193979536506604
  - 0.6156502599074786
  train_matthews_corrcoef_samples_oob:
  - 0.455931604132625
  - 0.45916222939551304
  - 0.4685751403497071
  - 0.4455882312527589
  - 0.4589356230450583
  train_matthews_corrcoef_weighted:
  - 0.3243922228561124
  - 0.3546201619892288
  - 0.3624808418591787
  - 0.3501910333093756
  - 0.32677267011450595
  train_matthews_corrcoef_weighted_oob:
  - 0.1528187383287309
  - 0.17141161344503983
  - 0.19187232082204236
  - 0.15268399533021368
  - 0.17591535210615103
  train_ndgc:
  - 0.9279897247050838
  - 0.9403508308515929
  - 0.9307184285490759
  - 0.9398473081098634
  - 0.9309845505531263
  train_ndgc_oob:
  - 0.8923410461958822
  - 0.9093766128958535
  - 0.9000441010092493
  - 0.9027932766945365
  - 0.8967308039781906
  train_neg_coverage_error:
  - -4.3164556962025316
  - -4.30718954248366
  - -4.378205128205129
  - -4.341935483870968
  - -4.337662337662338
  train_neg_coverage_error_oob:
  - -4.60126582278481
  - -4.607843137254902
  - -4.685897435897436
  - -4.658064516129032
  - -4.590909090909091
  train_neg_hamming_loss_macro:
  - -0.1980108499095841
  - -0.18207282913165265
  - -0.184981684981685
  - -0.1824884792626728
  - -0.1808905380333952
  train_neg_hamming_loss_macro_oob:
  - -0.25497287522603973
  - -0.25023342670401494
  - -0.25
  - -0.2635944700460829
  - -0.2504638218923933
  train_neg_hamming_loss_micro:
  - -0.1980108499095841
  - -0.18207282913165265
  - -0.184981684981685
  - -0.1824884792626728
  - -0.18089053803339517
  train_neg_hamming_loss_micro_oob:
  - -0.2549728752260398
  - -0.25023342670401494
  - -0.25
  - -0.26359447004608294
  - -0.2504638218923933
  train_neg_hamming_loss_samples:
  - -0.1980108499095841
  - -0.18207282913165265
  - -0.18498168498168496
  - -0.1824884792626728
  - -0.18089053803339517
  train_neg_hamming_loss_samples_oob:
  - -0.25497287522603973
  - -0.2502334267040149
  - -0.24999999999999994
  - -0.26359447004608294
  - -0.2504638218923933
  train_neg_hamming_loss_weighted:
  - -0.2093068113321278
  - -0.1929222893213052
  - -0.1981384905113719
  - -0.19598457489135093
  - -0.19327804127039308
  train_neg_hamming_loss_weighted_oob:
  - -0.26751054852320677
  - -0.2550262183453863
  - -0.25951277222463665
  - -0.2712125849299137
  - -0.2577661344391746
  train_neg_label_ranking_loss:
  - -0.13744725738396626
  - -0.1215686274509804
  - -0.13344017094017094
  - -0.1288172043010753
  - -0.13127705627705627
  train_neg_label_ranking_loss_oob:
  - -0.1927215189873418
  - -0.1769063180827887
  - -0.19155982905982905
  - -0.1965591397849462
  - -0.18127705627705626
  train_precision_macro:
  - 0.801989150090416
  - 0.8179271708683472
  - 0.8150183150183149
  - 0.8175115207373272
  - 0.8191094619666048
  train_precision_macro_oob:
  - 0.7450271247739603
  - 0.7497665732959852
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076068
  train_precision_micro:
  - 0.8019891500904159
  - 0.8179271708683473
  - 0.815018315018315
  - 0.8175115207373271
  - 0.8191094619666048
  train_precision_micro_oob:
  - 0.7450271247739603
  - 0.7497665732959851
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076066
  train_precision_samples:
  - 0.8019891500904158
  - 0.8179271708683473
  - 0.815018315018315
  - 0.817511520737327
  - 0.8191094619666047
  train_precision_samples_oob:
  - 0.74502712477396
  - 0.749766573295985
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076066
  train_precision_weighted:
  - 0.7906931886678723
  - 0.8070777106786948
  - 0.8018615094886281
  - 0.8040154251086492
  - 0.8067219587296068
  train_precision_weighted_oob:
  - 0.7324894514767932
  - 0.7449737816546137
  - 0.7404872277753635
  - 0.7287874150700864
  - 0.7422338655608254
  train_recall_macro:
  - 0.801989150090416
  - 0.8179271708683472
  - 0.8150183150183149
  - 0.8175115207373272
  - 0.8191094619666048
  train_recall_macro_oob:
  - 0.7450271247739603
  - 0.7497665732959852
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076068
  train_recall_micro:
  - 0.8019891500904159
  - 0.8179271708683473
  - 0.815018315018315
  - 0.8175115207373271
  - 0.8191094619666048
  train_recall_micro_oob:
  - 0.7450271247739603
  - 0.7497665732959851
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076066
  train_recall_samples:
  - 0.8019891500904158
  - 0.8179271708683473
  - 0.815018315018315
  - 0.817511520737327
  - 0.8191094619666047
  train_recall_samples_oob:
  - 0.74502712477396
  - 0.749766573295985
  - 0.75
  - 0.7364055299539171
  - 0.7495361781076066
  train_recall_weighted:
  - 0.7906931886678723
  - 0.8070777106786948
  - 0.8018615094886281
  - 0.8040154251086492
  - 0.8067219587296068
  train_recall_weighted_oob:
  - 0.7324894514767932
  - 0.7449737816546137
  - 0.7404872277753635
  - 0.7287874150700864
  - 0.7422338655608254
  train_roc_auc_macro:
  - 0.9152667300195237
  - 0.9262764874195911
  - 0.9143739722590277
  - 0.9197904104031894
  - 0.9135096198232909
  train_roc_auc_macro_oob:
  - 0.7429461537376799
  - 0.7836604026326321
  - 0.7492148785946646
  - 0.7399952220137624
  - 0.7311302453476666
  train_roc_auc_micro:
  - 0.8963576756003606
  - 0.9087853629608958
  - 0.900238677905677
  - 0.8993117191378805
  - 0.9021480371384769
  train_roc_auc_micro_oob:
  - 0.8269650028686174
  - 0.8416785851327311
  - 0.8301929229147574
  - 0.8233049723531451
  - 0.8316090469054139
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9106999765822993
  - 0.9245396274650098
  - 0.9119942909729151
  - 0.9195238442343733
  - 0.9083792803557605
  train_roc_auc_weighted_oob:
  - 0.719741891462541
  - 0.7622529409367258
  - 0.7280363630146562
  - 0.7217164734235382
  - 0.697161762327745
start: 2023-12-21 13:19:23.551879
wrapper: null
