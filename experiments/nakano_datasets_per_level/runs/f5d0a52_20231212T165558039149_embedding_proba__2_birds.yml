active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8L8AAAAAAADwPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D8yMzMzMzPzv5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T9oZmZmZmb2P6CZmZmZmdk/oJmZmZmZ2T/MzMzMzMwEwA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT80MzMzMzPzP5iZmZmZmem/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:56:16.649090
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f5d0a52e47a72ea6c5a2d6211b2530641921643f2d9969aa44ffe75b02ecde7b
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f5d0a52_20231212T165558039149_embedding_proba__2_birds.yml
results:
  fit_time:
  - 6.184672594070435
  - 6.199211120605469
  - 6.173017978668213
  - 6.983463525772095
  - 6.475581169128418
  score_time:
  - 2.854416608810425
  - 3.024214267730713
  - 2.7457478046417236
  - 3.1481740474700928
  - 2.939084768295288
  test_average_precision_macro:
  - 0.5457792448417313
  - 0.4765139906917235
  - 0.5786841865705604
  - 0.5197033152338956
  - 0.5529364427432503
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5153696522969443
  - 0.5213341565896801
  - 0.5267857330021429
  - 0.5513235779595976
  - 0.6032157586243427
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3520331229291558
  - 0.3534199634938829
  - 0.35813842990199574
  - 0.3140671074631403
  - 0.3413536682049534
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5630231374970862
  - 0.5816708126509836
  - 0.603355672084866
  - 0.5894739583174003
  - 0.64506879006282
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9534883720930232
  - 0.9543043655650754
  - 0.9514483884128925
  - 0.9571603427172583
  - 0.9555283557731539
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9534883720930233
  - 0.9543043655650755
  - 0.9514483884128927
  - 0.9571603427172583
  - 0.9555283557731539
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9534883720930233
  - 0.9543043655650755
  - 0.9514483884128926
  - 0.9571603427172583
  - 0.9555283557731538
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9306564922480621
  - 0.9337561663143058
  - 0.9313235716336494
  - 0.9400147655961612
  - 0.9383924928600571
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9128907160912766
  - 0.9140068001173844
  - 0.9089125149098048
  - 0.9189304565683202
  - 0.9160190506376924
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9111111111111111
  - 0.9126024190401872
  - 0.9073929961089494
  - 0.9178403755868545
  - 0.91484375
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9164437236732484
  - 0.9181923233490474
  - 0.9126045227663024
  - 0.9226282761166482
  - 0.9198934309146645
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8721525267768117
  - 0.8768922225559236
  - 0.8731964434697478
  - 0.8876809793984389
  - 0.8849887967994248
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7861416500609387
  - 0.7875284906256661
  - 0.7999988950182746
  - 0.8101911384708923
  - 0.814221885259217
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11318423647830783
  - 0.16759164037854027
  - 0.08455672752897773
  - 0.13720931471512365
  - 0.12697699372387783
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.34847044320487314
  - 0.3972251291721917
  - 0.33729916702616836
  - 0.4002554489776488
  - 0.41815126816639925
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09911797644099757
  - 0.1444960930641864
  - 0.08242989405845419
  - 0.09686615353632202
  - 0.12806133073535564
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2239290311720696
  - 0.2953215412580857
  - 0.19696359769018845
  - 0.2792362794546561
  - 0.2703419748673905
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4131380835149074
  - 0.4163753019510522
  - 0.41793396430038227
  - 0.3730329856319523
  - 0.39930349336653953
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8372093023255816
  - -3.124031007751938
  - -2.86046511627907
  - -2.852713178294574
  - -2.7829457364341086
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.046511627906976744
  - -0.04569563443492452
  - -0.0485516115871073
  - -0.042839657282741736
  - -0.044471644226846185
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.046511627906976744
  - -0.04569563443492452
  - -0.0485516115871073
  - -0.042839657282741736
  - -0.044471644226846185
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.046511627906976744
  - -0.04569563443492452
  - -0.04855161158710731
  - -0.042839657282741736
  - -0.044471644226846185
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.069343507751938
  - -0.06624383368569414
  - -0.06867642836635086
  - -0.05998523440383906
  - -0.06160750713994288
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07881441783630566
  - -0.09458251000658661
  - -0.07499420957013297
  - -0.07723465355134303
  - -0.07596835891979531
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9534883720930232
  - 0.9543043655650754
  - 0.9514483884128925
  - 0.9571603427172583
  - 0.9555283557731539
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9534883720930233
  - 0.9543043655650755
  - 0.9514483884128927
  - 0.9571603427172583
  - 0.9555283557731539
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9534883720930233
  - 0.9543043655650755
  - 0.9514483884128926
  - 0.9571603427172583
  - 0.9555283557731538
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9306564922480621
  - 0.9337561663143058
  - 0.9313235716336494
  - 0.9400147655961612
  - 0.9383924928600571
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9534883720930232
  - 0.9543043655650754
  - 0.9514483884128925
  - 0.9571603427172583
  - 0.9555283557731539
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9534883720930233
  - 0.9543043655650755
  - 0.9514483884128927
  - 0.9571603427172583
  - 0.9555283557731539
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9534883720930233
  - 0.9543043655650755
  - 0.9514483884128926
  - 0.9571603427172583
  - 0.9555283557731538
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9306564922480621
  - 0.9337561663143058
  - 0.9313235716336494
  - 0.9400147655961612
  - 0.9383924928600571
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9080473995855113
  - .nan
  - 0.9129034563762783
  - 0.905983021509968
  - 0.8938215331193414
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9089051738054239
  - 0.8973564885595935
  - 0.9180899379517687
  - 0.9221368834272061
  - 0.9172526873698482
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.885728566177094
  - .nan
  - 0.9002721321924276
  - 0.9099418997755994
  - 0.9052439901607435
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9528495442590686
  - 0.9441501130685898
  - 0.9427660121644041
  - 0.9520744033822858
  - 0.9590249947523816
  train_average_precision_macro_oob:
  - 0.5989268878579981
  - 0.5977441689072159
  - 0.550651453713869
  - 0.6244632284132112
  - 0.580566863000791
  train_average_precision_micro:
  - 0.9200328850823312
  - 0.924783961473063
  - 0.9133192104873153
  - 0.9302289888924539
  - 0.9323562007317091
  train_average_precision_micro_oob:
  - 0.7011110105544637
  - 0.7232999508614466
  - 0.6838025405007373
  - 0.7235228533780211
  - 0.7278884392874981
  train_average_precision_samples:
  - 0.511583687092408
  - 0.5148928725236864
  - 0.510125269863642
  - 0.5344795896394734
  - 0.5255025685984989
  train_average_precision_samples_oob:
  - 0.41293674342579945
  - 0.42841035256732934
  - 0.414575808073855
  - 0.4465326749580475
  - 0.4347340813098337
  train_average_precision_weighted:
  - 0.951172990385967
  - 0.9483027341654447
  - 0.9443520560075233
  - 0.9519040975584189
  - 0.9606481807808976
  train_average_precision_weighted_oob:
  - 0.7155196428029572
  - 0.7171394933310027
  - 0.6890461109681053
  - 0.7302167108301333
  - 0.7254096679890567
  train_f1_macro:
  - 0.967360261117911
  - 0.9688902488780089
  - 0.9656262749898002
  - 0.9667482660138718
  - 0.9688902488780089
  train_f1_macro_oob:
  - 0.9583843329253365
  - 0.9590983272133823
  - 0.9583843329253365
  - 0.9571603427172583
  - 0.9580783353733168
  train_f1_micro:
  - 0.9673602611179111
  - 0.968890248878009
  - 0.9656262749898
  - 0.9667482660138719
  - 0.968890248878009
  train_f1_micro_oob:
  - 0.9583843329253366
  - 0.9590983272133823
  - 0.9583843329253366
  - 0.9571603427172583
  - 0.958078335373317
  train_f1_samples:
  - 0.967360261117911
  - 0.968890248878009
  - 0.9656262749898001
  - 0.966748266013872
  - 0.968890248878009
  train_f1_samples_oob:
  - 0.9583843329253366
  - 0.9590983272133823
  - 0.9583843329253365
  - 0.9571603427172584
  - 0.9580783353733171
  train_f1_weighted:
  - 0.9609787190143544
  - 0.9643143544506818
  - 0.9584173500022406
  - 0.9588655449847311
  - 0.9647331458584416
  train_f1_weighted_oob:
  - 0.9451911456951689
  - 0.9458812260536401
  - 0.9439664829502172
  - 0.9414603887714353
  - 0.9446688687526968
  train_jaccard_macro:
  - 0.9372479911118196
  - 0.9400428186872272
  - 0.9340410866400294
  - 0.9360575458810946
  - 0.9401013521643896
  train_jaccard_macro_oob:
  - 0.9209177007243
  - 0.9222239493593584
  - 0.9209771352315471
  - 0.9188520961277747
  - 0.9203581207625069
  train_jaccard_micro:
  - 0.9367838798893718
  - 0.9396577307349886
  - 0.9335371265161226
  - 0.9356367226061204
  - 0.9396577307349886
  train_jaccard_micro_oob:
  - 0.9200940070505288
  - 0.9214110730034297
  - 0.9200940070505288
  - 0.9178403755868545
  - 0.9195301027900147
  train_jaccard_samples:
  - 0.9402245406542677
  - 0.942929292929293
  - 0.937276035670879
  - 0.9392366901719784
  - 0.942821505536369
  train_jaccard_samples_oob:
  - 0.9248277225526974
  - 0.9260814668423365
  - 0.9248974870764558
  - 0.9226892097342048
  - 0.9243298396357043
  train_jaccard_weighted:
  - 0.9252298225116807
  - 0.9313933618094249
  - 0.9205251302742269
  - 0.9212782375906057
  - 0.9322743775513233
  train_jaccard_weighted_oob:
  - 0.8966301366648591
  - 0.8979259849755254
  - 0.8945261776679416
  - 0.8902676700359093
  - 0.8956631600280931
  train_label_ranking_average_precision_score:
  - 0.9728239971699272
  - 0.9761331826012057
  - 0.9694275954450372
  - 0.9802160237480003
  - 0.9770529561953979
  train_label_ranking_average_precision_score_oob:
  - 0.8741770535033189
  - 0.8896506626448487
  - 0.8738781336552505
  - 0.8922691090665743
  - 0.8862844689067324
  train_matthews_corrcoef_macro:
  - 0.3371999642459309
  - 0.31053009092511724
  - 0.255345055179312
  - 0.30791077442174347
  - 0.3009838551730368
  train_matthews_corrcoef_macro_oob:
  - 0.17339648217680315
  - 0.1874177304525031
  - 0.15979249605694004
  - 0.1842754832759077
  - 0.15048741084774125
  train_matthews_corrcoef_micro:
  - 0.6149301929908245
  - 0.6340822861259615
  - 0.5813555472234487
  - 0.6075612354311721
  - 0.6332830056743898
  train_matthews_corrcoef_micro_oob:
  - 0.4640544630609267
  - 0.4725398239505922
  - 0.4537982064423324
  - 0.4430363686251903
  - 0.45082908620404755
  train_matthews_corrcoef_samples:
  - 0.23113064299976638
  - 0.24180000141604413
  - 0.21470147781482313
  - 0.23651636496208478
  - 0.25433978277065455
  train_matthews_corrcoef_samples_oob:
  - 0.14308362440036876
  - 0.15374919074052723
  - 0.1449152441834706
  - 0.13432314492722502
  - 0.1502095884632969
  train_matthews_corrcoef_weighted:
  - 0.5290903115439037
  - 0.5299914706549991
  - 0.46657528188231856
  - 0.512463191030143
  - 0.5242082944864789
  train_matthews_corrcoef_weighted_oob:
  - 0.3385235209901006
  - 0.35633420668033156
  - 0.3240183732709299
  - 0.33967633757354054
  - 0.31781710382404915
  train_ndgc:
  - 0.5221099859842183
  - 0.524195739188517
  - 0.521069811598852
  - 0.5423859867643321
  - 0.533764794015211
  train_ndgc_oob:
  - 0.45275905053073146
  - 0.46515737188796485
  - 0.4557460065633224
  - 0.48126944578901154
  - 0.47160084025522936
  train_neg_coverage_error:
  - -1.1686046511627908
  - -1.1414728682170543
  - -1.1666666666666667
  - -1.127906976744186
  - -1.122093023255814
  train_neg_coverage_error_oob:
  - -2.193798449612403
  - -2.184108527131783
  - -2.2267441860465116
  - -2.056201550387597
  - -2.10077519379845
  train_neg_hamming_loss_macro:
  - -0.032639738882088945
  - -0.031109751121991033
  - -0.03437372501019992
  - -0.033251733986128115
  - -0.031109751121991033
  train_neg_hamming_loss_macro_oob:
  - -0.04161566707466341
  - -0.0409016727866177
  - -0.0416156670746634
  - -0.042839657282741736
  - -0.04192166462668299
  train_neg_hamming_loss_micro:
  - -0.032639738882088945
  - -0.031109751121991023
  - -0.03437372501019992
  - -0.03325173398612811
  - -0.031109751121991023
  train_neg_hamming_loss_micro_oob:
  - -0.0416156670746634
  - -0.04090167278661771
  - -0.0416156670746634
  - -0.042839657282741736
  - -0.04192166462668299
  train_neg_hamming_loss_samples:
  - -0.032639738882088945
  - -0.03110975112199102
  - -0.03437372501019991
  - -0.03325173398612811
  - -0.03110975112199102
  train_neg_hamming_loss_samples_oob:
  - -0.0416156670746634
  - -0.04090167278661771
  - -0.0416156670746634
  - -0.04283965728274173
  - -0.04192166462668298
  train_neg_hamming_loss_weighted:
  - -0.039021280985645654
  - -0.035685645549318364
  - -0.04158264999775956
  - -0.04113445501526897
  - -0.03526685414155842
  train_neg_hamming_loss_weighted_oob:
  - -0.05480885430483097
  - -0.05411877394636015
  - -0.05603351704978268
  - -0.05853961122856472
  - -0.05533113124730319
  train_neg_label_ranking_loss:
  - -0.005111117444393778
  - -0.004613954755028626
  - -0.005978460505649289
  - -0.0037874387481090627
  - -0.004186978408934633
  train_neg_label_ranking_loss_oob:
  - -0.04646776992450727
  - -0.04446140337470707
  - -0.047701836150878564
  - -0.039131338780791586
  - -0.04200664911164227
  train_precision_macro:
  - 0.967360261117911
  - 0.9688902488780089
  - 0.9656262749898002
  - 0.9667482660138718
  - 0.9688902488780089
  train_precision_macro_oob:
  - 0.9583843329253365
  - 0.9590983272133823
  - 0.9583843329253365
  - 0.9571603427172583
  - 0.9580783353733168
  train_precision_micro:
  - 0.9673602611179111
  - 0.968890248878009
  - 0.9656262749898
  - 0.9667482660138719
  - 0.968890248878009
  train_precision_micro_oob:
  - 0.9583843329253366
  - 0.9590983272133823
  - 0.9583843329253366
  - 0.9571603427172583
  - 0.958078335373317
  train_precision_samples:
  - 0.967360261117911
  - 0.968890248878009
  - 0.9656262749898001
  - 0.966748266013872
  - 0.968890248878009
  train_precision_samples_oob:
  - 0.9583843329253366
  - 0.9590983272133823
  - 0.9583843329253365
  - 0.9571603427172584
  - 0.9580783353733171
  train_precision_weighted:
  - 0.9609787190143544
  - 0.9643143544506818
  - 0.9584173500022406
  - 0.9588655449847311
  - 0.9647331458584416
  train_precision_weighted_oob:
  - 0.9451911456951689
  - 0.9458812260536401
  - 0.9439664829502172
  - 0.9414603887714353
  - 0.9446688687526968
  train_recall_macro:
  - 0.967360261117911
  - 0.9688902488780089
  - 0.9656262749898002
  - 0.9667482660138718
  - 0.9688902488780089
  train_recall_macro_oob:
  - 0.9583843329253365
  - 0.9590983272133823
  - 0.9583843329253365
  - 0.9571603427172583
  - 0.9580783353733168
  train_recall_micro:
  - 0.9673602611179111
  - 0.968890248878009
  - 0.9656262749898
  - 0.9667482660138719
  - 0.968890248878009
  train_recall_micro_oob:
  - 0.9583843329253366
  - 0.9590983272133823
  - 0.9583843329253366
  - 0.9571603427172583
  - 0.958078335373317
  train_recall_samples:
  - 0.967360261117911
  - 0.968890248878009
  - 0.9656262749898001
  - 0.966748266013872
  - 0.968890248878009
  train_recall_samples_oob:
  - 0.9583843329253366
  - 0.9590983272133823
  - 0.9583843329253365
  - 0.9571603427172584
  - 0.9580783353733171
  train_recall_weighted:
  - 0.9609787190143544
  - 0.9643143544506818
  - 0.9584173500022406
  - 0.9588655449847311
  - 0.9647331458584416
  train_recall_weighted_oob:
  - 0.9451911456951689
  - 0.9458812260536401
  - 0.9439664829502172
  - 0.9414603887714353
  - 0.9446688687526968
  train_roc_auc_macro:
  - 0.997095091105357
  - 0.9966932113083167
  - 0.9966428192696986
  - 0.9971736355460525
  - 0.9976643539654804
  train_roc_auc_macro_oob:
  - 0.9345638109753434
  - 0.9496563675923091
  - 0.9264715799385417
  - 0.9378645848582959
  - 0.949768532480009
  train_roc_auc_micro:
  - 0.9953635362937963
  - 0.995593993565596
  - 0.994950523094929
  - 0.9961482140290354
  - 0.9960735606725852
  train_roc_auc_micro_oob:
  - 0.9535474572089665
  - 0.9566602355649009
  - 0.9489144340582891
  - 0.9558717838148627
  - 0.9568697491110719
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.996106959866699
  - 0.9959292207749902
  - 0.9953571912401309
  - 0.9960776874979839
  - 0.9969642089926838
  train_roc_auc_weighted_oob:
  - 0.9539395638779532
  - 0.9575998512337841
  - 0.9473782993318761
  - 0.9569242762090048
  - 0.9586626655602919
start: 2023-12-12 16:55:58.039149
wrapper: null
