active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8L8AAAAAAAAAAAAAAAAAAPA/AAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T8yMzMzMzPzv87MzMzMzPw/MjMzMzMz87+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv2hmZmZmZvY/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:59:40.312796
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: c7a732f5de08b127bac70ff296d1ecf03593e4e8b81ff6394960c4caff39700b
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c7a732f_20231212T165856090722_embedding_proba__8_birds.yml
results:
  fit_time:
  - 19.41405749320984
  - 19.378445863723755
  - 21.850472688674927
  - 20.445597648620605
  - 21.735949516296387
  score_time:
  - 7.751556396484375
  - 7.447601079940796
  - 7.824409008026123
  - 8.0178861618042
  - 7.63582181930542
  test_average_precision_macro:
  - 0.4186260267740394
  - 0.4027238729481405
  - 0.4361892504845185
  - 0.4283676394902221
  - 0.380067126272661
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4976786357873643
  - 0.44166675178256615
  - 0.46106706619918947
  - 0.5097865319157593
  - 0.49719552638339115
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2999459012708407
  - 0.3312425317780274
  - 0.2909556338156909
  - 0.33968914836315894
  - 0.3095132667954086
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.533243813367902
  - 0.48387701330453975
  - 0.501898109059177
  - 0.5273076667854955
  - 0.5139300213972369
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9555283557731539
  - 0.9522643818849448
  - 0.956752345981232
  - 0.9575683394532843
  - 0.9579763361893106
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9555283557731539
  - 0.9522643818849449
  - 0.9567523459812322
  - 0.9575683394532843
  - 0.9579763361893104
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9555283557731538
  - 0.9522643818849449
  - 0.9567523459812323
  - 0.9575683394532843
  - 0.9579763361893104
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9381580469744302
  - 0.933030250043714
  - 0.936384889873262
  - 0.9423375074537865
  - 0.940824900881709
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9162164250311446
  - 0.910294053574924
  - 0.9184097838822972
  - 0.9196634242599411
  - 0.92048545016186
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.91484375
  - 0.9088785046728972
  - 0.9170903402424716
  - 0.9185909980430529
  - 0.9193422083007048
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9207140741518902
  - 0.9147121948941971
  - 0.9219722867852291
  - 0.924130150267663
  - 0.9238012072188008
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8849855128264604
  - 0.8757597245534352
  - 0.8814240140208554
  - 0.8919969932436687
  - 0.8892682202709609
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7805660563096003
  - 0.7420952449563225
  - 0.7483199749009624
  - 0.7970534894484304
  - 0.782381483849672
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21221039504647154
  - 0.1815571010051242
  - 0.19788535023921713
  - 0.20415798972250326
  - 0.2458385041715061
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4374755466251759
  - 0.4087348313634264
  - 0.42729070904837285
  - 0.4690768593799698
  - 0.47615863513261475
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.16699178015000607
  - 0.18747310864852265
  - 0.15641612190463755
  - 0.202249451708482
  - 0.1742786205237451
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3349043256477997
  - 0.31648917115779474
  - 0.3521677633618229
  - 0.3644462475983327
  - 0.40516742329390765
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3659938505227278
  - 0.40475487741255844
  - 0.3628830782662556
  - 0.4032843530746422
  - 0.3758418939814635
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6744186046511627
  - -3.705426356589147
  - -3.488372093023256
  - -3.255813953488372
  - -3.6666666666666665
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.044471644226846185
  - -0.047735618115055084
  - -0.04324765401876785
  - -0.042431660546715634
  - -0.04202366381068952
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.044471644226846185
  - -0.04773561811505508
  - -0.04324765401876785
  - -0.04243166054671563
  - -0.04202366381068951
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.044471644226846185
  - -0.04773561811505507
  - -0.043247654018767845
  - -0.04243166054671562
  - -0.04202366381068952
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.061841953025569815
  - -0.06696974995628606
  - -0.06361511012673804
  - -0.05766249254621348
  - -0.05917509911829102
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.11842818920452299
  - -0.1201974717535593
  - -0.11568247454020367
  - -0.09744813946250336
  - -0.11136534717246072
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9555283557731539
  - 0.9522643818849448
  - 0.956752345981232
  - 0.9575683394532843
  - 0.9579763361893106
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9555283557731539
  - 0.9522643818849449
  - 0.9567523459812322
  - 0.9575683394532843
  - 0.9579763361893104
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9555283557731538
  - 0.9522643818849449
  - 0.9567523459812323
  - 0.9575683394532843
  - 0.9579763361893104
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9381580469744302
  - 0.933030250043714
  - 0.936384889873262
  - 0.9423375074537865
  - 0.940824900881709
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9555283557731539
  - 0.9522643818849448
  - 0.956752345981232
  - 0.9575683394532843
  - 0.9579763361893106
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9555283557731539
  - 0.9522643818849449
  - 0.9567523459812322
  - 0.9575683394532843
  - 0.9579763361893104
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9555283557731538
  - 0.9522643818849449
  - 0.9567523459812323
  - 0.9575683394532843
  - 0.9579763361893104
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9381580469744302
  - 0.933030250043714
  - 0.936384889873262
  - 0.9423375074537865
  - 0.940824900881709
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8276239584314635
  - 0.8268918023644104
  - 0.8627081788489587
  - 0.8681056863433791
  - 0.837725514913476
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8831157119022923
  - 0.8666662341790627
  - 0.8709848096944872
  - 0.8972591389653002
  - 0.8733383785206634
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8704208891517128
  - 0.8446082214568124
  - 0.8506608113635992
  - 0.8792234076894473
  - 0.8585802942687882
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9241203083029209
  - 0.9170262613835588
  - 0.9291202874756299
  - 0.9407540568125935
  - 0.9263004650969561
  train_average_precision_macro_oob:
  - 0.5968550821350906
  - 0.5552789415920016
  - 0.5693438505764563
  - 0.6009475053816979
  - 0.6064188646887528
  train_average_precision_micro:
  - 0.9345088046226856
  - 0.92767317307959
  - 0.9237682924027232
  - 0.931121390298648
  - 0.9320588772077455
  train_average_precision_micro_oob:
  - 0.7997002043833726
  - 0.7810315812881802
  - 0.7816841702796059
  - 0.787606320695026
  - 0.7980335566255398
  train_average_precision_samples:
  - 0.5281415343915343
  - 0.5029331241540544
  - 0.5109699920019687
  - 0.5209809892949429
  - 0.5236126491940445
  train_average_precision_samples_oob:
  - 0.46940748273825106
  - 0.44194032216917534
  - 0.4547879916244719
  - 0.4603878265155475
  - 0.4689705929072514
  train_average_precision_weighted:
  - 0.9423523857226329
  - 0.9343762716441424
  - 0.9385653687152042
  - 0.9468468498626015
  - 0.9419677065417985
  train_average_precision_weighted_oob:
  - 0.7584662658673027
  - 0.7289912983435225
  - 0.7438004181059402
  - 0.7652776964645189
  - 0.7511388617230298
  train_f1_macro:
  - 0.9770501835985312
  - 0.9747042023663809
  - 0.9754181966544265
  - 0.9752141982864135
  - 0.974704202366381
  train_f1_macro_oob:
  - 0.9710322317421459
  - 0.9683802529579763
  - 0.9684822521419827
  - 0.9677682578539372
  - 0.9686862505099959
  train_f1_micro:
  - 0.9770501835985312
  - 0.9747042023663811
  - 0.9754181966544268
  - 0.9752141982864138
  - 0.9747042023663811
  train_f1_micro_oob:
  - 0.971032231742146
  - 0.9683802529579764
  - 0.9684822521419829
  - 0.9677682578539372
  - 0.9686862505099959
  train_f1_samples:
  - 0.9770501835985312
  - 0.974704202366381
  - 0.9754181966544269
  - 0.9752141982864138
  - 0.9747042023663811
  train_f1_samples_oob:
  - 0.9710322317421461
  - 0.9683802529579765
  - 0.9684822521419828
  - 0.9677682578539372
  - 0.968686250509996
  train_f1_weighted:
  - 0.9765503875968993
  - 0.9731323185882844
  - 0.9753641061780597
  - 0.9740961003609682
  - 0.9739872826715283
  train_f1_weighted_oob:
  - 0.9674269528920691
  - 0.9628955943400438
  - 0.9643418193563542
  - 0.9621020474584294
  - 0.9651978004061244
  train_jaccard_macro:
  - 0.9553389509190451
  - 0.9508923631081234
  - 0.9522217842633891
  - 0.951823712770696
  - 0.9509132955009036
  train_jaccard_macro_oob:
  - 0.9440326060223718
  - 0.939105425085183
  - 0.9392877429823172
  - 0.9379765185986928
  - 0.9397904968037496
  train_jaccard_micro:
  - 0.9551301226443314
  - 0.9506565857540787
  - 0.9520159283225486
  - 0.9516273514481934
  - 0.9506565857540787
  train_jaccard_micro_oob:
  - 0.943695479777954
  - 0.9386988333003757
  - 0.9388905369326609
  - 0.9375494071146245
  - 0.9392740579566808
  train_jaccard_samples:
  - 0.957692408703531
  - 0.9534854539910151
  - 0.9549045269975502
  - 0.9544754200972605
  - 0.9536599564910991
  train_jaccard_samples_oob:
  - 0.946987351486846
  - 0.9424964472108053
  - 0.9428664807835688
  - 0.9413332370359672
  - 0.9430971567473084
  train_jaccard_weighted:
  - 0.9543817566017461
  - 0.947897753629773
  - 0.9521259273627108
  - 0.9496842212196571
  - 0.9496050608764379
  train_jaccard_weighted_oob:
  - 0.9371905530777898
  - 0.9287491991949741
  - 0.931471495707875
  - 0.9272885444659444
  - 0.9332704665996339
  train_label_ranking_average_precision_score:
  - 0.9777539374923097
  - 0.9699873877199457
  - 0.9663963485911159
  - 0.97640734588409
  - 0.9751630367909434
  train_label_ranking_average_precision_score_oob:
  - 0.9190198858390262
  - 0.9089945857350666
  - 0.9102143482136192
  - 0.9158141831046946
  - 0.9205209805041502
  train_matthews_corrcoef_macro:
  - 0.4537229963296685
  - 0.39923351805532475
  - 0.407538378067761
  - 0.4303617219671907
  - 0.4048408458743107
  train_matthews_corrcoef_macro_oob:
  - 0.35733142948811314
  - 0.31833725088795517
  - 0.31242208446930686
  - 0.3093827822981707
  - 0.3052013471164194
  train_matthews_corrcoef_micro:
  - 0.7441548212169944
  - 0.7142375806574923
  - 0.72771177038071
  - 0.7228923633596485
  - 0.7155685358232068
  train_matthews_corrcoef_micro_oob:
  - 0.6640000325191661
  - 0.626782251168345
  - 0.6346871992702638
  - 0.6210184569139228
  - 0.6325987422786538
  train_matthews_corrcoef_samples:
  - 0.36928947505411475
  - 0.32996572028377535
  - 0.35152938993120253
  - 0.34385580005613575
  - 0.3477186874836132
  train_matthews_corrcoef_samples_oob:
  - 0.2994808201566796
  - 0.266224522977373
  - 0.28483244213355197
  - 0.27317549408730857
  - 0.2830181086917197
  train_matthews_corrcoef_weighted:
  - 0.6797592083799574
  - 0.6388657173461337
  - 0.6515518706446248
  - 0.6590957416150638
  - 0.6435065119997098
  train_matthews_corrcoef_weighted_oob:
  - 0.5773358684123906
  - 0.533715367680866
  - 0.536935730593414
  - 0.5281123454664333
  - 0.5229950299994137
  train_ndgc:
  - 0.5366506173706198
  - 0.5138208795574855
  - 0.5244060695490871
  - 0.530233003728976
  - 0.5332872851868634
  train_ndgc_oob:
  - 0.499028421979293
  - 0.4744634659524045
  - 0.48673364166508004
  - 0.49054532924133165
  - 0.49787078819798963
  train_neg_coverage_error:
  - -1.1375968992248062
  - -1.1724806201550388
  - -1.2267441860465116
  - -1.1569767441860466
  - -1.1492248062015504
  train_neg_coverage_error_oob:
  - -1.8817829457364341
  - -1.9147286821705427
  - -2.011627906976744
  - -1.9612403100775193
  - -1.7751937984496124
  train_neg_hamming_loss_macro:
  - -0.02294981640146879
  - -0.025295797633618933
  - -0.024581803345573236
  - -0.02478580171358629
  - -0.025295797633618933
  train_neg_hamming_loss_macro_oob:
  - -0.02896776825785394
  - -0.03161974704202367
  - -0.031517747858017135
  - -0.03223174214606283
  - -0.031313749490004074
  train_neg_hamming_loss_micro:
  - -0.022949816401468787
  - -0.02529579763361893
  - -0.024581803345573236
  - -0.02478580171358629
  - -0.02529579763361893
  train_neg_hamming_loss_micro_oob:
  - -0.028967768257853937
  - -0.031619747042023666
  - -0.031517747858017135
  - -0.03223174214606283
  - -0.03131374949000408
  train_neg_hamming_loss_samples:
  - -0.022949816401468787
  - -0.02529579763361893
  - -0.024581803345573233
  - -0.02478580171358629
  - -0.025295797633618926
  train_neg_hamming_loss_samples_oob:
  - -0.028967768257853934
  - -0.031619747042023666
  - -0.031517747858017135
  - -0.03223174214606282
  - -0.031313749490004074
  train_neg_hamming_loss_weighted:
  - -0.023449612403100777
  - -0.026867681411715694
  - -0.02463589382194033
  - -0.025903899639031894
  - -0.026012717328471695
  train_neg_hamming_loss_weighted_oob:
  - -0.03257304710793083
  - -0.037104405659956256
  - -0.03565818064364576
  - -0.03789795254157051
  - -0.03480219959387552
  train_neg_label_ranking_loss:
  - -0.004358723463545626
  - -0.005510124691896237
  - -0.00674459457804191
  - -0.0048299875505757855
  - -0.00455219306963493
  train_neg_label_ranking_loss_oob:
  - -0.030179177614198135
  - -0.0318928020920155
  - -0.035056228066658986
  - -0.03304388491631994
  - -0.025422153307755224
  train_precision_macro:
  - 0.9770501835985312
  - 0.9747042023663809
  - 0.9754181966544265
  - 0.9752141982864135
  - 0.974704202366381
  train_precision_macro_oob:
  - 0.9710322317421459
  - 0.9683802529579763
  - 0.9684822521419827
  - 0.9677682578539372
  - 0.9686862505099959
  train_precision_micro:
  - 0.9770501835985312
  - 0.9747042023663811
  - 0.9754181966544268
  - 0.9752141982864138
  - 0.9747042023663811
  train_precision_micro_oob:
  - 0.971032231742146
  - 0.9683802529579764
  - 0.9684822521419829
  - 0.9677682578539372
  - 0.9686862505099959
  train_precision_samples:
  - 0.9770501835985312
  - 0.974704202366381
  - 0.9754181966544269
  - 0.9752141982864138
  - 0.9747042023663811
  train_precision_samples_oob:
  - 0.9710322317421461
  - 0.9683802529579765
  - 0.9684822521419828
  - 0.9677682578539372
  - 0.968686250509996
  train_precision_weighted:
  - 0.9765503875968993
  - 0.9731323185882844
  - 0.9753641061780597
  - 0.9740961003609682
  - 0.9739872826715283
  train_precision_weighted_oob:
  - 0.9674269528920691
  - 0.9628955943400438
  - 0.9643418193563542
  - 0.9621020474584294
  - 0.9651978004061244
  train_recall_macro:
  - 0.9770501835985312
  - 0.9747042023663809
  - 0.9754181966544265
  - 0.9752141982864135
  - 0.974704202366381
  train_recall_macro_oob:
  - 0.9710322317421459
  - 0.9683802529579763
  - 0.9684822521419827
  - 0.9677682578539372
  - 0.9686862505099959
  train_recall_micro:
  - 0.9770501835985312
  - 0.9747042023663811
  - 0.9754181966544268
  - 0.9752141982864138
  - 0.9747042023663811
  train_recall_micro_oob:
  - 0.971032231742146
  - 0.9683802529579764
  - 0.9684822521419829
  - 0.9677682578539372
  - 0.9686862505099959
  train_recall_samples:
  - 0.9770501835985312
  - 0.974704202366381
  - 0.9754181966544269
  - 0.9752141982864138
  - 0.9747042023663811
  train_recall_samples_oob:
  - 0.9710322317421461
  - 0.9683802529579765
  - 0.9684822521419828
  - 0.9677682578539372
  - 0.968686250509996
  train_recall_weighted:
  - 0.9765503875968993
  - 0.9731323185882844
  - 0.9753641061780597
  - 0.9740961003609682
  - 0.9739872826715283
  train_recall_weighted_oob:
  - 0.9674269528920691
  - 0.9628955943400438
  - 0.9643418193563542
  - 0.9621020474584294
  - 0.9651978004061244
  train_roc_auc_macro:
  - 0.9958143521915354
  - 0.9954682789244987
  - 0.9957597014532519
  - 0.9966272572686683
  - 0.9963350244614689
  train_roc_auc_macro_oob:
  - 0.9550035759453722
  - 0.9549576703835719
  - 0.9357031573030793
  - 0.9449495443668493
  - 0.9582234393635415
  train_roc_auc_micro:
  - 0.9960382626851821
  - 0.9954464469032303
  - 0.9950711840265528
  - 0.9959203902342721
  - 0.9960605385743566
  train_roc_auc_micro_oob:
  - 0.9706997978324993
  - 0.968620533726956
  - 0.9658336477648412
  - 0.9672006613582521
  - 0.9742245666067089
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9958991064798303
  - 0.9952043645430326
  - 0.9955021428872938
  - 0.9963137362148036
  - 0.9961207826133347
  train_roc_auc_weighted_oob:
  - 0.9689968632648962
  - 0.96711461174664
  - 0.965075389301339
  - 0.9677035617728199
  - 0.9719762095498505
start: 2023-12-12 16:58:56.090722
wrapper: null
