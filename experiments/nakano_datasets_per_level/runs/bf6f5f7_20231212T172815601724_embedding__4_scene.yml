active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b+AzMzMzMwMwACZmZmZmfm/ADIzMzMz47/AmZmZmZkdQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:32:04.305731
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: bf6f5f78fcf32826718882e115940dadbf06361f87c5a29ad152123138e0bc31
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bf6f5f7_20231212T172815601724_embedding__4_scene.yml
results:
  fit_time:
  - 137.6245059967041
  - 159.92657446861267
  - 147.2277126312256
  - 159.98046398162842
  - 171.78110766410828
  score_time:
  - 16.063437938690186
  - 12.043581247329712
  - 14.323417901992798
  - 12.168793678283691
  - 10.460754871368408
  test_average_precision_macro:
  - 0.8426903532352333
  - 0.8251522820900102
  - 0.8293519594197654
  - 0.8169707614439812
  - 0.8514716431789918
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8509766692743933
  - 0.824079816621854
  - 0.8434321221742668
  - 0.8176523317670746
  - 0.8609785503526693
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8734989648033126
  - 0.8607903780068729
  - 0.8757763975155279
  - 0.8585926694329185
  - 0.8851090014064696
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8320262817132743
  - 0.8101308834970071
  - 0.8183229555111386
  - 0.807286328824875
  - 0.8399391791710635
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8999309868875086
  - 0.8965635738831615
  - 0.8988957902001381
  - 0.8934993084370677
  - 0.8969760900140648
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8999309868875086
  - 0.8965635738831615
  - 0.898895790200138
  - 0.8934993084370678
  - 0.8969760900140648
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8999309868875088
  - 0.8965635738831615
  - 0.8988957902001382
  - 0.8934993084370679
  - 0.8969760900140649
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8939622852666332
  - 0.8909693918324942
  - 0.892984289839054
  - 0.8879347014775638
  - 0.8911971859723004
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8223847185133512
  - 0.8160783280112164
  - 0.8211120551335602
  - 0.8119694761773864
  - 0.8174155692972898
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8180677540777918
  - 0.8125194643413267
  - 0.8163585083046067
  - 0.8075
  - 0.8131973222824355
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8337769890564921
  - 0.8292587137947961
  - 0.8317065956817509
  - 0.8241948231574786
  - 0.8286116134217398
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8128395505665422
  - 0.8072125264039429
  - 0.8117320308473699
  - 0.8030989938165676
  - 0.8082277873629967
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8734989648033125
  - 0.8607903780068726
  - 0.8757763975155278
  - 0.8585926694329181
  - 0.8851090014064695
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6194686636727732
  - 0.605862587482599
  - 0.6089924841212961
  - 0.588353146960911
  - 0.6119375945834714
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.622382785438424
  - 0.6035980242986944
  - 0.6167586026220192
  - 0.5931528238353144
  - 0.6164326857634475
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.48672222149172906
  - 0.4775625130102851
  - 0.48167517730988313
  - 0.4642825717356974
  - 0.47503235950778555
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5987725076099686
  - 0.5865731110776728
  - 0.5872579124776008
  - 0.5690106116715816
  - 0.5929512860476597
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.906748981823408
  - 0.8974056876306902
  - 0.9089460230329339
  - 0.8955460735796298
  - 0.9157600814963142
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4409937888198758
  - -1.4659793814432989
  - -1.434782608695652
  - -1.4854771784232366
  - -1.419831223628692
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10006901311249138
  - -0.10343642611683847
  - -0.10110420979986197
  - -0.10650069156293222
  - -0.1030239099859353
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10006901311249138
  - -0.10343642611683848
  - -0.10110420979986197
  - -0.10650069156293222
  - -0.1030239099859353
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10006901311249136
  - -0.10343642611683847
  - -0.10110420979986198
  - -0.10650069156293222
  - -0.10302390998593529
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1060377147333669
  - -0.1090306081675058
  - -0.10701571016094605
  - -0.11206529852243634
  - -0.10880281402769955
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07148033126293996
  - -0.07804123711340205
  - -0.07003105590062113
  - -0.08112033195020749
  - -0.06344936708860759
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8999309868875086
  - 0.8965635738831615
  - 0.8988957902001381
  - 0.8934993084370677
  - 0.8969760900140648
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8999309868875086
  - 0.8965635738831615
  - 0.898895790200138
  - 0.8934993084370678
  - 0.8969760900140648
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8999309868875088
  - 0.8965635738831615
  - 0.8988957902001382
  - 0.8934993084370679
  - 0.8969760900140649
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8939622852666332
  - 0.8909693918324942
  - 0.892984289839054
  - 0.8879347014775638
  - 0.8911971859723004
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8999309868875086
  - 0.8965635738831615
  - 0.8988957902001381
  - 0.8934993084370677
  - 0.8969760900140648
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8999309868875086
  - 0.8965635738831615
  - 0.898895790200138
  - 0.8934993084370678
  - 0.8969760900140648
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8999309868875088
  - 0.8965635738831615
  - 0.8988957902001382
  - 0.8934993084370679
  - 0.8969760900140649
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8939622852666332
  - 0.8909693918324942
  - 0.892984289839054
  - 0.8879347014775638
  - 0.8911971859723004
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9474083022709934
  - 0.9364251320502878
  - 0.9437428174807025
  - 0.9364562219529796
  - 0.9474512848207425
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9521900652152755
  - 0.9437255930523983
  - 0.950505167846353
  - 0.941378397638196
  - 0.9561235151393239
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.92851966873706
  - 0.9219587628865978
  - 0.9299689440993789
  - 0.9188796680497926
  - 0.9365506329113923
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9422826559615145
  - 0.9292284714897946
  - 0.9392636513339571
  - 0.9317151436391176
  - 0.942265346097331
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9950642144600671
  - 0.9948825217918592
  - 0.9947941644581498
  - 0.9945044139431367
  - 0.9947731425504841
  train_average_precision_macro_oob:
  - 0.8682461922355241
  - 0.8710352544861445
  - 0.8660569541574737
  - 0.8692652475921877
  - 0.87306415980564
  train_average_precision_micro:
  - 0.9946817951541697
  - 0.9948168913151367
  - 0.9942274662390416
  - 0.9940263547450235
  - 0.9944390031684395
  train_average_precision_micro_oob:
  - 0.8728057636650068
  - 0.8755988868724127
  - 0.8714814236065573
  - 0.8736624086909162
  - 0.8758664751799929
  train_average_precision_samples:
  - 0.9886088011088012
  - 0.9883368019424211
  - 0.9879158004158004
  - 0.9893506493506493
  - 0.9887049491291601
  train_average_precision_samples_oob:
  - 0.8884961884961885
  - 0.8908428720083246
  - 0.8855509355509356
  - 0.8862077922077922
  - 0.8938178996378686
  train_average_precision_weighted:
  - 0.9950017886575324
  - 0.9947967977857719
  - 0.9946892344636921
  - 0.994442012143547
  - 0.9946564188452647
  train_average_precision_weighted_oob:
  - 0.8605040622850381
  - 0.8638414075246292
  - 0.8576495212698392
  - 0.8610737478233341
  - 0.8657642852699425
  train_f1_macro:
  - 0.9572938322938324
  - 0.956122095039889
  - 0.9560810810810811
  - 0.9568831168831168
  - 0.9569753405759615
  train_f1_macro_oob:
  - 0.9015939015939017
  - 0.9018383628165106
  - 0.9014206514206514
  - 0.903809523809524
  - 0.900758751508881
  train_f1_micro:
  - 0.9572938322938322
  - 0.956122095039889
  - 0.956081081081081
  - 0.9568831168831169
  - 0.9569753405759613
  train_f1_micro_oob:
  - 0.9015939015939016
  - 0.9018383628165105
  - 0.9014206514206514
  - 0.9038095238095238
  - 0.9007587515088809
  train_f1_samples:
  - 0.9572938322938324
  - 0.9561220950398891
  - 0.9560810810810813
  - 0.9568831168831169
  - 0.9569753405759615
  train_f1_samples_oob:
  - 0.9015939015939016
  - 0.9018383628165106
  - 0.9014206514206515
  - 0.9038095238095238
  - 0.9007587515088809
  train_f1_weighted:
  - 0.9558086332396928
  - 0.9544464668218069
  - 0.9540033356522718
  - 0.9550822678288828
  - 0.9554277683439718
  train_f1_weighted_oob:
  - 0.8966483509299185
  - 0.8971849948876157
  - 0.8963132899303111
  - 0.8986746715566831
  - 0.8956170492944991
  train_jaccard_macro:
  - 0.9184842400180054
  - 0.9163525083266831
  - 0.9164258867358349
  - 0.9177899925096958
  - 0.9178959360632324
  train_jaccard_macro_oob:
  - 0.8240777276932268
  - 0.8242084600615799
  - 0.8237419179867477
  - 0.8276687038118059
  - 0.8226852383838867
  train_jaccard_micro:
  - 0.9180859018027748
  - 0.9159328792158166
  - 0.9158576051779935
  - 0.9173306772908366
  - 0.917500206662809
  train_jaccard_micro_oob:
  - 0.820820189274448
  - 0.8212255211623499
  - 0.8205330389528466
  - 0.8245004344048653
  - 0.8194368185740059
  train_jaccard_samples:
  - 0.9282991782991783
  - 0.9262177295475943
  - 0.9260098010098009
  - 0.9273469387755101
  - 0.9276353065799523
  train_jaccard_samples_oob:
  - 0.8356969606969606
  - 0.8361206084931371
  - 0.8353875853875853
  - 0.8396042053184909
  - 0.8339492030645678
  train_jaccard_weighted:
  - 0.9157582880447602
  - 0.9132993487092588
  - 0.9126615806348877
  - 0.9145074197245836
  - 0.9150596566123459
  train_jaccard_weighted_oob:
  - 0.8161155416751337
  - 0.8166854591059735
  - 0.8155514943298118
  - 0.8194248367142589
  - 0.8144304668872827
  train_label_ranking_average_precision_score:
  - 0.988608801108801
  - 0.9883368019424208
  - 0.9879158004158002
  - 0.9893506493506491
  - 0.98870494912916
  train_label_ranking_average_precision_score_oob:
  - 0.8884961884961884
  - 0.8908428720083248
  - 0.8855509355509354
  - 0.8862077922077922
  - 0.8938178996378685
  train_matthews_corrcoef_macro:
  - 0.8528700266015622
  - 0.849454275461612
  - 0.8500184518465089
  - 0.8522008985852466
  - 0.8514416393896324
  train_matthews_corrcoef_macro_oob:
  - 0.6317531300716309
  - 0.633540309882514
  - 0.6321749074754439
  - 0.6427080124847709
  - 0.6273414810351899
  train_matthews_corrcoef_micro:
  - 0.8506898669764339
  - 0.8467476542071433
  - 0.8463972818446953
  - 0.8491999485650366
  - 0.8490256740030057
  train_matthews_corrcoef_micro_oob:
  - 0.6312128525316231
  - 0.6331746743501127
  - 0.6306979383204667
  - 0.64054019808556
  - 0.6262941994295086
  train_matthews_corrcoef_samples:
  - 0.7910394407090493
  - 0.7866127373470766
  - 0.7853771195814094
  - 0.7878978183971239
  - 0.7895264444471872
  train_matthews_corrcoef_samples_oob:
  - 0.48705400837506313
  - 0.4903262102904734
  - 0.48576306646550854
  - 0.5006893511945737
  - 0.477733810957883
  train_matthews_corrcoef_weighted:
  - 0.849385738183106
  - 0.8454269631972919
  - 0.844720760454359
  - 0.8477654149808357
  - 0.8477346605891039
  train_matthews_corrcoef_weighted_oob:
  - 0.6161678650453645
  - 0.6192337672187673
  - 0.6159699011367463
  - 0.6263169848298685
  - 0.610602312360402
  train_ndgc:
  - 0.9916849135342415
  - 0.9915357938935805
  - 0.9912038166303981
  - 0.9922443222357006
  - 0.9918114370557917
  train_ndgc_oob:
  - 0.9178496883339993
  - 0.9195891042419698
  - 0.9155130374058028
  - 0.9161308419493912
  - 0.9217198045465985
  train_neg_coverage_error:
  - -1.1018711018711018
  - -1.103537981269511
  - -1.1034303534303533
  - -1.1002597402597403
  - -1.0967408173823072
  train_neg_coverage_error_oob:
  - -1.4028066528066527
  - -1.406347554630593
  - -1.4147609147609148
  - -1.4103896103896103
  - -1.3900672529746507
  train_neg_hamming_loss_macro:
  - -0.042706167706167704
  - -0.04387790496011099
  - -0.04391891891891892
  - -0.043116883116883116
  - -0.043024659424038623
  train_neg_hamming_loss_macro_oob:
  - -0.09840609840609842
  - -0.09816163718348943
  - -0.09857934857934858
  - -0.09619047619047617
  - -0.09924124849111916
  train_neg_hamming_loss_micro:
  - -0.042706167706167704
  - -0.04387790496011099
  - -0.04391891891891892
  - -0.043116883116883116
  - -0.04302465942403863
  train_neg_hamming_loss_micro_oob:
  - -0.0984060984060984
  - -0.09816163718348941
  - -0.09857934857934858
  - -0.09619047619047619
  - -0.09924124849111916
  train_neg_hamming_loss_samples:
  - -0.042706167706167704
  - -0.04387790496011099
  - -0.04391891891891892
  - -0.043116883116883116
  - -0.043024659424038623
  train_neg_hamming_loss_samples_oob:
  - -0.0984060984060984
  - -0.09816163718348941
  - -0.09857934857934858
  - -0.09619047619047617
  - -0.09924124849111915
  train_neg_hamming_loss_weighted:
  - -0.044191366760307264
  - -0.04555353317819313
  - -0.045996664347728186
  - -0.044917732171117095
  - -0.044572231656028194
  train_neg_hamming_loss_weighted_oob:
  - -0.10335164907008158
  - -0.10281500511238444
  - -0.1036867100696888
  - -0.10132532844331685
  - -0.10438295070550081
  train_neg_label_ranking_loss:
  - -0.005327442827442828
  - -0.0052159209157128
  - -0.005496361746361747
  - -0.004987012987012988
  - -0.005095706156233834
  train_neg_label_ranking_loss_oob:
  - -0.06374740124740125
  - -0.06377471383975025
  - -0.06625519750519751
  - -0.06516883116883117
  - -0.06206673564407656
  train_precision_macro:
  - 0.9572938322938324
  - 0.956122095039889
  - 0.9560810810810811
  - 0.9568831168831168
  - 0.9569753405759615
  train_precision_macro_oob:
  - 0.9015939015939017
  - 0.9018383628165106
  - 0.9014206514206514
  - 0.903809523809524
  - 0.900758751508881
  train_precision_micro:
  - 0.9572938322938322
  - 0.956122095039889
  - 0.956081081081081
  - 0.9568831168831169
  - 0.9569753405759613
  train_precision_micro_oob:
  - 0.9015939015939016
  - 0.9018383628165105
  - 0.9014206514206514
  - 0.9038095238095238
  - 0.9007587515088809
  train_precision_samples:
  - 0.9572938322938324
  - 0.9561220950398891
  - 0.9560810810810813
  - 0.9568831168831169
  - 0.9569753405759615
  train_precision_samples_oob:
  - 0.9015939015939016
  - 0.9018383628165106
  - 0.9014206514206515
  - 0.9038095238095238
  - 0.9007587515088809
  train_precision_weighted:
  - 0.9558086332396928
  - 0.9544464668218069
  - 0.9540033356522718
  - 0.9550822678288828
  - 0.9554277683439718
  train_precision_weighted_oob:
  - 0.8966483509299185
  - 0.8971849948876157
  - 0.8963132899303111
  - 0.8986746715566831
  - 0.8956170492944991
  train_recall_macro:
  - 0.9572938322938324
  - 0.956122095039889
  - 0.9560810810810811
  - 0.9568831168831168
  - 0.9569753405759615
  train_recall_macro_oob:
  - 0.9015939015939017
  - 0.9018383628165106
  - 0.9014206514206514
  - 0.903809523809524
  - 0.900758751508881
  train_recall_micro:
  - 0.9572938322938322
  - 0.956122095039889
  - 0.956081081081081
  - 0.9568831168831169
  - 0.9569753405759613
  train_recall_micro_oob:
  - 0.9015939015939016
  - 0.9018383628165105
  - 0.9014206514206514
  - 0.9038095238095238
  - 0.9007587515088809
  train_recall_samples:
  - 0.9572938322938324
  - 0.9561220950398891
  - 0.9560810810810813
  - 0.9568831168831169
  - 0.9569753405759615
  train_recall_samples_oob:
  - 0.9015939015939016
  - 0.9018383628165106
  - 0.9014206514206515
  - 0.9038095238095238
  - 0.9007587515088809
  train_recall_weighted:
  - 0.9558086332396928
  - 0.9544464668218069
  - 0.9540033356522718
  - 0.9550822678288828
  - 0.9554277683439718
  train_recall_weighted_oob:
  - 0.8966483509299185
  - 0.8971849948876157
  - 0.8963132899303111
  - 0.8986746715566831
  - 0.8956170492944991
  train_roc_auc_macro:
  - 0.9988243423537733
  - 0.9987588917061451
  - 0.9987324585995072
  - 0.9986914262600531
  - 0.9986815215030801
  train_roc_auc_macro_oob:
  - 0.9540259961135038
  - 0.954959995622588
  - 0.9524759919107141
  - 0.9540206016737054
  - 0.9546208758271613
  train_roc_auc_micro:
  - 0.9987548342921132
  - 0.9988156411067459
  - 0.9986543679930893
  - 0.99860983163865
  - 0.9987026107111615
  train_roc_auc_micro_oob:
  - 0.9583047777066663
  - 0.9596460933266739
  - 0.9576679719425558
  - 0.9588566874342387
  - 0.958691072273042
  train_roc_auc_samples:
  - 0.9946725571725572
  - 0.9947840790842871
  - 0.9945036382536383
  - 0.9950129870129869
  - 0.9949042938437662
  train_roc_auc_samples_oob:
  - 0.9362525987525988
  - 0.9362252861602498
  - 0.9337448024948025
  - 0.9348311688311689
  - 0.9379332643559235
  train_roc_auc_weighted:
  - 0.998793267659528
  - 0.998714489813259
  - 0.9986803335778867
  - 0.998658854004957
  - 0.998627446928155
  train_roc_auc_weighted_oob:
  - 0.950625240770856
  - 0.9515455133606191
  - 0.94850404056994
  - 0.9503639083876884
  - 0.9511401803170936
start: 2023-12-12 17:28:15.601724
wrapper: null
