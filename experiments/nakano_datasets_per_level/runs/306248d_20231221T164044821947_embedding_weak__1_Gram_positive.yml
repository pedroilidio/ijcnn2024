active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwDNzMzMzPw/ADMzMzMz878AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:40:56.713249
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: 306248d451a2a64deb9e2a8fa2d88c8ebc4419723ba422f165173f871a69f9b9
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/306248d_20231221T164044821947_embedding_weak__1_Gram_positive.yml
results:
  fit_time:
  - 3.8418538570404053
  - 3.9307005405426025
  - 3.889775276184082
  - 3.963155508041382
  - 4.1435723304748535
  score_time:
  - 1.4236958026885986
  - 1.3421924114227295
  - 1.3329646587371826
  - 1.341843605041504
  - 1.4092864990234375
  test_average_precision_macro:
  - 0.8778443298526164
  - 0.9801204524642024
  - 0.9031645831120428
  - 0.9128366392405786
  - 0.9081125060125061
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9629865966637444
  - 0.979194140584813
  - 0.9871833926535888
  - 0.9677840025051277
  - 0.9893068763458603
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9455128205128206
  - 0.9684466019417476
  - 0.9746732026143792
  - 0.9563492063492063
  - 0.9722222222222222
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9581677073909264
  - 0.9911810892099352
  - 0.9832734615017553
  - 0.9592629646659172
  - 0.9878986692320028
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784315
  - 0.9571428571428571
  - 0.969047619047619
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784313
  - 0.9571428571428572
  - 0.969047619047619
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784313
  - 0.9571428571428572
  - 0.969047619047619
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9349816849816851
  - 0.9779686333084392
  - 0.9814391776127928
  - 0.9613656783468103
  - 0.9691609977324263
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8833890281258702
  - 0.9441700908197521
  - 0.9530821390044691
  - 0.9189430086548505
  - 0.9399847094801222
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8823529411764706
  - 0.9433962264150944
  - 0.9521531100478469
  - 0.9178082191780822
  - 0.9399538106235565
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9102564102564101
  - 0.9585760517799351
  - 0.9647058823529411
  - 0.9415873015873016
  - 0.953015873015873
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8788638262322472
  - 0.9576653296445999
  - 0.9645278716633227
  - 0.9268350537255435
  - 0.9401970778117568
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9455128205128205
  - 0.9684466019417476
  - 0.974673202614379
  - 0.9563492063492063
  - 0.9722222222222222
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6179025034618135
  - 0.6989051947882587
  - 0.7032216925927346
  - 0.667779250929555
  - 0.6929128979309026
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.830499680280269
  - 0.9221446063205377
  - 0.9345233832013454
  - 0.8857891561320319
  - 0.9166199015381172
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8044871794871795
  - 0.9149904556879254
  - 0.9248366013071896
  - 0.8848636533573616
  - 0.888888888888889
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8072725063761944
  - 0.9088327258131002
  - 0.9237604806404385
  - 0.8722454616418174
  - 0.9014266701181882
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9594025133764134
  - 0.977003472739798
  - 0.9809961403102436
  - 0.9674792888183874
  - 0.979271103036074
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1538461538461537
  - -1.116504854368932
  - -1.088235294117647
  - -1.1238095238095238
  - -1.0761904761904761
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0625
  - -0.029126213592233007
  - -0.024509803921568627
  - -0.04285714285714286
  - -0.030952380952380953
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0625
  - -0.02912621359223301
  - -0.024509803921568627
  - -0.04285714285714286
  - -0.030952380952380953
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0625
  - -0.02912621359223301
  - -0.024509803921568627
  - -0.04285714285714286
  - -0.030952380952380953
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06501831501831502
  - -0.022031366691560864
  - -0.01856082238720731
  - -0.03863432165318957
  - -0.030839002267573697
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04807692307692308
  - -0.03398058252427184
  - -0.0261437908496732
  - -0.0380952380952381
  - -0.025396825396825397
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784315
  - 0.9571428571428571
  - 0.969047619047619
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784313
  - 0.9571428571428572
  - 0.969047619047619
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784313
  - 0.9571428571428572
  - 0.969047619047619
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9349816849816851
  - 0.9779686333084392
  - 0.9814391776127928
  - 0.9613656783468103
  - 0.9691609977324263
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784315
  - 0.9571428571428571
  - 0.969047619047619
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784313
  - 0.9571428571428572
  - 0.969047619047619
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9375
  - 0.970873786407767
  - 0.9754901960784313
  - 0.9571428571428572
  - 0.969047619047619
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9349816849816851
  - 0.9779686333084392
  - 0.9814391776127928
  - 0.9613656783468103
  - 0.9691609977324263
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9837906492079899
  - 0.9970220836704455
  - 0.9953723359973361
  - 0.9840536883620336
  - 0.9973540110488639
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9829428877660389
  - 0.9859515484515485
  - 0.9936972783702054
  - 0.9845571445739695
  - 0.9951625094482237
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9519230769230769
  - 0.9660194174757282
  - 0.9738562091503268
  - 0.9619047619047619
  - 0.9746031746031747
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9869348992945187
  - 0.9976923387896955
  - 0.997676918550705
  - 0.9813290796734659
  - 0.9990305566671114
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9522064000626655
  - 0.9311252828481226
  - 0.936525063095552
  - 0.8928338667457928
  - 0.9011983348848367
  train_average_precision_macro_oob:
  - 0.8905660650655643
  - 0.8522203067720826
  - 0.8928994308227567
  - 0.8683280976213061
  - 0.9031508641818383
  train_average_precision_micro:
  - 0.9828237622174925
  - 0.980127479170808
  - 0.9855967138988552
  - 0.9867575817690998
  - 0.9868847237997647
  train_average_precision_micro_oob:
  - 0.975318820134626
  - 0.9713811816814517
  - 0.977100823765831
  - 0.9790101954425412
  - 0.9794782726236916
  train_average_precision_samples:
  - 0.968273092369478
  - 0.9649439102564104
  - 0.9734212629896084
  - 0.9667874396135265
  - 0.9706119162640903
  train_average_precision_samples_oob:
  - 0.9676706827309238
  - 0.960536858974359
  - 0.9574340527577938
  - 0.9601449275362319
  - 0.9563204508856683
  train_average_precision_weighted:
  - 0.9852004880412544
  - 0.9800811893574696
  - 0.9825198827941349
  - 0.9805196106962356
  - 0.9766009235864358
  train_average_precision_weighted_oob:
  - 0.9723846531692211
  - 0.9653800451791844
  - 0.9707154071514587
  - 0.973371249957322
  - 0.9720981286879435
  train_f1_macro:
  - 0.972289156626506
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_f1_macro_oob:
  - 0.9650602409638553
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.9649758454106281
  train_f1_micro:
  - 0.9722891566265061
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_f1_micro_oob:
  - 0.9650602409638555
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.964975845410628
  train_f1_samples:
  - 0.9722891566265061
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_f1_samples_oob:
  - 0.9650602409638555
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.964975845410628
  train_f1_weighted:
  - 0.9759554966276589
  - 0.9703850743528548
  - 0.9742948498344182
  - 0.9739454812961225
  - 0.9760881122437187
  train_f1_weighted_oob:
  - 0.9669510578197958
  - 0.963643978336699
  - 0.9621674089299989
  - 0.9656622528064506
  - 0.9677322423317847
  train_jaccard_macro:
  - 0.9462569541190847
  - 0.9354630715854614
  - 0.9420480976081043
  - 0.9427475600308967
  - 0.9450147497760669
  train_jaccard_macro_oob:
  - 0.9327840952571624
  - 0.9254817163541398
  - 0.9241467675016328
  - 0.9313070685012022
  - 0.9325187711750622
  train_jaccard_micro:
  - 0.9460726846424384
  - 0.9348837209302325
  - 0.9417927823050058
  - 0.9425219941348973
  - 0.9448032883147387
  train_jaccard_micro_oob:
  - 0.9324796274738067
  - 0.924812030075188
  - 0.9238754325259516
  - 0.931195335276968
  - 0.9323220536756126
  train_jaccard_samples:
  - 0.9595180722891564
  - 0.9528846153846153
  - 0.9555555555555555
  - 0.9581320450885668
  - 0.9571658615136875
  train_jaccard_samples_oob:
  - 0.9495582329317269
  - 0.944871794871795
  - 0.9421262989608313
  - 0.9491143317230274
  - 0.9465378421900161
  train_jaccard_weighted:
  - 0.9532180020232652
  - 0.9431185596834676
  - 0.9501507049024392
  - 0.9494476479930798
  - 0.9534986596231891
  train_jaccard_weighted_oob:
  - 0.9363432215672501
  - 0.9305552571431122
  - 0.9273912043050306
  - 0.9337301078288268
  - 0.9377068180959466
  train_label_ranking_average_precision_score:
  - 0.9682730923694779
  - 0.96494391025641
  - 0.9734212629896082
  - 0.9667874396135263
  - 0.9706119162640902
  train_label_ranking_average_precision_score_oob:
  - 0.9676706827309236
  - 0.9605368589743589
  - 0.9574340527577936
  - 0.9601449275362317
  - 0.9563204508856683
  train_matthews_corrcoef_macro:
  - 0.7018428296073163
  - 0.6865348114665543
  - 0.6970121159859848
  - 0.697255279490609
  - 0.7014659609228694
  train_matthews_corrcoef_macro_oob:
  - 0.6843354046662056
  - 0.6727606700516937
  - 0.6736435226313429
  - 0.6835053586925656
  - 0.6853385526790912
  train_matthews_corrcoef_micro:
  - 0.9257440985534368
  - 0.9099151734064994
  - 0.9195998005248902
  - 0.9207972186690807
  - 0.9240996400374873
  train_matthews_corrcoef_micro_oob:
  - 0.906165641122279
  - 0.8951704462607357
  - 0.8934830584334119
  - 0.9042843606281166
  - 0.9061948755095325
  train_matthews_corrcoef_samples:
  - 0.9126073513435395
  - 0.9032020452105022
  - 0.901835453575305
  - 0.9132014109683628
  - 0.9049341410871784
  train_matthews_corrcoef_samples_oob:
  - 0.8917238172069932
  - 0.884772558031015
  - 0.8730584751580389
  - 0.8910886077355625
  - 0.8783640927779996
  train_matthews_corrcoef_weighted:
  - 0.9110031045912921
  - 0.8965628010250691
  - 0.9042699267712896
  - 0.9060252311712982
  - 0.9089336709572068
  train_matthews_corrcoef_weighted_oob:
  - 0.8899192226570412
  - 0.8800641028009853
  - 0.87559831199478
  - 0.8874174207877609
  - 0.8892294496032208
  train_ndgc:
  - 0.9764643009689976
  - 0.9738397333988913
  - 0.9804159340254872
  - 0.9754431026295367
  - 0.9782774872367385
  train_ndgc_oob:
  - 0.9759631676538654
  - 0.9705115975647759
  - 0.9684453938665479
  - 0.9704074560051643
  - 0.9676601591298917
  train_neg_coverage_error:
  - -1.0987951807228915
  - -1.1033653846153846
  - -1.0743405275779376
  - -1.0942028985507246
  - -1.0821256038647342
  train_neg_coverage_error_oob:
  - -1.106024096385542
  - -1.1201923076923077
  - -1.1223021582733812
  - -1.1207729468599035
  - -1.1231884057971016
  train_neg_hamming_loss_macro:
  - -0.027710843373493978
  - -0.03365384615384616
  - -0.02997601918465228
  - -0.029589371980676328
  - -0.028381642512077296
  train_neg_hamming_loss_macro_oob:
  - -0.034939759036144574
  - -0.0390625
  - -0.03956834532374101
  - -0.035628019323671496
  - -0.035024154589371984
  train_neg_hamming_loss_micro:
  - -0.027710843373493974
  - -0.03365384615384615
  - -0.02997601918465228
  - -0.029589371980676328
  - -0.028381642512077296
  train_neg_hamming_loss_micro_oob:
  - -0.03493975903614458
  - -0.0390625
  - -0.039568345323741004
  - -0.035628019323671496
  - -0.035024154589371984
  train_neg_hamming_loss_samples:
  - -0.027710843373493974
  - -0.03365384615384615
  - -0.02997601918465228
  - -0.029589371980676328
  - -0.028381642512077296
  train_neg_hamming_loss_samples_oob:
  - -0.03493975903614458
  - -0.0390625
  - -0.039568345323741004
  - -0.035628019323671496
  - -0.035024154589371984
  train_neg_hamming_loss_weighted:
  - -0.02404450337234104
  - -0.02961492564714522
  - -0.025705150165581822
  - -0.026054518703877476
  - -0.023911887756281346
  train_neg_hamming_loss_weighted_oob:
  - -0.03304894218020407
  - -0.036356021663300896
  - -0.03783259107000114
  - -0.034337747193549505
  - -0.03226775766821534
  train_neg_label_ranking_loss:
  - -0.030120481927710843
  - -0.03205128205128205
  - -0.021982414068745
  - -0.0285829307568438
  - -0.02395330112721417
  train_neg_label_ranking_loss_oob:
  - -0.03253012048192771
  - -0.03766025641025641
  - -0.03796962430055955
  - -0.03743961352657005
  - -0.03743961352657004
  train_precision_macro:
  - 0.972289156626506
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_precision_macro_oob:
  - 0.9650602409638553
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.9649758454106281
  train_precision_micro:
  - 0.9722891566265061
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_precision_micro_oob:
  - 0.9650602409638555
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.964975845410628
  train_precision_samples:
  - 0.9722891566265061
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_precision_samples_oob:
  - 0.9650602409638555
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.964975845410628
  train_precision_weighted:
  - 0.9759554966276589
  - 0.9703850743528548
  - 0.9742948498344182
  - 0.9739454812961225
  - 0.9760881122437187
  train_precision_weighted_oob:
  - 0.9669510578197958
  - 0.963643978336699
  - 0.9621674089299989
  - 0.9656622528064506
  - 0.9677322423317847
  train_recall_macro:
  - 0.972289156626506
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_recall_macro_oob:
  - 0.9650602409638553
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.9649758454106281
  train_recall_micro:
  - 0.9722891566265061
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_recall_micro_oob:
  - 0.9650602409638555
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.964975845410628
  train_recall_samples:
  - 0.9722891566265061
  - 0.9663461538461539
  - 0.9700239808153477
  - 0.9704106280193237
  - 0.9716183574879227
  train_recall_samples_oob:
  - 0.9650602409638555
  - 0.9609375
  - 0.960431654676259
  - 0.9643719806763285
  - 0.964975845410628
  train_recall_weighted:
  - 0.9759554966276589
  - 0.9703850743528548
  - 0.9742948498344182
  - 0.9739454812961225
  - 0.9760881122437187
  train_recall_weighted_oob:
  - 0.9669510578197958
  - 0.963643978336699
  - 0.9621674089299989
  - 0.9656622528064506
  - 0.9677322423317847
  train_roc_auc_macro:
  - 0.9955196131780117
  - 0.9935237188032702
  - 0.9944536845534728
  - 0.9952821900159081
  - 0.9939510452570491
  train_roc_auc_macro_oob:
  - 0.9914665631365542
  - 0.9870477014861725
  - 0.9874331481913367
  - 0.992035333615223
  - 0.9906219874002963
  train_roc_auc_micro:
  - 0.9919426915994423
  - 0.9905167208212324
  - 0.9938854548229548
  - 0.9937928591751295
  - 0.9950143386075705
  train_roc_auc_micro_oob:
  - 0.9849004923375633
  - 0.9824788413798392
  - 0.9875152625152626
  - 0.9886483065363688
  - 0.9908055128274498
  train_roc_auc_samples:
  - 0.9698795180722891
  - 0.9679487179487178
  - 0.978017585931255
  - 0.9714170692431563
  - 0.9760466988727858
  train_roc_auc_samples_oob:
  - 0.9674698795180723
  - 0.9623397435897435
  - 0.9620303756994404
  - 0.9625603864734299
  - 0.9625603864734299
  train_roc_auc_weighted:
  - 0.9960771467223646
  - 0.9947378307392736
  - 0.9956745788221719
  - 0.997354883753267
  - 0.9953710711759829
  train_roc_auc_weighted_oob:
  - 0.9925072347756374
  - 0.9901835659081506
  - 0.9909871717073852
  - 0.9952263313518604
  - 0.9917478016096709
start: 2023-12-21 16:40:44.821947
wrapper: null
