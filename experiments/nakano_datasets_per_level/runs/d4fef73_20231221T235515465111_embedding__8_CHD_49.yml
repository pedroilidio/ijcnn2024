active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b/MzMzMzMz8vzQzMzMzM/M/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACEAAAAAAAAAAAAAAAAAAAPA/AAAAAAAAEMAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:56:39.907035
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__8
  params: {}
hash: d4fef737b45d15da64c42c60b795c13d54832576b7c4d517e014ee1ff423d309
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d4fef73_20231221T235515465111_embedding__8_CHD_49.yml
results:
  fit_time:
  - 59.10914063453674
  - 58.86879062652588
  - 63.66895842552185
  - 58.048797607421875
  - 60.87723183631897
  score_time:
  - 5.698302507400513
  - 5.766521215438843
  - 6.351161003112793
  - 5.774415969848633
  - 6.524104595184326
  test_average_precision_macro:
  - 0.5310951481402515
  - 0.4983099587065419
  - 0.5341387579323095
  - 0.5021373716814975
  - 0.4783121245979627
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7106794751713081
  - 0.688290917423444
  - 0.7009227713896574
  - 0.6717884363813945
  - 0.6560352954008838
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7996399176954732
  - 0.7618743743743744
  - 0.7761363636363635
  - 0.7747584541062803
  - 0.7799549549549548
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6501017881492579
  - 0.622693281575531
  - 0.6514413568241331
  - 0.6212901670192998
  - 0.5815902548434999
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5570987654320988
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.591304347826087
  - 0.5705705705705706
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5570987654320988
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.591304347826087
  - 0.5705705705705706
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5570987654320987
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.5913043478260871
  - 0.5705705705705706
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4328623048135244
  - 0.445045045045045
  - 0.44054226475279107
  - 0.4708511941212493
  - 0.4432684432684432
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4272353582208175
  - 0.4323717600963972
  - 0.43964291277104617
  - 0.4586908167854989
  - 0.4418079507131101
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.386096256684492
  - 0.39330543933054396
  - 0.3968253968253968
  - 0.41975308641975306
  - 0.39915966386554624
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.40401635401635405
  - 0.41450021450021457
  - 0.41515151515151527
  - 0.43784679089026923
  - 0.4134706134706136
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.2932107591390602
  - 0.3035876130199982
  - 0.2976690441091562
  - 0.3233329885254863
  - 0.2998458210666738
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8088991769547325
  - 0.7708833833833832
  - 0.7852272727272731
  - 0.7747584541062801
  - 0.7799549549549551
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.01317272696627086
  - -0.013510575022130026
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.06446509477347638
  - 0.007824453270994897
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.007777627747825355
  - 0.002848898792944486
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.02365524912957091
  - -0.023808845493543822
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8693012369822084
  - 0.8432456259401863
  - 0.8534422175055554
  - 0.8491100333538102
  - 0.86129156974627
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7222222222222223
  - -3.963963963963964
  - -3.7636363636363637
  - -3.652173913043478
  - -3.855855855855856
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.44290123456790126
  - -0.43543543543543545
  - -0.4318181818181818
  - -0.40869565217391307
  - -0.42942942942942947
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.44290123456790126
  - -0.43543543543543545
  - -0.4318181818181818
  - -0.40869565217391307
  - -0.4294294294294294
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.44290123456790126
  - -0.4354354354354354
  - -0.4318181818181819
  - -0.40869565217391307
  - -0.42942942942942947
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5671376951864757
  - -0.554954954954955
  - -0.559457735247209
  - -0.5291488058787507
  - -0.5567315567315568
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19434156378600823
  - -0.23721221221221225
  - -0.21073232323232324
  - -0.21913043478260869
  - -0.2223473473473473
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5570987654320988
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.591304347826087
  - 0.5705705705705706
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5570987654320988
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.591304347826087
  - 0.5705705705705706
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5570987654320987
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.5913043478260871
  - 0.5705705705705706
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4328623048135244
  - 0.445045045045045
  - 0.44054226475279107
  - 0.4708511941212493
  - 0.4432684432684432
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5570987654320988
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.591304347826087
  - 0.5705705705705706
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5570987654320988
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.591304347826087
  - 0.5705705705705706
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5570987654320987
  - 0.5645645645645646
  - 0.5681818181818182
  - 0.5913043478260871
  - 0.5705705705705706
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4328623048135244
  - 0.445045045045045
  - 0.44054226475279107
  - 0.4708511941212493
  - 0.4432684432684432
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5733569158515123
  - 0.5376120139747617
  - 0.6255631344606816
  - 0.6086464045319238
  - 0.5508526040427179
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7806615383130483
  - 0.7655080704328687
  - 0.7828304093567251
  - 0.7769981960729897
  - 0.7561096797938903
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - 0.7808695652173914
  - 0.7776526526526526
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5727949742650711
  - 0.5507608167351468
  - 0.5808115338041958
  - 0.5831389741796607
  - 0.5013404912969845
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8321060189065959
  - 0.8300189869163063
  - 0.8205484171163256
  - 0.8240356870761597
  - 0.8202739597968777
  train_average_precision_macro_oob:
  - 0.6231310339225362
  - 0.6095719211138781
  - 0.5965786469289766
  - 0.6142704916397487
  - 0.6023892906033438
  train_average_precision_micro:
  - 0.8914203514049189
  - 0.8904636744507307
  - 0.8840958215337785
  - 0.8913745893023284
  - 0.8902894046914273
  train_average_precision_micro_oob:
  - 0.7725073407912061
  - 0.7660956814918412
  - 0.7563100006378041
  - 0.7742866857657598
  - 0.7660582680000328
  train_average_precision_samples:
  - 0.8935154113845388
  - 0.8852383633633633
  - 0.8872971285892635
  - 0.8910890151515151
  - 0.8807745245245246
  train_average_precision_samples_oob:
  - 0.8069102659706686
  - 0.8041604104104104
  - 0.7975156054931336
  - 0.8112373737373738
  - 0.7964964964964965
  train_average_precision_weighted:
  - 0.8829820229912264
  - 0.8816833407566965
  - 0.8717878510186786
  - 0.8797489678624447
  - 0.8827416924126912
  train_average_precision_weighted_oob:
  - 0.7617583017834453
  - 0.7519057566678409
  - 0.7349208688485404
  - 0.7576993556525361
  - 0.7456233280932324
  train_f1_macro:
  - 0.6584638329604773
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_f1_macro_oob:
  - 0.5809097688292318
  - 0.5780780780780782
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_f1_micro:
  - 0.6584638329604773
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_f1_micro_oob:
  - 0.580909768829232
  - 0.5780780780780781
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_f1_samples:
  - 0.6584638329604774
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_f1_samples_oob:
  - 0.5809097688292318
  - 0.5780780780780781
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_f1_weighted:
  - 0.5906958569014195
  - 0.5990044335053092
  - 0.5977234211377016
  - 0.5956782546721572
  - 0.5917291637186926
  train_f1_weighted_oob:
  - 0.4627414202397351
  - 0.45761348038055566
  - 0.45816639401271514
  - 0.46056778587266395
  - 0.4663026901246797
  train_jaccard_macro:
  - 0.5133587488547684
  - 0.5194207811312561
  - 0.5158630088991526
  - 0.5143389556105907
  - 0.5117470043796278
  train_jaccard_macro_oob:
  - 0.44789729910454296
  - 0.4460377129627233
  - 0.44390450501001166
  - 0.4428341813205381
  - 0.446669295468148
  train_jaccard_micro:
  - 0.49082823790994995
  - 0.4974704890387858
  - 0.4945424013434089
  - 0.49279050042408823
  - 0.4899328859060403
  train_jaccard_micro_oob:
  - 0.4093536521282186
  - 0.4065469904963041
  - 0.4052631578947368
  - 0.40500266098988824
  - 0.4095238095238095
  train_jaccard_samples:
  - 0.5153403643336529
  - 0.5204418704418704
  - 0.5182771535580525
  - 0.5176633215269579
  - 0.5134930384930385
  train_jaccard_samples_oob:
  - 0.4281559603707255
  - 0.42425997425997425
  - 0.42379979570990806
  - 0.42540141676505305
  - 0.4291837291837292
  train_jaccard_weighted:
  - 0.42252319980239617
  - 0.4304923106620274
  - 0.4295673961657912
  - 0.42721733743893847
  - 0.42366240598416033
  train_jaccard_weighted_oob:
  - 0.3146836176689391
  - 0.3107026827577799
  - 0.3117572517931529
  - 0.3120724100832987
  - 0.31718894309576556
  train_label_ranking_average_precision_score:
  - 0.8979896843151872
  - 0.8897428678678668
  - 0.8917915106117346
  - 0.8979071969696963
  - 0.8875312812812807
  train_label_ranking_average_precision_score_oob:
  - 0.8113845389013166
  - 0.808664914914914
  - 0.8020099875156043
  - 0.8180555555555545
  - 0.8032532532532525
  train_matthews_corrcoef_macro:
  - 0.13617671305007728
  - 0.14474821181570333
  - 0.13455258539566348
  - 0.1513228601399588
  - 0.14253299122849508
  train_matthews_corrcoef_macro_oob:
  - 0.021013988790874547
  - 0.027157882656191512
  - 0.024447726297391992
  - 0.024924193286186138
  - 0.025124868008867346
  train_matthews_corrcoef_micro:
  - 0.3539999147820737
  - 0.3698721652591765
  - 0.3654414097723178
  - 0.3695236622218117
  - 0.357148120407767
  train_matthews_corrcoef_micro_oob:
  - 0.10292512438227842
  - 0.09521724398546699
  - 0.09224101610884286
  - 0.12222325380006108
  - 0.1228276998395288
  train_matthews_corrcoef_samples:
  - 0.24542883683147157
  - 0.2570543404839601
  - 0.25682384573549166
  - 0.2696802397036088
  - 0.2319544880203137
  train_matthews_corrcoef_samples_oob:
  - 0.024383276687327315
  - 0.019853331992989068
  - 0.019237355725475393
  - 0.04010381948770225
  - 0.03220196017320604
  train_matthews_corrcoef_weighted:
  - 0.21536532506970646
  - 0.22773266816273452
  - 0.2154888866587829
  - 0.23357665500155325
  - 0.22237142659162226
  train_matthews_corrcoef_weighted_oob:
  - 0.03721953647850968
  - 0.04491700089881642
  - 0.04100448318667557
  - 0.04389958085772506
  - 0.04446180830888567
  train_ndgc:
  - 0.9326211695719357
  - 0.9267540251261803
  - 0.9291005650821642
  - 0.9298778535890387
  - 0.922605617254066
  train_ndgc_oob:
  - 0.8742689031836645
  - 0.8726082903350234
  - 0.8678986919243361
  - 0.878454961618655
  - 0.8656441354309575
  train_neg_coverage_error:
  - -3.203579418344519
  - -3.2725225225225225
  - -3.2741573033707865
  - -3.2704545454545455
  - -3.2837837837837838
  train_neg_coverage_error_oob:
  - -3.635346756152125
  - -3.675675675675676
  - -3.6719101123595506
  - -3.6704545454545454
  - -3.6914414414414414
  train_neg_hamming_loss_macro:
  - -0.3415361670395227
  - -0.3355855855855856
  - -0.33820224719101116
  - -0.3397727272727273
  - -0.34234234234234234
  train_neg_hamming_loss_macro_oob:
  - -0.41909023117076805
  - -0.42192192192192196
  - -0.4232209737827715
  - -0.4234848484848485
  - -0.41891891891891886
  train_neg_hamming_loss_micro:
  - -0.3415361670395227
  - -0.3355855855855856
  - -0.3382022471910112
  - -0.3397727272727273
  - -0.34234234234234234
  train_neg_hamming_loss_micro_oob:
  - -0.4190902311707681
  - -0.4219219219219219
  - -0.4232209737827715
  - -0.42348484848484846
  - -0.4189189189189189
  train_neg_hamming_loss_samples:
  - -0.3415361670395227
  - -0.3355855855855856
  - -0.3382022471910112
  - -0.3397727272727273
  - -0.34234234234234234
  train_neg_hamming_loss_samples_oob:
  - -0.41909023117076805
  - -0.4219219219219219
  - -0.42322097378277157
  - -0.42348484848484846
  - -0.4189189189189189
  train_neg_hamming_loss_weighted:
  - -0.40930414309858054
  - -0.40099556649469087
  - -0.40227657886229834
  - -0.40432174532784293
  - -0.4082708362813075
  train_neg_hamming_loss_weighted_oob:
  - -0.5372585797602649
  - -0.5423865196194443
  - -0.5418336059872849
  - -0.5394322141273362
  - -0.5336973098753204
  train_neg_label_ranking_loss:
  - -0.09995650012428536
  - -0.11201201201201201
  - -0.10753433208489388
  - -0.10155303030303031
  - -0.11107357357357359
  train_neg_label_ranking_loss_oob:
  - -0.18083519761372113
  - -0.19166041041041043
  - -0.18981273408239702
  - -0.17937500000000003
  - -0.19256756756756757
  train_precision_macro:
  - 0.6584638329604773
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_precision_macro_oob:
  - 0.5809097688292318
  - 0.5780780780780782
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_precision_micro:
  - 0.6584638329604773
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_precision_micro_oob:
  - 0.580909768829232
  - 0.5780780780780781
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_precision_samples:
  - 0.6584638329604774
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_precision_samples_oob:
  - 0.5809097688292318
  - 0.5780780780780781
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_precision_weighted:
  - 0.5906958569014195
  - 0.5990044335053092
  - 0.5977234211377016
  - 0.5956782546721572
  - 0.5917291637186926
  train_precision_weighted_oob:
  - 0.4627414202397351
  - 0.45761348038055566
  - 0.45816639401271514
  - 0.46056778587266395
  - 0.4663026901246797
  train_recall_macro:
  - 0.6584638329604773
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_recall_macro_oob:
  - 0.5809097688292318
  - 0.5780780780780782
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_recall_micro:
  - 0.6584638329604773
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_recall_micro_oob:
  - 0.580909768829232
  - 0.5780780780780781
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_recall_samples:
  - 0.6584638329604774
  - 0.6644144144144144
  - 0.6617977528089888
  - 0.6602272727272728
  - 0.6576576576576577
  train_recall_samples_oob:
  - 0.5809097688292318
  - 0.5780780780780781
  - 0.5767790262172284
  - 0.5765151515151515
  - 0.581081081081081
  train_recall_weighted:
  - 0.5906958569014195
  - 0.5990044335053092
  - 0.5977234211377016
  - 0.5956782546721572
  - 0.5917291637186926
  train_recall_weighted_oob:
  - 0.4627414202397351
  - 0.45761348038055566
  - 0.45816639401271514
  - 0.46056778587266395
  - 0.4663026901246797
  train_roc_auc_macro:
  - 0.84229771769456
  - 0.8267619362233147
  - 0.8019582428200422
  - 0.8178531363279745
  - 0.8231327201614399
  train_roc_auc_macro_oob:
  - 0.7135363534344948
  - 0.6714993726763128
  - 0.6646923627968778
  - 0.6716989141283481
  - 0.6626961270744686
  train_roc_auc_micro:
  - 0.898899063280422
  - 0.8975291751336498
  - 0.8910071722115016
  - 0.896899900514708
  - 0.8949674873018829
  train_roc_auc_micro_oob:
  - 0.8224807016447284
  - 0.8191935673174066
  - 0.81072895062686
  - 0.8162721506571634
  - 0.8118321848119254
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.826189753766494
  - 0.8214208844540976
  - 0.8007761033759455
  - 0.8130716020456819
  - 0.8229742485142834
  train_roc_auc_weighted_oob:
  - 0.7331558384665292
  - 0.7231315792679379
  - 0.6923567331085508
  - 0.7087213380263364
  - 0.708574166998211
start: 2023-12-21 23:55:15.465111
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
