active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpPzMzMzMzM/O/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAADwPwAAAAAAAPA/AAAAAAAACMAAAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJvzIzMzMzM/O/nJmZmZmZ6T+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:09:58.372190
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 562c523f9d39b1f132794fef7ad51feedc5d9039e94d5d550149a6ecf67a10a8
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/562c523_20231212T170937849310_embedding_proba_weak__2_birds.yml
results:
  fit_time:
  - 7.751489877700806
  - 7.811350584030151
  - 7.795838356018066
  - 7.765713691711426
  - 8.550898551940918
  score_time:
  - 2.7609288692474365
  - 2.961946964263916
  - 2.892709970474243
  - 2.8841395378112793
  - 3.189349889755249
  test_average_precision_macro:
  - 0.47662504795258254
  - 0.40431417618086274
  - 0.3595660275693204
  - 0.4136860764363142
  - 0.38917295285433845
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.42072858215318715
  - 0.37371095516554204
  - 0.3112131824985206
  - 0.3300662808135032
  - 0.343551963902616
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2940901642650328
  - 0.3003121394109766
  - 0.27514078266494746
  - 0.30031437972272446
  - 0.3348420094202128
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5735503399183963
  - 0.49978671471709046
  - 0.45238436931442305
  - 0.5044824904633907
  - 0.4935594453049976
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9510403916768665
  - 0.9371685026519787
  - 0.9347205222358224
  - 0.9306405548755611
  - 0.9351285189718483
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9510403916768666
  - 0.9371685026519788
  - 0.9347205222358221
  - 0.930640554875561
  - 0.9351285189718482
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9510403916768665
  - 0.9371685026519787
  - 0.934720522235822
  - 0.930640554875561
  - 0.9351285189718482
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9390578413834229
  - 0.9179241375229306
  - 0.9132605120977214
  - 0.9186046511627908
  - 0.9279741195141307
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9076884121976591
  - 0.8831777463244328
  - 0.8793905181202973
  - 0.8715294301173535
  - 0.8793592972420694
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9066511085180864
  - 0.8817658349328215
  - 0.8774415932592876
  - 0.870278519648989
  - 0.8781609195402299
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9134294118419499
  - 0.8904325940321897
  - 0.8888553152523494
  - 0.8813265391189221
  - 0.8902208329811969
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8858104292758405
  - 0.8497069033131236
  - 0.843030970711019
  - 0.8509943966597601
  - 0.8666683150107886
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7902141952727848
  - 0.7421726045272559
  - 0.7480089997192112
  - 0.7266709688700114
  - 0.7767024745364919
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3791193275991963
  - 0.2680787459322711
  - 0.1706880432490375
  - 0.2943286687541691
  - 0.300359070680774
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.43778129621101286
  - 0.35613728687338797
  - 0.25133803567935875
  - 0.3520309430991293
  - 0.3661256469775344
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.13602339755999032
  - 0.12055147781694299
  - 0.08345849607480248
  - 0.13872205956024566
  - 0.16951142985275644
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4570092490375981
  - 0.3547369173678322
  - 0.25595796010034605
  - 0.3872984614337444
  - 0.3921400967721783
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.35761018753868024
  - 0.37523359570722253
  - 0.3522321025363065
  - 0.38158460144830475
  - 0.40150415429281816
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.2325581395348837
  - -3.13953488372093
  - -3.9147286821705425
  - -3.705426356589147
  - -2.9147286821705425
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04895960832313342
  - -0.06283149734802124
  - -0.0652794777641779
  - -0.069359445124439
  - -0.06487148102815178
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04895960832313342
  - -0.06283149734802121
  - -0.06527947776417789
  - -0.069359445124439
  - -0.06487148102815178
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04895960832313342
  - -0.06283149734802121
  - -0.06527947776417788
  - -0.069359445124439
  - -0.06487148102815177
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06094215861657722
  - -0.08207586247706965
  - -0.0867394879022786
  - -0.0813953488372093
  - -0.0720258804858695
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09805061559507523
  - -0.09664019354511831
  - -0.11957427673911941
  - -0.11535070100391578
  - -0.07971267218873239
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9510403916768665
  - 0.9371685026519787
  - 0.9347205222358224
  - 0.9306405548755611
  - 0.9351285189718483
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9510403916768666
  - 0.9371685026519788
  - 0.9347205222358221
  - 0.930640554875561
  - 0.9351285189718482
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9510403916768665
  - 0.9371685026519787
  - 0.934720522235822
  - 0.930640554875561
  - 0.9351285189718482
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9390578413834229
  - 0.9179241375229306
  - 0.9132605120977214
  - 0.9186046511627908
  - 0.9279741195141307
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9510403916768665
  - 0.9371685026519787
  - 0.9347205222358224
  - 0.9306405548755611
  - 0.9351285189718483
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9510403916768666
  - 0.9371685026519788
  - 0.9347205222358221
  - 0.930640554875561
  - 0.9351285189718482
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9510403916768665
  - 0.9371685026519787
  - 0.934720522235822
  - 0.930640554875561
  - 0.9351285189718482
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9390578413834229
  - 0.9179241375229306
  - 0.9132605120977214
  - 0.9186046511627908
  - 0.9279741195141307
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8722625801902296
  - 0.8602107533456375
  - 0.8787403416224343
  - 0.8871867715053505
  - 0.8714345872731817
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8983114042355748
  - 0.8938964201105554
  - 0.8802873495628993
  - 0.8800752388252951
  - 0.8869346903926165
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8915723137313026
  - 0.8863811418093948
  - 0.8772751167562475
  - 0.8783409029852122
  - 0.8744727991238961
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.5250272808403768
  - 0.4622043152395016
  - 0.5525623299736656
  - 0.45531925529712475
  - 0.5226778820910144
  train_average_precision_macro_oob:
  - 0.44191587184009135
  - 0.3919011879024284
  - 0.4867975100954761
  - 0.38405164761431876
  - 0.44628802566844605
  train_average_precision_micro:
  - 0.5609803624474007
  - 0.46613058621100173
  - 0.5354167154665916
  - 0.4393401359176146
  - 0.5133175564427415
  train_average_precision_micro_oob:
  - 0.49374785051248216
  - 0.40442506470541845
  - 0.46786255967160023
  - 0.3815234832704508
  - 0.4537383430895716
  train_average_precision_samples:
  - 0.4447148394241417
  - 0.42718990849804805
  - 0.4547347022056324
  - 0.4215438227792879
  - 0.42228612257682024
  train_average_precision_samples_oob:
  - 0.3927829122247142
  - 0.36868369067865975
  - 0.3968434883551012
  - 0.35800720928398405
  - 0.3549800241610832
  train_average_precision_weighted:
  - 0.6794351193333736
  - 0.6030146923518073
  - 0.6912706249056811
  - 0.5914638815464459
  - 0.6626432304598535
  train_average_precision_weighted_oob:
  - 0.5938029759318956
  - 0.5210932369130916
  - 0.6115620401290911
  - 0.5132563464013917
  - 0.5828377130391584
  train_f1_macro:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127296
  - 0.9393104855161158
  - 0.9468584251325991
  train_f1_macro_oob:
  - 0.9500203998368013
  - 0.9394124847001223
  - 0.9467564259485923
  - 0.9388004895960833
  - 0.9483884128926968
  train_f1_micro:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127295
  - 0.9393104855161158
  - 0.946858425132599
  train_f1_micro_oob:
  - 0.9500203998368013
  - 0.9394124847001224
  - 0.9467564259485924
  - 0.9388004895960832
  - 0.9483884128926968
  train_f1_samples:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127296
  - 0.939310485516116
  - 0.9468584251325989
  train_f1_samples_oob:
  - 0.9500203998368013
  - 0.9394124847001224
  - 0.9467564259485923
  - 0.9388004895960833
  - 0.9483884128926968
  train_f1_weighted:
  - 0.9468385703296053
  - 0.9360983888419524
  - 0.9446672012830792
  - 0.9385957066189624
  - 0.9423789770972155
  train_f1_weighted_oob:
  - 0.9376997159595242
  - 0.9326040879244667
  - 0.9351851851851851
  - 0.9310524746571257
  - 0.9397753850227263
  train_jaccard_macro:
  - 0.9072223713708178
  - 0.8845577919620137
  - 0.9032314697449492
  - 0.885866786715158
  - 0.8996076669514443
  train_jaccard_macro_oob:
  - 0.9056052902074141
  - 0.8864922614468436
  - 0.8997510197845282
  - 0.8851872326623292
  - 0.9024361090903202
  train_jaccard_micro:
  - 0.9068365263055529
  - 0.883935434281322
  - 0.9027656477438137
  - 0.8855659197999808
  - 0.8990799031476998
  train_jaccard_micro_oob:
  - 0.9047989119875656
  - 0.8857472590882862
  - 0.8988959907030796
  - 0.8846597462514417
  - 0.90184287099903
  train_jaccard_samples:
  - 0.9130995678290926
  - 0.8939956176280747
  - 0.9115716258924887
  - 0.8964139765538486
  - 0.9070957354695138
  train_jaccard_samples_oob:
  - 0.9108817738266677
  - 0.8955857947929063
  - 0.9080316816152678
  - 0.8955704073541957
  - 0.9090898549265587
  train_jaccard_weighted:
  - 0.8993014929762168
  - 0.880171788910934
  - 0.8954188529264449
  - 0.8844935354456798
  - 0.8913337055582412
  train_jaccard_weighted_oob:
  - 0.8833105544129045
  - 0.8741525919289919
  - 0.8790065837665516
  - 0.8713212878910077
  - 0.8868071871174944
  train_label_ranking_average_precision_score:
  - 0.8904512735326682
  - 0.8864922340794432
  - 0.9062850898025315
  - 0.8847221173529307
  - 0.8815884481582152
  train_label_ranking_average_precision_score_oob:
  - 0.8385193463332404
  - 0.8279860162600547
  - 0.8483938759520006
  - 0.821185503857627
  - 0.8142823497424785
  train_matthews_corrcoef_macro:
  - 0.44774957617081207
  - 0.3743590652519097
  - 0.444581772862424
  - 0.4181275285143439
  - 0.43032379458998465
  train_matthews_corrcoef_macro_oob:
  - 0.3571340385544387
  - 0.3477115007486942
  - 0.3672843123428243
  - 0.3360014844506133
  - 0.3968680712060662
  train_matthews_corrcoef_micro:
  - 0.5296323011149713
  - 0.4383856400738328
  - 0.5125424712091342
  - 0.47585284098081015
  - 0.5099636212203044
  train_matthews_corrcoef_micro_oob:
  - 0.44353811633619866
  - 0.40335843316076175
  - 0.43440417034167417
  - 0.40494431269670644
  - 0.47516239692321116
  train_matthews_corrcoef_samples:
  - 0.23960022974904516
  - 0.18167342738353193
  - 0.23544836894359825
  - 0.22494097247529565
  - 0.2259438043909991
  train_matthews_corrcoef_samples_oob:
  - 0.17772984701080308
  - 0.14708091678132074
  - 0.17717438670501262
  - 0.16414251252502257
  - 0.1895022671669814
  train_matthews_corrcoef_weighted:
  - 0.564214140254509
  - 0.482797613299468
  - 0.5428323378822374
  - 0.5218282978550529
  - 0.5450001272350126
  train_matthews_corrcoef_weighted_oob:
  - 0.4454248206208679
  - 0.43963691830954454
  - 0.4564366991431168
  - 0.4306975609568764
  - 0.5001965734852932
  train_ndgc:
  - 0.4805115046940085
  - 0.46665346365784843
  - 0.4862716306581225
  - 0.46164826293686123
  - 0.46189129539897866
  train_ndgc_oob:
  - 0.4438808178427237
  - 0.42496861775583833
  - 0.4443754942316625
  - 0.41596751106257207
  - 0.4135168331340341
  train_neg_coverage_error:
  - -1.5193798449612403
  - -1.7015503875968991
  - -1.5465116279069768
  - -1.699612403100775
  - -1.6569767441860466
  train_neg_coverage_error_oob:
  - -2.195736434108527
  - -2.5155038759689923
  - -2.3333333333333335
  - -2.5290697674418605
  - -2.505813953488372
  train_neg_hamming_loss_macro:
  - -0.048857609139126894
  - -0.061607507139942896
  - -0.051101591187270506
  - -0.06068951448388414
  - -0.053141574867401065
  train_neg_hamming_loss_macro_oob:
  - -0.049979600163198704
  - -0.06058751529987762
  - -0.05324357405140759
  - -0.06119951040391678
  - -0.05161158710730315
  train_neg_hamming_loss_micro:
  - -0.04885760913912689
  - -0.06160750713994288
  - -0.0511015911872705
  - -0.06068951448388413
  - -0.05314157486740106
  train_neg_hamming_loss_micro_oob:
  - -0.0499796001631987
  - -0.0605875152998776
  - -0.05324357405140759
  - -0.06119951040391677
  - -0.05161158710730314
  train_neg_hamming_loss_samples:
  - -0.04885760913912689
  - -0.061607507139942876
  - -0.051101591187270506
  - -0.060689514483884134
  - -0.05314157486740106
  train_neg_hamming_loss_samples_oob:
  - -0.0499796001631987
  - -0.0605875152998776
  - -0.05324357405140759
  - -0.06119951040391676
  - -0.05161158710730314
  train_neg_hamming_loss_weighted:
  - -0.053161429670394694
  - -0.06390161115804763
  - -0.05533279871692062
  - -0.06140429338103757
  - -0.05762102290278452
  train_neg_hamming_loss_weighted_oob:
  - -0.06230028404047577
  - -0.06739591207553322
  - -0.06481481481481481
  - -0.06894752534287418
  - -0.06022461497727373
  train_neg_label_ranking_loss:
  - -0.021058385836942608
  - -0.027364444088110295
  - -0.021296907005696333
  - -0.027191129632135106
  - -0.026955514117791818
  train_neg_label_ranking_loss_oob:
  - -0.04789995132419893
  - -0.05849614567552324
  - -0.053981110184085565
  - -0.06094952540745975
  - -0.06379250989801605
  train_precision_macro:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127296
  - 0.9393104855161158
  - 0.9468584251325991
  train_precision_macro_oob:
  - 0.9500203998368013
  - 0.9394124847001223
  - 0.9467564259485923
  - 0.9388004895960833
  - 0.9483884128926968
  train_precision_micro:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127295
  - 0.9393104855161158
  - 0.946858425132599
  train_precision_micro_oob:
  - 0.9500203998368013
  - 0.9394124847001224
  - 0.9467564259485924
  - 0.9388004895960832
  - 0.9483884128926968
  train_precision_samples:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127296
  - 0.939310485516116
  - 0.9468584251325989
  train_precision_samples_oob:
  - 0.9500203998368013
  - 0.9394124847001224
  - 0.9467564259485923
  - 0.9388004895960833
  - 0.9483884128926968
  train_precision_weighted:
  - 0.9468385703296053
  - 0.9360983888419524
  - 0.9446672012830792
  - 0.9385957066189624
  - 0.9423789770972155
  train_precision_weighted_oob:
  - 0.9376997159595242
  - 0.9326040879244667
  - 0.9351851851851851
  - 0.9310524746571257
  - 0.9397753850227263
  train_recall_macro:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127296
  - 0.9393104855161158
  - 0.9468584251325991
  train_recall_macro_oob:
  - 0.9500203998368013
  - 0.9394124847001223
  - 0.9467564259485923
  - 0.9388004895960833
  - 0.9483884128926968
  train_recall_micro:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127295
  - 0.9393104855161158
  - 0.946858425132599
  train_recall_micro_oob:
  - 0.9500203998368013
  - 0.9394124847001224
  - 0.9467564259485924
  - 0.9388004895960832
  - 0.9483884128926968
  train_recall_samples:
  - 0.9511423908608732
  - 0.9383924928600571
  - 0.9488984088127296
  - 0.939310485516116
  - 0.9468584251325989
  train_recall_samples_oob:
  - 0.9500203998368013
  - 0.9394124847001224
  - 0.9467564259485923
  - 0.9388004895960833
  - 0.9483884128926968
  train_recall_weighted:
  - 0.9468385703296053
  - 0.9360983888419524
  - 0.9446672012830792
  - 0.9385957066189624
  - 0.9423789770972155
  train_recall_weighted_oob:
  - 0.9376997159595242
  - 0.9326040879244667
  - 0.9351851851851851
  - 0.9310524746571257
  - 0.9397753850227263
  train_roc_auc_macro:
  - 0.9731282594570865
  - 0.965331054019774
  - 0.9718792374368745
  - 0.9642101046528107
  - 0.9687105592747993
  train_roc_auc_macro_oob:
  - 0.9321491491140058
  - 0.923282172509095
  - 0.9338368362496617
  - 0.9213173859531749
  - 0.9276597498051045
  train_roc_auc_micro:
  - 0.9731551477362463
  - 0.9632465266010475
  - 0.9704245682947509
  - 0.9619755244755245
  - 0.9681383372683745
  train_roc_auc_micro_oob:
  - 0.9413813668070545
  - 0.9267153457906456
  - 0.9372988216801603
  - 0.9268951131806582
  - 0.9342073263149627
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9771350515247927
  - 0.9690888491295452
  - 0.975955458735371
  - 0.9686894808806445
  - 0.9725253210531678
  train_roc_auc_weighted_oob:
  - 0.9391247511902079
  - 0.9258944962834461
  - 0.9384045775554621
  - 0.9272395672554581
  - 0.9333997914523201
start: 2023-12-12 17:09:37.849310
wrapper: null
