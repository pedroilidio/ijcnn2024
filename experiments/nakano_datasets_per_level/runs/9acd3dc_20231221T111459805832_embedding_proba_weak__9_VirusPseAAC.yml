active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AMzMzMzPjv4CZmZmZmfm/QDMzMzMzA0AAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:34:50.770810
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__9
  params: {}
hash: 9acd3dcf3a424e3a5e8f4573d6f57b0d94fd29e768137d42c378422998d1a551
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9acd3dc_20231221T111459805832_embedding_proba_weak__9_VirusPseAAC.yml
results:
  fit_time:
  - 1132.335648059845
  - 1135.35826420784
  - 1170.0513200759888
  - 1172.7367858886719
  - 1175.3783345222473
  score_time:
  - 5.878323316574097
  - 6.003111124038696
  - 5.5751776695251465
  - 5.799383163452148
  - 5.7200257778167725
  test_average_precision_macro:
  - 0.3937572445691744
  - 0.4745059486583316
  - 0.37909688447385953
  - 0.37822556573186167
  - 0.28191051848530924
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.41388737825117955
  - 0.4976960097420986
  - 0.39765000350756885
  - 0.40633170611832414
  - 0.4498291181872315
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6593253968253968
  - 0.6741402116402117
  - 0.6589147286821705
  - 0.5805555555555555
  - 0.6410569105691056
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4317040110164544
  - 0.5162030694224458
  - 0.42743548453747365
  - 0.43782417207890284
  - 0.4206243925941085
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7936507936507936
  - 0.8095238095238094
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772359
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7936507936507936
  - 0.8095238095238095
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772358
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7936507936507937
  - 0.8095238095238095
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772358
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6742857142857143
  - 0.717948717948718
  - 0.6627906976744186
  - 0.6671794871794872
  - 0.6331707317073172
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6852108036890646
  - 0.6982567807005587
  - 0.6752238334784314
  - 0.6879610015819938
  - 0.6635372910548555
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6578947368421053
  - 0.68
  - 0.643312101910828
  - 0.6595744680851063
  - 0.6291390728476821
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6717687074829932
  - 0.7012471655328799
  - 0.6616832779623478
  - 0.6794871794871796
  - 0.6480836236933799
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5305375494071147
  - 0.5732224447216951
  - 0.5225733191999329
  - 0.5217478476645837
  - 0.48660473588342434
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6593253968253967
  - 0.6741402116402115
  - 0.6589147286821705
  - 0.5805555555555555
  - 0.6410569105691056
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.016523101833221185
  - 0.06699488009378178
  - 0.002349716016326539
  - 0.04170775543460926
  - 0.004669390531887911
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18522498845154795
  - 0.3105926106763906
  - 0.17571113445408604
  - 0.28013971669430454
  - 0.2540564406049614
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.12136587133573877
  - 0.2637739387186957
  - 0.15650749135196984
  - 0.22158837917184654
  - 0.24123861186228285
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03370712773977122
  - 0.15083238941779006
  - 0.008642730869153655
  - 0.08446523151247114
  - 0.023874157764640126
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7456951624306241
  - 0.7590426776022832
  - 0.7468562725338952
  - 0.6904134012588786
  - 0.7325731699254348
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.4523809523809526
  - -2.2857142857142856
  - -2.186046511627907
  - -2.7948717948717947
  - -2.6097560975609757
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20634920634920637
  - -0.19047619047619047
  - -0.21705426356589144
  - -0.20512820512820515
  - -0.22764227642276424
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20634920634920634
  - -0.19047619047619047
  - -0.21705426356589147
  - -0.20512820512820512
  - -0.22764227642276422
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20634920634920634
  - -0.19047619047619047
  - -0.2170542635658915
  - -0.2051282051282051
  - -0.2276422764227642
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3257142857142857
  - -0.28205128205128205
  - -0.3372093023255814
  - -0.3328205128205128
  - -0.366829268292683
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.25297619047619047
  - -0.21421957671957667
  - -0.20465116279069764
  - -0.30014245014245017
  - -0.2707317073170732
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7936507936507936
  - 0.8095238095238094
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772359
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7936507936507936
  - 0.8095238095238095
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772358
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7936507936507937
  - 0.8095238095238095
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772358
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6742857142857143
  - 0.717948717948718
  - 0.6627906976744186
  - 0.6671794871794872
  - 0.6331707317073172
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7936507936507936
  - 0.8095238095238094
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772359
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7936507936507936
  - 0.8095238095238095
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772358
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7936507936507937
  - 0.8095238095238095
  - 0.7829457364341085
  - 0.7948717948717948
  - 0.7723577235772358
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6742857142857143
  - 0.717948717948718
  - 0.6627906976744186
  - 0.6671794871794872
  - 0.6331707317073172
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6540029813094829
  - 0.6972521981502152
  - 0.6554857002908175
  - 0.549541498328908
  - 0.5968364372776138
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7788118811881188
  - 0.7875961538461538
  - 0.7971153846153846
  - 0.7193478260869565
  - 0.7678571428571428
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7470238095238095
  - 0.7857804232804232
  - 0.7953488372093023
  - 0.6998575498575499
  - 0.7292682926829268
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6226456140350878
  - 0.6529311258916521
  - 0.6330835244249878
  - 0.5069195716564137
  - 0.5954268680445151
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9661376495581564
  - 0.9197809628360779
  - 0.9801813520415324
  - 0.9454681025338091
  - 0.9142187111537751
  train_average_precision_macro_oob:
  - 0.7166311243791929
  - 0.7393356291615792
  - 0.7834467526065595
  - 0.7551477446602664
  - 0.6720673896066311
  train_average_precision_micro:
  - 0.9768019958505454
  - 0.962550469028126
  - 0.9832469294843897
  - 0.9331539624504261
  - 0.8750860086773541
  train_average_precision_micro_oob:
  - 0.8908372590485488
  - 0.8799320025508162
  - 0.908231893216363
  - 0.8462259639089194
  - 0.785143943459931
  train_average_precision_samples:
  - 0.990909090909091
  - 0.9777777777777776
  - 0.9867886178861788
  - 0.9563492063492063
  - 0.9427710843373494
  train_average_precision_samples_oob:
  - 0.9056565656565657
  - 0.9116161616161618
  - 0.9143292682926829
  - 0.9190476190476189
  - 0.8738955823293173
  train_average_precision_weighted:
  - 0.983441287605686
  - 0.9583385777244703
  - 0.9893094240930682
  - 0.9592552079187014
  - 0.907419086762229
  train_average_precision_weighted_oob:
  - 0.8799237510303949
  - 0.8792122027254528
  - 0.9047944670538035
  - 0.858724454473687
  - 0.7845394605700027
  train_f1_macro:
  - 0.9494949494949495
  - 0.9505050505050505
  - 0.9451219512195123
  - 0.9424603174603176
  - 0.9357429718875502
  train_f1_macro_oob:
  - 0.9282828282828283
  - 0.9272727272727274
  - 0.9268292682926829
  - 0.9216269841269842
  - 0.9216867469879517
  train_f1_micro:
  - 0.9494949494949495
  - 0.9505050505050505
  - 0.9451219512195121
  - 0.9424603174603174
  - 0.9357429718875502
  train_f1_micro_oob:
  - 0.9282828282828283
  - 0.9272727272727272
  - 0.926829268292683
  - 0.9216269841269841
  - 0.9216867469879518
  train_f1_samples:
  - 0.9494949494949496
  - 0.9505050505050505
  - 0.9451219512195121
  - 0.9424603174603177
  - 0.9357429718875501
  train_f1_samples_oob:
  - 0.9282828282828284
  - 0.9272727272727272
  - 0.926829268292683
  - 0.9216269841269842
  - 0.9216867469879518
  train_f1_weighted:
  - 0.9662766276627662
  - 0.9632424242424241
  - 0.9617845930934557
  - 0.9482555398396982
  - 0.934778718835739
  train_f1_weighted_oob:
  - 0.9419741974197419
  - 0.9374848484848485
  - 0.9424052161313693
  - 0.9236504007543611
  - 0.9213885243946083
  train_jaccard_macro:
  - 0.9057947647785219
  - 0.9076867496426427
  - 0.8977104625073564
  - 0.8921853777773859
  - 0.8807486705109838
  train_jaccard_macro_oob:
  - 0.8683680118867727
  - 0.8659717940136537
  - 0.8663960852815341
  - 0.8555911020201826
  - 0.8552980633304269
  train_jaccard_micro:
  - 0.9038461538461539
  - 0.9056785370548605
  - 0.8959537572254336
  - 0.8911819887429644
  - 0.879245283018868
  train_jaccard_micro_oob:
  - 0.8661639962299718
  - 0.864406779661017
  - 0.8636363636363636
  - 0.8546458141674333
  - 0.8547486033519553
  train_jaccard_samples:
  - 0.9180375180375181
  - 0.9177489177489179
  - 0.9107142857142856
  - 0.9043367346938774
  - 0.8944348823866897
  train_jaccard_samples_oob:
  - 0.8838383838383838
  - 0.8812409812409812
  - 0.8805168408826946
  - 0.8718820861678005
  - 0.8729202524383247
  train_jaccard_weighted:
  - 0.9361799607730821
  - 0.9303415657565967
  - 0.9277521400070261
  - 0.9022854483032396
  - 0.8784843164812848
  train_jaccard_weighted_oob:
  - 0.8923444513882187
  - 0.8835846616261371
  - 0.8936770811092609
  - 0.8589615640880611
  - 0.8544191193966962
  train_label_ranking_average_precision_score:
  - 0.990909090909091
  - 0.9777777777777776
  - 0.9867886178861788
  - 0.9563492063492063
  - 0.9427710843373494
  train_label_ranking_average_precision_score_oob:
  - 0.9056565656565657
  - 0.9116161616161618
  - 0.9143292682926829
  - 0.9190476190476189
  - 0.8738955823293173
  train_matthews_corrcoef_macro:
  - 0.4647977458564892
  - 0.4736684778909126
  - 0.4493211199456839
  - 0.5049341794724506
  - 0.4458946045082511
  train_matthews_corrcoef_macro_oob:
  - 0.3818883415893987
  - 0.38242601778307117
  - 0.3628762717150984
  - 0.3814418137703499
  - 0.39081073796728344
  train_matthews_corrcoef_micro:
  - 0.8404552091352683
  - 0.8416457822755157
  - 0.8267432975062887
  - 0.8134288701144845
  - 0.7935021701308606
  train_matthews_corrcoef_micro_oob:
  - 0.7702146298683352
  - 0.7630473048272686
  - 0.7660799520218006
  - 0.7411570870852043
  - 0.7449436978033432
  train_matthews_corrcoef_samples:
  - 0.7886158540317312
  - 0.7883872337903275
  - 0.7605570493922023
  - 0.753178848666697
  - 0.7556378707794802
  train_matthews_corrcoef_samples_oob:
  - 0.6801469655705128
  - 0.6695418322408223
  - 0.6625408832388311
  - 0.654699204669072
  - 0.6883952342724416
  train_matthews_corrcoef_weighted:
  - 0.7681479590353778
  - 0.7658123316886875
  - 0.7540488213263306
  - 0.7525885808875431
  - 0.7066221761536641
  train_matthews_corrcoef_weighted_oob:
  - 0.6869604293477088
  - 0.6788459904235473
  - 0.6765890722547705
  - 0.6541546392102312
  - 0.6589604322683439
  train_ndgc:
  - 0.9937598262537444
  - 0.9835489607359317
  - 0.9901999345165511
  - 0.9679869499141496
  - 0.9582243818615129
  train_ndgc_oob:
  - 0.9317761613461853
  - 0.9355645767925559
  - 0.9383529733865766
  - 0.941008284283759
  - 0.9072277376342687
  train_neg_coverage_error:
  - -1.2545454545454546
  - -1.2606060606060605
  - -1.2621951219512195
  - -1.2976190476190477
  - -1.3433734939759037
  train_neg_coverage_error_oob:
  - -1.593939393939394
  - -1.5212121212121212
  - -1.5182926829268293
  - -1.4761904761904763
  - -1.6024096385542168
  train_neg_hamming_loss_macro:
  - -0.0505050505050505
  - -0.04949494949494949
  - -0.0548780487804878
  - -0.05753968253968253
  - -0.06425702811244981
  train_neg_hamming_loss_macro_oob:
  - -0.07171717171717172
  - -0.07272727272727272
  - -0.07317073170731708
  - -0.07837301587301587
  - -0.07831325301204818
  train_neg_hamming_loss_micro:
  - -0.050505050505050504
  - -0.049494949494949494
  - -0.054878048780487805
  - -0.057539682539682536
  - -0.0642570281124498
  train_neg_hamming_loss_micro_oob:
  - -0.07171717171717172
  - -0.07272727272727272
  - -0.07317073170731707
  - -0.07837301587301587
  - -0.0783132530120482
  train_neg_hamming_loss_samples:
  - -0.0505050505050505
  - -0.049494949494949494
  - -0.054878048780487805
  - -0.057539682539682536
  - -0.06425702811244981
  train_neg_hamming_loss_samples_oob:
  - -0.07171717171717171
  - -0.07272727272727272
  - -0.07317073170731707
  - -0.07837301587301587
  - -0.0783132530120482
  train_neg_hamming_loss_weighted:
  - -0.03372337233723373
  - -0.03675757575757576
  - -0.03821540690654431
  - -0.05174446016030174
  - -0.065221281164261
  train_neg_hamming_loss_weighted_oob:
  - -0.058025802580258024
  - -0.06251515151515152
  - -0.05759478386863077
  - -0.07634959924563885
  - -0.07861147560539186
  train_neg_label_ranking_loss:
  - -0.005151515151515152
  - -0.009696969696969697
  - -0.006097560975609756
  - -0.018601190476190476
  - -0.024397590361445787
  train_neg_label_ranking_loss_oob:
  - -0.06814814814814815
  - -0.05840067340067341
  - -0.05235433604336044
  - -0.0505787037037037
  - -0.07401271753681392
  train_precision_macro:
  - 0.9494949494949495
  - 0.9505050505050505
  - 0.9451219512195123
  - 0.9424603174603176
  - 0.9357429718875502
  train_precision_macro_oob:
  - 0.9282828282828283
  - 0.9272727272727274
  - 0.9268292682926829
  - 0.9216269841269842
  - 0.9216867469879517
  train_precision_micro:
  - 0.9494949494949495
  - 0.9505050505050505
  - 0.9451219512195121
  - 0.9424603174603174
  - 0.9357429718875502
  train_precision_micro_oob:
  - 0.9282828282828283
  - 0.9272727272727272
  - 0.926829268292683
  - 0.9216269841269841
  - 0.9216867469879518
  train_precision_samples:
  - 0.9494949494949496
  - 0.9505050505050505
  - 0.9451219512195121
  - 0.9424603174603177
  - 0.9357429718875501
  train_precision_samples_oob:
  - 0.9282828282828284
  - 0.9272727272727272
  - 0.926829268292683
  - 0.9216269841269842
  - 0.9216867469879518
  train_precision_weighted:
  - 0.9662766276627662
  - 0.9632424242424241
  - 0.9617845930934557
  - 0.9482555398396982
  - 0.934778718835739
  train_precision_weighted_oob:
  - 0.9419741974197419
  - 0.9374848484848485
  - 0.9424052161313693
  - 0.9236504007543611
  - 0.9213885243946083
  train_recall_macro:
  - 0.9494949494949495
  - 0.9505050505050505
  - 0.9451219512195123
  - 0.9424603174603176
  - 0.9357429718875502
  train_recall_macro_oob:
  - 0.9282828282828283
  - 0.9272727272727274
  - 0.9268292682926829
  - 0.9216269841269842
  - 0.9216867469879517
  train_recall_micro:
  - 0.9494949494949495
  - 0.9505050505050505
  - 0.9451219512195121
  - 0.9424603174603174
  - 0.9357429718875502
  train_recall_micro_oob:
  - 0.9282828282828283
  - 0.9272727272727272
  - 0.926829268292683
  - 0.9216269841269841
  - 0.9216867469879518
  train_recall_samples:
  - 0.9494949494949496
  - 0.9505050505050505
  - 0.9451219512195121
  - 0.9424603174603177
  - 0.9357429718875501
  train_recall_samples_oob:
  - 0.9282828282828284
  - 0.9272727272727272
  - 0.926829268292683
  - 0.9216269841269842
  - 0.9216867469879518
  train_recall_weighted:
  - 0.9662766276627662
  - 0.9632424242424241
  - 0.9617845930934557
  - 0.9482555398396982
  - 0.934778718835739
  train_recall_weighted_oob:
  - 0.9419741974197419
  - 0.9374848484848485
  - 0.9424052161313693
  - 0.9236504007543611
  - 0.9213885243946083
  train_roc_auc_macro:
  - 0.9958584934588175
  - 0.9917069285059447
  - 0.9969917771348102
  - 0.989937027244642
  - 0.9811417155097631
  train_roc_auc_macro_oob:
  - 0.9305791165124792
  - 0.9591848499943811
  - 0.9593661059951456
  - 0.9544210570922321
  - 0.9185520088464681
  train_roc_auc_micro:
  - 0.9939626576870885
  - 0.9925822784810127
  - 0.9956382466891189
  - 0.9885696386015773
  - 0.9799985036287003
  train_roc_auc_micro_oob:
  - 0.9507400613157762
  - 0.9543101265822784
  - 0.9599592312172394
  - 0.9576443996756996
  - 0.9418659750105993
  train_roc_auc_samples:
  - 0.9948484848484849
  - 0.9903030303030304
  - 0.9939024390243902
  - 0.9813988095238095
  - 0.9756024096385543
  train_roc_auc_samples_oob:
  - 0.9318518518518519
  - 0.9415993265993268
  - 0.9476456639566396
  - 0.9494212962962963
  - 0.9259872824631862
  train_roc_auc_weighted:
  - 0.9955905943496083
  - 0.9900710415785596
  - 0.9962038111448879
  - 0.9839278631986905
  - 0.9660448463983865
  train_roc_auc_weighted_oob:
  - 0.9679703083175785
  - 0.9683082484162948
  - 0.9771997978165925
  - 0.9565185363354655
  - 0.9326201666662624
start: 2023-12-21 11:14:59.805832
wrapper: null
