active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0CAMzMzMzMDQIAzMzMzMwNAgMzMzMzMBMBAZmZmZmYWwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:37:16.266508
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__5
  params: {}
hash: 3c44d8bf1be58b28eb28a80cf045a32916f5eb53763ac03a28d0b81a3f4c0cbc
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3c44d8b_20231222T213632842946_proba__5_scene.yml
results:
  fit_time:
  - 10.269299268722534
  - 10.401687860488892
  - 10.361215591430664
  - 10.396024703979492
  - 10.450627326965332
  score_time:
  - 5.126119613647461
  - 5.167595148086548
  - 4.913831472396851
  - 4.96668553352356
  - 5.117743015289307
  test_average_precision_macro:
  - 0.834674275222366
  - 0.8568304079352626
  - 0.8235659538690245
  - 0.8584120332115436
  - 0.8366726410557875
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8232068903368017
  - 0.8553459799841729
  - 0.8185939727862069
  - 0.860561259153635
  - 0.8285172201683836
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8740585774058577
  - 0.8901183020180933
  - 0.8686847599164927
  - 0.8908057851239669
  - 0.8925051334702259
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8249832501487243
  - 0.8446824459203813
  - 0.8106955147734022
  - 0.8487941065356566
  - 0.8246189800935654
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8716875871687586
  - 0.872651356993737
  - 0.8639526791927628
  - 0.8667355371900826
  - 0.8648186173853526
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8716875871687587
  - 0.872651356993737
  - 0.8639526791927628
  - 0.8667355371900827
  - 0.8648186173853525
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8716875871687587
  - 0.8726513569937371
  - 0.8639526791927628
  - 0.8667355371900827
  - 0.8648186173853527
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8686895203631606
  - 0.8690655500054513
  - 0.8607847421145475
  - 0.864016753155231
  - 0.8610672861186207
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7736019599377758
  - 0.7755574792979565
  - 0.7615946739065187
  - 0.7658010628053008
  - 0.7636542968549103
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7725587144622992
  - 0.774074074074074
  - 0.760490045941807
  - 0.764813126709207
  - 0.7618329816098884
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7858637178720859
  - 0.786161646286907
  - 0.7722934685356395
  - 0.7756296733569459
  - 0.7731006160164269
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7689664924959398
  - 0.7700249483517867
  - 0.7568180658565214
  - 0.761644303599143
  - 0.7580144537231109
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8740585774058576
  - 0.8901183020180932
  - 0.8686847599164923
  - 0.890805785123967
  - 0.8925051334702256
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5006334280871044
  - 0.5012320281482013
  - 0.4523527186487221
  - 0.4606070095948944
  - 0.4418201951774712
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4959986312389496
  - 0.501303670740541
  - 0.45197549030563916
  - 0.46268396000377837
  - 0.44687347638888036
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.32260298001646526
  - 0.3118100435331324
  - 0.2681829733951345
  - 0.2642788449549977
  - 0.2642548250273164
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.49373277326686893
  - 0.4922307844878642
  - 0.44593289094888705
  - 0.45562638325705
  - 0.43079764467969767
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9069079804791218
  - 0.9193410699398157
  - 0.90284260815279
  - 0.9202592449314919
  - 0.9212267589141143
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4414225941422594
  - -1.3736951983298538
  - -1.4613778705636744
  - -1.3863636363636365
  - -1.375770020533881
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.12831241283124128
  - -0.12734864300626306
  - -0.13604732080723728
  - -0.13326446280991736
  - -0.1351813826146475
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.12831241283124128
  - -0.12734864300626306
  - -0.1360473208072373
  - -0.13326446280991736
  - -0.1351813826146475
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.12831241283124128
  - -0.12734864300626306
  - -0.13604732080723728
  - -0.13326446280991736
  - -0.13518138261464752
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.13131047963683945
  - -0.1309344499945486
  - -0.13921525788545258
  - -0.13598324684476903
  - -0.13893271388137918
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07050209205020921
  - -0.05688935281837161
  - -0.07515657620041753
  - -0.06064049586776858
  - -0.05959958932238193
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8716875871687586
  - 0.872651356993737
  - 0.8639526791927628
  - 0.8667355371900826
  - 0.8648186173853526
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8716875871687587
  - 0.872651356993737
  - 0.8639526791927628
  - 0.8667355371900827
  - 0.8648186173853525
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8716875871687587
  - 0.8726513569937371
  - 0.8639526791927628
  - 0.8667355371900827
  - 0.8648186173853527
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8686895203631606
  - 0.8690655500054513
  - 0.8607847421145475
  - 0.864016753155231
  - 0.8610672861186207
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8716875871687586
  - 0.872651356993737
  - 0.8639526791927628
  - 0.8667355371900826
  - 0.8648186173853526
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8716875871687587
  - 0.872651356993737
  - 0.8639526791927628
  - 0.8667355371900827
  - 0.8648186173853525
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8716875871687587
  - 0.8726513569937371
  - 0.8639526791927628
  - 0.8667355371900827
  - 0.8648186173853527
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8686895203631606
  - 0.8690655500054513
  - 0.8607847421145475
  - 0.864016753155231
  - 0.8610672861186207
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9409982727307881
  - 0.949971833761567
  - 0.940417294069753
  - 0.9510333962309044
  - 0.945631295632547
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9460264519838988
  - 0.9559631009815612
  - 0.9456230151685505
  - 0.9562955280277355
  - 0.9502606659428623
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9294979079497908
  - 0.9431106471816284
  - 0.9248434237995825
  - 0.9393595041322313
  - 0.940400410677618
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9357264323406033
  - 0.944810155505096
  - 0.9348100142322764
  - 0.946733047847884
  - 0.9402878971246345
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9405949510903467
  - 0.9405634357721518
  - 0.9450468485676967
  - 0.9354025829396161
  - 0.9435292568554773
  train_average_precision_macro_oob:
  - 0.9312709049086901
  - 0.9332249364153727
  - 0.9373429234938357
  - 0.9296436075123768
  - 0.9368041212350972
  train_average_precision_micro:
  - 0.9406015844285177
  - 0.940807133562098
  - 0.9436733818030992
  - 0.9348780756359807
  - 0.9439619085280812
  train_average_precision_micro_oob:
  - 0.9318005138628339
  - 0.9331766971963428
  - 0.9362857686375771
  - 0.9283440082436343
  - 0.9370941632027402
  train_average_precision_samples:
  - 0.9431225159841022
  - 0.941173928077455
  - 0.9431448824343015
  - 0.9391315652626105
  - 0.9462934027777778
  train_average_precision_samples_oob:
  - 0.9343182996371177
  - 0.9341026970954357
  - 0.9383125864453665
  - 0.9307332293291732
  - 0.9388498263888889
  train_average_precision_weighted:
  - 0.9361021832316317
  - 0.9366469793246448
  - 0.9407411237818014
  - 0.9302433590134913
  - 0.9394039702164872
  train_average_precision_weighted_oob:
  - 0.9265525110830767
  - 0.929109307794936
  - 0.9330051869967456
  - 0.924548456510234
  - 0.9324628227441546
  train_f1_macro:
  - 0.9066010022464143
  - 0.9073305670816044
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555556
  train_f1_macro_oob:
  - 0.8987385519267325
  - 0.8979080221300139
  - 0.8986860304287689
  - 0.8989426243716414
  - 0.8980034722222223
  train_f1_micro:
  - 0.9066010022464144
  - 0.9073305670816044
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555555
  train_f1_micro_oob:
  - 0.8987385519267324
  - 0.8979080221300139
  - 0.898686030428769
  - 0.8989426243716415
  - 0.8980034722222222
  train_f1_samples:
  - 0.9066010022464145
  - 0.9073305670816045
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555556
  train_f1_samples_oob:
  - 0.8987385519267325
  - 0.897908022130014
  - 0.8986860304287692
  - 0.8989426243716415
  - 0.8980034722222222
  train_f1_weighted:
  - 0.9052420431862317
  - 0.9061100487973225
  - 0.9061599405570073
  - 0.9054014553042247
  - 0.9050125483792937
  train_f1_weighted_oob:
  - 0.8975753421599837
  - 0.89684467723942
  - 0.8975578536346661
  - 0.8978193057156796
  - 0.8969163239800032
  train_jaccard_macro:
  - 0.8293557537702235
  - 0.83053960906124
  - 0.830698840413196
  - 0.829425608072219
  - 0.8289052033353136
  train_jaccard_macro_oob:
  - 0.8162518267505744
  - 0.8148548451120496
  - 0.8161645797618381
  - 0.8165791351168258
  - 0.8150222735458317
  train_jaccard_micro:
  - 0.8291584354010273
  - 0.830379746835443
  - 0.830524566816995
  - 0.8292508917954816
  - 0.8287165648067307
  train_jaccard_micro_oob:
  - 0.8160991683665464
  - 0.8147305671033023
  - 0.8160125588697017
  - 0.8164357682619647
  - 0.8148877510831036
  train_jaccard_samples:
  - 0.8412945271421165
  - 0.8427682276229993
  - 0.8428423236514522
  - 0.8414679444320629
  - 0.8410714285714285
  train_jaccard_samples_oob:
  - 0.8282974153891727
  - 0.8273192056905749
  - 0.8286899822169531
  - 0.8290245895550107
  - 0.8274181547619046
  train_jaccard_weighted:
  - 0.827107489589622
  - 0.8285084172043283
  - 0.8286091191921794
  - 0.8273376507962524
  - 0.8267069985268948
  train_jaccard_weighted_oob:
  - 0.814355819514544
  - 0.813118695940739
  - 0.8143248191518254
  - 0.8147439666566673
  - 0.8132496875295819
  train_label_ranking_average_precision_score:
  - 0.9431225159841018
  - 0.9411739280774548
  - 0.9431448824343012
  - 0.9391315652626101
  - 0.9462934027777774
  train_label_ranking_average_precision_score_oob:
  - 0.9343182996371171
  - 0.9341026970954356
  - 0.9383125864453665
  - 0.9307332293291726
  - 0.9388498263888879
  train_matthews_corrcoef_macro:
  - 0.6542189681790326
  - 0.6573291631862749
  - 0.6581000869137851
  - 0.655675675682474
  - 0.6548193155802702
  train_matthews_corrcoef_macro_oob:
  - 0.6191366338457054
  - 0.6156110959921761
  - 0.6195535570253949
  - 0.6216045939824135
  - 0.6175920958194755
  train_matthews_corrcoef_micro:
  - 0.6544598369226512
  - 0.6577851967154241
  - 0.6583949263333082
  - 0.6561207392206779
  - 0.6549944765946539
  train_matthews_corrcoef_micro_oob:
  - 0.6208657933891182
  - 0.6175567194741676
  - 0.6212299139856796
  - 0.623371497344356
  - 0.6195427012121687
  train_matthews_corrcoef_samples:
  - 0.4878297725696888
  - 0.4931761702065322
  - 0.492761232447196
  - 0.4887329024815472
  - 0.4898285650429321
  train_matthews_corrcoef_samples_oob:
  - 0.44739431378275263
  - 0.4441994125694805
  - 0.4501459432043702
  - 0.44994743783982943
  - 0.4463769042490594
  train_matthews_corrcoef_weighted:
  - 0.6537376584210374
  - 0.6571227885745694
  - 0.6577175927120674
  - 0.6553963564760878
  - 0.6543000554994745
  train_matthews_corrcoef_weighted_oob:
  - 0.6199875953011593
  - 0.616721735136467
  - 0.6203549712268598
  - 0.6225042799986301
  - 0.6186685012336204
  train_ndgc:
  - 0.9583475908741783
  - 0.9568879319135328
  - 0.9582710074526866
  - 0.9554270897041196
  - 0.9606163531281912
  train_ndgc_oob:
  - 0.9517827362779678
  - 0.9516847244777971
  - 0.954820465462202
  - 0.9491773186180779
  - 0.9551213411140029
  train_neg_coverage_error:
  - -1.234836702954899
  - -1.241182572614108
  - -1.2282157676348548
  - -1.2553302132085284
  - -1.2348958333333333
  train_neg_coverage_error_oob:
  - -1.2628304821150855
  - -1.2686721991701244
  - -1.2515560165975104
  - -1.281851274050962
  - -1.2625
  train_neg_hamming_loss_macro:
  - -0.09339899775358562
  - -0.09266943291839558
  - -0.09258298755186722
  - -0.09334373374934997
  - -0.09366319444444444
  train_neg_hamming_loss_macro_oob:
  - -0.10126144807326766
  - -0.10209197786998615
  - -0.10131396957123097
  - -0.10105737562835848
  - -0.10199652777777779
  train_neg_hamming_loss_micro:
  - -0.09339899775358562
  - -0.09266943291839558
  - -0.09258298755186722
  - -0.09334373374934997
  - -0.09366319444444444
  train_neg_hamming_loss_micro_oob:
  - -0.10126144807326767
  - -0.10209197786998617
  - -0.10131396957123098
  - -0.10105737562835847
  - -0.10199652777777778
  train_neg_hamming_loss_samples:
  - -0.09339899775358564
  - -0.09266943291839556
  - -0.09258298755186722
  - -0.09334373374934997
  - -0.09366319444444443
  train_neg_hamming_loss_samples_oob:
  - -0.10126144807326766
  - -0.10209197786998615
  - -0.10131396957123097
  - -0.10105737562835847
  - -0.10199652777777776
  train_neg_hamming_loss_weighted:
  - -0.09475795681376831
  - -0.09388995120267743
  - -0.09384005944299269
  - -0.09459854469577526
  - -0.09498745162070635
  train_neg_hamming_loss_weighted_oob:
  - -0.10242465784001627
  - -0.10315532276058012
  - -0.10244214636533375
  - -0.10218069428432043
  - -0.10308367601999678
  train_neg_label_ranking_loss:
  - -0.031168999481596682
  - -0.032248443983402486
  - -0.02987551867219917
  - -0.03413936557462298
  - -0.030325520833333335
  train_neg_label_ranking_loss_oob:
  - -0.03672887506480041
  - -0.03746109958506224
  - -0.033998962655601664
  - -0.03930057202288092
  - -0.035664062499999996
  train_precision_macro:
  - 0.9066010022464143
  - 0.9073305670816044
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555556
  train_precision_macro_oob:
  - 0.8987385519267325
  - 0.8979080221300139
  - 0.8986860304287689
  - 0.8989426243716414
  - 0.8980034722222223
  train_precision_micro:
  - 0.9066010022464144
  - 0.9073305670816044
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555555
  train_precision_micro_oob:
  - 0.8987385519267324
  - 0.8979080221300139
  - 0.898686030428769
  - 0.8989426243716415
  - 0.8980034722222222
  train_precision_samples:
  - 0.9066010022464145
  - 0.9073305670816045
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555556
  train_precision_samples_oob:
  - 0.8987385519267325
  - 0.897908022130014
  - 0.8986860304287692
  - 0.8989426243716415
  - 0.8980034722222222
  train_precision_weighted:
  - 0.9052420431862317
  - 0.9061100487973225
  - 0.9061599405570073
  - 0.9054014553042247
  - 0.9050125483792937
  train_precision_weighted_oob:
  - 0.8975753421599837
  - 0.89684467723942
  - 0.8975578536346661
  - 0.8978193057156796
  - 0.8969163239800032
  train_recall_macro:
  - 0.9066010022464143
  - 0.9073305670816044
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555556
  train_recall_macro_oob:
  - 0.8987385519267325
  - 0.8979080221300139
  - 0.8986860304287689
  - 0.8989426243716414
  - 0.8980034722222223
  train_recall_micro:
  - 0.9066010022464144
  - 0.9073305670816044
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555555
  train_recall_micro_oob:
  - 0.8987385519267324
  - 0.8979080221300139
  - 0.898686030428769
  - 0.8989426243716415
  - 0.8980034722222222
  train_recall_samples:
  - 0.9066010022464145
  - 0.9073305670816045
  - 0.9074170124481328
  - 0.90665626625065
  - 0.9063368055555556
  train_recall_samples_oob:
  - 0.8987385519267325
  - 0.897908022130014
  - 0.8986860304287692
  - 0.8989426243716415
  - 0.8980034722222222
  train_recall_weighted:
  - 0.9052420431862317
  - 0.9061100487973225
  - 0.9061599405570073
  - 0.9054014553042247
  - 0.9050125483792937
  train_recall_weighted_oob:
  - 0.8975753421599837
  - 0.89684467723942
  - 0.8975578536346661
  - 0.8978193057156796
  - 0.8969163239800032
  train_roc_auc_macro:
  - 0.9781928074274292
  - 0.9782026647587109
  - 0.9796127056142648
  - 0.9749557651742703
  - 0.9788663576380782
  train_roc_auc_macro_oob:
  - 0.9734247563281682
  - 0.9747394440043787
  - 0.9762964325493225
  - 0.9718002536490178
  - 0.9753089056954405
  train_roc_auc_micro:
  - 0.9807602108577953
  - 0.9803404764328616
  - 0.9817904822827118
  - 0.9777208178645678
  - 0.9811702804253836
  train_roc_auc_micro_oob:
  - 0.9765373402197113
  - 0.9770589432963455
  - 0.978637165185051
  - 0.9744155855226186
  - 0.9777465996695591
  train_roc_auc_samples:
  - 0.9688310005184033
  - 0.9677515560165976
  - 0.9701244813278008
  - 0.9658606344253771
  - 0.9696744791666667
  train_roc_auc_samples_oob:
  - 0.9632711249351996
  - 0.9625389004149378
  - 0.9660010373443982
  - 0.9606994279771192
  - 0.9643359375
  train_roc_auc_weighted:
  - 0.9760699059438666
  - 0.9763124967481015
  - 0.9775201050633792
  - 0.9723131922247703
  - 0.9768746250658988
  train_roc_auc_weighted_oob:
  - 0.9710601139986632
  - 0.972660423569611
  - 0.9741082553519842
  - 0.9690610501791559
  - 0.9730582275304058
start: 2023-12-22 21:36:32.842946
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
