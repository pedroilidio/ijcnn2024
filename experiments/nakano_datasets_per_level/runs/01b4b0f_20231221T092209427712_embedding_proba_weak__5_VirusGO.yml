active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz479AMzMzMzMLQAAzMzMzM+O/ADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:23:08.790098
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__5
  params: {}
hash: 01b4b0faa8841b79450f846e3d720ecf55eaa443cd0c045862e5cb749d3c0150
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/01b4b0f_20231221T092209427712_embedding_proba_weak__5_VirusGO.yml
results:
  fit_time:
  - 47.95870018005371
  - 48.17575931549072
  - 49.16344404220581
  - 48.965620040893555
  - 48.9504599571228
  score_time:
  - 3.3622987270355225
  - 3.2701637744903564
  - 3.561622142791748
  - 3.400064468383789
  - 3.4245598316192627
  test_average_precision_macro:
  - 0.8954699657461846
  - 0.8364717330650221
  - 0.9571940742890934
  - 0.9603075876045281
  - 0.9143456695608112
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8718584513878564
  - 0.862843864049781
  - 0.9247298065494722
  - 0.8893891282252127
  - 0.8806311470698319
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9404761904761905
  - 0.9350877192982455
  - 0.9444444444444445
  - 0.9353174603174603
  - 0.9379844961240309
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9269503332857004
  - 0.8641198679201776
  - 0.9505925782164172
  - 0.961228233866763
  - 0.9120745194557411
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8690476190476191
  - 0.8377192982456139
  - 0.8730158730158731
  - 0.8690476190476192
  - 0.8682170542635658
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8690476190476191
  - 0.8377192982456141
  - 0.873015873015873
  - 0.8690476190476191
  - 0.8682170542635659
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8690476190476192
  - 0.837719298245614
  - 0.8730158730158729
  - 0.8690476190476191
  - 0.868217054263566
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8380018674136321
  - 0.7742105263157895
  - 0.8314285714285714
  - 0.8177842565597667
  - 0.8273703041144902
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7782483217265826
  - 0.730112347969491
  - 0.7820146170587944
  - 0.7783615091604034
  - 0.7743314349165412
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7684210526315789
  - 0.720754716981132
  - 0.7746478873239436
  - 0.7684210526315789
  - 0.7671232876712328
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7868480725623582
  - 0.7380952380952381
  - 0.7874149659863945
  - 0.7857142857142857
  - 0.7834994462901439
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.734573355033713
  - 0.6384768089053803
  - 0.7177711794817258
  - 0.7022203900266847
  - 0.7135443841028947
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9404761904761905
  - 0.9350877192982455
  - 0.9444444444444444
  - 0.9353174603174603
  - 0.9379844961240309
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.20162067740429004
  - 0.16204476571973772
  - 0.21033979338928463
  - 0.1913397520515593
  - 0.1991690857721692
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5440089647032988
  - 0.4579470070948918
  - 0.5574667979074904
  - 0.525586339604571
  - 0.5385066617599736
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.42014404509884623
  - 0.309921992727228
  - 0.38481613476591375
  - 0.3824978824777941
  - 0.37976330530545827
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.41309659565640744
  - 0.33057132206826495
  - 0.4290931785141406
  - 0.3982990756991643
  - 0.39886204176095313
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9594795433618477
  - 0.9541369114569059
  - 0.9615561996249418
  - 0.9569283619176785
  - 0.95534243808962
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4285714285714286
  - -1.631578947368421
  - -1.4047619047619047
  - -1.4285714285714286
  - -1.4186046511627908
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.13095238095238096
  - -0.16228070175438597
  - -0.126984126984127
  - -0.13095238095238096
  - -0.1317829457364341
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.13095238095238096
  - -0.16228070175438597
  - -0.12698412698412698
  - -0.13095238095238096
  - -0.13178294573643412
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.13095238095238096
  - -0.16228070175438597
  - -0.12698412698412698
  - -0.13095238095238096
  - -0.13178294573643412
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1619981325863679
  - -0.2257894736842105
  - -0.16857142857142857
  - -0.18221574344023325
  - -0.17262969588550986
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03511904761904762
  - -0.05526315789473685
  - -0.03571428571428571
  - -0.04107142857142857
  - -0.03804909560723515
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8690476190476191
  - 0.8377192982456139
  - 0.8730158730158731
  - 0.8690476190476192
  - 0.8682170542635658
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8690476190476191
  - 0.8377192982456141
  - 0.873015873015873
  - 0.8690476190476191
  - 0.8682170542635659
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8690476190476192
  - 0.837719298245614
  - 0.8730158730158729
  - 0.8690476190476191
  - 0.868217054263566
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8380018674136321
  - 0.7742105263157895
  - 0.8314285714285714
  - 0.8177842565597667
  - 0.8273703041144902
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8690476190476191
  - 0.8377192982456139
  - 0.8730158730158731
  - 0.8690476190476192
  - 0.8682170542635658
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8690476190476191
  - 0.8377192982456141
  - 0.873015873015873
  - 0.8690476190476191
  - 0.8682170542635659
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8690476190476192
  - 0.837719298245614
  - 0.8730158730158729
  - 0.8690476190476191
  - 0.868217054263566
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8380018674136321
  - 0.7742105263157895
  - 0.8314285714285714
  - 0.8177842565597667
  - 0.8273703041144902
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9569720910181436
  - 0.9145439425770309
  - 0.9861222910216719
  - 0.9870120016817644
  - 0.9718797433503316
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9593210418495758
  - 0.9458426966292136
  - 0.9810891089108911
  - 0.9727556047049362
  - 0.9683532486930545
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9648809523809525
  - 0.9447368421052631
  - 0.9642857142857143
  - 0.9589285714285716
  - 0.961950904392765
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9659045804556641
  - 0.9193399859943977
  - 0.9768210526315789
  - 0.9820241078887696
  - 0.9587573964497043
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9524662384147199
  - 0.9610676015088789
  - 0.9544848689606612
  - 0.9453104599819433
  - 0.9372255637434193
  train_average_precision_macro_oob:
  - 0.9100137642368079
  - 0.9282577044509965
  - 0.8954025922689479
  - 0.9192551965982462
  - 0.9033830041329612
  train_average_precision_micro:
  - 0.9299030715865518
  - 0.9481712681106106
  - 0.9285739290790948
  - 0.9238581671192336
  - 0.9111807137900138
  train_average_precision_micro_oob:
  - 0.8911024874565886
  - 0.9098282138063083
  - 0.8849864383390157
  - 0.8960247795917955
  - 0.8824206863220934
  train_average_precision_samples:
  - 0.9523232323232322
  - 0.977810650887574
  - 0.956060606060606
  - 0.9496969696969696
  - 0.9658536585365854
  train_average_precision_samples_oob:
  - 0.931212121212121
  - 0.9449704142011833
  - 0.9258080808080807
  - 0.9428282828282828
  - 0.9483739837398372
  train_average_precision_weighted:
  - 0.9587021042265911
  - 0.9645238439024734
  - 0.9539571899098442
  - 0.9473224643838719
  - 0.9390531918293322
  train_average_precision_weighted_oob:
  - 0.929824069246482
  - 0.9393252412193392
  - 0.9143630910671281
  - 0.9258205641812594
  - 0.9175182052702086
  train_f1_macro:
  - 0.8848484848484849
  - 0.8727810650887573
  - 0.8707070707070708
  - 0.8545454545454546
  - 0.8729674796747967
  train_f1_macro_oob:
  - 0.8828282828282829
  - 0.8599605522682445
  - 0.8717171717171718
  - 0.8464646464646465
  - 0.8678861788617885
  train_f1_micro:
  - 0.8848484848484849
  - 0.8727810650887574
  - 0.8707070707070707
  - 0.8545454545454545
  - 0.8729674796747967
  train_f1_micro_oob:
  - 0.8828282828282829
  - 0.8599605522682445
  - 0.8717171717171717
  - 0.8464646464646465
  - 0.8678861788617886
  train_f1_samples:
  - 0.8848484848484849
  - 0.8727810650887574
  - 0.8707070707070709
  - 0.8545454545454545
  - 0.8729674796747967
  train_f1_samples_oob:
  - 0.882828282828283
  - 0.8599605522682444
  - 0.8717171717171716
  - 0.8464646464646464
  - 0.8678861788617885
  train_f1_weighted:
  - 0.8600633197648123
  - 0.8334700333938719
  - 0.8338133813381337
  - 0.8014330497089117
  - 0.8363109756097562
  train_f1_weighted_oob:
  - 0.8559324589175333
  - 0.8075165504716152
  - 0.8359135913591359
  - 0.7848932676518883
  - 0.8259146341463415
  train_jaccard_macro:
  - 0.7973059286892451
  - 0.7797487730952222
  - 0.7755505378028987
  - 0.7536431215061724
  - 0.7788538752773478
  train_jaccard_macro_oob:
  - 0.7942587063488356
  - 0.761833952256406
  - 0.7770503196528115
  - 0.7435902114532622
  - 0.7717011738241283
  train_jaccard_micro:
  - 0.7934782608695652
  - 0.7742782152230971
  - 0.7710196779964222
  - 0.746031746031746
  - 0.7745716862037872
  train_jaccard_micro_oob:
  - 0.7902350813743219
  - 0.754325259515571
  - 0.7726051924798567
  - 0.7338003502626971
  - 0.7666068222621185
  train_jaccard_samples:
  - 0.8122655122655122
  - 0.7889546351084812
  - 0.7883116883116882
  - 0.7608946608946608
  - 0.7897793263646922
  train_jaccard_samples_oob:
  - 0.8088023088023089
  - 0.7686672302056917
  - 0.7896103896103895
  - 0.7481962481962483
  - 0.7812137049941928
  train_jaccard_weighted:
  - 0.7576426776949998
  - 0.7185999503702639
  - 0.7178551483326239
  - 0.6741167027648782
  - 0.7207924495495862
  train_jaccard_weighted_oob:
  - 0.7514079770007246
  - 0.6823865104626251
  - 0.7209735066344227
  - 0.6535638839361975
  - 0.7061553948533162
  train_label_ranking_average_precision_score:
  - 0.9523232323232322
  - 0.977810650887574
  - 0.956060606060606
  - 0.9496969696969696
  - 0.9658536585365854
  train_label_ranking_average_precision_score_oob:
  - 0.9312121212121213
  - 0.9449704142011833
  - 0.9258080808080807
  - 0.942828282828283
  - 0.9483739837398374
  train_matthews_corrcoef_macro:
  - 0.23515672233209872
  - 0.21000286049815928
  - 0.20863052193799156
  - 0.1808462746056119
  - 0.2098127437982021
  train_matthews_corrcoef_macro_oob:
  - 0.2313100780442885
  - 0.18323922950629937
  - 0.21106561304954755
  - 0.1645369369093427
  - 0.2017499334979669
  train_matthews_corrcoef_micro:
  - 0.6121271093389168
  - 0.5561062840165762
  - 0.5564252502785204
  - 0.49164195107087827
  - 0.5632316518870182
  train_matthews_corrcoef_micro_oob:
  - 0.6042746667075803
  - 0.4980544352487849
  - 0.5613038192764684
  - 0.4544502617437885
  - 0.54354194413222
  train_matthews_corrcoef_samples:
  - 0.4776013602901236
  - 0.3900549616126557
  - 0.4241217967888281
  - 0.32978009517296203
  - 0.41629539748705435
  train_matthews_corrcoef_samples_oob:
  - 0.4693132119994186
  - 0.34054286416906804
  - 0.42533391800094933
  - 0.28687300955154604
  - 0.3922486571232143
  train_matthews_corrcoef_weighted:
  - 0.48126948035010253
  - 0.4260071006029889
  - 0.4251470249531293
  - 0.365254393148783
  - 0.42822493494995373
  train_matthews_corrcoef_weighted_oob:
  - 0.4734025265836276
  - 0.3718787972677113
  - 0.43021008568012686
  - 0.33186256202594144
  - 0.4117213733036016
  train_ndgc:
  - 0.9661646502767098
  - 0.9848635939671421
  - 0.9681758984694298
  - 0.9647101723986455
  - 0.9760306768631222
  train_ndgc_oob:
  - 0.9521561974974289
  - 0.9607512686190418
  - 0.9472846487789977
  - 0.9603644961978275
  - 0.964305589705499
  train_neg_coverage_error:
  - -1.393939393939394
  - -1.2662721893491125
  - -1.3454545454545455
  - -1.412121212121212
  - -1.3414634146341464
  train_neg_coverage_error_oob:
  - -1.496969696969697
  - -1.3550295857988166
  - -1.490909090909091
  - -1.4424242424242424
  - -1.420731707317073
  train_neg_hamming_loss_macro:
  - -0.11515151515151516
  - -0.12721893491124261
  - -0.12929292929292927
  - -0.14545454545454542
  - -0.12703252032520326
  train_neg_hamming_loss_macro_oob:
  - -0.11717171717171715
  - -0.14003944773175542
  - -0.12828282828282825
  - -0.15353535353535352
  - -0.13211382113821138
  train_neg_hamming_loss_micro:
  - -0.11515151515151516
  - -0.12721893491124261
  - -0.1292929292929293
  - -0.14545454545454545
  - -0.12703252032520326
  train_neg_hamming_loss_micro_oob:
  - -0.11717171717171718
  - -0.14003944773175542
  - -0.12828282828282828
  - -0.15353535353535352
  - -0.13211382113821138
  train_neg_hamming_loss_samples:
  - -0.11515151515151516
  - -0.12721893491124261
  - -0.12929292929292927
  - -0.14545454545454545
  - -0.12703252032520324
  train_neg_hamming_loss_samples_oob:
  - -0.11717171717171715
  - -0.14003944773175542
  - -0.12828282828282828
  - -0.1535353535353535
  - -0.13211382113821138
  train_neg_hamming_loss_weighted:
  - -0.1399366802351877
  - -0.16652996660612807
  - -0.16618661866186618
  - -0.19856695029108823
  - -0.16368902439024388
  train_neg_hamming_loss_weighted_oob:
  - -0.14406754108246644
  - -0.1924834495283848
  - -0.1640864086408641
  - -0.21510673234811167
  - -0.17408536585365855
  train_neg_label_ranking_loss:
  - -0.030521885521885523
  - -0.011834319526627219
  - -0.023181818181818182
  - -0.031195286195286196
  - -0.020951897018970187
  train_neg_label_ranking_loss_oob:
  - -0.04702020202020202
  - -0.028533859303090072
  - -0.048771043771043764
  - -0.03565656565656565
  - -0.03414634146341463
  train_precision_macro:
  - 0.8848484848484849
  - 0.8727810650887573
  - 0.8707070707070708
  - 0.8545454545454546
  - 0.8729674796747967
  train_precision_macro_oob:
  - 0.8828282828282829
  - 0.8599605522682445
  - 0.8717171717171718
  - 0.8464646464646465
  - 0.8678861788617885
  train_precision_micro:
  - 0.8848484848484849
  - 0.8727810650887574
  - 0.8707070707070707
  - 0.8545454545454545
  - 0.8729674796747967
  train_precision_micro_oob:
  - 0.8828282828282829
  - 0.8599605522682445
  - 0.8717171717171717
  - 0.8464646464646465
  - 0.8678861788617886
  train_precision_samples:
  - 0.8848484848484849
  - 0.8727810650887574
  - 0.8707070707070709
  - 0.8545454545454545
  - 0.8729674796747967
  train_precision_samples_oob:
  - 0.882828282828283
  - 0.8599605522682444
  - 0.8717171717171716
  - 0.8464646464646464
  - 0.8678861788617885
  train_precision_weighted:
  - 0.8600633197648123
  - 0.8334700333938719
  - 0.8338133813381337
  - 0.8014330497089117
  - 0.8363109756097562
  train_precision_weighted_oob:
  - 0.8559324589175333
  - 0.8075165504716152
  - 0.8359135913591359
  - 0.7848932676518883
  - 0.8259146341463415
  train_recall_macro:
  - 0.8848484848484849
  - 0.8727810650887573
  - 0.8707070707070708
  - 0.8545454545454546
  - 0.8729674796747967
  train_recall_macro_oob:
  - 0.8828282828282829
  - 0.8599605522682445
  - 0.8717171717171718
  - 0.8464646464646465
  - 0.8678861788617885
  train_recall_micro:
  - 0.8848484848484849
  - 0.8727810650887574
  - 0.8707070707070707
  - 0.8545454545454545
  - 0.8729674796747967
  train_recall_micro_oob:
  - 0.8828282828282829
  - 0.8599605522682445
  - 0.8717171717171717
  - 0.8464646464646465
  - 0.8678861788617886
  train_recall_samples:
  - 0.8848484848484849
  - 0.8727810650887574
  - 0.8707070707070709
  - 0.8545454545454545
  - 0.8729674796747967
  train_recall_samples_oob:
  - 0.882828282828283
  - 0.8599605522682444
  - 0.8717171717171716
  - 0.8464646464646464
  - 0.8678861788617885
  train_recall_weighted:
  - 0.8600633197648123
  - 0.8334700333938719
  - 0.8338133813381337
  - 0.8014330497089117
  - 0.8363109756097562
  train_recall_weighted_oob:
  - 0.8559324589175333
  - 0.8075165504716152
  - 0.8359135913591359
  - 0.7848932676518883
  - 0.8259146341463415
  train_roc_auc_macro:
  - 0.9785140780786706
  - 0.9833115093159243
  - 0.9793855280033853
  - 0.9753978566599971
  - 0.9697796076225892
  train_roc_auc_macro_oob:
  - 0.9635230881876985
  - 0.976584731612539
  - 0.9633246040302957
  - 0.9663295940960329
  - 0.9590527314171474
  train_roc_auc_micro:
  - 0.9769750739332488
  - 0.9853131249085499
  - 0.9801917374478565
  - 0.9776353427932976
  - 0.9729559948979591
  train_roc_auc_micro_oob:
  - 0.9610944012510324
  - 0.974278154416427
  - 0.962795898879228
  - 0.968020981340878
  - 0.9606951530612245
  train_roc_auc_samples:
  - 0.9694781144781146
  - 0.9881656804733728
  - 0.9768181818181819
  - 0.9688047138047137
  - 0.9790481029810298
  train_roc_auc_samples_oob:
  - 0.952979797979798
  - 0.97146614069691
  - 0.9512289562289563
  - 0.9643434343434344
  - 0.9658536585365854
  train_roc_auc_weighted:
  - 0.979496760037256
  - 0.9827398025635207
  - 0.9769740960448612
  - 0.9735322734582176
  - 0.9681182083349009
  train_roc_auc_weighted_oob:
  - 0.9660933841698688
  - 0.9748687171948346
  - 0.9621662432303062
  - 0.9648158101266617
  - 0.9562774209015213
start: 2023-12-21 09:22:09.427712
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
