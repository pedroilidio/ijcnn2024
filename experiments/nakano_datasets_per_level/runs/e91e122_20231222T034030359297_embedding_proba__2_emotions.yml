active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b/QzMzMzMwEQDAzMzMzMwvAYGZmZmZm9r/QzMzMzMwEQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMz4z+QmZmZmZkRwACZmZmZmdm/QGZmZmZm9r9wZmZmZmYWQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:40:49.981029
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: e91e122c2a7a70a77e9c928045c45f8d9a567f91baeee6ec3c62947dc0a5d46b
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e91e122_20231222T034030359297_embedding_proba__2_emotions.yml
results:
  fit_time:
  - 6.27187705039978
  - 6.347625017166138
  - 6.925857782363892
  - 7.278157949447632
  - 7.00377082824707
  score_time:
  - 2.889702081680298
  - 2.878056526184082
  - 2.851361036300659
  - 2.7917137145996094
  - 2.809692859649658
  test_average_precision_macro:
  - 0.7721143503603279
  - 0.7130009111579124
  - 0.744178125181878
  - 0.7314000336364791
  - 0.7369557078377563
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7807615732693096
  - 0.7127576962921929
  - 0.763416930187066
  - 0.7350879346203057
  - 0.7651568173671525
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8419962335216572
  - 0.762646793134598
  - 0.8278711484593837
  - 0.7953009259259259
  - 0.8278269419862341
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.774296170510918
  - 0.7216988415569303
  - 0.7504942614597737
  - 0.732350884359089
  - 0.7443424441555926
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7259887005649718
  - 0.7411924119241192
  - 0.6988795518207284
  - 0.7152777777777778
  - 0.7256637168141592
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7259887005649718
  - 0.7411924119241192
  - 0.6988795518207283
  - 0.7152777777777778
  - 0.7256637168141593
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7259887005649718
  - 0.7411924119241193
  - 0.6988795518207285
  - 0.7152777777777779
  - 0.7256637168141593
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7149321266968326
  - 0.7371522339076603
  - 0.6898160145115314
  - 0.705282738095238
  - 0.716327027685313
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5728685216752795
  - 0.5892114411222521
  - 0.5392087474425314
  - 0.5594222260622205
  - 0.5736213421610317
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5698447893569845
  - 0.5888051668460711
  - 0.5371367061356297
  - 0.5567567567567567
  - 0.5694444444444444
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.592009685230024
  - 0.6080913666279519
  - 0.5500200080032013
  - 0.5736111111111111
  - 0.5813316477033291
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5597499895810247
  - 0.584159317254722
  - 0.5288458409338586
  - 0.547666682650165
  - 0.5619466848044233
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.841996233521657
  - 0.7626467931345978
  - 0.8278711484593837
  - 0.7953009259259256
  - 0.827826941986234
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2524449285470359
  - 0.23642481114291417
  - 0.14286074047908345
  - 0.2013748398660299
  - 0.2417407190026375
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2801017541007554
  - 0.2937915143292719
  - 0.185448821543082
  - 0.233062662008819
  - 0.31581440398561333
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.17597225766344135
  - 0.16468220667201564
  - 0.06947361183348781
  - 0.11095024085493183
  - 0.1610127307239075
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.25068728434371634
  - 0.2581624639612509
  - 0.14986855431742763
  - 0.20154554369598804
  - 0.2446691162366647
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8919821680087895
  - 0.8318361886713026
  - 0.8852564969003077
  - 0.8599665935840932
  - 0.8861564967211624
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.542372881355932
  - -2.7560975609756095
  - -2.7478991596638656
  - -2.7416666666666667
  - -2.8053097345132745
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2740112994350282
  - -0.2588075880758807
  - -0.3011204481792717
  - -0.2847222222222222
  - -0.27433628318584075
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2740112994350282
  - -0.2588075880758808
  - -0.3011204481792717
  - -0.2847222222222222
  - -0.2743362831858407
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2740112994350282
  - -0.2588075880758807
  - -0.30112044817927175
  - -0.2847222222222222
  - -0.2743362831858407
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2850678733031674
  - -0.2628477660923398
  - -0.3101839854884685
  - -0.2947172619047619
  - -0.283672972314687
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1213276836158192
  - -0.19144083107497745
  - -0.1475490196078431
  - -0.15993055555555558
  - -0.14633726647000983
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7259887005649718
  - 0.7411924119241192
  - 0.6988795518207284
  - 0.7152777777777778
  - 0.7256637168141592
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7259887005649718
  - 0.7411924119241192
  - 0.6988795518207283
  - 0.7152777777777778
  - 0.7256637168141593
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7259887005649718
  - 0.7411924119241193
  - 0.6988795518207285
  - 0.7152777777777779
  - 0.7256637168141593
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7149321266968326
  - 0.7371522339076603
  - 0.6898160145115314
  - 0.705282738095238
  - 0.716327027685313
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7259887005649718
  - 0.7411924119241192
  - 0.6988795518207284
  - 0.7152777777777778
  - 0.7256637168141592
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7259887005649718
  - 0.7411924119241192
  - 0.6988795518207283
  - 0.7152777777777778
  - 0.7256637168141593
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7259887005649718
  - 0.7411924119241193
  - 0.6988795518207285
  - 0.7152777777777779
  - 0.7256637168141593
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7149321266968326
  - 0.7371522339076603
  - 0.6898160145115314
  - 0.705282738095238
  - 0.716327027685313
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8735354236276208
  - 0.8220742193436866
  - 0.8475042386484181
  - 0.8545123317999512
  - 0.8478022652437005
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.889200665260576
  - 0.8375970359915313
  - 0.8686736198427847
  - 0.8705987183179723
  - 0.8679297965696052
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8786723163841808
  - 0.8085591689250227
  - 0.8524509803921568
  - 0.8400694444444444
  - 0.8536627335299901
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8714155914024139
  - 0.8233602022371456
  - 0.8493297442510445
  - 0.8539311028379318
  - 0.8488970127795662
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8868699541305954
  - 0.9048055693134517
  - 0.9024136529020251
  - 0.900229021692171
  - 0.8964821703133721
  train_average_precision_macro_oob:
  - 0.8489191024888668
  - 0.8713039204806178
  - 0.8675747456850339
  - 0.8657548322727487
  - 0.8647588688819292
  train_average_precision_micro:
  - 0.8921892666733436
  - 0.9096584656975529
  - 0.9053883454444446
  - 0.9038494408505923
  - 0.9035040968254369
  train_average_precision_micro_oob:
  - 0.860305130117333
  - 0.8803951359472316
  - 0.8733827034726307
  - 0.8725999080593292
  - 0.8748929675890004
  train_average_precision_samples:
  - 0.8912456140350877
  - 0.9238534278959811
  - 0.9041256446319738
  - 0.9031829927178765
  - 0.9153993055555555
  train_average_precision_samples_oob:
  - 0.8737485380116959
  - 0.8997931442080377
  - 0.8826476793248945
  - 0.8814775663612873
  - 0.890474537037037
  train_average_precision_weighted:
  - 0.888572630699787
  - 0.9064052095240581
  - 0.9026666464425156
  - 0.9016050573326442
  - 0.8985338440944459
  train_average_precision_weighted_oob:
  - 0.8525093142333073
  - 0.8750279049330353
  - 0.8697372053785127
  - 0.8688151364940415
  - 0.8685465458296658
  train_f1_macro:
  - 0.803157894736842
  - 0.797872340425532
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222222
  train_f1_macro_oob:
  - 0.751578947368421
  - 0.7404255319148936
  - 0.7436708860759493
  - 0.7399577167019028
  - 0.7440972222222221
  train_f1_micro:
  - 0.8031578947368421
  - 0.7978723404255319
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222222
  train_f1_micro_oob:
  - 0.751578947368421
  - 0.7404255319148936
  - 0.7436708860759493
  - 0.7399577167019028
  - 0.7440972222222222
  train_f1_samples:
  - 0.8031578947368421
  - 0.7978723404255319
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222224
  train_f1_samples_oob:
  - 0.751578947368421
  - 0.7404255319148937
  - 0.7436708860759493
  - 0.7399577167019026
  - 0.7440972222222222
  train_f1_weighted:
  - 0.7981937933899009
  - 0.7933492708582358
  - 0.7983567771567599
  - 0.7923478710072418
  - 0.7956226591760299
  train_f1_weighted_oob:
  - 0.7476128879131312
  - 0.7363088692326081
  - 0.7390982629060763
  - 0.7353323830752012
  - 0.7377668539325843
  train_jaccard_macro:
  - 0.6720282372344567
  - 0.6645136018751098
  - 0.6719095093139932
  - 0.6651536079430221
  - 0.6680256765499465
  train_jaccard_macro_oob:
  - 0.6026760080444514
  - 0.5890352505529387
  - 0.592665809196297
  - 0.588008026221094
  - 0.5943011003032871
  train_jaccard_micro:
  - 0.6710642040457344
  - 0.6637168141592921
  - 0.6709753231492362
  - 0.6640281442392261
  - 0.6671490593342981
  train_jaccard_micro_oob:
  - 0.6020236087689713
  - 0.5878378378378378
  - 0.5919395465994962
  - 0.587248322147651
  - 0.5924799557644457
  train_jaccard_samples:
  - 0.6918796992481202
  - 0.6843971631205673
  - 0.6895720313441831
  - 0.6829759387898923
  - 0.6889880952380951
  train_jaccard_samples_oob:
  - 0.6205513784461152
  - 0.6065856129685916
  - 0.6108599557966646
  - 0.6030403704822309
  - 0.609375
  train_jaccard_weighted:
  - 0.6652413868263755
  - 0.6583371032060015
  - 0.6654707924365448
  - 0.6573771085976592
  - 0.6615220802246403
  train_jaccard_weighted_oob:
  - 0.5976439309486323
  - 0.5837616910985178
  - 0.586975212475481
  - 0.5821976272050312
  - 0.586257564742588
  train_label_ranking_average_precision_score:
  - 0.8912456140350874
  - 0.9238534278959806
  - 0.9041256446319731
  - 0.903182992717876
  - 0.9153993055555553
  train_label_ranking_average_precision_score_oob:
  - 0.8737485380116953
  - 0.8997931442080371
  - 0.8826476793248942
  - 0.881477566361287
  - 0.8904745370370365
  train_matthews_corrcoef_macro:
  - 0.5255978716257483
  - 0.5172879334605173
  - 0.5208017908078862
  - 0.5136460415168574
  - 0.5143486380791228
  train_matthews_corrcoef_macro_oob:
  - 0.35405029272799476
  - 0.3004154130641315
  - 0.3167520718306011
  - 0.3145024113464899
  - 0.3146069111402843
  train_matthews_corrcoef_micro:
  - 0.5346412513881703
  - 0.5268520036099941
  - 0.5324343749171532
  - 0.5215713418653367
  - 0.5240142858849856
  train_matthews_corrcoef_micro_oob:
  - 0.38350058640996343
  - 0.3587634313242879
  - 0.3537946939690358
  - 0.34530895734651856
  - 0.3541886836335215
  train_matthews_corrcoef_samples:
  - 0.4139938956888498
  - 0.4150572155143829
  - 0.41208331068008675
  - 0.39233954788501074
  - 0.4052231107687153
  train_matthews_corrcoef_samples_oob:
  - 0.2436964149810826
  - 0.22341649803411148
  - 0.21880710772080286
  - 0.19587510698317875
  - 0.20549159187996302
  train_matthews_corrcoef_weighted:
  - 0.5281934587281673
  - 0.5204861487689004
  - 0.5251036029185873
  - 0.5152386847253239
  - 0.5174576295532421
  train_matthews_corrcoef_weighted_oob:
  - 0.3662108378577547
  - 0.314705953216235
  - 0.33079972137279917
  - 0.326660654819429
  - 0.3224130476477606
  train_ndgc:
  - 0.9273632870150981
  - 0.9517600255686165
  - 0.9354555656229044
  - 0.9365702072814531
  - 0.9446558779956151
  train_ndgc_oob:
  - 0.9152405672781314
  - 0.9363270317780957
  - 0.9214320476329809
  - 0.9211618128791008
  - 0.9282578931389137
  train_neg_coverage_error:
  - -2.389473684210526
  - -2.265957446808511
  - -2.2869198312236287
  - -2.346723044397463
  - -2.2958333333333334
  train_neg_coverage_error_oob:
  - -2.4757894736842103
  - -2.4170212765957446
  - -2.409282700421941
  - -2.4355179704016914
  - -2.4
  train_neg_hamming_loss_macro:
  - -0.1968421052631579
  - -0.2021276595744681
  - -0.19690576652601968
  - -0.2019027484143763
  - -0.19965277777777776
  train_neg_hamming_loss_macro_oob:
  - -0.24842105263157896
  - -0.25957446808510637
  - -0.2563291139240506
  - -0.26004228329809725
  - -0.25590277777777776
  train_neg_hamming_loss_micro:
  - -0.1968421052631579
  - -0.20212765957446807
  - -0.19690576652601968
  - -0.20190274841437633
  - -0.1996527777777778
  train_neg_hamming_loss_micro_oob:
  - -0.24842105263157896
  - -0.25957446808510637
  - -0.2563291139240506
  - -0.26004228329809725
  - -0.25590277777777776
  train_neg_hamming_loss_samples:
  - -0.1968421052631579
  - -0.20212765957446807
  - -0.19690576652601968
  - -0.20190274841437633
  - -0.19965277777777776
  train_neg_hamming_loss_samples_oob:
  - -0.2484210526315789
  - -0.2595744680851064
  - -0.2563291139240506
  - -0.2600422832980972
  - -0.25590277777777776
  train_neg_hamming_loss_weighted:
  - -0.20180620661009907
  - -0.2066507291417643
  - -0.20164322284324007
  - -0.20765212899275826
  - -0.20437734082397002
  train_neg_hamming_loss_weighted_oob:
  - -0.2523871120868688
  - -0.26369113076739187
  - -0.2609017370939238
  - -0.2646676169247989
  - -0.26223314606741577
  train_neg_label_ranking_loss:
  - -0.0902514619883041
  - -0.059840425531914904
  - -0.07200539146741679
  - -0.07775428705661264
  - -0.07152777777777779
  train_neg_label_ranking_loss_oob:
  - -0.10530409356725147
  - -0.08353427895981087
  - -0.09223511486169715
  - -0.09484965938454311
  - -0.09090856481481482
  train_precision_macro:
  - 0.803157894736842
  - 0.797872340425532
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222222
  train_precision_macro_oob:
  - 0.751578947368421
  - 0.7404255319148936
  - 0.7436708860759493
  - 0.7399577167019028
  - 0.7440972222222221
  train_precision_micro:
  - 0.8031578947368421
  - 0.7978723404255319
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222222
  train_precision_micro_oob:
  - 0.751578947368421
  - 0.7404255319148936
  - 0.7436708860759493
  - 0.7399577167019028
  - 0.7440972222222222
  train_precision_samples:
  - 0.8031578947368421
  - 0.7978723404255319
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222224
  train_precision_samples_oob:
  - 0.751578947368421
  - 0.7404255319148937
  - 0.7436708860759493
  - 0.7399577167019026
  - 0.7440972222222222
  train_precision_weighted:
  - 0.7981937933899009
  - 0.7933492708582358
  - 0.7983567771567599
  - 0.7923478710072418
  - 0.7956226591760299
  train_precision_weighted_oob:
  - 0.7476128879131312
  - 0.7363088692326081
  - 0.7390982629060763
  - 0.7353323830752012
  - 0.7377668539325843
  train_recall_macro:
  - 0.803157894736842
  - 0.797872340425532
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222222
  train_recall_macro_oob:
  - 0.751578947368421
  - 0.7404255319148936
  - 0.7436708860759493
  - 0.7399577167019028
  - 0.7440972222222221
  train_recall_micro:
  - 0.8031578947368421
  - 0.7978723404255319
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222222
  train_recall_micro_oob:
  - 0.751578947368421
  - 0.7404255319148936
  - 0.7436708860759493
  - 0.7399577167019028
  - 0.7440972222222222
  train_recall_samples:
  - 0.8031578947368421
  - 0.7978723404255319
  - 0.8030942334739803
  - 0.7980972515856237
  - 0.8003472222222224
  train_recall_samples_oob:
  - 0.751578947368421
  - 0.7404255319148937
  - 0.7436708860759493
  - 0.7399577167019026
  - 0.7440972222222222
  train_recall_weighted:
  - 0.7981937933899009
  - 0.7933492708582358
  - 0.7983567771567599
  - 0.7923478710072418
  - 0.7956226591760299
  train_recall_weighted_oob:
  - 0.7476128879131312
  - 0.7363088692326081
  - 0.7390982629060763
  - 0.7353323830752012
  - 0.7377668539325843
  train_roc_auc_macro:
  - 0.9239685789451763
  - 0.9407008040301341
  - 0.9405721844936555
  - 0.9370773142132546
  - 0.9347346481394013
  train_roc_auc_macro_oob:
  - 0.9067005798423274
  - 0.9219352985523713
  - 0.9192442203757819
  - 0.9197380027031469
  - 0.917935068511745
  train_roc_auc_micro:
  - 0.9308480852938321
  - 0.9453135006112825
  - 0.945369587077159
  - 0.9411753127359124
  - 0.9410247868556264
  train_roc_auc_micro_oob:
  - 0.9155274494725132
  - 0.9281387902427666
  - 0.926502382614116
  - 0.9242428803660666
  - 0.9250239963864264
  train_roc_auc_samples:
  - 0.909748538011696
  - 0.9401595744680851
  - 0.9279946085325832
  - 0.9222457129433874
  - 0.9284722222222221
  train_roc_auc_samples_oob:
  - 0.8946959064327487
  - 0.9164657210401892
  - 0.9077648851383029
  - 0.905150340615457
  - 0.9090914351851852
  train_roc_auc_weighted:
  - 0.9234719888010606
  - 0.9399775246768644
  - 0.9389311709852333
  - 0.9359197171114471
  - 0.9345931879023858
  train_roc_auc_weighted_oob:
  - 0.9068669272994792
  - 0.9222521284432647
  - 0.918591306116408
  - 0.91895702042657
  - 0.9184545794216546
start: 2023-12-22 03:40:30.359297
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
