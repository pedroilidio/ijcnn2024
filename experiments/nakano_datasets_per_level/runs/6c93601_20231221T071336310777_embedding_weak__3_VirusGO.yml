active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AmpmZmZnZP4BmZmZmZvY/gJmZmZmZ+b+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:13:55.192616
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__3
  params: {}
hash: 6c9360103568d2e51155a80f67b953789afe46d8e45bdd5e8f6a814f8cfed091
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6c93601_20231221T071336310777_embedding_weak__3_VirusGO.yml
results:
  fit_time:
  - 12.242156505584717
  - 12.7856605052948
  - 12.162114143371582
  - 12.37605595588684
  - 12.666200160980225
  score_time:
  - 1.4732203483581543
  - 1.5933642387390137
  - 1.5039558410644531
  - 1.687859296798706
  - 1.6290199756622314
  test_average_precision_macro:
  - 0.9647785373502661
  - 0.9684798341637636
  - 0.93413968414879
  - 0.9233800377603875
  - 0.9500372101036826
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9508891558397246
  - 0.9107491284626189
  - 0.8897631013935305
  - 0.8298454841474426
  - 0.9084265440928414
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9825581395348837
  - 0.9276422764227642
  - 0.9333333333333332
  - 0.8844961240310077
  - 0.96
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9718647680149229
  - 0.9688986828427454
  - 0.9230412730594847
  - 0.9068319153379492
  - 0.9499927208609599
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.945736434108527
  - 0.9308943089430893
  - 0.8916666666666666
  - 0.9263565891472867
  - 0.9291666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9457364341085271
  - 0.9308943089430894
  - 0.8916666666666667
  - 0.9263565891472868
  - 0.9291666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9457364341085273
  - 0.9308943089430893
  - 0.8916666666666666
  - 0.9263565891472869
  - 0.9291666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9497674418604651
  - 0.9273075083692015
  - 0.8671568627450981
  - 0.9183673469387755
  - 0.943627450980392
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8984812665663728
  - 0.8711808002505675
  - 0.8068486757254694
  - 0.8638395985759537
  - 0.8692147960440644
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8970588235294118
  - 0.870722433460076
  - 0.8045112781954887
  - 0.8628158844765343
  - 0.867704280155642
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.908637873754153
  - 0.8896631823461091
  - 0.8297619047619047
  - 0.8787375415282391
  - 0.8875
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9050487857296368
  - 0.8651660241263524
  - 0.7671950671921566
  - 0.8493810273247302
  - 0.8947830425592262
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9825581395348837
  - 0.9276422764227642
  - 0.9333333333333332
  - 0.8844961240310077
  - 0.96
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.45302178806412025
  - 0.5582640225097923
  - 0.3949233563919809
  - 0.4541745779846868
  - 0.41161647980494237
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.819487528554644
  - 0.7801205416923435
  - 0.6511357163984853
  - 0.7525580928294291
  - 0.7801646141116853
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7417992231651402
  - 0.6995720861471628
  - 0.5986841649025256
  - 0.7068542602837687
  - 0.7334890578305056
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7415994130849721
  - 0.7407580293928504
  - 0.5684880005011521
  - 0.694472321088627
  - 0.7020064672630075
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9885615132304536
  - 0.9485449325112194
  - 0.9530323065418742
  - 0.9153767641976759
  - 0.9740637329553106
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2325581395348837
  - -1.4634146341463414
  - -1.5
  - -1.5348837209302326
  - -1.475
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.054263565891472874
  - -0.06910569105691057
  - -0.10833333333333332
  - -0.07364341085271318
  - -0.07083333333333335
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05426356589147287
  - -0.06910569105691057
  - -0.10833333333333334
  - -0.07364341085271318
  - -0.07083333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05426356589147286
  - -0.06910569105691057
  - -0.10833333333333332
  - -0.07364341085271317
  - -0.07083333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05023255813953489
  - -0.07269249163079865
  - -0.13284313725490196
  - -0.08163265306122448
  - -0.05637254901960785
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.010465116279069767
  - -0.037737127371273715
  - -0.040625
  - -0.07383720930232558
  - -0.028749999999999998
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.945736434108527
  - 0.9308943089430893
  - 0.8916666666666666
  - 0.9263565891472867
  - 0.9291666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9457364341085271
  - 0.9308943089430894
  - 0.8916666666666667
  - 0.9263565891472868
  - 0.9291666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9457364341085273
  - 0.9308943089430893
  - 0.8916666666666666
  - 0.9263565891472869
  - 0.9291666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9497674418604651
  - 0.9273075083692015
  - 0.8671568627450981
  - 0.9183673469387755
  - 0.943627450980392
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.945736434108527
  - 0.9308943089430893
  - 0.8916666666666666
  - 0.9263565891472867
  - 0.9291666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9457364341085271
  - 0.9308943089430894
  - 0.8916666666666667
  - 0.9263565891472868
  - 0.9291666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9457364341085273
  - 0.9308943089430893
  - 0.8916666666666666
  - 0.9263565891472869
  - 0.9291666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9497674418604651
  - 0.9273075083692015
  - 0.8671568627450981
  - 0.9183673469387755
  - 0.943627450980392
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9872708926875594
  - 0.9892633636559468
  - 0.9722494784035703
  - 0.967885872297637
  - 0.9892814009661836
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9852884615384615
  - 0.9703368526897939
  - 0.964467268388837
  - 0.9528366370471633
  - 0.9743749351592489
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9895348837209301
  - 0.9622628726287262
  - 0.959375
  - 0.9261627906976743
  - 0.9712500000000001
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9875122507122507
  - 0.9836466078793444
  - 0.9534841165275947
  - 0.9620617477760334
  - 0.983873259448707
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9583382802966648
  - 0.9651776586113976
  - 0.9749794526292462
  - 0.9644917741527536
  - 0.9631768235350026
  train_average_precision_macro_oob:
  - 0.9094058825213636
  - 0.9349591659362728
  - 0.9437907276831781
  - 0.9268861076696697
  - 0.9322933182507662
  train_average_precision_micro:
  - 0.9019479962107863
  - 0.9200518025318902
  - 0.9149200822685021
  - 0.9109824601715304
  - 0.9107751733766547
  train_average_precision_micro_oob:
  - 0.8777169373689333
  - 0.8884685159522085
  - 0.8904360699821849
  - 0.8923962897543087
  - 0.8861094219708326
  train_average_precision_samples:
  - 0.948170731707317
  - 0.9613453815261043
  - 0.9610778443113772
  - 0.956808943089431
  - 0.9550898203592815
  train_average_precision_samples_oob:
  - 0.9192073170731707
  - 0.9388554216867467
  - 0.9315369261477046
  - 0.9385162601626017
  - 0.9230538922155688
  train_average_precision_weighted:
  - 0.9406619456615233
  - 0.9537182239058991
  - 0.959942792682818
  - 0.9458532423119087
  - 0.9494452463314318
  train_average_precision_weighted_oob:
  - 0.9166827545590257
  - 0.9273293596080475
  - 0.9451085836216576
  - 0.9306296063222275
  - 0.93160336143253
  train_f1_macro:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186992
  - 0.9421157684630738
  train_f1_macro_oob:
  - 0.9217479674796748
  - 0.927710843373494
  - 0.9291417165668663
  - 0.9197154471544716
  - 0.9191616766467066
  train_f1_micro:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186992
  - 0.9421157684630739
  train_f1_micro_oob:
  - 0.9217479674796748
  - 0.927710843373494
  - 0.9291417165668663
  - 0.9197154471544715
  - 0.9191616766467066
  train_f1_samples:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186993
  - 0.9421157684630739
  train_f1_samples_oob:
  - 0.9217479674796749
  - 0.927710843373494
  - 0.9291417165668661
  - 0.9197154471544714
  - 0.9191616766467066
  train_f1_weighted:
  - 0.9321721806326975
  - 0.9383803872205239
  - 0.9454821699883815
  - 0.9420281148624293
  - 0.9371406440849646
  train_f1_weighted_oob:
  - 0.918679063028254
  - 0.9231852784271414
  - 0.931778234575625
  - 0.9195001802234771
  - 0.9147078976375607
  train_jaccard_macro:
  - 0.8747313162739659
  - 0.8902031645734286
  - 0.8929621458715439
  - 0.8819958689175323
  - 0.8907834487340183
  train_jaccard_macro_oob:
  - 0.8554040253861842
  - 0.8657083907816568
  - 0.8685674742444861
  - 0.8519531737202013
  - 0.8511323813465385
  train_jaccard_micro:
  - 0.8742857142857143
  - 0.889943074003795
  - 0.8923512747875354
  - 0.8814531548757171
  - 0.8905660377358491
  train_jaccard_micro_oob:
  - 0.8548539114043355
  - 0.8651685393258427
  - 0.8676607642124884
  - 0.8513640639698965
  - 0.850415512465374
  train_jaccard_samples:
  - 0.8921312427409988
  - 0.9053356282271945
  - 0.9074707727402338
  - 0.8977932636469222
  - 0.9057599087539208
  train_jaccard_samples_oob:
  - 0.8758710801393728
  - 0.8823866896156053
  - 0.8839463929284287
  - 0.8710801393728224
  - 0.8689763330481892
  train_jaccard_weighted:
  - 0.873162178546089
  - 0.8840692367184808
  - 0.896953934820022
  - 0.8907116429054086
  - 0.8818230929460982
  train_jaccard_weighted_oob:
  - 0.8497728809455434
  - 0.8575076992346367
  - 0.8729013003733971
  - 0.8512020813745425
  - 0.8430205121462188
  train_label_ranking_average_precision_score:
  - 0.948170731707317
  - 0.9613453815261043
  - 0.9610778443113772
  - 0.9568089430894307
  - 0.9550898203592812
  train_label_ranking_average_precision_score_oob:
  - 0.9192073170731707
  - 0.938855421686747
  - 0.9315369261477048
  - 0.9385162601626016
  - 0.9230538922155689
  train_matthews_corrcoef_macro:
  - 0.5044207627539751
  - 0.6007196704414758
  - 0.5366557024183451
  - 0.5058878430642769
  - 0.6082668899118931
  train_matthews_corrcoef_macro_oob:
  - 0.4573583128143291
  - 0.49866886535945465
  - 0.4655818858165788
  - 0.3860966133736512
  - 0.41320061612408504
  train_matthews_corrcoef_micro:
  - 0.7860229942514849
  - 0.8122628205633257
  - 0.8158098922517337
  - 0.7998227575968847
  - 0.8132726554525621
  train_matthews_corrcoef_micro_oob:
  - 0.7478167765702268
  - 0.7641974162465138
  - 0.7677850222658681
  - 0.7410091259558252
  - 0.7332336617920335
  train_matthews_corrcoef_samples:
  - 0.7503192880782178
  - 0.7822813121997466
  - 0.7707432193626167
  - 0.7499234889070754
  - 0.7812365395690944
  train_matthews_corrcoef_samples_oob:
  - 0.7050027574017514
  - 0.709903251576456
  - 0.6928989079853711
  - 0.66960630692382
  - 0.6581091284303617
  train_matthews_corrcoef_weighted:
  - 0.7272373156497802
  - 0.780616759797719
  - 0.763996278925509
  - 0.743761288942746
  - 0.7826192354428397
  train_matthews_corrcoef_weighted_oob:
  - 0.6828655483233704
  - 0.7125082969731468
  - 0.7091411549499763
  - 0.6529594144364989
  - 0.6593121159481449
  train_ndgc:
  - 0.9628427003035865
  - 0.9724081180047088
  - 0.97173454411726
  - 0.9692001334385104
  - 0.9676552367466712
  train_ndgc_oob:
  - 0.9431103324077765
  - 0.9576348348915882
  - 0.9512282175484821
  - 0.9568531022382236
  - 0.9448187810907483
  train_neg_coverage_error:
  - -1.3719512195121952
  - -1.3132530120481927
  - -1.2934131736526946
  - -1.3597560975609757
  - -1.3233532934131738
  train_neg_coverage_error_oob:
  - -1.5365853658536586
  - -1.4457831325301205
  - -1.437125748502994
  - -1.475609756097561
  - -1.4610778443113772
  train_neg_hamming_loss_macro:
  - -0.06707317073170732
  - -0.05823293172690763
  - -0.056886227544910184
  - -0.06300813008130081
  - -0.057884231536926144
  train_neg_hamming_loss_macro_oob:
  - -0.07825203252032521
  - -0.07228915662650602
  - -0.07085828343313373
  - -0.08028455284552845
  - -0.08083832335329343
  train_neg_hamming_loss_micro:
  - -0.06707317073170732
  - -0.05823293172690763
  - -0.05688622754491018
  - -0.06300813008130081
  - -0.05788423153692615
  train_neg_hamming_loss_micro_oob:
  - -0.0782520325203252
  - -0.07228915662650602
  - -0.07085828343313373
  - -0.08028455284552846
  - -0.08083832335329341
  train_neg_hamming_loss_samples:
  - -0.06707317073170732
  - -0.058232931726907626
  - -0.05688622754491018
  - -0.06300813008130081
  - -0.05788423153692614
  train_neg_hamming_loss_samples_oob:
  - -0.0782520325203252
  - -0.07228915662650602
  - -0.07085828343313373
  - -0.08028455284552845
  - -0.08083832335329341
  train_neg_hamming_loss_weighted:
  - -0.06782781936730259
  - -0.06161961277947611
  - -0.05451783001161855
  - -0.05797188513757059
  - -0.06285935591503561
  train_neg_hamming_loss_weighted_oob:
  - -0.08132093697174597
  - -0.07681472157285861
  - -0.06822176542437512
  - -0.0804998197765229
  - -0.08529210236243931
  train_neg_label_ranking_loss:
  - -0.02552506775067751
  - -0.018975903614457834
  - -0.017065868263473054
  - -0.022323848238482387
  - -0.02237192282102462
  train_neg_label_ranking_loss_oob:
  - -0.052726964769647694
  - -0.039909638554216864
  - -0.041234198270126414
  - -0.04068428184281843
  - -0.04677312042581504
  train_precision_macro:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186992
  - 0.9421157684630738
  train_precision_macro_oob:
  - 0.9217479674796748
  - 0.927710843373494
  - 0.9291417165668663
  - 0.9197154471544716
  - 0.9191616766467066
  train_precision_micro:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186992
  - 0.9421157684630739
  train_precision_micro_oob:
  - 0.9217479674796748
  - 0.927710843373494
  - 0.9291417165668663
  - 0.9197154471544715
  - 0.9191616766467066
  train_precision_samples:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186993
  - 0.9421157684630739
  train_precision_samples_oob:
  - 0.9217479674796749
  - 0.927710843373494
  - 0.9291417165668661
  - 0.9197154471544714
  - 0.9191616766467066
  train_precision_weighted:
  - 0.9321721806326975
  - 0.9383803872205239
  - 0.9454821699883815
  - 0.9420281148624293
  - 0.9371406440849646
  train_precision_weighted_oob:
  - 0.918679063028254
  - 0.9231852784271414
  - 0.931778234575625
  - 0.9195001802234771
  - 0.9147078976375607
  train_recall_macro:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186992
  - 0.9421157684630738
  train_recall_macro_oob:
  - 0.9217479674796748
  - 0.927710843373494
  - 0.9291417165668663
  - 0.9197154471544716
  - 0.9191616766467066
  train_recall_micro:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186992
  - 0.9421157684630739
  train_recall_micro_oob:
  - 0.9217479674796748
  - 0.927710843373494
  - 0.9291417165668663
  - 0.9197154471544715
  - 0.9191616766467066
  train_recall_samples:
  - 0.9329268292682927
  - 0.9417670682730924
  - 0.9431137724550899
  - 0.9369918699186993
  - 0.9421157684630739
  train_recall_samples_oob:
  - 0.9217479674796749
  - 0.927710843373494
  - 0.9291417165668661
  - 0.9197154471544714
  - 0.9191616766467066
  train_recall_weighted:
  - 0.9321721806326975
  - 0.9383803872205239
  - 0.9454821699883815
  - 0.9420281148624293
  - 0.9371406440849646
  train_recall_weighted_oob:
  - 0.918679063028254
  - 0.9231852784271414
  - 0.931778234575625
  - 0.9195001802234771
  - 0.9147078976375607
  train_roc_auc_macro:
  - 0.9859918433271173
  - 0.9880704878420508
  - 0.9900863404548715
  - 0.9884444238065049
  - 0.9873348136419596
  train_roc_auc_macro_oob:
  - 0.966015234388859
  - 0.9717190901596676
  - 0.9742848035240947
  - 0.9785241542022627
  - 0.9726413225327156
  train_roc_auc_micro:
  - 0.9764123471170647
  - 0.9811539785349979
  - 0.9813603642213402
  - 0.9791476129504298
  - 0.9798572679672797
  train_roc_auc_micro_oob:
  - 0.9603074118153504
  - 0.9667824400012517
  - 0.966832504145937
  - 0.9660659884069306
  - 0.9655219532797933
  train_roc_auc_samples:
  - 0.9744749322493226
  - 0.9810240963855423
  - 0.982934131736527
  - 0.9776761517615177
  - 0.9776280771789755
  train_roc_auc_samples_oob:
  - 0.9472730352303523
  - 0.9600903614457831
  - 0.9587658017298737
  - 0.9593157181571814
  - 0.9532268795741848
  train_roc_auc_weighted:
  - 0.9761044357535821
  - 0.9801952222440599
  - 0.9821181370406112
  - 0.9794024967014109
  - 0.9787229289362424
  train_roc_auc_weighted_oob:
  - 0.9629953167675913
  - 0.9644782202186606
  - 0.9736359113735721
  - 0.9732665617991204
  - 0.9676098813533868
start: 2023-12-21 07:13:36.310777
wrapper: null
