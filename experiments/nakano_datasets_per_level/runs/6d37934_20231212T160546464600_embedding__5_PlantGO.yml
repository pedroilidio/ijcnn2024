active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T8AmpmZmZn5PwCamZmZmfk/AGZmZmZm9r8AMzMzMzMLwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:06:47.011904
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 6d37934cb34dffa1acd0524b426279f821be8be84865a5b1fd5401f73b8bca98
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6d37934_20231212T160546464600_embedding__5_PlantGO.yml
results:
  fit_time:
  - 26.485329389572144
  - 25.265671968460083
  - 26.399288654327393
  - 28.690304040908813
  - 28.023847103118896
  score_time:
  - 6.799227714538574
  - 6.345935106277466
  - 5.968544006347656
  - 6.933337926864624
  - 7.033328533172607
  test_average_precision_macro:
  - 0.8886786707382991
  - 0.7954913613902005
  - 0.7218150834813838
  - 0.8293911939519361
  - 0.6988479022237032
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8666772773162941
  - 0.8421581419478504
  - 0.79691289111072
  - 0.842467559860845
  - 0.7813887777085246
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8919448535427916
  - 0.8850495009000163
  - 0.8604626902307314
  - 0.8900290065264684
  - 0.8397682858738135
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9182182935804315
  - 0.880964420513942
  - 0.8437340679019993
  - 0.8887823451186826
  - 0.7949274383282587
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9480240549828179
  - 0.9475945017182131
  - 0.9445876288659795
  - 0.9505076142131981
  - 0.9489112227805695
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9480240549828178
  - 0.947594501718213
  - 0.9445876288659794
  - 0.950507614213198
  - 0.9489112227805695
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9480240549828179
  - 0.9475945017182129
  - 0.9445876288659794
  - 0.9505076142131981
  - 0.9489112227805696
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.932600661349932
  - 0.9269181205392546
  - 0.9210270375413345
  - 0.9352910479624269
  - 0.9264504339881223
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.902884592065404
  - 0.902191307028104
  - 0.8968479170837161
  - 0.9070841326140161
  - 0.9044471410416941
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9011841567986933
  - 0.9004081632653061
  - 0.894993894993895
  - 0.905683192261185
  - 0.902788844621514
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9060836071145351
  - 0.9062648691514672
  - 0.9005324572334882
  - 0.9109499637418419
  - 0.907449334585013
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8758139684824169
  - 0.8657809865891882
  - 0.8555989292549703
  - 0.8801661951817183
  - 0.8646935610999094
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8919448535427918
  - 0.8850495009000167
  - 0.8604626902307313
  - 0.8900290065264684
  - 0.8397682858738134
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.23299352981140778
  - 0.2494966554396704
  - 0.2512523425063721
  - 0.26485496180498264
  - 0.2522356430824838
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6362568254739361
  - 0.6262474297882562
  - 0.6083264640970214
  - 0.6550715053418262
  - 0.6271844463741186
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49011873917978893
  - 0.5008586677479809
  - 0.4786772216132025
  - 0.5239950119624245
  - 0.46706998560397245
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5224117440278414
  - 0.5297380924562819
  - 0.5090159782420777
  - 0.5567139783064402
  - 0.5288073921946779
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9199913892235626
  - 0.9160607454877537
  - 0.8967683309338949
  - 0.9188513675953603
  - 0.879748627577834
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4484536082474226
  - -1.4690721649484537
  - -1.7216494845360826
  - -1.5279187817258884
  - -1.64321608040201
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05197594501718213
  - -0.05240549828178694
  - -0.05541237113402062
  - -0.04949238578680202
  - -0.05108877721943048
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05197594501718213
  - -0.05240549828178694
  - -0.055412371134020616
  - -0.04949238578680203
  - -0.05108877721943048
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.051975945017182126
  - -0.05240549828178693
  - -0.055412371134020616
  - -0.04949238578680202
  - -0.051088777219430476
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06739933865006807
  - -0.07308187946074543
  - -0.07897296245866563
  - -0.06470895203757293
  - -0.07354956601187757
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03088097469540768
  - -0.03248550800097192
  - -0.05234301780693533
  - -0.0371549676118204
  - -0.05388305162174509
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9480240549828179
  - 0.9475945017182131
  - 0.9445876288659795
  - 0.9505076142131981
  - 0.9489112227805695
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9480240549828178
  - 0.947594501718213
  - 0.9445876288659794
  - 0.950507614213198
  - 0.9489112227805695
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9480240549828179
  - 0.9475945017182129
  - 0.9445876288659794
  - 0.9505076142131981
  - 0.9489112227805696
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.932600661349932
  - 0.9269181205392546
  - 0.9210270375413345
  - 0.9352910479624269
  - 0.9264504339881223
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9480240549828179
  - 0.9475945017182131
  - 0.9445876288659795
  - 0.9505076142131981
  - 0.9489112227805695
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9480240549828178
  - 0.947594501718213
  - 0.9445876288659794
  - 0.950507614213198
  - 0.9489112227805695
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9480240549828179
  - 0.9475945017182129
  - 0.9445876288659794
  - 0.9505076142131981
  - 0.9489112227805696
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.932600661349932
  - 0.9269181205392546
  - 0.9210270375413345
  - 0.9352910479624269
  - 0.9264504339881223
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9767033623983393
  - 0.9832242814119972
  - 0.9657245106952755
  - 0.9759241124428638
  - 0.9519772065860553
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.976269081927453
  - 0.9773471516690857
  - 0.9599346399400791
  - 0.9716279069767442
  - 0.9617180964008336
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9691190253045923
  - 0.967514491999028
  - 0.9476569821930645
  - 0.9628450323881795
  - 0.9461169483782549
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9815599868536123
  - 0.9820568798463659
  - 0.9707768917170283
  - 0.9782442848446369
  - 0.9607027418362684
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9502134530303118
  - 0.9559038039569124
  - 0.9595238527065159
  - 0.9575245800984353
  - 0.9703993180975852
  train_average_precision_macro_oob:
  - 0.7172223322044506
  - 0.7431358310892647
  - 0.7724762951194996
  - 0.7406901264665834
  - 0.8062295427380203
  train_average_precision_micro:
  - 0.9535899594428862
  - 0.9562814311520668
  - 0.9612042515235983
  - 0.9507954255155773
  - 0.9668040004146354
  train_average_precision_micro_oob:
  - 0.8174135192251263
  - 0.825657410949826
  - 0.8452170352028229
  - 0.8097691321558991
  - 0.843793899833974
  train_average_precision_samples:
  - 0.95578231292517
  - 0.9610969387755102
  - 0.9663052721088434
  - 0.9564660691421255
  - 0.9665169020111253
  train_average_precision_samples_oob:
  - 0.8684235761404129
  - 0.8719965231763701
  - 0.8891961248785227
  - 0.873997566667221
  - 0.8870912499282204
  train_average_precision_weighted:
  - 0.9676811603636039
  - 0.9717612175545672
  - 0.9746025126898362
  - 0.971738117706616
  - 0.982113384020855
  train_average_precision_weighted_oob:
  - 0.8321455302337867
  - 0.8505634819841835
  - 0.8630864970757256
  - 0.8351834135629685
  - 0.881108849739319
  train_f1_macro:
  - 0.9626913265306122
  - 0.9646045918367349
  - 0.9652423469387754
  - 0.9622279129321382
  - 0.9648053059477962
  train_f1_macro_oob:
  - 0.9462159863945577
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091334
  - 0.9485451433461702
  train_f1_micro:
  - 0.9626913265306123
  - 0.9646045918367347
  - 0.9652423469387755
  - 0.9622279129321383
  - 0.9648053059477963
  train_f1_micro_oob:
  - 0.9462159863945578
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091336
  - 0.9485451433461703
  train_f1_samples:
  - 0.9626913265306123
  - 0.9646045918367347
  - 0.9652423469387755
  - 0.9622279129321383
  - 0.9648053059477963
  train_f1_samples_oob:
  - 0.9462159863945577
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091335
  - 0.9485451433461702
  train_f1_weighted:
  - 0.9574784540150579
  - 0.9603959352335977
  - 0.9619298787130509
  - 0.9558631651545855
  - 0.9632841401202366
  train_f1_weighted_oob:
  - 0.9242879536156099
  - 0.928030805002048
  - 0.927984361004188
  - 0.918525747501983
  - 0.9290962226531561
  train_jaccard_macro:
  - 0.9284687666313856
  - 0.9318773107729342
  - 0.9331053006830942
  - 0.9276398338100534
  - 0.9322881592398256
  train_jaccard_macro_oob:
  - 0.8998544338148263
  - 0.9016481627863654
  - 0.9019144701441558
  - 0.8952537259111605
  - 0.9036896378266263
  train_jaccard_micro:
  - 0.9280664002459268
  - 0.9316291961810902
  - 0.9328197226502312
  - 0.9272054287476866
  - 0.932003720161207
  train_jaccard_micro_oob:
  - 0.8979221303207585
  - 0.9000302938503484
  - 0.9002221773379115
  - 0.8929509190062613
  - 0.9021263607691525
  train_jaccard_samples:
  - 0.9324231890558421
  - 0.9358544516707781
  - 0.9371607983852882
  - 0.9316064217472667
  - 0.9361424198394674
  train_jaccard_samples_oob:
  - 0.9028201390446289
  - 0.9049058084772372
  - 0.9050627943485087
  - 0.8978655147669232
  - 0.9069926222686171
  train_jaccard_weighted:
  - 0.9189215808030899
  - 0.9240664426020311
  - 0.9270275229045825
  - 0.9159995431784405
  - 0.9294807343738393
  train_jaccard_weighted_oob:
  - 0.861414306805057
  - 0.8673888132814168
  - 0.8674406602299933
  - 0.8518507473046164
  - 0.8693025942952923
  train_label_ranking_average_precision_score:
  - 0.9557823129251702
  - 0.9610969387755102
  - 0.9663052721088438
  - 0.9564660691421255
  - 0.9665169020111253
  train_label_ranking_average_precision_score_oob:
  - 0.8684235761404134
  - 0.8719965231763708
  - 0.8891961248785233
  - 0.8739975666672217
  - 0.8870912499282206
  train_matthews_corrcoef_macro:
  - 0.3573195702259608
  - 0.4152866458298134
  - 0.40853606824910665
  - 0.35591737732237094
  - 0.3626958194313255
  train_matthews_corrcoef_macro_oob:
  - 0.23756534789566677
  - 0.26625021632055174
  - 0.261753891383819
  - 0.20939866113213781
  - 0.2664951040943049
  train_matthews_corrcoef_micro:
  - 0.7481746036103663
  - 0.7637334473204636
  - 0.7673276730387981
  - 0.7450492146483905
  - 0.7666237828191435
  train_matthews_corrcoef_micro_oob:
  - 0.6134400350259954
  - 0.6259259564447418
  - 0.6246007482091871
  - 0.5892761427818819
  - 0.6379934483054253
  train_matthews_corrcoef_samples:
  - 0.6281777553545213
  - 0.6468660210115027
  - 0.6567416707130111
  - 0.6228793349687003
  - 0.6494318965804785
  train_matthews_corrcoef_samples_oob:
  - 0.456496611644172
  - 0.47331954675960314
  - 0.4656765285070904
  - 0.43003265979888766
  - 0.48394302383648236
  train_matthews_corrcoef_weighted:
  - 0.6651230811406718
  - 0.7011762137050002
  - 0.703654511290935
  - 0.6615868654104651
  - 0.6807094191375118
  train_matthews_corrcoef_weighted_oob:
  - 0.5087921684653183
  - 0.5311878287336574
  - 0.5289300099594925
  - 0.4731627980016851
  - 0.5351729008157587
  train_ndgc:
  - 0.9673789145185301
  - 0.9712405036785198
  - 0.9752083088045866
  - 0.9679025554089735
  - 0.9752701020103419
  train_ndgc_oob:
  - 0.9026988764814827
  - 0.9049533200527051
  - 0.9185279733763678
  - 0.9063796579708323
  - 0.9167445179491691
  train_neg_coverage_error:
  - -1.1785714285714286
  - -1.1683673469387754
  - -1.156887755102041
  - -1.176696542893726
  - -1.1604621309370988
  train_neg_coverage_error_oob:
  - -1.6135204081632653
  - -1.6237244897959184
  - -1.5293367346938775
  - -1.5979513444302176
  - -1.5596919127086009
  train_neg_hamming_loss_macro:
  - -0.03730867346938776
  - -0.03539540816326531
  - -0.03475765306122449
  - -0.03777208706786172
  - -0.03519469405220368
  train_neg_hamming_loss_macro_oob:
  - -0.05378401360544217
  - -0.052614795918367346
  - -0.05250850340136054
  - -0.056551429790866414
  - -0.0514548566538297
  train_neg_hamming_loss_micro:
  - -0.03730867346938776
  - -0.03539540816326531
  - -0.03475765306122449
  - -0.03777208706786172
  - -0.03519469405220368
  train_neg_hamming_loss_micro_oob:
  - -0.053784013605442174
  - -0.052614795918367346
  - -0.05250850340136055
  - -0.05655142979086641
  - -0.0514548566538297
  train_neg_hamming_loss_samples:
  - -0.03730867346938775
  - -0.0353954081632653
  - -0.03475765306122449
  - -0.03777208706786172
  - -0.03519469405220368
  train_neg_hamming_loss_samples_oob:
  - -0.053784013605442174
  - -0.052614795918367346
  - -0.05250850340136054
  - -0.05655142979086641
  - -0.05145485665382969
  train_neg_hamming_loss_weighted:
  - -0.04252154598494202
  - -0.039604064766402436
  - -0.03807012128694894
  - -0.0441368348454145
  - -0.03671585987976341
  train_neg_hamming_loss_weighted_oob:
  - -0.07571204638439005
  - -0.07196919499795197
  - -0.07201563899581184
  - -0.08147425249801696
  - -0.07090377734684401
  train_neg_label_ranking_loss:
  - -0.009242510135367279
  - -0.007971938775510204
  - -0.007195896035181749
  - -0.008917169992714167
  - -0.006727739526199089
  train_neg_label_ranking_loss_oob:
  - -0.045185700542843404
  - -0.046630849309420734
  - -0.03757923623995053
  - -0.044852063097901775
  - -0.03935979391691844
  train_precision_macro:
  - 0.9626913265306122
  - 0.9646045918367349
  - 0.9652423469387754
  - 0.9622279129321382
  - 0.9648053059477962
  train_precision_macro_oob:
  - 0.9462159863945577
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091334
  - 0.9485451433461702
  train_precision_micro:
  - 0.9626913265306123
  - 0.9646045918367347
  - 0.9652423469387755
  - 0.9622279129321383
  - 0.9648053059477963
  train_precision_micro_oob:
  - 0.9462159863945578
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091336
  - 0.9485451433461703
  train_precision_samples:
  - 0.9626913265306123
  - 0.9646045918367347
  - 0.9652423469387755
  - 0.9622279129321383
  - 0.9648053059477963
  train_precision_samples_oob:
  - 0.9462159863945577
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091335
  - 0.9485451433461702
  train_precision_weighted:
  - 0.9574784540150579
  - 0.9603959352335977
  - 0.9619298787130509
  - 0.9558631651545855
  - 0.9632841401202366
  train_precision_weighted_oob:
  - 0.9242879536156099
  - 0.928030805002048
  - 0.927984361004188
  - 0.918525747501983
  - 0.9290962226531561
  train_recall_macro:
  - 0.9626913265306122
  - 0.9646045918367349
  - 0.9652423469387754
  - 0.9622279129321382
  - 0.9648053059477962
  train_recall_macro_oob:
  - 0.9462159863945577
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091334
  - 0.9485451433461702
  train_recall_micro:
  - 0.9626913265306123
  - 0.9646045918367347
  - 0.9652423469387755
  - 0.9622279129321383
  - 0.9648053059477963
  train_recall_micro_oob:
  - 0.9462159863945578
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091336
  - 0.9485451433461703
  train_recall_samples:
  - 0.9626913265306123
  - 0.9646045918367347
  - 0.9652423469387755
  - 0.9622279129321383
  - 0.9648053059477963
  train_recall_samples_oob:
  - 0.9462159863945577
  - 0.9473852040816326
  - 0.9474914965986394
  - 0.9434485702091335
  - 0.9485451433461702
  train_recall_weighted:
  - 0.9574784540150579
  - 0.9603959352335977
  - 0.9619298787130509
  - 0.9558631651545855
  - 0.9632841401202366
  train_recall_weighted_oob:
  - 0.9242879536156099
  - 0.928030805002048
  - 0.927984361004188
  - 0.918525747501983
  - 0.9290962226531561
  train_roc_auc_macro:
  - 0.9967985195281331
  - 0.9970865172131127
  - 0.9972959244605925
  - 0.9968221751111614
  - 0.9983517665517314
  train_roc_auc_macro_oob:
  - 0.9661786880805775
  - 0.9661366569911688
  - 0.9678598854977473
  - 0.9633825197845115
  - 0.973445746592299
  train_roc_auc_micro:
  - 0.9955846679394678
  - 0.9959368609218351
  - 0.9962735594598282
  - 0.9953337976584244
  - 0.9969099191234658
  train_roc_auc_micro_oob:
  - 0.966828086664049
  - 0.9669340121390115
  - 0.971064617165919
  - 0.9657217135352064
  - 0.9698553754282817
  train_roc_auc_samples:
  - 0.9907574898646327
  - 0.9920280612244898
  - 0.9928041039648182
  - 0.9910828300072858
  - 0.9932722604738009
  train_roc_auc_samples_oob:
  - 0.9548142994571565
  - 0.9533691506905791
  - 0.9624207637600495
  - 0.9551479369020982
  - 0.9606402060830815
  train_roc_auc_weighted:
  - 0.9962467334742613
  - 0.9966366157042664
  - 0.9970738647899814
  - 0.9962589118499511
  - 0.9978676649486283
  train_roc_auc_weighted_oob:
  - 0.9715065224918386
  - 0.9727243820689336
  - 0.9755121770214837
  - 0.9705716785280436
  - 0.9774208315872339
start: 2023-12-12 16:05:46.464600
wrapper: null
