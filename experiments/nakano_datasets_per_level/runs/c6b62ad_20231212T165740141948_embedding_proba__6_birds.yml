active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D+ZmZmZmZkBwJCZmZmZmcm/MjMzMzMz87/OzMzMzMz8Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T9oZmZmZmb2PzAzMzMzM+O/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+gmZmZmZnJP6CZmZmZmck/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:58:16.161664
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: c6b62adcf51446648469096695cd4fd4ca6ba1ff995c12ff7e7e37d8adf4ee09
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c6b62ad_20231212T165740141948_embedding_proba__6_birds.yml
results:
  fit_time:
  - 14.63276219367981
  - 14.612241744995117
  - 15.196964502334595
  - 14.605187892913818
  - 16.40479350090027
  score_time:
  - 5.89619517326355
  - 5.879763126373291
  - 6.236084222793579
  - 6.105240821838379
  - 6.384152412414551
  test_average_precision_macro:
  - 0.45981260581039113
  - 0.4132996341278336
  - 0.4450894028764618
  - 0.40815089492448137
  - 0.5331010308781853
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4855502710519199
  - 0.5017015697488493
  - 0.4928266133376409
  - 0.5293300443225841
  - 0.5594245055251352
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3037258326175815
  - 0.32986930611159615
  - 0.34425529525278725
  - 0.35107308773564444
  - 0.3624661499855299
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5313571063673368
  - 0.5268926027134363
  - 0.5464349492034184
  - 0.5539803635975062
  - 0.6127789767022547
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9530803753569972
  - 0.9579763361893106
  - 0.9559363525091799
  - 0.9596083231334149
  - 0.959200326397389
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9530803753569972
  - 0.9579763361893104
  - 0.95593635250918
  - 0.9596083231334149
  - 0.9592003263973888
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9530803753569971
  - 0.9579763361893106
  - 0.9559363525091799
  - 0.9596083231334149
  - 0.9592003263973887
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9335212591026544
  - 0.9429120846103001
  - 0.9400092560453547
  - 0.9438735652905476
  - 0.9415026833631486
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9118076496893901
  - 0.9204057158578823
  - 0.9166616787190449
  - 0.923318347980926
  - 0.9228114695057292
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9103663289166017
  - 0.9193422083007048
  - 0.9155920281359906
  - 0.9223529411764706
  - 0.9215993727949824
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.916005789514384
  - 0.9253083339534302
  - 0.9205043355700585
  - 0.9267341915471339
  - 0.9260615690342687
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8768592842760545
  - 0.892882560902062
  - 0.8876682555993469
  - 0.8946211942929035
  - 0.8906903077407584
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7765940496718451
  - 0.8104894611503559
  - 0.7938676983535626
  - 0.7774296768829313
  - 0.812078553086305
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1620126894282144
  - 0.17105038243133108
  - 0.20471946100474148
  - 0.19890974422133098
  - 0.19975419404733027
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.395741923148759
  - 0.45457708915952705
  - 0.4556800843624088
  - 0.47572473220820544
  - 0.48097286942833023
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.13734795100966196
  - 0.17662673857949956
  - 0.17071372579101315
  - 0.16583687572693906
  - 0.18147311269206096
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.30014374273679767
  - 0.3318451439986701
  - 0.3673392949275576
  - 0.36108076453737686
  - 0.3805844976522296
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.36884557797292494
  - 0.3904662934123401
  - 0.40921505449875184
  - 0.4171517234956988
  - 0.4194773341250788
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.124031007751938
  - -3.511627906976744
  - -3.2713178294573644
  - -3.193798449612403
  - -2.7829457364341086
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04691962464300286
  - -0.04202366381068952
  - -0.044063647490820076
  - -0.04039167686658506
  - -0.040799673602611185
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04691962464300286
  - -0.04202366381068951
  - -0.044063647490820076
  - -0.04039167686658507
  - -0.04079967360261118
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04691962464300285
  - -0.04202366381068951
  - -0.04406364749082007
  - -0.04039167686658507
  - -0.040799673602611185
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06647874089734555
  - -0.05708791538970014
  - -0.059990743954645376
  - -0.05612643470945256
  - -0.05849731663685153
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09048234280792421
  - -0.10664015457107112
  - -0.09175533262400568
  - -0.09367811724172874
  - -0.07775262559804283
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9530803753569972
  - 0.9579763361893106
  - 0.9559363525091799
  - 0.9596083231334149
  - 0.959200326397389
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9530803753569972
  - 0.9579763361893104
  - 0.95593635250918
  - 0.9596083231334149
  - 0.9592003263973888
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9530803753569971
  - 0.9579763361893106
  - 0.9559363525091799
  - 0.9596083231334149
  - 0.9592003263973887
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9335212591026544
  - 0.9429120846103001
  - 0.9400092560453547
  - 0.9438735652905476
  - 0.9415026833631486
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9530803753569972
  - 0.9579763361893106
  - 0.9559363525091799
  - 0.9596083231334149
  - 0.959200326397389
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9530803753569972
  - 0.9579763361893104
  - 0.95593635250918
  - 0.9596083231334149
  - 0.9592003263973888
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9530803753569971
  - 0.9579763361893106
  - 0.9559363525091799
  - 0.9596083231334149
  - 0.9592003263973887
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9335212591026544
  - 0.9429120846103001
  - 0.9400092560453547
  - 0.9438735652905476
  - 0.9415026833631486
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8625038414166162
  - 0.8746406262662009
  - 0.8743436944878974
  - .nan
  - 0.8693363903369862
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8835084349314621
  - 0.8923124945749789
  - 0.8969234535136145
  - 0.8833336671807918
  - 0.9141368110562423
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8680767499878836
  - 0.8811956216745627
  - 0.8796535382239961
  - .nan
  - 0.8946428899118144
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9552049440022439
  - 0.9303291991352625
  - 0.9341170496500766
  - 0.9343276809976429
  - 0.9248269925146186
  train_average_precision_macro_oob:
  - 0.622888373500166
  - 0.5866685588737159
  - 0.572065567779591
  - 0.6101223277272838
  - 0.5938258877524303
  train_average_precision_micro:
  - 0.9323278118341345
  - 0.9262734234100853
  - 0.9287430856408907
  - 0.9309032314957976
  - 0.9307721312125201
  train_average_precision_micro_oob:
  - 0.7831104988706001
  - 0.7808281240122135
  - 0.7803774256528928
  - 0.778599553153892
  - 0.7815940673207987
  train_average_precision_samples:
  - 0.521183247200689
  - 0.5201788790451581
  - 0.5176868001722652
  - 0.5070194259874492
  - 0.5231293066322136
  train_average_precision_samples_oob:
  - 0.4619142377863308
  - 0.46158146714346765
  - 0.4536172706872091
  - 0.4391739943253281
  - 0.45808330501387956
  train_average_precision_weighted:
  - 0.955314855741757
  - 0.9450428776879545
  - 0.9436402989631358
  - 0.9423754593251253
  - 0.9419137217592274
  train_average_precision_weighted_oob:
  - 0.770223402785338
  - 0.7500464341407761
  - 0.7433235158270465
  - 0.7526505236938409
  - 0.7504103162855228
  train_f1_macro:
  - 0.9740922072623418
  - 0.9740922072623418
  - 0.976030191758466
  - 0.9721542227662177
  - 0.9732762137902896
  train_f1_macro_oob:
  - 0.9683802529579765
  - 0.966748266013872
  - 0.9681762545899634
  - 0.9661362709098328
  - 0.9661362709098326
  train_f1_micro:
  - 0.9740922072623419
  - 0.9740922072623419
  - 0.976030191758466
  - 0.9721542227662179
  - 0.9732762137902897
  train_f1_micro_oob:
  - 0.9683802529579764
  - 0.9667482660138719
  - 0.9681762545899633
  - 0.9661362709098327
  - 0.9661362709098327
  train_f1_samples:
  - 0.9740922072623419
  - 0.9740922072623419
  - 0.976030191758466
  - 0.9721542227662179
  - 0.9732762137902897
  train_f1_samples_oob:
  - 0.9683802529579765
  - 0.966748266013872
  - 0.9681762545899633
  - 0.9661362709098328
  - 0.9661362709098329
  train_f1_weighted:
  - 0.9710787371172296
  - 0.9721188630490958
  - 0.975130441264162
  - 0.9686267995570322
  - 0.9722875613941654
  train_f1_weighted_oob:
  - 0.9623281059728533
  - 0.9602694721299373
  - 0.9620825879546808
  - 0.959091915836102
  - 0.9615028995798568
  train_jaccard_macro:
  - 0.9497765716294845
  - 0.9496820891567914
  - 0.9533684212228255
  - 0.9461487186094212
  - 0.9481997174207966
  train_jaccard_macro_oob:
  - 0.939178734866186
  - 0.9360622271635101
  - 0.9387734383343327
  - 0.9350395613726444
  - 0.934929911671513
  train_jaccard_micro:
  - 0.9494929409425333
  - 0.9494929409425333
  - 0.953182587907162
  - 0.9458172075022329
  - 0.9479435724220147
  train_jaccard_micro_oob:
  - 0.9386988333003757
  - 0.9356367226061204
  - 0.9383155397390273
  - 0.9344909234411997
  - 0.9344909234411997
  train_jaccard_samples:
  - 0.9525663977635667
  - 0.9526171727385074
  - 0.9558139534883722
  - 0.9490247703088958
  - 0.9509543287854714
  train_jaccard_samples_oob:
  - 0.9424104908685293
  - 0.939546702034063
  - 0.9421008802454708
  - 0.9384048851945718
  - 0.9382953651785807
  train_jaccard_weighted:
  - 0.9440356435165016
  - 0.9459140471524023
  - 0.9516484863263805
  - 0.9394671258472879
  - 0.9463258517193011
  train_jaccard_weighted_oob:
  - 0.9277736719360823
  - 0.9238815832940833
  - 0.9273257431956662
  - 0.9218764569881306
  - 0.92618399891828
  train_label_ranking_average_precision_score:
  - 0.9727336347975883
  - 0.9697912821459329
  - 0.9750511412575364
  - 0.9701977205610927
  - 0.9804936477174848
  train_label_ranking_average_precision_score_oob:
  - 0.9134646253832297
  - 0.9111938702442426
  - 0.9109816117724802
  - 0.9023522888989718
  - 0.9154476460991511
  train_matthews_corrcoef_macro:
  - 0.4262328405818319
  - 0.40083884366867245
  - 0.42427371595716157
  - 0.3946476233466006
  - 0.40503470138649267
  train_matthews_corrcoef_macro_oob:
  - 0.3183384987625728
  - 0.3068553902059323
  - 0.31515194932250223
  - 0.26564278521669
  - 0.24700398908658294
  train_matthews_corrcoef_micro:
  - 0.7068544099946438
  - 0.7087538147101649
  - 0.7308954028806878
  - 0.682585215199501
  - 0.6970855822311943
  train_matthews_corrcoef_micro_oob:
  - 0.6278022290323131
  - 0.6061155227498115
  - 0.6223354955518349
  - 0.5960309583307994
  - 0.5953417442113916
  train_matthews_corrcoef_samples:
  - 0.32966884634055765
  - 0.34796166193814193
  - 0.33588422334045004
  - 0.3027402349234266
  - 0.3174153097896874
  train_matthews_corrcoef_samples_oob:
  - 0.27650204554001573
  - 0.26135675954068743
  - 0.2638182586585118
  - 0.24240711081835914
  - 0.24550199136682369
  train_matthews_corrcoef_weighted:
  - 0.6425827514105124
  - 0.6395684236956362
  - 0.6628427155936376
  - 0.6070522129258445
  - 0.6261895779706164
  train_matthews_corrcoef_weighted_oob:
  - 0.5273235015331135
  - 0.5206235829699069
  - 0.5262425480384999
  - 0.4723396567397279
  - 0.4703118062763261
  train_ndgc:
  - 0.531113502187655
  - 0.5310349333418226
  - 0.528183845181895
  - 0.5178598016141079
  - 0.5314106852799153
  train_ndgc_oob:
  - 0.49229985038580226
  - 0.49195927192543504
  - 0.4852018224818674
  - 0.4725825954483982
  - 0.48901977459631424
  train_neg_coverage_error:
  - -1.1414728682170543
  - -1.1724806201550388
  - -1.178294573643411
  - -1.1569767441860466
  - -1.1434108527131783
  train_neg_coverage_error_oob:
  - -1.8275193798449612
  - -1.9593023255813953
  - -1.945736434108527
  - -1.949612403100775
  - -1.9844961240310077
  train_neg_hamming_loss_macro:
  - -0.0259077927376581
  - -0.0259077927376581
  - -0.023969808241534066
  - -0.02784577723378213
  - -0.02672378620971032
  train_neg_hamming_loss_macro_oob:
  - -0.031619747042023666
  - -0.03325173398612811
  - -0.03182374541003673
  - -0.03386372909016728
  - -0.03386372909016727
  train_neg_hamming_loss_micro:
  - -0.0259077927376581
  - -0.0259077927376581
  - -0.02396980824153407
  - -0.02784577723378213
  - -0.02672378620971032
  train_neg_hamming_loss_micro_oob:
  - -0.031619747042023666
  - -0.03325173398612811
  - -0.03182374541003672
  - -0.03386372909016728
  - -0.03386372909016728
  train_neg_hamming_loss_samples:
  - -0.025907792737658097
  - -0.025907792737658097
  - -0.023969808241534066
  - -0.027845777233782128
  - -0.02672378620971032
  train_neg_hamming_loss_samples_oob:
  - -0.03161974704202366
  - -0.03325173398612811
  - -0.03182374541003671
  - -0.03386372909016728
  - -0.03386372909016728
  train_neg_hamming_loss_weighted:
  - -0.0289212628827705
  - -0.027881136950904398
  - -0.024869558735837807
  - -0.03137320044296788
  - -0.027712438605834666
  train_neg_hamming_loss_weighted_oob:
  - -0.03767189402714663
  - -0.039730527870062746
  - -0.037917412045319024
  - -0.040908084163898115
  - -0.038497100420143204
  train_neg_label_ranking_loss:
  - -0.00482801970917566
  - -0.005645194124161292
  - -0.005365579694410063
  - -0.005062713069724013
  - -0.004116485841007045
  train_neg_label_ranking_loss_oob:
  - -0.03007160750406304
  - -0.03467465474561918
  - -0.03352789734458681
  - -0.03383071525171388
  - -0.033475609484501415
  train_precision_macro:
  - 0.9740922072623418
  - 0.9740922072623418
  - 0.976030191758466
  - 0.9721542227662177
  - 0.9732762137902896
  train_precision_macro_oob:
  - 0.9683802529579765
  - 0.966748266013872
  - 0.9681762545899634
  - 0.9661362709098328
  - 0.9661362709098326
  train_precision_micro:
  - 0.9740922072623419
  - 0.9740922072623419
  - 0.976030191758466
  - 0.9721542227662179
  - 0.9732762137902897
  train_precision_micro_oob:
  - 0.9683802529579764
  - 0.9667482660138719
  - 0.9681762545899633
  - 0.9661362709098327
  - 0.9661362709098327
  train_precision_samples:
  - 0.9740922072623419
  - 0.9740922072623419
  - 0.976030191758466
  - 0.9721542227662179
  - 0.9732762137902897
  train_precision_samples_oob:
  - 0.9683802529579765
  - 0.966748266013872
  - 0.9681762545899633
  - 0.9661362709098328
  - 0.9661362709098329
  train_precision_weighted:
  - 0.9710787371172296
  - 0.9721188630490958
  - 0.975130441264162
  - 0.9686267995570322
  - 0.9722875613941654
  train_precision_weighted_oob:
  - 0.9623281059728533
  - 0.9602694721299373
  - 0.9620825879546808
  - 0.959091915836102
  - 0.9615028995798568
  train_recall_macro:
  - 0.9740922072623418
  - 0.9740922072623418
  - 0.976030191758466
  - 0.9721542227662177
  - 0.9732762137902896
  train_recall_macro_oob:
  - 0.9683802529579765
  - 0.966748266013872
  - 0.9681762545899634
  - 0.9661362709098328
  - 0.9661362709098326
  train_recall_micro:
  - 0.9740922072623419
  - 0.9740922072623419
  - 0.976030191758466
  - 0.9721542227662179
  - 0.9732762137902897
  train_recall_micro_oob:
  - 0.9683802529579764
  - 0.9667482660138719
  - 0.9681762545899633
  - 0.9661362709098327
  - 0.9661362709098327
  train_recall_samples:
  - 0.9740922072623419
  - 0.9740922072623419
  - 0.976030191758466
  - 0.9721542227662179
  - 0.9732762137902897
  train_recall_samples_oob:
  - 0.9683802529579765
  - 0.966748266013872
  - 0.9681762545899633
  - 0.9661362709098328
  - 0.9661362709098329
  train_recall_weighted:
  - 0.9710787371172296
  - 0.9721188630490958
  - 0.975130441264162
  - 0.9686267995570322
  - 0.9722875613941654
  train_recall_weighted_oob:
  - 0.9623281059728533
  - 0.9602694721299373
  - 0.9620825879546808
  - 0.959091915836102
  - 0.9615028995798568
  train_roc_auc_macro:
  - 0.9972374014929747
  - 0.9961506279015891
  - 0.9964364788029105
  - 0.9963001341464994
  - 0.9961912528215165
  train_roc_auc_macro_oob:
  - 0.9566958330427541
  - 0.9465829220524464
  - 0.9425299756202821
  - 0.956686645440393
  - 0.9485445828297556
  train_roc_auc_micro:
  - 0.9961184296884094
  - 0.9953960556094407
  - 0.995704562025652
  - 0.9958215940757164
  - 0.9958220913398264
  train_roc_auc_micro_oob:
  - 0.9715857165147227
  - 0.9666058021441144
  - 0.9684682911874855
  - 0.9679345578084667
  - 0.9660782442748092
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9966645539811522
  - 0.9958788685284247
  - 0.9959574730786248
  - 0.9958278093758227
  - 0.9962277634459431
  train_roc_auc_weighted_oob:
  - 0.9724157067519368
  - 0.9659302092390029
  - 0.9670209129224028
  - 0.9669610191211057
  - 0.9669274319276769
start: 2023-12-12 16:57:40.141948
wrapper: null
