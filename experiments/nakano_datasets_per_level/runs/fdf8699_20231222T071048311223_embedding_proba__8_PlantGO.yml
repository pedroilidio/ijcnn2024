active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz479AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T8ANDMzMzPjPwDNzMzMzARAgJmZmZmZFcAANDMzMzPjPw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:13:15.796106
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__8
  params: {}
hash: fdf869931d791baf2c120faadcd151b52fbdb4284b6d65eab9e688e03671f103
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fdf8699_20231222T071048311223_embedding_proba__8_PlantGO.yml
results:
  fit_time:
  - 86.1872239112854
  - 89.60378050804138
  - 95.49632692337036
  - 88.48497033119202
  - 94.79719972610474
  score_time:
  - 10.893617630004883
  - 11.22048807144165
  - 11.598138332366943
  - 12.286357164382935
  - 11.48115062713623
  test_average_precision_macro:
  - 0.77666727835294
  - 0.786808832032452
  - 0.8250370281370842
  - 0.8530229951844452
  - 0.7951312197092166
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8347396599622797
  - 0.8273170998124697
  - 0.8605530172378774
  - 0.891457291383425
  - 0.834346159433231
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8748772704958272
  - 0.8985612535612535
  - 0.9071736984949421
  - 0.9280739161336177
  - 0.8796153846153847
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8530939830392162
  - 0.85041845524298
  - 0.8763541582266313
  - 0.9093581733266919
  - 0.8668823821770497
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892919
  - 0.9626865671641789
  - 0.958974358974359
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892919
  - 0.9626865671641791
  - 0.958974358974359
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892921
  - 0.9626865671641791
  - 0.958974358974359
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9512763868433972
  - 0.9346637639090468
  - 0.9320750061682703
  - 0.9556443136430524
  - 0.9421001221001221
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9287323032703677
  - 0.9147955373352729
  - 0.9107599257811017
  - 0.9286194140978861
  - 0.9220721533998494
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9279503105590062
  - 0.9133278822567457
  - 0.909315746084089
  - 0.9280575539568345
  - 0.9211822660098522
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9330463351081908
  - 0.9189630881938572
  - 0.9154814097819279
  - 0.9330599748510197
  - 0.927032967032967
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9082262500414972
  - 0.8793661567597877
  - 0.8744349915813462
  - 0.9158844305710566
  - 0.891841844743475
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8748772704958272
  - 0.8985612535612536
  - 0.9071736984949418
  - 0.9280739161336177
  - 0.8796153846153847
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4215128170985527
  - 0.405514685551811
  - 0.35033052557236655
  - 0.45297494694813234
  - 0.3837140871731049
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7502361565667653
  - 0.6935914317690282
  - 0.6764380448528636
  - 0.7455666875743256
  - 0.7218109749863102
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.66697731391601
  - 0.6027536352062912
  - 0.5924379587300334
  - 0.6584560597916536
  - 0.6396335436947108
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6871427787041381
  - 0.630150496871416
  - 0.6037388773837606
  - 0.6919376546208563
  - 0.6502859603623127
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9079487447494214
  - 0.9255251156456034
  - 0.9319492254484469
  - 0.9476334885471114
  - 0.91077854135911
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5309278350515463
  - -1.4512820512820512
  - -1.38860103626943
  - -1.2935323383084578
  - -1.5076923076923077
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.037371134020618556
  - -0.0452991452991453
  - -0.04749568221070812
  - -0.03731343283582089
  - -0.041025641025641026
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.037371134020618556
  - -0.0452991452991453
  - -0.047495682210708115
  - -0.03731343283582089
  - -0.041025641025641026
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.03737113402061855
  - -0.04529914529914529
  - -0.047495682210708115
  - -0.03731343283582089
  - -0.041025641025641026
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.048723613156602855
  - -0.06533623609095307
  - -0.06792499383172958
  - -0.04435568635694766
  - -0.0578998778998779
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.037441424554826616
  - -0.029764309764309767
  - -0.02519059332530835
  - -0.01886024423337856
  - -0.03741258741258741
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892919
  - 0.9626865671641789
  - 0.958974358974359
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892919
  - 0.9626865671641791
  - 0.958974358974359
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892921
  - 0.9626865671641791
  - 0.958974358974359
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9512763868433972
  - 0.9346637639090468
  - 0.9320750061682703
  - 0.9556443136430524
  - 0.9421001221001221
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892919
  - 0.9626865671641789
  - 0.958974358974359
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892919
  - 0.9626865671641791
  - 0.958974358974359
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9626288659793815
  - 0.9547008547008548
  - 0.9525043177892921
  - 0.9626865671641791
  - 0.958974358974359
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9512763868433972
  - 0.9346637639090468
  - 0.9320750061682703
  - 0.9556443136430524
  - 0.9421001221001221
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9611435714304469
  - 0.9686480769504707
  - 0.9756833699449851
  - 0.9809242707727653
  - 0.9751144683685479
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9718287692791943
  - 0.9743514150943395
  - 0.9800230633563967
  - 0.985238702184305
  - 0.9769941873463
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9625585754451733
  - 0.9702356902356903
  - 0.9748094066746917
  - 0.9811397557666214
  - 0.9625874125874125
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9669934702225631
  - 0.9684735437961409
  - 0.9736556761119817
  - 0.9838528347147321
  - 0.9743745717903295
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9688465212509388
  - 0.9644067930341061
  - 0.9613627700269447
  - 0.9648842705836409
  - 0.9700251821258487
  train_average_precision_macro_oob:
  - 0.8445911046699656
  - 0.820004240741928
  - 0.8352222061236169
  - 0.807051717602909
  - 0.8357934282970468
  train_average_precision_micro:
  - 0.9744257814896965
  - 0.9717527097464148
  - 0.9701095634845333
  - 0.9649442163105159
  - 0.969220110198531
  train_average_precision_micro_oob:
  - 0.9012660995779893
  - 0.8992503052252054
  - 0.8945948074193316
  - 0.8811190159272216
  - 0.8908409451025284
  train_average_precision_samples:
  - 0.9674744897959183
  - 0.9680715197956578
  - 0.9682590233545647
  - 0.9655727155727156
  - 0.9681779480630054
  train_average_precision_samples_oob:
  - 0.9294430732249609
  - 0.9286981288896998
  - 0.9283363663936912
  - 0.9198908091765235
  - 0.9264144823531797
  train_average_precision_weighted:
  - 0.9809261531043606
  - 0.9778648080458474
  - 0.9757700993532292
  - 0.9755009371945984
  - 0.9796386763785552
  train_average_precision_weighted_oob:
  - 0.9116895663236935
  - 0.900818478557381
  - 0.9039967240773152
  - 0.8895035808827653
  - 0.9023831593894575
  train_f1_macro:
  - 0.9740646258503401
  - 0.974457215836526
  - 0.9738853503184713
  - 0.973080223080223
  - 0.9750957854406129
  train_f1_macro_oob:
  - 0.9624787414965986
  - 0.9620051085568325
  - 0.9624203821656051
  - 0.9599957099957099
  - 0.9598765432098766
  train_f1_micro:
  - 0.9740646258503401
  - 0.9744572158365262
  - 0.9738853503184713
  - 0.9730802230802231
  - 0.975095785440613
  train_f1_micro_oob:
  - 0.9624787414965986
  - 0.9620051085568327
  - 0.9624203821656051
  - 0.95999570999571
  - 0.9598765432098766
  train_f1_samples:
  - 0.97406462585034
  - 0.9744572158365262
  - 0.9738853503184713
  - 0.973080223080223
  - 0.975095785440613
  train_f1_samples_oob:
  - 0.9624787414965985
  - 0.9620051085568327
  - 0.9624203821656051
  - 0.95999570999571
  - 0.9598765432098765
  train_f1_weighted:
  - 0.9718331119430019
  - 0.9741617921762724
  - 0.9722684958353749
  - 0.9703133741138492
  - 0.9738209133434597
  train_f1_weighted_oob:
  - 0.9531638690979349
  - 0.9568484506922761
  - 0.9554758225605849
  - 0.9488225925280557
  - 0.9506449930853115
  train_jaccard_macro:
  - 0.9495103299768762
  - 0.9502626051033841
  - 0.9492121648735127
  - 0.9476635153956953
  - 0.9514610807622922
  train_jaccard_macro_oob:
  - 0.9280553084344962
  - 0.927198741058905
  - 0.9280272778477697
  - 0.9236154456566951
  - 0.9233526659127925
  train_jaccard_micro:
  - 0.9494405304600083
  - 0.950186799501868
  - 0.9490999379267536
  - 0.9475718015665796
  - 0.9514018691588785
  train_jaccard_micro_oob:
  - 0.9276713451490626
  - 0.9267917563826515
  - 0.9275629220380601
  - 0.9230689904094049
  - 0.9228486646884273
  train_jaccard_samples:
  - 0.9531453240636915
  - 0.9539275539275539
  - 0.9528746412822846
  - 0.951365494222637
  - 0.9549211963005066
  train_jaccard_samples_oob:
  - 0.9326474545862302
  - 0.931500428052152
  - 0.9322628963393295
  - 0.9281372424229566
  - 0.9277391829115967
  train_jaccard_weighted:
  - 0.9453239038583341
  - 0.9497215371805043
  - 0.946201819713819
  - 0.9424670057656335
  - 0.9490689212961076
  train_jaccard_weighted_oob:
  - 0.9110115522191039
  - 0.9177245020263777
  - 0.9153534645436632
  - 0.9032570874571481
  - 0.906511723372753
  train_label_ranking_average_precision_score:
  - 0.9674744897959183
  - 0.9680715197956578
  - 0.9682590233545647
  - 0.9655727155727156
  - 0.9681779480630054
  train_label_ranking_average_precision_score_oob:
  - 0.929443073224961
  - 0.9286981288897
  - 0.9283363663936914
  - 0.9198908091765238
  - 0.9264144823531797
  train_matthews_corrcoef_macro:
  - 0.5363152399749868
  - 0.5034795342091735
  - 0.5098422973278142
  - 0.5325829238153715
  - 0.5535415093061816
  train_matthews_corrcoef_macro_oob:
  - 0.41333134349578765
  - 0.33938268194813376
  - 0.3582730328627059
  - 0.37588104528763155
  - 0.3600345447416377
  train_matthews_corrcoef_micro:
  - 0.8312573792264443
  - 0.8338057534134374
  - 0.8298065933942677
  - 0.8253179423286343
  - 0.8386523698006465
  train_matthews_corrcoef_micro_oob:
  - 0.7476124868529932
  - 0.7433878161942368
  - 0.7465829983358095
  - 0.73024338668779
  - 0.7280249457891906
  train_matthews_corrcoef_samples:
  - 0.7552159000229732
  - 0.7604092606730978
  - 0.7538776289909478
  - 0.7469070222033826
  - 0.767838300057244
  train_matthews_corrcoef_samples_oob:
  - 0.6519968878321529
  - 0.6384615994573057
  - 0.643715802502938
  - 0.6280647895315051
  - 0.6223520668277094
  train_matthews_corrcoef_weighted:
  - 0.7882886862352698
  - 0.7829878541461469
  - 0.7776744064115719
  - 0.784364814730581
  - 0.799194132516207
  train_matthews_corrcoef_weighted_oob:
  - 0.6849832907473734
  - 0.6565809102485264
  - 0.66158839958282
  - 0.6578449718555056
  - 0.6501237157251561
  train_ndgc:
  - 0.9760973913063088
  - 0.97649236774401
  - 0.9766130842521028
  - 0.9745844223358031
  - 0.9765533475579831
  train_ndgc_oob:
  - 0.9484234777976756
  - 0.9479127353565246
  - 0.9477913748526743
  - 0.9412650571480808
  - 0.9459839137513073
  train_neg_coverage_error:
  - -1.149234693877551
  - -1.1468710089399745
  - -1.1464968152866242
  - -1.157014157014157
  - -1.1494252873563218
  train_neg_coverage_error_oob:
  - -1.3214285714285714
  - -1.3128991060025543
  - -1.3261146496815286
  - -1.3577863577863578
  - -1.3358876117496807
  train_neg_hamming_loss_macro:
  - -0.025935374149659865
  - -0.025542784163473817
  - -0.02611464968152866
  - -0.026919776919776928
  - -0.024904214559386975
  train_neg_hamming_loss_macro_oob:
  - -0.037521258503401364
  - -0.037994891443167304
  - -0.0375796178343949
  - -0.040004290004290004
  - -0.04012345679012346
  train_neg_hamming_loss_micro:
  - -0.025935374149659865
  - -0.02554278416347382
  - -0.026114649681528664
  - -0.02691977691977692
  - -0.02490421455938697
  train_neg_hamming_loss_micro_oob:
  - -0.03752125850340136
  - -0.037994891443167304
  - -0.0375796178343949
  - -0.040004290004290004
  - -0.040123456790123455
  train_neg_hamming_loss_samples:
  - -0.02593537414965986
  - -0.025542784163473813
  - -0.026114649681528664
  - -0.026919776919776917
  - -0.02490421455938697
  train_neg_hamming_loss_samples_oob:
  - -0.03752125850340136
  - -0.0379948914431673
  - -0.0375796178343949
  - -0.04000429000429
  - -0.040123456790123455
  train_neg_hamming_loss_weighted:
  - -0.028166888056997946
  - -0.025838207823727522
  - -0.027731504164625182
  - -0.029686625886150828
  - -0.02617908665654024
  train_neg_hamming_loss_weighted_oob:
  - -0.04683613090206496
  - -0.04315154930772389
  - -0.044524177439415065
  - -0.05117740747194429
  - -0.04935500691468861
  train_neg_label_ranking_loss:
  - -0.006320432213289356
  - -0.006292813189364914
  - -0.006260267215681228
  - -0.006599673266339933
  - -0.006276257681110811
  train_neg_label_ranking_loss_oob:
  - -0.01992480072837216
  - -0.01959505656823665
  - -0.02040961633318321
  - -0.022943939610606274
  - -0.02134091016594209
  train_precision_macro:
  - 0.9740646258503401
  - 0.974457215836526
  - 0.9738853503184713
  - 0.973080223080223
  - 0.9750957854406129
  train_precision_macro_oob:
  - 0.9624787414965986
  - 0.9620051085568325
  - 0.9624203821656051
  - 0.9599957099957099
  - 0.9598765432098766
  train_precision_micro:
  - 0.9740646258503401
  - 0.9744572158365262
  - 0.9738853503184713
  - 0.9730802230802231
  - 0.975095785440613
  train_precision_micro_oob:
  - 0.9624787414965986
  - 0.9620051085568327
  - 0.9624203821656051
  - 0.95999570999571
  - 0.9598765432098766
  train_precision_samples:
  - 0.97406462585034
  - 0.9744572158365262
  - 0.9738853503184713
  - 0.973080223080223
  - 0.975095785440613
  train_precision_samples_oob:
  - 0.9624787414965985
  - 0.9620051085568327
  - 0.9624203821656051
  - 0.95999570999571
  - 0.9598765432098765
  train_precision_weighted:
  - 0.9718331119430019
  - 0.9741617921762724
  - 0.9722684958353749
  - 0.9703133741138492
  - 0.9738209133434597
  train_precision_weighted_oob:
  - 0.9531638690979349
  - 0.9568484506922761
  - 0.9554758225605849
  - 0.9488225925280557
  - 0.9506449930853115
  train_recall_macro:
  - 0.9740646258503401
  - 0.974457215836526
  - 0.9738853503184713
  - 0.973080223080223
  - 0.9750957854406129
  train_recall_macro_oob:
  - 0.9624787414965986
  - 0.9620051085568325
  - 0.9624203821656051
  - 0.9599957099957099
  - 0.9598765432098766
  train_recall_micro:
  - 0.9740646258503401
  - 0.9744572158365262
  - 0.9738853503184713
  - 0.9730802230802231
  - 0.975095785440613
  train_recall_micro_oob:
  - 0.9624787414965986
  - 0.9620051085568327
  - 0.9624203821656051
  - 0.95999570999571
  - 0.9598765432098766
  train_recall_samples:
  - 0.97406462585034
  - 0.9744572158365262
  - 0.9738853503184713
  - 0.973080223080223
  - 0.975095785440613
  train_recall_samples_oob:
  - 0.9624787414965985
  - 0.9620051085568327
  - 0.9624203821656051
  - 0.95999570999571
  - 0.9598765432098765
  train_recall_weighted:
  - 0.9718331119430019
  - 0.9741617921762724
  - 0.9722684958353749
  - 0.9703133741138492
  - 0.9738209133434597
  train_recall_weighted_oob:
  - 0.9531638690979349
  - 0.9568484506922761
  - 0.9554758225605849
  - 0.9488225925280557
  - 0.9506449930853115
  train_roc_auc_macro:
  - 0.9982068289080165
  - 0.9974247615401558
  - 0.9974181432988152
  - 0.9970707674318224
  - 0.9974603676859753
  train_roc_auc_macro_oob:
  - 0.9833705674928779
  - 0.9826536876560277
  - 0.9820340157848958
  - 0.9774820950042059
  - 0.9797248711778758
  train_roc_auc_micro:
  - 0.9976815762324076
  - 0.997341258795378
  - 0.9973026722100506
  - 0.9967371171927025
  - 0.9971236970796178
  train_roc_auc_micro_oob:
  - 0.9860963675424819
  - 0.985478862591345
  - 0.9849867683337071
  - 0.9822859474387846
  - 0.9832701666783151
  train_roc_auc_samples:
  - 0.9936795677867106
  - 0.993707186810635
  - 0.9937397327843187
  - 0.99340032673366
  - 0.9937237423188892
  train_roc_auc_samples_oob:
  - 0.9800751992716278
  - 0.9804049434317633
  - 0.9795903836668167
  - 0.9770560603893936
  - 0.9786590898340579
  train_roc_auc_weighted:
  - 0.9976187065833961
  - 0.9973349023308922
  - 0.9971795324798659
  - 0.99643398440934
  - 0.9970679685878003
  train_roc_auc_weighted_oob:
  - 0.9858288314100464
  - 0.9859322313617662
  - 0.9851491203283509
  - 0.9810031400970803
  - 0.9834483970564736
start: 2023-12-22 07:10:48.311223
wrapper: null
