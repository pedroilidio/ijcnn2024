active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T+AmZmZmZn5vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz479AMzMzMzMLQDAzMzMzMyPAQDMzMzMzC0BAMzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmGkCgmZmZmZn5PzAzMzMzMwPAmJmZmZmZFcCAmZmZmZnZvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b/QzMzMzMwMQNDMzMzMzARA0MzMzMzMBEDMzMzMzMwgwA==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZCcA4MzMzMzMTQACZmZmZmcm/cGZmZmZmDkDIzMzMzMwUwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ6T+AmZmZmZkBwACamZmZmek/AM3MzMzM/D8AMzMzMzPzvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmDkCgmZmZmZnpP6CZmZmZmek/mJmZmZmZAcCYmZmZmZkJwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZHUBAZmZmZmYSwCAzMzMzMy/AAJyZmZmZ2T/gzMzMzMwoQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 23:33:14.411532
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 0dc0c93046160d4dec5268692a299348c429b76d57dc0deac770ca8ed37ce03d
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0dc0c93_20231212T233101752768_embedding_weak__1_yeast.yml
results:
  fit_time:
  - 83.725426197052
  - 79.24544095993042
  - 80.46197080612183
  - 77.83327269554138
  - 81.66090488433838
  score_time:
  - 7.614880800247192
  - 7.144602060317993
  - 7.513315677642822
  - 7.541794300079346
  - 7.45184063911438
  test_average_precision_macro:
  - 0.49832671552821634
  - 0.4856336857002571
  - 0.5153659761702654
  - 0.4878033442583963
  - 0.5481582054541737
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7079636529063104
  - 0.6989126864287417
  - 0.6831689580474306
  - 0.697149954744467
  - 0.7090987240350373
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7516513110220592
  - 0.7411863804054354
  - 0.7311906676455415
  - 0.7470324715574854
  - 0.7602147670626591
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6711045791058554
  - 0.6630828448029141
  - 0.6748612549450765
  - 0.6588528775387671
  - 0.6912457580131649
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7911164465786314
  - 0.8002049180327868
  - 0.7931577440595478
  - 0.7907423839100858
  - 0.7926903245374584
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7911164465786314
  - 0.8002049180327869
  - 0.7931577440595476
  - 0.7907423839100858
  - 0.7926903245374582
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7911164465786314
  - 0.8002049180327869
  - 0.7931577440595476
  - 0.7907423839100858
  - 0.7926903245374584
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7434495345640704
  - 0.7499225015298399
  - 0.7409219607667136
  - 0.7423859359109932
  - 0.7534121929026388
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.666454484616748
  - 0.6776789422500539
  - 0.6681923054763717
  - 0.6652719030499546
  - 0.6664056227129137
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6544190665342602
  - 0.6669513236549958
  - 0.6572174119321551
  - 0.6539073009661245
  - 0.6565758070594147
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6713559319027358
  - 0.6850648000330155
  - 0.6744048200061586
  - 0.6704847688299731
  - 0.6743003181625965
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5964673024247596
  - 0.6041362313182302
  - 0.5925505385617609
  - 0.5954572835494897
  - 0.6089249060352782
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7516513110220595
  - 0.7411863804054349
  - 0.7311906676455406
  - 0.7470324715574854
  - 0.7602147670626592
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11957559256274061
  - 0.15010121949392424
  - 0.11675705568605828
  - 0.12621171179395244
  - 0.134266527032027
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.47227755889885875
  - 0.48730179122866296
  - 0.461196763614834
  - 0.4655272995092715
  - 0.48589606658892315
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.46248925719061285
  - 0.48141416822362926
  - 0.4540437279018199
  - 0.45544809702500505
  - 0.4875171029998197
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.13721391496054347
  - 0.16778359911259397
  - 0.13789452386746207
  - 0.14023077436276848
  - 0.1533646622951335
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8507809363361697
  - 0.8412463092382432
  - 0.8307103638221321
  - 0.8446014353523159
  - 0.8580404162346492
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.126050420168068
  - -7.108606557377049
  - -7.212424849699399
  - -7.304347826086956
  - -7.382165605095541
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20888355342136852
  - -0.19979508196721313
  - -0.2068422559404523
  - -0.20925761608991425
  - -0.20730967546254173
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20888355342136855
  - -0.19979508196721313
  - -0.20684225594045233
  - -0.20925761608991422
  - -0.2073096754625417
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20888355342136852
  - -0.19979508196721313
  - -0.20684225594045233
  - -0.20925761608991422
  - -0.2073096754625417
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.25655046543592946
  - -0.2500774984701601
  - -0.2590780392332865
  - -0.25761406408900667
  - -0.24658780709736125
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16909793054751035
  - -0.17411917179554767
  - -0.19173765088809464
  - -0.18329656269984573
  - -0.17242453692635673
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7911164465786314
  - 0.8002049180327868
  - 0.7931577440595478
  - 0.7907423839100858
  - 0.7926903245374584
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7911164465786314
  - 0.8002049180327869
  - 0.7931577440595476
  - 0.7907423839100858
  - 0.7926903245374582
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7911164465786314
  - 0.8002049180327869
  - 0.7931577440595476
  - 0.7907423839100858
  - 0.7926903245374584
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7434495345640704
  - 0.7499225015298399
  - 0.7409219607667136
  - 0.7423859359109932
  - 0.7534121929026388
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7911164465786314
  - 0.8002049180327868
  - 0.7931577440595478
  - 0.7907423839100858
  - 0.7926903245374584
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7911164465786314
  - 0.8002049180327869
  - 0.7931577440595476
  - 0.7907423839100858
  - 0.7926903245374582
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7911164465786314
  - 0.8002049180327869
  - 0.7931577440595476
  - 0.7907423839100858
  - 0.7926903245374584
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7434495345640704
  - 0.7499225015298399
  - 0.7409219607667136
  - 0.7423859359109932
  - 0.7534121929026388
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7032528646050629
  - 0.6938347395703923
  - 0.7211479268233913
  - 0.6925326108819997
  - 0.7216920383737582
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8324186035275654
  - 0.8338864164800073
  - 0.8286575716008406
  - 0.827666703444111
  - 0.8341342876710058
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8309020694524897
  - 0.8258808282044523
  - 0.8082623491119054
  - 0.8167034373001542
  - 0.8275754630736432
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7019781301430036
  - 0.7050670370864683
  - 0.7145816016141879
  - 0.6986105176271601
  - 0.7074380809386925
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9990782263224454
  - 0.9987477538432173
  - 0.9989855099709877
  - 0.9991877486238988
  - 0.9990528885621426
  train_average_precision_macro_oob:
  - 0.511430906378943
  - 0.5102801908139235
  - 0.5037889030170876
  - 0.5087054041675232
  - 0.4966094558026217
  train_average_precision_micro:
  - 0.9193440291578574
  - 0.920224945823416
  - 0.9191393965951205
  - 0.920525799249018
  - 0.9192756000239835
  train_average_precision_micro_oob:
  - 0.701572703794669
  - 0.7019993837654752
  - 0.70026070971065
  - 0.6990234791596396
  - 0.6994544850744022
  train_average_precision_samples:
  - 0.8942107283013461
  - 0.8986370586765293
  - 0.9053420749972995
  - 0.8996792079630818
  - 0.8983227593063441
  train_average_precision_samples_oob:
  - 0.7442024536385344
  - 0.7485120057938836
  - 0.7482791941069808
  - 0.7455714720852359
  - 0.7423523740068139
  train_average_precision_weighted:
  - 0.9990235644102331
  - 0.9987679247699041
  - 0.9989474697434698
  - 0.9991097410909214
  - 0.9989782263505113
  train_average_precision_weighted_oob:
  - 0.6782942437649553
  - 0.674971887591755
  - 0.6693671101510568
  - 0.676449772831313
  - 0.6718327520737973
  train_f1_macro:
  - 0.8675572238168837
  - 0.8709175738724729
  - 0.8680545210785041
  - 0.8698847687989362
  - 0.8690353839377477
  train_f1_macro_oob:
  - 0.7915654669905056
  - 0.7884173887284308
  - 0.7888797854908388
  - 0.7900723888314375
  - 0.7896417559829688
  train_f1_micro:
  - 0.8675572238168838
  - 0.8709175738724728
  - 0.8680545210785044
  - 0.8698847687989363
  - 0.8690353839377477
  train_f1_micro_oob:
  - 0.7915654669905057
  - 0.7884173887284307
  - 0.7888797854908387
  - 0.7900723888314375
  - 0.7896417559829687
  train_f1_samples:
  - 0.8675572238168837
  - 0.8709175738724728
  - 0.8680545210785044
  - 0.8698847687989364
  - 0.8690353839377477
  train_f1_samples_oob:
  - 0.7915654669905056
  - 0.7884173887284306
  - 0.7888797854908386
  - 0.7900723888314375
  - 0.7896417559829686
  train_f1_weighted:
  - 0.8415162151124974
  - 0.8458448599884569
  - 0.8426685634146457
  - 0.8440573196312772
  - 0.8419876413658004
  train_f1_weighted_oob:
  - 0.7433110771918441
  - 0.7407833671195826
  - 0.7417479936209558
  - 0.7420602084224067
  - 0.7392237174755584
  train_jaccard_macro:
  - 0.7735020615028259
  - 0.7786752033672159
  - 0.7743089259154653
  - 0.7770630637413328
  - 0.7760140093921091
  train_jaccard_macro_oob:
  - 0.6660737740366149
  - 0.6622808782145848
  - 0.6629531461908152
  - 0.6643523943616864
  - 0.6643436458645596
  train_jaccard_micro:
  - 0.7660936535274429
  - 0.7713498622589532
  - 0.7668695509129791
  - 0.7697310369619922
  - 0.7684019213293523
  train_jaccard_micro_oob:
  - 0.6550338023022109
  - 0.6507334963325183
  - 0.6513637342025153
  - 0.652991452991453
  - 0.6524033358605004
  train_jaccard_samples:
  - 0.7864180321066353
  - 0.7914530188259178
  - 0.7867063365701814
  - 0.7894810730204578
  - 0.7886718850563874
  train_jaccard_samples_oob:
  - 0.6718867317562477
  - 0.6672133063520939
  - 0.6679306404091057
  - 0.6693606295728237
  - 0.6686994514955085
  train_jaccard_weighted:
  - 0.7348133563898246
  - 0.7413382690147782
  - 0.7364439329679009
  - 0.738447407275522
  - 0.7356217704353586
  train_jaccard_weighted_oob:
  - 0.5960471420415993
  - 0.5931689319230312
  - 0.5943710899041188
  - 0.5943466378707686
  - 0.591202559709101
  train_label_ranking_average_precision_score:
  - 0.8942107283013464
  - 0.8986370586765288
  - 0.9053420749973
  - 0.8996792079630819
  - 0.8983227593063433
  train_label_ranking_average_precision_score_oob:
  - 0.7442024536385368
  - 0.7485120057938853
  - 0.7482791941069818
  - 0.7455714720852374
  - 0.7423523740068152
  train_matthews_corrcoef_macro:
  - 0.36044859480547303
  - 0.3734357474911868
  - 0.3555173568830182
  - 0.36736544787545106
  - 0.3647691901949205
  train_matthews_corrcoef_macro_oob:
  - 0.13091807545368012
  - 0.1145067742395489
  - 0.12294215448185243
  - 0.12978730899177376
  - 0.12086139593692415
  train_matthews_corrcoef_micro:
  - 0.674405728442135
  - 0.6845785772280433
  - 0.6779953321583352
  - 0.6811504967218702
  - 0.6770466588816599
  train_matthews_corrcoef_micro_oob:
  - 0.46643864098401244
  - 0.46047283610704903
  - 0.463369951222612
  - 0.46349021562677306
  - 0.4583112776360767
  train_matthews_corrcoef_samples:
  - 0.6715170600538339
  - 0.6822853399614791
  - 0.6837506054797314
  - 0.6816059249229376
  - 0.6749825900025292
  train_matthews_corrcoef_samples_oob:
  - 0.45769280581494765
  - 0.4515696962249785
  - 0.45714657120519564
  - 0.4552734440073233
  - 0.44732098273635423
  train_matthews_corrcoef_weighted:
  - 0.45157461779722907
  - 0.4630983015931272
  - 0.43750513197143837
  - 0.4585110724583924
  - 0.46022861991897607
  train_matthews_corrcoef_weighted_oob:
  - 0.14691588271851402
  - 0.13133234814312408
  - 0.13670533682430291
  - 0.1439117752042178
  - 0.13532534811538197
  train_ndgc:
  - 0.9332497672106881
  - 0.9371389486657179
  - 0.9422173155165466
  - 0.9374140122096053
  - 0.9361687764327548
  train_ndgc_oob:
  - 0.8436526993444571
  - 0.8469190403570316
  - 0.8484263308700485
  - 0.8452085798902936
  - 0.8420934840233981
  train_neg_coverage_error:
  - -5.16795466254508
  - -5.215655780196993
  - -5.2132429614181435
  - -5.166494312306101
  - -5.140801644398767
  train_neg_coverage_error_oob:
  - -7.2642967542503865
  - -7.253499222395023
  - -7.2257559958289885
  - -7.210444674250258
  - -7.190647482014389
  train_neg_hamming_loss_macro:
  - -0.13244277618311623
  - -0.1290824261275272
  - -0.13194547892149558
  - -0.1301152312010637
  - -0.13096461606225224
  train_neg_hamming_loss_macro_oob:
  - -0.20843453300949438
  - -0.2115826112715693
  - -0.21112021450916135
  - -0.20992761116856257
  - -0.21035824401703127
  train_neg_hamming_loss_micro:
  - -0.1324427761831162
  - -0.1290824261275272
  - -0.1319454789214956
  - -0.13011523120106366
  - -0.13096461606225224
  train_neg_hamming_loss_micro_oob:
  - -0.20843453300949438
  - -0.21158261127156927
  - -0.21112021450916132
  - -0.20992761116856257
  - -0.21035824401703127
  train_neg_hamming_loss_samples:
  - -0.1324427761831162
  - -0.1290824261275272
  - -0.13194547892149558
  - -0.13011523120106366
  - -0.13096461606225224
  train_neg_hamming_loss_samples_oob:
  - -0.20843453300949435
  - -0.21158261127156927
  - -0.21112021450916127
  - -0.20992761116856254
  - -0.21035824401703124
  train_neg_hamming_loss_weighted:
  - -0.15848378488750245
  - -0.1541551400115432
  - -0.15733143658535434
  - -0.1559426803687227
  - -0.1580123586341997
  train_neg_hamming_loss_weighted_oob:
  - -0.25668892280815586
  - -0.2592166328804175
  - -0.2582520063790442
  - -0.25793979157759306
  - -0.26077628252444174
  train_neg_label_ranking_loss:
  - -0.051024319657020034
  - -0.05040161563156453
  - -0.047609601944474576
  - -0.04835832317827442
  - -0.04988612251954639
  train_neg_label_ranking_loss_oob:
  - -0.17899605229865773
  - -0.1758687079088101
  - -0.1734793359933014
  - -0.175258832552192
  - -0.17805088902027677
  train_precision_macro:
  - 0.8675572238168837
  - 0.8709175738724729
  - 0.8680545210785041
  - 0.8698847687989362
  - 0.8690353839377477
  train_precision_macro_oob:
  - 0.7915654669905056
  - 0.7884173887284308
  - 0.7888797854908388
  - 0.7900723888314375
  - 0.7896417559829688
  train_precision_micro:
  - 0.8675572238168838
  - 0.8709175738724728
  - 0.8680545210785044
  - 0.8698847687989363
  - 0.8690353839377477
  train_precision_micro_oob:
  - 0.7915654669905057
  - 0.7884173887284307
  - 0.7888797854908387
  - 0.7900723888314375
  - 0.7896417559829687
  train_precision_samples:
  - 0.8675572238168837
  - 0.8709175738724728
  - 0.8680545210785044
  - 0.8698847687989364
  - 0.8690353839377477
  train_precision_samples_oob:
  - 0.7915654669905056
  - 0.7884173887284306
  - 0.7888797854908386
  - 0.7900723888314375
  - 0.7896417559829686
  train_precision_weighted:
  - 0.8415162151124974
  - 0.8458448599884569
  - 0.8426685634146457
  - 0.8440573196312772
  - 0.8419876413658004
  train_precision_weighted_oob:
  - 0.7433110771918441
  - 0.7407833671195826
  - 0.7417479936209558
  - 0.7420602084224067
  - 0.7392237174755584
  train_recall_macro:
  - 0.8675572238168837
  - 0.8709175738724729
  - 0.8680545210785041
  - 0.8698847687989362
  - 0.8690353839377477
  train_recall_macro_oob:
  - 0.7915654669905056
  - 0.7884173887284308
  - 0.7888797854908388
  - 0.7900723888314375
  - 0.7896417559829688
  train_recall_micro:
  - 0.8675572238168838
  - 0.8709175738724728
  - 0.8680545210785044
  - 0.8698847687989363
  - 0.8690353839377477
  train_recall_micro_oob:
  - 0.7915654669905057
  - 0.7884173887284307
  - 0.7888797854908387
  - 0.7900723888314375
  - 0.7896417559829687
  train_recall_samples:
  - 0.8675572238168837
  - 0.8709175738724728
  - 0.8680545210785044
  - 0.8698847687989364
  - 0.8690353839377477
  train_recall_samples_oob:
  - 0.7915654669905056
  - 0.7884173887284306
  - 0.7888797854908386
  - 0.7900723888314375
  - 0.7896417559829686
  train_recall_weighted:
  - 0.8415162151124974
  - 0.8458448599884569
  - 0.8426685634146457
  - 0.8440573196312772
  - 0.8419876413658004
  train_recall_weighted_oob:
  - 0.7433110771918441
  - 0.7407833671195826
  - 0.7417479936209558
  - 0.7420602084224067
  - 0.7392237174755584
  train_roc_auc_macro:
  - 0.9994721413794403
  - 0.9992834699016154
  - 0.9993725949620369
  - 0.9994137620950364
  - 0.999359831728393
  train_roc_auc_macro_oob:
  - 0.7047651395201234
  - 0.7016254486806695
  - 0.6961429519132281
  - 0.7035015776174142
  - 0.6937312324974977
  train_roc_auc_micro:
  - 0.9622762826084545
  - 0.9623101329324315
  - 0.9616141589357605
  - 0.9626658831636697
  - 0.9621978754992432
  train_roc_auc_micro_oob:
  - 0.832999737588102
  - 0.8328963857349245
  - 0.8319226141448333
  - 0.8327264784433316
  - 0.8315538268744225
  train_roc_auc_samples:
  - 0.9489756803429801
  - 0.9495983843684355
  - 0.9523903980555254
  - 0.9516416768217255
  - 0.9501138774804536
  train_roc_auc_samples_oob:
  - 0.8210039477013422
  - 0.8241312920911897
  - 0.8265206640066985
  - 0.8247411674478081
  - 0.8219491109797232
  train_roc_auc_weighted:
  - 0.999383792603594
  - 0.9991331082207812
  - 0.9992180424355689
  - 0.999275456135828
  - 0.9992145746750893
  train_roc_auc_weighted_oob:
  - 0.7115126321467236
  - 0.7112775415839327
  - 0.7007456434189875
  - 0.7073710365362961
  - 0.7089910360012533
start: 2023-12-12 23:31:01.752768
wrapper: null
