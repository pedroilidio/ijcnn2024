active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/YGZmZmZm9r9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMBECAMzMzMzPjP+DMzMzMzARA4MzMzMzMBEDIzMzMzMwgwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 04:40:07.269201
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__4
  params: {}
hash: 9a2a528e0e9ce5cb7e630d617bde49b725c959dcbd91603e297be3e207b13b6d
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a2a528_20231222T043919244023_embedding_proba_weak__4_emotions.yml
results:
  fit_time:
  - 29.293798208236694
  - 29.58788561820984
  - 29.145207405090332
  - 32.16540193557739
  - 28.70436191558838
  score_time:
  - 4.177539110183716
  - 4.312334060668945
  - 3.9571456909179688
  - 4.359013795852661
  - 4.2080981731414795
  test_average_precision_macro:
  - 0.7359403696747809
  - 0.7405117696077254
  - 0.7589765666577949
  - 0.7268169130517977
  - 0.6956779511715262
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7471434536226981
  - 0.7458524594354787
  - 0.7636727029756174
  - 0.7203716882734483
  - 0.6725443380747267
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.809243295019157
  - 0.7906073446327683
  - 0.8254310344827588
  - 0.8052681992337164
  - 0.7738626421697288
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.739728208208545
  - 0.7470822885794594
  - 0.7561789922108689
  - 0.730964346250326
  - 0.6877631152375001
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7413793103448275
  - 0.7415254237288136
  - 0.7313218390804598
  - 0.7270114942528735
  - 0.7677165354330708
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7413793103448276
  - 0.7415254237288136
  - 0.7313218390804598
  - 0.7270114942528736
  - 0.7677165354330708
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7413793103448275
  - 0.7415254237288137
  - 0.7313218390804599
  - 0.7270114942528736
  - 0.7677165354330708
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7315936626281454
  - 0.7300847457627118
  - 0.7167986952469712
  - 0.7182619452605536
  - 0.7562618021163645
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5920386886978329
  - 0.5923594386173208
  - 0.5823509946545496
  - 0.5738103699635677
  - 0.6279717938093213
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.589041095890411
  - 0.5892255892255892
  - 0.5764439411098528
  - 0.5711060948081265
  - 0.6230031948881789
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6094006568144498
  - 0.6075464083938659
  - 0.592775041050903
  - 0.5909277504105089
  - 0.6481814773153354
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5800082049334324
  - 0.5786024284719654
  - 0.5648169358656046
  - 0.5632038804004557
  - 0.6136034491376724
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.809243295019157
  - 0.7906073446327683
  - 0.8254310344827585
  - 0.8052681992337163
  - 0.7738626421697289
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3346260121950786
  - 0.3332824756178751
  - 0.3107257468914461
  - 0.29416767050168163
  - 0.34175490801908853
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.34995594194648133
  - 0.3358468391998377
  - 0.31777145971733856
  - 0.3097832918070858
  - 0.36802042567117577
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.22806602490485997
  - 0.20019000615718344
  - 0.19513140420525185
  - 0.18653209733713036
  - 0.2604945241985642
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.33113931401918173
  - 0.3285542743680038
  - 0.29648121671739025
  - 0.29156643498100693
  - 0.3327891764638426
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8715656814253783
  - 0.8553497402566707
  - 0.8809129929942814
  - 0.868348395963595
  - 0.84163760058452
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8706896551724137
  - -2.8220338983050848
  - -2.6810344827586206
  - -2.8017241379310347
  - -2.763779527559055
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25862068965517243
  - -0.2584745762711865
  - -0.2686781609195402
  - -0.2729885057471264
  - -0.23228346456692917
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25862068965517243
  - -0.2584745762711864
  - -0.2686781609195402
  - -0.27298850574712646
  - -0.23228346456692914
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25862068965517243
  - -0.25847457627118636
  - -0.2686781609195402
  - -0.2729885057471264
  - -0.2322834645669291
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2684063373718546
  - -0.26991525423728807
  - -0.2832013047530289
  - -0.2817380547394464
  - -0.2437381978836356
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16542145593869734
  - -0.1722457627118644
  - -0.13544061302681992
  - -0.1596743295019157
  - -0.190748031496063
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7413793103448275
  - 0.7415254237288136
  - 0.7313218390804598
  - 0.7270114942528735
  - 0.7677165354330708
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7413793103448276
  - 0.7415254237288136
  - 0.7313218390804598
  - 0.7270114942528736
  - 0.7677165354330708
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7413793103448275
  - 0.7415254237288137
  - 0.7313218390804599
  - 0.7270114942528736
  - 0.7677165354330708
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7315936626281454
  - 0.7300847457627118
  - 0.7167986952469712
  - 0.7182619452605536
  - 0.7562618021163645
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7413793103448275
  - 0.7415254237288136
  - 0.7313218390804598
  - 0.7270114942528735
  - 0.7677165354330708
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7413793103448276
  - 0.7415254237288136
  - 0.7313218390804598
  - 0.7270114942528736
  - 0.7677165354330708
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7413793103448275
  - 0.7415254237288137
  - 0.7313218390804599
  - 0.7270114942528736
  - 0.7677165354330708
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7315936626281454
  - 0.7300847457627118
  - 0.7167986952469712
  - 0.7182619452605536
  - 0.7562618021163645
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8367292340091638
  - 0.8575821176413578
  - 0.8572654984852588
  - 0.8387999665586157
  - 0.8205496052068675
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8547724940130004
  - 0.8671013412816693
  - 0.8811913179001787
  - 0.8511552062495853
  - 0.8342519717968234
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8345785440613027
  - 0.8277542372881357
  - 0.86455938697318
  - 0.8403256704980844
  - 0.809251968503937
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.837940409147719
  - 0.8592222969523047
  - 0.8525182363155507
  - 0.8406861896750194
  - 0.8138582974675558
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8922630718825012
  - 0.8895559350725678
  - 0.8754417360336421
  - 0.8903444927201939
  - 0.8999502768299167
  train_average_precision_macro_oob:
  - 0.8756044301080409
  - 0.8756343580345485
  - 0.8568836748158123
  - 0.8678992317753401
  - 0.8879432445146974
  train_average_precision_micro:
  - 0.8980177984179784
  - 0.8904974910597871
  - 0.8781685414532587
  - 0.8879531017997428
  - 0.9029740914814228
  train_average_precision_micro_oob:
  - 0.8827092287777142
  - 0.87757352022954
  - 0.8628055614097696
  - 0.8678301215905083
  - 0.8928149857479184
  train_average_precision_samples:
  - 0.9064989517819706
  - 0.8965614035087719
  - 0.8886268343815513
  - 0.901688795713953
  - 0.9105746304244159
  train_average_precision_samples_oob:
  - 0.8940309806662008
  - 0.8833333333333334
  - 0.8831469834614489
  - 0.876974143955276
  - 0.9037136385312352
  train_average_precision_weighted:
  - 0.8934495783514431
  - 0.8887113364082622
  - 0.8767604814220803
  - 0.8914369545760151
  - 0.901894451631188
  train_average_precision_weighted_oob:
  - 0.8778065994813453
  - 0.8755820152205186
  - 0.8595305474707144
  - 0.8699808545613136
  - 0.890615563039363
  train_f1_macro:
  - 0.8134171907756812
  - 0.8157894736842106
  - 0.8242487770789656
  - 0.8137665967854648
  - 0.8104434907010013
  train_f1_macro_oob:
  - 0.7924528301886792
  - 0.7891228070175439
  - 0.7969951083158632
  - 0.7872117400419287
  - 0.7850500715307582
  train_f1_micro:
  - 0.8134171907756813
  - 0.8157894736842105
  - 0.8242487770789657
  - 0.8137665967854647
  - 0.8104434907010014
  train_f1_micro_oob:
  - 0.7924528301886793
  - 0.7891228070175439
  - 0.7969951083158631
  - 0.7872117400419287
  - 0.7850500715307582
  train_f1_samples:
  - 0.8134171907756813
  - 0.8157894736842105
  - 0.8242487770789657
  - 0.8137665967854646
  - 0.8104434907010013
  train_f1_samples_oob:
  - 0.7924528301886793
  - 0.7891228070175438
  - 0.7969951083158631
  - 0.7872117400419287
  - 0.785050071530758
  train_f1_weighted:
  - 0.8078188073503038
  - 0.8096301564722618
  - 0.8182796920179262
  - 0.8081299079700102
  - 0.8070895287679453
  train_f1_weighted_oob:
  - 0.7874578228298574
  - 0.7843385490753911
  - 0.7913028663912431
  - 0.7830555851662344
  - 0.7825626236869228
  train_jaccard_macro:
  - 0.6865657355358862
  - 0.6902225253528309
  - 0.7023258548796706
  - 0.6871018195733823
  - 0.6818164912180958
  train_jaccard_macro_oob:
  - 0.6573668058539718
  - 0.6527396476741523
  - 0.6643682740424457
  - 0.6501731023920718
  - 0.6467230579300302
  train_jaccard_micro:
  - 0.6855123674911661
  - 0.6888888888888889
  - 0.701040118870728
  - 0.6860088365243004
  - 0.6812988574864702
  train_jaccard_micro_oob:
  - 0.65625
  - 0.6516951608229499
  - 0.6625036305547488
  - 0.6490924805531547
  - 0.6461583750367972
  train_jaccard_samples:
  - 0.7075471698113206
  - 0.7102255639097744
  - 0.7228212039532794
  - 0.7062493760606968
  - 0.7031984467606784
  train_jaccard_samples_oob:
  - 0.6774483378256962
  - 0.6730827067669172
  - 0.6836877308575421
  - 0.668513527004093
  - 0.6685060290210505
  train_jaccard_weighted:
  - 0.6787717514312869
  - 0.6816175887610906
  - 0.6938724169210203
  - 0.6792898833688666
  - 0.6771270060765089
  train_jaccard_weighted_oob:
  - 0.6505541772546808
  - 0.6462979148872326
  - 0.65649397598545
  - 0.6445592429098507
  - 0.6433602636012
  train_label_ranking_average_precision_score:
  - 0.9064989517819699
  - 0.8965614035087712
  - 0.8886268343815509
  - 0.9016887957139523
  - 0.9105746304244154
  train_label_ranking_average_precision_score_oob:
  - 0.8940309806661999
  - 0.8833333333333329
  - 0.8831469834614485
  - 0.8769741439552754
  - 0.9037136385312345
  train_matthews_corrcoef_macro:
  - 0.5513680077450047
  - 0.5641174870964326
  - 0.5825765874500355
  - 0.5525782085137557
  - 0.5495772156413136
  train_matthews_corrcoef_macro_oob:
  - 0.48940954060120895
  - 0.48492815444359993
  - 0.5041379796050175
  - 0.4688926289831447
  - 0.47393017143460686
  train_matthews_corrcoef_micro:
  - 0.5569095128625687
  - 0.5678824384729011
  - 0.5861131891585281
  - 0.5592293013798885
  - 0.5607705060407847
  train_matthews_corrcoef_micro_oob:
  - 0.5006323381789195
  - 0.4974044472121888
  - 0.5146830749212665
  - 0.4871003740244492
  - 0.4940154336232608
  train_matthews_corrcoef_samples:
  - 0.44655442334785117
  - 0.4584521841920946
  - 0.4873646927519639
  - 0.46275095256019905
  - 0.4439539837495691
  train_matthews_corrcoef_samples_oob:
  - 0.37448682944193024
  - 0.3757450402412676
  - 0.395232214774513
  - 0.38258874316958824
  - 0.36133280208899815
  train_matthews_corrcoef_weighted:
  - 0.5512833316024242
  - 0.5625047370033596
  - 0.5805809451158996
  - 0.5533726515412779
  - 0.5544521175225435
  train_matthews_corrcoef_weighted_oob:
  - 0.49247647662352156
  - 0.48913364019095773
  - 0.5050259319181897
  - 0.47588807515404713
  - 0.4835297761103933
  train_ndgc:
  - 0.9373712575440462
  - 0.9306196779688533
  - 0.9265066596422383
  - 0.9364552144095618
  - 0.9401117961724704
  train_ndgc_oob:
  - 0.928744525478767
  - 0.921731955801793
  - 0.9221320208554218
  - 0.9195514516024318
  - 0.9374469796020783
  train_neg_coverage_error:
  - -2.2662473794549265
  - -2.345263157894737
  - -2.4150943396226414
  - -2.348008385744235
  - -2.3175965665236054
  train_neg_coverage_error_oob:
  - -2.3438155136268346
  - -2.4273684210526314
  - -2.4339622641509435
  - -2.4654088050314464
  - -2.38412017167382
  train_neg_hamming_loss_macro:
  - -0.18658280922431866
  - -0.1842105263157895
  - -0.17575122292103426
  - -0.1862334032145353
  - -0.18955650929899856
  train_neg_hamming_loss_macro_oob:
  - -0.20754716981132074
  - -0.21087719298245614
  - -0.20300489168413696
  - -0.21278825995807127
  - -0.21494992846924177
  train_neg_hamming_loss_micro:
  - -0.18658280922431866
  - -0.18421052631578946
  - -0.17575122292103423
  - -0.1862334032145353
  - -0.18955650929899856
  train_neg_hamming_loss_micro_oob:
  - -0.20754716981132076
  - -0.21087719298245614
  - -0.20300489168413696
  - -0.21278825995807127
  - -0.21494992846924177
  train_neg_hamming_loss_samples:
  - -0.18658280922431866
  - -0.18421052631578946
  - -0.17575122292103426
  - -0.1862334032145353
  - -0.1895565092989986
  train_neg_hamming_loss_samples_oob:
  - -0.20754716981132076
  - -0.21087719298245616
  - -0.20300489168413696
  - -0.21278825995807127
  - -0.21494992846924174
  train_neg_hamming_loss_weighted:
  - -0.19218119264969644
  - -0.19036984352773825
  - -0.18172030798207384
  - -0.1918700920299897
  - -0.19291047123205482
  train_neg_hamming_loss_weighted_oob:
  - -0.2125421771701426
  - -0.21566145092460878
  - -0.2086971336087568
  - -0.21694441483376564
  - -0.21743737631307727
  train_neg_label_ranking_loss:
  - -0.0686932215234102
  - -0.08053216374269007
  - -0.09298858607034707
  - -0.07928022361984625
  - -0.06972460658082975
  train_neg_label_ranking_loss_oob:
  - -0.08322851153039833
  - -0.0944093567251462
  - -0.09760656883298394
  - -0.10073375262054507
  - -0.07721149260848831
  train_precision_macro:
  - 0.8134171907756812
  - 0.8157894736842106
  - 0.8242487770789656
  - 0.8137665967854648
  - 0.8104434907010013
  train_precision_macro_oob:
  - 0.7924528301886792
  - 0.7891228070175439
  - 0.7969951083158632
  - 0.7872117400419287
  - 0.7850500715307582
  train_precision_micro:
  - 0.8134171907756813
  - 0.8157894736842105
  - 0.8242487770789657
  - 0.8137665967854647
  - 0.8104434907010014
  train_precision_micro_oob:
  - 0.7924528301886793
  - 0.7891228070175439
  - 0.7969951083158631
  - 0.7872117400419287
  - 0.7850500715307582
  train_precision_samples:
  - 0.8134171907756813
  - 0.8157894736842105
  - 0.8242487770789657
  - 0.8137665967854646
  - 0.8104434907010013
  train_precision_samples_oob:
  - 0.7924528301886793
  - 0.7891228070175438
  - 0.7969951083158631
  - 0.7872117400419287
  - 0.785050071530758
  train_precision_weighted:
  - 0.8078188073503038
  - 0.8096301564722618
  - 0.8182796920179262
  - 0.8081299079700102
  - 0.8070895287679453
  train_precision_weighted_oob:
  - 0.7874578228298574
  - 0.7843385490753911
  - 0.7913028663912431
  - 0.7830555851662344
  - 0.7825626236869228
  train_recall_macro:
  - 0.8134171907756812
  - 0.8157894736842106
  - 0.8242487770789656
  - 0.8137665967854648
  - 0.8104434907010013
  train_recall_macro_oob:
  - 0.7924528301886792
  - 0.7891228070175439
  - 0.7969951083158632
  - 0.7872117400419287
  - 0.7850500715307582
  train_recall_micro:
  - 0.8134171907756813
  - 0.8157894736842105
  - 0.8242487770789657
  - 0.8137665967854647
  - 0.8104434907010014
  train_recall_micro_oob:
  - 0.7924528301886793
  - 0.7891228070175439
  - 0.7969951083158631
  - 0.7872117400419287
  - 0.7850500715307582
  train_recall_samples:
  - 0.8134171907756813
  - 0.8157894736842105
  - 0.8242487770789657
  - 0.8137665967854646
  - 0.8104434907010013
  train_recall_samples_oob:
  - 0.7924528301886793
  - 0.7891228070175438
  - 0.7969951083158631
  - 0.7872117400419287
  - 0.785050071530758
  train_recall_weighted:
  - 0.8078188073503038
  - 0.8096301564722618
  - 0.8182796920179262
  - 0.8081299079700102
  - 0.8070895287679453
  train_recall_weighted_oob:
  - 0.7874578228298574
  - 0.7843385490753911
  - 0.7913028663912431
  - 0.7830555851662344
  - 0.7825626236869228
  train_roc_auc_macro:
  - 0.9335429470218343
  - 0.9258713682793164
  - 0.9165220257858472
  - 0.929760487706165
  - 0.9359981764901981
  train_roc_auc_macro_oob:
  - 0.9239802469997409
  - 0.9175981494600407
  - 0.9072327731289999
  - 0.9177602969031033
  - 0.9291314526562227
  train_roc_auc_micro:
  - 0.9407272141545042
  - 0.9318177122076203
  - 0.9222801153343507
  - 0.931468955130898
  - 0.939640331828761
  train_roc_auc_micro_oob:
  - 0.9313620100346369
  - 0.9231720252362454
  - 0.9145999168349769
  - 0.9197985877135076
  - 0.9335031415303879
  train_roc_auc_samples:
  - 0.9313067784765898
  - 0.91946783625731
  - 0.9070114139296529
  - 0.9207197763801538
  - 0.9302753934191702
  train_roc_auc_samples_oob:
  - 0.9167714884696018
  - 0.9055906432748538
  - 0.9023934311670161
  - 0.899266247379455
  - 0.9227885073915119
  train_roc_auc_weighted:
  - 0.9325388983526423
  - 0.9228622443352922
  - 0.9154374969678643
  - 0.9279648461002908
  - 0.9356853398417979
  train_roc_auc_weighted_oob:
  - 0.9232960182375793
  - 0.9147965560959296
  - 0.9070555420113925
  - 0.9157827635070299
  - 0.9290422179840367
start: 2023-12-22 04:39:19.244023
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
