active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gGZmZmZm9j9gZmZmZmYSwACamZmZmdk/gGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZmEsBgZmZmZmYWwNDMzMzMzCZAQDMzMzMzA0DAzMzMzMwMwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8CgmZmZmZn5P2hmZmZmZh5AYGZmZmZm9r+YmZmZmZkVwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8gMzMzMzPzvyAzMzMzM/O/kJmZmZmZAcBwZmZmZmYOQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCYmZmZmem/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ6T8AmJmZmZnJv4CZmZmZmQnAgJmZmZmZAcBAMzMzMzMTQA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMEMBoZmZmZmYOQJiZmZmZmQHAaGZmZmZmDkAwMzMzMzPzvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMJEAgMzMzMzMjwCAzMzMzMyfAgDMzMzMzC0DAmZmZmZkdQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:41:55.897786
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 6312b367655ac80aebfb7422f778ee9b25e0aecc1638ddd8aa9d2afcc449c3d5
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6312b36_20231213T013509132108_embedding_proba_weak__6_yeast.yml
results:
  fit_time:
  - 221.5552134513855
  - 296.4895489215851
  - 302.9810495376587
  - 307.2898259162903
  - 317.7701680660248
  score_time:
  - 21.505353212356567
  - 21.685040712356567
  - 21.325517654418945
  - 20.330917835235596
  - 18.737085819244385
  test_average_precision_macro:
  - 0.4996745227364467
  - 0.47800130631982773
  - 0.442557354495246
  - 0.5092718691529501
  - 0.49889321724940616
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6806576256746213
  - 0.6760771473636772
  - 0.6290527015366995
  - 0.7007643184692562
  - 0.6935523378650806
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7625205922033417
  - 0.7452360649043976
  - 0.7303591583247067
  - 0.7565364004002285
  - 0.763859700251507
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.65588575948214
  - 0.6547530388556092
  - 0.5994259019251781
  - 0.6724858208042178
  - 0.6596899005209891
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7857142857142858
  - 0.7928136771950159
  - 0.7799422799422798
  - 0.7933035714285716
  - 0.8001200480192078
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7857142857142857
  - 0.7928136771950159
  - 0.7799422799422799
  - 0.7933035714285714
  - 0.8001200480192077
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7857142857142857
  - 0.7928136771950159
  - 0.7799422799422799
  - 0.7933035714285714
  - 0.8001200480192078
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7444494169328664
  - 0.7532622490264779
  - 0.7301135123335516
  - 0.7498900830483634
  - 0.7623976276727698
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6536612376898887
  - 0.6618245679315589
  - 0.6481609726131919
  - 0.6639272071248302
  - 0.6726686116889855
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6470588235294118
  - 0.656745079212674
  - 0.6392667060910704
  - 0.657417684054754
  - 0.6668334167083542
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6772725460309146
  - 0.6836938657760627
  - 0.6687774001045904
  - 0.687445160567174
  - 0.6972346618011857
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5966565113942236
  - 0.6071179458236331
  - 0.5797451371785413
  - 0.6030560254176189
  - 0.6189613663489799
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7625205922033407
  - 0.7452360649043979
  - 0.7303591583247065
  - 0.7565364004002285
  - 0.7638597002515067
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.27416578724520885
  - 0.2608582532056696
  - 0.23153933874833707
  - 0.27926159010276097
  - 0.29042560533093187
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4969424938806136
  - 0.5063652645400283
  - 0.4726807317216647
  - 0.5079739517298381
  - 0.5287481479499339
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5095824104071021
  - 0.514707019023457
  - 0.47350014878719626
  - 0.5120692428936303
  - 0.5296914995481655
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2681656325166444
  - 0.29926068773502934
  - 0.24294204766227812
  - 0.286171470898764
  - 0.32202106665354024
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8576455467692211
  - 0.8447737398186539
  - 0.8312086233866077
  - 0.8523229412501903
  - 0.8572407967627731
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.437632135306554
  - -7.442190669371197
  - -7.361616161616162
  - -7.335416666666666
  - -7.411764705882353
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21428571428571427
  - -0.20718632280498403
  - -0.22005772005772012
  - -0.20669642857142861
  - -0.19987995198079234
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21428571428571427
  - -0.20718632280498406
  - -0.22005772005772006
  - -0.20669642857142856
  - -0.1998799519807923
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21428571428571427
  - -0.20718632280498406
  - -0.22005772005772004
  - -0.20669642857142856
  - -0.1998799519807923
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.25555058306713374
  - -0.24673775097352238
  - -0.26988648766644835
  - -0.25010991695163654
  - -0.23760237232723
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1782347719564573
  - -0.18889516099020592
  - -0.19540228290228293
  - -0.17996751925323357
  - -0.1792568184449937
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7857142857142858
  - 0.7928136771950159
  - 0.7799422799422798
  - 0.7933035714285716
  - 0.8001200480192078
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7857142857142857
  - 0.7928136771950159
  - 0.7799422799422799
  - 0.7933035714285714
  - 0.8001200480192077
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7857142857142857
  - 0.7928136771950159
  - 0.7799422799422799
  - 0.7933035714285714
  - 0.8001200480192078
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7444494169328664
  - 0.7532622490264779
  - 0.7301135123335516
  - 0.7498900830483634
  - 0.7623976276727698
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7857142857142858
  - 0.7928136771950159
  - 0.7799422799422798
  - 0.7933035714285716
  - 0.8001200480192078
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7857142857142857
  - 0.7928136771950159
  - 0.7799422799422799
  - 0.7933035714285714
  - 0.8001200480192077
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7857142857142857
  - 0.7928136771950159
  - 0.7799422799422799
  - 0.7933035714285714
  - 0.8001200480192078
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7444494169328664
  - 0.7532622490264779
  - 0.7301135123335516
  - 0.7498900830483634
  - 0.7623976276727698
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7022505233556183
  - 0.6990260292408317
  - 0.6737054078152106
  - 0.7098169330099167
  - 0.6923146990075725
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8152245267408155
  - 0.815361475552532
  - 0.8039596117454274
  - 0.8267813174060341
  - 0.8248238225448721
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8217652280435428
  - 0.811104839009794
  - 0.8047281884781885
  - 0.8200324807467664
  - 0.8207869490620091
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6933025230186477
  - 0.7075727550156797
  - 0.6650665231043356
  - 0.7148594347187659
  - 0.7115156712131457
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8990853729092029
  - 0.8933987962531493
  - 0.8976842728313124
  - 0.8987091420163311
  - 0.8927428533939821
  train_average_precision_macro_oob:
  - 0.8910236209187337
  - 0.8876016975043359
  - 0.8918808377348196
  - 0.8895327142201838
  - 0.8834438513092088
  train_average_precision_micro:
  - 0.9650328324283746
  - 0.9701733211188189
  - 0.9723348077240749
  - 0.9723912655005434
  - 0.9685824096170136
  train_average_precision_micro_oob:
  - 0.9604178053391594
  - 0.9647491831343618
  - 0.9681040201958725
  - 0.968015153621027
  - 0.9636319002388712
  train_average_precision_samples:
  - 0.9898618983820856
  - 0.9896375373607517
  - 0.989317383956757
  - 0.9904520016576585
  - 0.9883184354730378
  train_average_precision_samples_oob:
  - 0.9848076376695571
  - 0.9845009573100233
  - 0.9839811031110242
  - 0.9848444000820804
  - 0.9825019047267028
  train_average_precision_weighted:
  - 0.9785421846944893
  - 0.9760974840144417
  - 0.9762698342976408
  - 0.9761593482789854
  - 0.9741211519783228
  train_average_precision_weighted_oob:
  - 0.9734771782820355
  - 0.9701071812930617
  - 0.9713912202500745
  - 0.9710611299520961
  - 0.9685417623203193
  train_f1_macro:
  - 0.9700911228689005
  - 0.9691862191862192
  - 0.970269064962093
  - 0.9703517958551515
  - 0.9691984985648047
  train_f1_macro_oob:
  - 0.9627425044091711
  - 0.9634318384318385
  - 0.9645458599672959
  - 0.9635297588317722
  - 0.9632737175241041
  train_f1_micro:
  - 0.9700911228689006
  - 0.9691862191862192
  - 0.9702690649620931
  - 0.9703517958551515
  - 0.9691984985648046
  train_f1_micro_oob:
  - 0.9627425044091711
  - 0.9634318384318384
  - 0.964545859967296
  - 0.9635297588317723
  - 0.963273717524104
  train_f1_samples:
  - 0.9700911228689008
  - 0.9691862191862192
  - 0.9702690649620932
  - 0.9703517958551516
  - 0.9691984985648047
  train_f1_samples_oob:
  - 0.9627425044091711
  - 0.9634318384318385
  - 0.9645458599672961
  - 0.9635297588317724
  - 0.963273717524104
  train_f1_weighted:
  - 0.9802665446074247
  - 0.9797355089693799
  - 0.9792474449921084
  - 0.9786689304752122
  - 0.9789177314046873
  train_f1_weighted_oob:
  - 0.9729653609142981
  - 0.9734683998796901
  - 0.9734038215575005
  - 0.9712777610674748
  - 0.9724125899514633
  train_jaccard_macro:
  - 0.9431363675260444
  - 0.9413012173772595
  - 0.9432250866968672
  - 0.9433331854174286
  - 0.9411502853735999
  train_jaccard_macro_oob:
  - 0.92921327603654
  - 0.9304354041175602
  - 0.9323865331992289
  - 0.9304830635990198
  - 0.9299657119720445
  train_jaccard_micro:
  - 0.94191937210132
  - 0.9402146510120291
  - 0.942254944420384
  - 0.9424110020772151
  - 0.9402377637356752
  train_jaccard_micro_oob:
  - 0.9281615302869288
  - 0.9294437878299487
  - 0.9315196324743378
  - 0.9296260717970612
  - 0.9291495101519239
  train_jaccard_samples:
  - 0.9464538112913204
  - 0.9449458418885665
  - 0.9469273009603645
  - 0.946870539645905
  - 0.9450565326956004
  train_jaccard_samples_oob:
  - 0.9342823605147785
  - 0.9351733431454795
  - 0.937304872840934
  - 0.9355728939403384
  - 0.9351328057999958
  train_jaccard_weighted:
  - 0.9614875426210782
  - 0.9605344621402092
  - 0.9595597996570002
  - 0.9583998053011564
  - 0.9589307082504994
  train_jaccard_weighted_oob:
  - 0.9476835460881886
  - 0.9487233945106929
  - 0.9485048302748225
  - 0.9444710112926393
  - 0.9466806175333666
  train_label_ranking_average_precision_score:
  - 0.9898618983820857
  - 0.9896375373607519
  - 0.9893173839567575
  - 0.9904520016576587
  - 0.9883184354730385
  train_label_ranking_average_precision_score_oob:
  - 0.9848076376695569
  - 0.9845009573100234
  - 0.9839811031110243
  - 0.9848444000820805
  - 0.9825019047267033
  train_matthews_corrcoef_macro:
  - 0.8716935032531146
  - 0.8700327386694982
  - 0.8718301840323556
  - 0.8733729079557796
  - 0.8648505966400036
  train_matthews_corrcoef_macro_oob:
  - 0.8461637041542984
  - 0.850612334381081
  - 0.8510665471690487
  - 0.850435077190185
  - 0.8454592050552413
  train_matthews_corrcoef_micro:
  - 0.9294796650559405
  - 0.9277233100159488
  - 0.9303628040275509
  - 0.9301047670137238
  - 0.9274147605128494
  train_matthews_corrcoef_micro_oob:
  - 0.9116199077099876
  - 0.913779289144508
  - 0.9165777471681464
  - 0.9137152020272546
  - 0.9130520409271232
  train_matthews_corrcoef_samples:
  - 0.9339901157310563
  - 0.9317226336756721
  - 0.9334220600758207
  - 0.9339969091149433
  - 0.9316851353818376
  train_matthews_corrcoef_samples_oob:
  - 0.9183464957523579
  - 0.9188126018204751
  - 0.920573079970739
  - 0.9179914062376507
  - 0.9169761801682142
  train_matthews_corrcoef_weighted:
  - 0.9447269621438693
  - 0.9429429638465453
  - 0.9429113782391025
  - 0.9407025028324966
  - 0.9405984392069336
  train_matthews_corrcoef_weighted_oob:
  - 0.9251795639811431
  - 0.9269303205497939
  - 0.9272174455696955
  - 0.9219147704413622
  - 0.9239963163671586
  train_ndgc:
  - 0.9947520295941922
  - 0.9946747274733378
  - 0.9943324668421263
  - 0.9952633954400071
  - 0.9940878418790485
  train_ndgc_oob:
  - 0.9922699518460327
  - 0.9922321996151166
  - 0.9918732440314297
  - 0.9926330598000201
  - 0.991406010197424
  train_neg_coverage_error:
  - -4.324588477366255
  - -4.372661122661123
  - -4.386056191467222
  - -4.343830665978317
  - -4.347758887171561
  train_neg_coverage_error_oob:
  - -4.447530864197531
  - -4.498960498960499
  - -4.50468262226847
  - -4.474445018069179
  - -4.4935600206079345
  train_neg_hamming_loss_macro:
  - -0.029908877131099354
  - -0.030813780813780816
  - -0.029730935037906938
  - -0.029648204144848443
  - -0.030801501435195406
  train_neg_hamming_loss_macro_oob:
  - -0.03725749559082892
  - -0.036568161568161575
  - -0.03545414003270403
  - -0.036470241168227745
  - -0.03672628247589608
  train_neg_hamming_loss_micro:
  - -0.029908877131099354
  - -0.030813780813780813
  - -0.02973093503790694
  - -0.02964820414484844
  - -0.030801501435195406
  train_neg_hamming_loss_micro_oob:
  - -0.03725749559082892
  - -0.03656816156816157
  - -0.03545414003270403
  - -0.036470241168227745
  - -0.03672628247589608
  train_neg_hamming_loss_samples:
  - -0.02990887713109935
  - -0.03081378081378081
  - -0.02973093503790694
  - -0.029648204144848433
  - -0.030801501435195403
  train_neg_hamming_loss_samples_oob:
  - -0.037257495590828915
  - -0.03656816156816156
  - -0.03545414003270403
  - -0.036470241168227745
  - -0.03672628247589607
  train_neg_hamming_loss_weighted:
  - -0.019733455392575296
  - -0.020264491030620065
  - -0.02075255500789156
  - -0.02133106952478796
  - -0.021082268595312793
  train_neg_hamming_loss_weighted_oob:
  - -0.027034639085701875
  - -0.0265316001203098
  - -0.026596178442499403
  - -0.02872223893252539
  - -0.02758741004853678
  train_neg_label_ranking_loss:
  - -0.004928326621448314
  - -0.004797957030099887
  - -0.004950238738517318
  - -0.004680111150905457
  - -0.005753239833610776
  train_neg_label_ranking_loss_oob:
  - -0.009129960505070733
  - -0.008806838271123985
  - -0.009307766771160558
  - -0.009149183023546913
  - -0.010335533577419202
  train_precision_macro:
  - 0.9700911228689005
  - 0.9691862191862192
  - 0.970269064962093
  - 0.9703517958551515
  - 0.9691984985648047
  train_precision_macro_oob:
  - 0.9627425044091711
  - 0.9634318384318385
  - 0.9645458599672959
  - 0.9635297588317722
  - 0.9632737175241041
  train_precision_micro:
  - 0.9700911228689006
  - 0.9691862191862192
  - 0.9702690649620931
  - 0.9703517958551515
  - 0.9691984985648046
  train_precision_micro_oob:
  - 0.9627425044091711
  - 0.9634318384318384
  - 0.964545859967296
  - 0.9635297588317723
  - 0.963273717524104
  train_precision_samples:
  - 0.9700911228689008
  - 0.9691862191862192
  - 0.9702690649620932
  - 0.9703517958551516
  - 0.9691984985648047
  train_precision_samples_oob:
  - 0.9627425044091711
  - 0.9634318384318385
  - 0.9645458599672961
  - 0.9635297588317724
  - 0.963273717524104
  train_precision_weighted:
  - 0.9802665446074247
  - 0.9797355089693799
  - 0.9792474449921084
  - 0.9786689304752122
  - 0.9789177314046873
  train_precision_weighted_oob:
  - 0.9729653609142981
  - 0.9734683998796901
  - 0.9734038215575005
  - 0.9712777610674748
  - 0.9724125899514633
  train_recall_macro:
  - 0.9700911228689005
  - 0.9691862191862192
  - 0.970269064962093
  - 0.9703517958551515
  - 0.9691984985648047
  train_recall_macro_oob:
  - 0.9627425044091711
  - 0.9634318384318385
  - 0.9645458599672959
  - 0.9635297588317722
  - 0.9632737175241041
  train_recall_micro:
  - 0.9700911228689006
  - 0.9691862191862192
  - 0.9702690649620931
  - 0.9703517958551515
  - 0.9691984985648046
  train_recall_micro_oob:
  - 0.9627425044091711
  - 0.9634318384318384
  - 0.964545859967296
  - 0.9635297588317723
  - 0.963273717524104
  train_recall_samples:
  - 0.9700911228689008
  - 0.9691862191862192
  - 0.9702690649620932
  - 0.9703517958551516
  - 0.9691984985648047
  train_recall_samples_oob:
  - 0.9627425044091711
  - 0.9634318384318385
  - 0.9645458599672961
  - 0.9635297588317724
  - 0.963273717524104
  train_recall_weighted:
  - 0.9802665446074247
  - 0.9797355089693799
  - 0.9792474449921084
  - 0.9786689304752122
  - 0.9789177314046873
  train_recall_weighted_oob:
  - 0.9729653609142981
  - 0.9734683998796901
  - 0.9734038215575005
  - 0.9712777610674748
  - 0.9724125899514633
  train_roc_auc_macro:
  - 0.9888488618757718
  - 0.9891889240067469
  - 0.9893721261261345
  - 0.9896572389793811
  - 0.9889992804129879
  train_roc_auc_macro_oob:
  - 0.9851021049957366
  - 0.9844617833228808
  - 0.9850646855257157
  - 0.9853686957442634
  - 0.9844449607959628
  train_roc_auc_micro:
  - 0.9902004871241789
  - 0.9910465366587682
  - 0.9916074493681876
  - 0.9918842991404746
  - 0.9909120452678486
  train_roc_auc_micro_oob:
  - 0.9876163069639807
  - 0.9880068283104217
  - 0.9888901737128727
  - 0.989256558626629
  - 0.9881778521400343
  train_roc_auc_samples:
  - 0.9950716733785517
  - 0.9952020429699
  - 0.9950497612614827
  - 0.9953198888490945
  - 0.9942467601663892
  train_roc_auc_samples_oob:
  - 0.9908700394949292
  - 0.9911931617288761
  - 0.9906922332288395
  - 0.9908508169764532
  - 0.9896837863607569
  train_roc_auc_weighted:
  - 0.994122239127971
  - 0.9946500259675642
  - 0.9941464208075215
  - 0.9939549493713702
  - 0.9933207409876501
  train_roc_auc_weighted_oob:
  - 0.9909479679942776
  - 0.990964060794196
  - 0.9907852374951505
  - 0.9908877269482577
  - 0.9900379832451028
start: 2023-12-13 01:35:09.132108
wrapper: null
