active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:15:17.341099
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__7
  params: {}
hash: add76dca0f92453b0f5dd9bdfe44a1c9fd1fa5914839ad2ab018d76be74e0433
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/add76dc_20231221T231046924284_embedding_proba_weak__7_CHD_49.yml
results:
  fit_time:
  - 244.7367024421692
  - 243.92528700828552
  - 241.01162791252136
  - 250.1637842655182
  - 246.44809460639954
  score_time:
  - 5.977299451828003
  - 6.906147480010986
  - 6.3199663162231445
  - 6.5579400062561035
  - 6.900719404220581
  test_average_precision_macro:
  - 0.5614939377960068
  - 0.576044613181916
  - 0.5036380693202093
  - 0.5081810470610836
  - 0.5332276771671586
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7059028389535297
  - 0.6966944342499366
  - 0.6438981879511343
  - 0.6475870637546272
  - 0.6836137784738756
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8107288481141691
  - 0.7971096096096094
  - 0.7729854854854853
  - 0.7563938938938937
  - 0.7994960668633234
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6833456339438314
  - 0.6760670943810227
  - 0.6269108714498325
  - 0.6338425793129269
  - 0.6642549187963703
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7079510703363914
  - 0.7417417417417417
  - 0.7042042042042042
  - 0.6891891891891891
  - 0.6976401179941002
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7079510703363915
  - 0.7417417417417418
  - 0.7042042042042042
  - 0.6891891891891891
  - 0.6976401179941003
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7079510703363914
  - 0.7417417417417418
  - 0.7042042042042044
  - 0.6891891891891891
  - 0.6976401179941003
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6776336602341032
  - 0.6932195353247985
  - 0.6637787613397369
  - 0.6504126504126505
  - 0.6572666085005608
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5653618425968011
  - 0.6089082272291654
  - 0.5648834906144473
  - 0.5460252304451246
  - 0.5579950127779142
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5479289940828402
  - 0.5894988066825776
  - 0.5434530706836617
  - 0.5257731958762887
  - 0.535673839184598
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5986615830652527
  - 0.6303732303732302
  - 0.5854763854763855
  - 0.5687024687024688
  - 0.576201969122323
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5196244998682067
  - 0.538337546103715
  - 0.5045625376591621
  - 0.4874355367535452
  - 0.4957797476828909
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8199031600407747
  - 0.7971096096096094
  - 0.7819944944944945
  - 0.7654029029029028
  - 0.7994960668633238
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16318446281176727
  - 0.22419036381587856
  - 0.14230890620703984
  - 0.12868295585346926
  - 0.1811672767213953
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4281032083803406
  - 0.5149606299212598
  - 0.4376491031965386
  - 0.4057888742392446
  - 0.4472649431408968
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4351857998360701
  - 0.5443436014472562
  - 0.45409269631961247
  - 0.41402174284450405
  - 0.47151329331355135
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1778043188624142
  - 0.20591146512285355
  - 0.14031642458502713
  - 0.14111227905088256
  - 0.2101735187076981
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8746279373937053
  - 0.8615054239495267
  - 0.8414426298272887
  - 0.8334010419189329
  - 0.8686281413884807
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6422018348623855
  - -3.4864864864864864
  - -3.6036036036036037
  - -3.8018018018018016
  - -3.566371681415929
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29204892966360857
  - -0.25825825825825827
  - -0.2957957957957958
  - -0.3108108108108108
  - -0.3023598820058997
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29204892966360857
  - -0.25825825825825827
  - -0.2957957957957958
  - -0.3108108108108108
  - -0.3023598820058997
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29204892966360857
  - -0.2582582582582582
  - -0.29579579579579574
  - -0.31081081081081086
  - -0.3023598820058997
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3223663397658969
  - -0.30678046467520154
  - -0.3362212386602631
  - -0.3495873495873496
  - -0.34273339149943916
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19559123343527016
  - -0.1845845845845846
  - -0.20137637637637637
  - -0.24226726726726727
  - -0.19331366764995087
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7079510703363914
  - 0.7417417417417417
  - 0.7042042042042042
  - 0.6891891891891891
  - 0.6976401179941002
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7079510703363915
  - 0.7417417417417418
  - 0.7042042042042042
  - 0.6891891891891891
  - 0.6976401179941003
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7079510703363914
  - 0.7417417417417418
  - 0.7042042042042044
  - 0.6891891891891891
  - 0.6976401179941003
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6776336602341032
  - 0.6932195353247985
  - 0.6637787613397369
  - 0.6504126504126505
  - 0.6572666085005608
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7079510703363914
  - 0.7417417417417417
  - 0.7042042042042042
  - 0.6891891891891891
  - 0.6976401179941002
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7079510703363915
  - 0.7417417417417418
  - 0.7042042042042042
  - 0.6891891891891891
  - 0.6976401179941003
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7079510703363914
  - 0.7417417417417418
  - 0.7042042042042044
  - 0.6891891891891891
  - 0.6976401179941003
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6776336602341032
  - 0.6932195353247985
  - 0.6637787613397369
  - 0.6504126504126505
  - 0.6572666085005608
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5657275075276366
  - 0.6558603319064514
  - 0.5666053671473986
  - 0.5210225932430155
  - 0.549540740503577
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7865289882531262
  - 0.8032601188009393
  - 0.7655300488172617
  - 0.7508465218991534
  - 0.7864177450489741
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.8154154154154155
  - .nan
  - .nan
  - 0.8066863323500492
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6224359040591169
  - 0.612016990080142
  - 0.5787085473334813
  - 0.5615342545246198
  - 0.6159838736496351
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8445425852300779
  - 0.8252926541096405
  - 0.813882332165027
  - 0.8501157716832637
  - 0.8384407521343409
  train_average_precision_macro_oob:
  - 0.7068531964755885
  - 0.7279896366453961
  - 0.7359508237918252
  - 0.7018106655712234
  - 0.7131740610765913
  train_average_precision_micro:
  - 0.8264953496184418
  - 0.8107298249803307
  - 0.7622260202437456
  - 0.8233557661508604
  - 0.812353178428143
  train_average_precision_micro_oob:
  - 0.8153674264392116
  - 0.7965237737495426
  - 0.7563747493727734
  - 0.815161154602049
  - 0.8012546802207327
  train_average_precision_samples:
  - 0.8756788739412057
  - 0.8728228228228228
  - 0.8326076076076077
  - 0.8835554304304304
  - 0.8756347410759175
  train_average_precision_samples_oob:
  - 0.8711696562032886
  - 0.8598598598598598
  - 0.8282188438438439
  - 0.8775713213213213
  - 0.8661764705882352
  train_average_precision_weighted:
  - 0.8186747927105513
  - 0.7974072855467363
  - 0.7832760226742882
  - 0.8232075017327803
  - 0.816124904083294
  train_average_precision_weighted_oob:
  - 0.8028203540478405
  - 0.7805095404435693
  - 0.7730267800061463
  - 0.8089666018141821
  - 0.7974723374130215
  train_f1_macro:
  - 0.8684603886397609
  - 0.8438438438438438
  - 0.8408408408408409
  - 0.8577327327327328
  - 0.8420060331825038
  train_f1_macro_oob:
  - 0.8594917787742901
  - 0.8235735735735735
  - 0.8235735735735736
  - 0.8427177177177176
  - 0.8254147812971343
  train_f1_micro:
  - 0.8684603886397608
  - 0.8438438438438438
  - 0.8408408408408409
  - 0.8577327327327328
  - 0.8420060331825038
  train_f1_micro_oob:
  - 0.85949177877429
  - 0.8235735735735735
  - 0.8235735735735735
  - 0.8427177177177178
  - 0.8254147812971342
  train_f1_samples:
  - 0.8684603886397609
  - 0.8438438438438439
  - 0.8408408408408409
  - 0.8577327327327329
  - 0.8420060331825038
  train_f1_samples_oob:
  - 0.85949177877429
  - 0.8235735735735736
  - 0.8235735735735737
  - 0.8427177177177178
  - 0.8254147812971343
  train_f1_weighted:
  - 0.8415375432919981
  - 0.8126919421601201
  - 0.8099433494630002
  - 0.8298959954719117
  - 0.8153901335393443
  train_f1_weighted_oob:
  - 0.8273189196830358
  - 0.7863835937070462
  - 0.7888449584956136
  - 0.8093466503152368
  - 0.7928839453229698
  train_jaccard_macro:
  - 0.7729300516198353
  - 0.7386906944235436
  - 0.7331597773868898
  - 0.7571681987501849
  - 0.7335445541339198
  train_jaccard_macro_oob:
  - 0.7599441659644515
  - 0.7116326791056816
  - 0.7088718275305733
  - 0.7357592247624313
  - 0.7100865010165266
  train_jaccard_micro:
  - 0.7675033025099075
  - 0.7298701298701299
  - 0.7253886010362695
  - 0.7509037134406835
  - 0.7271247150765223
  train_jaccard_micro_oob:
  - 0.7536041939711664
  - 0.7000638162093171
  - 0.7000638162093171
  - 0.7281868310087577
  - 0.7027287319422151
  train_jaccard_samples:
  - 0.7960281870595771
  - 0.7588179088179088
  - 0.7577463827463826
  - 0.7826908076908077
  - 0.7611094787565376
  train_jaccard_samples_oob:
  - 0.7851484091394405
  - 0.7326498576498576
  - 0.7364572364572364
  - 0.7612836862836861
  - 0.737946367358132
  train_jaccard_weighted:
  - 0.7285291375839805
  - 0.689132110902036
  - 0.6837384379149936
  - 0.7120522899149178
  - 0.6906661249322374
  train_jaccard_weighted_oob:
  - 0.7079619922062799
  - 0.6541570086524926
  - 0.6545790802220545
  - 0.6830168122523538
  - 0.6591379310477314
  train_label_ranking_average_precision_score:
  - 0.8801631788739404
  - 0.8795795795795789
  - 0.8371121121121118
  - 0.8880599349349347
  - 0.8824220713926593
  train_label_ranking_average_precision_score_oob:
  - 0.8756539611360229
  - 0.8666166166166158
  - 0.8327233483483476
  - 0.8820758258258257
  - 0.8729638009049768
  train_matthews_corrcoef_macro:
  - 0.5613671526346304
  - 0.5054906723731473
  - 0.5010647839231095
  - 0.5354283775119755
  - 0.5087711209682216
  train_matthews_corrcoef_macro_oob:
  - 0.531019363001279
  - 0.4357685448616558
  - 0.44491324873417853
  - 0.4858014619489452
  - 0.44366954569032385
  train_matthews_corrcoef_micro:
  - 0.7534566195318128
  - 0.7155997068788409
  - 0.7091462001308356
  - 0.7362523145060034
  - 0.7119748923958515
  train_matthews_corrcoef_micro_oob:
  - 0.7358590053365837
  - 0.679189519466324
  - 0.6737102371034596
  - 0.7073385344750509
  - 0.6806053049786217
  train_matthews_corrcoef_samples:
  - 0.7608713814577373
  - 0.7241426989170744
  - 0.71863241179199
  - 0.7431831112862763
  - 0.7223672359148838
  train_matthews_corrcoef_samples_oob:
  - 0.7443089046871423
  - 0.6925747413314705
  - 0.6831508748174431
  - 0.7162449507294676
  - 0.6893326955648419
  train_matthews_corrcoef_weighted:
  - 0.6415638951346344
  - 0.5618058641931065
  - 0.5584224307788518
  - 0.6032241086749944
  - 0.576407336262872
  train_matthews_corrcoef_weighted_oob:
  - 0.592651624535755
  - 0.45782311430496087
  - 0.4823585971076792
  - 0.5288410304612049
  - 0.4777115410935687
  train_ndgc:
  - 0.9153614931086174
  - 0.9146784676593266
  - 0.8845357669627455
  - 0.9222251866210202
  - 0.9159140443524566
  train_ndgc_oob:
  - 0.9138363012639346
  - 0.9059591022287894
  - 0.882304789894097
  - 0.9183870814249486
  - 0.9099677124694859
  train_neg_coverage_error:
  - -3.0672645739910314
  - -3.144144144144144
  - -3.2477477477477477
  - -3.0945945945945947
  - -3.1538461538461537
  train_neg_coverage_error_oob:
  - -3.1502242152466366
  - -3.225225225225225
  - -3.310810810810811
  - -3.171171171171171
  - -3.237556561085973
  train_neg_hamming_loss_macro:
  - -0.13153961136023917
  - -0.15615615615615616
  - -0.15915915915915915
  - -0.14226726726726727
  - -0.15799396681749622
  train_neg_hamming_loss_macro_oob:
  - -0.14050822122571002
  - -0.17642642642642645
  - -0.1764264264264264
  - -0.15728228228228228
  - -0.17458521870286578
  train_neg_hamming_loss_micro:
  - -0.13153961136023917
  - -0.15615615615615616
  - -0.15915915915915915
  - -0.14226726726726727
  - -0.15799396681749622
  train_neg_hamming_loss_micro_oob:
  - -0.14050822122571002
  - -0.17642642642642642
  - -0.17642642642642642
  - -0.15728228228228228
  - -0.17458521870286575
  train_neg_hamming_loss_samples:
  - -0.13153961136023914
  - -0.15615615615615613
  - -0.15915915915915912
  - -0.14226726726726724
  - -0.15799396681749622
  train_neg_hamming_loss_samples_oob:
  - -0.14050822122571002
  - -0.17642642642642642
  - -0.1764264264264264
  - -0.1572822822822823
  - -0.17458521870286575
  train_neg_hamming_loss_weighted:
  - -0.15846245670800185
  - -0.18730805783988
  - -0.19005665053699988
  - -0.17010400452808827
  - -0.18460986646065555
  train_neg_hamming_loss_weighted_oob:
  - -0.1726810803169642
  - -0.21361640629295384
  - -0.2111550415043865
  - -0.1906533496847633
  - -0.2071160546770303
  train_neg_label_ranking_loss:
  - -0.09681738913801695
  - -0.10426676676676677
  - -0.12985485485485487
  - -0.09919294294294294
  - -0.10691302161890397
  train_neg_label_ranking_loss_oob:
  - -0.10745515695067266
  - -0.11875625625625624
  - -0.1389451951951952
  - -0.11166166166166165
  - -0.11971468074409251
  train_precision_macro:
  - 0.8684603886397609
  - 0.8438438438438438
  - 0.8408408408408409
  - 0.8577327327327328
  - 0.8420060331825038
  train_precision_macro_oob:
  - 0.8594917787742901
  - 0.8235735735735735
  - 0.8235735735735736
  - 0.8427177177177176
  - 0.8254147812971343
  train_precision_micro:
  - 0.8684603886397608
  - 0.8438438438438438
  - 0.8408408408408409
  - 0.8577327327327328
  - 0.8420060331825038
  train_precision_micro_oob:
  - 0.85949177877429
  - 0.8235735735735735
  - 0.8235735735735735
  - 0.8427177177177178
  - 0.8254147812971342
  train_precision_samples:
  - 0.8684603886397609
  - 0.8438438438438439
  - 0.8408408408408409
  - 0.8577327327327329
  - 0.8420060331825038
  train_precision_samples_oob:
  - 0.85949177877429
  - 0.8235735735735736
  - 0.8235735735735737
  - 0.8427177177177178
  - 0.8254147812971343
  train_precision_weighted:
  - 0.8415375432919981
  - 0.8126919421601201
  - 0.8099433494630002
  - 0.8298959954719117
  - 0.8153901335393443
  train_precision_weighted_oob:
  - 0.8273189196830358
  - 0.7863835937070462
  - 0.7888449584956136
  - 0.8093466503152368
  - 0.7928839453229698
  train_recall_macro:
  - 0.8684603886397609
  - 0.8438438438438438
  - 0.8408408408408409
  - 0.8577327327327328
  - 0.8420060331825038
  train_recall_macro_oob:
  - 0.8594917787742901
  - 0.8235735735735735
  - 0.8235735735735736
  - 0.8427177177177176
  - 0.8254147812971343
  train_recall_micro:
  - 0.8684603886397608
  - 0.8438438438438438
  - 0.8408408408408409
  - 0.8577327327327328
  - 0.8420060331825038
  train_recall_micro_oob:
  - 0.85949177877429
  - 0.8235735735735735
  - 0.8235735735735735
  - 0.8427177177177178
  - 0.8254147812971342
  train_recall_samples:
  - 0.8684603886397609
  - 0.8438438438438439
  - 0.8408408408408409
  - 0.8577327327327329
  - 0.8420060331825038
  train_recall_samples_oob:
  - 0.85949177877429
  - 0.8235735735735736
  - 0.8235735735735737
  - 0.8427177177177178
  - 0.8254147812971343
  train_recall_weighted:
  - 0.8415375432919981
  - 0.8126919421601201
  - 0.8099433494630002
  - 0.8298959954719117
  - 0.8153901335393443
  train_recall_weighted_oob:
  - 0.8273189196830358
  - 0.7863835937070462
  - 0.7888449584956136
  - 0.8093466503152368
  - 0.7928839453229698
  train_roc_auc_macro:
  - 0.8720140908685533
  - 0.8516667799700687
  - 0.8430070276750028
  - 0.8765712535079994
  - 0.861811930642275
  train_roc_auc_macro_oob:
  - 0.8390716916257341
  - 0.8169631961530582
  - 0.8182956718489289
  - 0.8450276906250674
  - 0.8361060690597001
  train_roc_auc_micro:
  - 0.9105169000609649
  - 0.8957128710993512
  - 0.8831332955777043
  - 0.9092613478283863
  - 0.895340937523167
  train_roc_auc_micro_oob:
  - 0.9002442020563662
  - 0.8827591280224873
  - 0.8719319478742334
  - 0.8988973504680311
  - 0.8851292024983319
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8243390825017283
  - 0.8003934676944522
  - 0.7929562706470423
  - 0.8314941638430107
  - 0.8168137297510912
  train_roc_auc_weighted_oob:
  - 0.8142312024721602
  - 0.7840199176967233
  - 0.7809898782322927
  - 0.8212044670897153
  - 0.8030428598829414
start: 2023-12-21 23:10:46.924284
wrapper: null
