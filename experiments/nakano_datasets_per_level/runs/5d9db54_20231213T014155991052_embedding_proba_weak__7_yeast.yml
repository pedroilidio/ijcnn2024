active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gGZmZmZm9j+AZmZmZmb2P4BmZmZmZvY/AJqZmZmZ2T9gZmZmZmYSwA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZP4BmZmZmZvY/wMzMzMzMBMAAmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMIkDAzMzMzMwMwKCZmZmZmRFAgGZmZmZm9j8wMzMzMzMnwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmFkDMzMzMzMwgwGBmZmZmZva/MDMzMzMzC8BoZmZmZmYeQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            cGZmZmZmBkDAmZmZmZnpP8CZmZmZmek/kJmZmZmZAcCQmZmZmZkBwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmpmZmZnpP4BmZmZmZgZAADMzMzMz87+AmZmZmZkBwA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmDkCAmZmZmZnJv6CZmZmZmek/zMzMzMzMFMCgmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz479AZmZmZmYewHBmZmZmZjFAwJmZmZmZFUAgMzMzMzMtwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:55:36.867569
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 5d9db54a8a3e2fe0a0a444ae07cc2be7a6f51529a47cd3a090860aab4708f1c9
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5d9db54_20231213T014155991052_embedding_proba_weak__7_yeast.yml
results:
  fit_time:
  - 558.4022676944733
  - 609.5417077541351
  - 647.7652778625488
  - 630.282604932785
  - 667.9306337833405
  score_time:
  - 48.79902219772339
  - 47.721792221069336
  - 33.9466986656189
  - 36.24573087692261
  - 37.472925662994385
  test_average_precision_macro:
  - 0.5194838395744766
  - 0.4639468008820016
  - 0.5034397157693482
  - 0.4646334218924833
  - 0.4713568279221509
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6998379122242758
  - 0.6543931136284802
  - 0.6900211116923598
  - 0.6593948202645056
  - 0.6547847879481838
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7520322246228016
  - 0.7302890112035078
  - 0.7676613037994092
  - 0.7509647973412542
  - 0.7367753648295459
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6826686774578645
  - 0.6305288944756702
  - 0.6645118827595589
  - 0.6219979589475466
  - 0.630210942776255
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8015053128689492
  - 0.7814954902531276
  - 0.7964438994481914
  - 0.782127913927077
  - 0.789156626506024
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8015053128689492
  - 0.7814954902531277
  - 0.7964438994481913
  - 0.7821279139270771
  - 0.7891566265060241
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8015053128689492
  - 0.7814954902531276
  - 0.7964438994481913
  - 0.7821279139270771
  - 0.7891566265060241
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7626822383396017
  - 0.7398528221297248
  - 0.7596018718092962
  - 0.7375975663532486
  - 0.743235922827652
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6744165421592634
  - 0.6476902704178195
  - 0.6676973261838647
  - 0.6503686511893123
  - 0.6590032820931954
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6687600049255018
  - 0.6413562559694365
  - 0.6617422312786552
  - 0.6422085889570552
  - 0.6517412935323383
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6969690346909982
  - 0.6734311215356763
  - 0.688870219354281
  - 0.6722365378997817
  - 0.6795721725278152
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6192641331008284
  - 0.5902015012839108
  - 0.6156040423465858
  - 0.5883341569630306
  - 0.5951991071010975
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7520322246228014
  - 0.7302890112035082
  - 0.7676613037994098
  - 0.7509647973412537
  - 0.7367753648295462
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.300642743408715
  - 0.234799234045007
  - 0.28311395118601845
  - 0.23896021129948108
  - 0.26975154979860066
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5356548570120032
  - 0.4791440662643795
  - 0.5256671433483883
  - 0.4836042194874709
  - 0.5017834629559501
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5393632756363874
  - 0.4857259975846343
  - 0.531573931798298
  - 0.49125846796977996
  - 0.5086384543706761
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3051370762179853
  - 0.26502482924131165
  - 0.3039393207862876
  - 0.2474388820296258
  - 0.289657014097752
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8471727299071689
  - 0.8314578943861483
  - 0.8636013132710038
  - 0.8510461236430922
  - 0.8377798178928042
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.225206611570248
  - -7.4969450101833
  - -7.472103004291846
  - -7.592050209205021
  - -7.48995983935743
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19849468713105076
  - -0.21850450974687227
  - -0.2035561005518087
  - -0.2178720860729229
  - -0.21084337349397592
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19849468713105076
  - -0.21850450974687227
  - -0.2035561005518087
  - -0.21787208607292288
  - -0.21084337349397592
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19849468713105076
  - -0.21850450974687224
  - -0.20355610055180867
  - -0.21787208607292285
  - -0.21084337349397592
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23731776166039828
  - -0.2601471778702753
  - -0.24039812819070372
  - -0.2624024336467514
  - -0.2567640771723478
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17306676663229204
  - -0.20375949455451928
  - -0.1775219790087969
  - -0.18853342687398275
  - -0.19146721393924493
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8015053128689492
  - 0.7814954902531276
  - 0.7964438994481914
  - 0.782127913927077
  - 0.789156626506024
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8015053128689492
  - 0.7814954902531277
  - 0.7964438994481913
  - 0.7821279139270771
  - 0.7891566265060241
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8015053128689492
  - 0.7814954902531276
  - 0.7964438994481913
  - 0.7821279139270771
  - 0.7891566265060241
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7626822383396017
  - 0.7398528221297248
  - 0.7596018718092962
  - 0.7375975663532486
  - 0.743235922827652
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8015053128689492
  - 0.7814954902531276
  - 0.7964438994481914
  - 0.782127913927077
  - 0.789156626506024
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8015053128689492
  - 0.7814954902531277
  - 0.7964438994481913
  - 0.7821279139270771
  - 0.7891566265060241
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8015053128689492
  - 0.7814954902531276
  - 0.7964438994481913
  - 0.7821279139270771
  - 0.7891566265060241
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7626822383396017
  - 0.7398528221297248
  - 0.7596018718092962
  - 0.7375975663532486
  - 0.743235922827652
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7323193524848065
  - 0.6679191221839842
  - 0.6974577042957516
  - 0.6747503540738017
  - 0.6834632217768165
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8370011949914272
  - 0.800373068069183
  - 0.8247269507864261
  - 0.800864199614502
  - 0.8115665048439615
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8270623655991128
  - 0.7963974979777279
  - 0.8226449260937305
  - 0.8115632026869325
  - 0.8085997204650388
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.717743661753354
  - 0.6830819921619213
  - 0.7061456295862362
  - 0.6739444857943515
  - 0.6887970090668655
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8823108860180887
  - 0.8835655845847671
  - 0.8857809443674303
  - 0.8869687622029353
  - 0.8846148609149947
  train_average_precision_macro_oob:
  - 0.8777513203267296
  - 0.8765231586893761
  - 0.8786360503954852
  - 0.8828888317160439
  - 0.8754104394220382
  train_average_precision_micro:
  - 0.9607709005699798
  - 0.9634563393864767
  - 0.960754908556024
  - 0.9713581081836277
  - 0.9714037923795236
  train_average_precision_micro_oob:
  - 0.9576763791693134
  - 0.9600703104123677
  - 0.9562122458413967
  - 0.967628187293957
  - 0.966611832803219
  train_average_precision_samples:
  - 0.986208312151147
  - 0.9871303048287331
  - 0.9890561340716023
  - 0.9910431500143153
  - 0.988042617970175
  train_average_precision_samples_oob:
  - 0.9812600224276343
  - 0.9825740280245979
  - 0.9839391344340882
  - 0.9859992772134105
  - 0.9845927805941702
  train_average_precision_weighted:
  - 0.9700914516803444
  - 0.9732930554452642
  - 0.9716743026783267
  - 0.975747796732077
  - 0.9709339537586589
  train_average_precision_weighted_oob:
  - 0.9666673104536554
  - 0.969394509889718
  - 0.9673495295902685
  - 0.9727875942415912
  - 0.9665956771967066
  train_f1_macro:
  - 0.9686645480747913
  - 0.9690327844533453
  - 0.9706011569158672
  - 0.9729241877256317
  - 0.9697014814263379
  train_f1_macro_oob:
  - 0.962456581183948
  - 0.9638035899718143
  - 0.9658783041663616
  - 0.966993295513151
  - 0.9653837564207549
  train_f1_micro:
  - 0.9686645480747912
  - 0.9690327844533452
  - 0.9706011569158673
  - 0.9729241877256317
  - 0.9697014814263382
  train_f1_micro_oob:
  - 0.962456581183948
  - 0.9638035899718143
  - 0.9658783041663616
  - 0.9669932955131512
  - 0.9653837564207549
  train_f1_samples:
  - 0.9686645480747913
  - 0.9690327844533452
  - 0.9706011569158675
  - 0.9729241877256317
  - 0.9697014814263383
  train_f1_samples_oob:
  - 0.9624565811839481
  - 0.9638035899718144
  - 0.9658783041663616
  - 0.9669932955131512
  - 0.9653837564207549
  train_f1_weighted:
  - 0.9796232208692979
  - 0.9800465189526854
  - 0.9812972057235522
  - 0.981668082580802
  - 0.9805138678840216
  train_f1_weighted_oob:
  - 0.9731928931436855
  - 0.9739131946546224
  - 0.9763320688911487
  - 0.9754128264801952
  - 0.9756781050643992
  train_jaccard_macro:
  - 0.9404052547320086
  - 0.9409558431777613
  - 0.9440383149279813
  - 0.9480964540948602
  - 0.9421336196077398
  train_jaccard_macro_oob:
  - 0.9287211041097017
  - 0.9310169231310971
  - 0.9350766719543265
  - 0.9368493191782503
  - 0.9339355473062775
  train_jaccard_micro:
  - 0.9392332497312791
  - 0.9399258966149862
  - 0.9428815307465235
  - 0.9472759226713533
  - 0.9411849710982659
  train_jaccard_micro_oob:
  - 0.9276301730892513
  - 0.9301360057265569
  - 0.9340083551653331
  - 0.9360958562156765
  - 0.9330838969635918
  train_jaccard_samples:
  - 0.9438332843052725
  - 0.9444135632792405
  - 0.9472624184152606
  - 0.9512658974540479
  - 0.9456913493206907
  train_jaccard_samples_oob:
  - 0.9334923319578783
  - 0.9356017415619762
  - 0.9393619071447225
  - 0.9414425051799173
  - 0.938528193702538
  train_jaccard_weighted:
  - 0.9602847815034714
  - 0.9611473942117243
  - 0.9635249689802668
  - 0.9641474370874528
  - 0.9620472870094333
  train_jaccard_weighted_oob:
  - 0.9481353842788104
  - 0.9494951457824606
  - 0.9541029278276542
  - 0.9522668480603731
  - 0.9528709287983252
  train_label_ranking_average_precision_score:
  - 0.9862083121511475
  - 0.9871303048287343
  - 0.9890561340716029
  - 0.991043150014316
  - 0.9880426179701755
  train_label_ranking_average_precision_score_oob:
  - 0.9812600224276351
  - 0.982574028024599
  - 0.983939134434089
  - 0.9859992772134111
  - 0.9845927805941713
  train_matthews_corrcoef_macro:
  - 0.8688403147921234
  - 0.8648987450204141
  - 0.873160916708667
  - 0.8725064530171568
  - 0.8659531322710532
  train_matthews_corrcoef_macro_oob:
  - 0.8473272913941499
  - 0.8477258891032012
  - 0.8576774832800174
  - 0.8520529817987652
  - 0.8508043160958014
  train_matthews_corrcoef_micro:
  - 0.9270503071285467
  - 0.9277291027987465
  - 0.930941355889429
  - 0.9361350335424811
  - 0.9292933800588744
  train_matthews_corrcoef_micro_oob:
  - 0.91206688586371
  - 0.915063184670095
  - 0.9193980857166573
  - 0.9217976470023598
  - 0.9188770955642546
  train_matthews_corrcoef_samples:
  - 0.9308212865111897
  - 0.9308883899430336
  - 0.9359525613610822
  - 0.9389021794123591
  - 0.9325693498032591
  train_matthews_corrcoef_samples_oob:
  - 0.9167514695648593
  - 0.9196426745091715
  - 0.9246421094912766
  - 0.9258156217778111
  - 0.9229905774824931
  train_matthews_corrcoef_weighted:
  - 0.9425935093376309
  - 0.9436238736273392
  - 0.9473472818416977
  - 0.9483566221135269
  - 0.9444175757023336
  train_matthews_corrcoef_weighted_oob:
  - 0.9260075014353831
  - 0.9277785777730747
  - 0.9345113228090529
  - 0.9318452550512745
  - 0.9320399412254389
  train_ndgc:
  - 0.9929505990516977
  - 0.9936660666529451
  - 0.9943469908734963
  - 0.9957742549174567
  - 0.9938319008082321
  train_ndgc_oob:
  - 0.9904837468090053
  - 0.9918528281858798
  - 0.99206453948716
  - 0.9933915231283728
  - 0.9924063877892292
  train_neg_coverage_error:
  - -4.4019658561821
  - -4.391484942886812
  - -4.3249615581752945
  - -4.320268179473955
  - -4.394476289734237
  train_neg_coverage_error_oob:
  - -4.519399896533885
  - -4.5067497403946
  - -4.4495130702204
  - -4.432697266632284
  - -4.500781657113079
  train_neg_hamming_loss_macro:
  - -0.03133545192520878
  - -0.0309672155466548
  - -0.029398843084132677
  - -0.027075812274368227
  - -0.030298518573661885
  train_neg_hamming_loss_macro_oob:
  - -0.03754341881605202
  - -0.03619641002818573
  - -0.03412169583363842
  - -0.033006704486848885
  - -0.03461624357924515
  train_neg_hamming_loss_micro:
  - -0.03133545192520878
  - -0.0309672155466548
  - -0.02939884308413268
  - -0.02707581227436823
  - -0.03029851857366188
  train_neg_hamming_loss_micro_oob:
  - -0.03754341881605203
  - -0.03619641002818573
  - -0.03412169583363843
  - -0.03300670448684889
  - -0.03461624357924514
  train_neg_hamming_loss_samples:
  - -0.03133545192520878
  - -0.030967215546654797
  - -0.029398843084132674
  - -0.027075812274368227
  - -0.030298518573661875
  train_neg_hamming_loss_samples_oob:
  - -0.03754341881605202
  - -0.036196410028185716
  - -0.034121695833638416
  - -0.033006704486848885
  - -0.034616243579245136
  train_neg_hamming_loss_weighted:
  - -0.02037677913070201
  - -0.019953481047314744
  - -0.018702794276447766
  - -0.018331917419198034
  - -0.01948613211597829
  train_neg_hamming_loss_weighted_oob:
  - -0.026807106856314666
  - -0.02608680534537765
  - -0.023667931108851407
  - -0.02458717351980454
  - -0.02432189493560088
  train_neg_label_ranking_loss:
  - -0.006602050508635388
  - -0.00632272248594011
  - -0.005255188682185826
  - -0.004272287896947147
  - -0.005683998747722414
  train_neg_label_ranking_loss_oob:
  - -0.010543514143580658
  - -0.01024006919089251
  - -0.009270064708667623
  - -0.008310072418965073
  - -0.009262279818000803
  train_precision_macro:
  - 0.9686645480747913
  - 0.9690327844533453
  - 0.9706011569158672
  - 0.9729241877256317
  - 0.9697014814263379
  train_precision_macro_oob:
  - 0.962456581183948
  - 0.9638035899718143
  - 0.9658783041663616
  - 0.966993295513151
  - 0.9653837564207549
  train_precision_micro:
  - 0.9686645480747912
  - 0.9690327844533452
  - 0.9706011569158673
  - 0.9729241877256317
  - 0.9697014814263382
  train_precision_micro_oob:
  - 0.962456581183948
  - 0.9638035899718143
  - 0.9658783041663616
  - 0.9669932955131512
  - 0.9653837564207549
  train_precision_samples:
  - 0.9686645480747913
  - 0.9690327844533452
  - 0.9706011569158675
  - 0.9729241877256317
  - 0.9697014814263383
  train_precision_samples_oob:
  - 0.9624565811839481
  - 0.9638035899718144
  - 0.9658783041663616
  - 0.9669932955131512
  - 0.9653837564207549
  train_precision_weighted:
  - 0.9796232208692979
  - 0.9800465189526854
  - 0.9812972057235522
  - 0.981668082580802
  - 0.9805138678840216
  train_precision_weighted_oob:
  - 0.9731928931436855
  - 0.9739131946546224
  - 0.9763320688911487
  - 0.9754128264801952
  - 0.9756781050643992
  train_recall_macro:
  - 0.9686645480747913
  - 0.9690327844533453
  - 0.9706011569158672
  - 0.9729241877256317
  - 0.9697014814263379
  train_recall_macro_oob:
  - 0.962456581183948
  - 0.9638035899718143
  - 0.9658783041663616
  - 0.966993295513151
  - 0.9653837564207549
  train_recall_micro:
  - 0.9686645480747912
  - 0.9690327844533452
  - 0.9706011569158673
  - 0.9729241877256317
  - 0.9697014814263382
  train_recall_micro_oob:
  - 0.962456581183948
  - 0.9638035899718143
  - 0.9658783041663616
  - 0.9669932955131512
  - 0.9653837564207549
  train_recall_samples:
  - 0.9686645480747913
  - 0.9690327844533452
  - 0.9706011569158675
  - 0.9729241877256317
  - 0.9697014814263383
  train_recall_samples_oob:
  - 0.9624565811839481
  - 0.9638035899718144
  - 0.9658783041663616
  - 0.9669932955131512
  - 0.9653837564207549
  train_recall_weighted:
  - 0.9796232208692979
  - 0.9800465189526854
  - 0.9812972057235522
  - 0.981668082580802
  - 0.9805138678840216
  train_recall_weighted_oob:
  - 0.9731928931436855
  - 0.9739131946546224
  - 0.9763320688911487
  - 0.9754128264801952
  - 0.9756781050643992
  train_roc_auc_macro:
  - 0.986547640835715
  - 0.9883687657274133
  - 0.9878836495564475
  - 0.9889392630562303
  - 0.9881279891827918
  train_roc_auc_macro_oob:
  - 0.9828063347972772
  - 0.984259615257245
  - 0.9840547296935485
  - 0.9849931919711767
  - 0.983243025200453
  train_roc_auc_micro:
  - 0.988992473298049
  - 0.9899536501703554
  - 0.989435304369657
  - 0.9919023164527769
  - 0.9908858389856611
  train_roc_auc_micro_oob:
  - 0.9867834040854534
  - 0.9876617174737433
  - 0.9871100675577587
  - 0.9896944317710702
  - 0.9883322228872105
  train_roc_auc_samples:
  - 0.9933979494913647
  - 0.9936960267929337
  - 0.9947448113178142
  - 0.995733084288028
  - 0.9943160012522776
  train_roc_auc_samples_oob:
  - 0.9894810993168468
  - 0.9898709186732105
  - 0.9907940049991746
  - 0.9917006719509851
  - 0.9907507478005506
  train_roc_auc_weighted:
  - 0.9922829932431697
  - 0.9939921921326318
  - 0.9926136348651143
  - 0.9942179875509541
  - 0.9937938528088835
  train_roc_auc_weighted_oob:
  - 0.9895692524104778
  - 0.9914941607351571
  - 0.9900958298912493
  - 0.9917794590453349
  - 0.9912678863324419
start: 2023-12-13 01:41:55.991052
wrapper: null
