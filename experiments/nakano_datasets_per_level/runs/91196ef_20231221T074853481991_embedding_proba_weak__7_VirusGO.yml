active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCAZmZmZmb2P0AzMzMzMwNAAJqZmZmZ2T+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:52:53.021998
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__7
  params: {}
hash: 91196efc44d09af452ba09f4a0773ab37695f186711c0785f5ef640b254c950a
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/91196ef_20231221T074853481991_embedding_proba_weak__7_VirusGO.yml
results:
  fit_time:
  - 219.0279839038849
  - 222.2786464691162
  - 226.86581206321716
  - 227.197438955307
  - 225.05538749694824
  score_time:
  - 4.543457746505737
  - 4.593096971511841
  - 4.603022813796997
  - 4.630590438842773
  - 4.78339409828186
  test_average_precision_macro:
  - 0.9503834839178081
  - 0.9226288092792047
  - 0.8990070579170926
  - 0.9388850298648349
  - 0.9546853376273742
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9400982634843659
  - 0.9441639530923169
  - 0.9096511421526011
  - 0.903009503428725
  - 0.9082900772499285
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.940151515151515
  - 0.9550000000000001
  - 0.9525641025641025
  - 0.926829268292683
  - 0.9011627906976745
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9554003772414464
  - 0.9341491654874008
  - 0.9309505520489915
  - 0.9333557639545661
  - 0.9586998519527099
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9507575757575758
  - 0.9583333333333334
  - 0.9487179487179489
  - 0.9105691056910569
  - 0.9263565891472868
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9507575757575758
  - 0.9583333333333334
  - 0.9487179487179487
  - 0.9105691056910569
  - 0.9263565891472868
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9507575757575758
  - 0.9583333333333333
  - 0.9487179487179487
  - 0.910569105691057
  - 0.9263565891472869
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9416221033868092
  - 0.951
  - 0.9408686551543695
  - 0.8809756097560976
  - 0.9101073345259392
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9071453044163498
  - 0.920995057126651
  - 0.9051130378413418
  - 0.8390157472943115
  - 0.8643366525354104
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9061371841155235
  - 0.92
  - 0.9024390243902439
  - 0.835820895522388
  - 0.8628158844765343
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9204545454545454
  - 0.9339285714285716
  - 0.9188034188034189
  - 0.859465737514518
  - 0.8831672203765226
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8908873612144004
  - 0.9074013451097965
  - 0.88974035445148
  - 0.7903724862375014
  - 0.8369383204786931
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9401515151515152
  - 0.9550000000000001
  - 0.9525641025641024
  - 0.926829268292683
  - 0.9011627906976745
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6624225392546305
  - 0.8332560887369248
  - 0.7035560009467554
  - 0.48494416025330994
  - 0.5789346157693585
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8367095374390237
  - 0.8705827164519997
  - 0.8405873728621941
  - 0.7163572755468645
  - 0.759443561258987
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7923843423651671
  - 0.8532417281883408
  - 0.8422064075423472
  - 0.6992532790574373
  - 0.7239493518170861
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8012062955981201
  - 0.8565859108172849
  - 0.7862156212648163
  - 0.6331667876216227
  - 0.7186679446478786
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9561007523528556
  - 0.9669669236978109
  - 0.9708842960655029
  - 0.9458449284865589
  - 0.927877342190563
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3636363636363635
  - -1.425
  - -1.5128205128205128
  - -1.3902439024390243
  - -1.441860465116279
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04924242424242423
  - -0.041666666666666664
  - -0.05128205128205129
  - -0.08943089430894309
  - -0.07364341085271318
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04924242424242424
  - -0.041666666666666664
  - -0.05128205128205128
  - -0.08943089430894309
  - -0.07364341085271318
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04924242424242424
  - -0.041666666666666664
  - -0.05128205128205127
  - -0.08943089430894308
  - -0.07364341085271317
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05837789661319073
  - -0.049
  - -0.05913134484563056
  - -0.11902439024390246
  - -0.08989266547406083
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03920454545454546
  - -0.03402777777777778
  - -0.03717948717948718
  - -0.036585365853658534
  - -0.045930232558139536
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9507575757575758
  - 0.9583333333333334
  - 0.9487179487179489
  - 0.9105691056910569
  - 0.9263565891472868
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9507575757575758
  - 0.9583333333333334
  - 0.9487179487179487
  - 0.9105691056910569
  - 0.9263565891472868
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9507575757575758
  - 0.9583333333333333
  - 0.9487179487179487
  - 0.910569105691057
  - 0.9263565891472869
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9416221033868092
  - 0.951
  - 0.9408686551543695
  - 0.8809756097560976
  - 0.9101073345259392
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9507575757575758
  - 0.9583333333333334
  - 0.9487179487179489
  - 0.9105691056910569
  - 0.9263565891472868
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9507575757575758
  - 0.9583333333333334
  - 0.9487179487179487
  - 0.9105691056910569
  - 0.9263565891472868
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9507575757575758
  - 0.9583333333333333
  - 0.9487179487179487
  - 0.910569105691057
  - 0.9263565891472869
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9416221033868092
  - 0.951
  - 0.9408686551543695
  - 0.8809756097560976
  - 0.9101073345259392
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9715494684244684
  - 0.9690040322233416
  - 0.9736758339699517
  - 0.9730344840638958
  - 0.985113720701956
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9761575991899107
  - 0.9763157894736841
  - 0.9659128516271372
  - 0.9738775510204082
  - 0.9802091112770724
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9607954545454546
  - 0.9659722222222221
  - 0.9628205128205127
  - 0.9634146341463414
  - 0.9540697674418602
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9704515278044689
  - 0.9626899429073341
  - 0.9736284124039225
  - 0.96252574002574
  - 0.9815844838921761
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9733959555718242
  - 0.9650742558812205
  - 0.9779132927310892
  - 0.9716463492772514
  - 0.9550198378226179
  train_average_precision_macro_oob:
  - 0.9421559989462547
  - 0.9338894719327006
  - 0.9440758039792972
  - 0.934264168151863
  - 0.8979950744640585
  train_average_precision_micro:
  - 0.9531222511841911
  - 0.939340394814821
  - 0.9575680156415421
  - 0.9612906991241378
  - 0.9386045333639303
  train_average_precision_micro_oob:
  - 0.9311245331189931
  - 0.9144748487240391
  - 0.9383148528370605
  - 0.9348839861409588
  - 0.9094817070299853
  train_average_precision_samples:
  - 0.9708588957055214
  - 0.9690618762475048
  - 0.9756944444444444
  - 0.9693775100401607
  - 0.9603658536585366
  train_average_precision_samples_oob:
  - 0.9603271983640081
  - 0.9527944111776447
  - 0.9626984126984126
  - 0.9471887550200804
  - 0.942479674796748
  train_average_precision_weighted:
  - 0.970012898196356
  - 0.9611078824252376
  - 0.9755421304883154
  - 0.972915935747561
  - 0.9575235156656214
  train_average_precision_weighted_oob:
  - 0.9514778238423918
  - 0.9408731250355958
  - 0.9555240575719839
  - 0.9479552192402749
  - 0.9224092236812952
  train_f1_macro:
  - 0.950920245398773
  - 0.9530938123752494
  - 0.9593253968253967
  - 0.9538152610441767
  - 0.948170731707317
  train_f1_macro_oob:
  - 0.9355828220858894
  - 0.9331337325349301
  - 0.939484126984127
  - 0.9457831325301206
  - 0.9349593495934959
  train_f1_micro:
  - 0.950920245398773
  - 0.9530938123752495
  - 0.9593253968253969
  - 0.9538152610441767
  - 0.948170731707317
  train_f1_micro_oob:
  - 0.9355828220858896
  - 0.9331337325349301
  - 0.939484126984127
  - 0.9457831325301205
  - 0.9349593495934959
  train_f1_samples:
  - 0.950920245398773
  - 0.9530938123752495
  - 0.959325396825397
  - 0.9538152610441768
  - 0.948170731707317
  train_f1_samples_oob:
  - 0.9355828220858896
  - 0.9331337325349301
  - 0.9394841269841271
  - 0.9457831325301205
  - 0.934959349593496
  train_f1_weighted:
  - 0.9454567652534871
  - 0.9377482658445485
  - 0.9475134881538823
  - 0.954431587737087
  - 0.943719512195122
  train_f1_weighted_oob:
  - 0.9263498458627111
  - 0.9198138376711923
  - 0.9295390570021111
  - 0.9436061075987117
  - 0.9316768292682928
  train_jaccard_macro:
  - 0.9070442936346272
  - 0.9117298802514814
  - 0.922881358607533
  - 0.9118487885509546
  - 0.9017657635187716
  train_jaccard_macro_oob:
  - 0.8801400715791989
  - 0.8754441225399394
  - 0.8864149693657891
  - 0.8973091466184041
  - 0.8784697538869906
  train_jaccard_micro:
  - 0.9064327485380117
  - 0.9103908484270734
  - 0.9218303145853194
  - 0.9117082533589251
  - 0.9014492753623189
  train_jaccard_micro_oob:
  - 0.8789625360230547
  - 0.8746492048643593
  - 0.8858746492048644
  - 0.8971428571428571
  - 0.8778625954198473
  train_jaccard_samples:
  - 0.9200993280747882
  - 0.9245794126033646
  - 0.9336734693877551
  - 0.9258462421113024
  - 0.9159407665505227
  train_jaccard_samples_oob:
  - 0.8955594507741748
  - 0.8926432848588538
  - 0.9027777777777779
  - 0.9129374641422834
  - 0.8945993031358885
  train_jaccard_weighted:
  - 0.8970330413224088
  - 0.8836364959456959
  - 0.9008624303405143
  - 0.9129114796538891
  - 0.8936482834295306
  train_jaccard_weighted_oob:
  - 0.8637364633691563
  - 0.8521932886422531
  - 0.86884325774094
  - 0.8932959421733662
  - 0.8723502243462573
  train_label_ranking_average_precision_score:
  - 0.9708588957055214
  - 0.9690618762475048
  - 0.9756944444444444
  - 0.9693775100401604
  - 0.9603658536585364
  train_label_ranking_average_precision_score_oob:
  - 0.960327198364008
  - 0.9527944111776446
  - 0.9626984126984126
  - 0.9471887550200803
  - 0.942479674796748
  train_matthews_corrcoef_macro:
  - 0.6489170285551327
  - 0.8142286739694035
  - 0.8336486354276819
  - 0.6548080531678724
  - 0.6375084572141064
  train_matthews_corrcoef_macro_oob:
  - 0.5311278683281606
  - 0.585032943199351
  - 0.6130113710369803
  - 0.6210936436746347
  - 0.5106407786982016
  train_matthews_corrcoef_micro:
  - 0.8453665225152385
  - 0.8511030310736196
  - 0.8707377870361354
  - 0.8534734831798564
  - 0.8354282568764045
  train_matthews_corrcoef_micro_oob:
  - 0.7947862147149417
  - 0.7837283754649667
  - 0.8046196283217885
  - 0.8270790060412169
  - 0.7907548521603623
  train_matthews_corrcoef_samples:
  - 0.8372362317961706
  - 0.8585255202983617
  - 0.8709572766947934
  - 0.8414613064665936
  - 0.8168213282021828
  train_matthews_corrcoef_samples_oob:
  - 0.7633567918101566
  - 0.7536458133278985
  - 0.7720834198042109
  - 0.8068227522497261
  - 0.7453889436651867
  train_matthews_corrcoef_weighted:
  - 0.8132336429301145
  - 0.8276665721939973
  - 0.851167816608718
  - 0.8309707974084425
  - 0.8058324747036505
  train_matthews_corrcoef_weighted_oob:
  - 0.7319313228063365
  - 0.7400946412739119
  - 0.7671358654395692
  - 0.7989694581178346
  - 0.7308562411044864
  train_ndgc:
  - 0.9791855063737369
  - 0.9775805380436922
  - 0.9823918901219919
  - 0.978127090638928
  - 0.9714901399806232
  train_ndgc_oob:
  - 0.972017129868115
  - 0.9662424710135731
  - 0.9728876294805003
  - 0.9617108878147137
  - 0.9586336393488875
  train_neg_coverage_error:
  - -1.312883435582822
  - -1.2874251497005988
  - -1.2738095238095237
  - -1.2951807228915662
  - -1.3170731707317074
  train_neg_coverage_error_oob:
  - -1.3742331288343559
  - -1.3532934131736527
  - -1.3392857142857142
  - -1.3795180722891567
  - -1.4085365853658536
  train_neg_hamming_loss_macro:
  - -0.049079754601226995
  - -0.046906187624750496
  - -0.040674603174603176
  - -0.04618473895582329
  - -0.051829268292682924
  train_neg_hamming_loss_macro_oob:
  - -0.06441717791411043
  - -0.06686626746506985
  - -0.060515873015873016
  - -0.054216867469879505
  - -0.06504065040650407
  train_neg_hamming_loss_micro:
  - -0.049079754601226995
  - -0.046906187624750496
  - -0.040674603174603176
  - -0.04618473895582329
  - -0.051829268292682924
  train_neg_hamming_loss_micro_oob:
  - -0.06441717791411043
  - -0.06686626746506986
  - -0.060515873015873016
  - -0.05421686746987952
  - -0.06504065040650407
  train_neg_hamming_loss_samples:
  - -0.049079754601226995
  - -0.04690618762475049
  - -0.04067460317460317
  - -0.04618473895582329
  - -0.051829268292682924
  train_neg_hamming_loss_samples_oob:
  - -0.06441717791411043
  - -0.06686626746506985
  - -0.060515873015873
  - -0.05421686746987952
  - -0.06504065040650406
  train_neg_hamming_loss_weighted:
  - -0.05454323474651284
  - -0.06225173415545147
  - -0.05248651184611775
  - -0.04556841226291304
  - -0.05628048780487806
  train_neg_hamming_loss_weighted_oob:
  - -0.07365015413728901
  - -0.08018616232880774
  - -0.07046094299788883
  - -0.056393892401288316
  - -0.06832317073170731
  train_neg_label_ranking_loss:
  - -0.014877300613496932
  - -0.014670658682634731
  - -0.012119708994708997
  - -0.01460843373493976
  - -0.018750000000000003
  train_neg_label_ranking_loss_oob:
  - -0.02515337423312884
  - -0.026264138389886893
  - -0.024834656084656088
  - -0.030873493975903613
  - -0.035348915989159894
  train_precision_macro:
  - 0.950920245398773
  - 0.9530938123752494
  - 0.9593253968253967
  - 0.9538152610441767
  - 0.948170731707317
  train_precision_macro_oob:
  - 0.9355828220858894
  - 0.9331337325349301
  - 0.939484126984127
  - 0.9457831325301206
  - 0.9349593495934959
  train_precision_micro:
  - 0.950920245398773
  - 0.9530938123752495
  - 0.9593253968253969
  - 0.9538152610441767
  - 0.948170731707317
  train_precision_micro_oob:
  - 0.9355828220858896
  - 0.9331337325349301
  - 0.939484126984127
  - 0.9457831325301205
  - 0.9349593495934959
  train_precision_samples:
  - 0.950920245398773
  - 0.9530938123752495
  - 0.959325396825397
  - 0.9538152610441768
  - 0.948170731707317
  train_precision_samples_oob:
  - 0.9355828220858896
  - 0.9331337325349301
  - 0.9394841269841271
  - 0.9457831325301205
  - 0.934959349593496
  train_precision_weighted:
  - 0.9454567652534871
  - 0.9377482658445485
  - 0.9475134881538823
  - 0.954431587737087
  - 0.943719512195122
  train_precision_weighted_oob:
  - 0.9263498458627111
  - 0.9198138376711923
  - 0.9295390570021111
  - 0.9436061075987117
  - 0.9316768292682928
  train_recall_macro:
  - 0.950920245398773
  - 0.9530938123752494
  - 0.9593253968253967
  - 0.9538152610441767
  - 0.948170731707317
  train_recall_macro_oob:
  - 0.9355828220858894
  - 0.9331337325349301
  - 0.939484126984127
  - 0.9457831325301206
  - 0.9349593495934959
  train_recall_micro:
  - 0.950920245398773
  - 0.9530938123752495
  - 0.9593253968253969
  - 0.9538152610441767
  - 0.948170731707317
  train_recall_micro_oob:
  - 0.9355828220858896
  - 0.9331337325349301
  - 0.939484126984127
  - 0.9457831325301205
  - 0.9349593495934959
  train_recall_samples:
  - 0.950920245398773
  - 0.9530938123752495
  - 0.959325396825397
  - 0.9538152610441768
  - 0.948170731707317
  train_recall_samples_oob:
  - 0.9355828220858896
  - 0.9331337325349301
  - 0.9394841269841271
  - 0.9457831325301205
  - 0.934959349593496
  train_recall_weighted:
  - 0.9454567652534871
  - 0.9377482658445485
  - 0.9475134881538823
  - 0.954431587737087
  - 0.943719512195122
  train_recall_weighted_oob:
  - 0.9263498458627111
  - 0.9198138376711923
  - 0.9295390570021111
  - 0.9436061075987117
  - 0.9316768292682928
  train_roc_auc_macro:
  - 0.9910541283065912
  - 0.9880224822273206
  - 0.9921764388149622
  - 0.9917279217320937
  - 0.9885395153795365
  train_roc_auc_macro_oob:
  - 0.9768304990106014
  - 0.9719071134709383
  - 0.9803598064380957
  - 0.9749552561758393
  - 0.9675344418575033
  train_roc_auc_micro:
  - 0.9887499439738245
  - 0.9867574257425742
  - 0.9892574121102713
  - 0.9900865401401602
  - 0.9859343112244898
  train_roc_auc_micro_oob:
  - 0.977467872990261
  - 0.975575495049505
  - 0.9790533304776183
  - 0.9783213207970671
  - 0.971045918367347
  train_roc_auc_samples:
  - 0.985122699386503
  - 0.9853293413173654
  - 0.9878802910052911
  - 0.9853915662650603
  - 0.9812500000000001
  train_roc_auc_samples_oob:
  - 0.974846625766871
  - 0.973735861610113
  - 0.9751653439153439
  - 0.9691265060240963
  - 0.9646510840108401
  train_roc_auc_weighted:
  - 0.9857200331678777
  - 0.9826177206435346
  - 0.9882991404583067
  - 0.9890955925628534
  - 0.9840430183686955
  train_roc_auc_weighted_oob:
  - 0.9732324262240443
  - 0.9715726580139031
  - 0.9777876826116547
  - 0.9756683492090216
  - 0.9684260736414066
start: 2023-12-21 07:48:53.481991
wrapper: null
