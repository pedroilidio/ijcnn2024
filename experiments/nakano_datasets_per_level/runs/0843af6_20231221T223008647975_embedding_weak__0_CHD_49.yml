active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT/MzMzMzMz8v6CZmZmZmck/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAAAAAAAAAAAAAADAAAAAAAAACEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:30:16.829578
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__0
  params: {}
hash: 0843af6b8d92b0fddc19f5fead2684bcd25ea26fb17037be90b03d338671f37c
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0843af6_20231221T223008647975_embedding_weak__0_CHD_49.yml
results:
  fit_time:
  - 1.3978886604309082
  - 1.3722693920135498
  - 1.3175973892211914
  - 1.2712512016296387
  - 1.2753019332885742
  score_time:
  - 1.0230894088745117
  - 1.0430419445037842
  - 1.0771780014038086
  - 1.0430359840393066
  - 1.0414495468139648
  test_average_precision_macro:
  - 0.5510555395875351
  - 0.5193649595759141
  - 0.5561390941973776
  - 0.5468072462064358
  - 0.5550471529454685
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.704395894217305
  - 0.686387775836746
  - 0.7085840015722438
  - 0.7267746116633494
  - 0.7212655563525079
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7937500000000001
  - 0.7872872872872873
  - 0.796767453294002
  - 0.8004501028806585
  - 0.7970720720720722
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6745757308078285
  - 0.6295108203848055
  - 0.6697440900120921
  - 0.6850161028039448
  - 0.6802504441103342
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.7222222222222222
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.7222222222222222
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.722222222222222
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.675647088103534
  - 0.667196608373079
  - 0.6755368525280029
  - 0.6763497652582159
  - 0.6851256851256852
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5787989321870709
  - 0.5588165134270285
  - 0.5757597267576618
  - 0.5790505151017261
  - 0.5835880373314514
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5609756097560976
  - 0.5416666666666666
  - 0.5586206896551724
  - 0.5595667870036101
  - 0.5652173913043478
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6024350649350649
  - 0.5765804765804767
  - 0.5945638432364095
  - 0.5969135802469135
  - 0.5937404937404936
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5153880504456704
  - 0.5066102511210364
  - 0.514095420235416
  - 0.5168449134367036
  - 0.5270028343491319
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7937500000000002
  - 0.7872872872872878
  - 0.7967674532940017
  - 0.8189686213991771
  - 0.8060810810810811
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12374473327801787
  - 0.09624616202766788
  - 0.10994196983771272
  - 0.11439860249343557
  - 0.14213304414089725
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.42502414959968965
  - 0.3896770477053988
  - 0.41640279356957616
  - 0.42389917074910394
  - 0.430689987410474
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.44503021157025585
  - 0.39375124886314317
  - 0.4146641836915802
  - 0.4319607948907152
  - 0.4627959206073383
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.12169159892525357
  - 0.10331598430448519
  - 0.11719525076928766
  - 0.11786149042917933
  - 0.15674915327112887
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8659671184462197
  - 0.8599039570158682
  - 0.8677315656868982
  - 0.8683338172303051
  - 0.8665184965167764
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.75
  - -3.72972972972973
  - -3.6194690265486726
  - -3.6574074074074074
  - -3.6126126126126126
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.28125
  - -0.2972972972972973
  - -0.2831858407079646
  - -0.28240740740740744
  - -0.27777777777777773
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.28125
  - -0.2972972972972973
  - -0.2831858407079646
  - -0.2824074074074074
  - -0.2777777777777778
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.28125
  - -0.2972972972972973
  - -0.2831858407079646
  - -0.2824074074074074
  - -0.2777777777777778
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3243529118964659
  - -0.3328033916269211
  - -0.324463147471997
  - -0.323650234741784
  - -0.31487431487431483
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20438988095238095
  - -0.21281281281281283
  - -0.19982792527040316
  - -0.18647119341563786
  - -0.17520020020020016
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.7222222222222222
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.7222222222222222
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.722222222222222
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.675647088103534
  - 0.667196608373079
  - 0.6755368525280029
  - 0.6763497652582159
  - 0.6851256851256852
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.7222222222222222
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.7222222222222222
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.71875
  - 0.7027027027027027
  - 0.7168141592920354
  - 0.7175925925925926
  - 0.722222222222222
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.675647088103534
  - 0.667196608373079
  - 0.6755368525280029
  - 0.6763497652582159
  - 0.6851256851256852
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6014124505580302
  - 0.598644724588834
  - 0.6359905021424149
  - 0.5733790246953242
  - 0.6380801004326406
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7970948911715462
  - 0.7816765027121786
  - 0.79669437705152
  - 0.8006984212970127
  - 0.8094037541405962
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.795610119047619
  - 0.7871871871871872
  - 0.800172074729597
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6127860606010025
  - 0.5824214641511698
  - 0.6442700402870668
  - 0.6210723719567857
  - 0.6531642389574491
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9482941810349047
  - 0.9425884597749237
  - 0.9455668117283434
  - 0.945607156106763
  - 0.9451221415756429
  train_average_precision_macro_oob:
  - 0.526527531513126
  - 0.5358403501861839
  - 0.5124459804247193
  - 0.5122795133115733
  - 0.5089399781088959
  train_average_precision_micro:
  - 0.8812516961779979
  - 0.8840490619870561
  - 0.8805237829889537
  - 0.8766203341769865
  - 0.8762663941468021
  train_average_precision_micro_oob:
  - 0.6976564552117464
  - 0.713088585520027
  - 0.6947217030073405
  - 0.6883811901025252
  - 0.6855434339767654
  train_average_precision_samples:
  - 0.8616127414095812
  - 0.8677145895895896
  - 0.8665158371040724
  - 0.8609371116082526
  - 0.8612018268268269
  train_average_precision_samples_oob:
  - 0.7863587910709806
  - 0.7983076826826826
  - 0.7920060331825037
  - 0.7912689535172756
  - 0.7885166416416417
  train_average_precision_weighted:
  - 0.9496344487362195
  - 0.9449176650184071
  - 0.9474475359644972
  - 0.9473470165583462
  - 0.9473165626610396
  train_average_precision_weighted_oob:
  - 0.6431837045643953
  - 0.6670739351743417
  - 0.6354486095081453
  - 0.630260321150826
  - 0.6298872003353556
  train_f1_macro:
  - 0.8246802106847252
  - 0.8254504504504503
  - 0.8329562594268477
  - 0.831841909023117
  - 0.8209459459459459
  train_f1_macro_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865762
  - 0.7136465324384788
  - 0.7113363363363363
  train_f1_micro:
  - 0.8246802106847254
  - 0.8254504504504504
  - 0.8329562594268477
  - 0.831841909023117
  - 0.8209459459459459
  train_f1_micro_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865762
  - 0.7136465324384788
  - 0.7113363363363363
  train_f1_samples:
  - 0.8246802106847254
  - 0.8254504504504504
  - 0.8329562594268476
  - 0.831841909023117
  - 0.8209459459459459
  train_f1_samples_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865761
  - 0.7136465324384788
  - 0.7113363363363363
  train_f1_weighted:
  - 0.7938056324977575
  - 0.7936243329944117
  - 0.8022612589135534
  - 0.8001387492302536
  - 0.7893849346728928
  train_f1_weighted_oob:
  - 0.67316924108155
  - 0.678863903273352
  - 0.6680426902939992
  - 0.6737385902142818
  - 0.6699212301306543
  train_jaccard_macro:
  - 0.7084050575942817
  - 0.71000018806243
  - 0.720411869906001
  - 0.7184500966093306
  - 0.7032397427193461
  train_jaccard_macro_oob:
  - 0.5695732831833246
  - 0.579784505784048
  - 0.5682712322446286
  - 0.5721702068458624
  - 0.5699799355304817
  train_jaccard_micro:
  - 0.7016645326504481
  - 0.7027804410354745
  - 0.7137318255250404
  - 0.7120970315991063
  - 0.6962750716332379
  train_jaccard_micro_oob:
  - 0.5516637478108581
  - 0.5624633431085044
  - 0.5486131386861314
  - 0.5547826086956522
  - 0.5519953393533352
  train_jaccard_samples:
  - 0.7318606900999677
  - 0.7346525096525096
  - 0.744774833010127
  - 0.7435815489506763
  - 0.7297190047190046
  train_jaccard_samples_oob:
  - 0.5848455532428444
  - 0.597074022074022
  - 0.5826683120800767
  - 0.5915347143535062
  - 0.5895470145470144
  train_jaccard_weighted:
  - 0.6597094824889537
  - 0.6595620818883426
  - 0.6719476169463219
  - 0.6688140842499481
  - 0.6536136094777112
  train_jaccard_weighted_oob:
  - 0.5123700329671037
  - 0.5182676420531018
  - 0.5083279531407384
  - 0.5129415330432423
  - 0.5089804210792082
  train_label_ranking_average_precision_score:
  - 0.8683847504389259
  - 0.8744713463463456
  - 0.873303167420814
  - 0.8631742480735762
  - 0.8657063313313309
  train_label_ranking_average_precision_score_oob:
  - 0.7931308001003249
  - 0.8050644394394382
  - 0.7987933634992449
  - 0.7935060899825989
  - 0.7930211461461452
  train_matthews_corrcoef_macro:
  - 0.3914366310092094
  - 0.3869235862943328
  - 0.40923157942985705
  - 0.40883874782623836
  - 0.38079588449881313
  train_matthews_corrcoef_macro_oob:
  - 0.09825295826737405
  - 0.12403879626616938
  - 0.1015969629131927
  - 0.11414326096785066
  - 0.09940859648998339
  train_matthews_corrcoef_micro:
  - 0.6414833336717547
  - 0.6427057584233635
  - 0.6586784069913397
  - 0.656246489230569
  - 0.634293344577101
  train_matthews_corrcoef_micro_oob:
  - 0.4091660097076771
  - 0.42624356859281226
  - 0.40236901087349725
  - 0.41236500643904966
  - 0.4085896447490875
  train_matthews_corrcoef_samples:
  - 0.6413936924847845
  - 0.6416484695469697
  - 0.6564310251991049
  - 0.6562634274289478
  - 0.6256985286205801
  train_matthews_corrcoef_samples_oob:
  - 0.4203794679299034
  - 0.4379751698187053
  - 0.421933786429152
  - 0.4263133665127912
  - 0.42031320608706874
  train_matthews_corrcoef_weighted:
  - 0.41155039318366304
  - 0.4081052444313948
  - 0.4293076349017416
  - 0.42705818317066513
  - 0.4004236848464439
  train_matthews_corrcoef_weighted_oob:
  - 0.11001912394670482
  - 0.12848717465603549
  - 0.10448560012481324
  - 0.1193883354651256
  - 0.10076532217828847
  train_ndgc:
  - 0.9088591065913764
  - 0.9122452317727245
  - 0.9110800355639911
  - 0.907817183442001
  - 0.908282152610546
  train_ndgc_oob:
  - 0.8600697633789054
  - 0.8688638834704042
  - 0.8632350822023651
  - 0.8634086990431314
  - 0.8610559032325449
  train_neg_coverage_error:
  - -3.250564334085779
  - -3.2162162162162162
  - -3.251131221719457
  - -3.228187919463087
  - -3.2612612612612613
  train_neg_coverage_error_oob:
  - -3.7539503386004514
  - -3.6644144144144146
  - -3.7194570135746607
  - -3.675615212527964
  - -3.7432432432432434
  train_neg_hamming_loss_macro:
  - -0.17531978931527462
  - -0.17454954954954957
  - -0.16704374057315233
  - -0.16815809097688292
  - -0.17905405405405406
  train_neg_hamming_loss_macro_oob:
  - -0.28893905191873587
  - -0.28003003003003
  - -0.29147812971342385
  - -0.28635346756152125
  - -0.28866366366366364
  train_neg_hamming_loss_micro:
  - -0.17531978931527464
  - -0.17454954954954954
  - -0.16704374057315233
  - -0.16815809097688292
  - -0.17905405405405406
  train_neg_hamming_loss_micro_oob:
  - -0.28893905191873587
  - -0.28003003003003
  - -0.29147812971342385
  - -0.28635346756152125
  - -0.28866366366366364
  train_neg_hamming_loss_samples:
  - -0.17531978931527462
  - -0.17454954954954952
  - -0.16704374057315233
  - -0.16815809097688295
  - -0.17905405405405406
  train_neg_hamming_loss_samples_oob:
  - -0.28893905191873587
  - -0.28003003003003
  - -0.2914781297134238
  - -0.28635346756152125
  - -0.28866366366366364
  train_neg_hamming_loss_weighted:
  - -0.20619436750224254
  - -0.20637566700558826
  - -0.19773874108644665
  - -0.19986125076974642
  - -0.21061506532710722
  train_neg_hamming_loss_weighted_oob:
  - -0.32683075891845
  - -0.32113609672664795
  - -0.3319573097060008
  - -0.3262614097857182
  - -0.3300787698693458
  train_neg_label_ranking_loss:
  - -0.11293579132179585
  - -0.10914664664664664
  - -0.11199095022624435
  - -0.11524359930400198
  - -0.11632257257257259
  train_neg_label_ranking_loss_oob:
  - -0.20628918986706798
  - -0.19116616616616613
  - -0.2013700351935646
  - -0.20141063882674623
  - -0.2104104104104104
  train_precision_macro:
  - 0.8246802106847252
  - 0.8254504504504503
  - 0.8329562594268477
  - 0.831841909023117
  - 0.8209459459459459
  train_precision_macro_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865762
  - 0.7136465324384788
  - 0.7113363363363363
  train_precision_micro:
  - 0.8246802106847254
  - 0.8254504504504504
  - 0.8329562594268477
  - 0.831841909023117
  - 0.8209459459459459
  train_precision_micro_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865762
  - 0.7136465324384788
  - 0.7113363363363363
  train_precision_samples:
  - 0.8246802106847254
  - 0.8254504504504504
  - 0.8329562594268476
  - 0.831841909023117
  - 0.8209459459459459
  train_precision_samples_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865761
  - 0.7136465324384788
  - 0.7113363363363363
  train_precision_weighted:
  - 0.7938056324977575
  - 0.7936243329944117
  - 0.8022612589135534
  - 0.8001387492302536
  - 0.7893849346728928
  train_precision_weighted_oob:
  - 0.67316924108155
  - 0.678863903273352
  - 0.6680426902939992
  - 0.6737385902142818
  - 0.6699212301306543
  train_recall_macro:
  - 0.8246802106847252
  - 0.8254504504504503
  - 0.8329562594268477
  - 0.831841909023117
  - 0.8209459459459459
  train_recall_macro_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865762
  - 0.7136465324384788
  - 0.7113363363363363
  train_recall_micro:
  - 0.8246802106847254
  - 0.8254504504504504
  - 0.8329562594268477
  - 0.831841909023117
  - 0.8209459459459459
  train_recall_micro_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865762
  - 0.7136465324384788
  - 0.7113363363363363
  train_recall_samples:
  - 0.8246802106847254
  - 0.8254504504504504
  - 0.8329562594268476
  - 0.831841909023117
  - 0.8209459459459459
  train_recall_samples_oob:
  - 0.7110609480812641
  - 0.71996996996997
  - 0.7085218702865761
  - 0.7136465324384788
  - 0.7113363363363363
  train_recall_weighted:
  - 0.7938056324977575
  - 0.7936243329944117
  - 0.8022612589135534
  - 0.8001387492302536
  - 0.7893849346728928
  train_recall_weighted_oob:
  - 0.67316924108155
  - 0.678863903273352
  - 0.6680426902939992
  - 0.6737385902142818
  - 0.6699212301306543
  train_roc_auc_macro:
  - 0.9533349291906091
  - 0.9518315881024898
  - 0.9517740403113902
  - 0.9504674111111856
  - 0.9510080189032016
  train_roc_auc_macro_oob:
  - 0.5902768450087085
  - 0.6031631491957098
  - 0.5582240968291994
  - 0.5808435407406777
  - 0.5672240546944701
  train_roc_auc_micro:
  - 0.9080143847932187
  - 0.9110801074257565
  - 0.9068351376344534
  - 0.905619261887348
  - 0.9043927782261496
  train_roc_auc_micro_oob:
  - 0.7899883686363021
  - 0.7985341411547753
  - 0.7892131300278815
  - 0.7910611505072027
  - 0.7868481077563708
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9476613433382002
  - 0.9467768996096844
  - 0.947245425827649
  - 0.9455720171025185
  - 0.9460503010397299
  train_roc_auc_weighted_oob:
  - 0.5980175010553985
  - 0.6186971164895596
  - 0.5850031240237084
  - 0.5877826839054877
  - 0.5845268821135073
start: 2023-12-21 22:30:08.647975
wrapper: null
