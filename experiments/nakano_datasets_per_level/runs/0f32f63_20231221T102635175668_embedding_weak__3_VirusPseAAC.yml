active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2P8DMzMzMzAzAADMzMzMz479AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:26:54.033748
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__3
  params: {}
hash: 0f32f63905c93d40ab940b147fe09a8c1e43fc7778c1077c1d87ef9506ca3581
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0f32f63_20231221T102635175668_embedding_weak__3_VirusPseAAC.yml
results:
  fit_time:
  - 12.166450262069702
  - 12.12652063369751
  - 12.448167324066162
  - 12.495736122131348
  - 12.75206208229065
  score_time:
  - 1.5804531574249268
  - 1.5637474060058594
  - 1.7970950603485107
  - 1.7402095794677734
  - 1.727332592010498
  test_average_precision_macro:
  - 0.5305281291286428
  - 0.3724871433241266
  - 0.44139404387739106
  - 0.376143962550562
  - 0.3514005046898931
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5384958911495187
  - 0.3738409338630525
  - 0.4185416992890715
  - 0.4610962754031828
  - 0.49123688953888656
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7287698412698412
  - 0.6710416666666668
  - 0.6818518518518518
  - 0.6769841269841269
  - 0.6716374269005847
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5740613991551194
  - 0.3443414551693655
  - 0.4373255835352447
  - 0.46182051677021285
  - 0.4715106787554233
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8293650793650794
  - 0.7708333333333334
  - 0.8185185185185185
  - 0.7896825396825397
  - 0.7807017543859649
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8293650793650794
  - 0.7708333333333334
  - 0.8185185185185185
  - 0.7896825396825397
  - 0.7807017543859649
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8293650793650796
  - 0.7708333333333334
  - 0.8185185185185188
  - 0.7896825396825398
  - 0.7807017543859649
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7471428571428572
  - 0.6275
  - 0.7173333333333334
  - 0.6721611721611722
  - 0.6526315789473685
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7234174313693765
  - 0.6639236934513687
  - 0.7136067192834581
  - 0.6793880883845488
  - 0.6702007868674537
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7084745762711865
  - 0.6271186440677966
  - 0.6927899686520376
  - 0.6524590163934426
  - 0.6402877697841727
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7239229024943311
  - 0.6404761904761905
  - 0.707936507936508
  - 0.6626984126984128
  - 0.6535087719298246
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6084790698749508
  - 0.4841340133689141
  - 0.5765237158693265
  - 0.5272529335916508
  - 0.5048897028897028
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7287698412698411
  - 0.6710416666666666
  - 0.6818518518518518
  - 0.676984126984127
  - 0.6716374269005847
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11388849035479448
  - -0.02581736965466407
  - 0.050952149089243386
  - -0.0035373029998167407
  - 0.008569678774417668
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3332012939804271
  - 0.05854843440282089
  - 0.22970794845258594
  - 0.06808315577955494
  - 0.14529702559529747
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.18571428571428572
  - 0.04290569415042095
  - 0.15627678960074834
  - 0.03333333333333334
  - 0.08591871221229874
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23233252032378077
  - -0.052667434095514706
  - 0.10103068932744903
  - -0.007346706230388615
  - 0.01748214469981204
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7968344075060494
  - 0.753531428017982
  - 0.7639646102492336
  - 0.7595094715731081
  - 0.7587222217607552
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.0714285714285716
  - -2.325
  - -2.1333333333333333
  - -2.3095238095238093
  - -2.526315789473684
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1706349206349206
  - -0.22916666666666666
  - -0.18148148148148147
  - -0.21031746031746032
  - -0.2192982456140351
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17063492063492064
  - -0.22916666666666666
  - -0.1814814814814815
  - -0.21031746031746032
  - -0.21929824561403508
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1706349206349206
  - -0.22916666666666666
  - -0.18148148148148147
  - -0.2103174603174603
  - -0.21929824561403505
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.25285714285714284
  - -0.3725
  - -0.2826666666666667
  - -0.3278388278388278
  - -0.34736842105263155
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1821428571428571
  - -0.22125000000000003
  - -0.20499999999999996
  - -0.21335978835978833
  - -0.23114035087719298
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8293650793650794
  - 0.7708333333333334
  - 0.8185185185185185
  - 0.7896825396825397
  - 0.7807017543859649
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8293650793650794
  - 0.7708333333333334
  - 0.8185185185185185
  - 0.7896825396825397
  - 0.7807017543859649
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8293650793650796
  - 0.7708333333333334
  - 0.8185185185185188
  - 0.7896825396825398
  - 0.7807017543859649
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7471428571428572
  - 0.6275
  - 0.7173333333333334
  - 0.6721611721611722
  - 0.6526315789473685
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8293650793650794
  - 0.7708333333333334
  - 0.8185185185185185
  - 0.7896825396825397
  - 0.7807017543859649
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8293650793650794
  - 0.7708333333333334
  - 0.8185185185185185
  - 0.7896825396825397
  - 0.7807017543859649
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8293650793650796
  - 0.7708333333333334
  - 0.8185185185185188
  - 0.7896825396825398
  - 0.7807017543859649
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7471428571428572
  - 0.6275
  - 0.7173333333333334
  - 0.6721611721611722
  - 0.6526315789473685
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7310606581814012
  - 0.5301040870893812
  - 0.7062740723067966
  - 0.6371288232641984
  - 0.6489613936245815
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8200000000000001
  - 0.7527368421052631
  - 0.7957272727272727
  - 0.798076923076923
  - 0.7912359550561798
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8178571428571428
  - 0.7787499999999999
  - 0.7949999999999998
  - 0.7866402116402117
  - 0.768859649122807
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7204280701754385
  - 0.4622727272727273
  - 0.6408244349011458
  - 0.6427354443801813
  - 0.6277093330793521
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9331531124883371
  - 0.9282106536000692
  - 0.935878200016579
  - 0.9749913576430482
  - 0.9407289438393498
  train_average_precision_macro_oob:
  - 0.3829638378834496
  - 0.46004185059311653
  - 0.397388981345028
  - 0.37426291908538983
  - 0.4277353665372001
  train_average_precision_micro:
  - 0.8809152902995578
  - 0.9174512925110037
  - 0.86245960248883
  - 0.9070020827214669
  - 0.870192257197352
  train_average_precision_micro_oob:
  - 0.5780965191245289
  - 0.6496025021101843
  - 0.5691593494339513
  - 0.5520492804844203
  - 0.5739087881875199
  train_average_precision_samples:
  - 0.9034848484848484
  - 0.905688622754491
  - 0.8847736625514402
  - 0.8838383838383838
  - 0.8808678500986193
  train_average_precision_samples_oob:
  - 0.7102861952861953
  - 0.7471889554224883
  - 0.7083676268861454
  - 0.7313468013468013
  - 0.7440828402366864
  train_average_precision_weighted:
  - 0.9608696334156297
  - 0.9760131253318574
  - 0.9574425811221022
  - 0.9940708339003618
  - 0.9558994948074095
  train_average_precision_weighted_oob:
  - 0.5474878692553701
  - 0.6296946150180741
  - 0.5450309261766493
  - 0.5116831711760508
  - 0.5612319298907444
  train_f1_macro:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572017
  - 0.9222222222222224
  - 0.9250493096646943
  train_f1_macro_oob:
  - 0.8181818181818182
  - 0.840319361277445
  - 0.8240740740740741
  - 0.8141414141414142
  - 0.8224852071005916
  train_f1_micro:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572016
  - 0.9222222222222223
  - 0.9250493096646942
  train_f1_micro_oob:
  - 0.8181818181818182
  - 0.8403193612774451
  - 0.8240740740740741
  - 0.8141414141414142
  - 0.8224852071005917
  train_f1_samples:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572016
  - 0.9222222222222224
  - 0.9250493096646943
  train_f1_samples_oob:
  - 0.818181818181818
  - 0.840319361277445
  - 0.8240740740740741
  - 0.814141414141414
  - 0.8224852071005917
  train_f1_weighted:
  - 0.9474347434743474
  - 0.9392304499911068
  - 0.9422136658110254
  - 0.9363333333333332
  - 0.9415607241197493
  train_f1_weighted_oob:
  - 0.724932493249325
  - 0.770646825161558
  - 0.7389072240557388
  - 0.7153333333333333
  - 0.7348995254555041
  train_jaccard_macro:
  - 0.8687012959937279
  - 0.8604694261992526
  - 0.8626793500784267
  - 0.8589970153803318
  - 0.863675617288334
  train_jaccard_macro_oob:
  - 0.7104148937440823
  - 0.7358376011901586
  - 0.7166015273209068
  - 0.706460783496274
  - 0.7147001522540983
  train_jaccard_micro:
  - 0.864406779661017
  - 0.8572752548656163
  - 0.858508604206501
  - 0.8556701030927835
  - 0.8605504587155963
  train_jaccard_micro_oob:
  - 0.6923076923076923
  - 0.7246127366609294
  - 0.7007874015748031
  - 0.686541737649063
  - 0.6984924623115578
  train_jaccard_samples:
  - 0.8792207792207791
  - 0.8735386370116909
  - 0.8747795414462082
  - 0.8705627705627703
  - 0.8765849535080305
  train_jaccard_samples_oob:
  - 0.7047619047619049
  - 0.7416595380667237
  - 0.7178130511463845
  - 0.6971139971139971
  - 0.7128768667230206
  train_jaccard_weighted:
  - 0.9045045328104461
  - 0.8886787667533552
  - 0.8949914403189899
  - 0.8836076310102149
  - 0.8926151764137514
  train_jaccard_weighted_oob:
  - 0.5817419390641284
  - 0.6348683894940731
  - 0.5974206576816165
  - 0.5717147738673577
  - 0.5931506597175749
  train_label_ranking_average_precision_score:
  - 0.9034848484848484
  - 0.9056886227544908
  - 0.8847736625514404
  - 0.8838383838383841
  - 0.8808678500986196
  train_label_ranking_average_precision_score_oob:
  - 0.7102861952861952
  - 0.7471889554224882
  - 0.7083676268861453
  - 0.7313468013468013
  - 0.7440828402366864
  train_matthews_corrcoef_macro:
  - 0.31876532995699525
  - 0.30912095091383934
  - 0.31438381053720793
  - 0.30695117174420977
  - 0.31095895022345804
  train_matthews_corrcoef_macro_oob:
  - 0.09002459360970443
  - 0.14198470412888375
  - 0.1071127006509574
  - 0.07633803136528405
  - 0.09087040555782332
  train_matthews_corrcoef_micro:
  - 0.7667997840310703
  - 0.7513192539661606
  - 0.7578693423683023
  - 0.7485857484866848
  - 0.7536174679653457
  train_matthews_corrcoef_micro_oob:
  - 0.29137044197605144
  - 0.4088660922461597
  - 0.3483900914108011
  - 0.24773785943341523
  - 0.29370405946598277
  train_matthews_corrcoef_samples:
  - 0.6534179674724601
  - 0.649127092502218
  - 0.6417519236565113
  - 0.6392963246994184
  - 0.6504237628120453
  train_matthews_corrcoef_samples_oob:
  - 0.15599583868971542
  - 0.2648334654145852
  - 0.23203374311360564
  - 0.11007441006162656
  - 0.1678241281666768
  train_matthews_corrcoef_weighted:
  - 0.6488575571905275
  - 0.6294914466286791
  - 0.6398185606801268
  - 0.6266027234527232
  - 0.6324213134278487
  train_matthews_corrcoef_weighted_oob:
  - 0.1821937815379313
  - 0.2894289396426233
  - 0.21756406759023642
  - 0.15489064194887514
  - 0.19011640337378385
  train_ndgc:
  - 0.9298665165806994
  - 0.9316422845311944
  - 0.9162528409398997
  - 0.9160502960537542
  - 0.9127314817343345
  train_ndgc_oob:
  - 0.7852566167790693
  - 0.8120976948320614
  - 0.7826939411857812
  - 0.8004478546980736
  - 0.8088373876562965
  train_neg_coverage_error:
  - -1.5454545454545454
  - -1.4970059880239521
  - -1.6049382716049383
  - -1.5757575757575757
  - -1.532544378698225
  train_neg_coverage_error_oob:
  - -2.290909090909091
  - -2.1317365269461077
  - -2.308641975308642
  - -2.187878787878788
  - -2.1124260355029585
  train_neg_hamming_loss_macro:
  - -0.07272727272727274
  - -0.07684630738522953
  - -0.07613168724279835
  - -0.07777777777777778
  - -0.07495069033530571
  train_neg_hamming_loss_macro_oob:
  - -0.1818181818181818
  - -0.15968063872255486
  - -0.17592592592592593
  - -0.18585858585858583
  - -0.1775147928994083
  train_neg_hamming_loss_micro:
  - -0.07272727272727272
  - -0.07684630738522955
  - -0.07613168724279835
  - -0.07777777777777778
  - -0.07495069033530571
  train_neg_hamming_loss_micro_oob:
  - -0.18181818181818182
  - -0.1596806387225549
  - -0.17592592592592593
  - -0.18585858585858586
  - -0.17751479289940827
  train_neg_hamming_loss_samples:
  - -0.07272727272727272
  - -0.07684630738522953
  - -0.07613168724279834
  - -0.07777777777777777
  - -0.07495069033530571
  train_neg_hamming_loss_samples_oob:
  - -0.18181818181818182
  - -0.15968063872255486
  - -0.17592592592592593
  - -0.18585858585858583
  - -0.17751479289940827
  train_neg_hamming_loss_weighted:
  - -0.05256525652565256
  - -0.0607695500088931
  - -0.05778633418897445
  - -0.06366666666666666
  - -0.05843927588025075
  train_neg_hamming_loss_weighted_oob:
  - -0.27506750675067504
  - -0.22935317483844192
  - -0.2610927759442611
  - -0.2846666666666666
  - -0.26510047454449587
  train_neg_label_ranking_loss:
  - -0.06188552188552189
  - -0.05508982035928144
  - -0.06843278463648834
  - -0.0684006734006734
  - -0.0661242603550296
  train_neg_label_ranking_loss_oob:
  - -0.20905723905723908
  - -0.18349966733200265
  - -0.21147119341563786
  - -0.1940740740740741
  - -0.18556870479947404
  train_precision_macro:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572017
  - 0.9222222222222224
  - 0.9250493096646943
  train_precision_macro_oob:
  - 0.8181818181818182
  - 0.840319361277445
  - 0.8240740740740741
  - 0.8141414141414142
  - 0.8224852071005916
  train_precision_micro:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572016
  - 0.9222222222222223
  - 0.9250493096646942
  train_precision_micro_oob:
  - 0.8181818181818182
  - 0.8403193612774451
  - 0.8240740740740741
  - 0.8141414141414142
  - 0.8224852071005917
  train_precision_samples:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572016
  - 0.9222222222222224
  - 0.9250493096646943
  train_precision_samples_oob:
  - 0.818181818181818
  - 0.840319361277445
  - 0.8240740740740741
  - 0.814141414141414
  - 0.8224852071005917
  train_precision_weighted:
  - 0.9474347434743474
  - 0.9392304499911068
  - 0.9422136658110254
  - 0.9363333333333332
  - 0.9415607241197493
  train_precision_weighted_oob:
  - 0.724932493249325
  - 0.770646825161558
  - 0.7389072240557388
  - 0.7153333333333333
  - 0.7348995254555041
  train_recall_macro:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572017
  - 0.9222222222222224
  - 0.9250493096646943
  train_recall_macro_oob:
  - 0.8181818181818182
  - 0.840319361277445
  - 0.8240740740740741
  - 0.8141414141414142
  - 0.8224852071005916
  train_recall_micro:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572016
  - 0.9222222222222223
  - 0.9250493096646942
  train_recall_micro_oob:
  - 0.8181818181818182
  - 0.8403193612774451
  - 0.8240740740740741
  - 0.8141414141414142
  - 0.8224852071005917
  train_recall_samples:
  - 0.9272727272727272
  - 0.9231536926147704
  - 0.9238683127572016
  - 0.9222222222222224
  - 0.9250493096646943
  train_recall_samples_oob:
  - 0.818181818181818
  - 0.840319361277445
  - 0.8240740740740741
  - 0.814141414141414
  - 0.8224852071005917
  train_recall_weighted:
  - 0.9474347434743474
  - 0.9392304499911068
  - 0.9422136658110254
  - 0.9363333333333332
  - 0.9415607241197493
  train_recall_weighted_oob:
  - 0.724932493249325
  - 0.770646825161558
  - 0.7389072240557388
  - 0.7153333333333333
  - 0.7348995254555041
  train_roc_auc_macro:
  - 0.9936459679691781
  - 0.9957707544938504
  - 0.9912949812247008
  - 0.9986117280861085
  - 0.9938233977653912
  train_roc_auc_macro_oob:
  - 0.6880609242998029
  - 0.7653282997333113
  - 0.676297390302845
  - 0.6678208375857747
  - 0.7306102082262756
  train_roc_auc_micro:
  - 0.9577574508719908
  - 0.9668873762376238
  - 0.954069692683554
  - 0.9612341772151899
  - 0.9618470467736429
  train_roc_auc_micro_oob:
  - 0.8148841533899583
  - 0.8383910891089108
  - 0.813051305130513
  - 0.8049620253164557
  - 0.8265436765351412
  train_roc_auc_samples:
  - 0.9381144781144781
  - 0.9449101796407187
  - 0.9315672153635117
  - 0.9315993265993266
  - 0.9338757396449705
  train_roc_auc_samples_oob:
  - 0.790942760942761
  - 0.8165003326679974
  - 0.7885288065843621
  - 0.805925925925926
  - 0.8144312952005259
  train_roc_auc_weighted:
  - 0.993122007231549
  - 0.9984475403252245
  - 0.9861052807949068
  - 0.9995568475585752
  - 0.9911879259821407
  train_roc_auc_weighted_oob:
  - 0.7345671032173411
  - 0.7925032979707163
  - 0.7184451642723915
  - 0.6857552432558609
  - 0.7536182099859056
start: 2023-12-21 10:26:35.175668
wrapper: null
