active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AmpmZmZnZP4BmZmZmZvY/ADMzMzMz47/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:26:01.385209
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__5
  params: {}
hash: f971a9bc9c1032eac157b1163be6be5e1515aa239b4c76743abd3d2ffb9d6dac
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f971a9b_20231221T082541412748_embedding__5_VirusGO.yml
results:
  fit_time:
  - 11.805206775665283
  - 12.115428447723389
  - 12.250738620758057
  - 12.304332733154297
  - 12.04497504234314
  score_time:
  - 2.2554783821105957
  - 2.2407541275024414
  - 2.2519843578338623
  - 2.2571253776550293
  - 2.3095195293426514
  test_average_precision_macro:
  - 0.9686167569285674
  - 0.9660850571738844
  - 0.9334567449403091
  - 0.9366765486985057
  - 0.8285591002467356
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9149714002540701
  - 0.9478666118792887
  - 0.9355916178313206
  - 0.8817593714448999
  - 0.8060144290399016
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9462499999999998
  - 0.9369918699186991
  - 0.94375
  - 0.9107142857142857
  - 0.9446969696969696
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9617688215637132
  - 0.9716627229839304
  - 0.9618215234811874
  - 0.9193715047599562
  - 0.8435947560582892
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7916666666666666
  - 0.7967479674796748
  - 0.7958333333333334
  - 0.7976190476190476
  - 0.8030303030303031
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7916666666666666
  - 0.7967479674796748
  - 0.7958333333333333
  - 0.7976190476190477
  - 0.803030303030303
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7916666666666667
  - 0.7967479674796749
  - 0.7958333333333334
  - 0.7976190476190478
  - 0.8030303030303032
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.669
  - 0.6829268292682927
  - 0.6698979591836733
  - 0.6904761904761905
  - 0.6949300699300699
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6829320969220402
  - 0.6872813744318119
  - 0.688955187866836
  - 0.6871680272564576
  - 0.6945296884225528
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6551724137931034
  - 0.6621621621621622
  - 0.6608996539792388
  - 0.6633663366336634
  - 0.6708860759493671
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6619047619047619
  - 0.6684088269454124
  - 0.6660714285714286
  - 0.6683673469387756
  - 0.6764069264069265
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5219259347742071
  - 0.5385756377954846
  - 0.5234847941216194
  - 0.5457579829680919
  - 0.5508492741624239
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9462499999999998
  - 0.9369918699186993
  - 0.94375
  - 0.9107142857142859
  - 0.9446969696969696
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9650719537838917
  - 0.9544450739170772
  - 0.9603750699684295
  - 0.9354760893401927
  - 0.9628120839767068
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.525
  - -1.4390243902439024
  - -1.475
  - -1.5
  - -1.4772727272727273
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20833333333333334
  - -0.2032520325203252
  - -0.2041666666666667
  - -0.2023809523809524
  - -0.19696969696969693
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20833333333333334
  - -0.2032520325203252
  - -0.20416666666666666
  - -0.20238095238095238
  - -0.19696969696969696
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20833333333333331
  - -0.20325203252032517
  - -0.20416666666666666
  - -0.20238095238095233
  - -0.1969696969696969
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33099999999999996
  - -0.3170731707317073
  - -0.3301020408163265
  - -0.30952380952380953
  - -0.30506993006993005
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04055555555555555
  - -0.041463414634146344
  - -0.044375
  - -0.05297619047619047
  - -0.04797979797979798
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7916666666666666
  - 0.7967479674796748
  - 0.7958333333333334
  - 0.7976190476190476
  - 0.8030303030303031
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7916666666666666
  - 0.7967479674796748
  - 0.7958333333333333
  - 0.7976190476190477
  - 0.803030303030303
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7916666666666667
  - 0.7967479674796749
  - 0.7958333333333334
  - 0.7976190476190478
  - 0.8030303030303032
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.669
  - 0.6829268292682927
  - 0.6698979591836733
  - 0.6904761904761905
  - 0.6949300699300699
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7916666666666666
  - 0.7967479674796748
  - 0.7958333333333334
  - 0.7976190476190476
  - 0.8030303030303031
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7916666666666666
  - 0.7967479674796748
  - 0.7958333333333333
  - 0.7976190476190477
  - 0.803030303030303
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7916666666666667
  - 0.7967479674796749
  - 0.7958333333333334
  - 0.7976190476190478
  - 0.8030303030303032
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.669
  - 0.6829268292682927
  - 0.6698979591836733
  - 0.6904761904761905
  - 0.6949300699300699
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9881093299062048
  - 0.9924312968430615
  - 0.9650350478355594
  - 0.9747978138623871
  - 0.9509800430143566
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9712631578947368
  - 0.9827551020408163
  - 0.9669836520995833
  - 0.9675153643546971
  - 0.9494738751814223
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9594444444444445
  - 0.9585365853658536
  - 0.9556250000000001
  - 0.9470238095238097
  - 0.952020202020202
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9803156565656566
  - 0.9905070785070785
  - 0.9788031154490782
  - 0.956951201533245
  - 0.9432171816787202
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9542007523871671
  - 0.9456558994610393
  - 0.9664709669156214
  - 0.9666670068242839
  - 0.9561953340999114
  train_average_precision_macro_oob:
  - 0.868332688376635
  - 0.9057396646021387
  - 0.8968545643312199
  - 0.8975064493888958
  - 0.8780650688039241
  train_average_precision_micro:
  - 0.93052345379342
  - 0.9308147293508694
  - 0.9479034959345909
  - 0.9281625699285161
  - 0.9367848746325773
  train_average_precision_micro_oob:
  - 0.8459053168282342
  - 0.8575708417730357
  - 0.8666413527707113
  - 0.8503084205839053
  - 0.8546233028448017
  train_average_precision_samples:
  - 0.9609780439121756
  - 0.9459839357429719
  - 0.9597804391217565
  - 0.9521212121212123
  - 0.949284253578732
  train_average_precision_samples_oob:
  - 0.9045908183632735
  - 0.9055220883534136
  - 0.9074850299401198
  - 0.9308080808080806
  - 0.9077709611451941
  train_average_precision_weighted:
  - 0.9512423799249412
  - 0.9493248531435858
  - 0.9632179848254375
  - 0.9596334007382014
  - 0.9578877169993634
  train_average_precision_weighted_oob:
  - 0.8662270264600123
  - 0.9001107502081742
  - 0.8952542188263196
  - 0.8890943237086467
  - 0.8818610776970661
  train_f1_macro:
  - 0.8013972055888224
  - 0.7991967871485944
  - 0.7974051896207585
  - 0.801010101010101
  - 0.7955010224948875
  train_f1_macro_oob:
  - 0.8023952095808383
  - 0.8002008032128513
  - 0.7974051896207585
  - 0.797979797979798
  - 0.7955010224948875
  train_f1_micro:
  - 0.8013972055888223
  - 0.7991967871485943
  - 0.7974051896207585
  - 0.8010101010101011
  - 0.7955010224948875
  train_f1_micro_oob:
  - 0.8023952095808383
  - 0.8002008032128514
  - 0.7974051896207585
  - 0.797979797979798
  - 0.7955010224948875
  train_f1_samples:
  - 0.8013972055888222
  - 0.7991967871485941
  - 0.7974051896207582
  - 0.8010101010101007
  - 0.7955010224948875
  train_f1_samples_oob:
  - 0.8023952095808381
  - 0.8002008032128513
  - 0.7974051896207582
  - 0.7979797979797978
  - 0.7955010224948875
  train_f1_weighted:
  - 0.6912610422718919
  - 0.685911964690445
  - 0.6849945429338367
  - 0.6880747776270163
  - 0.6787116564417178
  train_f1_weighted_oob:
  - 0.6933064563941425
  - 0.6881784563998569
  - 0.6849945429338367
  - 0.6820141715664103
  - 0.6787116564417178
  train_jaccard_macro:
  - 0.6925227321182947
  - 0.6904667597705968
  - 0.6880160110395374
  - 0.6926009720805931
  - 0.6864806044012582
  train_jaccard_macro_oob:
  - 0.6935525283789628
  - 0.6914294780170859
  - 0.6880160110395374
  - 0.6894681400003927
  - 0.6864806044012582
  train_jaccard_micro:
  - 0.668609492089925
  - 0.6655518394648829
  - 0.6630705394190871
  - 0.6680707666385847
  - 0.6604414261460102
  train_jaccard_micro_oob:
  - 0.67
  - 0.6669456066945607
  - 0.6630705394190871
  - 0.6638655462184874
  - 0.6604414261460102
  train_jaccard_samples:
  - 0.6750784145993728
  - 0.6718301778542743
  - 0.6689478186484175
  - 0.6753246753246754
  - 0.6662284545720129
  train_jaccard_samples_oob:
  - 0.6767892785856858
  - 0.6735513482501435
  - 0.6689478186484175
  - 0.6701298701298702
  - 0.6662284545720129
  train_jaccard_weighted:
  - 0.5464982752575153
  - 0.5404433967472504
  - 0.5399406745733182
  - 0.5428582652956386
  - 0.5331098444778465
  train_jaccard_weighted_oob:
  - 0.5486088477917554
  - 0.5426283069632198
  - 0.5399406745733182
  - 0.5365926011352377
  - 0.5331098444778465
  train_label_ranking_average_precision_score:
  - 0.9609780439121756
  - 0.9459839357429719
  - 0.9597804391217563
  - 0.952121212121212
  - 0.9492842535787323
  train_label_ranking_average_precision_score_oob:
  - 0.9045908183632735
  - 0.9055220883534136
  - 0.9074850299401197
  - 0.9308080808080809
  - 0.9077709611451943
  train_matthews_corrcoef_macro:
  - 0.02686432577841273
  - 0.022372886497647588
  - 0.0
  - 0.03177177247169604
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.031115260089073296
  - 0.026479036074715783
  - 0.0
  - 0.01573991787664664
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.10905540426779359
  - 0.0889316545087057
  - 0.0
  - 0.12619205451224627
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.12598940757085872
  - 0.10897341715965854
  - 0.0
  - 0.06300025787040454
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.017964071856287425
  - 0.012048192771084338
  - 0.0
  - 0.024242424242424242
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.023952095808383235
  - 0.018072289156626505
  - 0.0
  - 0.006060606060606061
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.05505856867456867
  - 0.04452425926759569
  - 0.0
  - 0.06354354494339208
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.06377087958849675
  - 0.055055421541488264
  - 0.0
  - 0.03147983575329328
  - 0.0
  train_ndgc:
  - 0.971616924482959
  - 0.9605330477018849
  - 0.970606357960542
  - 0.9662067130173044
  - 0.9641608045208152
  train_ndgc_oob:
  - 0.9311685488149799
  - 0.9323624980444319
  - 0.9334682574234884
  - 0.9516997065032654
  - 0.9346424964888614
  train_neg_coverage_error:
  - -1.3353293413173652
  - -1.3734939759036144
  - -1.3293413173652695
  - -1.387878787878788
  - -1.392638036809816
  train_neg_coverage_error_oob:
  - -1.532934131736527
  - -1.5421686746987953
  - -1.5209580838323353
  - -1.4848484848484849
  - -1.5582822085889572
  train_neg_hamming_loss_macro:
  - -0.19860279441117765
  - -0.20080321285140565
  - -0.20259481037924154
  - -0.19898989898989897
  - -0.2044989775051125
  train_neg_hamming_loss_macro_oob:
  - -0.19760479041916168
  - -0.1997991967871486
  - -0.20259481037924154
  - -0.20202020202020202
  - -0.2044989775051125
  train_neg_hamming_loss_micro:
  - -0.19860279441117765
  - -0.20080321285140562
  - -0.2025948103792415
  - -0.198989898989899
  - -0.20449897750511248
  train_neg_hamming_loss_micro_oob:
  - -0.19760479041916168
  - -0.19979919678714858
  - -0.2025948103792415
  - -0.20202020202020202
  - -0.20449897750511248
  train_neg_hamming_loss_samples:
  - -0.19860279441117767
  - -0.20080321285140565
  - -0.20259481037924149
  - -0.198989898989899
  - -0.20449897750511248
  train_neg_hamming_loss_samples_oob:
  - -0.19760479041916168
  - -0.19979919678714864
  - -0.20259481037924149
  - -0.202020202020202
  - -0.20449897750511248
  train_neg_hamming_loss_weighted:
  - -0.30873895772810817
  - -0.31408803530955504
  - -0.31500545706616323
  - -0.31192522237298353
  - -0.32128834355828223
  train_neg_hamming_loss_weighted_oob:
  - -0.3066935436058576
  - -0.31182154360014314
  - -0.31500545706616323
  - -0.31798582843358963
  - -0.32128834355828223
  train_neg_label_ranking_loss:
  - -0.023952095808383235
  - -0.0302710843373494
  - -0.022455089820359285
  - -0.02961279461279461
  - -0.02883435582822086
  train_neg_label_ranking_loss_oob:
  - -0.060479041916167674
  - -0.058952476572958504
  - -0.05612109115103127
  - -0.04505050505050505
  - -0.05835037491479211
  train_precision_macro:
  - 0.8013972055888224
  - 0.7991967871485944
  - 0.7974051896207585
  - 0.801010101010101
  - 0.7955010224948875
  train_precision_macro_oob:
  - 0.8023952095808383
  - 0.8002008032128513
  - 0.7974051896207585
  - 0.797979797979798
  - 0.7955010224948875
  train_precision_micro:
  - 0.8013972055888223
  - 0.7991967871485943
  - 0.7974051896207585
  - 0.8010101010101011
  - 0.7955010224948875
  train_precision_micro_oob:
  - 0.8023952095808383
  - 0.8002008032128514
  - 0.7974051896207585
  - 0.797979797979798
  - 0.7955010224948875
  train_precision_samples:
  - 0.8013972055888222
  - 0.7991967871485941
  - 0.7974051896207582
  - 0.8010101010101007
  - 0.7955010224948875
  train_precision_samples_oob:
  - 0.8023952095808381
  - 0.8002008032128513
  - 0.7974051896207582
  - 0.7979797979797978
  - 0.7955010224948875
  train_precision_weighted:
  - 0.6912610422718919
  - 0.685911964690445
  - 0.6849945429338367
  - 0.6880747776270163
  - 0.6787116564417178
  train_precision_weighted_oob:
  - 0.6933064563941425
  - 0.6881784563998569
  - 0.6849945429338367
  - 0.6820141715664103
  - 0.6787116564417178
  train_recall_macro:
  - 0.8013972055888224
  - 0.7991967871485944
  - 0.7974051896207585
  - 0.801010101010101
  - 0.7955010224948875
  train_recall_macro_oob:
  - 0.8023952095808383
  - 0.8002008032128513
  - 0.7974051896207585
  - 0.797979797979798
  - 0.7955010224948875
  train_recall_micro:
  - 0.8013972055888223
  - 0.7991967871485943
  - 0.7974051896207585
  - 0.8010101010101011
  - 0.7955010224948875
  train_recall_micro_oob:
  - 0.8023952095808383
  - 0.8002008032128514
  - 0.7974051896207585
  - 0.797979797979798
  - 0.7955010224948875
  train_recall_samples:
  - 0.8013972055888222
  - 0.7991967871485941
  - 0.7974051896207582
  - 0.8010101010101007
  - 0.7955010224948875
  train_recall_samples_oob:
  - 0.8023952095808381
  - 0.8002008032128513
  - 0.7974051896207582
  - 0.7979797979797978
  - 0.7955010224948875
  train_recall_weighted:
  - 0.6912610422718919
  - 0.685911964690445
  - 0.6849945429338367
  - 0.6880747776270163
  - 0.6787116564417178
  train_recall_weighted_oob:
  - 0.6933064563941425
  - 0.6881784563998569
  - 0.6849945429338367
  - 0.6820141715664103
  - 0.6787116564417178
  train_roc_auc_macro:
  - 0.9806844733077664
  - 0.9763195579711416
  - 0.9887582467387156
  - 0.9880645238464645
  - 0.9862991446369049
  train_roc_auc_macro_oob:
  - 0.9512160096185563
  - 0.9661123098140126
  - 0.9733297775299169
  - 0.9622079491601121
  - 0.9611203429704632
  train_roc_auc_micro:
  - 0.9810024752475247
  - 0.9771055191161433
  - 0.9857703903278112
  - 0.9799450151019301
  - 0.9806715938303343
  train_roc_auc_micro_oob:
  - 0.9567017326732673
  - 0.9584195825124073
  - 0.9633162142333089
  - 0.9590766068264508
  - 0.9572300771208226
  train_roc_auc_samples:
  - 0.9760479041916168
  - 0.9697289156626505
  - 0.9775449101796407
  - 0.9703872053872055
  - 0.9711656441717792
  train_roc_auc_samples_oob:
  - 0.9395209580838322
  - 0.9410475234270416
  - 0.9438789088489689
  - 0.9549494949494949
  - 0.9416496250852079
  train_roc_auc_weighted:
  - 0.9770405468195178
  - 0.9730397641832528
  - 0.9828750438359696
  - 0.9808701197334431
  - 0.9825570839843936
  train_roc_auc_weighted_oob:
  - 0.9483109642426517
  - 0.9536316662241763
  - 0.961797878932439
  - 0.9580116453723764
  - 0.9563568711088256
start: 2023-12-21 08:25:41.412748
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
