active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMDAmZmZmZkRQIDMzMzMzAzAwJmZmZmZEUAAmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 19:52:51.255494
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__6
  params: {}
hash: b1f00fe381435ab9a877fc4326b8b0b4dfbcc1a20139fd1cd26c2f104b51b07e
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b1f00fe_20231222T193603526795_embedding_proba_weak__6_scene.yml
results:
  fit_time:
  - 745.9436039924622
  - 917.9798889160156
  - 911.643584728241
  - 896.1008727550507
  - 841.5370059013367
  score_time:
  - 13.639660120010376
  - 15.860799789428711
  - 16.413199186325073
  - 15.668195486068726
  - 14.732157468795776
  test_average_precision_macro:
  - 0.8277851970467687
  - 0.8576493579045673
  - 0.8558616988099899
  - 0.8247569432627414
  - 0.8205176123745578
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8300196239058641
  - 0.8539373736333882
  - 0.8473567082282968
  - 0.8220940608674359
  - 0.8168460677106641
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8703092783505155
  - 0.889832285115304
  - 0.8942611683848798
  - 0.8756813417190776
  - 0.8698757763975155
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8167810598251014
  - 0.8491090171612178
  - 0.8437965942639029
  - 0.8109635359895832
  - 0.807057041116578
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.920274914089347
  - 0.9224318658280923
  - 0.924742268041237
  - 0.9157931516422083
  - 0.9175293305728088
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.920274914089347
  - 0.9224318658280922
  - 0.9247422680412372
  - 0.9157931516422082
  - 0.9175293305728088
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9202749140893471
  - 0.9224318658280923
  - 0.9247422680412372
  - 0.9157931516422082
  - 0.9175293305728087
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.916043938581332
  - 0.918867519028097
  - 0.9200600540486437
  - 0.9107145759186127
  - 0.9129995123783943
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8547090897446048
  - 0.8576901686893615
  - 0.8624998586751071
  - 0.8481597917670345
  - 0.8507663736042933
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8523233609166136
  - 0.8560311284046692
  - 0.8600191754554171
  - 0.8446664518208186
  - 0.8476251195409628
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8752577319587629
  - 0.8771588299890187
  - 0.8818851251840941
  - 0.8676250374363581
  - 0.8710440698018337
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8475310870868137
  - 0.8516530663160538
  - 0.8545715000414913
  - 0.8398469321659578
  - 0.843157218381719
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8703092783505151
  - 0.8898322851153039
  - 0.8942611683848796
  - 0.8756813417190774
  - 0.8698757763975151
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7215062127124158
  - 0.7292982850717484
  - 0.7370714821099091
  - 0.7060349919083677
  - 0.7114989797777237
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7132674313974476
  - 0.7223063195178757
  - 0.727722587322068
  - 0.6981981447704892
  - 0.7038494074419902
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6854231947850674
  - 0.6889326615440466
  - 0.6980728626942069
  - 0.6667190412221378
  - 0.6785250850245522
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7088273807570793
  - 0.7195363651908592
  - 0.7233555321850161
  - 0.6915938646432458
  - 0.6978681947787115
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9047454969340986
  - 0.9186135010214856
  - 0.9221210622602283
  - 0.9082810135539755
  - 0.9038050574976104
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4556701030927834
  - -1.3878406708595388
  - -1.3670103092783505
  - -1.4423480083857443
  - -1.463768115942029
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07972508591065292
  - -0.07756813417190776
  - -0.07525773195876288
  - -0.08420684835779176
  - -0.08247066942719117
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07972508591065292
  - -0.07756813417190776
  - -0.07525773195876288
  - -0.08420684835779176
  - -0.08247066942719117
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07972508591065293
  - -0.07756813417190776
  - -0.07525773195876288
  - -0.08420684835779173
  - -0.08247066942719115
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08395606141866793
  - -0.0811324809719029
  - -0.07993994595135623
  - -0.08928542408138722
  - -0.08700048762160563
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07381443298969072
  - -0.059748427672955975
  - -0.058865979381443306
  - -0.07044025157232704
  - -0.07639751552795031
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.920274914089347
  - 0.9224318658280923
  - 0.924742268041237
  - 0.9157931516422083
  - 0.9175293305728088
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.920274914089347
  - 0.9224318658280922
  - 0.9247422680412372
  - 0.9157931516422082
  - 0.9175293305728088
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9202749140893471
  - 0.9224318658280923
  - 0.9247422680412372
  - 0.9157931516422082
  - 0.9175293305728087
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.916043938581332
  - 0.918867519028097
  - 0.9200600540486437
  - 0.9107145759186127
  - 0.9129995123783943
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.920274914089347
  - 0.9224318658280923
  - 0.924742268041237
  - 0.9157931516422083
  - 0.9175293305728088
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.920274914089347
  - 0.9224318658280922
  - 0.9247422680412372
  - 0.9157931516422082
  - 0.9175293305728088
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9202749140893471
  - 0.9224318658280923
  - 0.9247422680412372
  - 0.9157931516422082
  - 0.9175293305728087
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.916043938581332
  - 0.918867519028097
  - 0.9200600540486437
  - 0.9107145759186127
  - 0.9129995123783943
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9423592321419706
  - 0.9473362967831434
  - 0.9486037496348437
  - 0.9368120959103526
  - 0.9377145078612386
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9470985044269253
  - 0.9510444461857609
  - 0.9529659282080385
  - 0.9430467164958333
  - 0.9433705914798352
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9261855670103094
  - 0.940251572327044
  - 0.9411340206185568
  - 0.9295597484276729
  - 0.9236024844720497
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9370341109313708
  - 0.943000054654176
  - 0.9432279099493708
  - 0.9307325974269534
  - 0.9323250031475069
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9850285962281315
  - 0.9878215139693637
  - 0.9844499954032955
  - 0.9833218000596542
  - 0.9865526950403756
  train_average_precision_macro_oob:
  - 0.9642875094236572
  - 0.9655053150549597
  - 0.961289182755911
  - 0.9578102433767132
  - 0.9624560069694436
  train_average_precision_micro:
  - 0.9829887459210955
  - 0.9872954360175371
  - 0.983401581336552
  - 0.9823826335141241
  - 0.98602692539789
  train_average_precision_micro_oob:
  - 0.9611090330785399
  - 0.9641445977174307
  - 0.9590496819140233
  - 0.9567663152428549
  - 0.9618387783502927
  train_average_precision_samples:
  - 0.9815296566077003
  - 0.9822107081174439
  - 0.9834373916059659
  - 0.979965457685665
  - 0.984624047124047
  train_average_precision_samples_oob:
  - 0.9636923343739161
  - 0.9633333333333334
  - 0.9613683662851197
  - 0.9603367875647668
  - 0.9624740124740125
  train_average_precision_weighted:
  - 0.9841610383401378
  - 0.9871237364066489
  - 0.9833011843121692
  - 0.9823981833087172
  - 0.985956772104819
  train_average_precision_weighted_oob:
  - 0.9629681222573889
  - 0.964422633840704
  - 0.9597520246137985
  - 0.9563725997558511
  - 0.9612861171256323
  train_f1_macro:
  - 0.9786680541103018
  - 0.9786701208981002
  - 0.9776274713839751
  - 0.978238341968912
  - 0.979036729036729
  train_f1_macro_oob:
  - 0.9639264654873396
  - 0.963126079447323
  - 0.9615851543531043
  - 0.9639896373056994
  - 0.9627512127512127
  train_f1_micro:
  - 0.9786680541103018
  - 0.9786701208981001
  - 0.977627471383975
  - 0.9782383419689119
  - 0.979036729036729
  train_f1_micro_oob:
  - 0.9639264654873396
  - 0.963126079447323
  - 0.9615851543531044
  - 0.9639896373056995
  - 0.9627512127512128
  train_f1_samples:
  - 0.9786680541103018
  - 0.9786701208981002
  - 0.977627471383975
  - 0.9782383419689119
  - 0.9790367290367291
  train_f1_samples_oob:
  - 0.9639264654873396
  - 0.9631260794473231
  - 0.9615851543531044
  - 0.9639896373056995
  - 0.9627512127512128
  train_f1_weighted:
  - 0.9781356746612567
  - 0.978101792926509
  - 0.97709838282385
  - 0.9779002647019787
  - 0.9787319696608521
  train_f1_weighted_oob:
  - 0.9630706457959148
  - 0.96243347931971
  - 0.9606237463994329
  - 0.9632154403644223
  - 0.9621338989989207
  train_jaccard_macro:
  - 0.9583269772194453
  - 0.9583020597672701
  - 0.9563180475176646
  - 0.9574985760577194
  - 0.9590266982539681
  train_jaccard_macro_oob:
  - 0.9305056239370315
  - 0.928975854257753
  - 0.9261567838356504
  - 0.9306189739317233
  - 0.9282637021164453
  train_jaccard_micro:
  - 0.9582272032603159
  - 0.9582311659761562
  - 0.956234096692112
  - 0.9574036511156186
  - 0.9589343288647548
  train_jaccard_micro_oob:
  - 0.9303649146300637
  - 0.9288748230199051
  - 0.9260125260960334
  - 0.9304826206551637
  - 0.9281777183898446
  train_jaccard_samples:
  - 0.9654997274664288
  - 0.9653096471749322
  - 0.9637034834745553
  - 0.9649025413274118
  - 0.9657707157707157
  train_jaccard_samples_oob:
  - 0.9411699122937417
  - 0.9399580557611646
  - 0.9373420544076111
  - 0.9415124599062422
  - 0.938941688941689
  train_jaccard_weighted:
  - 0.9572995218750773
  - 0.9572098579563423
  - 0.955301558838408
  - 0.9568430107638057
  - 0.9584368750258422
  train_jaccard_weighted_oob:
  - 0.9289046147446971
  - 0.9276837225140795
  - 0.924375448636419
  - 0.9291723493234093
  - 0.927114042358809
  train_label_ranking_average_precision_score:
  - 0.9815296566077003
  - 0.9822107081174438
  - 0.983437391605966
  - 0.9799654576856649
  - 0.984624047124047
  train_label_ranking_average_precision_score_oob:
  - 0.9636923343739155
  - 0.9633333333333332
  - 0.9613683662851196
  - 0.9603367875647665
  - 0.9624740124740123
  train_matthews_corrcoef_macro:
  - 0.9271573231400394
  - 0.9269199366112534
  - 0.9235320121206732
  - 0.92502622489254
  - 0.9277755666894696
  train_matthews_corrcoef_macro_oob:
  - 0.8750121777908227
  - 0.8711810123768591
  - 0.8668887049274168
  - 0.8747111521508956
  - 0.8698713136773799
  train_matthews_corrcoef_micro:
  - 0.9263574166285109
  - 0.9261420654047386
  - 0.9228027205841765
  - 0.9247442922735772
  - 0.9276005419988353
  train_matthews_corrcoef_micro_oob:
  - 0.8738123553767035
  - 0.8705751276049977
  - 0.8655593227277543
  - 0.8738018927331159
  - 0.8695034321361667
  train_matthews_corrcoef_samples:
  - 0.9201445286867366
  - 0.9175663347525604
  - 0.9136402015785423
  - 0.9173435497117647
  - 0.9189494886443237
  train_matthews_corrcoef_samples_oob:
  - 0.847964137694301
  - 0.8434851112387715
  - 0.8380758615195883
  - 0.8517360968966655
  - 0.8400951225198986
  train_matthews_corrcoef_weighted:
  - 0.9259947907826503
  - 0.9257134517660871
  - 0.9224503142155466
  - 0.9244597713565056
  - 0.9273387252482477
  train_matthews_corrcoef_weighted_oob:
  - 0.8733187239818827
  - 0.8701150440354242
  - 0.8649686267722845
  - 0.8733097393475535
  - 0.8691091764250097
  train_ndgc:
  - 0.9863772151813359
  - 0.9869241761119738
  - 0.9877895052326215
  - 0.9852276885529485
  - 0.9886700293380614
  train_ndgc_oob:
  - 0.9733598123517184
  - 0.9733233603232713
  - 0.9718122061074587
  - 0.9711198912126636
  - 0.9726397426580835
  train_neg_coverage_error:
  - -1.113423517169615
  - -1.1093264248704664
  - -1.1113423517169616
  - -1.1134715025906736
  - -1.106029106029106
  train_neg_coverage_error_oob:
  - -1.1867845993756503
  - -1.1927461139896374
  - -1.1982310093652446
  - -1.1974093264248704
  - -1.1902286902286903
  train_neg_hamming_loss_macro:
  - -0.021331945889698233
  - -0.02132987910189983
  - -0.02237252861602497
  - -0.021761658031088083
  - -0.020963270963270966
  train_neg_hamming_loss_macro_oob:
  - -0.036073534512660425
  - -0.03687392055267703
  - -0.03841484564689559
  - -0.03601036269430052
  - -0.03724878724878725
  train_neg_hamming_loss_micro:
  - -0.02133194588969823
  - -0.02132987910189983
  - -0.022372528616024973
  - -0.021761658031088083
  - -0.020963270963270962
  train_neg_hamming_loss_micro_oob:
  - -0.036073534512660425
  - -0.03687392055267703
  - -0.038414845646895596
  - -0.03601036269430052
  - -0.037248787248787246
  train_neg_hamming_loss_samples:
  - -0.02133194588969823
  - -0.021329879101899825
  - -0.02237252861602497
  - -0.02176165803108808
  - -0.020963270963270962
  train_neg_hamming_loss_samples_oob:
  - -0.03607353451266042
  - -0.03687392055267703
  - -0.03841484564689558
  - -0.03601036269430052
  - -0.037248787248787246
  train_neg_hamming_loss_weighted:
  - -0.021864325338743423
  - -0.021898207073490945
  - -0.022901617176150045
  - -0.02209973529802137
  - -0.0212680303391479
  train_neg_hamming_loss_weighted_oob:
  - -0.03692935420408517
  - -0.03756652068028983
  - -0.03937625360056704
  - -0.03678455963557775
  - -0.03786610100107923
  train_neg_label_ranking_loss:
  - -0.007713319458896982
  - -0.007500000000000001
  - -0.006880853277835589
  - -0.008354922279792745
  - -0.00637993762993763
  train_neg_label_ranking_loss_oob:
  - -0.02144901144640999
  - -0.022616580310880832
  - -0.0229318418314256
  - -0.023536269430051812
  - -0.02186850311850312
  train_precision_macro:
  - 0.9786680541103018
  - 0.9786701208981002
  - 0.9776274713839751
  - 0.978238341968912
  - 0.979036729036729
  train_precision_macro_oob:
  - 0.9639264654873396
  - 0.963126079447323
  - 0.9615851543531043
  - 0.9639896373056994
  - 0.9627512127512127
  train_precision_micro:
  - 0.9786680541103018
  - 0.9786701208981001
  - 0.977627471383975
  - 0.9782383419689119
  - 0.979036729036729
  train_precision_micro_oob:
  - 0.9639264654873396
  - 0.963126079447323
  - 0.9615851543531044
  - 0.9639896373056995
  - 0.9627512127512128
  train_precision_samples:
  - 0.9786680541103018
  - 0.9786701208981002
  - 0.977627471383975
  - 0.9782383419689119
  - 0.9790367290367291
  train_precision_samples_oob:
  - 0.9639264654873396
  - 0.9631260794473231
  - 0.9615851543531044
  - 0.9639896373056995
  - 0.9627512127512128
  train_precision_weighted:
  - 0.9781356746612567
  - 0.978101792926509
  - 0.97709838282385
  - 0.9779002647019787
  - 0.9787319696608521
  train_precision_weighted_oob:
  - 0.9630706457959148
  - 0.96243347931971
  - 0.9606237463994329
  - 0.9632154403644223
  - 0.9621338989989207
  train_recall_macro:
  - 0.9786680541103018
  - 0.9786701208981002
  - 0.9776274713839751
  - 0.978238341968912
  - 0.979036729036729
  train_recall_macro_oob:
  - 0.9639264654873396
  - 0.963126079447323
  - 0.9615851543531043
  - 0.9639896373056994
  - 0.9627512127512127
  train_recall_micro:
  - 0.9786680541103018
  - 0.9786701208981001
  - 0.977627471383975
  - 0.9782383419689119
  - 0.979036729036729
  train_recall_micro_oob:
  - 0.9639264654873396
  - 0.963126079447323
  - 0.9615851543531044
  - 0.9639896373056995
  - 0.9627512127512128
  train_recall_samples:
  - 0.9786680541103018
  - 0.9786701208981002
  - 0.977627471383975
  - 0.9782383419689119
  - 0.9790367290367291
  train_recall_samples_oob:
  - 0.9639264654873396
  - 0.9631260794473231
  - 0.9615851543531044
  - 0.9639896373056995
  - 0.9627512127512128
  train_recall_weighted:
  - 0.9781356746612567
  - 0.978101792926509
  - 0.97709838282385
  - 0.9779002647019787
  - 0.9787319696608521
  train_recall_weighted_oob:
  - 0.9630706457959148
  - 0.96243347931971
  - 0.9606237463994329
  - 0.9632154403644223
  - 0.9621338989989207
  train_roc_auc_macro:
  - 0.9973456366830581
  - 0.997695321076665
  - 0.9972744559283534
  - 0.9969424344000456
  - 0.9975370606650554
  train_roc_auc_macro_oob:
  - 0.9888713623640645
  - 0.98860806939744
  - 0.9877904180877484
  - 0.9870605397494628
  - 0.9877449738378602
  train_roc_auc_micro:
  - 0.9972010695434355
  - 0.9977422390611553
  - 0.9972889013465507
  - 0.9969586740371698
  - 0.9975520138665869
  train_roc_auc_micro_oob:
  - 0.9887344301887286
  - 0.9887784014653992
  - 0.9878993727260937
  - 0.9871428158354861
  - 0.9882034058063014
  train_roc_auc_samples:
  - 0.992286680541103
  - 0.9925
  - 0.9931191467221645
  - 0.9916450777202073
  - 0.9936200623700623
  train_roc_auc_samples_oob:
  - 0.97855098855359
  - 0.9773834196891191
  - 0.9770681581685745
  - 0.9764637305699483
  - 0.978131496881497
  train_roc_auc_weighted:
  - 0.9972010454761205
  - 0.9975548722119605
  - 0.9970724503166122
  - 0.9967678400875726
  - 0.9974148470674841
  train_roc_auc_weighted_oob:
  - 0.9883268312314789
  - 0.9881276191899573
  - 0.9872171911120995
  - 0.9865647777961721
  - 0.9871421646853992
start: 2023-12-22 19:36:03.526795
wrapper: null
