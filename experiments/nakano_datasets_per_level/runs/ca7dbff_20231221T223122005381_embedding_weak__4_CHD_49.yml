active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT80MzMzMzPzP6CZmZmZmck/zMzMzMzM/L+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAADwPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:32:02.073410
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__4
  params: {}
hash: ca7dbff29ebfe1936a6601c1edb273f4397291758d0b7dc6e0a006ff5373489b
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ca7dbff_20231221T223122005381_embedding_weak__4_CHD_49.yml
results:
  fit_time:
  - 27.02157163619995
  - 25.63397192955017
  - 25.718773126602173
  - 26.533934354782104
  - 26.346105813980103
  score_time:
  - 3.415600299835205
  - 3.1000888347625732
  - 3.4364724159240723
  - 3.2997753620147705
  - 3.2387452125549316
  test_average_precision_macro:
  - 0.5225690725556734
  - 0.5547683897062367
  - 0.5155787403954082
  - 0.53938649354066
  - 0.522374397868817
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6677027401877218
  - 0.6981125811518196
  - 0.6968636199624422
  - 0.6616312697391066
  - 0.6618466142925905
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7689141414141415
  - 0.7929671717171716
  - 0.7837087087087087
  - 0.748098098098098
  - 0.770771878072763
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6420122803322675
  - 0.6821881548537231
  - 0.6411600582811411
  - 0.6593736880476556
  - 0.6391345299415288
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7045454545454545
  - 0.6984848484848486
  - 0.6966966966966966
  - 0.6921921921921922
  - 0.6932153392330384
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7045454545454546
  - 0.6984848484848485
  - 0.6966966966966966
  - 0.6921921921921922
  - 0.6932153392330384
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7045454545454546
  - 0.6984848484848485
  - 0.6966966966966965
  - 0.692192192192192
  - 0.6932153392330385
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6596630642085188
  - 0.6534290271132377
  - 0.6529029029029029
  - 0.6512631512631513
  - 0.6463260460670346
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.565666455246901
  - 0.5600844137315134
  - 0.5571097887345633
  - 0.5499926400277744
  - 0.5534192275325189
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.543859649122807
  - 0.5366705471478463
  - 0.5345622119815668
  - 0.529276693455798
  - 0.5304740406320542
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5838567493112948
  - 0.5703935458480914
  - 0.5621270621270622
  - 0.5631488631488631
  - 0.5689882388997434
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5008925301508159
  - 0.4935953262247761
  - 0.49353932223381247
  - 0.49218801803568196
  - 0.48614136366877486
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7780050505050505
  - 0.8020580808080809
  - 0.7837087087087087
  - 0.757107107107107
  - 0.7707718780727635
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.08045456513300724
  - 0.03600319333066571
  - 0.06125054871200177
  - 0.06262256034586536
  - 0.06281147656939445
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.42318222885703594
  - 0.40786641170289034
  - 0.4094417504211447
  - 0.3995855252019232
  - 0.40868815605565645
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.42873653965339475
  - 0.4174783308165976
  - 0.4181578381816695
  - 0.4102311728063077
  - 0.4099384316917986
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06888462197033554
  - 0.035201830458510094
  - 0.04984579184197053
  - 0.051976386265979974
  - 0.050561251322134085
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8450596024575273
  - 0.864391049089618
  - 0.8623705832280608
  - 0.8291900128740923
  - 0.843814031107822
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8454545454545452
  - -3.7818181818181817
  - -3.918918918918919
  - -3.8468468468468466
  - -3.8053097345132745
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29545454545454547
  - -0.3015151515151515
  - -0.3033033033033033
  - -0.3078078078078078
  - -0.3067846607669616
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29545454545454547
  - -0.3015151515151515
  - -0.3033033033033033
  - -0.3078078078078078
  - -0.30678466076696165
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29545454545454547
  - -0.3015151515151515
  - -0.3033033033033033
  - -0.3078078078078077
  - -0.30678466076696165
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3403369357914812
  - -0.34657097288676236
  - -0.3470970970970971
  - -0.34873684873684874
  - -0.3536739539329653
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22093434343434346
  - -0.19896464646464646
  - -0.21976976976976975
  - -0.22782782782782782
  - -0.23043264503441493
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7045454545454545
  - 0.6984848484848486
  - 0.6966966966966966
  - 0.6921921921921922
  - 0.6932153392330384
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7045454545454546
  - 0.6984848484848485
  - 0.6966966966966966
  - 0.6921921921921922
  - 0.6932153392330384
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7045454545454546
  - 0.6984848484848485
  - 0.6966966966966965
  - 0.692192192192192
  - 0.6932153392330385
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6596630642085188
  - 0.6534290271132377
  - 0.6529029029029029
  - 0.6512631512631513
  - 0.6463260460670346
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7045454545454545
  - 0.6984848484848486
  - 0.6966966966966966
  - 0.6921921921921922
  - 0.6932153392330384
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7045454545454546
  - 0.6984848484848485
  - 0.6966966966966966
  - 0.6921921921921922
  - 0.6932153392330384
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7045454545454546
  - 0.6984848484848485
  - 0.6966966966966965
  - 0.692192192192192
  - 0.6932153392330385
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6596630642085188
  - 0.6534290271132377
  - 0.6529029029029029
  - 0.6512631512631513
  - 0.6463260460670346
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5728453575103178
  - 0.6175793633870303
  - 0.5943380171314347
  - 0.5974406976177199
  - 0.5915802904475385
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7746998990314498
  - 0.792290058479532
  - 0.7839230599647266
  - 0.7715126978284873
  - 0.7801224413413299
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.7802302302302303
  - .nan
  - 0.769567354965585
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5922952876626154
  - 0.6235534169257796
  - 0.6191328911320276
  - 0.6223999045437433
  - 0.5874205365994463
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8677353331731431
  - 0.8747654713023203
  - 0.8650694686307033
  - 0.8642298954188453
  - 0.8599998634136856
  train_average_precision_macro_oob:
  - 0.620758169306372
  - 0.6189826836514184
  - 0.6161457180050104
  - 0.6281040480071015
  - 0.6083483747648354
  train_average_precision_micro:
  - 0.7299258247692657
  - 0.752221879401476
  - 0.7409791386373892
  - 0.6978765465512221
  - 0.7385410167875027
  train_average_precision_micro_oob:
  - 0.6921826079828944
  - 0.702509157127265
  - 0.6934875547627513
  - 0.6787851701157037
  - 0.7023006646979102
  train_average_precision_samples:
  - 0.7970255930087391
  - 0.8086485642946315
  - 0.8069600850850851
  - 0.7909972472472473
  - 0.8183697838109603
  train_average_precision_samples_oob:
  - 0.7758583021223471
  - 0.784812734082397
  - 0.7832207207207206
  - 0.7741460210210209
  - 0.7936431623931623
  train_average_precision_weighted:
  - 0.8230819158140839
  - 0.8322192822865975
  - 0.8173611660891543
  - 0.8177555870041524
  - 0.8129961800872822
  train_average_precision_weighted_oob:
  - 0.7288286051626107
  - 0.7299860827656044
  - 0.7226504015804373
  - 0.7403976226602896
  - 0.7211963381388635
  train_f1_macro:
  - 0.8003745318352061
  - 0.7857677902621724
  - 0.7852852852852853
  - 0.7946696696696698
  - 0.7869532428355958
  train_f1_macro_oob:
  - 0.7063670411985018
  - 0.7056179775280899
  - 0.7199699699699701
  - 0.7083333333333334
  - 0.715686274509804
  train_f1_micro:
  - 0.800374531835206
  - 0.7857677902621722
  - 0.7852852852852853
  - 0.7946696696696697
  - 0.7869532428355958
  train_f1_micro_oob:
  - 0.7063670411985019
  - 0.7056179775280899
  - 0.71996996996997
  - 0.7083333333333334
  - 0.7156862745098039
  train_f1_samples:
  - 0.8003745318352059
  - 0.7857677902621722
  - 0.7852852852852853
  - 0.7946696696696698
  - 0.7869532428355958
  train_f1_samples_oob:
  - 0.7063670411985019
  - 0.7056179775280899
  - 0.71996996996997
  - 0.7083333333333334
  - 0.7156862745098039
  train_f1_weighted:
  - 0.7424672039531738
  - 0.7256506960022728
  - 0.7273967586467587
  - 0.7335601308114397
  - 0.7304708648659328
  train_f1_weighted_oob:
  - 0.6598466576465283
  - 0.6600374205303527
  - 0.6712853587853588
  - 0.6612954577614263
  - 0.6684759627734198
  train_jaccard_macro:
  - 0.6996832745963567
  - 0.6848620061744675
  - 0.6818859992559844
  - 0.6965325306501778
  - 0.6834880802351697
  train_jaccard_macro_oob:
  - 0.5682891860818051
  - 0.566867553134892
  - 0.5848815528676093
  - 0.5707655652796254
  - 0.5793409703021434
  train_jaccard_micro:
  - 0.6671870121760849
  - 0.6471314003701419
  - 0.646477132262052
  - 0.6592961694176269
  - 0.6487410631022692
  train_jaccard_micro_oob:
  - 0.5460335842501448
  - 0.5451388888888888
  - 0.5624633431085044
  - 0.5483870967741935
  - 0.5572519083969466
  train_jaccard_samples:
  - 0.6996789727126805
  - 0.6790699936767353
  - 0.6818532818532819
  - 0.6918499668499668
  - 0.6816105463164287
  train_jaccard_samples_oob:
  - 0.5776886035313001
  - 0.5791556009533537
  - 0.5993252993252993
  - 0.5828731328731329
  - 0.5896495661201544
  train_jaccard_weighted:
  - 0.6149734588200914
  - 0.5984475225020754
  - 0.5982770804034175
  - 0.607569973058116
  - 0.6016684848965153
  train_jaccard_weighted_oob:
  - 0.5017521325084001
  - 0.5018339177864521
  - 0.5156811375261449
  - 0.503040753664602
  - 0.5119525972669204
  train_label_ranking_average_precision_score:
  - 0.8015199750312113
  - 0.8131429463171032
  - 0.8137168418418418
  - 0.7955017517517516
  - 0.8251571141277019
  train_label_ranking_average_precision_score_oob:
  - 0.7803526841448187
  - 0.7893071161048683
  - 0.7899774774774767
  - 0.778650525525525
  - 0.8004304927099042
  train_matthews_corrcoef_macro:
  - 0.3674502104159602
  - 0.2951799844209024
  - 0.3154862295188896
  - 0.33546634458671304
  - 0.3178342069097935
  train_matthews_corrcoef_macro_oob:
  - 0.10776914146562555
  - 0.10548668530867149
  - 0.1455788371597643
  - 0.1109797853838751
  - 0.13192167896480347
  train_matthews_corrcoef_micro:
  - 0.6410865483167468
  - 0.6180224822497684
  - 0.6132189159725663
  - 0.6351150403484506
  - 0.615189113794056
  train_matthews_corrcoef_micro_oob:
  - 0.42391097366195013
  - 0.4214738420172351
  - 0.45611392278593155
  - 0.4267385517629778
  - 0.44570181287069666
  train_matthews_corrcoef_samples:
  - 0.6587972957263492
  - 0.6387703888677675
  - 0.6305504862564443
  - 0.6511648512822221
  - 0.6268680307316246
  train_matthews_corrcoef_samples_oob:
  - 0.43546123400524545
  - 0.43130734965217615
  - 0.4665854654665661
  - 0.43498896734417025
  - 0.4593043121556188
  train_matthews_corrcoef_weighted:
  - 0.3299144020010218
  - 0.24017751384517158
  - 0.2762545874773135
  - 0.2874698589108864
  - 0.28107465787168673
  train_matthews_corrcoef_weighted_oob:
  - 0.08731847070792953
  - 0.08689816774292597
  - 0.11934331210925223
  - 0.09165181934402174
  - 0.10777165574234854
  train_ndgc:
  - 0.8623382812446436
  - 0.8731948520131289
  - 0.8713927819803705
  - 0.8585715463539834
  - 0.8808890530027166
  train_ndgc_oob:
  - 0.8498694369644544
  - 0.8577963240837994
  - 0.8558444286284288
  - 0.8472309412571366
  - 0.8654287950899275
  train_neg_coverage_error:
  - -3.5280898876404496
  - -3.539325842696629
  - -3.515765765765766
  - -3.560810810810811
  - -3.513574660633484
  train_neg_coverage_error_oob:
  - -3.7146067415730335
  - -3.737078651685393
  - -3.7117117117117115
  - -3.7094594594594597
  - -3.7217194570135748
  train_neg_hamming_loss_macro:
  - -0.19962546816479398
  - -0.21423220973782775
  - -0.21471471471471473
  - -0.20533033033033032
  - -0.21304675716440422
  train_neg_hamming_loss_macro_oob:
  - -0.2936329588014981
  - -0.2943820224719102
  - -0.2800300300300301
  - -0.2916666666666667
  - -0.2843137254901961
  train_neg_hamming_loss_micro:
  - -0.199625468164794
  - -0.21423220973782772
  - -0.2147147147147147
  - -0.20533033033033032
  - -0.21304675716440422
  train_neg_hamming_loss_micro_oob:
  - -0.29363295880149815
  - -0.2943820224719101
  - -0.28003003003003
  - -0.2916666666666667
  - -0.28431372549019607
  train_neg_hamming_loss_samples:
  - -0.19962546816479404
  - -0.21423220973782775
  - -0.2147147147147147
  - -0.2053303303303303
  - -0.2130467571644042
  train_neg_hamming_loss_samples_oob:
  - -0.2936329588014981
  - -0.2943820224719101
  - -0.2800300300300301
  - -0.2916666666666667
  - -0.284313725490196
  train_neg_hamming_loss_weighted:
  - -0.2575327960468263
  - -0.27434930399772733
  - -0.2726032413532414
  - -0.2664398691885603
  - -0.269529135134067
  train_neg_hamming_loss_weighted_oob:
  - -0.3401533423534717
  - -0.33996257946964725
  - -0.3287146412146412
  - -0.33870454223857366
  - -0.33152403722658025
  train_neg_label_ranking_loss:
  - -0.17073033707865168
  - -0.1657865168539326
  - -0.16308183183183184
  - -0.17669544544544546
  - -0.15678733031674208
  train_neg_label_ranking_loss_oob:
  - -0.20196629213483147
  - -0.19908863920099876
  - -0.19786661661661664
  - -0.20356606606606606
  - -0.19249622926093515
  train_precision_macro:
  - 0.8003745318352061
  - 0.7857677902621724
  - 0.7852852852852853
  - 0.7946696696696698
  - 0.7869532428355958
  train_precision_macro_oob:
  - 0.7063670411985018
  - 0.7056179775280899
  - 0.7199699699699701
  - 0.7083333333333334
  - 0.715686274509804
  train_precision_micro:
  - 0.800374531835206
  - 0.7857677902621722
  - 0.7852852852852853
  - 0.7946696696696697
  - 0.7869532428355958
  train_precision_micro_oob:
  - 0.7063670411985019
  - 0.7056179775280899
  - 0.71996996996997
  - 0.7083333333333334
  - 0.7156862745098039
  train_precision_samples:
  - 0.8003745318352059
  - 0.7857677902621722
  - 0.7852852852852853
  - 0.7946696696696698
  - 0.7869532428355958
  train_precision_samples_oob:
  - 0.7063670411985019
  - 0.7056179775280899
  - 0.71996996996997
  - 0.7083333333333334
  - 0.7156862745098039
  train_precision_weighted:
  - 0.7424672039531738
  - 0.7256506960022728
  - 0.7273967586467587
  - 0.7335601308114397
  - 0.7304708648659328
  train_precision_weighted_oob:
  - 0.6598466576465283
  - 0.6600374205303527
  - 0.6712853587853588
  - 0.6612954577614263
  - 0.6684759627734198
  train_recall_macro:
  - 0.8003745318352061
  - 0.7857677902621724
  - 0.7852852852852853
  - 0.7946696696696698
  - 0.7869532428355958
  train_recall_macro_oob:
  - 0.7063670411985018
  - 0.7056179775280899
  - 0.7199699699699701
  - 0.7083333333333334
  - 0.715686274509804
  train_recall_micro:
  - 0.800374531835206
  - 0.7857677902621722
  - 0.7852852852852853
  - 0.7946696696696697
  - 0.7869532428355958
  train_recall_micro_oob:
  - 0.7063670411985019
  - 0.7056179775280899
  - 0.71996996996997
  - 0.7083333333333334
  - 0.7156862745098039
  train_recall_samples:
  - 0.8003745318352059
  - 0.7857677902621722
  - 0.7852852852852853
  - 0.7946696696696698
  - 0.7869532428355958
  train_recall_samples_oob:
  - 0.7063670411985019
  - 0.7056179775280899
  - 0.71996996996997
  - 0.7083333333333334
  - 0.7156862745098039
  train_recall_weighted:
  - 0.7424672039531738
  - 0.7256506960022728
  - 0.7273967586467587
  - 0.7335601308114397
  - 0.7304708648659328
  train_recall_weighted_oob:
  - 0.6598466576465283
  - 0.6600374205303527
  - 0.6712853587853588
  - 0.6612954577614263
  - 0.6684759627734198
  train_roc_auc_macro:
  - 0.83480328069473
  - 0.8535900171590908
  - 0.8378091326962774
  - 0.8339286469198556
  - 0.8373795121214678
  train_roc_auc_macro_oob:
  - 0.7046993943930028
  - 0.6641914170758407
  - 0.6225743623958621
  - 0.6401666605950085
  - 0.6523178443836725
  train_roc_auc_micro:
  - 0.8435471662246408
  - 0.8465361979436492
  - 0.8437701278984174
  - 0.8290217793689225
  - 0.8453177746933525
  train_roc_auc_micro_oob:
  - 0.8037479444650569
  - 0.8042076134550664
  - 0.8020403938167097
  - 0.797452098954489
  - 0.8040758845909771
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7601525868617602
  - 0.7887964924237751
  - 0.7642231926210894
  - 0.7602309926470415
  - 0.764429446282413
  train_roc_auc_weighted_oob:
  - 0.6798972260970768
  - 0.6792613131948008
  - 0.6545140215365995
  - 0.6824258142984577
  - 0.6793274619761909
start: 2023-12-21 22:31:22.005381
wrapper: null
