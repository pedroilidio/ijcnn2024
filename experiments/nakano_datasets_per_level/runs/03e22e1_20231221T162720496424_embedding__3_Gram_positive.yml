active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZAcAAMzMzMzPzvwCamZmZmek/AJiZmZmZyb+AZmZmZmYGQA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:27:37.826572
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__3
  params: {}
hash: 03e22e1a89d4859c34386c617844a55f9767e85ec88fdb7d66f7fe567e2c7af3
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/03e22e1_20231221T162720496424_embedding__3_Gram_positive.yml
results:
  fit_time:
  - 6.426165580749512
  - 6.984445095062256
  - 6.810293674468994
  - 6.9131104946136475
  - 6.743447780609131
  score_time:
  - 2.386136770248413
  - 2.383953094482422
  - 2.325566530227661
  - 2.3368914127349854
  - 2.2461061477661133
  test_average_precision_macro:
  - 0.8709227988999728
  - 0.9390682871782704
  - 0.8939566418208287
  - 0.8836222486537613
  - 0.9657249741281753
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9835127182944012
  - 0.9771533687033743
  - 0.9812431130796102
  - 0.9834232834321832
  - 0.9850845039835484
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9583333333333334
  - 0.9547619047619048
  - 0.9627831715210355
  - 0.9663461538461539
  - 0.9678217821782178
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9716964110616696
  - 0.9792531398105672
  - 0.9720924556978588
  - 0.9769611841460583
  - 0.9887629360930331
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9646226415094339
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461537
  - 0.9579207920792079
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.964622641509434
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461539
  - 0.9579207920792079
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.964622641509434
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461539
  - 0.9579207920792079
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9671591313634746
  - 0.9691609977324263
  - 0.9686333084391338
  - 0.9672161172161172
  - 0.9603960396039604
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9321777521543876
  - 0.9399847094801222
  - 0.9304426103491524
  - 0.9350930478120317
  - 0.9196213542503558
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9316628701594533
  - 0.9399538106235565
  - 0.9297423887587822
  - 0.9348837209302325
  - 0.9192399049881235
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9459119496855346
  - 0.9542857142857142
  - 0.9469255663430419
  - 0.9538461538461539
  - 0.9366336633663366
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9369978152688434
  - 0.9401970778117568
  - 0.9399149137466893
  - 0.9367685663458405
  - 0.9243094090356437
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9583333333333333
  - 0.9547619047619048
  - 0.9627831715210355
  - 0.9663461538461539
  - 0.9678217821782178
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6853115706249229
  - 0.6923072219528649
  - 0.6804477876721279
  - 0.6860891537104408
  - 0.6706577233227589
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.9046058460947399
  - 0.91653173546077
  - 0.9022910772559207
  - 0.9103339881734722
  - 0.8876564434407906
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.871069182389937
  - 0.8952380952380953
  - 0.883495145631068
  - 0.9093975987422079
  - 0.8629178271126658
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.886849085681565
  - 0.9006919551526669
  - 0.8863664886894769
  - 0.8958921549905021
  - 0.8700301986270057
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9690212743349258
  - 0.9662323387843736
  - 0.9723752307558959
  - 0.9756013523198916
  - 0.9760923299597097
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1037735849056605
  - -1.1238095238095238
  - -1.0970873786407767
  - -1.1057692307692308
  - -1.099009900990099
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03537735849056604
  - -0.030952380952380953
  - -0.03640776699029126
  - -0.03365384615384616
  - -0.042079207920792075
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03537735849056604
  - -0.030952380952380953
  - -0.03640776699029126
  - -0.03365384615384615
  - -0.04207920792079208
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.03537735849056604
  - -0.030952380952380953
  - -0.03640776699029126
  - -0.03365384615384615
  - -0.04207920792079208
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.03284086863652545
  - -0.030839002267573697
  - -0.031366691560866314
  - -0.032783882783882785
  - -0.039603960396039604
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03459119496855346
  - -0.04126984126984127
  - -0.02912621359223301
  - -0.030448717948717945
  - -0.0264026402640264
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9646226415094339
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461537
  - 0.9579207920792079
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.964622641509434
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461539
  - 0.9579207920792079
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.964622641509434
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461539
  - 0.9579207920792079
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9671591313634746
  - 0.9691609977324263
  - 0.9686333084391338
  - 0.9672161172161172
  - 0.9603960396039604
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9646226415094339
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461537
  - 0.9579207920792079
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.964622641509434
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461539
  - 0.9579207920792079
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.964622641509434
  - 0.969047619047619
  - 0.9635922330097088
  - 0.9663461538461539
  - 0.9579207920792079
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9671591313634746
  - 0.9691609977324263
  - 0.9686333084391338
  - 0.9672161172161172
  - 0.9603960396039604
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9918803169415915
  - 0.9909209072517896
  - 0.9898350594553126
  - 0.9888909173831691
  - 0.9953950379726718
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9932656936038923
  - 0.989145880574452
  - 0.9916958041958042
  - 0.9902618282039504
  - 0.9916459697448634
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9654088050314467
  - 0.9587301587301587
  - 0.970873786407767
  - 0.9695512820512822
  - 0.9735973597359737
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9952616091859525
  - 0.9901779600729179
  - 0.9949876073293795
  - 0.9915061470564019
  - 0.9971422548692092
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9617278457370364
  - 0.9397869966670542
  - 0.9491399351907219
  - 0.9005813583012692
  - 0.8867996862973284
  train_average_precision_macro_oob:
  - 0.889688827965431
  - 0.857751657792925
  - 0.8802447847331032
  - 0.862642437841612
  - 0.8539527015938119
  train_average_precision_micro:
  - 0.9935709786690371
  - 0.9930884163936534
  - 0.9926943078300874
  - 0.9929431633868349
  - 0.9923001811320316
  train_average_precision_micro_oob:
  - 0.980453947829586
  - 0.9815570814241316
  - 0.9800607901805226
  - 0.9813196315428929
  - 0.9796342242689203
  train_average_precision_samples:
  - 0.9743744955609361
  - 0.9786634460547503
  - 0.9751602564102565
  - 0.9708835341365463
  - 0.969298245614035
  train_average_precision_samples_oob:
  - 0.9652945924132363
  - 0.9615539452495975
  - 0.9631410256410255
  - 0.9622489959839359
  - 0.9593301435406698
  train_average_precision_weighted:
  - 0.9917249317439115
  - 0.9879279435834218
  - 0.989421542008918
  - 0.9813787004115646
  - 0.9806741203049926
  train_average_precision_weighted_oob:
  - 0.9737595134525507
  - 0.9679672701470531
  - 0.9728834533873328
  - 0.9677902310731376
  - 0.9673105896168904
  train_f1_macro:
  - 0.9757869249394674
  - 0.9758454106280192
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_f1_macro_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307692
  - 0.9620481927710842
  - 0.9635167464114832
  train_f1_micro:
  - 0.9757869249394673
  - 0.9758454106280193
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_f1_micro_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307693
  - 0.9620481927710843
  - 0.9635167464114832
  train_f1_samples:
  - 0.9757869249394673
  - 0.9758454106280193
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_f1_samples_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307693
  - 0.9620481927710843
  - 0.9635167464114832
  train_f1_weighted:
  - 0.980739863315159
  - 0.9811559531239165
  - 0.9806602258123739
  - 0.981593359082262
  - 0.9789017999544316
  train_f1_weighted_oob:
  - 0.9670191207808573
  - 0.9699859001918498
  - 0.9670862401321829
  - 0.9658500028823428
  - 0.9640749601275918
  train_jaccard_macro:
  - 0.9529438384143244
  - 0.9530528980755376
  - 0.9543138905972655
  - 0.953217118643688
  - 0.951127449532977
  train_jaccard_macro_oob:
  - 0.9323812230271195
  - 0.9359488007804706
  - 0.9316464480152928
  - 0.9275334189797466
  - 0.9296803358677623
  train_jaccard_micro:
  - 0.9527186761229315
  - 0.9528301886792453
  - 0.9541984732824428
  - 0.9529411764705882
  - 0.9509918319719953
  train_jaccard_micro_oob:
  - 0.9321637426900585
  - 0.9357101110461719
  - 0.9315147997678468
  - 0.926871735345328
  - 0.9296018465089441
  train_jaccard_samples:
  - 0.9631961259079902
  - 0.9629629629629629
  - 0.9641025641025641
  - 0.9646586345381527
  - 0.9617224880382775
  train_jaccard_samples_oob:
  - 0.9483454398708635
  - 0.9507246376811594
  - 0.948076923076923
  - 0.9447389558232931
  - 0.9460925039872408
  train_jaccard_weighted:
  - 0.9624282901272917
  - 0.9631736640762375
  - 0.9621333289979737
  - 0.9640785472401331
  - 0.9587887973074882
  train_jaccard_weighted_oob:
  - 0.9363818033732724
  - 0.9419710471035052
  - 0.9364064813089744
  - 0.9346754138840861
  - 0.9307218492581724
  train_label_ranking_average_precision_score:
  - 0.9743744955609361
  - 0.9786634460547503
  - 0.9751602564102563
  - 0.970883534136546
  - 0.9692982456140351
  train_label_ranking_average_precision_score_oob:
  - 0.9652945924132363
  - 0.9615539452495974
  - 0.9631410256410254
  - 0.9622489959839357
  - 0.9593301435406697
  train_matthews_corrcoef_macro:
  - 0.7103572716487825
  - 0.7119333356754584
  - 0.7131924435248351
  - 0.711723293065343
  - 0.7083097640379192
  train_matthews_corrcoef_macro_oob:
  - 0.6834790363917231
  - 0.6893749450567588
  - 0.6829958806308672
  - 0.6756281562296157
  - 0.6811230016460736
  train_matthews_corrcoef_micro:
  - 0.935372106281127
  - 0.9355713829348422
  - 0.9373872283940647
  - 0.9355125864960937
  - 0.9327173100083844
  train_matthews_corrcoef_micro_oob:
  - 0.905805008637674
  - 0.9109997741104315
  - 0.904694760998022
  - 0.8978982816030943
  - 0.9017360464733892
  train_matthews_corrcoef_samples:
  - 0.9184246999437251
  - 0.9170114357731688
  - 0.9184264041848611
  - 0.9238523312632181
  - 0.9118533505702853
  train_matthews_corrcoef_samples_oob:
  - 0.8871639648286574
  - 0.8908728676450385
  - 0.8857885429608475
  - 0.8790876318193878
  - 0.8785742031958285
  train_matthews_corrcoef_weighted:
  - 0.9218916060220061
  - 0.9211692210744309
  - 0.923092441096334
  - 0.9217648771901912
  - 0.9183239454709495
  train_matthews_corrcoef_weighted_oob:
  - 0.8892832158093112
  - 0.8943152746201293
  - 0.8904484195185136
  - 0.8819871286709091
  - 0.8838554725604143
  train_ndgc:
  - 0.9811310724249586
  - 0.9842588422746955
  - 0.9817374229099874
  - 0.9784319798301265
  - 0.9773643920109505
  train_ndgc_oob:
  - 0.9742460403285845
  - 0.9715423106740598
  - 0.9726573898145392
  - 0.9719067501294524
  - 0.9698076950710752
  train_neg_coverage_error:
  - -1.0677966101694916
  - -1.0628019323671498
  - -1.0673076923076923
  - -1.072289156626506
  - -1.0741626794258374
  train_neg_coverage_error_oob:
  - -1.1089588377723971
  - -1.1111111111111112
  - -1.1105769230769231
  - -1.1036144578313254
  - -1.1196172248803828
  train_neg_hamming_loss_macro:
  - -0.02421307506053269
  - -0.024154589371980676
  - -0.0234375
  - -0.024096385542168676
  - -0.025119617224880382
  train_neg_hamming_loss_macro_oob:
  - -0.0351089588377724
  - -0.03321256038647343
  - -0.03545673076923077
  - -0.03795180722891566
  - -0.03648325358851674
  train_neg_hamming_loss_micro:
  - -0.024213075060532687
  - -0.024154589371980676
  - -0.0234375
  - -0.024096385542168676
  - -0.025119617224880382
  train_neg_hamming_loss_micro_oob:
  - -0.035108958837772396
  - -0.03321256038647343
  - -0.03545673076923077
  - -0.03795180722891566
  - -0.03648325358851675
  train_neg_hamming_loss_samples:
  - -0.024213075060532687
  - -0.024154589371980676
  - -0.0234375
  - -0.024096385542168676
  - -0.025119617224880382
  train_neg_hamming_loss_samples_oob:
  - -0.035108958837772396
  - -0.03321256038647343
  - -0.03545673076923077
  - -0.03795180722891566
  - -0.03648325358851675
  train_neg_hamming_loss_weighted:
  - -0.01926013668484099
  - -0.01884404687608349
  - -0.019339774187626217
  - -0.018406640917737936
  - -0.021098200045568467
  train_neg_hamming_loss_weighted_oob:
  - -0.03298087921914285
  - -0.03001409980815015
  - -0.032913759867817145
  - -0.03414999711765723
  - -0.03592503987240829
  train_neg_label_ranking_loss:
  - -0.01916868442292171
  - -0.017512077294685992
  - -0.019631410256410256
  - -0.021686746987951807
  - -0.022926634768740028
  train_neg_label_ranking_loss_oob:
  - -0.03268765133171913
  - -0.03341384863123993
  - -0.034054487179487176
  - -0.0321285140562249
  - -0.03787878787878787
  train_precision_macro:
  - 0.9757869249394674
  - 0.9758454106280192
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_precision_macro_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307692
  - 0.9620481927710842
  - 0.9635167464114832
  train_precision_micro:
  - 0.9757869249394673
  - 0.9758454106280193
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_precision_micro_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307693
  - 0.9620481927710843
  - 0.9635167464114832
  train_precision_samples:
  - 0.9757869249394673
  - 0.9758454106280193
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_precision_samples_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307693
  - 0.9620481927710843
  - 0.9635167464114832
  train_precision_weighted:
  - 0.980739863315159
  - 0.9811559531239165
  - 0.9806602258123739
  - 0.981593359082262
  - 0.9789017999544316
  train_precision_weighted_oob:
  - 0.9670191207808573
  - 0.9699859001918498
  - 0.9670862401321829
  - 0.9658500028823428
  - 0.9640749601275918
  train_recall_macro:
  - 0.9757869249394674
  - 0.9758454106280192
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_recall_macro_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307692
  - 0.9620481927710842
  - 0.9635167464114832
  train_recall_micro:
  - 0.9757869249394673
  - 0.9758454106280193
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_recall_micro_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307693
  - 0.9620481927710843
  - 0.9635167464114832
  train_recall_samples:
  - 0.9757869249394673
  - 0.9758454106280193
  - 0.9765625
  - 0.9759036144578314
  - 0.9748803827751196
  train_recall_samples_oob:
  - 0.9648910411622276
  - 0.9667874396135265
  - 0.9645432692307693
  - 0.9620481927710843
  - 0.9635167464114832
  train_recall_weighted:
  - 0.980739863315159
  - 0.9811559531239165
  - 0.9806602258123739
  - 0.981593359082262
  - 0.9789017999544316
  train_recall_weighted_oob:
  - 0.9670191207808573
  - 0.9699859001918498
  - 0.9670862401321829
  - 0.9658500028823428
  - 0.9640749601275918
  train_roc_auc_macro:
  - 0.9974431772567752
  - 0.9965524951294585
  - 0.9969409491620735
  - 0.9957348356992121
  - 0.9952815037992286
  train_roc_auc_macro_oob:
  - 0.9893451968957215
  - 0.9880415488737037
  - 0.9896847148779171
  - 0.9880237117343282
  - 0.9886855669822905
  train_roc_auc_micro:
  - 0.9975960931659531
  - 0.9973564400058748
  - 0.9971015326221353
  - 0.9974574116450547
  - 0.9971816522136011
  train_roc_auc_micro_oob:
  - 0.989947475218206
  - 0.9907514048743536
  - 0.9900623975616067
  - 0.9918714220773718
  - 0.990354480450327
  train_roc_auc_samples:
  - 0.9808313155770784
  - 0.982487922705314
  - 0.9803685897435899
  - 0.9783132530120482
  - 0.97707336523126
  train_roc_auc_samples_oob:
  - 0.9673123486682809
  - 0.9665861513687601
  - 0.9659455128205129
  - 0.9678714859437751
  - 0.962121212121212
  train_roc_auc_weighted:
  - 0.9982177695072612
  - 0.9981677888250231
  - 0.9977866601476162
  - 0.9977562883177281
  - 0.9975819830853077
  train_roc_auc_weighted_oob:
  - 0.9920518046813938
  - 0.9933467057567388
  - 0.9919013729930636
  - 0.992790752327332
  - 0.9910606257544428
start: 2023-12-21 16:27:20.496424
wrapper: null
