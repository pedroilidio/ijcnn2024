active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0AAmZmZmZn5v0BmZmZmZhLAgDMzMzMzA0AAZ2ZmZmb2Pw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 11:41:50.268736
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__4
  params: {}
hash: ceedd0dfc73ec403c6373952f81a85a3c5f35f1432e626c00e392e281342826e
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ceedd0d_20231222T113340156108_embedding__4_scene.yml
results:
  fit_time:
  - 370.4898805618286
  - 414.36520314216614
  - 421.8696892261505
  - 375.6831593513489
  - 397.8404529094696
  score_time:
  - 9.721663236618042
  - 11.024635553359985
  - 10.905173778533936
  - 10.031915664672852
  - 9.6756112575531
  test_average_precision_macro:
  - 0.8377927959515148
  - 0.8530385589812596
  - 0.8503229336030368
  - 0.8119311095121883
  - 0.840291463040845
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.850123757111586
  - 0.8641777326646851
  - 0.8518402053230806
  - 0.8146856868961716
  - 0.8467139349379121
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8786708420320111
  - 0.8839026915113871
  - 0.8783264746227708
  - 0.8550104384133611
  - 0.8726736111111111
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8257492548486363
  - 0.8420335697494573
  - 0.8415404384041663
  - 0.8002741178187381
  - 0.8291553341945287
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9046624913013223
  - 0.9033816425120773
  - 0.9036351165980796
  - 0.8973556019485037
  - 0.8986111111111111
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9046624913013221
  - 0.9033816425120773
  - 0.9036351165980796
  - 0.8973556019485038
  - 0.8986111111111111
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9046624913013223
  - 0.9033816425120774
  - 0.9036351165980796
  - 0.897355601948504
  - 0.8986111111111111
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8988140185670501
  - 0.8980821830035521
  - 0.8990331215789684
  - 0.892151201528006
  - 0.893063583815029
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8303753757114211
  - 0.8274008439916244
  - 0.8271254639516351
  - 0.8170207538490235
  - 0.81982520481053
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8259212198221093
  - 0.8237885462555066
  - 0.8242101970597435
  - 0.8138213947617545
  - 0.8158890290037831
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8419823044040161
  - 0.8402346445824705
  - 0.8397511267881638
  - 0.8312456506610995
  - 0.832142857142857
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8209197334368643
  - 0.8189545724823354
  - 0.8197645868670433
  - 0.8086177839759999
  - 0.8110043143191183
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8786708420320113
  - 0.8839026915113873
  - 0.8783264746227707
  - 0.8550104384133611
  - 0.8726736111111109
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6435098647139007
  - 0.6357279263215635
  - 0.6353228173430896
  - 0.6177930767275582
  - 0.616766927442315
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6447032738856748
  - 0.6362008877858609
  - 0.6334708982617147
  - 0.612909168991688
  - 0.6192159810481239
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5230615391164396
  - 0.5126357365352422
  - 0.5043218669601296
  - 0.4943610806682097
  - 0.49266992952647326
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6241814030167511
  - 0.6182930958110113
  - 0.6205815860450102
  - 0.6012886788522748
  - 0.5971447015266571
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9111757247092392
  - 0.914823843576365
  - 0.9100402223819912
  - 0.892947044953793
  - 0.9062856444312022
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4363256784968685
  - -1.3933747412008282
  - -1.3950617283950617
  - -1.498956158663883
  - -1.4479166666666667
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0953375086986778
  - -0.09661835748792269
  - -0.09636488340192044
  - -0.10264439805149617
  - -0.10138888888888888
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0953375086986778
  - -0.0966183574879227
  - -0.09636488340192044
  - -0.10264439805149617
  - -0.10138888888888889
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0953375086986778
  - -0.09661835748792269
  - -0.09636488340192043
  - -0.10264439805149617
  - -0.10138888888888888
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10118598143294986
  - -0.1019178169964479
  - -0.1009668784210316
  - -0.10784879847199395
  - -0.1069364161849711
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06805845511482254
  - -0.06283643892339545
  - -0.06574074074074074
  - -0.08178496868475991
  - -0.07104166666666666
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9046624913013223
  - 0.9033816425120773
  - 0.9036351165980796
  - 0.8973556019485037
  - 0.8986111111111111
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9046624913013221
  - 0.9033816425120773
  - 0.9036351165980796
  - 0.8973556019485038
  - 0.8986111111111111
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9046624913013223
  - 0.9033816425120774
  - 0.9036351165980796
  - 0.897355601948504
  - 0.8986111111111111
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8988140185670501
  - 0.8980821830035521
  - 0.8990331215789684
  - 0.892151201528006
  - 0.893063583815029
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9046624913013223
  - 0.9033816425120773
  - 0.9036351165980796
  - 0.8973556019485037
  - 0.8986111111111111
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9046624913013221
  - 0.9033816425120773
  - 0.9036351165980796
  - 0.8973556019485038
  - 0.8986111111111111
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9046624913013223
  - 0.9033816425120774
  - 0.9036351165980796
  - 0.897355601948504
  - 0.8986111111111111
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8988140185670501
  - 0.8980821830035521
  - 0.8990331215789684
  - 0.892151201528006
  - 0.893063583815029
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9421337298177811
  - 0.9506560421422048
  - 0.9470115709392602
  - 0.934073370993359
  - 0.9451579374575113
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9510368309057591
  - 0.9599675704745092
  - 0.9532120516127989
  - 0.9422650666478468
  - 0.9508033972084916
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9319415448851774
  - 0.9371635610766045
  - 0.9342592592592592
  - 0.9182150313152402
  - 0.9289583333333334
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9360285788346738
  - 0.9456528900250034
  - 0.9428426196037053
  - 0.9278632809745072
  - 0.9402475724385873
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.994480965674005
  - 0.9943473174807362
  - 0.994861104624117
  - 0.9945686056509201
  - 0.9944339567186918
  train_average_precision_macro_oob:
  - 0.8580730560830729
  - 0.8528319348166972
  - 0.8581664858185462
  - 0.8610885060519912
  - 0.859648158164901
  train_average_precision_micro:
  - 0.9942562768414327
  - 0.9938908226687106
  - 0.994453112643259
  - 0.9941953272822404
  - 0.994186178005168
  train_average_precision_micro_oob:
  - 0.8636516597687262
  - 0.8595683143510046
  - 0.8642411922546613
  - 0.8688873924088285
  - 0.8654855508194498
  train_average_precision_samples:
  - 0.9894536652835407
  - 0.9880024255024255
  - 0.9905865000867603
  - 0.988762102351314
  - 0.9887562705414289
  train_average_precision_samples_oob:
  - 0.8799619640387275
  - 0.8777286902286903
  - 0.8846043727225403
  - 0.8857970262793914
  - 0.8867799688635183
  train_average_precision_weighted:
  - 0.9943708153683392
  - 0.9942465480906544
  - 0.9948359823553571
  - 0.9944386569689454
  - 0.9943669003740215
  train_average_precision_weighted_oob:
  - 0.8488257647428958
  - 0.8434935438105742
  - 0.8493108104630637
  - 0.8517717262316127
  - 0.851164509118465
  train_f1_macro:
  - 0.9554806362378976
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381767
  train_f1_macro_oob:
  - 0.8991182572614108
  - 0.8962231462231464
  - 0.8983168488634391
  - 0.8983402489626555
  - 0.8983739837398375
  train_f1_micro:
  - 0.9554806362378977
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381768
  train_f1_micro_oob:
  - 0.8991182572614108
  - 0.8962231462231462
  - 0.8983168488634392
  - 0.8983402489626556
  - 0.8983739837398373
  train_f1_samples:
  - 0.9554806362378977
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381768
  train_f1_samples_oob:
  - 0.8991182572614109
  - 0.8962231462231462
  - 0.8983168488634392
  - 0.8983402489626557
  - 0.8983739837398375
  train_f1_weighted:
  - 0.9537559090507799
  - 0.9520889547485293
  - 0.9529811616836038
  - 0.9552896036822717
  - 0.9543386863499332
  train_f1_weighted_oob:
  - 0.893963889580006
  - 0.8909217579430346
  - 0.8928235344413512
  - 0.8929558897886787
  - 0.893099838188759
  train_jaccard_macro:
  - 0.9152156525589157
  - 0.9125507381089438
  - 0.9143656645717475
  - 0.9178608338716788
  - 0.9166796418910405
  train_jaccard_macro_oob:
  - 0.8200100216145594
  - 0.815522971844126
  - 0.8192149587083243
  - 0.819311437747278
  - 0.8191186150068249
  train_jaccard_micro:
  - 0.914756269138459
  - 0.9120496894409937
  - 0.9138231631382316
  - 0.9174540029835903
  - 0.9161418627775937
  train_jaccard_micro_oob:
  - 0.8167255594817432
  - 0.8119604457698948
  - 0.8154040006300205
  - 0.815442561205273
  - 0.8154981549815498
  train_jaccard_samples:
  - 0.9249407231772376
  - 0.9225819225819225
  - 0.9242210158399643
  - 0.9273364947638807
  - 0.9263721056663454
  train_jaccard_samples_oob:
  - 0.8313697885793321
  - 0.8262795762795762
  - 0.8298877072953073
  - 0.8299619640387275
  - 0.8302814639088639
  train_jaccard_weighted:
  - 0.9120777173041462
  - 0.9090899546624184
  - 0.9107679248307787
  - 0.9148393468550722
  - 0.9132259967217015
  train_jaccard_weighted_oob:
  - 0.8117822708105621
  - 0.8070891274093588
  - 0.810455508718719
  - 0.8107576221953767
  - 0.810690431185631
  train_label_ranking_average_precision_score:
  - 0.9894536652835408
  - 0.9880024255024252
  - 0.9905865000867601
  - 0.9887621023513138
  - 0.9887562705414286
  train_label_ranking_average_precision_score_oob:
  - 0.8799619640387272
  - 0.87772869022869
  - 0.8846043727225403
  - 0.885797026279391
  - 0.8867799688635183
  train_matthews_corrcoef_macro:
  - 0.8466684839385797
  - 0.8420605346738932
  - 0.8460479882675048
  - 0.8519336870508954
  - 0.849712235492256
  train_matthews_corrcoef_macro_oob:
  - 0.6202893250621758
  - 0.606183539246164
  - 0.6166694835970418
  - 0.6118785385453005
  - 0.613747554342988
  train_matthews_corrcoef_micro:
  - 0.8439086033217135
  - 0.8388537271114076
  - 0.8426862274809307
  - 0.8492718813694504
  - 0.8465595597843377
  train_matthews_corrcoef_micro_oob:
  - 0.6200373150497711
  - 0.6081916279535453
  - 0.6185857781751876
  - 0.616418042147218
  - 0.6162857295267686
  train_matthews_corrcoef_samples:
  - 0.7803945368312056
  - 0.7723256845719402
  - 0.7815697033850945
  - 0.7882609168968787
  - 0.7840463157863581
  train_matthews_corrcoef_samples_oob:
  - 0.4700010840173687
  - 0.45280108041045875
  - 0.467033012774496
  - 0.46670486316301346
  - 0.468202906616271
  train_matthews_corrcoef_weighted:
  - 0.8424843154142552
  - 0.8373358984201879
  - 0.8410946944399814
  - 0.847982874766146
  - 0.8449648630791275
  train_matthews_corrcoef_weighted_oob:
  - 0.6033409718208163
  - 0.5886617303246469
  - 0.5985564570586807
  - 0.5936603265326532
  - 0.596622768284379
  train_ndgc:
  - 0.9922705533174837
  - 0.9912460635688441
  - 0.9931934965867656
  - 0.9917897254620389
  - 0.9918404306967833
  train_ndgc_oob:
  - 0.911502912084121
  - 0.9098698007676995
  - 0.914928779032766
  - 0.9160297506963103
  - 0.9166123607262573
  train_neg_coverage_error:
  - -1.0959543568464731
  - -1.1039501039501038
  - -1.101509630400833
  - -1.1006224066390042
  - -1.0985988583290087
  train_neg_coverage_error_oob:
  - -1.420124481327801
  - -1.4303534303534304
  - -1.420614263404477
  - -1.4061203319502074
  - -1.4021795537104307
  train_neg_hamming_loss_macro:
  - -0.04451936376210235
  - -0.045997920997921
  - -0.045028630921395106
  - -0.043049792531120325
  - -0.04376405466182321
  train_neg_hamming_loss_macro_oob:
  - -0.10088174273858923
  - -0.10377685377685379
  - -0.10168315113656083
  - -0.10165975103734441
  - -0.10162601626016259
  train_neg_hamming_loss_micro:
  - -0.04451936376210235
  - -0.045997920997921
  - -0.045028630921395106
  - -0.04304979253112033
  - -0.04376405466182321
  train_neg_hamming_loss_micro_oob:
  - -0.10088174273858921
  - -0.10377685377685378
  - -0.10168315113656082
  - -0.1016597510373444
  - -0.1016260162601626
  train_neg_hamming_loss_samples:
  - -0.04451936376210234
  - -0.045997920997921
  - -0.045028630921395106
  - -0.04304979253112033
  - -0.04376405466182321
  train_neg_hamming_loss_samples_oob:
  - -0.10088174273858921
  - -0.10377685377685375
  - -0.1016831511365608
  - -0.1016597510373444
  - -0.10162601626016261
  train_neg_hamming_loss_weighted:
  - -0.04624409094922029
  - -0.04791104525147078
  - -0.0470188383163962
  - -0.04471039631772836
  - -0.04566131365006674
  train_neg_hamming_loss_weighted_oob:
  - -0.10603611041999406
  - -0.10907824205696547
  - -0.10717646555864876
  - -0.1070441102113213
  - -0.10690016181124097
  train_neg_label_ranking_loss:
  - -0.004603215767634855
  - -0.005665280665280665
  - -0.0045288912024986985
  - -0.005420124481327801
  - -0.005072651790347691
  train_neg_label_ranking_loss_oob:
  - -0.06754408713692946
  - -0.06919178794178794
  - -0.06668401874023946
  - -0.06449688796680497
  - -0.06411520498183705
  train_precision_macro:
  - 0.9554806362378976
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381767
  train_precision_macro_oob:
  - 0.8991182572614108
  - 0.8962231462231464
  - 0.8983168488634391
  - 0.8983402489626555
  - 0.8983739837398375
  train_precision_micro:
  - 0.9554806362378977
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381768
  train_precision_micro_oob:
  - 0.8991182572614108
  - 0.8962231462231462
  - 0.8983168488634392
  - 0.8983402489626556
  - 0.8983739837398373
  train_precision_samples:
  - 0.9554806362378977
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381768
  train_precision_samples_oob:
  - 0.8991182572614109
  - 0.8962231462231462
  - 0.8983168488634392
  - 0.8983402489626557
  - 0.8983739837398375
  train_precision_weighted:
  - 0.9537559090507799
  - 0.9520889547485293
  - 0.9529811616836038
  - 0.9552896036822717
  - 0.9543386863499332
  train_precision_weighted_oob:
  - 0.893963889580006
  - 0.8909217579430346
  - 0.8928235344413512
  - 0.8929558897886787
  - 0.893099838188759
  train_recall_macro:
  - 0.9554806362378976
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381767
  train_recall_macro_oob:
  - 0.8991182572614108
  - 0.8962231462231464
  - 0.8983168488634391
  - 0.8983402489626555
  - 0.8983739837398375
  train_recall_micro:
  - 0.9554806362378977
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381768
  train_recall_micro_oob:
  - 0.8991182572614108
  - 0.8962231462231462
  - 0.8983168488634392
  - 0.8983402489626556
  - 0.8983739837398373
  train_recall_samples:
  - 0.9554806362378977
  - 0.954002079002079
  - 0.9549713690786049
  - 0.9569502074688797
  - 0.9562359453381768
  train_recall_samples_oob:
  - 0.8991182572614109
  - 0.8962231462231462
  - 0.8983168488634392
  - 0.8983402489626557
  - 0.8983739837398375
  train_recall_weighted:
  - 0.9537559090507799
  - 0.9520889547485293
  - 0.9529811616836038
  - 0.9552896036822717
  - 0.9543386863499332
  train_recall_weighted_oob:
  - 0.893963889580006
  - 0.8909217579430346
  - 0.8928235344413512
  - 0.8929558897886787
  - 0.893099838188759
  train_roc_auc_macro:
  - 0.9986737537710919
  - 0.998586041231977
  - 0.9987476734073327
  - 0.9986229853567502
  - 0.9985801914805897
  train_roc_auc_macro_oob:
  - 0.9512366407832059
  - 0.9489594556000324
  - 0.9500837832525293
  - 0.9519304548034903
  - 0.9509100976501593
  train_roc_auc_micro:
  - 0.9987030184261427
  - 0.9985750420690203
  - 0.9986978847364246
  - 0.9986328514710374
  - 0.998640253887916
  train_roc_auc_micro_oob:
  - 0.9564992873867454
  - 0.9543514900312139
  - 0.9561771479601429
  - 0.9578064746004277
  - 0.9567425750568233
  train_roc_auc_samples:
  - 0.9953967842323651
  - 0.9943347193347193
  - 0.9954711087975012
  - 0.9945798755186722
  - 0.9949273482096522
  train_roc_auc_samples_oob:
  - 0.9324559128630706
  - 0.9308082120582121
  - 0.9333159812597606
  - 0.935503112033195
  - 0.935884795018163
  train_roc_auc_weighted:
  - 0.9986232215419183
  - 0.9985292630876902
  - 0.9987199940379359
  - 0.9985590101227052
  - 0.9985291565977217
  train_roc_auc_weighted_oob:
  - 0.9471812021295594
  - 0.9446540391547962
  - 0.9458541498882582
  - 0.9480091210255156
  - 0.9467961672873663
start: 2023-12-22 11:33:40.156108
wrapper: null
