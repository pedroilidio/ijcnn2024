active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AzczMzMz8PwAzMzMzM/O/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:32:41.292868
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__9
  params: {}
hash: 665d9f6d13c2dab43da9bbd6ac8c8aa9af592eed8e92c69f50b25f878ce2681c
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/665d9f6_20231221T163106468731_embedding__9_Gram_positive.yml
results:
  fit_time:
  - 73.50986075401306
  - 75.14500546455383
  - 74.94737696647644
  - 75.84031510353088
  - 75.63315939903259
  score_time:
  - 5.195254564285278
  - 5.141277551651001
  - 5.689652442932129
  - 5.661479949951172
  - 5.861782789230347
  test_average_precision_macro:
  - 0.8751914139631373
  - 0.9333584726441156
  - 0.8415651966802735
  - 0.9274305555555555
  - 0.872580364636276
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9669786004940468
  - 0.9775723502336963
  - 0.9668174661781076
  - 0.9956501175930702
  - 0.9924318051479097
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9447115384615384
  - 0.9665032679738562
  - 0.9523809523809523
  - 0.9743589743589745
  - 0.9783653846153846
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9616577253716139
  - 0.9791759521390605
  - 0.9531936038217743
  - 0.9867195767195767
  - 0.9803464869983755
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9543269230769229
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692308
  - 0.9735576923076923
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9543269230769231
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692307
  - 0.9735576923076923
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9543269230769231
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692307
  - 0.9735576923076923
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9522928994082841
  - 0.9723015419760138
  - 0.9477987421383648
  - 0.986996336996337
  - 0.9774725274725273
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9126741420319402
  - 0.942945262284885
  - 0.9015569536610621
  - 0.962523709693521
  - 0.9488496615686455
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9126436781609195
  - 0.9428571428571428
  - 0.9004524886877828
  - 0.9622641509433962
  - 0.9484777517564403
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9307692307692308
  - 0.9568627450980391
  - 0.9250793650793652
  - 0.9705128205128204
  - 0.9589743589743589
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9089364593951749
  - 0.9462039700544921
  - 0.9018487704600551
  - 0.9744065564730434
  - 0.9563566000219242
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9447115384615384
  - 0.9665032679738563
  - 0.9523809523809523
  - 0.9743589743589743
  - 0.9783653846153846
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6632971960115115
  - 0.6960954731991212
  - 0.644326759979357
  - 0.7264866973335754
  - 0.7011213682630824
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8762287592552924
  - 0.9212700361838562
  - 0.8587874424533897
  - 0.948780210532604
  - 0.9295063390854529
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8365384615384616
  - 0.9076210810704867
  - 0.8404192089129171
  - 0.9350386243832336
  - 0.9061924705370797
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8536867173063846
  - 0.9072029180945371
  - 0.8410822678272604
  - 0.9344431855519164
  - 0.9175624462586075
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9587359418194268
  - 0.9758025890509346
  - 0.964251669015042
  - 0.9809972982142868
  - 0.9838794790268055
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1538461538461537
  - -1.0980392156862746
  - -1.161904761904762
  - -1.0673076923076923
  - -1.0673076923076923
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04567307692307692
  - -0.029411764705882353
  - -0.052380952380952375
  - -0.019230769230769232
  - -0.026442307692307696
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04567307692307692
  - -0.029411764705882353
  - -0.05238095238095238
  - -0.019230769230769232
  - -0.026442307692307692
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04567307692307692
  - -0.029411764705882353
  - -0.05238095238095238
  - -0.019230769230769232
  - -0.026442307692307692
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.04770710059171598
  - -0.02769845802398629
  - -0.05220125786163522
  - -0.013003663003663004
  - -0.02252747252747253
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05128205128205128
  - -0.027777777777777776
  - -0.050793650793650794
  - -0.01923076923076923
  - -0.01923076923076923
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9543269230769229
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692308
  - 0.9735576923076923
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9543269230769231
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692307
  - 0.9735576923076923
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9543269230769231
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692307
  - 0.9735576923076923
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9522928994082841
  - 0.9723015419760138
  - 0.9477987421383648
  - 0.986996336996337
  - 0.9774725274725273
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9543269230769229
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692308
  - 0.9735576923076923
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9543269230769231
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692307
  - 0.9735576923076923
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9543269230769231
  - 0.9705882352941176
  - 0.9476190476190476
  - 0.9807692307692307
  - 0.9735576923076923
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9522928994082841
  - 0.9723015419760138
  - 0.9477987421383648
  - 0.986996336996337
  - 0.9774725274725273
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9742794678626134
  - 0.9883300126920369
  - 0.984966454128406
  - 0.9972389240506329
  - 0.9925944813209209
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9797059911242605
  - 0.9890179850389942
  - 0.9839262107919721
  - 0.998530087276068
  - 0.996692696371153
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9487179487179487
  - 0.9722222222222223
  - 0.9492063492063493
  - 0.9807692307692307
  - 0.9807692307692307
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9808108045336307
  - 0.9904291786644728
  - 0.989938960203298
  - 0.9988704038577455
  - 0.9973629881267866
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9415701709684396
  - 0.9174348456971997
  - 0.9754783066818367
  - 0.9067133975451138
  - 0.9078775724103392
  train_average_precision_macro_oob:
  - 0.8717230444911453
  - 0.8574490375208744
  - 0.9213310073589643
  - 0.8552560781242129
  - 0.8717729950861767
  train_average_precision_micro:
  - 0.9955405130614323
  - 0.9945095853575636
  - 0.9953010659620171
  - 0.9940411110898318
  - 0.9942420599692001
  train_average_precision_micro_oob:
  - 0.984475356263667
  - 0.9826645318264041
  - 0.9832798317973895
  - 0.9801821542938043
  - 0.9808048842647575
  train_average_precision_samples:
  - 0.976305220883534
  - 0.9742206235011991
  - 0.9782608695652174
  - 0.9748995983935744
  - 0.9767068273092369
  train_average_precision_samples_oob:
  - 0.9640562248995985
  - 0.9588329336530776
  - 0.9690016103059582
  - 0.9580321285140563
  - 0.9582329317269075
  train_average_precision_weighted:
  - 0.9902635355850435
  - 0.9851859266869557
  - 0.9946810782883648
  - 0.9848488052293728
  - 0.9841521260640924
  train_average_precision_weighted_oob:
  - 0.9734924255500927
  - 0.9688831896796215
  - 0.9809044184175918
  - 0.9675985767115068
  - 0.9704047690406441
  train_f1_macro:
  - 0.9789156626506024
  - 0.9778177458033572
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_f1_macro_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164252
  - 0.9644578313253013
  - 0.963855421686747
  train_f1_micro:
  - 0.9789156626506024
  - 0.9778177458033573
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_f1_micro_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164251
  - 0.9644578313253012
  - 0.963855421686747
  train_f1_samples:
  - 0.9789156626506024
  - 0.9778177458033573
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_f1_samples_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164251
  - 0.9644578313253012
  - 0.963855421686747
  train_f1_weighted:
  - 0.9838801506742962
  - 0.9834303985383123
  - 0.9845051495035855
  - 0.9816682999942353
  - 0.9844987605926098
  train_f1_weighted_oob:
  - 0.9650113580814905
  - 0.9629210916980702
  - 0.9716864189807575
  - 0.9652043581022656
  - 0.964639418919698
  train_jaccard_macro:
  - 0.9589170539519866
  - 0.9568478453787798
  - 0.964509864162514
  - 0.9553852416197999
  - 0.9589216907706996
  train_jaccard_macro_oob:
  - 0.9285724878557147
  - 0.9234806054399186
  - 0.939306859767808
  - 0.9314197509856237
  - 0.9302534372559911
  train_jaccard_micro:
  - 0.9587020648967551
  - 0.9565982404692082
  - 0.9644128113879004
  - 0.9552414605418139
  - 0.9587020648967551
  train_jaccard_micro_oob:
  - 0.9279907084785134
  - 0.9227665706051873
  - 0.9391100702576113
  - 0.9313554392088423
  - 0.9302325581395349
  train_jaccard_samples:
  - 0.9675502008032127
  - 0.9651478816946444
  - 0.9726247987117551
  - 0.9643373493975903
  - 0.9675502008032127
  train_jaccard_samples_oob:
  - 0.946987951807229
  - 0.9411670663469224
  - 0.9529790660225442
  - 0.9476305220883534
  - 0.9457028112449799
  train_jaccard_weighted:
  - 0.9684165488139889
  - 0.9675673928358054
  - 0.9695935183287083
  - 0.9640920705290962
  - 0.9695840588716946
  train_jaccard_weighted_oob:
  - 0.9330011320359429
  - 0.929252388452189
  - 0.9451618089125237
  - 0.9328153513833202
  - 0.9317194709114659
  train_label_ranking_average_precision_score:
  - 0.976305220883534
  - 0.9742206235011991
  - 0.9782608695652174
  - 0.9748995983935744
  - 0.9767068273092371
  train_label_ranking_average_precision_score_oob:
  - 0.9640562248995982
  - 0.9588329336530773
  - 0.969001610305958
  - 0.9580321285140563
  - 0.9582329317269077
  train_matthews_corrcoef_macro:
  - 0.7183205880418136
  - 0.7166840184120699
  - 0.8659526251541858
  - 0.7140665639600745
  - 0.7197533218411293
  train_matthews_corrcoef_macro_oob:
  - 0.6769746188237484
  - 0.669817482152276
  - 0.6925430563390307
  - 0.6837145630380776
  - 0.6845664901832066
  train_matthews_corrcoef_micro:
  - 0.9438297125681252
  - 0.9409215364088449
  - 0.9516498581528494
  - 0.9389590862976237
  - 0.9437371787325904
  train_matthews_corrcoef_micro_oob:
  - 0.8998071079240527
  - 0.8918273738099523
  - 0.9157572645852097
  - 0.9044654872251281
  - 0.9029485852589291
  train_matthews_corrcoef_samples:
  - 0.9276531752853618
  - 0.9186220243187103
  - 0.9397714592775416
  - 0.9174266284519731
  - 0.9262619698174351
  train_matthews_corrcoef_samples_oob:
  - 0.8887261860362553
  - 0.8694900486071694
  - 0.8946828924498444
  - 0.8839069089278215
  - 0.8760900006486497
  train_matthews_corrcoef_weighted:
  - 0.9302303348919515
  - 0.92680962362962
  - 0.9501844463764925
  - 0.924988552840071
  - 0.9295479373457612
  train_matthews_corrcoef_weighted_oob:
  - 0.883714478329363
  - 0.8749780120667814
  - 0.9002691225513315
  - 0.8866644668898207
  - 0.8842001658572113
  train_ndgc:
  - 0.9825938707311672
  - 0.9808766249765389
  - 0.9839425868312862
  - 0.9814803461464902
  - 0.9828522098619761
  train_ndgc_oob:
  - 0.9734081307040954
  - 0.9693863083080027
  - 0.9769826700362102
  - 0.968942905734398
  - 0.9691099501727753
  train_neg_coverage_error:
  - -1.0602409638554218
  - -1.0671462829736211
  - -1.0628019323671498
  - -1.0674698795180724
  - -1.0602409638554218
  train_neg_coverage_error_oob:
  - -1.1036144578313254
  - -1.1103117505995204
  - -1.0990338164251208
  - -1.1156626506024097
  - -1.1132530120481927
  train_neg_hamming_loss_macro:
  - -0.021084337349397592
  - -0.022182254196642687
  - -0.018115942028985504
  - -0.022891566265060243
  - -0.02108433734939759
  train_neg_hamming_loss_macro_oob:
  - -0.03734939759036145
  - -0.04016786570743405
  - -0.03140096618357488
  - -0.035542168674698796
  - -0.03614457831325302
  train_neg_hamming_loss_micro:
  - -0.02108433734939759
  - -0.022182254196642687
  - -0.018115942028985508
  - -0.02289156626506024
  - -0.02108433734939759
  train_neg_hamming_loss_micro_oob:
  - -0.03734939759036145
  - -0.04016786570743405
  - -0.03140096618357488
  - -0.035542168674698796
  - -0.03614457831325301
  train_neg_hamming_loss_samples:
  - -0.02108433734939759
  - -0.022182254196642687
  - -0.018115942028985508
  - -0.02289156626506024
  - -0.02108433734939759
  train_neg_hamming_loss_samples_oob:
  - -0.03734939759036145
  - -0.04016786570743405
  - -0.03140096618357488
  - -0.035542168674698796
  - -0.03614457831325301
  train_neg_hamming_loss_weighted:
  - -0.016119849325703768
  - -0.016569601461687792
  - -0.015494850496414463
  - -0.018331700005764687
  - -0.015501239407390326
  train_neg_hamming_loss_weighted_oob:
  - -0.03498864191850936
  - -0.037078908301929885
  - -0.028313581019242574
  - -0.03479564189773448
  - -0.035360581080302066
  train_neg_label_ranking_loss:
  - -0.016666666666666666
  - -0.019984012789768184
  - -0.01831723027375201
  - -0.019879518072289156
  - -0.017469879518072287
  train_neg_label_ranking_loss_oob:
  - -0.030923694779116464
  - -0.03437250199840128
  - -0.030193236714975844
  - -0.0357429718875502
  - -0.034939759036144574
  train_precision_macro:
  - 0.9789156626506024
  - 0.9778177458033572
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_precision_macro_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164252
  - 0.9644578313253013
  - 0.963855421686747
  train_precision_micro:
  - 0.9789156626506024
  - 0.9778177458033573
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_precision_micro_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164251
  - 0.9644578313253012
  - 0.963855421686747
  train_precision_samples:
  - 0.9789156626506024
  - 0.9778177458033573
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_precision_samples_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164251
  - 0.9644578313253012
  - 0.963855421686747
  train_precision_weighted:
  - 0.9838801506742962
  - 0.9834303985383123
  - 0.9845051495035855
  - 0.9816682999942353
  - 0.9844987605926098
  train_precision_weighted_oob:
  - 0.9650113580814905
  - 0.9629210916980702
  - 0.9716864189807575
  - 0.9652043581022656
  - 0.964639418919698
  train_recall_macro:
  - 0.9789156626506024
  - 0.9778177458033572
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_recall_macro_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164252
  - 0.9644578313253013
  - 0.963855421686747
  train_recall_micro:
  - 0.9789156626506024
  - 0.9778177458033573
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_recall_micro_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164251
  - 0.9644578313253012
  - 0.963855421686747
  train_recall_samples:
  - 0.9789156626506024
  - 0.9778177458033573
  - 0.9818840579710145
  - 0.9771084337349397
  - 0.9789156626506024
  train_recall_samples_oob:
  - 0.9626506024096385
  - 0.959832134292566
  - 0.9685990338164251
  - 0.9644578313253012
  - 0.963855421686747
  train_recall_weighted:
  - 0.9838801506742962
  - 0.9834303985383123
  - 0.9845051495035855
  - 0.9816682999942353
  - 0.9844987605926098
  train_recall_weighted_oob:
  - 0.9650113580814905
  - 0.9629210916980702
  - 0.9716864189807575
  - 0.9652043581022656
  - 0.964639418919698
  train_roc_auc_macro:
  - 0.9974743952064733
  - 0.9962000847790383
  - 0.9983236843678116
  - 0.9965855498381273
  - 0.9965690153381275
  train_roc_auc_macro_oob:
  - 0.9902055238516838
  - 0.9882624597535247
  - 0.987352575415882
  - 0.9856457855056776
  - 0.9892107929807503
  train_roc_auc_micro:
  - 0.9983999353820059
  - 0.9979376526251527
  - 0.9982309551874239
  - 0.9978272426785013
  - 0.9978831025741781
  train_roc_auc_micro_oob:
  - 0.992893943793884
  - 0.991222145909646
  - 0.9905876751383397
  - 0.9899278829484779
  - 0.9903670573006957
  train_roc_auc_samples:
  - 0.9833333333333334
  - 0.9800159872102318
  - 0.9816827697262479
  - 0.9801204819277108
  - 0.9825301204819277
  train_roc_auc_samples_oob:
  - 0.9690763052208834
  - 0.9656274980015986
  - 0.9698067632850241
  - 0.9642570281124498
  - 0.9650602409638555
  train_roc_auc_weighted:
  - 0.9989279803569272
  - 0.9981797476131852
  - 0.9988586707752473
  - 0.9983802422006202
  - 0.9984003312120592
  train_roc_auc_weighted_oob:
  - 0.9942369655727741
  - 0.9922006715311075
  - 0.9930119235099317
  - 0.9909556726884317
  - 0.9914356812939956
start: 2023-12-21 16:31:06.468731
wrapper: null
