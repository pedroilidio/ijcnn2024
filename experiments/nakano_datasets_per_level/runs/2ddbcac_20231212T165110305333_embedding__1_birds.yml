active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T9oZmZmZmb2P8zMzMzMzATAoJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT80MzMzMzPzP5iZmZmZmem/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:51:23.810971
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 2ddbcac29314645707bbc0bab090ba1f1ef12867bf0a14afdb0504c614dbc919
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2ddbcac_20231212T165110305333_embedding__1_birds.yml
results:
  fit_time:
  - 3.9097416400909424
  - 3.8943233489990234
  - 4.124423265457153
  - 3.8246097564697266
  - 3.7725203037261963
  score_time:
  - 2.0066659450531006
  - 1.8333752155303955
  - 2.0873849391937256
  - 1.7243242263793945
  - 1.7577552795410156
  test_average_precision_macro:
  - 0.5993837633795647
  - 0.5430351271784143
  - 0.5127074203479468
  - 0.5205690530423854
  - 0.5607805666130822
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5618325326519549
  - 0.5986520805743349
  - 0.43544166044285654
  - 0.5286374396994724
  - 0.4918540436000055
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3347107887805562
  - 0.34263097616830784
  - 0.3501139364511458
  - 0.3294356228566755
  - 0.3160953096657611
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6591185086935534
  - 0.6647989086119288
  - 0.5310063645892813
  - 0.5828725203137273
  - 0.6123180067759749
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9506323949408405
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9506323949408405
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9506323949408404
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9287754269394418
  - 0.9251472868217053
  - 0.916393913293138
  - 0.9268673757586683
  - 0.9260629551327227
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9075854726455629
  - 0.9108827846952788
  - 0.8998328699714307
  - 0.9077381433556413
  - 0.9062274992471092
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9059097978227061
  - 0.9088785046728972
  - 0.8970588235294118
  - 0.9059097978227061
  - 0.9044289044289044
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9116953151331312
  - 0.9140610204310912
  - 0.9036621596581152
  - 0.9109249362029949
  - 0.9103310294917979
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8689661609454206
  - 0.8627050188123586
  - 0.8493710954436824
  - 0.8654997380823424
  - 0.8644437021944575
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8153309438193163
  - 0.7999953172535793
  - 0.7919744015674246
  - 0.7712960879729546
  - 0.7734596507510325
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07254454252393852
  - 0.057651187324128175
  - 0.032284412771183366
  - 0.04704583995546716
  - 0.06316122387940881
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.29283003418853853
  - 0.24684998700988128
  - 0.162418120592573
  - 0.24278369263215516
  - 0.2543859020120924
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.04842080177989212
  - 0.039452935088706134
  - 0.03355142236283866
  - 0.04367255566197603
  - 0.04599346029327977
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.16718640871404677
  - 0.14657636210356978
  - 0.0756537028713113
  - 0.12203747702804196
  - 0.15019745516128521
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.39192597562762377
  - 0.3998230141190439
  - 0.41351995910525785
  - 0.39761931899871034
  - 0.38215674985754655
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.868217054263566
  - -2.744186046511628
  - -2.992248062015504
  - -3.2170542635658914
  - -2.992248062015504
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.049367605059159526
  - -0.047735618115055084
  - -0.054263565891472874
  - -0.049367605059159526
  - -0.05018359853121175
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.049367605059159526
  - -0.04773561811505508
  - -0.05426356589147287
  - -0.049367605059159526
  - -0.05018359853121175
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.049367605059159526
  - -0.04773561811505508
  - -0.05426356589147287
  - -0.049367605059159526
  - -0.050183598531211744
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07122457306055838
  - -0.07485271317829457
  - -0.0836060867068619
  - -0.07313262424133166
  - -0.07393704486727744
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07370212943058359
  - -0.08216104271165832
  - -0.07805605247465713
  - -0.09241019405178093
  - -0.08665206392634572
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9506323949408405
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9506323949408405
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9506323949408404
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9287754269394418
  - 0.9251472868217053
  - 0.916393913293138
  - 0.9268673757586683
  - 0.9260629551327227
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9506323949408405
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9506323949408405
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9506323949408404
  - 0.9522643818849449
  - 0.9457364341085271
  - 0.9506323949408405
  - 0.9498164014687882
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9287754269394418
  - 0.9251472868217053
  - 0.916393913293138
  - 0.9268673757586683
  - 0.9260629551327227
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.899749331288086
  - .nan
  - 0.895336900542221
  - 0.8890669508551202
  - 0.8951300259892003
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9144128656412385
  - 0.9169011177987962
  - 0.9083509243267447
  - 0.9013313836641761
  - 0.9037659910881126
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9085266294964613
  - .nan
  - 0.8869174555896072
  - 0.8870133606978814
  - 0.8969204650896776
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9612869483215991
  - 0.9611331296845549
  - 0.9648766655090298
  - 0.958219793841732
  - 0.9562834745279505
  train_average_precision_macro_oob:
  - 0.4558885402601656
  - 0.4360527949075334
  - 0.47562987390066563
  - 0.4606689097916464
  - 0.44194215967724426
  train_average_precision_micro:
  - 0.9016359025835874
  - 0.9027266932728627
  - 0.9071119662477811
  - 0.8941420547059936
  - 0.8951687666218751
  train_average_precision_micro_oob:
  - 0.5322771556302807
  - 0.5116031263785711
  - 0.550526429553306
  - 0.5271982926299426
  - 0.5197982882502785
  train_average_precision_samples:
  - 0.5190291620524179
  - 0.5125402977728559
  - 0.5080616309831426
  - 0.5052640888396702
  - 0.5075277623969484
  train_average_precision_samples_oob:
  - 0.3408371158563532
  - 0.3377543641933027
  - 0.33362774128276496
  - 0.34323085935625536
  - 0.3346040797274687
  train_average_precision_weighted:
  - 0.9551412622274257
  - 0.9584911458106254
  - 0.9627880475963313
  - 0.9540825221088528
  - 0.9551351362865063
  train_average_precision_weighted_oob:
  - 0.5587425159774004
  - 0.5424503489584629
  - 0.5904107440153432
  - 0.5672908737802872
  - 0.5491074972147562
  train_f1_macro:
  - 0.9571603427172583
  - 0.9547123623011015
  - 0.9578743370053038
  - 0.9552223582211341
  - 0.9577723378212973
  train_f1_macro_oob:
  - 0.950530395756834
  - 0.9493064055487556
  - 0.9521623827009384
  - 0.9509383924928599
  - 0.9503263973888207
  train_f1_micro:
  - 0.9571603427172583
  - 0.9547123623011016
  - 0.957874337005304
  - 0.9552223582211342
  - 0.9577723378212974
  train_f1_micro_oob:
  - 0.950530395756834
  - 0.9493064055487556
  - 0.9521623827009384
  - 0.95093839249286
  - 0.9503263973888209
  train_f1_samples:
  - 0.9571603427172584
  - 0.9547123623011018
  - 0.957874337005304
  - 0.9552223582211342
  - 0.9577723378212974
  train_f1_samples_oob:
  - 0.9505303957568341
  - 0.9493064055487557
  - 0.9521623827009384
  - 0.9509383924928602
  - 0.950326397388821
  train_f1_weighted:
  - 0.9415145293041111
  - 0.9389809645227943
  - 0.9437872473898822
  - 0.9382798080472501
  - 0.9435014404942231
  train_f1_weighted_oob:
  - 0.9262784746090553
  - 0.925319822394162
  - 0.9307926692655822
  - 0.9277260981912145
  - 0.9263825774451276
  train_jaccard_macro:
  - 0.9188092097171318
  - 0.9144230193477391
  - 0.9200894520883808
  - 0.9154299953416484
  - 0.9199052379921584
  train_jaccard_macro_oob:
  - 0.9075896560967386
  - 0.9054333000205138
  - 0.9101984004112934
  - 0.9082559990933146
  - 0.9072071369721995
  train_jaccard_micro:
  - 0.9178403755868545
  - 0.9133489461358314
  - 0.9191543505921503
  - 0.9142829249243386
  - 0.9189665296535525
  train_jaccard_micro_oob:
  - 0.905724560209933
  - 0.9035045141248422
  - 0.908692689574613
  - 0.9064657267865824
  - 0.9053541929841609
  train_jaccard_samples:
  - 0.9223523513336458
  - 0.9181978495047253
  - 0.9236208320384256
  - 0.9192285231339833
  - 0.9234551020825037
  train_jaccard_samples_oob:
  - 0.9111969799103268
  - 0.9092989004591634
  - 0.9140056676836253
  - 0.9121281061372064
  - 0.9109193407423943
  train_jaccard_weighted:
  - 0.8901409645076417
  - 0.885793055943869
  - 0.8942023156221733
  - 0.884736300584869
  - 0.8936671234093995
  train_jaccard_weighted_oob:
  - 0.8647134461059004
  - 0.8632291726578815
  - 0.8719162865074152
  - 0.8672561808264664
  - 0.8647738876153364
  train_label_ranking_average_precision_score:
  - 0.968641565153193
  - 0.9679666543620029
  - 0.9673639565645379
  - 0.9645664144210655
  - 0.9629541189860953
  train_label_ranking_average_precision_score_oob:
  - 0.7904495189571281
  - 0.7931807207824494
  - 0.79293006686416
  - 0.8025331849376505
  - 0.7900304363166155
  train_matthews_corrcoef_macro:
  - 0.18094573273339068
  - 0.09734802750027767
  - 0.14753976171293504
  - 0.11323757772650848
  - 0.16660896369231215
  train_matthews_corrcoef_macro_oob:
  - 0.06055623579318126
  - 0.04584108482805159
  - 0.07133422697948066
  - 0.06748976284675202
  - 0.04859240972030825
  train_matthews_corrcoef_micro:
  - 0.4306584617002737
  - 0.391586575644779
  - 0.44220038652393195
  - 0.39548654603035993
  - 0.4450421088634864
  train_matthews_corrcoef_micro_oob:
  - 0.2562062698705138
  - 0.2393969755259394
  - 0.3029469742069698
  - 0.2819048735790581
  - 0.25273934143638777
  train_matthews_corrcoef_samples:
  - 0.11473023635405284
  - 0.09790212202707042
  - 0.11760957102399855
  - 0.09754210629025795
  - 0.11913723304806746
  train_matthews_corrcoef_samples_oob:
  - 0.0483347969186595
  - 0.04368861927009117
  - 0.0657675551372213
  - 0.05444637691525811
  - 0.050270612178121274
  train_matthews_corrcoef_weighted:
  - 0.32191248667047717
  - 0.23216514383080836
  - 0.2938017524509691
  - 0.2493769078251891
  - 0.3229898562822834
  train_matthews_corrcoef_weighted_oob:
  - 0.14566600336580157
  - 0.11557525546522174
  - 0.17651520437758622
  - 0.15940797895262027
  - 0.12650358240755116
  train_ndgc:
  - 0.5301598363499108
  - 0.5243561657419156
  - 0.5194938529768759
  - 0.5181674009292327
  - 0.5207411973156851
  train_ndgc_oob:
  - 0.40258470873261437
  - 0.4007725813752684
  - 0.39521646075938843
  - 0.4026519600070542
  - 0.3983728954630932
  train_neg_coverage_error:
  - -1.1647286821705427
  - -1.187984496124031
  - -1.182170542635659
  - -1.2054263565891472
  - -1.195736434108527
  train_neg_coverage_error_oob:
  - -3.0697674418604652
  - -3.0930232558139537
  - -3.0348837209302326
  - -3.00968992248062
  - -3.0852713178294575
  train_neg_hamming_loss_macro:
  - -0.042839657282741736
  - -0.04528763769889841
  - -0.04212566299469604
  - -0.04477764177886577
  - -0.04222766217870257
  train_neg_hamming_loss_macro_oob:
  - -0.049469604243166064
  - -0.05069359445124439
  - -0.04783761729906161
  - -0.04906160750713994
  - -0.04967360261117911
  train_neg_hamming_loss_micro:
  - -0.042839657282741736
  - -0.04528763769889841
  - -0.04212566299469604
  - -0.04477764177886577
  - -0.04222766217870257
  train_neg_hamming_loss_micro_oob:
  - -0.04946960424316606
  - -0.05069359445124439
  - -0.04783761729906161
  - -0.04906160750713994
  - -0.04967360261117911
  train_neg_hamming_loss_samples:
  - -0.04283965728274173
  - -0.04528763769889841
  - -0.04212566299469604
  - -0.04477764177886577
  - -0.042227662178702566
  train_neg_hamming_loss_samples_oob:
  - -0.04946960424316606
  - -0.050693594451244384
  - -0.0478376172990616
  - -0.04906160750713994
  - -0.049673602611179105
  train_neg_hamming_loss_weighted:
  - -0.05848547069588895
  - -0.061019035477205774
  - -0.05621275261011784
  - -0.061720191952750095
  - -0.056498559505776834
  train_neg_hamming_loss_weighted_oob:
  - -0.07372152539094468
  - -0.07468017760583813
  - -0.0692073307344177
  - -0.07227390180878554
  - -0.07361742255487244
  train_neg_label_ranking_loss:
  - -0.005510554450362931
  - -0.005979760220526295
  - -0.006523213290484152
  - -0.006791438250911575
  - -0.006877750106204278
  train_neg_label_ranking_loss_oob:
  - -0.08668231057081945
  - -0.08552087700514513
  - -0.08495630487337054
  - -0.08334164141705182
  - -0.08657328589356633
  train_precision_macro:
  - 0.9571603427172583
  - 0.9547123623011015
  - 0.9578743370053038
  - 0.9552223582211341
  - 0.9577723378212973
  train_precision_macro_oob:
  - 0.950530395756834
  - 0.9493064055487556
  - 0.9521623827009384
  - 0.9509383924928599
  - 0.9503263973888207
  train_precision_micro:
  - 0.9571603427172583
  - 0.9547123623011016
  - 0.957874337005304
  - 0.9552223582211342
  - 0.9577723378212974
  train_precision_micro_oob:
  - 0.950530395756834
  - 0.9493064055487556
  - 0.9521623827009384
  - 0.95093839249286
  - 0.9503263973888209
  train_precision_samples:
  - 0.9571603427172584
  - 0.9547123623011018
  - 0.957874337005304
  - 0.9552223582211342
  - 0.9577723378212974
  train_precision_samples_oob:
  - 0.9505303957568341
  - 0.9493064055487557
  - 0.9521623827009384
  - 0.9509383924928602
  - 0.950326397388821
  train_precision_weighted:
  - 0.9415145293041111
  - 0.9389809645227943
  - 0.9437872473898822
  - 0.9382798080472501
  - 0.9435014404942231
  train_precision_weighted_oob:
  - 0.9262784746090553
  - 0.925319822394162
  - 0.9307926692655822
  - 0.9277260981912145
  - 0.9263825774451276
  train_recall_macro:
  - 0.9571603427172583
  - 0.9547123623011015
  - 0.9578743370053038
  - 0.9552223582211341
  - 0.9577723378212973
  train_recall_macro_oob:
  - 0.950530395756834
  - 0.9493064055487556
  - 0.9521623827009384
  - 0.9509383924928599
  - 0.9503263973888207
  train_recall_micro:
  - 0.9571603427172583
  - 0.9547123623011016
  - 0.957874337005304
  - 0.9552223582211342
  - 0.9577723378212974
  train_recall_micro_oob:
  - 0.950530395756834
  - 0.9493064055487556
  - 0.9521623827009384
  - 0.95093839249286
  - 0.9503263973888209
  train_recall_samples:
  - 0.9571603427172584
  - 0.9547123623011018
  - 0.957874337005304
  - 0.9552223582211342
  - 0.9577723378212974
  train_recall_samples_oob:
  - 0.9505303957568341
  - 0.9493064055487557
  - 0.9521623827009384
  - 0.9509383924928602
  - 0.950326397388821
  train_recall_weighted:
  - 0.9415145293041111
  - 0.9389809645227943
  - 0.9437872473898822
  - 0.9382798080472501
  - 0.9435014404942231
  train_recall_weighted_oob:
  - 0.9262784746090553
  - 0.925319822394162
  - 0.9307926692655822
  - 0.9277260981912145
  - 0.9263825774451276
  train_roc_auc_macro:
  - 0.9974067849167663
  - 0.9973725569988756
  - 0.9978217480955219
  - 0.9970811880116862
  - 0.9974054684098917
  train_roc_auc_macro_oob:
  - 0.8963989902337692
  - 0.8824177989646059
  - 0.8768939044078021
  - 0.8722395501428942
  - 0.8793732448476369
  train_roc_auc_micro:
  - 0.993948238405787
  - 0.9935860266280782
  - 0.9938382395207219
  - 0.9926712135441526
  - 0.9932143208005276
  train_roc_auc_micro_oob:
  - 0.9102493299311085
  - 0.9047220254867293
  - 0.908100682415025
  - 0.9071958698340851
  - 0.9074183460593197
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9962273629601337
  - 0.9961811162526976
  - 0.9967498631079603
  - 0.9956435995201931
  - 0.9962389015609583
  train_roc_auc_weighted_oob:
  - 0.8992859588328669
  - 0.8910375016301813
  - 0.8964146562682513
  - 0.8936755120197076
  - 0.8941351710799357
start: 2023-12-12 16:51:10.305333
wrapper: null
