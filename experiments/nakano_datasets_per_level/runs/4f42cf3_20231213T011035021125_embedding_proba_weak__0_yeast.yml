active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZHUBgZmZmZmYawDAzMzMzMyPAoJmZmZmZFUBAMzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmHkAwMzMzMzMDwICZmZmZmdm/gJmZmZmZ2b+YmZmZmZkRwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMzE0AgMzMzMzPzv8jMzMzMzBjAcGZmZmZmDkAgMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AzczMzMz8PwAzMzMzM/O/AJiZmZmZyb8AmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb/MzMzMzMwQwNDMzMzMzPw/oJmZmZmZ6T/QzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZEUCQmZmZmZk8wABnZmZmZvY/4MzMzMzMLEDgzMzMzMwgQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:11:24.665120
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 4f42cf3d633b280044831c81bdc7c34c594cb5e7f0a8d8d19379b4caca643f09
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4f42cf3_20231213T011035021125_embedding_proba_weak__0_yeast.yml
results:
  fit_time:
  - 2.433098793029785
  - 2.1932120323181152
  - 2.748046398162842
  - 2.41715931892395
  - 2.228790283203125
  score_time:
  - 4.908006429672241
  - 4.964116811752319
  - 4.96259069442749
  - 4.832064151763916
  - 4.6058924198150635
  test_average_precision_macro:
  - 0.5293585511755146
  - 0.5177402177212408
  - 0.5257691440848008
  - 0.5613435859595964
  - 0.5467750409074233
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7282761740832093
  - 0.6962137548686341
  - 0.7119400032845308
  - 0.7387383370752733
  - 0.7235604793509519
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7590300633480248
  - 0.727819617454976
  - 0.7570955082147904
  - 0.7710851510432686
  - 0.7621026021959946
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7011029450125327
  - 0.6799515024303406
  - 0.6869195588754448
  - 0.728181547146013
  - 0.6984456727691903
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8028631076647779
  - 0.8017578125
  - 0.8026081802015412
  - 0.805817849527871
  - 0.8009022556390978
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8028631076647779
  - 0.8017578125
  - 0.8026081802015412
  - 0.8058178495278708
  - 0.8009022556390978
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8028631076647778
  - 0.8017578125
  - 0.8026081802015412
  - 0.8058178495278708
  - 0.8009022556390978
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.755209194429697
  - 0.7474208125910636
  - 0.7589440798996429
  - 0.7651905898797057
  - 0.7582176741315919
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6810151459920275
  - 0.678889280580522
  - 0.6794424570543381
  - 0.6835398615455032
  - 0.6772431861673155
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6706527154957648
  - 0.6691116544417278
  - 0.6702970297029703
  - 0.674786379288356
  - 0.6679207424128417
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6883517465547881
  - 0.6893874680678691
  - 0.6897390590773426
  - 0.6938250793664129
  - 0.6881891110379751
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6106386979579875
  - 0.6011977805952603
  - 0.6148398861144673
  - 0.622797418741674
  - 0.6141767736443449
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7590300633480244
  - 0.7278196174549757
  - 0.7570955082147912
  - 0.7710851510432687
  - 0.762102602195994
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.17465535175690558
  - 0.1745461115018839
  - 0.1752553398889849
  - 0.17278048617765002
  - 0.1681035828425295
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.502177908903684
  - 0.48358369681106367
  - 0.5053504864575412
  - 0.5188090400243069
  - 0.502730105136583
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49481331193628963
  - 0.47634880884484393
  - 0.5027394735014544
  - 0.5152019209142831
  - 0.5033794207441183
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.18512651718881376
  - 0.18744674369533595
  - 0.19190733346210637
  - 0.19307917654427828
  - 0.18201659512829751
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8539383174453564
  - 0.8270748766173006
  - 0.8514221852075745
  - 0.8602209453120623
  - 0.8563103438349218
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.118997912317328
  - -7.0859375
  - -7.157676348547718
  - -7.0788912579957355
  - -7.166315789473685
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19713689233522216
  - -0.1982421875
  - -0.19739181979845882
  - -0.19418215047212914
  - -0.19909774436090225
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1971368923352222
  - -0.1982421875
  - -0.1973918197984588
  - -0.19418215047212914
  - -0.19909774436090225
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19713689233522216
  - -0.19824218749999997
  - -0.1973918197984588
  - -0.1941821504721291
  - -0.19909774436090225
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2447908055703029
  - -0.25257918740893637
  - -0.24105592010035706
  - -0.23480941012029438
  - -0.24178232586840817
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1614426693199434
  - -0.18079653016873998
  - -0.16842306330302773
  - -0.1602883828020898
  - -0.16403499424552054
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8028631076647779
  - 0.8017578125
  - 0.8026081802015412
  - 0.805817849527871
  - 0.8009022556390978
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8028631076647779
  - 0.8017578125
  - 0.8026081802015412
  - 0.8058178495278708
  - 0.8009022556390978
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8028631076647778
  - 0.8017578125
  - 0.8026081802015412
  - 0.8058178495278708
  - 0.8009022556390978
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.755209194429697
  - 0.7474208125910636
  - 0.7589440798996429
  - 0.7651905898797057
  - 0.7582176741315919
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8028631076647779
  - 0.8017578125
  - 0.8026081802015412
  - 0.805817849527871
  - 0.8009022556390978
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8028631076647779
  - 0.8017578125
  - 0.8026081802015412
  - 0.8058178495278708
  - 0.8009022556390978
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8028631076647778
  - 0.8017578125
  - 0.8026081802015412
  - 0.8058178495278708
  - 0.8009022556390978
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.755209194429697
  - 0.7474208125910636
  - 0.7589440798996429
  - 0.7651905898797057
  - 0.7582176741315919
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7281174232272524
  - 0.7208209611370189
  - 0.7281384246275492
  - 0.7428898657518144
  - 0.7396770002986633
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8507029687452139
  - 0.8345642459178638
  - 0.842840587121588
  - 0.8538250276547714
  - 0.8451482492514333
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8385573306800566
  - 0.81920346983126
  - 0.8315769366969722
  - 0.8397116171979102
  - 0.8359650057544795
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7247795524252483
  - 0.7399827773190368
  - 0.7057520081861711
  - 0.7465962099732198
  - 0.7191123905102128
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9876339120479196
  - 0.9842702560434741
  - 0.9851439155621423
  - 0.9863766056723043
  - 0.9867630020691152
  train_average_precision_macro_oob:
  - 0.5259175589741687
  - 0.5254580884863395
  - 0.529317947369502
  - 0.5137589567266269
  - 0.521966833920609
  train_average_precision_micro:
  - 0.8925342115021762
  - 0.8947310340272571
  - 0.8939489637445125
  - 0.8904587947172871
  - 0.892663044399895
  train_average_precision_micro_oob:
  - 0.7132609477834867
  - 0.7240099649231857
  - 0.7185953844671109
  - 0.7103023320150917
  - 0.7153489067432123
  train_average_precision_samples:
  - 0.8652541704428663
  - 0.8715070509655092
  - 0.868037118417552
  - 0.8668722510955886
  - 0.8656593465026874
  train_average_precision_samples_oob:
  - 0.7539355050964733
  - 0.7616622216011595
  - 0.7546902325452304
  - 0.7513817247250888
  - 0.7523278039177976
  train_average_precision_weighted:
  - 0.9873035840807803
  - 0.98631393730425
  - 0.9862302056037922
  - 0.9877285171345807
  - 0.9875665063562196
  train_average_precision_weighted_oob:
  - 0.6853006840215395
  - 0.6928645416212036
  - 0.6921145813678095
  - 0.6777898721253652
  - 0.688929026699764
  train_f1_macro:
  - 0.8585065605189445
  - 0.8618297712785902
  - 0.860095976375046
  - 0.8597829275447344
  - 0.8599749889657201
  train_f1_macro_oob:
  - 0.8013415892672857
  - 0.8029246344206975
  - 0.8028792912513841
  - 0.8004180111469639
  - 0.8027070766514638
  train_f1_micro:
  - 0.8585065605189445
  - 0.8618297712785902
  - 0.8600959763750461
  - 0.8597829275447345
  - 0.8599749889657202
  train_f1_micro_oob:
  - 0.8013415892672858
  - 0.8029246344206974
  - 0.8028792912513842
  - 0.8004180111469639
  - 0.8027070766514639
  train_f1_samples:
  - 0.8585065605189444
  - 0.8618297712785902
  - 0.8600959763750462
  - 0.8597829275447346
  - 0.8599749889657201
  train_f1_samples_oob:
  - 0.8013415892672858
  - 0.8029246344206975
  - 0.8028792912513842
  - 0.800418011146964
  - 0.8027070766514639
  train_f1_weighted:
  - 0.8273513519494183
  - 0.8333355788360725
  - 0.8296084783088887
  - 0.8288800286167652
  - 0.8287588039476276
  train_f1_weighted_oob:
  - 0.7552689666201968
  - 0.7592337959710549
  - 0.7562052002544478
  - 0.7529093628038623
  - 0.7554280379479394
  train_jaccard_macro:
  - 0.7582939741804635
  - 0.7632996068551533
  - 0.7604667786806684
  - 0.7604281215518404
  - 0.7605981042872153
  train_jaccard_macro_oob:
  - 0.6779297797408778
  - 0.6800607141811029
  - 0.6801170952928027
  - 0.677006966024076
  - 0.6800487274145983
  train_jaccard_micro:
  - 0.7520906654612379
  - 0.7572063910393675
  - 0.7545336787564767
  - 0.7540519680987908
  - 0.754347475399258
  train_jaccard_micro_oob:
  - 0.6685320705983642
  - 0.6707385829731254
  - 0.6706753006475485
  - 0.6672474400122268
  - 0.6704349963135906
  train_jaccard_samples:
  - 0.7720290283460639
  - 0.7766704686119131
  - 0.7741873725616256
  - 0.7736190351843623
  - 0.7738618428661409
  train_jaccard_samples_oob:
  - 0.688166060947817
  - 0.6906460400216833
  - 0.6900801047610065
  - 0.6865431869656048
  - 0.6894289075628413
  train_jaccard_weighted:
  - 0.7117102922702955
  - 0.7201458206888472
  - 0.7145471650153162
  - 0.7140982643422328
  - 0.7137976860081928
  train_jaccard_weighted_oob:
  - 0.6103713138099578
  - 0.6153280996447085
  - 0.6115801304051756
  - 0.6075376089179735
  - 0.6107566776261163
  train_label_ranking_average_precision_score:
  - 0.8652541704428683
  - 0.8715070509655113
  - 0.8680371184175549
  - 0.8668722510955912
  - 0.8656593465026892
  train_label_ranking_average_precision_score_oob:
  - 0.7539355050964742
  - 0.7616622216011606
  - 0.754690232545232
  - 0.7513817247250897
  - 0.7523278039177991
  train_matthews_corrcoef_macro:
  - 0.3430742776502052
  - 0.34035421465322285
  - 0.3455062321295463
  - 0.3579886756333339
  - 0.3414230995417122
  train_matthews_corrcoef_macro_oob:
  - 0.17237663916115364
  - 0.17315493031339288
  - 0.17579918173819348
  - 0.16439542604856214
  - 0.17634643676052011
  train_matthews_corrcoef_micro:
  - 0.6516548049212433
  - 0.6634692275554905
  - 0.6551986248920655
  - 0.6535507910843212
  - 0.6545608289122508
  train_matthews_corrcoef_micro_oob:
  - 0.49762984269236704
  - 0.5077474856129051
  - 0.5015516881726179
  - 0.49286967616783417
  - 0.5000700387090506
  train_matthews_corrcoef_samples:
  - 0.6484414807579648
  - 0.665167457764904
  - 0.6535935363390699
  - 0.6531919778191244
  - 0.6509789242149516
  train_matthews_corrcoef_samples_oob:
  - 0.49170534889160805
  - 0.5082938304799703
  - 0.4988165376395755
  - 0.48913165613829407
  - 0.49595856216351597
  train_matthews_corrcoef_weighted:
  - 0.4008623374200927
  - 0.39759405945461435
  - 0.41775394454052117
  - 0.42101085133107347
  - 0.4092787371708879
  train_matthews_corrcoef_weighted_oob:
  - 0.18555877346364869
  - 0.18748239357699872
  - 0.18810699700803896
  - 0.17896823240436968
  - 0.18880259604964586
  train_ndgc:
  - 0.9149150899010752
  - 0.9208784450164157
  - 0.9172618369574638
  - 0.9168066603756924
  - 0.915063608398528
  train_ndgc_oob:
  - 0.8484479318628975
  - 0.8551694931817856
  - 0.8493044396876638
  - 0.8474301218145219
  - 0.8477657063343887
  train_neg_coverage_error:
  - -5.454592363261094
  - -5.531758530183727
  - -5.462015503875969
  - -5.46047227926078
  - -5.4624098867147275
  train_neg_coverage_error_oob:
  - -7.130546955624355
  - -7.16010498687664
  - -7.1286821705426355
  - -7.158110882956879
  - -7.175077239958806
  train_neg_hamming_loss_macro:
  - -0.14149343948105556
  - -0.13817022872140983
  - -0.13990402362495383
  - -0.14021707245526546
  - -0.14002501103427983
  train_neg_hamming_loss_macro_oob:
  - -0.19865841073271415
  - -0.19707536557930258
  - -0.19712070874861579
  - -0.19958198885303605
  - -0.19729292334853613
  train_neg_hamming_loss_micro:
  - -0.14149343948105558
  - -0.13817022872140983
  - -0.13990402362495385
  - -0.14021707245526546
  - -0.14002501103427983
  train_neg_hamming_loss_micro_oob:
  - -0.19865841073271415
  - -0.19707536557930258
  - -0.19712070874861573
  - -0.19958198885303607
  - -0.19729292334853613
  train_neg_hamming_loss_samples:
  - -0.14149343948105556
  - -0.1381702287214098
  - -0.13990402362495383
  - -0.14021707245526546
  - -0.14002501103427978
  train_neg_hamming_loss_samples_oob:
  - -0.19865841073271412
  - -0.1970753655793026
  - -0.19712070874861573
  - -0.19958198885303605
  - -0.1972929233485361
  train_neg_hamming_loss_weighted:
  - -0.17264864805058167
  - -0.1666644211639275
  - -0.17039152169111124
  - -0.17111997138323462
  - -0.1712411960523726
  train_neg_hamming_loss_weighted_oob:
  - -0.24473103337980318
  - -0.24076620402894516
  - -0.24379479974555213
  - -0.24709063719613775
  - -0.24457196205206042
  train_neg_label_ranking_loss:
  - -0.06806593798522148
  - -0.06689708450113399
  - -0.06816875999600251
  - -0.06807559719704043
  - -0.06876333283295913
  train_neg_label_ranking_loss_oob:
  - -0.16782179358473034
  - -0.16457300094814156
  - -0.16744834653472526
  - -0.16922179585350602
  - -0.16965366656866585
  train_precision_macro:
  - 0.8585065605189445
  - 0.8618297712785902
  - 0.860095976375046
  - 0.8597829275447344
  - 0.8599749889657201
  train_precision_macro_oob:
  - 0.8013415892672857
  - 0.8029246344206975
  - 0.8028792912513841
  - 0.8004180111469639
  - 0.8027070766514638
  train_precision_micro:
  - 0.8585065605189445
  - 0.8618297712785902
  - 0.8600959763750461
  - 0.8597829275447345
  - 0.8599749889657202
  train_precision_micro_oob:
  - 0.8013415892672858
  - 0.8029246344206974
  - 0.8028792912513842
  - 0.8004180111469639
  - 0.8027070766514639
  train_precision_samples:
  - 0.8585065605189444
  - 0.8618297712785902
  - 0.8600959763750462
  - 0.8597829275447346
  - 0.8599749889657201
  train_precision_samples_oob:
  - 0.8013415892672858
  - 0.8029246344206975
  - 0.8028792912513842
  - 0.800418011146964
  - 0.8027070766514639
  train_precision_weighted:
  - 0.8273513519494183
  - 0.8333355788360725
  - 0.8296084783088887
  - 0.8288800286167652
  - 0.8287588039476276
  train_precision_weighted_oob:
  - 0.7552689666201968
  - 0.7592337959710549
  - 0.7562052002544478
  - 0.7529093628038623
  - 0.7554280379479394
  train_recall_macro:
  - 0.8585065605189445
  - 0.8618297712785902
  - 0.860095976375046
  - 0.8597829275447344
  - 0.8599749889657201
  train_recall_macro_oob:
  - 0.8013415892672857
  - 0.8029246344206975
  - 0.8028792912513841
  - 0.8004180111469639
  - 0.8027070766514638
  train_recall_micro:
  - 0.8585065605189445
  - 0.8618297712785902
  - 0.8600959763750461
  - 0.8597829275447345
  - 0.8599749889657202
  train_recall_micro_oob:
  - 0.8013415892672858
  - 0.8029246344206974
  - 0.8028792912513842
  - 0.8004180111469639
  - 0.8027070766514639
  train_recall_samples:
  - 0.8585065605189444
  - 0.8618297712785902
  - 0.8600959763750462
  - 0.8597829275447346
  - 0.8599749889657201
  train_recall_samples_oob:
  - 0.8013415892672858
  - 0.8029246344206975
  - 0.8028792912513842
  - 0.800418011146964
  - 0.8027070766514639
  train_recall_weighted:
  - 0.8273513519494183
  - 0.8333355788360725
  - 0.8296084783088887
  - 0.8288800286167652
  - 0.8287588039476276
  train_recall_weighted_oob:
  - 0.7552689666201968
  - 0.7592337959710549
  - 0.7562052002544478
  - 0.7529093628038623
  - 0.7554280379479394
  train_roc_auc_macro:
  - 0.9935362293626946
  - 0.9932647063284463
  - 0.9932011445003436
  - 0.9940678038557028
  - 0.9939584065765514
  train_roc_auc_macro_oob:
  - 0.7192584316614233
  - 0.7223453616350843
  - 0.7198464058062904
  - 0.7177885090958529
  - 0.7153871583261788
  train_roc_auc_micro:
  - 0.9489645382597385
  - 0.9493379388915162
  - 0.9491624855535766
  - 0.9479273467745062
  - 0.9487574329768566
  train_roc_auc_micro_oob:
  - 0.8438083538627683
  - 0.8469532610078736
  - 0.8455126242113717
  - 0.8413667434484238
  - 0.8444182809010587
  train_roc_auc_samples:
  - 0.9319340620147785
  - 0.9331029154988659
  - 0.9318312400039974
  - 0.9319244028029596
  - 0.9312366671670409
  train_roc_auc_samples_oob:
  - 0.8321782064152697
  - 0.8354269990518585
  - 0.8325516534652747
  - 0.8307782041464938
  - 0.8303520549097642
  train_roc_auc_weighted:
  - 0.9920719006353476
  - 0.9920538320792516
  - 0.9919608378973855
  - 0.9930251075223802
  - 0.9927331996583734
  train_roc_auc_weighted_oob:
  - 0.7191566692123003
  - 0.720786563701061
  - 0.726678820012556
  - 0.7115829737295642
  - 0.7202686975235207
start: 2023-12-13 01:10:35.021125
wrapper: null
