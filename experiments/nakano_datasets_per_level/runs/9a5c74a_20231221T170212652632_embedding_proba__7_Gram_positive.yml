active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AMzMzMzPzvwCYmZmZmcm/AJiZmZmZyb8AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:03:06.577275
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__7
  params: {}
hash: 9a5c74a73dbd3bf4539dba0319be76c4f7d103509820b9ad874bd8a278a6c110
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a5c74a_20231221T170212652632_embedding_proba__7_Gram_positive.yml
results:
  fit_time:
  - 33.761125326156616
  - 34.97259783744812
  - 34.30772423744202
  - 34.728554487228394
  - 34.80351805686951
  score_time:
  - 5.649669647216797
  - 5.951622486114502
  - 5.627673149108887
  - 5.762833833694458
  - 5.912739992141724
  test_average_precision_macro:
  - 0.9333955670505198
  - 0.853287757326039
  - 0.8553224279593348
  - 0.9420804084163118
  - 0.9285792058635532
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9769334862006507
  - 0.9373703496818356
  - 0.9474586393580506
  - 0.9627513820958854
  - 0.9853663123027554
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.96875
  - 0.9492063492063492
  - 0.9399038461538461
  - 0.9791666666666667
  - 0.9812091503267973
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9755833095540378
  - 0.927235804665806
  - 0.959480169202769
  - 0.9612614958750849
  - 0.9852528904834332
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8245192307692308
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.823529411764706
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8245192307692307
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.8235294117647058
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8245192307692307
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.8235294117647058
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7745007396449703
  - 0.8101587301587303
  - 0.7812953555878086
  - 0.7596153846153846
  - 0.7694650675804302
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7127506873231071
  - 0.7426546671380847
  - 0.7042245330281907
  - 0.6846295967545746
  - 0.7119925574059356
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7014314928425358
  - 0.7355371900826446
  - 0.6945010183299389
  - 0.6740442655935613
  - 0.7
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7192307692307691
  - 0.7561904761904761
  - 0.714102564102564
  - 0.691025641025641
  - 0.7189542483660128
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6357570003464738
  - 0.6835627358089933
  - 0.6438840910208343
  - 0.614500090954319
  - 0.6294572015848711
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.96875
  - 0.9492063492063493
  - 0.9399038461538459
  - 0.9791666666666666
  - 0.9812091503267973
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.35055874543426213
  - 0.40845998992331933
  - 0.3138573760351277
  - 0.23140445316056996
  - 0.3630883129502018
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.49148595255453803
  - 0.5696825945868434
  - 0.48526436056282046
  - 0.42150384669423
  - 0.4934480977892359
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2980769230769231
  - 0.3904761904761905
  - 0.2980769230769231
  - 0.2371794871794872
  - 0.30392156862745096
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4580883017076782
  - 0.5331199938780885
  - 0.43260492172637893
  - 0.33772726846795326
  - 0.46329664766221856
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.976781974287795
  - 0.9623565526530634
  - 0.9557782147079219
  - 0.9845460505837921
  - 0.9858981010945573
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0769230769230769
  - -1.1142857142857143
  - -1.1923076923076923
  - -1.0576923076923077
  - -1.0686274509803921
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17548076923076922
  - -0.1523809523809524
  - -0.18028846153846154
  - -0.1947115384615385
  - -0.17647058823529413
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17548076923076922
  - -0.1523809523809524
  - -0.18028846153846154
  - -0.19471153846153846
  - -0.17647058823529413
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17548076923076922
  - -0.1523809523809524
  - -0.18028846153846154
  - -0.19471153846153846
  - -0.17647058823529413
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.22549926035502962
  - -0.18984126984126984
  - -0.21870464441219156
  - -0.24038461538461542
  - -0.23053493241956974
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02564102564102564
  - -0.0380952380952381
  - -0.056089743589743585
  - -0.016025641025641024
  - -0.019607843137254898
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8245192307692308
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.823529411764706
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8245192307692307
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.8235294117647058
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8245192307692307
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.8235294117647058
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7745007396449703
  - 0.8101587301587303
  - 0.7812953555878086
  - 0.7596153846153846
  - 0.7694650675804302
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8245192307692308
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.823529411764706
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8245192307692307
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.8235294117647058
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8245192307692307
  - 0.8476190476190476
  - 0.8197115384615384
  - 0.8052884615384616
  - 0.8235294117647058
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7745007396449703
  - 0.8101587301587303
  - 0.7812953555878086
  - 0.7596153846153846
  - 0.7694650675804302
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9912740690689872
  - 0.9684858353560223
  - 0.9786766924134328
  - 0.9880238897314745
  - 0.9880058304313603
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9918022682445758
  - 0.973212396069539
  - 0.9795496043822276
  - 0.990139335476956
  - 0.9927741524749323
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9743589743589745
  - 0.9619047619047619
  - 0.9439102564102563
  - 0.983974358974359
  - 0.9803921568627451
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9918911480708209
  - 0.9651905069569692
  - 0.9883331468660148
  - 0.9882479368227488
  - 0.9954483064462374
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9751980655617236
  - 0.9305144731651069
  - 0.9581091212132709
  - 0.9252464382888972
  - 0.9750605161046109
  train_average_precision_macro_oob:
  - 0.9518479023449131
  - 0.8315258679569036
  - 0.9400761799525497
  - 0.8568896697344871
  - 0.9488604769796252
  train_average_precision_micro:
  - 0.9880103462411464
  - 0.9844719173762231
  - 0.9865368913480754
  - 0.9868573401872572
  - 0.9906485868300842
  train_average_precision_micro_oob:
  - 0.9799888370196357
  - 0.9758048074140218
  - 0.982083777457436
  - 0.9785464710450047
  - 0.9833637599517818
  train_average_precision_samples:
  - 0.9797188755020081
  - 0.9752415458937198
  - 0.977710843373494
  - 0.9819277108433735
  - 0.9754196642685852
  train_average_precision_samples_oob:
  - 0.9728915662650602
  - 0.9694041867954912
  - 0.9746987951807229
  - 0.9674698795180723
  - 0.9676258992805755
  train_average_precision_weighted:
  - 0.9892321358673701
  - 0.9789983455688338
  - 0.9864843080072225
  - 0.9847886466184761
  - 0.9897037074120013
  train_average_precision_weighted_oob:
  - 0.9806490066458108
  - 0.9624489531925772
  - 0.9804450503963712
  - 0.970755338068157
  - 0.9812890286136523
  train_f1_macro:
  - 0.8451807228915662
  - 0.8496376811594203
  - 0.8536144578313254
  - 0.8481927710843373
  - 0.8483213429256595
  train_f1_macro_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746987
  - 0.8331325301204819
  - 0.8369304556354916
  train_f1_micro:
  - 0.8451807228915663
  - 0.8496376811594203
  - 0.8536144578313253
  - 0.8481927710843373
  - 0.8483213429256595
  train_f1_micro_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746988
  - 0.8331325301204819
  - 0.8369304556354916
  train_f1_samples:
  - 0.8451807228915663
  - 0.8496376811594203
  - 0.8536144578313253
  - 0.8481927710843373
  - 0.8483213429256595
  train_f1_samples_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746988
  - 0.8331325301204819
  - 0.8369304556354916
  train_f1_weighted:
  - 0.8048020243264227
  - 0.8126401312900169
  - 0.8180058362948196
  - 0.8103649045944543
  - 0.8104887518556585
  train_f1_weighted_oob:
  - 0.7813209880093165
  - 0.8020190462982226
  - 0.7923665886567854
  - 0.7934628466017178
  - 0.7947470594952609
  train_jaccard_macro:
  - 0.7393737228307301
  - 0.7452446284654844
  - 0.7510151361796099
  - 0.7432929289550629
  - 0.7434241028450836
  train_jaccard_macro_oob:
  - 0.7125281731990541
  - 0.7315227914674002
  - 0.726012236101403
  - 0.7221120853248971
  - 0.7277489830776891
  train_jaccard_micro:
  - 0.7318727177882107
  - 0.7385826771653543
  - 0.744613767735155
  - 0.7364016736401674
  - 0.7365955231650182
  train_jaccard_micro_oob:
  - 0.7034376603386352
  - 0.724102030192608
  - 0.7175375064666322
  - 0.7139907072792979
  - 0.7195876288659794
  train_jaccard_samples:
  - 0.7535742971887548
  - 0.7600644122383252
  - 0.7664257028112448
  - 0.7580722891566263
  - 0.7582733812949639
  train_jaccard_samples_oob:
  - 0.722730923694779
  - 0.7452495974235104
  - 0.7375100401606425
  - 0.7339759036144576
  - 0.7400479616306952
  train_jaccard_weighted:
  - 0.6757738988085036
  - 0.6858233371981787
  - 0.6935047074596488
  - 0.6826979801209148
  - 0.6832372438868003
  train_jaccard_weighted_oob:
  - 0.6433624772304306
  - 0.6707980198043295
  - 0.6582372801571146
  - 0.6590418608472908
  - 0.6616828512815278
  train_label_ranking_average_precision_score:
  - 0.979718875502008
  - 0.9752415458937197
  - 0.977710843373494
  - 0.9819277108433734
  - 0.9754196642685852
  train_label_ranking_average_precision_score_oob:
  - 0.9728915662650602
  - 0.9694041867954911
  - 0.9746987951807229
  - 0.9674698795180722
  - 0.9676258992805755
  train_matthews_corrcoef_macro:
  - 0.413029777965259
  - 0.4175477182618043
  - 0.4260940930527279
  - 0.4135239017173403
  - 0.41680552333003396
  train_matthews_corrcoef_macro_oob:
  - 0.3559572719689997
  - 0.384107291868269
  - 0.3830503625653544
  - 0.36014074618868896
  - 0.3897731673111504
  train_matthews_corrcoef_micro:
  - 0.5659531478920129
  - 0.5801763874348613
  - 0.5907894839417867
  - 0.5745811871875518
  - 0.5749770852129972
  train_matthews_corrcoef_micro_oob:
  - 0.5016546474507504
  - 0.5490835167469317
  - 0.5321072573202118
  - 0.5251741321363858
  - 0.5378878212700829
  train_matthews_corrcoef_samples:
  - 0.39036144578313253
  - 0.40617077424729287
  - 0.41927710843373495
  - 0.4
  - 0.40047961630695444
  train_matthews_corrcoef_samples_oob:
  - 0.3132530120481928
  - 0.3695652173913043
  - 0.3469879518072289
  - 0.3397590361445783
  - 0.354916067146283
  train_matthews_corrcoef_weighted:
  - 0.5327175803209155
  - 0.5463270918655189
  - 0.5569920031016559
  - 0.5407857325717803
  - 0.5412860628285048
  train_matthews_corrcoef_weighted_oob:
  - 0.46719524660315653
  - 0.5115206412609831
  - 0.49919061903898765
  - 0.48478935964064146
  - 0.505008726947689
  train_ndgc:
  - 0.9849727544772862
  - 0.9816295238203993
  - 0.983433846323423
  - 0.9867138786880834
  - 0.9817616855195329
  train_ndgc_oob:
  - 0.9798842837413358
  - 0.9774321505010047
  - 0.9811726567129286
  - 0.9759090639507436
  - 0.9760356827722056
  train_neg_coverage_error:
  - -1.0554216867469879
  - -1.067632850241546
  - -1.0602409638554218
  - -1.0554216867469879
  - -1.064748201438849
  train_neg_coverage_error_oob:
  - -1.0843373493975903
  - -1.0869565217391304
  - -1.069879518072289
  - -1.0963855421686748
  - -1.0887290167865706
  train_neg_hamming_loss_macro:
  - -0.15481927710843374
  - -0.1503623188405797
  - -0.1463855421686747
  - -0.15180722891566267
  - -0.15167865707434053
  train_neg_hamming_loss_macro_oob:
  - -0.17409638554216866
  - -0.16002415458937197
  - -0.16445783132530123
  - -0.1668674698795181
  - -0.16306954436450838
  train_neg_hamming_loss_micro:
  - -0.15481927710843374
  - -0.1503623188405797
  - -0.1463855421686747
  - -0.15180722891566265
  - -0.15167865707434053
  train_neg_hamming_loss_micro_oob:
  - -0.17409638554216866
  - -0.16002415458937197
  - -0.1644578313253012
  - -0.16686746987951806
  - -0.1630695443645084
  train_neg_hamming_loss_samples:
  - -0.15481927710843374
  - -0.1503623188405797
  - -0.1463855421686747
  - -0.15180722891566265
  - -0.15167865707434053
  train_neg_hamming_loss_samples_oob:
  - -0.17409638554216866
  - -0.16002415458937197
  - -0.1644578313253012
  - -0.16686746987951806
  - -0.1630695443645084
  train_neg_hamming_loss_weighted:
  - -0.19519797567357738
  - -0.18735986870998314
  - -0.18199416370518043
  - -0.18963509540554563
  - -0.18951124814434167
  train_neg_hamming_loss_weighted_oob:
  - -0.2186790119906835
  - -0.19798095370177748
  - -0.20763341134321459
  - -0.2065371533982821
  - -0.20525294050473905
  train_neg_label_ranking_loss:
  - -0.015261044176706826
  - -0.01932367149758454
  - -0.018473895582329317
  - -0.01566265060240964
  - -0.019184652278177457
  train_neg_label_ranking_loss_oob:
  - -0.02469879518072289
  - -0.025362318840579712
  - -0.021686746987951807
  - -0.02931726907630522
  - -0.02697841726618705
  train_precision_macro:
  - 0.8451807228915662
  - 0.8496376811594203
  - 0.8536144578313254
  - 0.8481927710843373
  - 0.8483213429256595
  train_precision_macro_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746987
  - 0.8331325301204819
  - 0.8369304556354916
  train_precision_micro:
  - 0.8451807228915663
  - 0.8496376811594203
  - 0.8536144578313253
  - 0.8481927710843373
  - 0.8483213429256595
  train_precision_micro_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746988
  - 0.8331325301204819
  - 0.8369304556354916
  train_precision_samples:
  - 0.8451807228915663
  - 0.8496376811594203
  - 0.8536144578313253
  - 0.8481927710843373
  - 0.8483213429256595
  train_precision_samples_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746988
  - 0.8331325301204819
  - 0.8369304556354916
  train_precision_weighted:
  - 0.8048020243264227
  - 0.8126401312900169
  - 0.8180058362948196
  - 0.8103649045944543
  - 0.8104887518556585
  train_precision_weighted_oob:
  - 0.7813209880093165
  - 0.8020190462982226
  - 0.7923665886567854
  - 0.7934628466017178
  - 0.7947470594952609
  train_recall_macro:
  - 0.8451807228915662
  - 0.8496376811594203
  - 0.8536144578313254
  - 0.8481927710843373
  - 0.8483213429256595
  train_recall_macro_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746987
  - 0.8331325301204819
  - 0.8369304556354916
  train_recall_micro:
  - 0.8451807228915663
  - 0.8496376811594203
  - 0.8536144578313253
  - 0.8481927710843373
  - 0.8483213429256595
  train_recall_micro_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746988
  - 0.8331325301204819
  - 0.8369304556354916
  train_recall_samples:
  - 0.8451807228915663
  - 0.8496376811594203
  - 0.8536144578313253
  - 0.8481927710843373
  - 0.8483213429256595
  train_recall_samples_oob:
  - 0.8259036144578313
  - 0.839975845410628
  - 0.8355421686746988
  - 0.8331325301204819
  - 0.8369304556354916
  train_recall_weighted:
  - 0.8048020243264227
  - 0.8126401312900169
  - 0.8180058362948196
  - 0.8103649045944543
  - 0.8104887518556585
  train_recall_weighted_oob:
  - 0.7813209880093165
  - 0.8020190462982226
  - 0.7923665886567854
  - 0.7934628466017178
  - 0.7947470594952609
  train_roc_auc_macro:
  - 0.9958002229861889
  - 0.9936669404169411
  - 0.9939371989400022
  - 0.9946814103076511
  - 0.996157844916124
  train_roc_auc_macro_oob:
  - 0.9913142468866851
  - 0.9812880100447964
  - 0.9919141463147618
  - 0.9887589039179214
  - 0.9920222754783741
  train_roc_auc_micro:
  - 0.9954825098705911
  - 0.9951418787827256
  - 0.9943549585110673
  - 0.9949398639329989
  - 0.9964915293040293
  train_roc_auc_micro_oob:
  - 0.9915592745091628
  - 0.9897658671572455
  - 0.9926436967883456
  - 0.9903882455369869
  - 0.9930898962148962
  train_roc_auc_samples:
  - 0.9847389558232931
  - 0.9806763285024155
  - 0.9815261044176706
  - 0.9843373493975903
  - 0.9808153477218226
  train_roc_auc_samples_oob:
  - 0.9753012048192771
  - 0.9746376811594203
  - 0.9783132530120482
  - 0.9706827309236948
  - 0.9730215827338129
  train_roc_auc_weighted:
  - 0.9963322095993875
  - 0.9950143353585242
  - 0.9950956936000042
  - 0.9965586626736732
  - 0.9962429139120212
  train_roc_auc_weighted_oob:
  - 0.992319157782584
  - 0.9924066609249509
  - 0.9930664843706658
  - 0.992479989664007
  - 0.9927984812696972
start: 2023-12-21 17:02:12.652632
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
