active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwEAzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r+QmZmZmZkVwHBmZmZmZhZAAJmZmZmZ2b/AmZmZmZn5Pw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:55:29.873246
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__7
  params: {}
hash: 27102dd39529aa62a6c5599330330dab99b2bb575f4235149bcd5741d573a8a6
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/27102dd_20231222T015418616173_embedding_proba__7_emotions.yml
results:
  fit_time:
  - 46.06600046157837
  - 45.68619632720947
  - 46.96051359176636
  - 45.06507921218872
  - 47.54399299621582
  score_time:
  - 7.217331171035767
  - 7.310235500335693
  - 7.684520483016968
  - 6.763322591781616
  - 7.555438756942749
  test_average_precision_macro:
  - 0.7263731402299768
  - 0.6774494458964956
  - 0.7688396295976588
  - 0.7704237644474539
  - 0.7106586305559329
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7277497710571679
  - 0.6969226470216405
  - 0.7711771285623904
  - 0.7792409949230926
  - 0.7044954090704476
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8221064814814816
  - 0.7948924731182795
  - 0.8055063913470993
  - 0.8242296918767507
  - 0.8066476733143398
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7238265235119137
  - 0.6711262010494545
  - 0.7648704033318884
  - 0.7724426570292311
  - 0.7121688111561111
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8111111111111112
  - 0.7916666666666666
  - 0.8185840707964602
  - 0.8389355742296919
  - 0.8133903133903133
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8111111111111111
  - 0.7916666666666666
  - 0.8185840707964602
  - 0.8389355742296919
  - 0.8133903133903134
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8111111111111112
  - 0.7916666666666669
  - 0.8185840707964603
  - 0.8389355742296918
  - 0.8133903133903132
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8057057057057058
  - 0.7876944124423962
  - 0.8118367837264244
  - 0.8336438647857334
  - 0.8114607614607616
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6842854629676931
  - 0.6597216925952482
  - 0.697202726135421
  - 0.7261932846618899
  - 0.6890341881951688
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6822429906542056
  - 0.6551724137931034
  - 0.6928838951310862
  - 0.7225572979493365
  - 0.6854741896758704
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7197619047619047
  - 0.6912477307638597
  - 0.7240623683101558
  - 0.7512605042016806
  - 0.7185999185999183
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6769684439836383
  - 0.6536300061833791
  - 0.6873114173110441
  - 0.7181052316915788
  - 0.6858220928098748
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8221064814814809
  - 0.7948924731182794
  - 0.805506391347099
  - 0.8242296918767503
  - 0.80664767331434
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.537872419833111
  - 0.49854726289797363
  - 0.5708460725041234
  - 0.609234726674264
  - 0.5471449576643219
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5488989140547567
  - 0.5134516492823444
  - 0.5797632092029612
  - 0.6138988991907317
  - 0.5580011068961144
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5718907984417467
  - 0.516025263938942
  - 0.568025800514972
  - 0.599922433909447
  - 0.5510819091611574
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5378635020869572
  - 0.5001881805722511
  - 0.5634640575436112
  - 0.6051976444691005
  - 0.5505364764240795
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8781833113094019
  - 0.8594578436276399
  - 0.8692769154456469
  - 0.8766609677765632
  - 0.8639744207838429
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.683333333333333
  - -2.75
  - -2.8672566371681416
  - -2.6050420168067228
  - -2.675213675213675
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18888888888888888
  - -0.20833333333333334
  - -0.1814159292035398
  - -0.16106442577030813
  - -0.1866096866096866
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18888888888888888
  - -0.20833333333333334
  - -0.18141592920353983
  - -0.16106442577030813
  - -0.1866096866096866
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18888888888888886
  - -0.20833333333333331
  - -0.1814159292035398
  - -0.16106442577030813
  - -0.18660968660968666
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19429429429429432
  - -0.21230558755760365
  - -0.18816321627357546
  - -0.1663561352142667
  - -0.18853923853923857
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1512037037037037
  - -0.17076612903225807
  - -0.16179941002949852
  - -0.14264705882352943
  - -0.1455128205128205
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8111111111111112
  - 0.7916666666666666
  - 0.8185840707964602
  - 0.8389355742296919
  - 0.8133903133903133
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8111111111111111
  - 0.7916666666666666
  - 0.8185840707964602
  - 0.8389355742296919
  - 0.8133903133903134
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8111111111111112
  - 0.7916666666666669
  - 0.8185840707964603
  - 0.8389355742296918
  - 0.8133903133903132
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8057057057057058
  - 0.7876944124423962
  - 0.8118367837264244
  - 0.8336438647857334
  - 0.8114607614607616
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8111111111111112
  - 0.7916666666666666
  - 0.8185840707964602
  - 0.8389355742296919
  - 0.8133903133903133
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8111111111111111
  - 0.7916666666666666
  - 0.8185840707964602
  - 0.8389355742296919
  - 0.8133903133903134
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8111111111111112
  - 0.7916666666666669
  - 0.8185840707964603
  - 0.8389355742296918
  - 0.8133903133903132
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8057057057057058
  - 0.7876944124423962
  - 0.8118367837264244
  - 0.8336438647857334
  - 0.8114607614607616
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8470178839406133
  - 0.8349939913738735
  - 0.8592003289991273
  - 0.882152432358487
  - 0.8473021005727551
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8587684069611781
  - 0.8527472527472528
  - 0.8750952998603919
  - 0.8935596082714565
  - 0.860835533760845
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8487962962962963
  - 0.8292338709677419
  - 0.8382005899705015
  - 0.8573529411764707
  - 0.8544871794871796
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8441664763759456
  - 0.8308700514241768
  - 0.8563461441642246
  - 0.8822820463723337
  - 0.8482885461487875
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9922482203931643
  - 0.9883052580341279
  - 0.9895605964142918
  - 0.990729017457133
  - 0.9906345719036816
  train_average_precision_macro_oob:
  - 0.9621380873957417
  - 0.9453255282022707
  - 0.9463032977963323
  - 0.9513808654555859
  - 0.9543755666966267
  train_average_precision_micro:
  - 0.9921767310363077
  - 0.9880034303406063
  - 0.989199857354776
  - 0.9900505755720435
  - 0.990450580352805
  train_average_precision_micro_oob:
  - 0.9650286388795221
  - 0.9530633757723982
  - 0.9539754077232415
  - 0.9542370678265398
  - 0.9596660376877233
  train_average_precision_samples:
  - 0.9903100775193797
  - 0.9867922293295427
  - 0.992013888888889
  - 0.9933192686357244
  - 0.9901960784313725
  train_average_precision_samples_oob:
  - 0.9563542400751703
  - 0.9458659085524757
  - 0.9484953703703703
  - 0.9492147210501641
  - 0.9488095238095238
  train_average_precision_weighted:
  - 0.9925848806972306
  - 0.9888916470869707
  - 0.9901681745997152
  - 0.99112447110915
  - 0.9910832239423402
  train_average_precision_weighted_oob:
  - 0.9640536205286242
  - 0.9486255786540713
  - 0.9493972680908344
  - 0.9526410375131423
  - 0.9572449881993247
  train_f1_macro:
  - 0.9675828047921072
  - 0.965174129353234
  - 0.9631944444444445
  - 0.9641350210970465
  - 0.9632352941176471
  train_f1_macro_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222223
  - 0.931082981715893
  - 0.9289215686274511
  train_f1_micro:
  - 0.9675828047921071
  - 0.9651741293532339
  - 0.9631944444444445
  - 0.9641350210970464
  - 0.9632352941176471
  train_f1_micro_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222222
  - 0.9310829817158931
  - 0.928921568627451
  train_f1_samples:
  - 0.9675828047921071
  - 0.9651741293532339
  - 0.9631944444444444
  - 0.9641350210970464
  - 0.9632352941176471
  train_f1_samples_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222224
  - 0.9310829817158932
  - 0.928921568627451
  train_f1_weighted:
  - 0.9684927388218899
  - 0.9655230634159521
  - 0.9639820556181887
  - 0.9645774168842968
  - 0.9629064463623288
  train_f1_weighted_oob:
  - 0.938767962050024
  - 0.9258700035697401
  - 0.9327860766629087
  - 0.9304606148825749
  - 0.9291747104247104
  train_jaccard_macro:
  - 0.9373507940149505
  - 0.9327704367726845
  - 0.9290584989102512
  - 0.9307882368523305
  - 0.9292273943865657
  train_jaccard_macro_oob:
  - 0.8831595201591403
  - 0.8629673155633554
  - 0.8728658701025344
  - 0.8717433112735442
  - 0.8679969080892597
  train_jaccard_micro:
  - 0.9372013651877134
  - 0.9326923076923077
  - 0.9290020093770931
  - 0.9307535641547862
  - 0.9290780141843972
  train_jaccard_micro_oob:
  - 0.882587064676617
  - 0.8617267614952034
  - 0.8719532011699708
  - 0.8710526315789474
  - 0.8672768878718535
  train_jaccard_samples:
  - 0.9458874458874458
  - 0.9418215047212917
  - 0.9387896825396825
  - 0.9401245730359654
  - 0.9387755102040816
  train_jaccard_samples_oob:
  - 0.8980670492298399
  - 0.8795309168443496
  - 0.8888392857142856
  - 0.8881354229455496
  - 0.884453781512605
  train_jaccard_weighted:
  - 0.9390650431856671
  - 0.9334150762219904
  - 0.9305342464217216
  - 0.9316114547028264
  - 0.9286089554104996
  train_jaccard_weighted_oob:
  - 0.8851571135910361
  - 0.8631062746034487
  - 0.8749207311559638
  - 0.8705934435965712
  - 0.8683872092995949
  train_label_ranking_average_precision_score:
  - 0.9903100775193797
  - 0.9867922293295426
  - 0.9920138888888889
  - 0.9933192686357243
  - 0.9901960784313725
  train_label_ranking_average_precision_score_oob:
  - 0.9563542400751699
  - 0.9458659085524754
  - 0.9484953703703701
  - 0.9492147210501639
  - 0.9488095238095233
  train_matthews_corrcoef_macro:
  - 0.9213363464216288
  - 0.9160662308701134
  - 0.9099378517217479
  - 0.9131332269226909
  - 0.911595392358525
  train_matthews_corrcoef_macro_oob:
  - 0.8485806842444013
  - 0.8205742857166861
  - 0.8319559794430328
  - 0.8345964401670848
  - 0.8272322583783892
  train_matthews_corrcoef_micro:
  - 0.9240891589335029
  - 0.9186982276760651
  - 0.9130542504584567
  - 0.9159033118932549
  - 0.9136304246292315
  train_matthews_corrcoef_micro_oob:
  - 0.8534557642694973
  - 0.825816294351335
  - 0.8376307074671161
  - 0.8376086791094067
  - 0.8322609269939297
  train_matthews_corrcoef_samples:
  - 0.9214084278703736
  - 0.9183692754008757
  - 0.9119572516936515
  - 0.9187160165482979
  - 0.9162181668953374
  train_matthews_corrcoef_samples_oob:
  - 0.8544015538137234
  - 0.825204603060487
  - 0.8320913064532256
  - 0.83308300222076
  - 0.8318117199790361
  train_matthews_corrcoef_weighted:
  - 0.9244944072235938
  - 0.9182848595897521
  - 0.9131717860691649
  - 0.9155620472149397
  - 0.9124238951136032
  train_matthews_corrcoef_weighted_oob:
  - 0.8532589103093818
  - 0.8237011648622925
  - 0.8372775931168251
  - 0.835839241426122
  - 0.8306978996201839
  train_ndgc:
  - 0.9936049710946373
  - 0.9913318021404908
  - 0.9949994616638997
  - 0.9958923559408371
  - 0.9940159257598692
  train_ndgc_oob:
  - 0.9711917045722511
  - 0.9638281219131599
  - 0.9648173241526294
  - 0.9658541054499274
  - 0.9656354478673279
  train_neg_coverage_error:
  - -1.9090909090909092
  - -1.9424307036247335
  - -1.8854166666666667
  - -1.9050632911392404
  - -1.9138655462184875
  train_neg_coverage_error_oob:
  - -2.059196617336152
  - -2.1279317697228146
  - -2.0375
  - -2.0738396624472575
  - -2.077731092436975
  train_neg_hamming_loss_macro:
  - -0.032417195207892886
  - -0.03482587064676617
  - -0.03680555555555556
  - -0.035864978902953586
  - -0.03676470588235294
  train_neg_hamming_loss_macro_oob:
  - -0.062367864693446094
  - -0.07427149964463398
  - -0.06840277777777777
  - -0.0689170182841069
  - -0.07107843137254902
  train_neg_hamming_loss_micro:
  - -0.03241719520789288
  - -0.03482587064676617
  - -0.03680555555555556
  - -0.035864978902953586
  - -0.03676470588235294
  train_neg_hamming_loss_micro_oob:
  - -0.06236786469344609
  - -0.07427149964463398
  - -0.06840277777777778
  - -0.06891701828410689
  - -0.07107843137254902
  train_neg_hamming_loss_samples:
  - -0.03241719520789288
  - -0.03482587064676616
  - -0.03680555555555555
  - -0.035864978902953586
  - -0.03676470588235294
  train_neg_hamming_loss_samples_oob:
  - -0.06236786469344609
  - -0.07427149964463396
  - -0.06840277777777777
  - -0.06891701828410689
  - -0.071078431372549
  train_neg_hamming_loss_weighted:
  - -0.031507261178110035
  - -0.03447693658404808
  - -0.03601794438181135
  - -0.03542258311570315
  - -0.03709355363767129
  train_neg_hamming_loss_weighted_oob:
  - -0.06123203794997591
  - -0.07412999643025982
  - -0.06721392333709132
  - -0.06953938511742516
  - -0.07082528957528958
  train_neg_label_ranking_loss:
  - -0.00557317359642941
  - -0.009310589907604833
  - -0.0055844907407407406
  - -0.0050281293952180025
  - -0.007160364145658263
  train_neg_label_ranking_loss_oob:
  - -0.02941625557904628
  - -0.03924425491589671
  - -0.032065972222222225
  - -0.03331575246132208
  - -0.035060690943043885
  train_precision_macro:
  - 0.9675828047921072
  - 0.965174129353234
  - 0.9631944444444445
  - 0.9641350210970465
  - 0.9632352941176471
  train_precision_macro_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222223
  - 0.931082981715893
  - 0.9289215686274511
  train_precision_micro:
  - 0.9675828047921071
  - 0.9651741293532339
  - 0.9631944444444445
  - 0.9641350210970464
  - 0.9632352941176471
  train_precision_micro_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222222
  - 0.9310829817158931
  - 0.928921568627451
  train_precision_samples:
  - 0.9675828047921071
  - 0.9651741293532339
  - 0.9631944444444444
  - 0.9641350210970464
  - 0.9632352941176471
  train_precision_samples_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222224
  - 0.9310829817158932
  - 0.928921568627451
  train_precision_weighted:
  - 0.9684927388218899
  - 0.9655230634159521
  - 0.9639820556181887
  - 0.9645774168842968
  - 0.9629064463623288
  train_precision_weighted_oob:
  - 0.938767962050024
  - 0.9258700035697401
  - 0.9327860766629087
  - 0.9304606148825749
  - 0.9291747104247104
  train_recall_macro:
  - 0.9675828047921072
  - 0.965174129353234
  - 0.9631944444444445
  - 0.9641350210970465
  - 0.9632352941176471
  train_recall_macro_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222223
  - 0.931082981715893
  - 0.9289215686274511
  train_recall_micro:
  - 0.9675828047921071
  - 0.9651741293532339
  - 0.9631944444444445
  - 0.9641350210970464
  - 0.9632352941176471
  train_recall_micro_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222222
  - 0.9310829817158931
  - 0.928921568627451
  train_recall_samples:
  - 0.9675828047921071
  - 0.9651741293532339
  - 0.9631944444444444
  - 0.9641350210970464
  - 0.9632352941176471
  train_recall_samples_oob:
  - 0.9376321353065539
  - 0.925728500355366
  - 0.9315972222222224
  - 0.9310829817158932
  - 0.928921568627451
  train_recall_weighted:
  - 0.9684927388218899
  - 0.9655230634159521
  - 0.9639820556181887
  - 0.9645774168842968
  - 0.9629064463623288
  train_recall_weighted_oob:
  - 0.938767962050024
  - 0.9258700035697401
  - 0.9327860766629087
  - 0.9304606148825749
  - 0.9291747104247104
  train_roc_auc_macro:
  - 0.9962910400568082
  - 0.9943921577861685
  - 0.995208612403163
  - 0.9955282164466254
  - 0.995551841735609
  train_roc_auc_macro_oob:
  - 0.9813559657521562
  - 0.9718157432928094
  - 0.9744126658977413
  - 0.976609249723575
  - 0.977485114892603
  train_roc_auc_micro:
  - 0.9961658818413943
  - 0.9938937472159051
  - 0.9946950742480305
  - 0.9950318545457896
  - 0.9951996584999634
  train_roc_auc_micro_oob:
  - 0.9818065860563223
  - 0.9736777014512461
  - 0.9761657345240472
  - 0.9775004767092259
  - 0.9781235122317439
  train_roc_auc_samples:
  - 0.9944268264035706
  - 0.9906894100923952
  - 0.9944155092592593
  - 0.994971870604782
  - 0.9928396358543418
  train_roc_auc_samples_oob:
  - 0.9705837444209537
  - 0.9607557450841032
  - 0.9679340277777778
  - 0.966684247538678
  - 0.9649393090569561
  train_roc_auc_weighted:
  - 0.9963093820747084
  - 0.9944587776107061
  - 0.9953128822454339
  - 0.9954991085175505
  - 0.9955323843978148
  train_roc_auc_weighted_oob:
  - 0.9817306124915586
  - 0.9727134017027123
  - 0.9752528601021246
  - 0.9769844789327169
  - 0.9781016417614631
start: 2023-12-22 01:54:18.616173
wrapper: null
