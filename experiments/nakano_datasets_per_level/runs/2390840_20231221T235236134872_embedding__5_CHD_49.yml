active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAADwvwAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:53:14.228359
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__5
  params: {}
hash: 2390840c8b6843f068f26a24af665b569b40fff8115a5be72dda57f95d26ce0b
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2390840_20231221T235236134872_embedding__5_CHD_49.yml
results:
  fit_time:
  - 21.202208280563354
  - 19.717129230499268
  - 19.71015477180481
  - 21.182488441467285
  - 21.870189428329468
  score_time:
  - 4.469494104385376
  - 3.915614604949951
  - 3.9069857597351074
  - 4.6214892864227295
  - 4.33491063117981
  test_average_precision_macro:
  - 0.49223520438499596
  - 0.5023692416213007
  - 0.48030394426328155
  - 0.49872642272230494
  - 0.5265507389065678
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6862981555293126
  - 0.6844123725185702
  - 0.641374081451201
  - 0.6916312644077238
  - 0.6975491450762292
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7751488095238095
  - 0.784858630952381
  - 0.7866027531956736
  - 0.7858053007135577
  - 0.8022553516819572
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6172179261579726
  - 0.6234592038733786
  - 0.5837224252802379
  - 0.6176397599176418
  - 0.6464076328612628
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5729166666666666
  - 0.5758928571428572
  - 0.5796460176991151
  - 0.5596330275229359
  - 0.5642201834862385
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5729166666666666
  - 0.5758928571428571
  - 0.5796460176991151
  - 0.5596330275229358
  - 0.5642201834862385
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5729166666666666
  - 0.5758928571428571
  - 0.579646017699115
  - 0.5596330275229358
  - 0.5642201834862386
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.45000622200099555
  - 0.4537280701754386
  - 0.4563091775481156
  - 0.4334225280326198
  - 0.43991788028485274
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.44224934645860986
  - 0.4447710749277032
  - 0.44844001578589215
  - 0.4301104436305066
  - 0.43433405496995253
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.40145985401459855
  - 0.4043887147335423
  - 0.40809968847352024
  - 0.3885350318471338
  - 0.3929712460063898
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.42024196042053186
  - 0.42300170068027215
  - 0.4250737463126844
  - 0.4055482743556139
  - 0.41170816950633476
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.30595274975545006
  - 0.30917136017046815
  - 0.31155551545102284
  - 0.29412420092239117
  - 0.2974858206864254
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7751488095238095
  - 0.7848586309523811
  - 0.7866027531956733
  - 0.7949796126401635
  - 0.8206039755351685
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.00903876907577734
  - 0.0
  - 0.008749177615954335
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.04499514778746275
  - 0.0
  - 0.04438991384675163
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.003957642438052725
  - 0.0
  - 0.0058023443305841825
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.016118084715547005
  - 0.0
  - 0.015418131183360084
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8522603382975467
  - 0.8600146808180072
  - 0.8620731939088621
  - 0.8602887435542214
  - 0.8693167083946194
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8125
  - -3.7767857142857144
  - -3.7079646017699117
  - -3.8440366972477062
  - -3.6788990825688073
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4270833333333333
  - -0.42410714285714285
  - -0.420353982300885
  - -0.44036697247706424
  - -0.43577981651376146
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4270833333333333
  - -0.42410714285714285
  - -0.42035398230088494
  - -0.44036697247706424
  - -0.43577981651376146
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4270833333333333
  - -0.42410714285714285
  - -0.4203539823008849
  - -0.44036697247706424
  - -0.4357798165137614
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5499937779990044
  - -0.5462719298245614
  - -0.5436908224518844
  - -0.5665774719673803
  - -0.5600821197151472
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2236359126984127
  - -0.22100694444444446
  - -0.20838249754178959
  - -0.20015290519877676
  - -0.1904689092762487
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5729166666666666
  - 0.5758928571428572
  - 0.5796460176991151
  - 0.5596330275229359
  - 0.5642201834862385
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5729166666666666
  - 0.5758928571428571
  - 0.5796460176991151
  - 0.5596330275229358
  - 0.5642201834862385
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5729166666666666
  - 0.5758928571428571
  - 0.579646017699115
  - 0.5596330275229358
  - 0.5642201834862386
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.45000622200099555
  - 0.4537280701754386
  - 0.4563091775481156
  - 0.4334225280326198
  - 0.43991788028485274
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5729166666666666
  - 0.5758928571428572
  - 0.5796460176991151
  - 0.5596330275229359
  - 0.5642201834862385
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5729166666666666
  - 0.5758928571428571
  - 0.5796460176991151
  - 0.5596330275229358
  - 0.5642201834862385
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5729166666666666
  - 0.5758928571428571
  - 0.579646017699115
  - 0.5596330275229358
  - 0.5642201834862386
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.45000622200099555
  - 0.4537280701754386
  - 0.4563091775481156
  - 0.4334225280326198
  - 0.43991788028485274
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5044141916205312
  - 0.6039912673217365
  - 0.5469346013752855
  - 0.5343004476370342
  - 0.5245378740731289
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7694646816598036
  - 0.7737340767940524
  - 0.7675181960896247
  - 0.7755862932604737
  - 0.7837488598358163
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7763640873015873
  - 0.7789930555555556
  - 0.7916175024582105
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5598869855288899
  - 0.584415572436557
  - 0.5017503535675505
  - 0.5303386159064511
  - 0.5547478130325472
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8306264669824325
  - 0.8220093248610953
  - 0.8271795317992271
  - 0.8107957847795904
  - 0.8314582753208325
  train_average_precision_macro_oob:
  - 0.5911974701252783
  - 0.612265521712411
  - 0.5902862523064648
  - 0.5956106654459186
  - 0.5938093665416168
  train_average_precision_micro:
  - 0.8885237950094245
  - 0.8932563483490963
  - 0.8922394926103219
  - 0.8872980991866135
  - 0.8887164742291775
  train_average_precision_micro_oob:
  - 0.7602685544120298
  - 0.7734035213761336
  - 0.7616777656254932
  - 0.7517002056472045
  - 0.760803131610154
  train_average_precision_samples:
  - 0.8888418610484073
  - 0.8922090544268872
  - 0.8828651332327803
  - 0.8849993771798705
  - 0.8920932984554061
  train_average_precision_samples_oob:
  - 0.7981565086531226
  - 0.804828191622774
  - 0.7936840120663649
  - 0.794867962132536
  - 0.7940832087693073
  train_average_precision_weighted:
  - 0.8763719805917558
  - 0.8832203113078277
  - 0.8826426521504096
  - 0.8752067638134047
  - 0.878800989693323
  train_average_precision_weighted_oob:
  - 0.7357897199199511
  - 0.7580353516954174
  - 0.736449554941097
  - 0.7357303098871543
  - 0.7379520028152533
  train_f1_macro:
  - 0.6587659894657637
  - 0.6583897667419112
  - 0.6523378582202112
  - 0.6614349775784752
  - 0.6569506726457398
  train_f1_macro_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684767
  - 0.577727952167414
  - 0.5822122571001495
  train_f1_micro:
  - 0.6587659894657637
  - 0.6583897667419112
  - 0.6523378582202112
  - 0.6614349775784754
  - 0.6569506726457399
  train_f1_micro_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684767
  - 0.577727952167414
  - 0.5822122571001495
  train_f1_samples:
  - 0.6587659894657637
  - 0.6583897667419111
  - 0.652337858220211
  - 0.6614349775784754
  - 0.6569506726457399
  train_f1_samples_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684766
  - 0.577727952167414
  - 0.5822122571001493
  train_f1_weighted:
  - 0.5932319339162321
  - 0.5911072362685266
  - 0.5832839781099713
  - 0.5955070714039323
  - 0.5891891468864211
  train_f1_weighted_oob:
  - 0.45735408637022285
  - 0.45492904249184746
  - 0.4643556576879645
  - 0.458018438960143
  - 0.46636771300448426
  train_jaccard_macro:
  - 0.5132069489212455
  - 0.5126236206265053
  - 0.5068000524250654
  - 0.5161070632793606
  - 0.5114482537462619
  train_jaccard_macro_oob:
  - 0.4437060678320099
  - 0.442604534770818
  - 0.44550204924457254
  - 0.4454601282839968
  - 0.44822138745663337
  train_jaccard_micro:
  - 0.491164095371669
  - 0.4907459338194055
  - 0.4840514829322888
  - 0.49413735343383586
  - 0.48914858096828046
  train_jaccard_micro_oob:
  - 0.4048625792811839
  - 0.4033790918690602
  - 0.4080169896469339
  - 0.40620073568050447
  - 0.4106483921982077
  train_jaccard_samples:
  - 0.5142749650650328
  - 0.5161990755670214
  - 0.5077040606452371
  - 0.5151728689845282
  - 0.5119047619047619
  train_jaccard_samples_oob:
  - 0.42308932602386323
  - 0.4216714060957853
  - 0.4270425652778594
  - 0.4247287092578572
  - 0.429885659930503
  train_jaccard_weighted:
  - 0.4250966104151948
  - 0.4226976968965085
  - 0.4152048102240664
  - 0.42711435060854774
  - 0.4210437904298898
  train_jaccard_weighted_oob:
  - 0.3106734805411161
  - 0.30891935682611793
  - 0.3151526431411494
  - 0.31135311931255144
  - 0.31727452373742254
  train_label_ranking_average_precision_score:
  - 0.8956138700777518
  - 0.8989810634562324
  - 0.8896524635495217
  - 0.8894836821126056
  - 0.8943354509217735
  train_label_ranking_average_precision_score_oob:
  - 0.8049285176824671
  - 0.8116002006521189
  - 0.8004713423831064
  - 0.7993522670652703
  - 0.7963253612356743
  train_matthews_corrcoef_macro:
  - 0.1311038541450726
  - 0.1483432742884976
  - 0.13629651609027668
  - 0.1435291052520921
  - 0.12786231709665086
  train_matthews_corrcoef_macro_oob:
  - 0.019664319468558084
  - 0.020952013667742065
  - 0.025549851759365947
  - 0.01706354226790565
  - 0.02181713057286182
  train_matthews_corrcoef_micro:
  - 0.3604935645619548
  - 0.36077093296753754
  - 0.3481928470107787
  - 0.3615663443661392
  - 0.35262664354557766
  train_matthews_corrcoef_micro_oob:
  - 0.09753799546940514
  - 0.08837185314512949
  - 0.12467159438349554
  - 0.08392210385080447
  - 0.11585942879289082
  train_matthews_corrcoef_samples:
  - 0.25240344306543316
  - 0.24828605340089002
  - 0.23379537960046431
  - 0.24908737245191392
  - 0.23629928981184714
  train_matthews_corrcoef_samples_oob:
  - 0.020506922383225795
  - 0.018610373660992576
  - 0.03377856526908859
  - 0.01511207718423328
  - 0.03420963953577166
  train_matthews_corrcoef_weighted:
  - 0.2107473310636655
  - 0.22880583219519612
  - 0.21320919907991595
  - 0.2247413839334382
  - 0.20565578535197077
  train_matthews_corrcoef_weighted_oob:
  - 0.03482903046483476
  - 0.03483155837288756
  - 0.045080104936682325
  - 0.030159512644847227
  - 0.038608325306949194
  train_ndgc:
  - 0.9302771979835923
  - 0.9307960897953407
  - 0.9236467409633895
  - 0.9272586934591257
  - 0.933361318861123
  train_ndgc_oob:
  - 0.8681060753529779
  - 0.8723302180823921
  - 0.8642094462169718
  - 0.8659553995362919
  - 0.8658054533497501
  train_neg_coverage_error:
  - -3.27313769751693
  - -3.2415349887133185
  - -3.3031674208144794
  - -3.2600896860986546
  - -3.2556053811659194
  train_neg_coverage_error_oob:
  - -3.6930022573363432
  - -3.6659142212189617
  - -3.753393665158371
  - -3.6614349775784754
  - -3.7062780269058297
  train_neg_hamming_loss_macro:
  - -0.34123401053423624
  - -0.3416102332580888
  - -0.34766214177978877
  - -0.33856502242152464
  - -0.3430493273542601
  train_neg_hamming_loss_macro_oob:
  - -0.42362678705793827
  - -0.42513167795334833
  - -0.4204374057315234
  - -0.42227204783258593
  - -0.4177877428998505
  train_neg_hamming_loss_micro:
  - -0.34123401053423624
  - -0.3416102332580888
  - -0.3476621417797888
  - -0.33856502242152464
  - -0.3430493273542601
  train_neg_hamming_loss_micro_oob:
  - -0.4236267870579383
  - -0.4251316779533484
  - -0.4204374057315234
  - -0.42227204783258593
  - -0.41778774289985054
  train_neg_hamming_loss_samples:
  - -0.34123401053423624
  - -0.34161023325808876
  - -0.3476621417797888
  - -0.33856502242152464
  - -0.3430493273542601
  train_neg_hamming_loss_samples_oob:
  - -0.4236267870579383
  - -0.42513167795334833
  - -0.42043740573152333
  - -0.422272047832586
  - -0.4177877428998505
  train_neg_hamming_loss_weighted:
  - -0.40676806608376787
  - -0.40889276373147343
  - -0.41671602189002865
  - -0.4044929285960676
  - -0.4108108531135789
  train_neg_hamming_loss_weighted_oob:
  - -0.5426459136297771
  - -0.5450709575081526
  - -0.5356443423120355
  - -0.541981561039857
  - -0.5336322869955157
  train_neg_label_ranking_loss:
  - -0.10712942061700526
  - -0.10374968648106345
  - -0.11254399195575666
  - -0.11045714997508718
  - -0.1071001494768311
  train_neg_label_ranking_loss_oob:
  - -0.19372962126912466
  - -0.1838286932530725
  - -0.19763700351935645
  - -0.19266317887394122
  - -0.1984803188839063
  train_precision_macro:
  - 0.6587659894657637
  - 0.6583897667419112
  - 0.6523378582202112
  - 0.6614349775784752
  - 0.6569506726457398
  train_precision_macro_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684767
  - 0.577727952167414
  - 0.5822122571001495
  train_precision_micro:
  - 0.6587659894657637
  - 0.6583897667419112
  - 0.6523378582202112
  - 0.6614349775784754
  - 0.6569506726457399
  train_precision_micro_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684767
  - 0.577727952167414
  - 0.5822122571001495
  train_precision_samples:
  - 0.6587659894657637
  - 0.6583897667419111
  - 0.652337858220211
  - 0.6614349775784754
  - 0.6569506726457399
  train_precision_samples_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684766
  - 0.577727952167414
  - 0.5822122571001493
  train_precision_weighted:
  - 0.5932319339162321
  - 0.5911072362685266
  - 0.5832839781099713
  - 0.5955070714039323
  - 0.5891891468864211
  train_precision_weighted_oob:
  - 0.45735408637022285
  - 0.45492904249184746
  - 0.4643556576879645
  - 0.458018438960143
  - 0.46636771300448426
  train_recall_macro:
  - 0.6587659894657637
  - 0.6583897667419112
  - 0.6523378582202112
  - 0.6614349775784752
  - 0.6569506726457398
  train_recall_macro_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684767
  - 0.577727952167414
  - 0.5822122571001495
  train_recall_micro:
  - 0.6587659894657637
  - 0.6583897667419112
  - 0.6523378582202112
  - 0.6614349775784754
  - 0.6569506726457399
  train_recall_micro_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684767
  - 0.577727952167414
  - 0.5822122571001495
  train_recall_samples:
  - 0.6587659894657637
  - 0.6583897667419111
  - 0.652337858220211
  - 0.6614349775784754
  - 0.6569506726457399
  train_recall_samples_oob:
  - 0.5763732129420617
  - 0.5748683220466516
  - 0.5795625942684766
  - 0.577727952167414
  - 0.5822122571001493
  train_recall_weighted:
  - 0.5932319339162321
  - 0.5911072362685266
  - 0.5832839781099713
  - 0.5955070714039323
  - 0.5891891468864211
  train_recall_weighted_oob:
  - 0.45735408637022285
  - 0.45492904249184746
  - 0.4643556576879645
  - 0.458018438960143
  - 0.46636771300448426
  train_roc_auc_macro:
  - 0.8286096799285628
  - 0.8123017613672747
  - 0.8348326332546766
  - 0.8047083852573657
  - 0.8267550914585993
  train_roc_auc_macro_oob:
  - 0.6369752541243465
  - 0.6749975062706429
  - 0.6450223976797416
  - 0.6535762967111165
  - 0.6698159874528536
  train_roc_auc_micro:
  - 0.8940010448023967
  - 0.8987468820627805
  - 0.8972669531298888
  - 0.8949094720553599
  - 0.8954236959472561
  train_roc_auc_micro_oob:
  - 0.8090014633005943
  - 0.8199307952088636
  - 0.8095158632485764
  - 0.813483676897515
  - 0.8130091594520298
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.814074463652158
  - 0.8241761245758085
  - 0.8267995299361687
  - 0.8145548144590107
  - 0.8189752741911629
  train_roc_auc_weighted_oob:
  - 0.6987832346032387
  - 0.7199706016625127
  - 0.704465199232999
  - 0.6990432498223575
  - 0.7126220528618417
start: 2023-12-21 23:52:36.134872
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
