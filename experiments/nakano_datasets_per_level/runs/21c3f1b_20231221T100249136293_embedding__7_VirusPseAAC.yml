active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AMzMzMzPjv8DMzMzMzAzAgJmZmZmZ+b+gmZmZmZkRQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:03:27.046458
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__7
  params: {}
hash: 21c3f1b87a291d2224720085f9121335acbe739a26fcff2f22e61b190024cdd4
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/21c3f1b_20231221T100249136293_embedding__7_VirusPseAAC.yml
results:
  fit_time:
  - 27.420289039611816
  - 26.84226107597351
  - 27.288305282592773
  - 27.04567003250122
  - 27.758952617645264
  score_time:
  - 3.0945932865142822
  - 3.0342869758605957
  - 3.239893674850464
  - 3.0658884048461914
  - 3.0910141468048096
  test_average_precision_macro:
  - 0.4633767104675117
  - 0.37550684018104885
  - 0.41787584195517824
  - 0.39632677445567616
  - 0.41128068667428014
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4756300678197118
  - 0.4438646425116797
  - 0.4754334392823812
  - 0.4377038284974951
  - 0.5211960795984806
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6980555555555555
  - 0.6934523809523809
  - 0.7051851851851852
  - 0.6862403100775193
  - 0.7306306306306306
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.49147453726770546
  - 0.43967699764874346
  - 0.49006905460729844
  - 0.4500184755874244
  - 0.4978325614402548
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7875000000000001
  - 0.7976190476190476
  - 0.8185185185185185
  - 0.8023255813953488
  - 0.7882882882882883
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7875
  - 0.7976190476190477
  - 0.8185185185185185
  - 0.8023255813953488
  - 0.7882882882882883
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7875
  - 0.7976190476190474
  - 0.8185185185185188
  - 0.8023255813953488
  - 0.7882882882882885
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6749999999999999
  - 0.6780952380952381
  - 0.7124183006535948
  - 0.6976744186046511
  - 0.6618863761720906
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6750451240932764
  - 0.6918395915678525
  - 0.7146305161576912
  - 0.6934234956799035
  - 0.6785836741031733
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6494845360824743
  - 0.6633663366336634
  - 0.6927899686520376
  - 0.6699029126213593
  - 0.6505576208178439
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6583333333333334
  - 0.6768707482993198
  - 0.7074074074074075
  - 0.6877076411960134
  - 0.6628056628056629
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5291994160316404
  - 0.5397648221343874
  - 0.5681722230728378
  - 0.5546678785799433
  - 0.5142975141887625
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6980555555555554
  - 0.6934523809523808
  - 0.705185185185185
  - 0.6862403100775193
  - 0.7306306306306306
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.008428695623736228
  - 0.015151650232484012
  - 0.05262784335745027
  - 0.03927562949192332
  - 0.046454600187905114
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.09149705058649331
  - 0.15387779424611364
  - 0.2173317776746928
  - 0.22006494176165894
  - 0.17286955892152225
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.030811388300841895
  - 0.10077275076270656
  - 0.1307504940885147
  - 0.16895142009458958
  - 0.06574204140631557
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.016857391247472455
  - 0.020448752231867057
  - 0.10808583509328107
  - 0.07855125898384663
  - 0.09670141263604738
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7779286874281416
  - 0.770794317765158
  - 0.7795732087245677
  - 0.7647322766346838
  - 0.802713208047331
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.25
  - -2.2857142857142856
  - -2.088888888888889
  - -2.2790697674418605
  - -2.135135135135135
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21250000000000002
  - -0.2023809523809524
  - -0.18148148148148147
  - -0.19767441860465115
  - -0.21171171171171174
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2125
  - -0.20238095238095238
  - -0.1814814814814815
  - -0.19767441860465115
  - -0.21171171171171171
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2125
  - -0.20238095238095238
  - -0.18148148148148147
  - -0.19767441860465113
  - -0.2117117117117117
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3249999999999999
  - -0.3219047619047619
  - -0.2875816993464052
  - -0.3023255813953489
  - -0.33811362382790955
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19180555555555556
  - -0.22321428571428573
  - -0.18888888888888886
  - -0.22267441860465115
  - -0.1617867867867868
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7875000000000001
  - 0.7976190476190476
  - 0.8185185185185185
  - 0.8023255813953488
  - 0.7882882882882883
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7875
  - 0.7976190476190477
  - 0.8185185185185185
  - 0.8023255813953488
  - 0.7882882882882883
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7875
  - 0.7976190476190474
  - 0.8185185185185188
  - 0.8023255813953488
  - 0.7882882882882885
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6749999999999999
  - 0.6780952380952381
  - 0.7124183006535948
  - 0.6976744186046511
  - 0.6618863761720906
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7875000000000001
  - 0.7976190476190476
  - 0.8185185185185185
  - 0.8023255813953488
  - 0.7882882882882883
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7875
  - 0.7976190476190477
  - 0.8185185185185185
  - 0.8023255813953488
  - 0.7882882882882883
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7875
  - 0.7976190476190474
  - 0.8185185185185188
  - 0.8023255813953488
  - 0.7882882882882885
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6749999999999999
  - 0.6780952380952381
  - 0.7124183006535948
  - 0.6976744186046511
  - 0.6618863761720906
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6564021255475354
  - 0.6117180861698405
  - 0.6541353487713689
  - 0.6765123393530853
  - 0.6657889776959985
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.793235812843656
  - 0.7822772277227723
  - 0.7954158832482765
  - 0.7878185090461305
  - 0.8084227910817506
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8081944444444444
  - 0.7767857142857143
  - 0.811111111111111
  - 0.7773255813953488
  - 0.8382132132132132
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6201342405071036
  - 0.6041702654071075
  - 0.6192777284234406
  - 0.6375073064456135
  - 0.6008654683769892
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9651937811816268
  - 0.9314656187805858
  - 0.9771562279882713
  - 0.9244171380878036
  - 0.9560464967056559
  train_average_precision_macro_oob:
  - 0.4378111412690769
  - 0.44961174479159133
  - 0.4928106415409557
  - 0.4738425902196242
  - 0.4228259841162445
  train_average_precision_micro:
  - 0.9207617481543577
  - 0.9167689061622175
  - 0.9178007578041536
  - 0.9132218372619824
  - 0.9147505090246022
  train_average_precision_micro_oob:
  - 0.6349870259606595
  - 0.650009811579986
  - 0.7092453733280103
  - 0.6325717143839115
  - 0.5808229937306315
  train_average_precision_samples:
  - 0.8962075848303392
  - 0.906060606060606
  - 0.9122427983539094
  - 0.9082317073170731
  - 0.8948039215686275
  train_average_precision_samples_oob:
  - 0.7414171656686627
  - 0.7439225589225589
  - 0.7556927297668038
  - 0.7365684281842818
  - 0.7408169934640523
  train_average_precision_weighted:
  - 0.9925994444212177
  - 0.9769864106856029
  - 0.9944555687335596
  - 0.9762694346643793
  - 0.9868111316112603
  train_average_precision_weighted_oob:
  - 0.6127226872885637
  - 0.6211464213112441
  - 0.6953009405252621
  - 0.6266346660328531
  - 0.5679374145700291
  train_f1_macro:
  - 0.9261477045908184
  - 0.9272727272727274
  - 0.9218106995884773
  - 0.9308943089430893
  - 0.9245098039215688
  train_f1_macro_oob:
  - 0.8393213572854292
  - 0.8333333333333335
  - 0.8425925925925926
  - 0.8323170731707318
  - 0.8264705882352942
  train_f1_micro:
  - 0.9261477045908184
  - 0.9272727272727272
  - 0.9218106995884774
  - 0.9308943089430894
  - 0.9245098039215687
  train_f1_micro_oob:
  - 0.8393213572854291
  - 0.8333333333333334
  - 0.8425925925925926
  - 0.8323170731707317
  - 0.8264705882352941
  train_f1_samples:
  - 0.9261477045908185
  - 0.9272727272727272
  - 0.9218106995884774
  - 0.9308943089430896
  - 0.9245098039215688
  train_f1_samples_oob:
  - 0.8393213572854289
  - 0.8333333333333334
  - 0.8425925925925926
  - 0.8323170731707316
  - 0.8264705882352941
  train_f1_weighted:
  - 0.9432180415288826
  - 0.9473147314731473
  - 0.9390086604016952
  - 0.9546474942361364
  - 0.9409156766154737
  train_f1_weighted_oob:
  - 0.7660797807370334
  - 0.7561656165616562
  - 0.7780541735765616
  - 0.7530336124256765
  - 0.742248623587366
  train_jaccard_macro:
  - 0.8658885371333046
  - 0.8686553062269532
  - 0.8582841076475795
  - 0.8753537737983706
  - 0.8629388669129979
  train_jaccard_macro_oob:
  - 0.7355445696752158
  - 0.7274584738404967
  - 0.7378853007642098
  - 0.7264106123911133
  - 0.7197070246736922
  train_jaccard_micro:
  - 0.862453531598513
  - 0.864406779661017
  - 0.8549618320610687
  - 0.870722433460076
  - 0.8596171376481313
  train_jaccard_micro_oob:
  - 0.7231298366294067
  - 0.7142857142857143
  - 0.728
  - 0.7127937336814621
  - 0.7042606516290727
  train_jaccard_samples:
  - 0.8779583689763331
  - 0.8795093795093794
  - 0.8719870664315108
  - 0.8854529616724739
  - 0.8738095238095237
  train_jaccard_samples_oob:
  - 0.7379526660963787
  - 0.731024531024531
  - 0.7454438565549677
  - 0.7299651567944251
  - 0.719187675070028
  train_jaccard_weighted:
  - 0.8958246399072176
  - 0.904180783066123
  - 0.8882351866480271
  - 0.9179906554648499
  - 0.8917345333904292
  train_jaccard_weighted_oob:
  - 0.6297226723971168
  - 0.6168653889719158
  - 0.6436730734372915
  - 0.6133107728368283
  - 0.6014488427035575
  train_label_ranking_average_precision_score:
  - 0.8962075848303395
  - 0.906060606060606
  - 0.9122427983539093
  - 0.9082317073170731
  - 0.8948039215686276
  train_label_ranking_average_precision_score_oob:
  - 0.7414171656686626
  - 0.7439225589225587
  - 0.7556927297668038
  - 0.7365684281842818
  - 0.7408169934640523
  train_matthews_corrcoef_macro:
  - 0.31306029462026286
  - 0.3189707524244505
  - 0.3106217853886281
  - 0.32502929738094916
  - 0.3113112226275722
  train_matthews_corrcoef_macro_oob:
  - 0.13478212927516436
  - 0.1335923186796508
  - 0.16160969301008224
  - 0.125547175667694
  - 0.10371204452737644
  train_matthews_corrcoef_micro:
  - 0.7605294979623005
  - 0.7679092067753414
  - 0.7523890418497015
  - 0.780268173499165
  - 0.7531466045298449
  train_matthews_corrcoef_micro_oob:
  - 0.3991837499879176
  - 0.382868466822749
  - 0.4445882511120401
  - 0.3760689744123386
  - 0.31687282782714926
  train_matthews_corrcoef_samples:
  - 0.6437235926550215
  - 0.6596752737272097
  - 0.6517686850574258
  - 0.6692915343436271
  - 0.629158887366885
  train_matthews_corrcoef_samples_oob:
  - 0.2488443763614996
  - 0.2317942417827366
  - 0.2823667684583492
  - 0.24101048183954377
  - 0.18626418272980794
  train_matthews_corrcoef_weighted:
  - 0.6403233681088059
  - 0.6490255139300098
  - 0.630458744875755
  - 0.6647987767937483
  - 0.6305594456042884
  train_matthews_corrcoef_weighted_oob:
  - 0.2769186155053804
  - 0.2718774359136953
  - 0.3276871796029201
  - 0.2568983756028049
  - 0.21000565222764642
  train_ndgc:
  - 0.924851013467006
  - 0.931674803907019
  - 0.9370597325226715
  - 0.9344085878476631
  - 0.9236915072358453
  train_ndgc_oob:
  - 0.8064256912443719
  - 0.8099382964698042
  - 0.8188219341872554
  - 0.8048795304874035
  - 0.8064591503933706
  train_neg_coverage_error:
  - -1.5029940119760479
  - -1.5272727272727273
  - -1.5246913580246915
  - -1.524390243902439
  - -1.5176470588235293
  train_neg_coverage_error_oob:
  - -2.1676646706586826
  - -2.1454545454545455
  - -2.185185185185185
  - -2.1707317073170733
  - -2.164705882352941
  train_neg_hamming_loss_macro:
  - -0.07385229540918165
  - -0.07272727272727274
  - -0.07818930041152262
  - -0.06910569105691057
  - -0.07549019607843137
  train_neg_hamming_loss_macro_oob:
  - -0.16067864271457086
  - -0.16666666666666666
  - -0.1574074074074074
  - -0.16768292682926833
  - -0.17352941176470585
  train_neg_hamming_loss_micro:
  - -0.07385229540918163
  - -0.07272727272727272
  - -0.07818930041152264
  - -0.06910569105691057
  - -0.07549019607843137
  train_neg_hamming_loss_micro_oob:
  - -0.16067864271457086
  - -0.16666666666666666
  - -0.1574074074074074
  - -0.1676829268292683
  - -0.17352941176470588
  train_neg_hamming_loss_samples:
  - -0.07385229540918163
  - -0.07272727272727272
  - -0.07818930041152262
  - -0.06910569105691056
  - -0.07549019607843137
  train_neg_hamming_loss_samples_oob:
  - -0.16067864271457083
  - -0.16666666666666666
  - -0.1574074074074074
  - -0.1676829268292683
  - -0.17352941176470588
  train_neg_hamming_loss_weighted:
  - -0.05678195847111747
  - -0.05268526852685268
  - -0.06099133959830477
  - -0.045352505763863606
  - -0.059084323384526224
  train_neg_hamming_loss_weighted_oob:
  - -0.23392021926296658
  - -0.24383438343834385
  - -0.22194582642343838
  - -0.24696638757432351
  - -0.257751376412634
  train_neg_label_ranking_loss:
  - -0.05673652694610779
  - -0.057340067340067344
  - -0.052932098765432097
  - -0.05403116531165311
  - -0.060359477124183006
  train_neg_label_ranking_loss_oob:
  - -0.1945276114437791
  - -0.1827777777777778
  - -0.18715706447187927
  - -0.18663617886178863
  - -0.19410130718954247
  train_precision_macro:
  - 0.9261477045908184
  - 0.9272727272727274
  - 0.9218106995884773
  - 0.9308943089430893
  - 0.9245098039215688
  train_precision_macro_oob:
  - 0.8393213572854292
  - 0.8333333333333335
  - 0.8425925925925926
  - 0.8323170731707318
  - 0.8264705882352942
  train_precision_micro:
  - 0.9261477045908184
  - 0.9272727272727272
  - 0.9218106995884774
  - 0.9308943089430894
  - 0.9245098039215687
  train_precision_micro_oob:
  - 0.8393213572854291
  - 0.8333333333333334
  - 0.8425925925925926
  - 0.8323170731707317
  - 0.8264705882352941
  train_precision_samples:
  - 0.9261477045908185
  - 0.9272727272727272
  - 0.9218106995884774
  - 0.9308943089430896
  - 0.9245098039215688
  train_precision_samples_oob:
  - 0.8393213572854289
  - 0.8333333333333334
  - 0.8425925925925926
  - 0.8323170731707316
  - 0.8264705882352941
  train_precision_weighted:
  - 0.9432180415288826
  - 0.9473147314731473
  - 0.9390086604016952
  - 0.9546474942361364
  - 0.9409156766154737
  train_precision_weighted_oob:
  - 0.7660797807370334
  - 0.7561656165616562
  - 0.7780541735765616
  - 0.7530336124256765
  - 0.742248623587366
  train_recall_macro:
  - 0.9261477045908184
  - 0.9272727272727274
  - 0.9218106995884773
  - 0.9308943089430893
  - 0.9245098039215688
  train_recall_macro_oob:
  - 0.8393213572854292
  - 0.8333333333333335
  - 0.8425925925925926
  - 0.8323170731707318
  - 0.8264705882352942
  train_recall_micro:
  - 0.9261477045908184
  - 0.9272727272727272
  - 0.9218106995884774
  - 0.9308943089430894
  - 0.9245098039215687
  train_recall_micro_oob:
  - 0.8393213572854291
  - 0.8333333333333334
  - 0.8425925925925926
  - 0.8323170731707317
  - 0.8264705882352941
  train_recall_samples:
  - 0.9261477045908185
  - 0.9272727272727272
  - 0.9218106995884774
  - 0.9308943089430896
  - 0.9245098039215688
  train_recall_samples_oob:
  - 0.8393213572854289
  - 0.8333333333333334
  - 0.8425925925925926
  - 0.8323170731707316
  - 0.8264705882352941
  train_recall_weighted:
  - 0.9432180415288826
  - 0.9473147314731473
  - 0.9390086604016952
  - 0.9546474942361364
  - 0.9409156766154737
  train_recall_weighted_oob:
  - 0.7660797807370334
  - 0.7561656165616562
  - 0.7780541735765616
  - 0.7530336124256765
  - 0.742248623587366
  train_roc_auc_macro:
  - 0.9983534876247422
  - 0.9958583516243862
  - 0.9987216058540076
  - 0.9959366506538183
  - 0.9974263853477812
  train_roc_auc_macro_oob:
  - 0.7374638327630878
  - 0.7784740101056035
  - 0.7950126065360048
  - 0.7665058250327167
  - 0.7385914190156502
  train_roc_auc_micro:
  - 0.9699939751927007
  - 0.9657737347338795
  - 0.9653096385775404
  - 0.9645577984915779
  - 0.9653242971100566
  train_roc_auc_micro_oob:
  - 0.8339140750678566
  - 0.8393916168266574
  - 0.8430028844106316
  - 0.835928912271338
  - 0.8266938396512533
  train_roc_auc_samples:
  - 0.9432634730538921
  - 0.9426599326599326
  - 0.947067901234568
  - 0.9459688346883469
  - 0.9396405228758169
  train_roc_auc_samples_oob:
  - 0.805472388556221
  - 0.8172222222222222
  - 0.8128429355281206
  - 0.8133638211382113
  - 0.8058986928104576
  train_roc_auc_weighted:
  - 0.9995362519392672
  - 0.9984208817234769
  - 0.9996370335683491
  - 0.9985053776618107
  - 0.9990363415785762
  train_roc_auc_weighted_oob:
  - 0.7847545810665063
  - 0.7975704665657567
  - 0.8347615152597224
  - 0.7865214492413133
  - 0.7763072448668694
start: 2023-12-21 10:02:49.136293
wrapper: null
