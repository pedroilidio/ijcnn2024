active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZ2b8AmJmZmZnZvwDNzMzMzARAgJmZmZmZFcAAzczMzMwMQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:12:51.263570
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: c1aa023adc336008fb2d06518c321c8b824bfdb809c0181e8cb497d4da14a0f7
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c1aa023_20231212T161237218385_embedding_proba__0_PlantGO.yml
results:
  fit_time:
  - 1.6385910511016846
  - 1.6373908519744873
  - 1.5546536445617676
  - 1.577111005783081
  - 1.70823335647583
  score_time:
  - 1.7352550029754639
  - 1.7327876091003418
  - 1.7349932193756104
  - 1.8059298992156982
  - 1.7521209716796875
  test_average_precision_macro:
  - 0.7897089636511225
  - 0.7802406852836001
  - 0.8165302388125011
  - 0.775221093146604
  - 0.8041893072920683
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7556590318151575
  - 0.75132683978973
  - 0.7655851497814888
  - 0.7362924545544527
  - 0.7675435160081538
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8347849854227405
  - 0.8278486394557822
  - 0.8566267785179702
  - 0.8125325752191424
  - 0.830663029100529
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8517325826446482
  - 0.8438588586566346
  - 0.836988206027268
  - 0.8490278076071488
  - 0.8478452077593779
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9311224489795918
  - 0.931547619047619
  - 0.9304835924006909
  - 0.9307628524046434
  - 0.93359375
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9311224489795918
  - 0.9315476190476191
  - 0.9304835924006909
  - 0.9307628524046434
  - 0.93359375
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9311224489795918
  - 0.9315476190476191
  - 0.9304835924006908
  - 0.9307628524046434
  - 0.93359375
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.896881287726358
  - 0.8923444976076553
  - 0.8894236672150875
  - 0.896126842423397
  - 0.8978114983974359
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8749129595477316
  - 0.8761416173458221
  - 0.8741817002966145
  - 0.8747920291962253
  - 0.8793888088251774
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8711217183770883
  - 0.871866295264624
  - 0.8700040371417037
  - 0.8704924389298178
  - 0.8754578754578755
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8752635119982058
  - 0.8751962323390893
  - 0.8737117804475316
  - 0.8741238860641846
  - 0.8795787545787546
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8164794874319854
  - 0.8094525284605186
  - 0.8045346495062797
  - 0.8159277329790259
  - 0.8182269177094563
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8347849854227405
  - 0.8278486394557821
  - 0.8566267785179702
  - 0.8125325752191428
  - 0.830663029100529
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.13324851653134387
  - 0.11227023092921336
  - 0.14584169442714767
  - 0.10890717318032415
  - 0.14242386770739632
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4709803354614431
  - 0.4609327433803837
  - 0.4680697923092499
  - 0.450601414528399
  - 0.4951366459490102
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2860226317014762
  - 0.25548812475611843
  - 0.2772007493747405
  - 0.2548241512831731
  - 0.30673882432490124
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.32158222735535297
  - 0.286435067444645
  - 0.34706059336734124
  - 0.2897415056599488
  - 0.34647123100687194
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8772230486444038
  - 0.8713481531130559
  - 0.8933168205127532
  - 0.860606803455461
  - 0.8750790116348296
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6989795918367347
  - -1.7091836734693877
  - -1.6683937823834196
  - -1.736318407960199
  - -1.7291666666666667
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06887755102040817
  - -0.06845238095238095
  - -0.06951640759930915
  - -0.06923714759535655
  - -0.06640625
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06887755102040816
  - -0.06845238095238096
  - -0.06951640759930916
  - -0.06923714759535655
  - -0.06640625
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06887755102040816
  - -0.06845238095238095
  - -0.06951640759930915
  - -0.06923714759535655
  - -0.06640625
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10311871227364186
  - -0.10765550239234452
  - -0.11057633278491269
  - -0.10387315757660298
  - -0.1021885016025641
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05320810142238713
  - -0.056702226345083484
  - -0.049858690532265666
  - -0.05880697522488568
  - -0.05459280303030303
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9311224489795918
  - 0.931547619047619
  - 0.9304835924006909
  - 0.9307628524046434
  - 0.93359375
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9311224489795918
  - 0.9315476190476191
  - 0.9304835924006909
  - 0.9307628524046434
  - 0.93359375
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9311224489795918
  - 0.9315476190476191
  - 0.9304835924006908
  - 0.9307628524046434
  - 0.93359375
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.896881287726358
  - 0.8923444976076553
  - 0.8894236672150875
  - 0.896126842423397
  - 0.8978114983974359
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9311224489795918
  - 0.931547619047619
  - 0.9304835924006909
  - 0.9307628524046434
  - 0.93359375
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9311224489795918
  - 0.9315476190476191
  - 0.9304835924006909
  - 0.9307628524046434
  - 0.93359375
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9311224489795918
  - 0.9315476190476191
  - 0.9304835924006908
  - 0.9307628524046434
  - 0.93359375
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.896881287726358
  - 0.8923444976076553
  - 0.8894236672150875
  - 0.896126842423397
  - 0.8978114983974359
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9790748499313232
  - 0.962529575862261
  - 0.9760736057474945
  - 0.9697139669880142
  - 0.9724831284756023
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9568224368809083
  - 0.9530339125716978
  - 0.9595006247818892
  - 0.9563685763608378
  - 0.9578936986200822
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9467918985776128
  - 0.9432977736549164
  - 0.9501413094677343
  - 0.9411930247751142
  - 0.9454071969696969
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9765640617961034
  - 0.9656134740177889
  - 0.9661945717887497
  - 0.9709092077078282
  - 0.9728075478901735
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8316613318494245
  - 0.8601099914487378
  - 0.8319955014750161
  - 0.8649745395611919
  - 0.8443106771136727
  train_average_precision_macro_oob:
  - 0.6872346884978909
  - 0.7472784564215925
  - 0.7068000313137882
  - 0.721462948155482
  - 0.7270456444671924
  train_average_precision_micro:
  - 0.7982932223009677
  - 0.7997672885489314
  - 0.7927955357960006
  - 0.8068243259607811
  - 0.7979429909029482
  train_average_precision_micro_oob:
  - 0.7347031098657283
  - 0.7449234486950019
  - 0.7333221408364325
  - 0.7508456499051164
  - 0.7419761080946354
  train_average_precision_samples:
  - 0.8623787196037834
  - 0.8601058539357772
  - 0.8594439389343848
  - 0.870437784723499
  - 0.8670074518356962
  train_average_precision_samples_oob:
  - 0.8203253765274225
  - 0.820654757291586
  - 0.8175401880497423
  - 0.8287236215807645
  - 0.8241321337695383
  train_average_precision_weighted:
  - 0.881810692395956
  - 0.8959496628748723
  - 0.8819152911997484
  - 0.898275475119096
  - 0.8883094276728967
  train_average_precision_weighted_oob:
  - 0.7886023633040194
  - 0.8231421190796342
  - 0.8024357110782995
  - 0.8127972706477847
  - 0.8148708668594681
  train_f1_macro:
  - 0.9343563512361466
  - 0.9331841432225064
  - 0.9335456475583864
  - 0.9364006864006864
  - 0.9349024597116199
  train_f1_macro_oob:
  - 0.9319053708439897
  - 0.9295609548167092
  - 0.9307855626326963
  - 0.9330759330759331
  - 0.9302374893977947
  train_f1_micro:
  - 0.9343563512361467
  - 0.9331841432225064
  - 0.9335456475583864
  - 0.9364006864006864
  - 0.93490245971162
  train_f1_micro_oob:
  - 0.9319053708439897
  - 0.9295609548167093
  - 0.9307855626326964
  - 0.9330759330759331
  - 0.9302374893977947
  train_f1_samples:
  - 0.9343563512361466
  - 0.9331841432225064
  - 0.9335456475583863
  - 0.9364006864006863
  - 0.9349024597116199
  train_f1_samples_oob:
  - 0.9319053708439897
  - 0.9295609548167094
  - 0.9307855626326962
  - 0.9330759330759331
  - 0.9302374893977947
  train_f1_weighted:
  - 0.9010743510457989
  - 0.8982317873186895
  - 0.8999743411718537
  - 0.9059310712105003
  - 0.903075065115315
  train_f1_weighted_oob:
  - 0.8957405641178293
  - 0.8894753707835276
  - 0.8933770036526097
  - 0.898539613165059
  - 0.8922976167944939
  train_jaccard_macro:
  - 0.8805573730969849
  - 0.8784608606089583
  - 0.8790828365560324
  - 0.8837633897689742
  - 0.8811973107907841
  train_jaccard_macro_oob:
  - 0.8766060223867647
  - 0.872609441884289
  - 0.8746414163990722
  - 0.8783444850935117
  - 0.873755125115158
  train_jaccard_micro:
  - 0.8768
  - 0.874737788432724
  - 0.8753732828986661
  - 0.8804073812644954
  - 0.8777622934501293
  train_jaccard_micro_oob:
  - 0.8724932654893744
  - 0.8683922349427576
  - 0.8705321683876092
  - 0.8745476477683957
  - 0.8695738354806739
  train_jaccard_samples:
  - 0.8807172367274668
  - 0.8787105477642562
  - 0.8793140617344439
  - 0.8844979987837132
  - 0.8816486312669519
  train_jaccard_samples_oob:
  - 0.8762766645119586
  - 0.8721902138781933
  - 0.874358507734304
  - 0.8786145643288501
  - 0.8733159969801191
  train_jaccard_weighted:
  - 0.8236232687579726
  - 0.8187239473373976
  - 0.8215811003002303
  - 0.8313947722130203
  - 0.8265370893080383
  train_jaccard_weighted_oob:
  - 0.814969153418009
  - 0.8045519947258998
  - 0.8109097128752429
  - 0.8192834089504407
  - 0.8092155420634191
  train_label_ranking_average_precision_score:
  - 0.8623787196037835
  - 0.8601058539357779
  - 0.8594439389343859
  - 0.8704377847234995
  - 0.8670074518356968
  train_label_ranking_average_precision_score_oob:
  - 0.8203253765274228
  - 0.8206547572915862
  - 0.8175401880497424
  - 0.8287236215807648
  - 0.8241321337695388
  train_matthews_corrcoef_macro:
  - 0.1500170145346915
  - 0.15074193771824784
  - 0.1474011799444527
  - 0.16840996831542243
  - 0.15936731812745975
  train_matthews_corrcoef_macro_oob:
  - 0.12706550446675943
  - 0.13037711327898407
  - 0.12403163313136982
  - 0.1482304615511865
  - 0.12483177518005366
  train_matthews_corrcoef_micro:
  - 0.4990841654811636
  - 0.48985175069325143
  - 0.48934699419898975
  - 0.5237399131056175
  - 0.5053941876276546
  train_matthews_corrcoef_micro_oob:
  - 0.47235895169696335
  - 0.44938497579563197
  - 0.45856569114871853
  - 0.4890315854306069
  - 0.4541213925284008
  train_matthews_corrcoef_samples:
  - 0.3068368496084915
  - 0.29937723521348925
  - 0.295975192401142
  - 0.33577954501635865
  - 0.31136657116361627
  train_matthews_corrcoef_samples_oob:
  - 0.2786749575530059
  - 0.2583987196447176
  - 0.2656723789734196
  - 0.30040694785984
  - 0.26175826797027024
  train_matthews_corrcoef_weighted:
  - 0.36447508276987056
  - 0.35977171200539243
  - 0.3582525207928474
  - 0.39871183849870273
  - 0.38118943269620853
  train_matthews_corrcoef_weighted_oob:
  - 0.3185346843259404
  - 0.31682300112868755
  - 0.30860540969857586
  - 0.35780985631284706
  - 0.3109532775342944
  train_ndgc:
  - 0.8982555115751805
  - 0.8967563468413015
  - 0.8960547111439862
  - 0.9040440038614368
  - 0.9012879104393728
  train_ndgc_oob:
  - 0.8663103276608437
  - 0.8670588306772984
  - 0.8642960070341879
  - 0.8725914624949834
  - 0.8690489115459663
  train_neg_coverage_error:
  - -1.561381074168798
  - -1.5562659846547315
  - -1.564331210191083
  - -1.5135135135135136
  - -1.515267175572519
  train_neg_coverage_error_oob:
  - -1.7826086956521738
  - -1.7531969309462916
  - -1.7694267515923567
  - -1.725868725868726
  - -1.7150127226463103
  train_neg_hamming_loss_macro:
  - -0.06564364876385335
  - -0.0668158567774936
  - -0.06645435244161359
  - -0.06359931359931359
  - -0.06509754028837998
  train_neg_hamming_loss_macro_oob:
  - -0.06809462915601022
  - -0.07043904518329071
  - -0.06921443736730361
  - -0.06692406692406692
  - -0.06976251060220526
  train_neg_hamming_loss_micro:
  - -0.06564364876385337
  - -0.0668158567774936
  - -0.06645435244161359
  - -0.0635993135993136
  - -0.06509754028837998
  train_neg_hamming_loss_micro_oob:
  - -0.06809462915601024
  - -0.07043904518329071
  - -0.06921443736730361
  - -0.06692406692406692
  - -0.06976251060220526
  train_neg_hamming_loss_samples:
  - -0.06564364876385335
  - -0.0668158567774936
  - -0.06645435244161359
  - -0.06359931359931359
  - -0.06509754028837998
  train_neg_hamming_loss_samples_oob:
  - -0.06809462915601024
  - -0.07043904518329071
  - -0.06921443736730361
  - -0.06692406692406692
  - -0.06976251060220526
  train_neg_hamming_loss_weighted:
  - -0.09892564895420111
  - -0.10176821268131059
  - -0.1000256588281462
  - -0.09406892878949955
  - -0.09692493488468504
  train_neg_hamming_loss_weighted_oob:
  - -0.1042594358821707
  - -0.11052462921647228
  - -0.10662299634739032
  - -0.10146038683494095
  - -0.10770238320550603
  train_neg_label_ranking_loss:
  - -0.041580123485494336
  - -0.04069251767461486
  - -0.04215917133114585
  - -0.03726128726128726
  - -0.03850014136273679
  train_neg_label_ranking_loss_oob:
  - -0.06121100174808615
  - -0.05761149431226158
  - -0.0603429196422827
  - -0.05607923941257274
  - -0.05602290933079738
  train_precision_macro:
  - 0.9343563512361466
  - 0.9331841432225064
  - 0.9335456475583864
  - 0.9364006864006864
  - 0.9349024597116199
  train_precision_macro_oob:
  - 0.9319053708439897
  - 0.9295609548167092
  - 0.9307855626326963
  - 0.9330759330759331
  - 0.9302374893977947
  train_precision_micro:
  - 0.9343563512361467
  - 0.9331841432225064
  - 0.9335456475583864
  - 0.9364006864006864
  - 0.93490245971162
  train_precision_micro_oob:
  - 0.9319053708439897
  - 0.9295609548167093
  - 0.9307855626326964
  - 0.9330759330759331
  - 0.9302374893977947
  train_precision_samples:
  - 0.9343563512361466
  - 0.9331841432225064
  - 0.9335456475583863
  - 0.9364006864006863
  - 0.9349024597116199
  train_precision_samples_oob:
  - 0.9319053708439897
  - 0.9295609548167094
  - 0.9307855626326962
  - 0.9330759330759331
  - 0.9302374893977947
  train_precision_weighted:
  - 0.9010743510457989
  - 0.8982317873186895
  - 0.8999743411718537
  - 0.9059310712105003
  - 0.903075065115315
  train_precision_weighted_oob:
  - 0.8957405641178293
  - 0.8894753707835276
  - 0.8933770036526097
  - 0.898539613165059
  - 0.8922976167944939
  train_recall_macro:
  - 0.9343563512361466
  - 0.9331841432225064
  - 0.9335456475583864
  - 0.9364006864006864
  - 0.9349024597116199
  train_recall_macro_oob:
  - 0.9319053708439897
  - 0.9295609548167092
  - 0.9307855626326963
  - 0.9330759330759331
  - 0.9302374893977947
  train_recall_micro:
  - 0.9343563512361467
  - 0.9331841432225064
  - 0.9335456475583864
  - 0.9364006864006864
  - 0.93490245971162
  train_recall_micro_oob:
  - 0.9319053708439897
  - 0.9295609548167093
  - 0.9307855626326964
  - 0.9330759330759331
  - 0.9302374893977947
  train_recall_samples:
  - 0.9343563512361466
  - 0.9331841432225064
  - 0.9335456475583863
  - 0.9364006864006863
  - 0.9349024597116199
  train_recall_samples_oob:
  - 0.9319053708439897
  - 0.9295609548167094
  - 0.9307855626326962
  - 0.9330759330759331
  - 0.9302374893977947
  train_recall_weighted:
  - 0.9010743510457989
  - 0.8982317873186895
  - 0.8999743411718537
  - 0.9059310712105003
  - 0.903075065115315
  train_recall_weighted_oob:
  - 0.8957405641178293
  - 0.8894753707835276
  - 0.8933770036526097
  - 0.898539613165059
  - 0.8922976167944939
  train_roc_auc_macro:
  - 0.9839965979260953
  - 0.9864843345739964
  - 0.9838893751181993
  - 0.9866640223634437
  - 0.9851756281694842
  train_roc_auc_macro_oob:
  - 0.9607196094943548
  - 0.9709545466189954
  - 0.9667768787531593
  - 0.969252712256075
  - 0.9708129570845369
  train_roc_auc_micro:
  - 0.9679161121433788
  - 0.968882127294083
  - 0.9675149458203649
  - 0.970919666849962
  - 0.9698422401445645
  train_roc_auc_micro_oob:
  - 0.9510761691149112
  - 0.9543390222656383
  - 0.9516720032096625
  - 0.9558190312218477
  - 0.9559251570688009
  train_roc_auc_samples:
  - 0.9584198765145056
  - 0.9593074823253851
  - 0.9578408286688541
  - 0.9627387127387127
  - 0.9614998586372632
  train_roc_auc_samples_oob:
  - 0.9387889982519139
  - 0.9423885056877386
  - 0.9396570803577172
  - 0.9439207605874272
  - 0.9439770906692028
  train_roc_auc_weighted:
  - 0.9808376060114595
  - 0.9828722222241936
  - 0.9807078501046371
  - 0.9828648711756311
  - 0.9812971483857428
  train_roc_auc_weighted_oob:
  - 0.9632364000953055
  - 0.97028164559029
  - 0.9676375092024135
  - 0.9687353763808845
  - 0.9689842793098956
start: 2023-12-12 16:12:37.218385
wrapper: null
