active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D+AmZmZmZkBwADNzMzMzPw/ADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:36:57.849477
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__5
  params: {}
hash: 62fcb84bb659eae1660098b6816c5c38a4fa36807cb5d1d00e628d0d6089e73b
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/62fcb84_20231221T183621257440_embedding_proba__5_GrampositivePseAAC.yml
results:
  fit_time:
  - 18.635040760040283
  - 19.04744863510132
  - 19.549865007400513
  - 20.023541688919067
  - 20.14123296737671
  score_time:
  - 4.694823980331421
  - 4.653686285018921
  - 4.8388166427612305
  - 5.006490707397461
  - 4.838226318359375
  test_average_precision_macro:
  - 0.4008739727725491
  - 0.38184146092075544
  - 0.37581727661524233
  - 0.38115640403339146
  - 0.3603884744414195
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5246613670565782
  - 0.49544927147594264
  - 0.49469561479066765
  - 0.4662519578966512
  - 0.49232462699828944
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.741830065359477
  - 0.7044025157232704
  - 0.7450980392156862
  - 0.6936507936507936
  - 0.7091346153846154
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5115586691077753
  - 0.490177215925261
  - 0.49133288149139503
  - 0.4779168004610936
  - 0.4796029828540825
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7009803921568628
  - 0.6875222499110002
  - 0.7094645550527903
  - 0.6741043083900227
  - 0.6749260355029585
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6409250384142673
  - 0.6279834616915031
  - 0.6503076923076923
  - 0.6256670361020462
  - 0.6212702710974379
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6222664015904572
  - 0.6091081593927894
  - 0.632
  - 0.6030534351145038
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6752567693744161
  - 0.6603773584905659
  - 0.679738562091503
  - 0.6571428571428569
  - 0.655128205128205
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5476853580804303
  - 0.5297491277936746
  - 0.5558664412510567
  - 0.51810526562697
  - 0.5150249992779758
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.741830065359477
  - 0.7044025157232704
  - 0.7450980392156864
  - 0.6936507936507936
  - 0.7091346153846154
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.18380041169286024
  - 0.14576323774119315
  - 0.167016449192468
  - 0.17787402653263262
  - 0.12037150908251253
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3396374794146837
  - 0.30134851508779903
  - 0.3522941934868125
  - 0.2976643052674901
  - 0.2947349434130383
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.31045751633986934
  - 0.2735849056603774
  - 0.311974188284764
  - 0.2761904761904762
  - 0.27564102564102566
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24036454163937515
  - 0.1983316318729037
  - 0.2446527436153959
  - 0.21356250859595685
  - 0.17519426724611303
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8081927650682733
  - 0.7797226305607292
  - 0.8109026026104835
  - 0.7720676868041667
  - 0.7832506035982788
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7156862745098038
  - -1.7735849056603774
  - -1.6764705882352942
  - -1.7714285714285714
  - -1.7596153846153846
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23284313725490197
  - -0.24292452830188682
  - -0.22549019607843138
  - -0.24761904761904763
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23284313725490197
  - -0.2429245283018868
  - -0.22549019607843138
  - -0.24761904761904763
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23284313725490197
  - -0.2429245283018868
  - -0.22549019607843138
  - -0.24761904761904763
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2990196078431372
  - -0.31247775008899964
  - -0.2905354449472097
  - -0.3258956916099773
  - -0.3250739644970414
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23202614379084968
  - -0.25786163522012573
  - -0.21732026143790847
  - -0.2571428571428571
  - -0.2532051282051282
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7009803921568628
  - 0.6875222499110002
  - 0.7094645550527903
  - 0.6741043083900227
  - 0.6749260355029585
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7671568627450981
  - 0.7570754716981132
  - 0.7745098039215687
  - 0.7523809523809524
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7009803921568628
  - 0.6875222499110002
  - 0.7094645550527903
  - 0.6741043083900227
  - 0.6749260355029585
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6605559161188931
  - 0.6316802113059621
  - 0.6672414822601389
  - 0.6098787238890178
  - 0.6099341908575253
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.777580971659919
  - 0.7605316245401685
  - 0.780554149797571
  - 0.7472108843537415
  - 0.7661797337278107
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7679738562091503
  - 0.7421383647798743
  - 0.7826797385620916
  - 0.7428571428571429
  - 0.7467948717948718
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6870946805295546
  - 0.6604315370477479
  - 0.6784226282073583
  - 0.6285625146036902
  - 0.6619502003996356
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9999748490945675
  - 0.9998236197606747
  - 0.9998173453890699
  - 0.9998203911754201
  - 0.9998004957457258
  train_average_precision_macro_oob:
  - 0.9631121401140463
  - 0.9774303575474843
  - 0.9859268167681222
  - 0.9891791784109377
  - 0.9200278410627262
  train_average_precision_micro:
  - 0.9984443730763738
  - 0.9984157781396041
  - 0.9983358637018085
  - 0.9984452531584374
  - 0.9983193525473829
  train_average_precision_micro_oob:
  - 0.9841259933377325
  - 0.9825714632332312
  - 0.9782649953310366
  - 0.9807687222415901
  - 0.9824924336987307
  train_average_precision_samples:
  - 0.9832134292565947
  - 0.9838579499596449
  - 0.9840127897681855
  - 0.9855072463768116
  - 0.9865461847389558
  train_average_precision_samples_oob:
  - 0.9742206235011991
  - 0.974778046811945
  - 0.9702238209432454
  - 0.9764492753623188
  - 0.9757028112449799
  train_average_precision_weighted:
  - 0.9999663854247202
  - 0.9998144081633593
  - 0.999822466051583
  - 0.9998249268110239
  - 0.9998133516284596
  train_average_precision_weighted_oob:
  - 0.9940661006080663
  - 0.9945190015684209
  - 0.9937159959936472
  - 0.9958126727197777
  - 0.9863733995115738
  train_f1_macro:
  - 0.9904076738609113
  - 0.988498789346247
  - 0.9880095923261392
  - 0.9891304347826086
  - 0.9885542168674699
  train_f1_macro_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819278
  train_f1_micro:
  - 0.9904076738609112
  - 0.988498789346247
  - 0.988009592326139
  - 0.9891304347826086
  - 0.9885542168674699
  train_f1_micro_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819277
  train_f1_samples:
  - 0.9904076738609112
  - 0.988498789346247
  - 0.988009592326139
  - 0.9891304347826086
  - 0.9885542168674699
  train_f1_samples_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819277
  train_f1_weighted:
  - 0.9971211574892831
  - 0.9951457720022528
  - 0.995421324038621
  - 0.9959607516815754
  - 0.9962158898122322
  train_f1_weighted_oob:
  - 0.9832821093960155
  - 0.9857682860975143
  - 0.9851135797805669
  - 0.9821383168065091
  - 0.9885211490352821
  train_jaccard_macro:
  - 0.981366356198448
  - 0.9775795508000165
  - 0.9766808254725916
  - 0.978831375105021
  - 0.9777676997115492
  train_jaccard_macro_oob:
  - 0.9602007575902919
  - 0.9621662671644906
  - 0.9602545225750109
  - 0.958709790492046
  - 0.9659025142361755
  train_jaccard_micro:
  - 0.9809976247030879
  - 0.9772591262716936
  - 0.976303317535545
  - 0.978494623655914
  - 0.97736748064324
  train_jaccard_micro_oob:
  - 0.9600470035252644
  - 0.9619952494061758
  - 0.9600470035252644
  - 0.9586043761088113
  - 0.9656601539372409
  train_jaccard_samples:
  - 0.984652278177458
  - 0.9815980629539951
  - 0.9811350919264589
  - 0.9829307568438004
  - 0.9820080321285142
  train_jaccard_samples_oob:
  - 0.9696243005595524
  - 0.9709443099273608
  - 0.9693045563549162
  - 0.9687600644122385
  - 0.9730120481927711
  train_jaccard_weighted:
  - 0.9943235983709977
  - 0.9903973561068762
  - 0.9909715480794764
  - 0.9920150946280796
  - 0.9925501684408843
  train_jaccard_weighted_oob:
  - 0.967192098655652
  - 0.9720142387346664
  - 0.9707550155991471
  - 0.9649267322187276
  - 0.9773712269074472
  train_label_ranking_average_precision_score:
  - 0.9832134292565947
  - 0.9838579499596448
  - 0.9840127897681854
  - 0.9855072463768116
  - 0.9865461847389557
  train_label_ranking_average_precision_score_oob:
  - 0.9742206235011989
  - 0.974778046811945
  - 0.9702238209432452
  - 0.9764492753623187
  - 0.9757028112449798
  train_matthews_corrcoef_macro:
  - 0.7474104704789841
  - 0.7426909012671299
  - 0.7423320520102386
  - 0.7440770555813748
  - 0.7436410671094896
  train_matthews_corrcoef_macro_oob:
  - 0.7220752720691612
  - 0.7233037061164065
  - 0.7217099570035674
  - 0.7206556801378579
  - 0.7292132446830906
  train_matthews_corrcoef_micro:
  - 0.9744991575731531
  - 0.9695232294758481
  - 0.9680757076107678
  - 0.9711558486598916
  - 0.9696256303489811
  train_matthews_corrcoef_micro_oob:
  - 0.9454563396087879
  - 0.9483743220439887
  - 0.9454840130604008
  - 0.9436219777469823
  - 0.9535193972321219
  train_matthews_corrcoef_samples:
  - 0.9643997614829238
  - 0.9595869275466308
  - 0.9564061563670166
  - 0.9637103085589979
  - 0.9613881150443979
  train_matthews_corrcoef_samples_oob:
  - 0.9318401685112462
  - 0.9372043199537584
  - 0.9302414474880647
  - 0.9327408225564716
  - 0.9405045809078518
  train_matthews_corrcoef_weighted:
  - 0.9628048369042573
  - 0.9576717129824811
  - 0.9559232408587004
  - 0.9595753312498573
  - 0.9577244165648268
  train_matthews_corrcoef_weighted_oob:
  - 0.9310149556684248
  - 0.9351547021853212
  - 0.9314436628983246
  - 0.9287382863474807
  - 0.9398891472065932
  train_ndgc:
  - 0.9875337659602706
  - 0.9880657555517132
  - 0.9881802327166848
  - 0.9893023116977235
  - 0.9899932164652375
  train_ndgc_oob:
  - 0.9807335559717736
  - 0.9812275223862579
  - 0.9776705013729571
  - 0.9824046632873354
  - 0.981891824670799
  train_neg_coverage_error:
  - -1.0455635491606714
  - -1.0435835351089588
  - -1.038369304556355
  - -1.038647342995169
  - -1.0433734939759036
  train_neg_coverage_error_oob:
  - -1.0887290167865706
  - -1.0968523002421307
  - -1.1079136690647482
  - -1.0990338164251208
  - -1.0963855421686748
  train_neg_hamming_loss_macro:
  - -0.009592326139088728
  - -0.011501210653753027
  - -0.01199040767386091
  - -0.010869565217391302
  - -0.01144578313253012
  train_neg_hamming_loss_macro_oob:
  - -0.020383693045563547
  - -0.01937046004842615
  - -0.020383693045563547
  - -0.02113526570048309
  - -0.017469879518072287
  train_neg_hamming_loss_micro:
  - -0.009592326139088728
  - -0.011501210653753027
  - -0.011990407673860911
  - -0.010869565217391304
  - -0.01144578313253012
  train_neg_hamming_loss_micro_oob:
  - -0.02038369304556355
  - -0.01937046004842615
  - -0.02038369304556355
  - -0.021135265700483092
  - -0.01746987951807229
  train_neg_hamming_loss_samples:
  - -0.009592326139088728
  - -0.011501210653753027
  - -0.011990407673860911
  - -0.010869565217391304
  - -0.01144578313253012
  train_neg_hamming_loss_samples_oob:
  - -0.02038369304556355
  - -0.01937046004842615
  - -0.02038369304556355
  - -0.021135265700483092
  - -0.01746987951807229
  train_neg_hamming_loss_weighted:
  - -0.002878842510716963
  - -0.00485422799774708
  - -0.004578675961378869
  - -0.00403924831842452
  - -0.0037841101877677777
  train_neg_hamming_loss_weighted_oob:
  - -0.016717890603984594
  - -0.01423171390248576
  - -0.014886420219433044
  - -0.017861683193490973
  - -0.011478850964718061
  train_neg_label_ranking_loss:
  - -0.013589128697042365
  - -0.011299435028248586
  - -0.011191047162270183
  - -0.00966183574879227
  - -0.011244979919678714
  train_neg_label_ranking_loss_oob:
  - -0.027777777777777776
  - -0.028652138821630344
  - -0.0341726618705036
  - -0.02938808373590982
  - -0.028514056224899595
  train_precision_macro:
  - 0.9904076738609113
  - 0.988498789346247
  - 0.9880095923261392
  - 0.9891304347826086
  - 0.9885542168674699
  train_precision_macro_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819278
  train_precision_micro:
  - 0.9904076738609112
  - 0.988498789346247
  - 0.988009592326139
  - 0.9891304347826086
  - 0.9885542168674699
  train_precision_micro_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819277
  train_precision_samples:
  - 0.9904076738609112
  - 0.988498789346247
  - 0.988009592326139
  - 0.9891304347826086
  - 0.9885542168674699
  train_precision_samples_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819277
  train_precision_weighted:
  - 0.9971211574892831
  - 0.9951457720022528
  - 0.995421324038621
  - 0.9959607516815754
  - 0.9962158898122322
  train_precision_weighted_oob:
  - 0.9832821093960155
  - 0.9857682860975143
  - 0.9851135797805669
  - 0.9821383168065091
  - 0.9885211490352821
  train_recall_macro:
  - 0.9904076738609113
  - 0.988498789346247
  - 0.9880095923261392
  - 0.9891304347826086
  - 0.9885542168674699
  train_recall_macro_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819278
  train_recall_micro:
  - 0.9904076738609112
  - 0.988498789346247
  - 0.988009592326139
  - 0.9891304347826086
  - 0.9885542168674699
  train_recall_micro_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819277
  train_recall_samples:
  - 0.9904076738609112
  - 0.988498789346247
  - 0.988009592326139
  - 0.9891304347826086
  - 0.9885542168674699
  train_recall_samples_oob:
  - 0.9796163069544365
  - 0.9806295399515739
  - 0.9796163069544365
  - 0.9788647342995169
  - 0.9825301204819277
  train_recall_weighted:
  - 0.9971211574892831
  - 0.9951457720022528
  - 0.995421324038621
  - 0.9959607516815754
  - 0.9962158898122322
  train_recall_weighted_oob:
  - 0.9832821093960155
  - 0.9857682860975143
  - 0.9851135797805669
  - 0.9821383168065091
  - 0.9885211490352821
  train_roc_auc_macro:
  - 0.9999871067560598
  - 0.9999332512453998
  - 0.9999379430358335
  - 0.999937343054849
  - 0.9999356209360716
  train_roc_auc_macro_oob:
  - 0.9972542071130229
  - 0.9972119724329661
  - 0.9969895250522661
  - 0.9967304990783707
  - 0.9933669333715889
  train_roc_auc_micro:
  - 0.9994554115846376
  - 0.9994465965688987
  - 0.9994248381999155
  - 0.9994531231883498
  - 0.99940382207743
  train_roc_auc_micro_oob:
  - 0.989547724098133
  - 0.9885144515966174
  - 0.9858215928351273
  - 0.9871706178355273
  - 0.9879437438819645
  train_roc_auc_samples:
  - 0.9864108713029576
  - 0.9887005649717514
  - 0.9888089528377297
  - 0.9903381642512077
  - 0.9887550200803212
  train_roc_auc_samples_oob:
  - 0.9722222222222223
  - 0.9713478611783697
  - 0.9658273381294964
  - 0.9706119162640903
  - 0.9714859437751004
  train_roc_auc_weighted:
  - 0.9999827679794595
  - 0.999926926724175
  - 0.9999388789954212
  - 0.9999381373544053
  - 0.9999397694676373
  train_roc_auc_weighted_oob:
  - 0.9991067700200938
  - 0.9978570039401897
  - 0.9972585903452968
  - 0.9971468012317294
  - 0.9969128011376587
start: 2023-12-21 18:36:21.257440
wrapper: null
