active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZEcAAmJmZmZnZvwAzMzMzMwPAgGZmZmZmHkAAmJmZmZnZvw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 10:30:57.760063
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__3
  params: {}
hash: b52ed1a7c69a0b0e90ab7495bc3f590be6875c8e38b9f64c522424dfd7f85c6b
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b52ed1a_20231222T103004393804_embedding_proba_weak__3_PlantGO.yml
results:
  fit_time:
  - 23.201408624649048
  - 23.431873559951782
  - 23.4221088886261
  - 25.163657665252686
  - 26.19756245613098
  score_time:
  - 5.772500276565552
  - 5.295588254928589
  - 5.628244876861572
  - 5.6529152393341064
  - 5.727983236312866
  test_average_precision_macro:
  - 0.7261510698772983
  - 0.7597492655997526
  - 0.6928164207024471
  - 0.787904112999291
  - 0.7458720153657432
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.817353449161224
  - 0.7990661150745242
  - 0.7543552777984442
  - 0.822537380380448
  - 0.8103017970555564
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8577619047619048
  - 0.8844509232264334
  - 0.8606924220560584
  - 0.8817798041202296
  - 0.8745181405895691
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8334195365732271
  - 0.8295169933315774
  - 0.7441897105987713
  - 0.8496502286655476
  - 0.8270460293552065
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9241666666666667
  - 0.9226190476190476
  - 0.9179292929292929
  - 0.9179964539007094
  - 0.9179421768707483
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9241666666666667
  - 0.9226190476190477
  - 0.9179292929292929
  - 0.9179964539007093
  - 0.9179421768707483
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9241666666666666
  - 0.9226190476190477
  - 0.9179292929292929
  - 0.9179964539007092
  - 0.9179421768707484
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.873909952606635
  - 0.8666762479639741
  - 0.8525733525733523
  - 0.8596504559270516
  - 0.8547490086081825
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.864356907753525
  - 0.862568014404911
  - 0.8558781167015171
  - 0.8549608717802233
  - 0.8555231284825745
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8590240123934935
  - 0.856353591160221
  - 0.8483080513418904
  - 0.8484227775501844
  - 0.8483300589390963
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8613186813186815
  - 0.8594976452119307
  - 0.8501276501276499
  - 0.8512508767827915
  - 0.8506391567616055
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7803665934159776
  - 0.7710919083155168
  - 0.7514404384462319
  - 0.7594586221285429
  - 0.7534161513971868
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.857761904761905
  - 0.8844509232264337
  - 0.8606924220560584
  - 0.8817798041202297
  - 0.8745181405895691
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07444302085095543
  - 0.09173031587953424
  - 0.06289723830371154
  - 0.07242133718444459
  - 0.06542755413476292
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3554200148697477
  - 0.36610098695766846
  - 0.2557478422256395
  - 0.3295048085692216
  - 0.27986317789189724
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14954545454545454
  - 0.18266808765036704
  - 0.0878862252006867
  - 0.13434835443626272
  - 0.11038961038961038
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.20657387373970723
  - 0.216464808286138
  - 0.14716574266410096
  - 0.1923822124324925
  - 0.1621612830111041
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8942806110339024
  - 0.9145602924624517
  - 0.896755458990292
  - 0.9135615144707023
  - 0.9068250548451042
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.565
  - -1.530612244897959
  - -1.5555555555555556
  - -1.6063829787234043
  - -1.5459183673469388
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07583333333333334
  - -0.0773809523809524
  - -0.08207070707070707
  - -0.0820035460992908
  - -0.08205782312925171
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07583333333333334
  - -0.07738095238095238
  - -0.08207070707070707
  - -0.08200354609929078
  - -0.0820578231292517
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07583333333333334
  - -0.07738095238095238
  - -0.08207070707070709
  - -0.08200354609929078
  - -0.0820578231292517
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1260900473933649
  - -0.1333237520360257
  - -0.14742664742664743
  - -0.14034954407294833
  - -0.1452509913918174
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04456818181818182
  - -0.03777829313543599
  - -0.043162262354181545
  - -0.03915574181531629
  - -0.04025974025974026
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9241666666666667
  - 0.9226190476190476
  - 0.9179292929292929
  - 0.9179964539007094
  - 0.9179421768707483
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9241666666666667
  - 0.9226190476190477
  - 0.9179292929292929
  - 0.9179964539007093
  - 0.9179421768707483
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9241666666666666
  - 0.9226190476190477
  - 0.9179292929292929
  - 0.9179964539007092
  - 0.9179421768707484
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.873909952606635
  - 0.8666762479639741
  - 0.8525733525733523
  - 0.8596504559270516
  - 0.8547490086081825
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9241666666666667
  - 0.9226190476190476
  - 0.9179292929292929
  - 0.9179964539007094
  - 0.9179421768707483
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9241666666666667
  - 0.9226190476190477
  - 0.9179292929292929
  - 0.9179964539007093
  - 0.9179421768707483
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9241666666666666
  - 0.9226190476190477
  - 0.9179292929292929
  - 0.9179964539007092
  - 0.9179421768707484
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.873909952606635
  - 0.8666762479639741
  - 0.8525733525733523
  - 0.8596504559270516
  - 0.8547490086081825
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9614284943017656
  - 0.9639805090064285
  - 0.9646506537244498
  - 0.97091829734558
  - 0.9622201239254943
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9668766062107175
  - 0.9674741608447632
  - 0.9666018115464099
  - 0.9696934785644463
  - 0.9716480981779785
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9554318181818182
  - 0.9622217068645639
  - 0.9568377376458184
  - 0.9608442581846837
  - 0.9597402597402598
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9665416580197881
  - 0.9658495241591813
  - 0.9595771551654879
  - 0.9714132880245786
  - 0.9667007260633488
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8668293488889077
  - 0.8647511636804112
  - 0.8935978637659693
  - 0.8506787255591944
  - 0.8630144805231698
  train_average_precision_macro_oob:
  - 0.7541868854954347
  - 0.7528566149396766
  - 0.7978968474921704
  - 0.743261665140873
  - 0.7758002863998498
  train_average_precision_micro:
  - 0.891550410122845
  - 0.890752748958327
  - 0.90612496543463
  - 0.8782379999216267
  - 0.9083458188781607
  train_average_precision_micro_oob:
  - 0.8272451368724076
  - 0.8236442110282983
  - 0.8421000964547585
  - 0.8104379538912319
  - 0.8536633042181188
  train_average_precision_samples:
  - 0.9280246460195045
  - 0.9193247325280574
  - 0.9269474969474969
  - 0.918246433594535
  - 0.932555967050852
  train_average_precision_samples_oob:
  - 0.884431999020688
  - 0.87609567542432
  - 0.8942130092130092
  - 0.8772503516174401
  - 0.9015098002310278
  train_average_precision_weighted:
  - 0.9077776840812875
  - 0.9043796032017883
  - 0.9196678646033041
  - 0.8919817604703372
  - 0.9109270021759144
  train_average_precision_weighted_oob:
  - 0.8516818312158846
  - 0.8357978894657313
  - 0.8566732301303693
  - 0.8322627979442624
  - 0.8624288805073975
  train_f1_macro:
  - 0.9281276778063411
  - 0.9280690537084398
  - 0.9261752136752136
  - 0.9285864978902953
  - 0.9307331628303496
  train_f1_macro_oob:
  - 0.9182733504712939
  - 0.9205029838022165
  - 0.9190170940170939
  - 0.9205696202531645
  - 0.9208226768968456
  train_f1_micro:
  - 0.9281276778063411
  - 0.92806905370844
  - 0.9261752136752137
  - 0.9285864978902953
  - 0.9307331628303496
  train_f1_micro_oob:
  - 0.9182733504712939
  - 0.9205029838022165
  - 0.919017094017094
  - 0.9205696202531646
  - 0.9208226768968457
  train_f1_samples:
  - 0.9281276778063411
  - 0.92806905370844
  - 0.9261752136752136
  - 0.9285864978902955
  - 0.9307331628303495
  train_f1_samples_oob:
  - 0.9182733504712938
  - 0.9205029838022164
  - 0.919017094017094
  - 0.9205696202531646
  - 0.9208226768968456
  train_f1_weighted:
  - 0.8821227110466747
  - 0.8821008316576657
  - 0.8742664239113942
  - 0.8829585798816567
  - 0.8852256336286833
  train_f1_weighted_oob:
  - 0.8590260602590188
  - 0.8627400355990792
  - 0.8553345471096951
  - 0.862730881581904
  - 0.862684997757603
  train_jaccard_macro:
  - 0.8701756727160874
  - 0.8703321234051064
  - 0.8679662361431425
  - 0.871114439435836
  - 0.8744565644254013
  train_jaccard_macro_oob:
  - 0.8555291770138633
  - 0.8589972005481865
  - 0.8575195060647665
  - 0.8591038845243707
  - 0.8595561232027867
  train_jaccard_micro:
  - 0.8658938742879984
  - 0.8657918282135401
  - 0.8625012436573475
  - 0.8666929211381313
  - 0.8704405022922065
  train_jaccard_micro_oob:
  - 0.8488959302901278
  - 0.8527147087857848
  - 0.850168017394742
  - 0.8528290823805336
  - 0.8532635528784438
  train_jaccard_samples:
  - 0.8694143902370124
  - 0.8689581518226019
  - 0.8653592561284866
  - 0.8698789817777159
  - 0.8737416036648773
  train_jaccard_samples_oob:
  - 0.8513065340828836
  - 0.8550181276523988
  - 0.8523696816004508
  - 0.8551064125747669
  - 0.8556926449509569
  train_jaccard_weighted:
  - 0.7927243651640205
  - 0.7930598783642915
  - 0.782342376760625
  - 0.7943061585421485
  - 0.7980539634963992
  train_jaccard_weighted_oob:
  - 0.7586975078298499
  - 0.7643999607010569
  - 0.7553692564906569
  - 0.7643645890549777
  - 0.7645996911649536
  train_label_ranking_average_precision_score:
  - 0.9280246460195049
  - 0.9193247325280574
  - 0.926947496947497
  - 0.9182464335945353
  - 0.9325559670508524
  train_label_ranking_average_precision_score_oob:
  - 0.8844319990206883
  - 0.8760956754243198
  - 0.8942130092130092
  - 0.8772503516174405
  - 0.9015098002310286
  train_matthews_corrcoef_macro:
  - 0.14792173313634333
  - 0.13560013074489896
  - 0.1274729388234154
  - 0.13853103175677267
  - 0.16495373312842754
  train_matthews_corrcoef_macro_oob:
  - 0.07085066209203333
  - 0.08365150287794787
  - 0.07805006468074321
  - 0.08668397611087862
  - 0.09924258021628547
  train_matthews_corrcoef_micro:
  - 0.434607037691639
  - 0.42780334317421337
  - 0.4100014664382974
  - 0.4282051798925091
  - 0.4615413516561177
  train_matthews_corrcoef_micro_oob:
  - 0.2956151514230612
  - 0.322936644511467
  - 0.3065648028410401
  - 0.3152878100783355
  - 0.33079783094801
  train_matthews_corrcoef_samples:
  - 0.23237494671049108
  - 0.21803036397611877
  - 0.1963377836081646
  - 0.2217777440116556
  - 0.2483713495734014
  train_matthews_corrcoef_samples_oob:
  - 0.11537931742078707
  - 0.12616235706362322
  - 0.11452969626438028
  - 0.12451093210586883
  - 0.13371873930031236
  train_matthews_corrcoef_weighted:
  - 0.3406725885673592
  - 0.31877883948859786
  - 0.29333568417569006
  - 0.32083240290843174
  - 0.36872735252237143
  train_matthews_corrcoef_weighted_oob:
  - 0.18252988569792625
  - 0.20707669711162197
  - 0.18137055640291078
  - 0.20960922520795158
  - 0.2333482773130721
  train_ndgc:
  - 0.9470826032889554
  - 0.9399666566267031
  - 0.9460799825091006
  - 0.939581760160896
  - 0.9508111993693538
  train_ndgc_oob:
  - 0.9147836857582419
  - 0.9075201802834427
  - 0.9219433143001928
  - 0.909239736083383
  - 0.9275312204438355
  train_neg_coverage_error:
  - -1.3778920308483291
  - -1.3925831202046035
  - -1.3243589743589743
  - -1.3620253164556961
  - -1.3363171355498722
  train_neg_coverage_error_oob:
  - -1.5604113110539846
  - -1.5869565217391304
  - -1.4692307692307693
  - -1.5177215189873419
  - -1.4603580562659846
  train_neg_hamming_loss_macro:
  - -0.07187232219365895
  - -0.07193094629156009
  - -0.07382478632478633
  - -0.07141350210970464
  - -0.06926683716965047
  train_neg_hamming_loss_macro_oob:
  - -0.08172664952870608
  - -0.07949701619778345
  - -0.08098290598290599
  - -0.07943037974683544
  - -0.0791773231031543
  train_neg_hamming_loss_micro:
  - -0.07187232219365895
  - -0.0719309462915601
  - -0.07382478632478633
  - -0.07141350210970464
  - -0.06926683716965047
  train_neg_hamming_loss_micro_oob:
  - -0.08172664952870608
  - -0.07949701619778346
  - -0.08098290598290599
  - -0.07943037974683544
  - -0.0791773231031543
  train_neg_hamming_loss_samples:
  - -0.07187232219365895
  - -0.0719309462915601
  - -0.07382478632478633
  - -0.07141350210970465
  - -0.06926683716965047
  train_neg_hamming_loss_samples_oob:
  - -0.08172664952870609
  - -0.07949701619778347
  - -0.08098290598290599
  - -0.07943037974683544
  - -0.07917732310315431
  train_neg_hamming_loss_weighted:
  - -0.11787728895332546
  - -0.11789916834233434
  - -0.1257335760886057
  - -0.1170414201183432
  - -0.1147743663713167
  train_neg_hamming_loss_weighted_oob:
  - -0.14097393974098124
  - -0.13725996440092095
  - -0.14466545289030497
  - -0.13726911841809603
  - -0.13731500224239707
  train_neg_label_ranking_loss:
  - -0.024528489695584813
  - -0.027320304494217542
  - -0.020726064059397396
  - -0.025047734731279036
  - -0.020851094060812727
  train_neg_label_ranking_loss_oob:
  - -0.03988795409103892
  - -0.04469094181370396
  - -0.03266252266252267
  - -0.03842027873673443
  - -0.03178459789712987
  train_precision_macro:
  - 0.9281276778063411
  - 0.9280690537084398
  - 0.9261752136752136
  - 0.9285864978902953
  - 0.9307331628303496
  train_precision_macro_oob:
  - 0.9182733504712939
  - 0.9205029838022165
  - 0.9190170940170939
  - 0.9205696202531645
  - 0.9208226768968456
  train_precision_micro:
  - 0.9281276778063411
  - 0.92806905370844
  - 0.9261752136752137
  - 0.9285864978902953
  - 0.9307331628303496
  train_precision_micro_oob:
  - 0.9182733504712939
  - 0.9205029838022165
  - 0.919017094017094
  - 0.9205696202531646
  - 0.9208226768968457
  train_precision_samples:
  - 0.9281276778063411
  - 0.92806905370844
  - 0.9261752136752136
  - 0.9285864978902955
  - 0.9307331628303495
  train_precision_samples_oob:
  - 0.9182733504712938
  - 0.9205029838022164
  - 0.919017094017094
  - 0.9205696202531646
  - 0.9208226768968456
  train_precision_weighted:
  - 0.8821227110466747
  - 0.8821008316576657
  - 0.8742664239113942
  - 0.8829585798816567
  - 0.8852256336286833
  train_precision_weighted_oob:
  - 0.8590260602590188
  - 0.8627400355990792
  - 0.8553345471096951
  - 0.862730881581904
  - 0.862684997757603
  train_recall_macro:
  - 0.9281276778063411
  - 0.9280690537084398
  - 0.9261752136752136
  - 0.9285864978902953
  - 0.9307331628303496
  train_recall_macro_oob:
  - 0.9182733504712939
  - 0.9205029838022165
  - 0.9190170940170939
  - 0.9205696202531645
  - 0.9208226768968456
  train_recall_micro:
  - 0.9281276778063411
  - 0.92806905370844
  - 0.9261752136752137
  - 0.9285864978902953
  - 0.9307331628303496
  train_recall_micro_oob:
  - 0.9182733504712939
  - 0.9205029838022165
  - 0.919017094017094
  - 0.9205696202531646
  - 0.9208226768968457
  train_recall_samples:
  - 0.9281276778063411
  - 0.92806905370844
  - 0.9261752136752136
  - 0.9285864978902955
  - 0.9307331628303495
  train_recall_samples_oob:
  - 0.9182733504712938
  - 0.9205029838022164
  - 0.919017094017094
  - 0.9205696202531646
  - 0.9208226768968456
  train_recall_weighted:
  - 0.8821227110466747
  - 0.8821008316576657
  - 0.8742664239113942
  - 0.8829585798816567
  - 0.8852256336286833
  train_recall_weighted_oob:
  - 0.8590260602590188
  - 0.8627400355990792
  - 0.8553345471096951
  - 0.862730881581904
  - 0.862684997757603
  train_roc_auc_macro:
  - 0.9822254821773578
  - 0.9840347508280779
  - 0.9856301438439018
  - 0.9792935766637912
  - 0.9805303459159637
  train_roc_auc_macro_oob:
  - 0.968411726449575
  - 0.971973850759638
  - 0.9746597653382799
  - 0.9677416695979085
  - 0.966048592651355
  train_roc_auc_micro:
  - 0.9830704895379649
  - 0.981543550910382
  - 0.9854853426080672
  - 0.9809724425501006
  - 0.9839227443755065
  train_roc_auc_micro_oob:
  - 0.9698136579060749
  - 0.968892703428247
  - 0.9744810932326177
  - 0.9683345953409648
  - 0.9739867864634782
  train_roc_auc_samples:
  - 0.9754715103044151
  - 0.9726796955057825
  - 0.9792739359406026
  - 0.9749522652687208
  - 0.9791489059391872
  train_roc_auc_samples_oob:
  - 0.960112045908961
  - 0.9553090581862961
  - 0.9673374773374772
  - 0.9615797212632656
  - 0.96821540210287
  train_roc_auc_weighted:
  - 0.9811503165477314
  - 0.9827130716506124
  - 0.9838932033573785
  - 0.9792906669034593
  - 0.9824232327341033
  train_roc_auc_weighted_oob:
  - 0.971028041239445
  - 0.9726511318232401
  - 0.9748520108496291
  - 0.969791883808321
  - 0.9725543823349792
start: 2023-12-22 10:30:04.393804
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
