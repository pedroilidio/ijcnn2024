active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzC0BAMzMzMzMLQIBmZmZmZvY/YGZmZmZmFsDAzMzMzMwEwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZGcBoZmZmZmYSQJiZmZmZmRnAaGZmZmZmGkCgmZmZmZn5Pw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/YGZmZmZm9r9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            4MzMzMzM/D+QmZmZmZkJwMCZmZmZmek/kJmZmZmZAcBwZmZmZmYGQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AM3MzMzM/D8AmJmZmZnJvwDNzMzMzPw/gJmZmZmZCcAAmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D+YmZmZmZkJwKCZmZmZmek/oJmZmZmZ6T+AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzKcCQmZmZmZkywODMzMzMzCJA4MzMzMzMJEDgzMzMzMwmQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 22:29:41.906886
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 795190d9d20adab08c00263281ffa79be0b670b104a1836f0a571139eee28ee1
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/795190d_20231212T222343776664_embedding_proba__4_yeast.yml
results:
  fit_time:
  - 253.34800601005554
  - 267.2774770259857
  - 271.5788881778717
  - 269.45460867881775
  - 274.809207201004
  score_time:
  - 23.69950246810913
  - 16.300695657730103
  - 16.237687349319458
  - 16.127447366714478
  - 15.424736022949219
  test_average_precision_macro:
  - 0.4991542799578353
  - 0.4865402827637772
  - 0.5168341482924598
  - 0.5040892552523629
  - 0.5071634021330688
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6958520336230335
  - 0.6682747455001842
  - 0.7160491299744355
  - 0.7100825697470753
  - 0.7108571042418919
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7492389817332813
  - 0.7290711409998546
  - 0.756759878477404
  - 0.7750374012083087
  - 0.7691114754642262
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6534581763276782
  - 0.6343993642466365
  - 0.674208912741693
  - 0.6698481043054741
  - 0.6725589458539427
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7968029953917052
  - 0.7918326693227092
  - 0.7944544906570222
  - 0.8032316520688614
  - 0.8081113801452785
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7968029953917051
  - 0.7918326693227091
  - 0.7944544906570223
  - 0.8032316520688614
  - 0.8081113801452785
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7968029953917052
  - 0.7918326693227091
  - 0.7944544906570222
  - 0.8032316520688614
  - 0.8081113801452785
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7434682942996024
  - 0.7290719875748594
  - 0.7460152310383862
  - 0.7537322270611049
  - 0.7592218459423877
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6727390117766446
  - 0.6674022654726688
  - 0.6691666828372405
  - 0.6805633031835719
  - 0.6867737166708683
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6622381807301018
  - 0.6553998351195384
  - 0.659
  - 0.6711671924290221
  - 0.6780091416962926
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6926354748762927
  - 0.6857278110548244
  - 0.6892415549123098
  - 0.6989286376761806
  - 0.7048484544862973
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5962512666122004
  - 0.5795051176208581
  - 0.5994450312682089
  - 0.6079800165599869
  - 0.6154200930666684
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7492389817332809
  - 0.7290711409998543
  - 0.7567598784774039
  - 0.7750374012083083
  - 0.7691114754642262
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.24851586620534874
  - 0.2294637637421691
  - 0.23748142479136836
  - 0.2634465638329534
  - 0.26862318518744516
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5036434993910833
  - 0.4899010586085345
  - 0.5065926541411709
  - 0.5255976855161896
  - 0.5408825433877567
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5023561682171371
  - 0.4856448486509903
  - 0.5083144987503411
  - 0.5351008785285648
  - 0.5440803339025609
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2771478049908334
  - 0.23142360447847382
  - 0.25453628259418615
  - 0.2900830446152891
  - 0.2869369586440457
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8442265872342241
  - 0.8283079623530162
  - 0.8519055644426846
  - 0.8664422998607423
  - 0.8611885060256856
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.076612903225806
  - -7.243027888446215
  - -7.318565400843882
  - -7.245243128964059
  - -7.271186440677966
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20319700460829496
  - -0.20816733067729085
  - -0.2055455093429777
  - -0.19676834793113865
  - -0.19188861985472153
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20319700460829493
  - -0.20816733067729085
  - -0.2055455093429777
  - -0.19676834793113862
  - -0.19188861985472155
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2031970046082949
  - -0.20816733067729082
  - -0.20554550934297766
  - -0.1967683479311386
  - -0.19188861985472155
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2565317057003977
  - -0.2709280124251407
  - -0.25398476896161365
  - -0.24626777293889518
  - -0.24077815405761224
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1755862644939546
  - -0.18809352681720354
  - -0.1777328646338592
  - -0.1628780968519718
  - -0.16520267674550362
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7968029953917052
  - 0.7918326693227092
  - 0.7944544906570222
  - 0.8032316520688614
  - 0.8081113801452785
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7968029953917051
  - 0.7918326693227091
  - 0.7944544906570223
  - 0.8032316520688614
  - 0.8081113801452785
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7968029953917052
  - 0.7918326693227091
  - 0.7944544906570222
  - 0.8032316520688614
  - 0.8081113801452785
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7434682942996024
  - 0.7290719875748594
  - 0.7460152310383862
  - 0.7537322270611049
  - 0.7592218459423877
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7968029953917052
  - 0.7918326693227092
  - 0.7944544906570222
  - 0.8032316520688614
  - 0.8081113801452785
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7968029953917051
  - 0.7918326693227091
  - 0.7944544906570223
  - 0.8032316520688614
  - 0.8081113801452785
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7968029953917052
  - 0.7918326693227091
  - 0.7944544906570222
  - 0.8032316520688614
  - 0.8081113801452785
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7434682942996024
  - 0.7290719875748594
  - 0.7460152310383862
  - 0.7537322270611049
  - 0.7592218459423877
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6896516688704218
  - 0.6984458216688028
  - 0.712503898092127
  - 0.7064958438777331
  - 0.7009920326694508
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8365928651303967
  - 0.8287646451729077
  - 0.8388339910437919
  - 0.8373912078443889
  - 0.839393202945
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8244137355060454
  - 0.8119064731827965
  - 0.8222671353661407
  - 0.8371219031480281
  - 0.8347973232544964
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7061892057985665
  - 0.6792549024074659
  - 0.7075420176882877
  - 0.6992907737758639
  - 0.695906524127043
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9953059596580498
  - 0.9955322537964163
  - 0.9952920377593459
  - 0.9957581589887357
  - 0.9959445366823279
  train_average_precision_macro_oob:
  - 0.947900923113769
  - 0.9490084031478679
  - 0.9526813680049194
  - 0.9572114884438434
  - 0.9534544088919884
  train_average_precision_micro:
  - 0.9966544304070342
  - 0.9965661957747075
  - 0.9969132169316692
  - 0.9967752473017577
  - 0.9969288314135725
  train_average_precision_micro_oob:
  - 0.9845407097511476
  - 0.9850410260578052
  - 0.9862004691878339
  - 0.9856410602777989
  - 0.9858761896563454
  train_average_precision_samples:
  - 0.9950865796170976
  - 0.9949889278165573
  - 0.9961780887084634
  - 0.9956567743578602
  - 0.9958055038210657
  train_average_precision_samples_oob:
  - 0.9814874675869848
  - 0.9818238355766797
  - 0.9858004438994041
  - 0.983704707725887
  - 0.9832069152425988
  train_average_precision_weighted:
  - 0.9970122529961728
  - 0.9969835424468322
  - 0.9970744484870208
  - 0.9970321162711371
  - 0.9971921536320206
  train_average_precision_weighted_oob:
  - 0.9831051943187169
  - 0.9834596250022126
  - 0.9841168012790675
  - 0.9845001782229589
  - 0.9845495954106162
  train_f1_macro:
  - 0.9772439949431099
  - 0.9772099962700483
  - 0.9771707962649805
  - 0.9778439153439152
  - 0.9782225486595667
  train_f1_macro_oob:
  - 0.9636721945415333
  - 0.9630361805296531
  - 0.9649658113374018
  - 0.9645429159318049
  - 0.9632023503488798
  train_f1_micro:
  - 0.97724399494311
  - 0.9772099962700485
  - 0.9771707962649805
  - 0.9778439153439153
  - 0.9782225486595667
  train_f1_micro_oob:
  - 0.9636721945415334
  - 0.9630361805296531
  - 0.9649658113374017
  - 0.9645429159318049
  - 0.9632023503488799
  train_f1_samples:
  - 0.97724399494311
  - 0.9772099962700485
  - 0.9771707962649806
  - 0.9778439153439155
  - 0.9782225486595666
  train_f1_samples_oob:
  - 0.9636721945415334
  - 0.9630361805296531
  - 0.9649658113374018
  - 0.9645429159318049
  - 0.9632023503488799
  train_f1_weighted:
  - 0.9795810315692369
  - 0.9791491704749895
  - 0.9787549733388634
  - 0.9790076590051484
  - 0.9796454613162934
  train_f1_weighted_oob:
  - 0.966114429569051
  - 0.9660594805726153
  - 0.9672826702518543
  - 0.9668575512493441
  - 0.9653646501641115
  train_jaccard_macro:
  - 0.9556762681462463
  - 0.9555929554180925
  - 0.9555157978327621
  - 0.9568162737948318
  - 0.9575185245804276
  train_jaccard_macro_oob:
  - 0.9302558076729278
  - 0.9291017942050752
  - 0.9326675968794419
  - 0.9318906592605574
  - 0.9294213390486638
  train_jaccard_micro:
  - 0.9555006180469716
  - 0.9554356150395682
  - 0.9553606728246414
  - 0.9566483338725331
  - 0.957373396111131
  train_jaccard_micro_oob:
  - 0.92989128484805
  - 0.9287076004460271
  - 0.9323033209021488
  - 0.9315141407331181
  - 0.929016718617172
  train_jaccard_samples:
  - 0.9598947558237337
  - 0.9597352209171883
  - 0.9597215870754765
  - 0.9608247387107323
  - 0.9613142463497825
  train_jaccard_samples_oob:
  - 0.9373071103926744
  - 0.9361781456662186
  - 0.9393823470101894
  - 0.9387480694393129
  - 0.9363583160229321
  train_jaccard_weighted:
  - 0.9601554308335516
  - 0.9593304382108695
  - 0.9585900061225401
  - 0.9590807005614211
  - 0.9603014533186381
  train_jaccard_weighted_oob:
  - 0.9349064563611015
  - 0.9348497917119226
  - 0.9371219977379347
  - 0.936325821151274
  - 0.9335960124756004
  train_label_ranking_average_precision_score:
  - 0.9950865796170976
  - 0.9949889278165578
  - 0.9961780887084634
  - 0.9956567743578599
  - 0.9958055038210658
  train_label_ranking_average_precision_score_oob:
  - 0.9814874675869846
  - 0.9818238355766802
  - 0.9858004438994044
  - 0.9837047077258871
  - 0.9832069152425993
  train_matthews_corrcoef_macro:
  - 0.8463412012298928
  - 0.8505857830959511
  - 0.8504943904068322
  - 0.8562394931257348
  - 0.8584239583703102
  train_matthews_corrcoef_macro_oob:
  - 0.798753032784483
  - 0.7992728801417506
  - 0.8036483379607894
  - 0.8072170259658202
  - 0.8037465876207627
  train_matthews_corrcoef_micro:
  - 0.9461040871340145
  - 0.9461220562848989
  - 0.945564733548585
  - 0.9471660711731301
  - 0.9480679280204646
  train_matthews_corrcoef_micro_oob:
  - 0.9136966657423025
  - 0.9123225605013207
  - 0.9162008002949643
  - 0.9151526652827353
  - 0.9119744568018879
  train_matthews_corrcoef_samples:
  - 0.9500305353643659
  - 0.9496376452563133
  - 0.9495788642583064
  - 0.9511544076136321
  - 0.9514421951361157
  train_matthews_corrcoef_samples_oob:
  - 0.9182841288280346
  - 0.9163921676650271
  - 0.9207422688611349
  - 0.9201221906896613
  - 0.9165308589814651
  train_matthews_corrcoef_weighted:
  - 0.9398842637571497
  - 0.9400945063647614
  - 0.939249694440831
  - 0.9406854413243896
  - 0.9426138824546054
  train_matthews_corrcoef_weighted_oob:
  - 0.9033426766842317
  - 0.9034510175585038
  - 0.9070658067364085
  - 0.9063395843378315
  - 0.9030872347722653
  train_ndgc:
  - 0.9975932721517571
  - 0.9973782621801728
  - 0.9982731249231929
  - 0.997942134619115
  - 0.997845741730331
  train_ndgc_oob:
  - 0.9905153615714609
  - 0.9904373249864658
  - 0.9931532137014605
  - 0.9919713540254721
  - 0.9913355818807006
  train_neg_coverage_error:
  - -4.337324310255076
  - -4.345691906005222
  - -4.277920741121976
  - -4.276234567901234
  - -4.266323907455013
  train_neg_coverage_error_oob:
  - -4.580947423217075
  - -4.558746736292428
  - -4.468347915594442
  - -4.487139917695473
  - -4.4817480719794345
  train_neg_hamming_loss_macro:
  - -0.022756005056890013
  - -0.022790003729951512
  - -0.022829203735019482
  - -0.022156084656084655
  - -0.02177745134043335
  train_neg_hamming_loss_macro_oob:
  - -0.036327805458466575
  - -0.03696381947034689
  - -0.035034188662598345
  - -0.03545708406819518
  - -0.03679764965112009
  train_neg_hamming_loss_micro:
  - -0.022756005056890013
  - -0.022790003729951512
  - -0.022829203735019486
  - -0.022156084656084655
  - -0.021777451340433344
  train_neg_hamming_loss_micro_oob:
  - -0.036327805458466575
  - -0.03696381947034689
  - -0.03503418866259834
  - -0.03545708406819518
  - -0.03679764965112009
  train_neg_hamming_loss_samples:
  - -0.02275600505689001
  - -0.02279000372995151
  - -0.02282920373501948
  - -0.022156084656084655
  - -0.021777451340433348
  train_neg_hamming_loss_samples_oob:
  - -0.03632780545846657
  - -0.03696381947034688
  - -0.03503418866259833
  - -0.03545708406819517
  - -0.03679764965112008
  train_neg_hamming_loss_weighted:
  - -0.020418968430763105
  - -0.020850829525010654
  - -0.0212450266611365
  - -0.020992340994851443
  - -0.020354538683706746
  train_neg_hamming_loss_weighted_oob:
  - -0.03388557043094891
  - -0.03394051942738462
  - -0.032717329748145674
  - -0.03314244875065588
  - -0.034635349835888445
  train_neg_label_ranking_loss:
  - -0.0024393916033315153
  - -0.0024553022716021595
  - -0.002164351794893667
  - -0.0022630659480306742
  - -0.0018402091033380052
  train_neg_label_ranking_loss_oob:
  - -0.011219227154937722
  - -0.010822890276452382
  - -0.008963694973914811
  - -0.010151754742252979
  - -0.009897599340309586
  train_precision_macro:
  - 0.9772439949431099
  - 0.9772099962700483
  - 0.9771707962649805
  - 0.9778439153439152
  - 0.9782225486595667
  train_precision_macro_oob:
  - 0.9636721945415333
  - 0.9630361805296531
  - 0.9649658113374018
  - 0.9645429159318049
  - 0.9632023503488798
  train_precision_micro:
  - 0.97724399494311
  - 0.9772099962700485
  - 0.9771707962649805
  - 0.9778439153439153
  - 0.9782225486595667
  train_precision_micro_oob:
  - 0.9636721945415334
  - 0.9630361805296531
  - 0.9649658113374017
  - 0.9645429159318049
  - 0.9632023503488799
  train_precision_samples:
  - 0.97724399494311
  - 0.9772099962700485
  - 0.9771707962649806
  - 0.9778439153439155
  - 0.9782225486595666
  train_precision_samples_oob:
  - 0.9636721945415334
  - 0.9630361805296531
  - 0.9649658113374018
  - 0.9645429159318049
  - 0.9632023503488799
  train_precision_weighted:
  - 0.9795810315692369
  - 0.9791491704749895
  - 0.9787549733388634
  - 0.9790076590051484
  - 0.9796454613162934
  train_precision_weighted_oob:
  - 0.966114429569051
  - 0.9660594805726153
  - 0.9672826702518543
  - 0.9668575512493441
  - 0.9653646501641115
  train_recall_macro:
  - 0.9772439949431099
  - 0.9772099962700483
  - 0.9771707962649805
  - 0.9778439153439152
  - 0.9782225486595667
  train_recall_macro_oob:
  - 0.9636721945415333
  - 0.9630361805296531
  - 0.9649658113374018
  - 0.9645429159318049
  - 0.9632023503488798
  train_recall_micro:
  - 0.97724399494311
  - 0.9772099962700485
  - 0.9771707962649805
  - 0.9778439153439153
  - 0.9782225486595667
  train_recall_micro_oob:
  - 0.9636721945415334
  - 0.9630361805296531
  - 0.9649658113374017
  - 0.9645429159318049
  - 0.9632023503488799
  train_recall_samples:
  - 0.97724399494311
  - 0.9772099962700485
  - 0.9771707962649806
  - 0.9778439153439155
  - 0.9782225486595666
  train_recall_samples_oob:
  - 0.9636721945415334
  - 0.9630361805296531
  - 0.9649658113374018
  - 0.9645429159318049
  - 0.9632023503488799
  train_recall_weighted:
  - 0.9795810315692369
  - 0.9791491704749895
  - 0.9787549733388634
  - 0.9790076590051484
  - 0.9796454613162934
  train_recall_weighted_oob:
  - 0.966114429569051
  - 0.9660594805726153
  - 0.9672826702518543
  - 0.9668575512493441
  - 0.9653646501641115
  train_roc_auc_macro:
  - 0.9986890197071135
  - 0.9986563791689675
  - 0.9987444798135409
  - 0.9987005657666783
  - 0.9987585915333355
  train_roc_auc_macro_oob:
  - 0.9888937628549982
  - 0.9887400473839328
  - 0.9899923845226073
  - 0.9898837324968458
  - 0.9892980261596961
  train_roc_auc_micro:
  - 0.9985061592571841
  - 0.9984606938278757
  - 0.9986465436889467
  - 0.9985900820419532
  - 0.9986556822849637
  train_roc_auc_micro_oob:
  - 0.991774078793478
  - 0.9920025765915693
  - 0.9927345200894784
  - 0.9924802150514004
  - 0.9926547777131601
  train_roc_auc_samples:
  - 0.9975606083966684
  - 0.9975446977283979
  - 0.9978356482051064
  - 0.9977369340519693
  - 0.998159790896662
  train_roc_auc_samples_oob:
  - 0.9887807728450623
  - 0.9891771097235476
  - 0.9910363050260852
  - 0.9898482452577471
  - 0.9901024006596905
  train_roc_auc_weighted:
  - 0.9987018802088609
  - 0.9986455024239499
  - 0.9987620056203369
  - 0.9986651548191534
  - 0.9987086677118276
  train_roc_auc_weighted_oob:
  - 0.9916522318314007
  - 0.9918253810283498
  - 0.9927847887622613
  - 0.9922127046731454
  - 0.9922269375364131
start: 2023-12-12 22:23:43.776664
wrapper: null
