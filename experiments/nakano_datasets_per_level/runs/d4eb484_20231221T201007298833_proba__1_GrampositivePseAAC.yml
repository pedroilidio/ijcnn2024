active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwCamZmZmek/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:10:16.157576
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__1
  params: {}
hash: d4eb48482f12ea36a378893cd9a89a59d79672ccba281ef01ae25dc5fdaa3b31
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d4eb484_20231221T201007298833_proba__1_GrampositivePseAAC.yml
results:
  fit_time:
  - 1.6731116771697998
  - 1.6088714599609375
  - 1.61012601852417
  - 1.6084985733032227
  - 1.6799554824829102
  score_time:
  - 1.2348582744598389
  - 1.2263541221618652
  - 1.2371063232421875
  - 1.2265925407409668
  - 1.222486972808838
  test_average_precision_macro:
  - 0.42944137669493165
  - 0.4301133777085029
  - 0.4478965457962244
  - 0.376617684978894
  - 0.43280664146134434
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5496826503528559
  - 0.5443496011317221
  - 0.5446553788715983
  - 0.5168276035284952
  - 0.537273688525115
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7099358974358974
  - 0.7192556634304207
  - 0.7119741100323623
  - 0.7107371794871794
  - 0.6888888888888889
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.537492018717069
  - 0.5419126144817495
  - 0.5253019733841267
  - 0.4933313394941683
  - 0.5185103575026222
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320389
  - 0.75
  - 0.7476190476190476
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320388
  - 0.75
  - 0.7476190476190476
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320388
  - 0.75
  - 0.7476190476190476
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6720695970695971
  - 0.6709397681214063
  - 0.6792382374906646
  - 0.6783882783882783
  - 0.6738544474393531
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6179965844675858
  - 0.622188162313386
  - 0.627009137331869
  - 0.6200145405333509
  - 0.6176403871358
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5969289827255279
  - 0.6
  - 0.6062378167641326
  - 0.6
  - 0.596958174904943
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5974358974358972
  - 0.6
  - 0.6090614886731391
  - 0.6012820512820511
  - 0.5974603174603172
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5134611510617555
  - 0.5112473507464561
  - 0.5198851940648249
  - 0.5198209287136917
  - 0.5150097868204152
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7099358974358976
  - 0.7192556634304207
  - 0.7119741100323626
  - 0.7107371794871796
  - 0.6888888888888889
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.07766041483522279
  - 0.03458692240008599
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.14738648513857913
  - 0.08448147671652198
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.02912621359223301
  - 0.009615384615384616
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.11460114178515012
  - 0.04611589653344799
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7845580638737627
  - 0.7915458234667812
  - 0.7861546113923519
  - 0.784215833861787
  - 0.7679485424326975
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.75
  - -1.6699029126213591
  - -1.7572815533980584
  - -1.7884615384615385
  - -1.838095238095238
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25240384615384615
  - -0.25
  - -0.24514563106796117
  - -0.25
  - -0.2523809523809524
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25240384615384615
  - -0.25
  - -0.24514563106796117
  - -0.25
  - -0.2523809523809524
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25240384615384615
  - -0.25
  - -0.24514563106796117
  - -0.25
  - -0.2523809523809524
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.327930402930403
  - -0.3290602318785937
  - -0.32076176250933536
  - -0.3216117216117216
  - -0.32614555256064687
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24599358974358973
  - -0.22330097087378634
  - -0.24757281553398058
  - -0.2612179487179487
  - -0.2761904761904762
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320389
  - 0.75
  - 0.7476190476190476
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320388
  - 0.75
  - 0.7476190476190476
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320388
  - 0.75
  - 0.7476190476190476
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6720695970695971
  - 0.6709397681214063
  - 0.6792382374906646
  - 0.6783882783882783
  - 0.6738544474393531
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320389
  - 0.75
  - 0.7476190476190476
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320388
  - 0.75
  - 0.7476190476190476
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7475961538461539
  - 0.75
  - 0.7548543689320388
  - 0.75
  - 0.7476190476190476
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6720695970695971
  - 0.6709397681214063
  - 0.6792382374906646
  - 0.6783882783882783
  - 0.6738544474393531
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6750479091531423
  - 0.7244817097580698
  - 0.7154882014761055
  - 0.61653727813371
  - 0.7058043020288423
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7760832950543561
  - 0.7914349451723379
  - 0.7871503496503497
  - 0.7578318787322003
  - 0.7596743179906261
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7540064102564104
  - 0.7766990291262139
  - 0.7524271844660194
  - 0.7387820512820513
  - 0.7238095238095237
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6820492219328125
  - 0.6904538735259256
  - 0.6832828761557722
  - 0.6612665907064839
  - 0.6624950331960421
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8067230985680018
  - 0.7961658234495362
  - 0.7824139714860605
  - 0.7788904526076696
  - 0.7765703691213436
  train_average_precision_macro_oob:
  - 0.7563958388335852
  - 0.7931667705490374
  - 0.7460681632742038
  - 0.6891192823209403
  - 0.7183034367419412
  train_average_precision_micro:
  - 0.8632968492305351
  - 0.8522540029923245
  - 0.839141689302303
  - 0.8510348226319513
  - 0.8533925529734434
  train_average_precision_micro_oob:
  - 0.8445675835403604
  - 0.8310338189241805
  - 0.822193546408357
  - 0.8302566141713799
  - 0.8365680062503624
  train_average_precision_samples:
  - 0.8654618473895582
  - 0.8587740384615384
  - 0.8439503205128205
  - 0.8510040160642569
  - 0.8564814814814814
  train_average_precision_samples_oob:
  - 0.846987951807229
  - 0.8401442307692307
  - 0.8365384615384616
  - 0.8429718875502008
  - 0.8381642512077294
  train_average_precision_weighted:
  - 0.8579629018582368
  - 0.84538331111648
  - 0.834122121923278
  - 0.84344589428117
  - 0.8471846665196215
  train_average_precision_weighted_oob:
  - 0.8462959454424197
  - 0.8372660738625054
  - 0.8243219493618341
  - 0.8224821462764945
  - 0.8349266695085994
  train_f1_macro:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082125
  train_f1_macro_oob:
  - 0.7843373493975903
  - 0.7908653846153847
  - 0.7974759615384617
  - 0.7963855421686747
  - 0.7940821256038647
  train_f1_micro:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082126
  train_f1_micro_oob:
  - 0.7843373493975904
  - 0.7908653846153846
  - 0.7974759615384616
  - 0.7963855421686747
  - 0.7940821256038647
  train_f1_samples:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082126
  train_f1_samples_oob:
  - 0.7843373493975904
  - 0.7908653846153846
  - 0.7974759615384616
  - 0.7963855421686747
  - 0.7940821256038647
  train_f1_weighted:
  - 0.8231106243154436
  - 0.8222298534798534
  - 0.8192525702221406
  - 0.8237793278376665
  - 0.8227041555161668
  train_f1_weighted_oob:
  - 0.7263734363290482
  - 0.7378663003663004
  - 0.7468962272810722
  - 0.7446590188505218
  - 0.7414937615125291
  train_jaccard_macro:
  - 0.7590319957241328
  - 0.7577002876116719
  - 0.7552787277978068
  - 0.7609426721925091
  - 0.7595581624104457
  train_jaccard_macro_oob:
  - 0.6597044622823041
  - 0.6669726552575169
  - 0.6751964347667991
  - 0.6741766377805629
  - 0.6713251934597007
  train_jaccard_micro:
  - 0.7529039070749736
  - 0.751578947368421
  - 0.7488176563321072
  - 0.7547568710359408
  - 0.7533086289041822
  train_jaccard_micro_oob:
  - 0.645193260654113
  - 0.6540755467196819
  - 0.663168415792104
  - 0.6616616616616616
  - 0.658487731597396
  train_jaccard_samples:
  - 0.7751004016064256
  - 0.7737179487179486
  - 0.7701923076923076
  - 0.7763855421686745
  - 0.7752012882447664
  train_jaccard_samples_oob:
  - 0.6555823293172689
  - 0.6663461538461537
  - 0.6762820512820511
  - 0.6748594377510039
  - 0.6711755233494361
  train_jaccard_weighted:
  - 0.7011335714938046
  - 0.7000371315317729
  - 0.6959786366379349
  - 0.7022306263620257
  - 0.7006976836237995
  train_jaccard_weighted_oob:
  - 0.5734817870103459
  - 0.5872285744555428
  - 0.5984276343459075
  - 0.5955313463638652
  - 0.5916368040765195
  train_label_ranking_average_precision_score:
  - 0.8654618473895581
  - 0.8587740384615381
  - 0.8439503205128199
  - 0.8510040160642567
  - 0.8564814814814813
  train_label_ranking_average_precision_score_oob:
  - 0.8469879518072287
  - 0.8401442307692304
  - 0.8365384615384612
  - 0.8429718875502005
  - 0.8381642512077292
  train_matthews_corrcoef_macro:
  - 0.4448438686287201
  - 0.4459684473481921
  - 0.4420268010766861
  - 0.44932771040415287
  - 0.4469574577697487
  train_matthews_corrcoef_macro_oob:
  - 0.20690806949252408
  - 0.19548266512512646
  - 0.23249127672889816
  - 0.2068948286109409
  - 0.20088941982636654
  train_matthews_corrcoef_micro:
  - 0.6086090272651395
  - 0.6068251875431739
  - 0.6003395651523002
  - 0.6123227387732872
  - 0.6094283203936635
  train_matthews_corrcoef_micro_oob:
  - 0.3338015053532212
  - 0.36599930566113986
  - 0.39244730480628226
  - 0.3878726050826553
  - 0.37804707164575285
  train_matthews_corrcoef_samples:
  - 0.44235506088961357
  - 0.44027572244802704
  - 0.4296443529028098
  - 0.44513747182546715
  - 0.4424026583052639
  train_matthews_corrcoef_samples_oob:
  - 0.14355988016672197
  - 0.17206093814709045
  - 0.19508341475571933
  - 0.19175265125105934
  - 0.18255398615746285
  train_matthews_corrcoef_weighted:
  - 0.575787191561952
  - 0.5737481052831317
  - 0.5673633139708489
  - 0.5794605940249018
  - 0.5766356391270983
  train_matthews_corrcoef_weighted_oob:
  - 0.28787266338441253
  - 0.28921089472526246
  - 0.3315882764501545
  - 0.3077718830847349
  - 0.298829151086452
  train_ndgc:
  - 0.8999199423883412
  - 0.8949470169236325
  - 0.8839826458346491
  - 0.8890688278964184
  - 0.8930908004039366
  train_ndgc_oob:
  - 0.8862537060844056
  - 0.880968216286456
  - 0.878371118278838
  - 0.8832205481246168
  - 0.8795478467791592
  train_neg_coverage_error:
  - -1.3542168674698796
  - -1.3725961538461537
  - -1.4182692307692308
  - -1.3879518072289156
  - -1.3792270531400965
  train_neg_coverage_error_oob:
  - -1.4048192771084338
  - -1.4302884615384615
  - -1.4350961538461537
  - -1.4240963855421687
  - -1.434782608695652
  train_neg_hamming_loss_macro:
  - -0.14096385542168674
  - -0.14182692307692307
  - -0.1436298076923077
  - -0.13975903614457832
  - -0.14070048309178745
  train_neg_hamming_loss_macro_oob:
  - -0.21566265060240963
  - -0.20913461538461536
  - -0.20252403846153844
  - -0.2036144578313253
  - -0.20591787439613524
  train_neg_hamming_loss_micro:
  - -0.14096385542168674
  - -0.14182692307692307
  - -0.14362980769230768
  - -0.13975903614457832
  - -0.14070048309178743
  train_neg_hamming_loss_micro_oob:
  - -0.21566265060240963
  - -0.2091346153846154
  - -0.20252403846153846
  - -0.2036144578313253
  - -0.20591787439613526
  train_neg_hamming_loss_samples:
  - -0.14096385542168674
  - -0.14182692307692307
  - -0.14362980769230768
  - -0.13975903614457832
  - -0.14070048309178743
  train_neg_hamming_loss_samples_oob:
  - -0.21566265060240963
  - -0.2091346153846154
  - -0.20252403846153846
  - -0.2036144578313253
  - -0.20591787439613526
  train_neg_hamming_loss_weighted:
  - -0.1768893756845564
  - -0.1777701465201465
  - -0.18074742977785935
  - -0.17622067216233356
  - -0.17729584448383323
  train_neg_hamming_loss_weighted_oob:
  - -0.2736265636709518
  - -0.2621336996336996
  - -0.25310377271892787
  - -0.25534098114947834
  - -0.2585062384874709
  train_neg_label_ranking_loss:
  - -0.11546184738955821
  - -0.12079326923076923
  - -0.13641826923076922
  - -0.12690763052208834
  - -0.12399355877616745
  train_neg_label_ranking_loss_oob:
  - -0.1321285140562249
  - -0.14002403846153846
  - -0.14222756410256407
  - -0.13835341365461845
  - -0.14210950080515294
  train_precision_macro:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082125
  train_precision_macro_oob:
  - 0.7843373493975903
  - 0.7908653846153847
  - 0.7974759615384617
  - 0.7963855421686747
  - 0.7940821256038647
  train_precision_micro:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082126
  train_precision_micro_oob:
  - 0.7843373493975904
  - 0.7908653846153846
  - 0.7974759615384616
  - 0.7963855421686747
  - 0.7940821256038647
  train_precision_samples:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082126
  train_precision_samples_oob:
  - 0.7843373493975904
  - 0.7908653846153846
  - 0.7974759615384616
  - 0.7963855421686747
  - 0.7940821256038647
  train_precision_weighted:
  - 0.8231106243154436
  - 0.8222298534798534
  - 0.8192525702221406
  - 0.8237793278376665
  - 0.8227041555161668
  train_precision_weighted_oob:
  - 0.7263734363290482
  - 0.7378663003663004
  - 0.7468962272810722
  - 0.7446590188505218
  - 0.7414937615125291
  train_recall_macro:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082125
  train_recall_macro_oob:
  - 0.7843373493975903
  - 0.7908653846153847
  - 0.7974759615384617
  - 0.7963855421686747
  - 0.7940821256038647
  train_recall_micro:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082126
  train_recall_micro_oob:
  - 0.7843373493975904
  - 0.7908653846153846
  - 0.7974759615384616
  - 0.7963855421686747
  - 0.7940821256038647
  train_recall_samples:
  - 0.8590361445783132
  - 0.8581730769230769
  - 0.8563701923076923
  - 0.8602409638554217
  - 0.8592995169082126
  train_recall_samples_oob:
  - 0.7843373493975904
  - 0.7908653846153846
  - 0.7974759615384616
  - 0.7963855421686747
  - 0.7940821256038647
  train_recall_weighted:
  - 0.8231106243154436
  - 0.8222298534798534
  - 0.8192525702221406
  - 0.8237793278376665
  - 0.8227041555161668
  train_recall_weighted_oob:
  - 0.7263734363290482
  - 0.7378663003663004
  - 0.7468962272810722
  - 0.7446590188505218
  - 0.7414937615125291
  train_roc_auc_macro:
  - 0.9170136538646698
  - 0.8894966499441924
  - 0.8872210503949344
  - 0.8944646311593516
  - 0.8828701853350668
  train_roc_auc_macro_oob:
  - 0.9093094048029942
  - 0.8839409255099312
  - 0.876530833545373
  - 0.8782914208173944
  - 0.8698889281063422
  train_roc_auc_micro:
  - 0.9289596961221674
  - 0.9233310365947021
  - 0.9160575476128858
  - 0.922208353558468
  - 0.9218000901941886
  train_roc_auc_micro_oob:
  - 0.9134710953932922
  - 0.9073227683356301
  - 0.9030316971945059
  - 0.9053116982178767
  - 0.9084548341955975
  train_roc_auc_samples:
  - 0.8845381526104419
  - 0.8792067307692307
  - 0.8635817307692307
  - 0.8730923694779116
  - 0.8760064412238325
  train_roc_auc_samples_oob:
  - 0.8678714859437751
  - 0.8599759615384616
  - 0.857772435897436
  - 0.8616465863453816
  - 0.8578904991948471
  train_roc_auc_weighted:
  - 0.9072767117117838
  - 0.8948111136685362
  - 0.8855819822439803
  - 0.8958578057626077
  - 0.895500042373021
  train_roc_auc_weighted_oob:
  - 0.8974565899101681
  - 0.8820464147865836
  - 0.8744488534127607
  - 0.8815485563727632
  - 0.8854141755825823
start: 2023-12-21 20:10:07.298833
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
