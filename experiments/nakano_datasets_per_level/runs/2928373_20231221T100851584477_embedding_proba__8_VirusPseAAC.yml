active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMAAMzMzMzPjv6CZmZmZmR1AgGZmZmZm9j9gZmZmZmYSwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:09:57.382225
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__8
  params: {}
hash: 29283737409be53ce3c52fe5fe24cadfa0fa69cac708975ebc60d879134f3f56
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2928373_20231221T100851584477_embedding_proba__8_VirusPseAAC.yml
results:
  fit_time:
  - 51.311028480529785
  - 50.58474779129028
  - 50.48831605911255
  - 50.487635135650635
  - 49.60998225212097
  score_time:
  - 5.463860988616943
  - 5.381054401397705
  - 5.086433410644531
  - 5.317058086395264
  - 5.442476987838745
  test_average_precision_macro:
  - 0.4468139725700912
  - 0.44956047143990796
  - 0.40212832223782174
  - 0.34002713568407383
  - 0.23598435371516702
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4012282420398199
  - 0.4878026618454888
  - 0.47690254117537956
  - 0.38237791656828746
  - 0.3452835139806871
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6466666666666667
  - 0.6708333333333334
  - 0.6817810457516339
  - 0.57375
  - 0.5733695652173914
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.436434478458497
  - 0.49980624237921256
  - 0.48510549408138787
  - 0.41151604522980495
  - 0.35851478707850326
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8074074074074074
  - 0.8095238095238094
  - 0.7794117647058822
  - 0.775
  - 0.7789855072463768
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8074074074074075
  - 0.8095238095238095
  - 0.7794117647058824
  - 0.775
  - 0.7789855072463768
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8074074074074075
  - 0.8095238095238095
  - 0.7794117647058825
  - 0.775
  - 0.7789855072463768
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.691111111111111
  - 0.712912087912088
  - 0.6593137254901961
  - 0.6485576923076923
  - 0.6430434782608695
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7038640722246345
  - 0.6995851015025639
  - 0.6653225499237667
  - 0.6633492176605279
  - 0.6716734500067832
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6770186335403726
  - 0.68
  - 0.6385542168674698
  - 0.6326530612244898
  - 0.6379821958456974
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6973544973544975
  - 0.7014739229024944
  - 0.6603641456582633
  - 0.655
  - 0.658385093167702
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5503125814155448
  - 0.568728517596189
  - 0.511014723092638
  - 0.5038403179500605
  - 0.4993397639397639
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6466666666666665
  - 0.6708333333333334
  - 0.6817810457516341
  - 0.57375
  - 0.5733695652173912
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.09698030760507388
  - 0.07638024147543854
  - 0.03469645677161752
  - 0.0049727480160315085
  - -0.02181372360428537
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.256195947736032
  - 0.2774034295424148
  - 0.26843823954967944
  - 0.19553573689849427
  - 0.1456008471346659
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.22066271395854897
  - 0.19716997214486168
  - 0.21697163893043123
  - 0.14283985905294663
  - 0.13002475717574327
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11328215488791192
  - 0.155128735855393
  - 0.08618089196043045
  - 0.012249425416579512
  - -0.02475780592921314
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.737373396943273
  - 0.7548103383950878
  - 0.7676067186329046
  - 0.682231901783652
  - 0.6811557712443393
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.466666666666667
  - -2.3333333333333335
  - -2.6176470588235294
  - -2.85
  - -2.5652173913043477
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19259259259259262
  - -0.19047619047619047
  - -0.22058823529411764
  - -0.225
  - -0.22101449275362317
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1925925925925926
  - -0.19047619047619047
  - -0.22058823529411764
  - -0.225
  - -0.2210144927536232
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1925925925925926
  - -0.19047619047619047
  - -0.2205882352941176
  - -0.225
  - -0.22101449275362314
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30888888888888894
  - -0.28708791208791207
  - -0.3406862745098039
  - -0.35144230769230766
  - -0.35695652173913045
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2644444444444444
  - -0.22261904761904758
  - -0.2445261437908497
  - -0.321875
  - -0.3
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8074074074074074
  - 0.8095238095238094
  - 0.7794117647058822
  - 0.775
  - 0.7789855072463768
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8074074074074075
  - 0.8095238095238095
  - 0.7794117647058824
  - 0.775
  - 0.7789855072463768
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8074074074074075
  - 0.8095238095238095
  - 0.7794117647058825
  - 0.775
  - 0.7789855072463768
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.691111111111111
  - 0.712912087912088
  - 0.6593137254901961
  - 0.6485576923076923
  - 0.6430434782608695
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8074074074074074
  - 0.8095238095238094
  - 0.7794117647058822
  - 0.775
  - 0.7789855072463768
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8074074074074075
  - 0.8095238095238095
  - 0.7794117647058824
  - 0.775
  - 0.7789855072463768
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8074074074074075
  - 0.8095238095238095
  - 0.7794117647058825
  - 0.775
  - 0.7789855072463768
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.691111111111111
  - 0.712912087912088
  - 0.6593137254901961
  - 0.6485576923076923
  - 0.6430434782608695
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6316415052526627
  - 0.6216686528412535
  - 0.6636867365781726
  - 0.4912880333697401
  - 0.4659043148647611
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7579090909090909
  - 0.7689423076923078
  - 0.7605502136752137
  - 0.6877045826513911
  - 0.7171681415929203
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7355555555555554
  - 0.7773809523809525
  - 0.7554738562091503
  - 0.678125
  - 0.7000000000000001
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5930209911094767
  - 0.6270495951417003
  - 0.6103183445095209
  - 0.4950652894016738
  - 0.5171279525072627
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9619621938632354
  - 0.951277995421246
  - 0.9655313757447422
  - 0.9426003752278422
  - 0.9759989715497467
  train_average_precision_macro_oob:
  - 0.7909634767866045
  - 0.7633612697252755
  - 0.7802717152426055
  - 0.7767761511470517
  - 0.7783659456282727
  train_average_precision_micro:
  - 0.990591052601372
  - 0.9879748277312077
  - 0.9940274920595379
  - 0.9926913428335832
  - 0.9873033337830935
  train_average_precision_micro_oob:
  - 0.9241504054799423
  - 0.9081086583029679
  - 0.9359948789233679
  - 0.9225004128910448
  - 0.917187236896995
  train_average_precision_samples:
  - 0.9907407407407407
  - 0.9843434343434343
  - 0.9865125240847784
  - 0.9922155688622754
  - 0.986542443064182
  train_average_precision_samples_oob:
  - 0.9278806584362139
  - 0.9146464646464647
  - 0.9279383429672446
  - 0.9193612774451098
  - 0.9357142857142857
  train_average_precision_weighted:
  - 0.9891732030345891
  - 0.9855077154506833
  - 0.9913925161567892
  - 0.9848787356649198
  - 0.9915653482448906
  train_average_precision_weighted_oob:
  - 0.9185001077113012
  - 0.909885694907849
  - 0.9180254154669305
  - 0.9162507699826722
  - 0.9046098135651223
  train_f1_macro:
  - 0.9516460905349794
  - 0.9494949494949495
  - 0.9576107899807321
  - 0.9560878243512975
  - 0.955486542443064
  train_f1_macro_oob:
  - 0.9320987654320989
  - 0.9272727272727274
  - 0.9373795761078997
  - 0.9351297405189621
  - 0.9296066252587991
  train_f1_micro:
  - 0.9516460905349794
  - 0.9494949494949495
  - 0.9576107899807321
  - 0.9560878243512974
  - 0.9554865424430642
  train_f1_micro_oob:
  - 0.9320987654320988
  - 0.9272727272727272
  - 0.9373795761078998
  - 0.935129740518962
  - 0.9296066252587992
  train_f1_samples:
  - 0.9516460905349795
  - 0.9494949494949496
  - 0.9576107899807322
  - 0.9560878243512975
  - 0.9554865424430641
  train_f1_samples_oob:
  - 0.9320987654320988
  - 0.9272727272727272
  - 0.9373795761078999
  - 0.9351297405189618
  - 0.9296066252587993
  train_f1_weighted:
  - 0.9719777533308885
  - 0.9663030303030302
  - 0.9778420038535646
  - 0.9764071856287425
  - 0.9737408523461041
  train_f1_weighted_oob:
  - 0.9513201320132014
  - 0.935
  - 0.9558540179077412
  - 0.9461976047904191
  - 0.9508640305024291
  train_jaccard_macro:
  - 0.9101553521320597
  - 0.9057715651929087
  - 0.9211083052749719
  - 0.9183859854422479
  - 0.9174771693787817
  train_jaccard_macro_oob:
  - 0.8758260437673986
  - 0.8655810648957184
  - 0.8843987612878856
  - 0.879398166272111
  - 0.8713655751596269
  train_jaccard_micro:
  - 0.9077526987242395
  - 0.9038461538461539
  - 0.9186691312384473
  - 0.9158699808795411
  - 0.9147670961347869
  train_jaccard_micro_oob:
  - 0.8728323699421965
  - 0.864406779661017
  - 0.8821396192203083
  - 0.8781630740393627
  - 0.8684719535783365
  train_jaccard_samples:
  - 0.9213697824808936
  - 0.9167388167388167
  - 0.9289843104872008
  - 0.9264328485885372
  - 0.9270925761608991
  train_jaccard_samples_oob:
  - 0.8896237507348619
  - 0.8816738816738817
  - 0.8971924029727498
  - 0.8940690048474479
  - 0.886276249630287
  train_jaccard_weighted:
  - 0.9473299266898604
  - 0.9361989227211677
  - 0.9584172136868215
  - 0.9557638236277386
  - 0.9507609586919833
  train_jaccard_weighted_oob:
  - 0.9101362775400196
  - 0.8787590428740512
  - 0.9177048652523271
  - 0.8988348209211285
  - 0.9093610303120048
  train_label_ranking_average_precision_score:
  - 0.9907407407407407
  - 0.9843434343434343
  - 0.9865125240847784
  - 0.9922155688622754
  - 0.986542443064182
  train_label_ranking_average_precision_score_oob:
  - 0.9278806584362139
  - 0.9146464646464647
  - 0.9279383429672446
  - 0.9193612774451098
  - 0.9357142857142856
  train_matthews_corrcoef_macro:
  - 0.4708907499434265
  - 0.4640896779048891
  - 0.4849080457798843
  - 0.4803956618789235
  - 0.5858250505220333
  train_matthews_corrcoef_macro_oob:
  - 0.39186544678284196
  - 0.39077078033805046
  - 0.40468621530723814
  - 0.41508528066181244
  - 0.38293684426433505
  train_matthews_corrcoef_micro:
  - 0.8504024421033801
  - 0.8398554297360605
  - 0.8631388704224804
  - 0.8599026829318973
  - 0.8629027229795908
  train_matthews_corrcoef_micro_oob:
  - 0.7874735824415011
  - 0.7642850107353392
  - 0.7945674097298138
  - 0.7901863474319334
  - 0.7785762971043418
  train_matthews_corrcoef_samples:
  - 0.7920777656595981
  - 0.7754792208925413
  - 0.8016884380826766
  - 0.7927920189484342
  - 0.8075089860532619
  train_matthews_corrcoef_samples_oob:
  - 0.6900728011549441
  - 0.675691881110315
  - 0.7049842639316092
  - 0.6960295144270734
  - 0.6844210794229871
  train_matthews_corrcoef_weighted:
  - 0.780719464775498
  - 0.7664134620963448
  - 0.791817619952357
  - 0.7895189046102122
  - 0.8041646106883394
  train_matthews_corrcoef_weighted_oob:
  - 0.7073121066424202
  - 0.6806059378832054
  - 0.715797919535635
  - 0.7106475485014339
  - 0.6991952162263956
  train_ndgc:
  - 0.9936442674806656
  - 0.9885591324506938
  - 0.9899529451279937
  - 0.99411845844794
  - 0.9900173246007105
  train_ndgc_oob:
  - 0.9474890789303954
  - 0.9384000204927321
  - 0.9476533558254732
  - 0.9426588600760711
  - 0.9537109844989061
  train_neg_coverage_error:
  - -1.2777777777777777
  - -1.2606060606060605
  - -1.2138728323699421
  - -1.2275449101796407
  - -1.2857142857142858
  train_neg_coverage_error_oob:
  - -1.4691358024691359
  - -1.5333333333333334
  - -1.4335260115606936
  - -1.4790419161676647
  - -1.484472049689441
  train_neg_hamming_loss_macro:
  - -0.04835390946502057
  - -0.050505050505050504
  - -0.04238921001926782
  - -0.04391217564870259
  - -0.044513457556935816
  train_neg_hamming_loss_macro_oob:
  - -0.06790123456790122
  - -0.07272727272727274
  - -0.0626204238921002
  - -0.06487025948103793
  - -0.07039337474120083
  train_neg_hamming_loss_micro:
  - -0.04835390946502058
  - -0.050505050505050504
  - -0.04238921001926782
  - -0.043912175648702596
  - -0.044513457556935816
  train_neg_hamming_loss_micro_oob:
  - -0.06790123456790123
  - -0.07272727272727272
  - -0.0626204238921002
  - -0.06487025948103792
  - -0.07039337474120083
  train_neg_hamming_loss_samples:
  - -0.04835390946502057
  - -0.0505050505050505
  - -0.04238921001926781
  - -0.04391217564870259
  - -0.044513457556935816
  train_neg_hamming_loss_samples_oob:
  - -0.06790123456790122
  - -0.07272727272727272
  - -0.06262042389210018
  - -0.06487025948103793
  - -0.07039337474120082
  train_neg_hamming_loss_weighted:
  - -0.028022246669111354
  - -0.0336969696969697
  - -0.022157996146435453
  - -0.023592814371257487
  - -0.026259147653895823
  train_neg_hamming_loss_weighted_oob:
  - -0.048679867986798686
  - -0.06499999999999999
  - -0.04414598209225886
  - -0.05380239520958084
  - -0.049135969497570875
  train_neg_label_ranking_loss:
  - -0.0052469135802469145
  - -0.009242424242424241
  - -0.006936416184971099
  - -0.005988023952095809
  - -0.006211180124223602
  train_neg_label_ranking_loss_oob:
  - -0.04173525377229081
  - -0.05870370370370371
  - -0.04797687861271677
  - -0.04975049900199601
  - -0.041908212560386474
  train_precision_macro:
  - 0.9516460905349794
  - 0.9494949494949495
  - 0.9576107899807321
  - 0.9560878243512975
  - 0.955486542443064
  train_precision_macro_oob:
  - 0.9320987654320989
  - 0.9272727272727274
  - 0.9373795761078997
  - 0.9351297405189621
  - 0.9296066252587991
  train_precision_micro:
  - 0.9516460905349794
  - 0.9494949494949495
  - 0.9576107899807321
  - 0.9560878243512974
  - 0.9554865424430642
  train_precision_micro_oob:
  - 0.9320987654320988
  - 0.9272727272727272
  - 0.9373795761078998
  - 0.935129740518962
  - 0.9296066252587992
  train_precision_samples:
  - 0.9516460905349795
  - 0.9494949494949496
  - 0.9576107899807322
  - 0.9560878243512975
  - 0.9554865424430641
  train_precision_samples_oob:
  - 0.9320987654320988
  - 0.9272727272727272
  - 0.9373795761078999
  - 0.9351297405189618
  - 0.9296066252587993
  train_precision_weighted:
  - 0.9719777533308885
  - 0.9663030303030302
  - 0.9778420038535646
  - 0.9764071856287425
  - 0.9737408523461041
  train_precision_weighted_oob:
  - 0.9513201320132014
  - 0.935
  - 0.9558540179077412
  - 0.9461976047904191
  - 0.9508640305024291
  train_recall_macro:
  - 0.9516460905349794
  - 0.9494949494949495
  - 0.9576107899807321
  - 0.9560878243512975
  - 0.955486542443064
  train_recall_macro_oob:
  - 0.9320987654320989
  - 0.9272727272727274
  - 0.9373795761078997
  - 0.9351297405189621
  - 0.9296066252587991
  train_recall_micro:
  - 0.9516460905349794
  - 0.9494949494949495
  - 0.9576107899807321
  - 0.9560878243512974
  - 0.9554865424430642
  train_recall_micro_oob:
  - 0.9320987654320988
  - 0.9272727272727272
  - 0.9373795761078998
  - 0.935129740518962
  - 0.9296066252587992
  train_recall_samples:
  - 0.9516460905349795
  - 0.9494949494949496
  - 0.9576107899807322
  - 0.9560878243512975
  - 0.9554865424430641
  train_recall_samples_oob:
  - 0.9320987654320988
  - 0.9272727272727272
  - 0.9373795761078999
  - 0.9351297405189618
  - 0.9296066252587993
  train_recall_weighted:
  - 0.9719777533308885
  - 0.9663030303030302
  - 0.9778420038535646
  - 0.9764071856287425
  - 0.9737408523461041
  train_recall_weighted_oob:
  - 0.9513201320132014
  - 0.935
  - 0.9558540179077412
  - 0.9461976047904191
  - 0.9508640305024291
  train_roc_auc_macro:
  - 0.996740515700593
  - 0.9962536096619609
  - 0.9981612642562973
  - 0.9967743653992934
  - 0.9974220102709429
  train_roc_auc_macro_oob:
  - 0.9688594316454479
  - 0.9632889958006352
  - 0.9682191042636538
  - 0.96630318192108
  - 0.9523551923018013
  train_roc_auc_micro:
  - 0.9964124983926965
  - 0.9963227848101265
  - 0.9982778483095878
  - 0.997574812967581
  - 0.995697475506713
  train_roc_auc_micro_oob:
  - 0.9670245595988171
  - 0.9590189873417722
  - 0.973350731179762
  - 0.9653241895261845
  - 0.962910165362086
  train_roc_auc_samples:
  - 0.9947530864197531
  - 0.9907575757575757
  - 0.993063583815029
  - 0.9940119760479041
  - 0.9937888198757764
  train_roc_auc_samples_oob:
  - 0.9582647462277093
  - 0.9412962962962963
  - 0.9520231213872832
  - 0.950249500998004
  - 0.9580917874396137
  train_roc_auc_weighted:
  - 0.9984280975515886
  - 0.9984042251288244
  - 0.9994194650463976
  - 0.9988916539837933
  - 0.9984620408485207
  train_roc_auc_weighted_oob:
  - 0.9834069945355602
  - 0.9782521073592033
  - 0.9869886739457451
  - 0.9798384813088018
  - 0.974434335349396
start: 2023-12-21 10:08:51.584477
wrapper: null
