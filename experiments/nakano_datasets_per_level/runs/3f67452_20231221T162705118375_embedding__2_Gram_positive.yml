active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwCYmZmZmcm/AJqZmZmZ6T8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:27:19.092390
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__2
  params: {}
hash: 3f67452dcdad60d110acc65b2465c9a96cb4344a8047223813088aa4d42bdfe5
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3f67452_20231221T162705118375_embedding__2_Gram_positive.yml
results:
  fit_time:
  - 4.277561187744141
  - 4.649956941604614
  - 4.412386655807495
  - 4.319538831710815
  - 4.538224458694458
  score_time:
  - 1.8718287944793701
  - 2.125948905944824
  - 1.8274171352386475
  - 1.9230973720550537
  - 1.9327704906463623
  test_average_precision_macro:
  - 0.929273173558514
  - 0.8987412668286273
  - 0.9012474411030207
  - 0.8644036556125569
  - 0.9643258698722389
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9809910292582859
  - 0.9743664947128301
  - 0.9849992015704894
  - 0.9844014373774117
  - 0.9869554173267241
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9507936507936509
  - 0.9543269230769231
  - 0.9623397435897437
  - 0.9660194174757282
  - 0.9668284789644014
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9816984998133621
  - 0.9765031676407708
  - 0.9809908292269944
  - 0.9701856854003137
  - 0.9882662577169976
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307692
  - 0.9660194174757282
  - 0.9757281553398058
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307693
  - 0.9660194174757282
  - 0.9757281553398058
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307693
  - 0.9660194174757282
  - 0.9757281553398058
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9693424036281179
  - 0.9632951183431953
  - 0.9545118343195267
  - 0.9706906026744825
  - 0.9800224047796864
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9356083340478436
  - 0.9305083184873977
  - 0.9174953054743846
  - 0.9347378563875177
  - 0.9530065244225006
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9354838709677419
  - 0.9303944315545244
  - 0.9170506912442397
  - 0.9342723004694836
  - 0.95260663507109
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9492063492063492
  - 0.9487179487179487
  - 0.9371794871794872
  - 0.949514563106796
  - 0.9637540453074432
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9406670667924204
  - 0.9292936510204792
  - 0.9133550080990704
  - 0.943540638378531
  - 0.9612027454118794
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9507936507936507
  - 0.9543269230769231
  - 0.9623397435897435
  - 0.9660194174757282
  - 0.9668284789644013
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6927127267292501
  - 0.6798968761809778
  - 0.6615405083812952
  - 0.6891469367749197
  - 0.7151938995732245
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.9101556272731329
  - 0.9027591798152474
  - 0.8828025134636726
  - 0.9102144613815772
  - 0.9351605150116747
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8793650793650795
  - 0.8878205128205129
  - 0.858974358974359
  - 0.897942076424394
  - 0.9214629475973103
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8933527922930828
  - 0.8862423640520287
  - 0.8661992136383289
  - 0.8943251899895868
  - 0.9191580807408014
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9633041108340527
  - 0.9658334465584372
  - 0.9719742819801027
  - 0.9753644722453275
  - 0.9752853939064003
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1333333333333333
  - -1.1346153846153846
  - -1.0961538461538463
  - -1.1262135922330097
  - -1.0970873786407767
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03333333333333334
  - -0.03605769230769231
  - -0.04326923076923077
  - -0.03398058252427184
  - -0.024271844660194174
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03333333333333333
  - -0.036057692307692304
  - -0.04326923076923077
  - -0.03398058252427184
  - -0.024271844660194174
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.03333333333333333
  - -0.036057692307692304
  - -0.04326923076923077
  - -0.03398058252427184
  - -0.024271844660194174
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.030657596371882086
  - -0.03670488165680474
  - -0.04548816568047336
  - -0.02930939732551749
  - -0.019977595220313667
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04444444444444444
  - -0.044871794871794865
  - -0.03205128205128205
  - -0.030744336569579287
  - -0.02912621359223301
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307692
  - 0.9660194174757282
  - 0.9757281553398058
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307693
  - 0.9660194174757282
  - 0.9757281553398058
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307693
  - 0.9660194174757282
  - 0.9757281553398058
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9693424036281179
  - 0.9632951183431953
  - 0.9545118343195267
  - 0.9706906026744825
  - 0.9800224047796864
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307692
  - 0.9660194174757282
  - 0.9757281553398058
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307693
  - 0.9660194174757282
  - 0.9757281553398058
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9666666666666667
  - 0.9639423076923077
  - 0.9567307692307693
  - 0.9660194174757282
  - 0.9757281553398058
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9693424036281179
  - 0.9632951183431953
  - 0.9545118343195267
  - 0.9706906026744825
  - 0.9800224047796864
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9928436753051861
  - 0.9915708257058516
  - 0.9945473097449997
  - 0.9894570178562463
  - 0.9958760559377907
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.990204081632653
  - 0.9885046844181461
  - 0.9939903846153847
  - 0.9909051670982858
  - 0.9941933066933067
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9555555555555556
  - 0.9551282051282052
  - 0.9679487179487178
  - 0.9692556634304208
  - 0.970873786407767
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9942270323971172
  - 0.9921597434559447
  - 0.9964584697492297
  - 0.9943765132489863
  - 0.9968267563982443
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.936083791993549
  - 0.950483038533702
  - 0.9448289556631687
  - 0.9179030454102635
  - 0.8873113319996121
  train_average_precision_macro_oob:
  - 0.8717122185857372
  - 0.9158162227627495
  - 0.8707608369970338
  - 0.8850222546692995
  - 0.8504293449107968
  train_average_precision_micro:
  - 0.9932292305803303
  - 0.9918355384155645
  - 0.9908275294455131
  - 0.990168905619329
  - 0.9902913424504269
  train_average_precision_micro_oob:
  - 0.9832639797704804
  - 0.9811437423348313
  - 0.9800061753903913
  - 0.9771390449676235
  - 0.9772258930822794
  train_average_precision_samples:
  - 0.9708132045088566
  - 0.9775100401606425
  - 0.9751004016064257
  - 0.9701522435897437
  - 0.9703525641025641
  train_average_precision_samples_oob:
  - 0.9639694041867956
  - 0.9660642570281124
  - 0.964859437751004
  - 0.9583333333333333
  - 0.9629407051282052
  train_average_precision_weighted:
  - 0.9877947682976881
  - 0.9893578901191071
  - 0.9880015636887228
  - 0.9840068485172604
  - 0.9798250128928941
  train_average_precision_weighted_oob:
  - 0.9713072979886103
  - 0.9779187717507394
  - 0.9700867839794305
  - 0.9704515204020199
  - 0.9674459851984752
  train_f1_macro:
  - 0.9752415458937197
  - 0.9740963855421686
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_f1_macro_oob:
  - 0.9673913043478262
  - 0.966867469879518
  - 0.963855421686747
  - 0.9639423076923076
  - 0.9621394230769231
  train_f1_micro:
  - 0.9752415458937198
  - 0.9740963855421687
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_f1_micro_oob:
  - 0.967391304347826
  - 0.9668674698795181
  - 0.963855421686747
  - 0.9639423076923077
  - 0.9621394230769231
  train_f1_samples:
  - 0.9752415458937198
  - 0.9740963855421687
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_f1_samples_oob:
  - 0.967391304347826
  - 0.9668674698795181
  - 0.963855421686747
  - 0.9639423076923077
  - 0.9621394230769231
  train_f1_weighted:
  - 0.979925109215727
  - 0.9786583086522701
  - 0.9796417172269029
  - 0.977679394945582
  - 0.9790194143565266
  train_f1_weighted_oob:
  - 0.9705695397915077
  - 0.9692037841101879
  - 0.9666273686631968
  - 0.96549875484228
  - 0.9635234991738573
  train_jaccard_macro:
  - 0.9518822160259957
  - 0.9496589677061116
  - 0.9508644975970834
  - 0.9486594447105522
  - 0.9509363017033657
  train_jaccard_macro_oob:
  - 0.9372230783168122
  - 0.9359513238912142
  - 0.9305023083373063
  - 0.9305746977690115
  - 0.9272885711314991
  train_jaccard_micro:
  - 0.9516794342958161
  - 0.9495008807985907
  - 0.9506462984723855
  - 0.9484777517564403
  - 0.9507620164126612
  train_jaccard_micro_oob:
  - 0.9368421052631579
  - 0.9358600583090378
  - 0.9302325581395349
  - 0.9303944315545244
  - 0.9270411117544876
  train_jaccard_samples:
  - 0.9626409017713364
  - 0.9604819277108433
  - 0.9624096385542169
  - 0.9599358974358974
  - 0.9615384615384616
  train_jaccard_samples_oob:
  - 0.9513687600644123
  - 0.9505220883534137
  - 0.9460240963855421
  - 0.9467948717948717
  - 0.9442307692307692
  train_jaccard_weighted:
  - 0.9608204720442133
  - 0.9583280184935946
  - 0.9602695105717654
  - 0.9565070759423902
  - 0.9590536322912865
  train_jaccard_weighted_oob:
  - 0.9432264028571975
  - 0.9403409676994408
  - 0.9357163080027561
  - 0.9334932556400539
  - 0.9298792358349044
  train_label_ranking_average_precision_score:
  - 0.9708132045088566
  - 0.9775100401606425
  - 0.9751004016064256
  - 0.9701522435897435
  - 0.970352564102564
  train_label_ranking_average_precision_score_oob:
  - 0.9639694041867953
  - 0.9660642570281124
  - 0.9648594377510038
  - 0.9583333333333329
  - 0.962940705128205
  train_matthews_corrcoef_macro:
  - 0.7089454699703174
  - 0.7079735375770646
  - 0.7091919246928813
  - 0.7045310722334601
  - 0.7079550482255923
  train_matthews_corrcoef_macro_oob:
  - 0.6886605742530609
  - 0.6906777585318444
  - 0.6820808536190445
  - 0.6811903114097742
  - 0.6766425750837147
  train_matthews_corrcoef_micro:
  - 0.9339090506452736
  - 0.9308368900664948
  - 0.9323736295831194
  - 0.928997010164283
  - 0.9325514012016985
  train_matthews_corrcoef_micro_oob:
  - 0.9126327887847503
  - 0.9111904437550891
  - 0.9030286089959646
  - 0.9027307854700201
  - 0.8981376303563109
  train_matthews_corrcoef_samples:
  - 0.917227175863693
  - 0.9115889182572494
  - 0.9188178339199
  - 0.9068365791727314
  - 0.9122308506531552
  train_matthews_corrcoef_samples_oob:
  - 0.8922674335126464
  - 0.8907053841207033
  - 0.879675624435909
  - 0.8795929894291417
  - 0.8761731583454628
  train_matthews_corrcoef_weighted:
  - 0.9201604561911193
  - 0.9157010150559799
  - 0.9177300948995077
  - 0.9145331804782029
  - 0.9183609953515426
  train_matthews_corrcoef_weighted_oob:
  - 0.8969887182944734
  - 0.8937890804124972
  - 0.886089602004537
  - 0.8858539753734525
  - 0.8810666273106901
  train_ndgc:
  - 0.9785022274691357
  - 0.9833502926289387
  - 0.9815716408389216
  - 0.977835805269418
  - 0.9781131028852716
  train_ndgc_oob:
  - 0.9734011914407861
  - 0.974758348376757
  - 0.9738876179764033
  - 0.9688653982019525
  - 0.9725663145805031
  train_neg_coverage_error:
  - -1.0748792270531402
  - -1.069879518072289
  - -1.074698795180723
  - -1.0745192307692308
  - -1.0841346153846154
  train_neg_coverage_error_oob:
  - -1.0990338164251208
  - -1.1132530120481927
  - -1.1132530120481927
  - -1.1201923076923077
  - -1.1057692307692308
  train_neg_hamming_loss_macro:
  - -0.024758454106280192
  - -0.025903614457831327
  - -0.025301204819277105
  - -0.026442307692307692
  - -0.025240384615384616
  train_neg_hamming_loss_macro_oob:
  - -0.03260869565217391
  - -0.03313253012048192
  - -0.03614457831325301
  - -0.036057692307692304
  - -0.03786057692307693
  train_neg_hamming_loss_micro:
  - -0.024758454106280192
  - -0.025903614457831327
  - -0.02530120481927711
  - -0.026442307692307692
  - -0.025240384615384616
  train_neg_hamming_loss_micro_oob:
  - -0.03260869565217391
  - -0.03313253012048193
  - -0.03614457831325301
  - -0.036057692307692304
  - -0.03786057692307692
  train_neg_hamming_loss_samples:
  - -0.024758454106280192
  - -0.025903614457831327
  - -0.02530120481927711
  - -0.026442307692307692
  - -0.025240384615384616
  train_neg_hamming_loss_samples_oob:
  - -0.03260869565217391
  - -0.03313253012048193
  - -0.03614457831325301
  - -0.036057692307692304
  - -0.03786057692307692
  train_neg_hamming_loss_weighted:
  - -0.020074890784272936
  - -0.02134169134772982
  - -0.02035828277309716
  - -0.022320605054418005
  - -0.020980585643473472
  train_neg_hamming_loss_weighted_oob:
  - -0.02943046020849224
  - -0.03079621588981223
  - -0.03337263133680306
  - -0.034501245157719976
  - -0.03647650082614283
  train_neg_label_ranking_loss:
  - -0.0215378421900161
  - -0.019879518072289156
  - -0.0214859437751004
  - -0.02403846153846154
  - -0.025240384615384616
  train_neg_label_ranking_loss_oob:
  - -0.02938808373590982
  - -0.03413654618473896
  - -0.03413654618473896
  - -0.03926282051282051
  - -0.03245192307692308
  train_precision_macro:
  - 0.9752415458937197
  - 0.9740963855421686
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_precision_macro_oob:
  - 0.9673913043478262
  - 0.966867469879518
  - 0.963855421686747
  - 0.9639423076923076
  - 0.9621394230769231
  train_precision_micro:
  - 0.9752415458937198
  - 0.9740963855421687
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_precision_micro_oob:
  - 0.967391304347826
  - 0.9668674698795181
  - 0.963855421686747
  - 0.9639423076923077
  - 0.9621394230769231
  train_precision_samples:
  - 0.9752415458937198
  - 0.9740963855421687
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_precision_samples_oob:
  - 0.967391304347826
  - 0.9668674698795181
  - 0.963855421686747
  - 0.9639423076923077
  - 0.9621394230769231
  train_precision_weighted:
  - 0.979925109215727
  - 0.9786583086522701
  - 0.9796417172269029
  - 0.977679394945582
  - 0.9790194143565266
  train_precision_weighted_oob:
  - 0.9705695397915077
  - 0.9692037841101879
  - 0.9666273686631968
  - 0.96549875484228
  - 0.9635234991738573
  train_recall_macro:
  - 0.9752415458937197
  - 0.9740963855421686
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_recall_macro_oob:
  - 0.9673913043478262
  - 0.966867469879518
  - 0.963855421686747
  - 0.9639423076923076
  - 0.9621394230769231
  train_recall_micro:
  - 0.9752415458937198
  - 0.9740963855421687
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_recall_micro_oob:
  - 0.967391304347826
  - 0.9668674698795181
  - 0.963855421686747
  - 0.9639423076923077
  - 0.9621394230769231
  train_recall_samples:
  - 0.9752415458937198
  - 0.9740963855421687
  - 0.9746987951807229
  - 0.9735576923076923
  - 0.9747596153846154
  train_recall_samples_oob:
  - 0.967391304347826
  - 0.9668674698795181
  - 0.963855421686747
  - 0.9639423076923077
  - 0.9621394230769231
  train_recall_weighted:
  - 0.979925109215727
  - 0.9786583086522701
  - 0.9796417172269029
  - 0.977679394945582
  - 0.9790194143565266
  train_recall_weighted_oob:
  - 0.9705695397915077
  - 0.9692037841101879
  - 0.9666273686631968
  - 0.96549875484228
  - 0.9635234991738573
  train_roc_auc_macro:
  - 0.9964049666995173
  - 0.9968668825268601
  - 0.9964118623948378
  - 0.9962575868681802
  - 0.9949171991512424
  train_roc_auc_macro_oob:
  - 0.991382860942776
  - 0.9920421436860262
  - 0.9897978382280856
  - 0.9876477894646672
  - 0.9845208960547205
  train_roc_auc_micro:
  - 0.9974936423155112
  - 0.9966767888703199
  - 0.9963171589621889
  - 0.9960923001775004
  - 0.9961142900959445
  train_roc_auc_micro_oob:
  - 0.9927920476768363
  - 0.9898515132341883
  - 0.9895380390361919
  - 0.9888788247669706
  - 0.9878080340454899
  train_roc_auc_samples:
  - 0.9784621578099838
  - 0.9801204819277108
  - 0.9785140562248995
  - 0.9759615384615384
  - 0.9747596153846154
  train_roc_auc_samples_oob:
  - 0.9706119162640903
  - 0.965863453815261
  - 0.9658634538152612
  - 0.9607371794871795
  - 0.9675480769230769
  train_roc_auc_weighted:
  - 0.9980439257022015
  - 0.9981223496273501
  - 0.9977004389861346
  - 0.9973846885869697
  - 0.9970512583539063
  train_roc_auc_weighted_oob:
  - 0.9935364592374114
  - 0.9940187669461948
  - 0.9925997688567154
  - 0.9903592480514805
  - 0.990286503115659
start: 2023-12-21 16:27:05.118375
wrapper: null
