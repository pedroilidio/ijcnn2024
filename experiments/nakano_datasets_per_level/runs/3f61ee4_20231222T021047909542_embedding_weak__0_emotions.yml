active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZ+T+AMzMzMzPjP3BmZmZmZhZAwJmZmZmZ+T/IzMzMzMwiwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:11:05.831545
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__0
  params: {}
hash: 3f61ee4c28730fef5429edf86cce52f9ffe0175e07f536e015ea0f90ef572905
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3f61ee4_20231222T021047909542_embedding_weak__0_emotions.yml
results:
  fit_time:
  - 1.1281538009643555
  - 1.0569162368774414
  - 1.0463190078735352
  - 1.0365698337554932
  - 1.0379555225372314
  score_time:
  - 1.1060504913330078
  - 1.2307512760162354
  - 1.1849586963653564
  - 1.2385070323944092
  - 1.3340656757354736
  test_average_precision_macro:
  - 0.7701436300663711
  - 0.7415169593178023
  - 0.7552764055309723
  - 0.7207979505382616
  - 0.7366330139736873
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7805734986461164
  - 0.7594976736057559
  - 0.7489419679374225
  - 0.7307854856027296
  - 0.7017144748523164
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.822934472934473
  - 0.801035781544256
  - 0.8057767944936086
  - 0.8052469135802469
  - 0.7941840277777779
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7731388879173965
  - 0.7485413621145477
  - 0.7595236764334096
  - 0.7241785191486481
  - 0.7256934125229731
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8148148148148148
  - 0.8050847457627119
  - 0.8171091445427728
  - 0.7962962962962963
  - 0.8359375
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8148148148148148
  - 0.8050847457627118
  - 0.8171091445427728
  - 0.7962962962962963
  - 0.8359375
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8148148148148148
  - 0.8050847457627117
  - 0.8171091445427728
  - 0.7962962962962964
  - 0.8359375000000001
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8150984259581545
  - 0.8030046224961478
  - 0.8142390177788408
  - 0.7907907907907907
  - 0.8263382847533632
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6887015719798971
  - 0.6774456469940167
  - 0.694462593104114
  - 0.664227520610175
  - 0.722740743543585
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6875
  - 0.6737588652482269
  - 0.6907730673316709
  - 0.6615384615384615
  - 0.7181208053691275
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7144892144892144
  - 0.7001614205004033
  - 0.7212389380530974
  - 0.6909645909645908
  - 0.7457961309523808
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6889798569330301
  - 0.6740154653851712
  - 0.6897615828676679
  - 0.6562430253974048
  - 0.7088373880204013
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.822934472934473
  - 0.8010357815442559
  - 0.8057767944936087
  - 0.8052469135802468
  - 0.7941840277777775
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5334318401831105
  - 0.4759982902538477
  - 0.556660565128654
  - 0.49064028267228776
  - 0.5921788591610501
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5491732878564936
  - 0.5193090276087443
  - 0.5669811445378253
  - 0.5029348336902791
  - 0.5848483785843683
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5233619352419603
  - 0.4834841747698467
  - 0.5233348202626508
  - 0.48375727767803867
  - 0.5596084920190962
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.543547541062427
  - 0.4852281146525253
  - 0.5575454051517734
  - 0.4903081711575661
  - 0.5807492663822537
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8832252095936389
  - 0.8640013808603948
  - 0.8681421401224686
  - 0.8692269859667967
  - 0.8555783600748246
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6666666666666665
  - -2.73728813559322
  - -2.8230088495575223
  - -2.7777777777777777
  - -2.5390625
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1851851851851852
  - -0.19491525423728814
  - -0.18289085545722716
  - -0.20370370370370372
  - -0.1640625
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18518518518518517
  - -0.19491525423728814
  - -0.18289085545722714
  - -0.2037037037037037
  - -0.1640625
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1851851851851852
  - -0.19491525423728817
  - -0.18289085545722714
  - -0.2037037037037037
  - -0.1640625
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.18490157404184554
  - -0.1969953775038521
  - -0.1857609822211592
  - -0.2092092092092092
  - -0.17366171524663676
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13300094966761633
  - -0.1547080979284369
  - -0.153023598820059
  - -0.15389363722697053
  - -0.1457465277777778
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8148148148148148
  - 0.8050847457627119
  - 0.8171091445427728
  - 0.7962962962962963
  - 0.8359375
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8148148148148148
  - 0.8050847457627118
  - 0.8171091445427728
  - 0.7962962962962963
  - 0.8359375
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8148148148148148
  - 0.8050847457627117
  - 0.8171091445427728
  - 0.7962962962962964
  - 0.8359375000000001
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8150984259581545
  - 0.8030046224961478
  - 0.8142390177788408
  - 0.7907907907907907
  - 0.8263382847533632
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8148148148148148
  - 0.8050847457627119
  - 0.8171091445427728
  - 0.7962962962962963
  - 0.8359375
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8148148148148148
  - 0.8050847457627118
  - 0.8171091445427728
  - 0.7962962962962963
  - 0.8359375
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8148148148148148
  - 0.8050847457627117
  - 0.8171091445427728
  - 0.7962962962962964
  - 0.8359375000000001
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8150984259581545
  - 0.8030046224961478
  - 0.8142390177788408
  - 0.7907907907907907
  - 0.8263382847533632
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8757789081677273
  - 0.8579951764713051
  - 0.8630141715557526
  - 0.8359261750972803
  - 0.857297674138506
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.888853350391812
  - 0.873919523099851
  - 0.8749901217006479
  - 0.8570289039039041
  - 0.8733944954128441
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8669990503323838
  - 0.845291902071563
  - 0.846976401179941
  - 0.8461063627730295
  - 0.8542534722222223
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8767528096778084
  - 0.8576785289486325
  - 0.8636501697289787
  - 0.8366803719511925
  - 0.8511961219882108
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9458577161603129
  - 0.9462924212019237
  - 0.948393769276957
  - 0.9502989239703042
  - 0.9440106937757925
  train_average_precision_macro_oob:
  - 0.7229463685449765
  - 0.730404427319022
  - 0.7249432695487549
  - 0.741651359019888
  - 0.7271344615963221
  train_average_precision_micro:
  - 0.9328102598622255
  - 0.9331350726421788
  - 0.9322141804566058
  - 0.9354757244715627
  - 0.9324783027862624
  train_average_precision_micro_oob:
  - 0.7383630204973092
  - 0.74170253655372
  - 0.7383245482825312
  - 0.7527656041619459
  - 0.7452341342252009
  train_average_precision_samples:
  - 0.9333683473389356
  - 0.936514619883041
  - 0.9361111111111111
  - 0.9439892623716153
  - 0.9418876941457586
  train_average_precision_samples_oob:
  - 0.8009161998132587
  - 0.818842105263158
  - 0.8030150462962963
  - 0.8161589635854342
  - 0.8152449223416964
  train_average_precision_weighted:
  - 0.9483143113623604
  - 0.9481635403843363
  - 0.9505737186774742
  - 0.9514546408106551
  - 0.9463090793285044
  train_average_precision_weighted_oob:
  - 0.7238529046046234
  - 0.729012317930006
  - 0.7283027845429787
  - 0.7398160201595688
  - 0.7317623206156165
  train_f1_macro:
  - 0.8823529411764707
  - 0.8845614035087719
  - 0.8868055555555556
  - 0.8879551820728292
  - 0.881720430107527
  train_f1_macro_oob:
  - 0.8088235294117646
  - 0.8147368421052632
  - 0.8107638888888888
  - 0.8193277310924368
  - 0.8082437275985663
  train_f1_micro:
  - 0.8823529411764706
  - 0.8845614035087719
  - 0.8868055555555555
  - 0.8879551820728291
  - 0.8817204301075269
  train_f1_micro_oob:
  - 0.8088235294117647
  - 0.8147368421052632
  - 0.8107638888888888
  - 0.819327731092437
  - 0.8082437275985663
  train_f1_samples:
  - 0.8823529411764706
  - 0.884561403508772
  - 0.8868055555555555
  - 0.8879551820728293
  - 0.8817204301075269
  train_f1_samples_oob:
  - 0.8088235294117647
  - 0.8147368421052632
  - 0.810763888888889
  - 0.819327731092437
  - 0.8082437275985662
  train_f1_weighted:
  - 0.8826726857597605
  - 0.8845211000474158
  - 0.8887838600451468
  - 0.8880531896731606
  - 0.8828042038758277
  train_f1_weighted_oob:
  - 0.8031581290915464
  - 0.8096846846846847
  - 0.8068049285176825
  - 0.8147514084640628
  - 0.8058125265779722
  train_jaccard_macro:
  - 0.7920093123599433
  - 0.7958699820210215
  - 0.7995309512015539
  - 0.801037516310538
  - 0.7912365785772496
  train_jaccard_macro_oob:
  - 0.6818932575279167
  - 0.6897742606201184
  - 0.6840459917741725
  - 0.6965467262332153
  - 0.680518855752589
  train_jaccard_micro:
  - 0.7894736842105263
  - 0.7930166719094055
  - 0.7966313162819713
  - 0.7984886649874056
  - 0.7884615384615384
  train_jaccard_micro_oob:
  - 0.6790123456790124
  - 0.6873889875666075
  - 0.6817518248175183
  - 0.693950177935943
  - 0.6781954887218045
  train_jaccard_samples:
  - 0.812094837935174
  - 0.8150075187969924
  - 0.8182738095238095
  - 0.8188975590236094
  - 0.8102406554019456
  train_jaccard_samples_oob:
  - 0.7076530612244898
  - 0.7164611528822055
  - 0.7104563492063491
  - 0.7221088435374149
  - 0.7072196620583717
  train_jaccard_weighted:
  - 0.7922128190001082
  - 0.7955059020815123
  - 0.8024901150713447
  - 0.8009226407139358
  - 0.7926874277804885
  train_jaccard_weighted_oob:
  - 0.6736138727974645
  - 0.682366067821035
  - 0.6781959317437196
  - 0.6897043299976907
  - 0.6767734375463357
  train_label_ranking_average_precision_score:
  - 0.9333683473389353
  - 0.9365146198830406
  - 0.9361111111111106
  - 0.9439892623716148
  - 0.9418876941457582
  train_label_ranking_average_precision_score_oob:
  - 0.8009161998132571
  - 0.8188421052631569
  - 0.8030150462962952
  - 0.8161589635854332
  - 0.8152449223416954
  train_matthews_corrcoef_macro:
  - 0.711503195870289
  - 0.7173280436832403
  - 0.7174847087244897
  - 0.726025992226437
  - 0.7120464547200828
  train_matthews_corrcoef_macro_oob:
  - 0.5180008855795903
  - 0.537926060372156
  - 0.5136594776174049
  - 0.5466668499548426
  - 0.5124580164428725
  train_matthews_corrcoef_micro:
  - 0.7178439396997198
  - 0.7238417254788104
  - 0.7273113451975258
  - 0.7317527604658209
  - 0.7201198522264755
  train_matthews_corrcoef_micro_oob:
  - 0.5295504013889683
  - 0.5463264542218733
  - 0.5321658527792991
  - 0.5575821900340501
  - 0.5347017799404489
  train_matthews_corrcoef_samples:
  - 0.6957488519670297
  - 0.7078874355306912
  - 0.7008333610754154
  - 0.7102203847701946
  - 0.6995260434659014
  train_matthews_corrcoef_samples_oob:
  - 0.49211180811723826
  - 0.5171432484842831
  - 0.5019738495364797
  - 0.5265813829595347
  - 0.49655548259850807
  train_matthews_corrcoef_weighted:
  - 0.7176808998078728
  - 0.7227168744950685
  - 0.7269964693901924
  - 0.7313748839070358
  - 0.7197384092259762
  train_matthews_corrcoef_weighted_oob:
  - 0.5161807571907671
  - 0.5363375364912033
  - 0.5163324612998651
  - 0.5461765264805932
  - 0.5176856278188647
  train_ndgc:
  - 0.9552861384579782
  - 0.9576195396373303
  - 0.9573151819224244
  - 0.962464320285345
  - 0.9615532468960566
  train_ndgc_oob:
  - 0.8634259018432301
  - 0.8777286140863337
  - 0.8659128132154214
  - 0.8758232816301478
  - 0.8751470904235178
  train_neg_coverage_error:
  - -2.1260504201680672
  - -2.1136842105263156
  - -2.1104166666666666
  - -2.081932773109244
  - -2.1462365591397847
  train_neg_coverage_error_oob:
  - -2.7247899159663866
  - -2.690526315789474
  - -2.7104166666666667
  - -2.6827731092436973
  - -2.7440860215053764
  train_neg_hamming_loss_macro:
  - -0.11764705882352942
  - -0.11543859649122808
  - -0.11319444444444444
  - -0.11204481792717086
  - -0.11827956989247312
  train_neg_hamming_loss_macro_oob:
  - -0.1911764705882353
  - -0.18526315789473682
  - -0.18923611111111113
  - -0.18067226890756302
  - -0.1917562724014337
  train_neg_hamming_loss_micro:
  - -0.11764705882352941
  - -0.11543859649122808
  - -0.11319444444444444
  - -0.11204481792717087
  - -0.11827956989247312
  train_neg_hamming_loss_micro_oob:
  - -0.19117647058823528
  - -0.18526315789473685
  - -0.1892361111111111
  - -0.18067226890756302
  - -0.1917562724014337
  train_neg_hamming_loss_samples:
  - -0.11764705882352941
  - -0.11543859649122806
  - -0.11319444444444443
  - -0.11204481792717086
  - -0.11827956989247312
  train_neg_hamming_loss_samples_oob:
  - -0.19117647058823528
  - -0.18526315789473685
  - -0.1892361111111111
  - -0.18067226890756302
  - -0.19175627240143367
  train_neg_hamming_loss_weighted:
  - -0.1173273142402395
  - -0.11547889995258415
  - -0.11121613995485327
  - -0.11194681032683952
  - -0.11719579612417229
  train_neg_hamming_loss_weighted_oob:
  - -0.1968418709084536
  - -0.19031531531531531
  - -0.19319507148231754
  - -0.1852485915359372
  - -0.1941874734220278
  train_neg_label_ranking_loss:
  - -0.04452614379084967
  - -0.04004093567251461
  - -0.04461805555555556
  - -0.03734827264239029
  - -0.03971923536439666
  train_neg_label_ranking_loss_oob:
  - -0.15585317460317458
  - -0.14420467836257309
  - -0.15254629629629632
  - -0.1447128851540616
  - -0.14932497013142176
  train_precision_macro:
  - 0.8823529411764707
  - 0.8845614035087719
  - 0.8868055555555556
  - 0.8879551820728292
  - 0.881720430107527
  train_precision_macro_oob:
  - 0.8088235294117646
  - 0.8147368421052632
  - 0.8107638888888888
  - 0.8193277310924368
  - 0.8082437275985663
  train_precision_micro:
  - 0.8823529411764706
  - 0.8845614035087719
  - 0.8868055555555555
  - 0.8879551820728291
  - 0.8817204301075269
  train_precision_micro_oob:
  - 0.8088235294117647
  - 0.8147368421052632
  - 0.8107638888888888
  - 0.819327731092437
  - 0.8082437275985663
  train_precision_samples:
  - 0.8823529411764706
  - 0.884561403508772
  - 0.8868055555555555
  - 0.8879551820728293
  - 0.8817204301075269
  train_precision_samples_oob:
  - 0.8088235294117647
  - 0.8147368421052632
  - 0.810763888888889
  - 0.819327731092437
  - 0.8082437275985662
  train_precision_weighted:
  - 0.8826726857597605
  - 0.8845211000474158
  - 0.8887838600451468
  - 0.8880531896731606
  - 0.8828042038758277
  train_precision_weighted_oob:
  - 0.8031581290915464
  - 0.8096846846846847
  - 0.8068049285176825
  - 0.8147514084640628
  - 0.8058125265779722
  train_recall_macro:
  - 0.8823529411764707
  - 0.8845614035087719
  - 0.8868055555555556
  - 0.8879551820728292
  - 0.881720430107527
  train_recall_macro_oob:
  - 0.8088235294117646
  - 0.8147368421052632
  - 0.8107638888888888
  - 0.8193277310924368
  - 0.8082437275985663
  train_recall_micro:
  - 0.8823529411764706
  - 0.8845614035087719
  - 0.8868055555555555
  - 0.8879551820728291
  - 0.8817204301075269
  train_recall_micro_oob:
  - 0.8088235294117647
  - 0.8147368421052632
  - 0.8107638888888888
  - 0.819327731092437
  - 0.8082437275985663
  train_recall_samples:
  - 0.8823529411764706
  - 0.884561403508772
  - 0.8868055555555555
  - 0.8879551820728293
  - 0.8817204301075269
  train_recall_samples_oob:
  - 0.8088235294117647
  - 0.8147368421052632
  - 0.810763888888889
  - 0.819327731092437
  - 0.8082437275985662
  train_recall_weighted:
  - 0.8826726857597605
  - 0.8845211000474158
  - 0.8887838600451468
  - 0.8880531896731606
  - 0.8828042038758277
  train_recall_weighted_oob:
  - 0.8031581290915464
  - 0.8096846846846847
  - 0.8068049285176825
  - 0.8147514084640628
  - 0.8058125265779722
  train_roc_auc_macro:
  - 0.9745006120572892
  - 0.9749272462056587
  - 0.9750833765798502
  - 0.9757155776983164
  - 0.9731339275750592
  train_roc_auc_macro_oob:
  - 0.849707693081422
  - 0.8510245236919215
  - 0.8464472608298732
  - 0.860756782707809
  - 0.8520868687526423
  train_roc_auc_micro:
  - 0.9663161185523301
  - 0.9672516553250499
  - 0.9661354265958145
  - 0.9683440088918426
  - 0.9664397882468082
  train_roc_auc_micro_oob:
  - 0.8677586010444871
  - 0.8696385605789275
  - 0.8661639546178037
  - 0.8773109051116637
  - 0.8707925916040157
  train_roc_auc_samples:
  - 0.9554738562091503
  - 0.9599590643274853
  - 0.9553819444444446
  - 0.9626517273576096
  - 0.9602807646356034
  train_roc_auc_samples_oob:
  - 0.8441468253968254
  - 0.8557953216374268
  - 0.8474537037037038
  - 0.8552871148459384
  - 0.8506750298685783
  train_roc_auc_weighted:
  - 0.9748200696497077
  - 0.9747883869821787
  - 0.975365257078715
  - 0.9751912237988508
  - 0.9733667233807644
  train_roc_auc_weighted_oob:
  - 0.8489625175027476
  - 0.8499605271533593
  - 0.8465957012595972
  - 0.8588651645145602
  - 0.8529718234542044
start: 2023-12-22 02:10:47.909542
wrapper: null
