active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwCYmZmZmcm/AM3MzMzM/D8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:48:26.921356
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__4
  params: {}
hash: 6b691374915302eb99ca87f409a2472a822275cd660ce77891aae244315cbed4
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6b69137_20231221T174748547233_embedding_proba_weak__4_Gram_positive.yml
results:
  fit_time:
  - 25.068384408950806
  - 25.721129894256592
  - 25.254905939102173
  - 25.845489501953125
  - 19.74627423286438
  score_time:
  - 3.5465097427368164
  - 3.546463966369629
  - 3.4990835189819336
  - 3.42864990234375
  - 0.0
  test_average_precision_macro:
  - 0.9416718158064364
  - 0.8550609964977516
  - 0.875022024068979
  - 0.8942977288421415
  - .nan
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9650524015426141
  - 0.9565601191634802
  - 0.973013780277853
  - 0.9855155209785186
  - .nan
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9650793650793652
  - 0.9719551282051282
  - 0.9423076923076923
  - 0.9763071895424837
  - .nan
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9661249535161051
  - 0.9566719877600579
  - 0.9676197223025507
  - 0.9762586997270564
  - .nan
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8880952380952382
  - 0.9182692307692308
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.888095238095238
  - 0.9182692307692307
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.888095238095238
  - 0.9182692307692307
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8636118598382749
  - 0.8978365384615384
  - 0.8928439349112426
  - 0.9215686274509804
  - .nan
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8045680428134556
  - 0.8514288876518976
  - 0.8389399762672958
  - 0.8769849313755891
  - .nan
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7987152034261242
  - 0.8488888888888889
  - 0.8366445916114791
  - 0.8758620689655172
  - .nan
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8260317460317459
  - 0.8730769230769229
  - 0.8589743589743589
  - 0.8967320261437909
  - .nan
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7649190756447984
  - 0.8159547331316587
  - 0.8071898421802963
  - 0.8555520079264338
  - .nan
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.965079365079365
  - 0.9719551282051283
  - 0.9423076923076923
  - 0.9763071895424836
  - .nan
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5092481602577084
  - 0.582021273727733
  - 0.5591829306501991
  - 0.6252404982482448
  - .nan
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6910033721763809
  - 0.775794808657108
  - 0.7574363227075557
  - 0.8246154886732897
  - .nan
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.580952380952381
  - 0.6923076923076923
  - 0.6506410256410257
  - 0.7549019607843137
  - .nan
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6590865668568279
  - 0.7475558761263775
  - 0.7291779349233306
  - 0.7958636591828762
  - .nan
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.97414836687075
  - 0.9790717867191131
  - 0.9571127009450954
  - 0.9830392605495336
  - .nan
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0857142857142856
  - -1.0769230769230769
  - -1.1442307692307692
  - -1.088235294117647
  - .nan
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.11190476190476191
  - -0.08173076923076925
  - -0.0889423076923077
  - -0.0661764705882353
  - .nan
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11190476190476191
  - -0.08173076923076923
  - -0.0889423076923077
  - -0.0661764705882353
  - .nan
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11190476190476191
  - -0.08173076923076923
  - -0.0889423076923077
  - -0.0661764705882353
  - .nan
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.13638814016172507
  - -0.10216346153846154
  - -0.1071560650887574
  - -0.0784313725490196
  - .nan
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.025396825396825397
  - -0.02564102564102564
  - -0.04807692307692308
  - -0.021241830065359475
  - .nan
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8880952380952382
  - 0.9182692307692308
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.888095238095238
  - 0.9182692307692307
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.888095238095238
  - 0.9182692307692307
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8636118598382749
  - 0.8978365384615384
  - 0.8928439349112426
  - 0.9215686274509804
  - .nan
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8880952380952382
  - 0.9182692307692308
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.888095238095238
  - 0.9182692307692307
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.888095238095238
  - 0.9182692307692307
  - 0.9110576923076923
  - 0.9338235294117647
  - .nan
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8636118598382749
  - 0.8978365384615384
  - 0.8928439349112426
  - 0.9215686274509804
  - .nan
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9897915235401091
  - 0.9683224604462017
  - 0.9850351118204332
  - 0.9901487207672703
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9897247926931859
  - 0.9799987672583826
  - 0.9894754684418147
  - 0.9933577935222673
  - .nan
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9746031746031746
  - 0.9743589743589745
  - 0.9519230769230769
  - 0.9787581699346406
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9918019935416722
  - 0.9791786588500948
  - 0.99014245746667
  - 0.9942998840893063
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9135608404675614
  - 0.9054374705330719
  - 0.9594377628854898
  - 0.932579016951133
  - .nan
  train_average_precision_macro_oob:
  - 0.8106971004260142
  - 0.8396238017252982
  - 0.9191244208792635
  - 0.872618923135285
  - .nan
  train_average_precision_micro:
  - 0.9724512182335137
  - 0.9838421336827703
  - 0.9877501743119367
  - 0.9844447173204787
  - .nan
  train_average_precision_micro_oob:
  - 0.9612068504701887
  - 0.9775611174025692
  - 0.9819966768340077
  - 0.9789698856234931
  - .nan
  train_average_precision_samples:
  - 0.961352657004831
  - 0.9726907630522089
  - 0.9746987951807229
  - 0.9710231814548361
  - .nan
  train_average_precision_samples_oob:
  - 0.9587359098228664
  - 0.9634538152610442
  - 0.9704819277108434
  - 0.9610311750599521
  - .nan
  train_average_precision_weighted:
  - 0.9701363145533816
  - 0.9757062514425848
  - 0.9869070808109918
  - 0.981480343057163
  - .nan
  train_average_precision_weighted_oob:
  - 0.9518733485938357
  - 0.9621538794434116
  - 0.9781874559329485
  - 0.9700960499347322
  - .nan
  train_f1_macro:
  - 0.8997584541062802
  - 0.9174698795180724
  - 0.9259036144578314
  - 0.934052757793765
  - .nan
  train_f1_macro_oob:
  - 0.9033816425120773
  - 0.9180722891566264
  - 0.9337349397590362
  - 0.934652278177458
  - .nan
  train_f1_micro:
  - 0.8997584541062802
  - 0.9174698795180722
  - 0.9259036144578313
  - 0.934052757793765
  - .nan
  train_f1_micro_oob:
  - 0.9033816425120773
  - 0.9180722891566265
  - 0.9337349397590361
  - 0.934652278177458
  - .nan
  train_f1_samples:
  - 0.8997584541062802
  - 0.9174698795180722
  - 0.9259036144578313
  - 0.934052757793765
  - .nan
  train_f1_samples_oob:
  - 0.9033816425120773
  - 0.9180722891566265
  - 0.9337349397590361
  - 0.934652278177458
  - .nan
  train_f1_weighted:
  - 0.8766146503087384
  - 0.9050349368835725
  - 0.9125341461310635
  - 0.9209720529066008
  - .nan
  train_f1_weighted_oob:
  - 0.8806577926064945
  - 0.9062311297696753
  - 0.9231848635592489
  - 0.9215157706770145
  - .nan
  train_jaccard_macro:
  - 0.8211963327304108
  - 0.8487073222875714
  - 0.8630433428191842
  - 0.8772752610936777
  - .nan
  train_jaccard_macro_oob:
  - 0.8275825883524505
  - 0.8497337096037505
  - 0.8763758250543183
  - 0.8784393201691999
  - .nan
  train_jaccard_micro:
  - 0.8177826564215148
  - 0.8475236505286589
  - 0.8620302860347728
  - 0.876265466816648
  - .nan
  train_jaccard_micro_oob:
  - 0.8237885462555066
  - 0.8485523385300668
  - 0.8757062146892656
  - 0.8773213280810355
  - .nan
  train_jaccard_samples:
  - 0.8418679549114331
  - 0.8698795180722891
  - 0.8830522088353413
  - 0.8960831334932053
  - .nan
  train_jaccard_samples_oob:
  - 0.8483091787439612
  - 0.8702008032128514
  - 0.8959036144578312
  - 0.8970423661071143
  - .nan
  train_jaccard_weighted:
  - 0.7823703726073873
  - 0.8267697690770198
  - 0.8395299014770392
  - 0.8541329498823098
  - .nan
  train_jaccard_weighted_oob:
  - 0.7896548293426547
  - 0.8287877429290703
  - 0.857600663266901
  - 0.8552979175698052
  - .nan
  train_label_ranking_average_precision_score:
  - 0.9613526570048306
  - 0.9726907630522089
  - 0.9746987951807228
  - 0.971023181454836
  - .nan
  train_label_ranking_average_precision_score_oob:
  - 0.9587359098228662
  - 0.9634538152610441
  - 0.9704819277108432
  - 0.9610311750599521
  - .nan
  train_matthews_corrcoef_macro:
  - 0.5385898420127229
  - 0.5750138900314612
  - 0.6013899780806271
  - 0.620193054676331
  - .nan
  train_matthews_corrcoef_macro_oob:
  - 0.5477017523624317
  - 0.5758996230185596
  - 0.618819061486614
  - 0.6214421280701478
  - .nan
  train_matthews_corrcoef_micro:
  - 0.7265006157913917
  - 0.777194978185762
  - 0.8010872926650935
  - 0.8224726726109534
  - .nan
  train_matthews_corrcoef_micro_oob:
  - 0.7364809700306298
  - 0.7791775723822644
  - 0.8225064459600633
  - 0.8238790976412217
  - .nan
  train_matthews_corrcoef_samples:
  - 0.613310829957785
  - 0.6839069089278215
  - 0.7154474303675252
  - 0.7458033573141487
  - .nan
  train_matthews_corrcoef_samples_oob:
  - 0.6304347826086957
  - 0.683691688692937
  - 0.7477911646586346
  - 0.7487866113569694
  - .nan
  train_matthews_corrcoef_weighted:
  - 0.6956291829112855
  - 0.7489638704496735
  - 0.772842765682243
  - 0.7953951349708391
  - .nan
  train_matthews_corrcoef_weighted_oob:
  - 0.7056869676692608
  - 0.7510669154100199
  - 0.7957846565394109
  - 0.7968275258438549
  - .nan
  train_ndgc:
  - 0.9713473658685535
  - 0.9799147649101149
  - 0.9813133017081128
  - 0.9784600371341365
  - .nan
  train_ndgc_oob:
  - 0.9693671744639242
  - 0.9730399013862004
  - 0.9781702535612381
  - 0.9710086924356099
  - .nan
  train_neg_coverage_error:
  - -1.106280193236715
  - -1.074698795180723
  - -1.072289156626506
  - -1.0767386091127098
  - .nan
  train_neg_coverage_error_oob:
  - -1.1231884057971016
  - -1.0987951807228915
  - -1.0891566265060242
  - -1.1031175059952039
  - .nan
  train_neg_hamming_loss_macro:
  - -0.1002415458937198
  - -0.0825301204819277
  - -0.07409638554216869
  - -0.065947242206235
  - .nan
  train_neg_hamming_loss_macro_oob:
  - -0.09661835748792272
  - -0.0819277108433735
  - -0.06626506024096385
  - -0.06534772182254196
  - .nan
  train_neg_hamming_loss_micro:
  - -0.10024154589371981
  - -0.0825301204819277
  - -0.07409638554216867
  - -0.06594724220623502
  - .nan
  train_neg_hamming_loss_micro_oob:
  - -0.0966183574879227
  - -0.0819277108433735
  - -0.06626506024096386
  - -0.06534772182254196
  - .nan
  train_neg_hamming_loss_samples:
  - -0.10024154589371981
  - -0.0825301204819277
  - -0.07409638554216867
  - -0.06594724220623502
  - .nan
  train_neg_hamming_loss_samples_oob:
  - -0.0966183574879227
  - -0.0819277108433735
  - -0.06626506024096386
  - -0.06534772182254196
  - .nan
  train_neg_hamming_loss_weighted:
  - -0.12338534969126148
  - -0.09496506311642752
  - -0.08746585386893638
  - -0.07902794709339926
  - .nan
  train_neg_hamming_loss_weighted_oob:
  - -0.1193422073935055
  - -0.09376887023032465
  - -0.07681513644075108
  - -0.07848422932298553
  - .nan
  train_neg_label_ranking_loss:
  - -0.03280998389694042
  - -0.02128514056224899
  - -0.02068273092369478
  - -0.023980815347721823
  - .nan
  train_neg_label_ranking_loss_oob:
  - -0.03824476650563607
  - -0.02931726907630522
  - -0.02610441767068273
  - -0.03277378097521982
  - .nan
  train_precision_macro:
  - 0.8997584541062802
  - 0.9174698795180724
  - 0.9259036144578314
  - 0.934052757793765
  - .nan
  train_precision_macro_oob:
  - 0.9033816425120773
  - 0.9180722891566264
  - 0.9337349397590362
  - 0.934652278177458
  - .nan
  train_precision_micro:
  - 0.8997584541062802
  - 0.9174698795180722
  - 0.9259036144578313
  - 0.934052757793765
  - .nan
  train_precision_micro_oob:
  - 0.9033816425120773
  - 0.9180722891566265
  - 0.9337349397590361
  - 0.934652278177458
  - .nan
  train_precision_samples:
  - 0.8997584541062802
  - 0.9174698795180722
  - 0.9259036144578313
  - 0.934052757793765
  - .nan
  train_precision_samples_oob:
  - 0.9033816425120773
  - 0.9180722891566265
  - 0.9337349397590361
  - 0.934652278177458
  - .nan
  train_precision_weighted:
  - 0.8766146503087384
  - 0.9050349368835725
  - 0.9125341461310635
  - 0.9209720529066008
  - .nan
  train_precision_weighted_oob:
  - 0.8806577926064945
  - 0.9062311297696753
  - 0.9231848635592489
  - 0.9215157706770145
  - .nan
  train_recall_macro:
  - 0.8997584541062802
  - 0.9174698795180724
  - 0.9259036144578314
  - 0.934052757793765
  - .nan
  train_recall_macro_oob:
  - 0.9033816425120773
  - 0.9180722891566264
  - 0.9337349397590362
  - 0.934652278177458
  - .nan
  train_recall_micro:
  - 0.8997584541062802
  - 0.9174698795180722
  - 0.9259036144578313
  - 0.934052757793765
  - .nan
  train_recall_micro_oob:
  - 0.9033816425120773
  - 0.9180722891566265
  - 0.9337349397590361
  - 0.934652278177458
  - .nan
  train_recall_samples:
  - 0.8997584541062802
  - 0.9174698795180722
  - 0.9259036144578313
  - 0.934052757793765
  - .nan
  train_recall_samples_oob:
  - 0.9033816425120773
  - 0.9180722891566265
  - 0.9337349397590361
  - 0.934652278177458
  - .nan
  train_recall_weighted:
  - 0.8766146503087384
  - 0.9050349368835725
  - 0.9125341461310635
  - 0.9209720529066008
  - .nan
  train_recall_weighted_oob:
  - 0.8806577926064945
  - 0.9062311297696753
  - 0.9231848635592489
  - 0.9215157706770145
  - .nan
  train_roc_auc_macro:
  - 0.9889106788618345
  - 0.990115769270981
  - 0.9944996304319834
  - 0.9935856460713466
  - .nan
  train_roc_auc_macro_oob:
  - 0.9745098875253888
  - 0.9836849567586368
  - 0.990510185400985
  - 0.9906322988371183
  - .nan
  train_roc_auc_micro:
  - 0.9909186452290952
  - 0.9934131955328965
  - 0.9949228718852108
  - 0.9940572983446423
  - .nan
  train_roc_auc_micro_oob:
  - 0.983697303658284
  - 0.9896457356931723
  - 0.9918804413255151
  - 0.9915846758552427
  - .nan
  train_roc_auc_samples:
  - 0.9671900161030594
  - 0.978714859437751
  - 0.9793172690763051
  - 0.9760191846522782
  - .nan
  train_roc_auc_samples_oob:
  - 0.961755233494364
  - 0.9706827309236947
  - 0.9738955823293173
  - 0.9672262190247802
  - .nan
  train_roc_auc_weighted:
  - 0.9917613738179063
  - 0.99489766116297
  - 0.9955116344950903
  - 0.9946913931642725
  - .nan
  train_roc_auc_weighted_oob:
  - 0.9861205258296055
  - 0.990959847632531
  - 0.9931373354128638
  - 0.9919365015245201
  - .nan
start: 2023-12-21 17:47:48.547233
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
