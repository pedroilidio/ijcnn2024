active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r8AmpmZmZn5PwDNzMzMzAxAgJmZmZmZFcAAmpmZmZn5Pw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:43:39.090873
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 3cd5655de3429ccfbc756d172c1f835bd8cde45c0d996f64e7851c023cae6e02
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3cd5655_20231212T164208393125_embedding_proba_weak__7_PlantGO.yml
results:
  fit_time:
  - 40.81728434562683
  - 41.646387338638306
  - 43.97311305999756
  - 47.390053510665894
  - 43.04216241836548
  score_time:
  - 10.29372525215149
  - 9.974160194396973
  - 10.591059446334839
  - 10.292478561401367
  - 10.121468544006348
  test_average_precision_macro:
  - 0.605848743273916
  - 0.5180758267809588
  - 0.5968383252861615
  - 0.57814598160219
  - 0.5170425592214133
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6969342812629308
  - 0.6656722421905018
  - 0.6566454412575783
  - 0.6473322946788092
  - 0.5804366963302159
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8618644750624446
  - 0.8500981836033381
  - 0.8555121527777777
  - 0.8345415778251599
  - 0.8463181148748158
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7791185071189782
  - 0.7677130147445755
  - 0.7834145682381297
  - 0.7644539374493469
  - 0.7481141442058261
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.934010152284264
  - 0.923109965635739
  - 0.9331597222222222
  - 0.9386401326699834
  - 0.9213917525773198
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.934010152284264
  - 0.9231099656357389
  - 0.9331597222222222
  - 0.9386401326699834
  - 0.9213917525773195
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.934010152284264
  - 0.9231099656357389
  - 0.9331597222222222
  - 0.9386401326699835
  - 0.9213917525773195
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9342008055098783
  - 0.9276405368605329
  - 0.933761961722488
  - 0.9347366938890452
  - 0.9262319340995413
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8777186382284093
  - 0.8586764498559644
  - 0.8763935256458627
  - 0.8856959753479124
  - 0.8559895125013627
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8761904761904762
  - 0.8571998404467491
  - 0.8746948738812043
  - 0.884375
  - 0.8542413381123058
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8863223071344898
  - 0.8723905263929521
  - 0.8853079212454212
  - 0.8947241812913455
  - 0.8692291032194004
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8773791450748069
  - 0.8663068001122863
  - 0.8772814296577884
  - 0.878500613489172
  - 0.8639373554658669
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8618644750624449
  - 0.8500981836033384
  - 0.8555121527777779
  - 0.8345415778251599
  - 0.846318114874816
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5526114617864273
  - 0.4881467258165167
  - 0.5479733720514152
  - 0.5539772766508594
  - 0.537374611122935
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6645204103358622
  - 0.6173864471490033
  - 0.6493124519731136
  - 0.67038685061689
  - 0.6141312204770681
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7095790829161756
  - 0.6791718577491084
  - 0.6907525477991193
  - 0.7053806461026129
  - 0.6871057693976453
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7093789238969596
  - 0.6759507614554169
  - 0.7006665326415479
  - 0.7088305851837758
  - 0.690462302209449
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.899071681106965
  - 0.8889594508437645
  - 0.8935987585745906
  - 0.8773549955678103
  - 0.8863702089229635
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5431472081218274
  - -1.634020618556701
  - -1.6354166666666667
  - -1.5572139303482586
  - -1.6494845360824741
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06598984771573603
  - -0.07689003436426116
  - -0.06684027777777778
  - -0.06135986733001659
  - -0.07860824742268041
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06598984771573604
  - -0.07689003436426117
  - -0.06684027777777778
  - -0.06135986733001658
  - -0.07860824742268041
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06598984771573602
  - -0.07689003436426116
  - -0.06684027777777778
  - -0.061359867330016575
  - -0.07860824742268041
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06579919449012177
  - -0.07235946313946703
  - -0.06623803827751196
  - -0.06526330611095467
  - -0.07376806590045873
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03824027072758037
  - -0.04588323093477733
  - -0.0456983024691358
  - -0.045002261420171864
  - -0.049625117150890345
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.934010152284264
  - 0.923109965635739
  - 0.9331597222222222
  - 0.9386401326699834
  - 0.9213917525773198
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.934010152284264
  - 0.9231099656357389
  - 0.9331597222222222
  - 0.9386401326699834
  - 0.9213917525773195
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.934010152284264
  - 0.9231099656357389
  - 0.9331597222222222
  - 0.9386401326699835
  - 0.9213917525773195
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9342008055098783
  - 0.9276405368605329
  - 0.933761961722488
  - 0.9347366938890452
  - 0.9262319340995413
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.934010152284264
  - 0.923109965635739
  - 0.9331597222222222
  - 0.9386401326699834
  - 0.9213917525773198
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.934010152284264
  - 0.9231099656357389
  - 0.9331597222222222
  - 0.9386401326699834
  - 0.9213917525773195
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.934010152284264
  - 0.9231099656357389
  - 0.9331597222222222
  - 0.9386401326699835
  - 0.9213917525773195
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9342008055098783
  - 0.9276405368605329
  - 0.933761961722488
  - 0.9347366938890452
  - 0.9262319340995413
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9632003048850487
  - 0.9478878973724157
  - 0.9516914797174004
  - 0.9545146480447361
  - 0.943985395852204
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9659051472947402
  - 0.9589537932018405
  - 0.9591908280138401
  - 0.9625578902229845
  - 0.9472431023932477
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9617597292724196
  - 0.9541167690652227
  - 0.9544319058641975
  - 0.9554500226142016
  - 0.9506091846298032
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.96756962176983
  - 0.9628869047248924
  - 0.9652453466795459
  - 0.9627000088032298
  - 0.9575897565535328
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.6172254889563079
  - 0.530877733696178
  - 0.5605220583982382
  - 0.554904199757121
  - 0.5420391407447838
  train_average_precision_macro_oob:
  - 0.6053419207590701
  - 0.5184581351826875
  - 0.5551137843483298
  - 0.5457261283764251
  - 0.5263964923855877
  train_average_precision_micro:
  - 0.711689370270388
  - 0.6624252807445729
  - 0.6636987385444844
  - 0.705253791842841
  - 0.6384475758898065
  train_average_precision_micro_oob:
  - 0.7034951713605939
  - 0.6468414597361001
  - 0.6542027233201333
  - 0.6947285882797924
  - 0.6226331209466744
  train_average_precision_samples:
  - 0.8866481718594394
  - 0.895138888888889
  - 0.8827749505230421
  - 0.8871371371371373
  - 0.9031072845804988
  train_average_precision_samples_oob:
  - 0.8715637257890778
  - 0.8752404695644492
  - 0.8674754634678299
  - 0.874534785249071
  - 0.8835454122125042
  train_average_precision_weighted:
  - 0.8038274583616718
  - 0.7758099559360577
  - 0.787807265022166
  - 0.7876220672979523
  - 0.7869126064779765
  train_average_precision_weighted_oob:
  - 0.7916863107308262
  - 0.7600625846721497
  - 0.778075501833895
  - 0.7680761301136902
  - 0.7729894916399177
  train_f1_macro:
  - 0.9471830985915494
  - 0.9413265306122449
  - 0.941899915182358
  - 0.9431574431574431
  - 0.9402636054421767
  train_f1_macro_oob:
  - 0.9447289799402476
  - 0.9383503401360546
  - 0.939991518235793
  - 0.9425139425139425
  - 0.9371811224489796
  train_f1_micro:
  - 0.9471830985915493
  - 0.9413265306122449
  - 0.9418999151823579
  - 0.9431574431574432
  - 0.9402636054421769
  train_f1_micro_oob:
  - 0.9447289799402475
  - 0.9383503401360545
  - 0.9399915182357931
  - 0.9425139425139425
  - 0.9371811224489796
  train_f1_samples:
  - 0.9471830985915493
  - 0.9413265306122449
  - 0.9418999151823579
  - 0.9431574431574432
  - 0.9402636054421768
  train_f1_samples_oob:
  - 0.9447289799402476
  - 0.9383503401360546
  - 0.9399915182357931
  - 0.9425139425139424
  - 0.9371811224489796
  train_f1_weighted:
  - 0.9550959394892352
  - 0.9520223569854989
  - 0.9545729341490263
  - 0.9553915888435458
  - 0.9525875066338594
  train_f1_weighted_oob:
  - 0.9503164528088416
  - 0.9462727261723196
  - 0.9488296970025084
  - 0.9506557905134417
  - 0.9467678028658273
  train_jaccard_macro:
  - 0.9013153531129201
  - 0.8903059581700871
  - 0.8915566808637991
  - 0.8934300655404077
  - 0.8887219350323571
  train_jaccard_macro_oob:
  - 0.8967617578185115
  - 0.8848068958542923
  - 0.8880823018115137
  - 0.8922319011185454
  - 0.8829691149161579
  train_jaccard_micro:
  - 0.8996655518394648
  - 0.8891566265060241
  - 0.8901803607214429
  - 0.8924294702658819
  - 0.8872617853560683
  train_jaccard_micro_oob:
  - 0.8952477249747219
  - 0.8838606327593111
  - 0.8867773554710943
  - 0.8912778904665314
  - 0.8817881788178817
  train_jaccard_samples:
  - 0.908848897581292
  - 0.9008686166774401
  - 0.9016181692876799
  - 0.90280453137596
  - 0.8996749798820627
  train_jaccard_samples_oob:
  - 0.9043280662998973
  - 0.895535302032901
  - 0.8978265410685707
  - 0.9014623728909443
  - 0.8940851615371423
  train_jaccard_weighted:
  - 0.9150799034254694
  - 0.9092915444768601
  - 0.9140522268305684
  - 0.9154502510443256
  - 0.9105761509766223
  train_jaccard_weighted_oob:
  - 0.9063143291256122
  - 0.8987437527607222
  - 0.9034892145368182
  - 0.9067273454208485
  - 0.8998589916138281
  train_label_ranking_average_precision_score:
  - 0.88664817185944
  - 0.8951388888888889
  - 0.8827749505230427
  - 0.887137137137138
  - 0.9031072845804999
  train_label_ranking_average_precision_score_oob:
  - 0.8715637257890781
  - 0.8752404695644492
  - 0.8674754634678303
  - 0.8745347852490717
  - 0.8835454122125048
  train_matthews_corrcoef_macro:
  - 0.6520256481747005
  - 0.6071125809584884
  - 0.626568485020415
  - 0.5992037132233389
  - 0.6165489441001114
  train_matthews_corrcoef_macro_oob:
  - 0.6015614595016127
  - 0.558777117704576
  - 0.5797797426852221
  - 0.5756445346546147
  - 0.5510503395842938
  train_matthews_corrcoef_micro:
  - 0.7324029643069306
  - 0.7119323263847027
  - 0.7177956523167971
  - 0.7155184650217236
  - 0.7062645056425022
  train_matthews_corrcoef_micro_oob:
  - 0.7089075208090104
  - 0.6854019323279821
  - 0.6925962227464071
  - 0.6989288797994841
  - 0.6780858345324489
  train_matthews_corrcoef_samples:
  - 0.781222701408982
  - 0.7770959822152536
  - 0.7831013054324033
  - 0.7741531963049139
  - 0.774902514475722
  train_matthews_corrcoef_samples_oob:
  - 0.7463340358837667
  - 0.7385769916519692
  - 0.7430856326343092
  - 0.7416482674554898
  - 0.7327300769581597
  train_matthews_corrcoef_weighted:
  - 0.7923334853298164
  - 0.7756270941292616
  - 0.7879259084816711
  - 0.7802035556487399
  - 0.778265708026793
  train_matthews_corrcoef_weighted_oob:
  - 0.762533598690349
  - 0.7445511292092433
  - 0.7561912059730974
  - 0.7545491480902805
  - 0.7432876507905144
  train_ndgc:
  - 0.9162298939194446
  - 0.9224850072316124
  - 0.9146302906388671
  - 0.9170887688423663
  - 0.9296727861569976
  train_ndgc_oob:
  - 0.9052583929512655
  - 0.908572733423346
  - 0.9052859362360516
  - 0.9083720643338086
  - 0.916516328886768
  train_neg_coverage_error:
  - -1.385403329065301
  - -1.3775510204081634
  - -1.4198473282442747
  - -1.4234234234234233
  - -1.364795918367347
  train_neg_coverage_error_oob:
  - -1.4788732394366197
  - -1.5153061224489797
  - -1.5267175572519085
  - -1.5225225225225225
  - -1.4795918367346939
  train_neg_hamming_loss_macro:
  - -0.05281690140845071
  - -0.058673469387755105
  - -0.05810008481764206
  - -0.056842556842556846
  - -0.059736394557823126
  train_neg_hamming_loss_macro_oob:
  - -0.05527102005975246
  - -0.061649659863945584
  - -0.06000848176420695
  - -0.057486057486057486
  - -0.0628188775510204
  train_neg_hamming_loss_micro:
  - -0.0528169014084507
  - -0.058673469387755105
  - -0.05810008481764207
  - -0.05684255684255684
  - -0.059736394557823126
  train_neg_hamming_loss_micro_oob:
  - -0.05527102005975246
  - -0.06164965986394558
  - -0.06000848176420696
  - -0.057486057486057486
  - -0.0628188775510204
  train_neg_hamming_loss_samples:
  - -0.0528169014084507
  - -0.058673469387755105
  - -0.05810008481764207
  - -0.05684255684255684
  - -0.059736394557823126
  train_neg_hamming_loss_samples_oob:
  - -0.05527102005975245
  - -0.06164965986394557
  - -0.06000848176420694
  - -0.05748605748605747
  - -0.0628188775510204
  train_neg_hamming_loss_weighted:
  - -0.044904060510764864
  - -0.04797764301450117
  - -0.04542706585097359
  - -0.04460841115645386
  - -0.047412493366140784
  train_neg_hamming_loss_weighted_oob:
  - -0.04968354719115817
  - -0.05372727382768054
  - -0.05117030299749156
  - -0.04934420948655824
  - -0.05323219713417283
  train_neg_label_ranking_loss:
  - -0.027374254711002473
  - -0.02663089225589226
  - -0.030412265145089573
  - -0.029454129454129455
  - -0.02467639833711262
  train_neg_label_ranking_loss_oob:
  - -0.035336937449613505
  - -0.037185417096131386
  - -0.03886147308539166
  - -0.03727168727168727
  - -0.034020906342334914
  train_precision_macro:
  - 0.9471830985915494
  - 0.9413265306122449
  - 0.941899915182358
  - 0.9431574431574431
  - 0.9402636054421767
  train_precision_macro_oob:
  - 0.9447289799402476
  - 0.9383503401360546
  - 0.939991518235793
  - 0.9425139425139425
  - 0.9371811224489796
  train_precision_micro:
  - 0.9471830985915493
  - 0.9413265306122449
  - 0.9418999151823579
  - 0.9431574431574432
  - 0.9402636054421769
  train_precision_micro_oob:
  - 0.9447289799402475
  - 0.9383503401360545
  - 0.9399915182357931
  - 0.9425139425139425
  - 0.9371811224489796
  train_precision_samples:
  - 0.9471830985915493
  - 0.9413265306122449
  - 0.9418999151823579
  - 0.9431574431574432
  - 0.9402636054421768
  train_precision_samples_oob:
  - 0.9447289799402476
  - 0.9383503401360546
  - 0.9399915182357931
  - 0.9425139425139424
  - 0.9371811224489796
  train_precision_weighted:
  - 0.9550959394892352
  - 0.9520223569854989
  - 0.9545729341490263
  - 0.9553915888435458
  - 0.9525875066338594
  train_precision_weighted_oob:
  - 0.9503164528088416
  - 0.9462727261723196
  - 0.9488296970025084
  - 0.9506557905134417
  - 0.9467678028658273
  train_recall_macro:
  - 0.9471830985915494
  - 0.9413265306122449
  - 0.941899915182358
  - 0.9431574431574431
  - 0.9402636054421767
  train_recall_macro_oob:
  - 0.9447289799402476
  - 0.9383503401360546
  - 0.939991518235793
  - 0.9425139425139425
  - 0.9371811224489796
  train_recall_micro:
  - 0.9471830985915493
  - 0.9413265306122449
  - 0.9418999151823579
  - 0.9431574431574432
  - 0.9402636054421769
  train_recall_micro_oob:
  - 0.9447289799402475
  - 0.9383503401360545
  - 0.9399915182357931
  - 0.9425139425139425
  - 0.9371811224489796
  train_recall_samples:
  - 0.9471830985915493
  - 0.9413265306122449
  - 0.9418999151823579
  - 0.9431574431574432
  - 0.9402636054421768
  train_recall_samples_oob:
  - 0.9447289799402476
  - 0.9383503401360546
  - 0.9399915182357931
  - 0.9425139425139424
  - 0.9371811224489796
  train_recall_weighted:
  - 0.9550959394892352
  - 0.9520223569854989
  - 0.9545729341490263
  - 0.9553915888435458
  - 0.9525875066338594
  train_recall_weighted_oob:
  - 0.9503164528088416
  - 0.9462727261723196
  - 0.9488296970025084
  - 0.9506557905134417
  - 0.9467678028658273
  train_roc_auc_macro:
  - 0.9728948334388057
  - 0.9666856068335835
  - 0.9678768087853741
  - 0.9696796693995942
  - 0.9684431221761721
  train_roc_auc_macro_oob:
  - 0.9663218461106177
  - 0.9556512240211323
  - 0.9589603611636167
  - 0.9614637684236933
  - 0.9581484433814443
  train_roc_auc_micro:
  - 0.9749578823378715
  - 0.9703880520117254
  - 0.9701579320671014
  - 0.9732526114126014
  - 0.9673768114981641
  train_roc_auc_micro_oob:
  - 0.9705617730352285
  - 0.9632998374720148
  - 0.9646835604059387
  - 0.9680785309930802
  - 0.9609590841493807
  train_roc_auc_samples:
  - 0.9727421461736442
  - 0.9733691077441078
  - 0.9699347161179221
  - 0.9707798707798708
  - 0.9756134903456333
  train_roc_auc_samples_oob:
  - 0.9651024758899278
  - 0.962930538376967
  - 0.9619481498616359
  - 0.9634039884039884
  - 0.9668462902837903
  train_roc_auc_weighted:
  - 0.9797624357899364
  - 0.9768339293760926
  - 0.9777763821583625
  - 0.9793031226247383
  - 0.9794210430346553
  train_roc_auc_weighted_oob:
  - 0.9743296610719927
  - 0.9685569932782859
  - 0.971162273939552
  - 0.9727589617997566
  - 0.9714129001331401
start: 2023-12-12 16:42:08.393125
wrapper: null
