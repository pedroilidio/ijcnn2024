active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT80MzMzMzPzP2ZmZmZmZgbANDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAMAAAAAAAAAAQAAAAAAAAPC/AAAAAAAAFEAAAAAAAAAQwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:58:46.856322
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__2
  params: {}
hash: fc1d849db87de2a3132b3e18103c17067f7f452be4742ad1404215bf1304b6f7
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fc1d849_20231222T005825524452_embedding_proba_weak__2_CHD_49.yml
results:
  fit_time:
  - 8.639354467391968
  - 8.935123920440674
  - 10.213136434555054
  - 9.3206307888031
  - 9.556873083114624
  score_time:
  - 2.67592191696167
  - 2.848261833190918
  - 2.8924264907836914
  - 2.6470353603363037
  - 2.6228649616241455
  test_average_precision_macro:
  - 0.4962182094467072
  - 0.5313491110651324
  - 0.5006790320642748
  - 0.5633015302194297
  - 0.4638898108069444
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6188568579811166
  - 0.7113811048915324
  - 0.6611647080648886
  - 0.7457170069946202
  - 0.5853538603680432
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.775651425762045
  - 0.771585117227319
  - 0.7825892857142858
  - 0.8290487421383648
  - 0.7486594202898552
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.589464025672627
  - 0.6732563699201009
  - 0.613233534923117
  - 0.7048395725147767
  - 0.5689993493614836
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.613095238095238
  - 0.6179245283018867
  - 0.5942028985507247
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.6130952380952381
  - 0.6179245283018868
  - 0.5942028985507246
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.6130952380952381
  - 0.6179245283018868
  - 0.5942028985507246
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5091755938518863
  - 0.5354373950122755
  - 0.5285346097201767
  - 0.525256537570341
  - 0.4796848962278443
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.47324642284443286
  - 0.4837000119956882
  - 0.46724380857366504
  - 0.47652970390314375
  - 0.4600315345049156
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4410201912858661
  - 0.4549499443826474
  - 0.44206008583690987
  - 0.447098976109215
  - 0.422680412371134
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.46140673485806233
  - 0.47531673219746623
  - 0.46067176870748305
  - 0.4711631136159439
  - 0.44724637681159424
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.35121499508464765
  - 0.3704238747152239
  - 0.3667610990747055
  - 0.36130044877330864
  - 0.3291107811563504
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7756514257620452
  - 0.7899337410805299
  - 0.7825892857142857
  - 0.8384827044025158
  - 0.7486594202898553
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05118487458425461
  - 0.1043489379005678
  - 0.021546438684886548
  - 0.038376179554268065
  - -0.020568709293239017
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.16781711253006595
  - 0.26624597439959957
  - 0.2031705473483245
  - 0.2532199489951296
  - 0.08856032333383829
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11027214015140144
  - 0.16788260815678843
  - 0.16470890112640216
  - 0.19047197607688565
  - 0.07167770659821991
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.043616803251856365
  - 0.1480701382064007
  - 0.04019941273182908
  - 0.06239153902735496
  - -0.05301191161518957
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8517834556702867
  - 0.8412562622687784
  - 0.8553172386081135
  - 0.8870884265173081
  - 0.8300038688512077
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.672566371681416
  - -3.688073394495413
  - -3.794642857142857
  - -3.5660377358490565
  - -3.6869565217391305
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.38790560471976404
  - -0.37461773700305806
  - -0.38690476190476186
  - -0.3820754716981132
  - -0.4057971014492754
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.387905604719764
  - -0.3746177370030581
  - -0.3869047619047619
  - -0.38207547169811323
  - -0.4057971014492754
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.38790560471976404
  - -0.3746177370030581
  - -0.3869047619047619
  - -0.3820754716981131
  - -0.40579710144927533
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4908244061481137
  - -0.4645626049877245
  - -0.4714653902798232
  - -0.47474346242965904
  - -0.5203151037721556
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2168141592920354
  - -0.22069317023445462
  - -0.23095238095238096
  - -0.1615041928721174
  - -0.25067632850241545
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.613095238095238
  - 0.6179245283018867
  - 0.5942028985507247
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.6130952380952381
  - 0.6179245283018868
  - 0.5942028985507246
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.6130952380952381
  - 0.6179245283018868
  - 0.5942028985507246
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5091755938518863
  - 0.5354373950122755
  - 0.5285346097201767
  - 0.525256537570341
  - 0.4796848962278443
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.613095238095238
  - 0.6179245283018867
  - 0.5942028985507247
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.6130952380952381
  - 0.6179245283018868
  - 0.5942028985507246
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.612094395280236
  - 0.6253822629969419
  - 0.6130952380952381
  - 0.6179245283018868
  - 0.5942028985507246
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5091755938518863
  - 0.5354373950122755
  - 0.5285346097201767
  - 0.525256537570341
  - 0.4796848962278443
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5834992562101128
  - 0.6142807951754683
  - 0.5908438594578906
  - 0.5589205223667998
  - 0.4967300497843152
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7461095486808624
  - 0.777969166349448
  - 0.7588007684606435
  - 0.8112660568800918
  - 0.7338342224258826
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7831858407079646
  - .nan
  - 0.769047619047619
  - .nan
  - 0.7493236714975845
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5280044972471036
  - 0.6214138510827995
  - 0.5674765778077524
  - 0.6213418160786582
  - 0.5203850203149092
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8152758817570982
  - 0.8131631727661185
  - 0.8188528630814181
  - 0.8140503554384221
  - 0.8160861691982148
  train_average_precision_macro_oob:
  - 0.7159028980907087
  - 0.721112557205774
  - 0.708987769706727
  - 0.7208504702543497
  - 0.7209221778144609
  train_average_precision_micro:
  - 0.8796357401868637
  - 0.8754999736477772
  - 0.8786416675798099
  - 0.8802813953062192
  - 0.8754698299145746
  train_average_precision_micro_oob:
  - 0.8602640524108004
  - 0.8564346253423893
  - 0.8594120674052568
  - 0.8640874095126516
  - 0.857333185912988
  train_average_precision_samples:
  - 0.8981649069884362
  - 0.8972938465371201
  - 0.9005110358665663
  - 0.8940113833209601
  - 0.8849400252525254
  train_average_precision_samples_oob:
  - 0.881649069884364
  - 0.8790421026407574
  - 0.8795397542011536
  - 0.8836983419945559
  - 0.8725189393939393
  train_average_precision_weighted:
  - 0.8711491483682777
  - 0.8697240898376878
  - 0.8726234913930614
  - 0.8746375350723283
  - 0.870273572387827
  train_average_precision_weighted_oob:
  - 0.8476928117983464
  - 0.8453570053664486
  - 0.8497323013547343
  - 0.8543473669758285
  - 0.8457784152815621
  train_f1_macro:
  - 0.7496229260935143
  - 0.7421524663677131
  - 0.7475545522949586
  - 0.7487008166295471
  - 0.743560606060606
  train_f1_macro_oob:
  - 0.6866515837104074
  - 0.6771300448430493
  - 0.6783295711060947
  - 0.690423162583519
  - 0.681439393939394
  train_f1_micro:
  - 0.7496229260935143
  - 0.742152466367713
  - 0.7475545522949586
  - 0.7487008166295471
  - 0.743560606060606
  train_f1_micro_oob:
  - 0.6866515837104072
  - 0.6771300448430493
  - 0.6783295711060948
  - 0.6904231625835189
  - 0.6814393939393939
  train_f1_samples:
  - 0.7496229260935144
  - 0.742152466367713
  - 0.7475545522949587
  - 0.748700816629547
  - 0.7435606060606061
  train_f1_samples_oob:
  - 0.6866515837104072
  - 0.6771300448430493
  - 0.6783295711060948
  - 0.6904231625835189
  - 0.681439393939394
  train_f1_weighted:
  - 0.6881457431742061
  - 0.6807139732191684
  - 0.6845466433744903
  - 0.690681413506329
  - 0.682935688765383
  train_f1_weighted_oob:
  - 0.6214500151881555
  - 0.6105431946375838
  - 0.6090139139758993
  - 0.6287031337681529
  - 0.6179793568876538
  train_jaccard_macro:
  - 0.6145738524246607
  - 0.6051532921036985
  - 0.6126127716193959
  - 0.6123348760444175
  - 0.606782142707234
  train_jaccard_macro_oob:
  - 0.5415671388935953
  - 0.5318811554985484
  - 0.5345026010309749
  - 0.5457536286024788
  - 0.5363920051253375
  train_jaccard_micro:
  - 0.5995174909529554
  - 0.5900178253119429
  - 0.5968759387203364
  - 0.5983387718777811
  - 0.5917998191136569
  train_jaccard_micro_oob:
  - 0.5228251507321274
  - 0.511864406779661
  - 0.5132365499573015
  - 0.5272108843537415
  - 0.5168055156564205
  train_jaccard_samples:
  - 0.6269015298427064
  - 0.6157804825966261
  - 0.6230678275825005
  - 0.627213914519037
  - 0.6170021645021646
  train_jaccard_samples_oob:
  - 0.5478345184227537
  - 0.5366334711626192
  - 0.5374405128355466
  - 0.5548414466009122
  - 0.5406926406926408
  train_jaccard_weighted:
  - 0.5293554294033891
  - 0.5205159689074623
  - 0.5249738426338988
  - 0.5313408282463933
  - 0.5227236404520171
  train_jaccard_weighted_oob:
  - 0.4534948226229085
  - 0.44282519502091394
  - 0.4411958598932908
  - 0.461680235000675
  - 0.45025477908670963
  train_label_ranking_average_precision_score:
  - 0.9049522373051779
  - 0.899535999003487
  - 0.9072830448959109
  - 0.8984657263053689
  - 0.8917582070707067
  train_label_ranking_average_precision_score_oob:
  - 0.8884364002011058
  - 0.8812842551071247
  - 0.8863117632304983
  - 0.8881526849789648
  - 0.8793371212121205
  train_matthews_corrcoef_macro:
  - 0.4040872319167446
  - 0.380360898013311
  - 0.39132735520943585
  - 0.3911889707970307
  - 0.38781004002931424
  train_matthews_corrcoef_macro_oob:
  - 0.26524669504306725
  - 0.22834810395402672
  - 0.23129818646772585
  - 0.2560582397574902
  - 0.23839721170011607
  train_matthews_corrcoef_micro:
  - 0.5381709451704395
  - 0.5171720317790706
  - 0.5302682447896658
  - 0.5292377554024155
  - 0.5261778713475653
  train_matthews_corrcoef_micro_oob:
  - 0.41803760654582744
  - 0.3861889713223863
  - 0.39366381367932896
  - 0.41481546468784875
  - 0.404093058740613
  train_matthews_corrcoef_samples:
  - 0.4606339084294153
  - 0.44978258072216715
  - 0.47253596891951294
  - 0.4550215397162924
  - 0.4336058707305787
  train_matthews_corrcoef_samples_oob:
  - 0.3105811856647233
  - 0.2885380670885073
  - 0.30249692549463175
  - 0.32162237640276103
  - 0.29309838740815614
  train_matthews_corrcoef_weighted:
  - 0.46845991839588724
  - 0.43972729597664667
  - 0.45569683725731497
  - 0.45720023833492435
  - 0.45226300317174534
  train_matthews_corrcoef_weighted_oob:
  - 0.33571423496130715
  - 0.28952270836104677
  - 0.2968281660255983
  - 0.32604060762495723
  - 0.3074035836737647
  train_ndgc:
  - 0.9343168896998266
  - 0.9353095188765086
  - 0.9367352760865266
  - 0.9322578842818079
  - 0.9250573887650224
  train_ndgc_oob:
  - 0.9241577908680229
  - 0.9234636171391056
  - 0.9228925957994901
  - 0.9264514032166095
  - 0.9171973680549521
  train_neg_coverage_error:
  - -3.171945701357466
  - -3.1748878923766815
  - -3.1670428893905194
  - -3.1603563474387526
  - -3.2386363636363638
  train_neg_coverage_error_oob:
  - -3.2941176470588234
  - -3.291479820627803
  - -3.291196388261851
  - -3.2405345211581293
  - -3.3431818181818183
  train_neg_hamming_loss_macro:
  - -0.25037707390648567
  - -0.257847533632287
  - -0.25244544770504135
  - -0.2512991833704528
  - -0.25643939393939397
  train_neg_hamming_loss_macro_oob:
  - -0.3133484162895927
  - -0.32286995515695066
  - -0.3216704288939052
  - -0.3095768374164811
  - -0.31856060606060604
  train_neg_hamming_loss_micro:
  - -0.25037707390648567
  - -0.257847533632287
  - -0.2524454477050414
  - -0.25129918337045287
  - -0.25643939393939397
  train_neg_hamming_loss_micro_oob:
  - -0.31334841628959276
  - -0.32286995515695066
  - -0.3216704288939052
  - -0.30957683741648107
  - -0.31856060606060604
  train_neg_hamming_loss_samples:
  - -0.25037707390648567
  - -0.257847533632287
  - -0.25244544770504135
  - -0.25129918337045287
  - -0.2564393939393939
  train_neg_hamming_loss_samples_oob:
  - -0.31334841628959276
  - -0.32286995515695066
  - -0.3216704288939052
  - -0.30957683741648107
  - -0.31856060606060604
  train_neg_hamming_loss_weighted:
  - -0.3118542568257938
  - -0.31928602678083157
  - -0.31545335662550966
  - -0.3093185864936709
  - -0.31706431123461687
  train_neg_hamming_loss_weighted_oob:
  - -0.3785499848118444
  - -0.38945680536241617
  - -0.3909860860241007
  - -0.37129686623184716
  - -0.3820206431123461
  train_neg_label_ranking_loss:
  - -0.09307440925087983
  - -0.09824987543597409
  - -0.09604966139954853
  - -0.10046399406087603
  - -0.10436868686868687
  train_neg_label_ranking_loss_oob:
  - -0.11238059326294621
  - -0.11716492277030395
  - -0.11765111612741411
  - -0.1125463994060876
  - -0.12051136363636364
  train_precision_macro:
  - 0.7496229260935143
  - 0.7421524663677131
  - 0.7475545522949586
  - 0.7487008166295471
  - 0.743560606060606
  train_precision_macro_oob:
  - 0.6866515837104074
  - 0.6771300448430493
  - 0.6783295711060947
  - 0.690423162583519
  - 0.681439393939394
  train_precision_micro:
  - 0.7496229260935143
  - 0.742152466367713
  - 0.7475545522949586
  - 0.7487008166295471
  - 0.743560606060606
  train_precision_micro_oob:
  - 0.6866515837104072
  - 0.6771300448430493
  - 0.6783295711060948
  - 0.6904231625835189
  - 0.6814393939393939
  train_precision_samples:
  - 0.7496229260935144
  - 0.742152466367713
  - 0.7475545522949587
  - 0.748700816629547
  - 0.7435606060606061
  train_precision_samples_oob:
  - 0.6866515837104072
  - 0.6771300448430493
  - 0.6783295711060948
  - 0.6904231625835189
  - 0.681439393939394
  train_precision_weighted:
  - 0.6881457431742061
  - 0.6807139732191684
  - 0.6845466433744903
  - 0.690681413506329
  - 0.682935688765383
  train_precision_weighted_oob:
  - 0.6214500151881555
  - 0.6105431946375838
  - 0.6090139139758993
  - 0.6287031337681529
  - 0.6179793568876538
  train_recall_macro:
  - 0.7496229260935143
  - 0.7421524663677131
  - 0.7475545522949586
  - 0.7487008166295471
  - 0.743560606060606
  train_recall_macro_oob:
  - 0.6866515837104074
  - 0.6771300448430493
  - 0.6783295711060947
  - 0.690423162583519
  - 0.681439393939394
  train_recall_micro:
  - 0.7496229260935143
  - 0.742152466367713
  - 0.7475545522949586
  - 0.7487008166295471
  - 0.743560606060606
  train_recall_micro_oob:
  - 0.6866515837104072
  - 0.6771300448430493
  - 0.6783295711060948
  - 0.6904231625835189
  - 0.6814393939393939
  train_recall_samples:
  - 0.7496229260935144
  - 0.742152466367713
  - 0.7475545522949587
  - 0.748700816629547
  - 0.7435606060606061
  train_recall_samples_oob:
  - 0.6866515837104072
  - 0.6771300448430493
  - 0.6783295711060948
  - 0.6904231625835189
  - 0.681439393939394
  train_recall_weighted:
  - 0.6881457431742061
  - 0.6807139732191684
  - 0.6845466433744903
  - 0.690681413506329
  - 0.682935688765383
  train_recall_weighted_oob:
  - 0.6214500151881555
  - 0.6105431946375838
  - 0.6090139139758993
  - 0.6287031337681529
  - 0.6179793568876538
  train_roc_auc_macro:
  - 0.8119253850121187
  - 0.8197203102097709
  - 0.8278600154679587
  - 0.8229333478184527
  - 0.8171676180536265
  train_roc_auc_macro_oob:
  - 0.7804513729345448
  - 0.7855574463503641
  - 0.7593897839899127
  - 0.7961798277744423
  - 0.7696429707740324
  train_roc_auc_micro:
  - 0.8934939333288919
  - 0.8994871572687304
  - 0.8996817834914499
  - 0.9006663627156986
  - 0.8920009931211754
  train_roc_auc_micro_oob:
  - 0.8790019898797093
  - 0.884224442235073
  - 0.8838746615194317
  - 0.8872542914288646
  - 0.8789110718406332
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8059602065979122
  - 0.8095540443242579
  - 0.8147231683490238
  - 0.8241615274860008
  - 0.8053627753270919
  train_roc_auc_weighted_oob:
  - 0.7862235531586445
  - 0.7938730500650537
  - 0.7934725452090785
  - 0.8120254697118588
  - 0.7857397752412009
start: 2023-12-22 00:58:25.524452
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
