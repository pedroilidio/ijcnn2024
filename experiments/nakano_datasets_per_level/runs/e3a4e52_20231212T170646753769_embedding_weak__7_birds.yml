active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+cmZmZmZnpP5mZmZmZmQHAnJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP5iZmZmZmfm/aGZmZmZm9j8wMzMzMzPjvw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:07:30.025923
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e3a4e5239af7211a0ae7cbb0ef8c6cadcb7e896ee59c847cf68c38c1a180fcb0
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e3a4e52_20231212T170646753769_embedding_weak__7_birds.yml
results:
  fit_time:
  - 21.90867567062378
  - 22.089837074279785
  - 23.69166922569275
  - 23.61765480041504
  - 25.243406057357788
  score_time:
  - 5.874605655670166
  - 5.544817686080933
  - 5.546642780303955
  - 6.435063123703003
  - 5.667859077453613
  test_average_precision_macro:
  - 0.34312551133175534
  - 0.3789264702654844
  - 0.28110151345098316
  - 0.3140863263707347
  - 0.30815810196128396
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.23012863156503652
  - 0.2863719542269311
  - 0.2410033371313028
  - 0.20805866639610054
  - 0.24628125221332756
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.24313690380031844
  - 0.2761976090948959
  - 0.2574573244728283
  - 0.2081165496041777
  - 0.2616863587069325
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.39996916656634135
  - 0.4695559593544918
  - 0.3956462674329202
  - 0.387209482216761
  - 0.44764633049924357
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9102407180742554
  - 0.9326805385556916
  - 0.9220726234190127
  - 0.9163606691146472
  - 0.9261525907792739
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9102407180742554
  - 0.9326805385556916
  - 0.9220726234190126
  - 0.9163606691146471
  - 0.9261525907792738
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9102407180742554
  - 0.9326805385556917
  - 0.9220726234190126
  - 0.916360669114647
  - 0.9261525907792738
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8959948320413439
  - 0.917743324720069
  - 0.9116978492743488
  - 0.8955277280858677
  - 0.9150783936585651
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8372628837127629
  - 0.8754751399020763
  - 0.8563714137076645
  - 0.8480066721621963
  - 0.8639136013336839
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8352676900037439
  - 0.8738532110091743
  - 0.8554125662376987
  - 0.8456325301204819
  - 0.8624620060790273
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8523474070524965
  - 0.8874855799931635
  - 0.8693373888217164
  - 0.8630650589969767
  - 0.8756112849955465
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8129819687830215
  - 0.8493749811628108
  - 0.8388575790983233
  - 0.813777904087
  - 0.8447987583773761
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6772454309321015
  - 0.7335619501801673
  - 0.7070697275736035
  - 0.6964886426274333
  - 0.7112987618077079
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.23117199787773396
  - 0.20439545847259274
  - 0.24374398903815686
  - 0.18267377977918633
  - 0.21185256758435875
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.24664235745945903
  - 0.27479800952149946
  - 0.30854010504004037
  - 0.19384431095385757
  - 0.2830494769620255
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0886987906842354
  - 0.0695190307734553
  - 0.1216290999374711
  - 0.053696075957073486
  - 0.1279610750048439
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2603115622657767
  - 0.28983558730549
  - 0.3384153189502241
  - 0.21216847509547399
  - 0.315408870398238
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.32936991762955314
  - 0.35223559742842003
  - 0.342034470078296
  - 0.29368059331809143
  - 0.34729273047383274
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.953488372093023
  - -3.2790697674418605
  - -3.813953488372093
  - -4.093023255813954
  - -3.697674418604651
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08975928192574459
  - -0.06731946144430845
  - -0.07792737658098733
  - -0.08363933088535291
  - -0.07384740922072623
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08975928192574459
  - -0.06731946144430845
  - -0.07792737658098735
  - -0.08363933088535291
  - -0.07384740922072623
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08975928192574459
  - -0.06731946144430843
  - -0.07792737658098735
  - -0.08363933088535293
  - -0.07384740922072625
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10400516795865633
  - -0.0822566752799311
  - -0.08830215072565135
  - -0.10447227191413239
  - -0.084921606341435
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.14137786897704818
  - -0.10363720423569946
  - -0.12274297116978379
  - -0.1366603876692796
  - -0.11606690479809496
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9102407180742554
  - 0.9326805385556916
  - 0.9220726234190127
  - 0.9163606691146472
  - 0.9261525907792739
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9102407180742554
  - 0.9326805385556916
  - 0.9220726234190126
  - 0.9163606691146471
  - 0.9261525907792738
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9102407180742554
  - 0.9326805385556917
  - 0.9220726234190126
  - 0.916360669114647
  - 0.9261525907792738
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8959948320413439
  - 0.917743324720069
  - 0.9116978492743488
  - 0.8955277280858677
  - 0.9150783936585651
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9102407180742554
  - 0.9326805385556916
  - 0.9220726234190127
  - 0.9163606691146472
  - 0.9261525907792739
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9102407180742554
  - 0.9326805385556916
  - 0.9220726234190126
  - 0.9163606691146471
  - 0.9261525907792738
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9102407180742554
  - 0.9326805385556917
  - 0.9220726234190126
  - 0.916360669114647
  - 0.9261525907792738
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8959948320413439
  - 0.917743324720069
  - 0.9116978492743488
  - 0.8955277280858677
  - 0.9150783936585651
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8574570127167748
  - 0.8826048356352089
  - 0.8394412305511496
  - 0.8468649083754218
  - 0.8373486013886499
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8622888000313615
  - 0.869926608636286
  - 0.8505906699449227
  - 0.8511914625658702
  - 0.8686918979934737
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8647248481845209
  - 0.8635447769570405
  - 0.850373103364919
  - 0.8453511717916996
  - 0.8799891360845364
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.38028434082521406
  - 0.39630249690726466
  - 0.35709055756640157
  - 0.3840032926714969
  - 0.36280341543624034
  train_average_precision_macro_oob:
  - 0.3064031315233054
  - 0.3068760516922918
  - 0.2857763726418381
  - 0.3057195573277061
  - 0.2787823785060435
  train_average_precision_micro:
  - 0.32693186604056457
  - 0.3382976376040488
  - 0.3027996697858838
  - 0.3249152495455915
  - 0.29654731010316404
  train_average_precision_micro_oob:
  - 0.2692376721011436
  - 0.2641617220941197
  - 0.25161290953845983
  - 0.2653729602192111
  - 0.23283628609480067
  train_average_precision_samples:
  - 0.34762090497071113
  - 0.3490713090204369
  - 0.32882850264148716
  - 0.34890812648806835
  - 0.3349260682254868
  train_average_precision_samples_oob:
  - 0.27596000511910435
  - 0.27618679451496786
  - 0.2672002160010581
  - 0.27329870826678854
  - 0.24759883641904332
  train_average_precision_weighted:
  - 0.509040219843825
  - 0.5107854555263592
  - 0.4837533427072121
  - 0.5088942954753206
  - 0.4733995293490412
  train_average_precision_weighted_oob:
  - 0.40901371106050655
  - 0.39375549740841664
  - 0.3957557952965769
  - 0.4108463528722068
  - 0.3675274887828018
  train_f1_macro:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781315
  - 0.9168706650346797
  - 0.910342717258262
  train_f1_macro_oob:
  - 0.9195226438188494
  - 0.9228886168910648
  - 0.9115667074663402
  - 0.9188086495308037
  - 0.914422684618523
  train_f1_micro:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781314
  - 0.9168706650346797
  - 0.9103427172582619
  train_f1_micro_oob:
  - 0.9195226438188494
  - 0.9228886168910648
  - 0.9115667074663403
  - 0.9188086495308038
  - 0.914422684618523
  train_f1_samples:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781315
  - 0.9168706650346798
  - 0.910342717258262
  train_f1_samples_oob:
  - 0.9195226438188495
  - 0.9228886168910648
  - 0.9115667074663404
  - 0.9188086495308038
  - 0.914422684618523
  train_f1_weighted:
  - 0.9146173037512253
  - 0.9075162966878084
  - 0.9059240577898794
  - 0.9123431859873364
  - 0.9064113437188471
  train_f1_weighted_oob:
  - 0.912348896611126
  - 0.9079420660089265
  - 0.9033351188084929
  - 0.9085559796437659
  - 0.9052135874659645
  train_jaccard_macro:
  - 0.8455141720526876
  - 0.8452325079987147
  - 0.8323971775216834
  - 0.8472453685521479
  - 0.8364455337882034
  train_jaccard_macro_oob:
  - 0.8518912035240079
  - 0.8581571461132894
  - 0.8380728338658257
  - 0.8508575440850854
  - 0.8436656488939391
  train_jaccard_micro:
  - 0.8449378998870907
  - 0.8440703470328224
  - 0.8320097169018033
  - 0.846501553818627
  - 0.8354394832912103
  train_jaccard_micro_oob:
  - 0.8510337015009912
  - 0.8568181818181818
  - 0.8375035141973574
  - 0.849811320754717
  - 0.8423376867424598
  train_jaccard_samples:
  - 0.8598487710781273
  - 0.862261028845382
  - 0.8484086793818847
  - 0.86272103563362
  - 0.8533474730157494
  train_jaccard_samples_oob:
  - 0.8653849026118997
  - 0.8725657275730204
  - 0.8530288642750725
  - 0.865247759343909
  - 0.8599724179318975
  train_jaccard_weighted:
  - 0.8429769071621359
  - 0.8314492682394166
  - 0.8283371127367674
  - 0.8392835186414364
  - 0.829340426062291
  train_jaccard_weighted_oob:
  - 0.8393262404247175
  - 0.8327308100982164
  - 0.8242401422593173
  - 0.8331652983838909
  - 0.8278364285767947
  train_label_ranking_average_precision_score:
  - 0.8088612150482298
  - 0.8044976656095834
  - 0.7861928437267579
  - 0.7965825450927189
  - 0.7922904093107577
  train_label_ranking_average_precision_score_oob:
  - 0.7372003151966233
  - 0.731613151104115
  - 0.7245645570863288
  - 0.7209731268714389
  - 0.704963177504314
  train_matthews_corrcoef_macro:
  - 0.34063671037760845
  - 0.27694051252542023
  - 0.32252802093021676
  - 0.3360480952393745
  - 0.3039033478156485
  train_matthews_corrcoef_macro_oob:
  - 0.303264625775805
  - 0.22700395963226533
  - 0.28784530084439763
  - 0.26867554206589694
  - 0.2759332952021933
  train_matthews_corrcoef_micro:
  - 0.35658690408394805
  - 0.30327026812572677
  - 0.3484547830355726
  - 0.3512979530919875
  - 0.32011742662301673
  train_matthews_corrcoef_micro_oob:
  - 0.31331578155658024
  - 0.27473486434538824
  - 0.3087049777919324
  - 0.2956786648470853
  - 0.28962296474821125
  train_matthews_corrcoef_samples:
  - 0.1569342512735359
  - 0.11387088775904794
  - 0.1582949189896427
  - 0.1592543008206767
  - 0.13218854944704092
  train_matthews_corrcoef_samples_oob:
  - 0.12625534591966037
  - 0.09304810920485611
  - 0.131230717110207
  - 0.12064186324940705
  - 0.10545844307019372
  train_matthews_corrcoef_weighted:
  - 0.417286204291777
  - 0.33494368246768047
  - 0.4029763743713738
  - 0.4042444195077486
  - 0.36987307824660137
  train_matthews_corrcoef_weighted_oob:
  - 0.3592200470372788
  - 0.28267843550523586
  - 0.3565872837876185
  - 0.32092121173093574
  - 0.3326861392999044
  train_ndgc:
  - 0.4059990390232716
  - 0.40777652175555124
  - 0.3940703755957944
  - 0.4085703404028801
  - 0.396256150159475
  train_ndgc_oob:
  - 0.3528873726919513
  - 0.35309894750165194
  - 0.34768653226675644
  - 0.352788480403205
  - 0.3311586618646681
  train_neg_coverage_error:
  - -2.1686046511627906
  - -2.182170542635659
  - -2.2635658914728682
  - -2.141472868217054
  - -2.2344961240310077
  train_neg_coverage_error_oob:
  - -3.6550387596899223
  - -3.7112403100775193
  - -3.496124031007752
  - -3.5406976744186047
  - -3.864341085271318
  train_neg_hamming_loss_macro:
  - -0.08404732762137901
  - -0.08455732354141167
  - -0.09169726642186862
  - -0.08312933496532028
  - -0.08965728274173808
  train_neg_hamming_loss_macro_oob:
  - -0.08047735618115055
  - -0.07711138310893513
  - -0.08843329253365972
  - -0.08119135046919625
  - -0.08557731538147696
  train_neg_hamming_loss_micro:
  - -0.08404732762137902
  - -0.08455732354141167
  - -0.09169726642186862
  - -0.08312933496532028
  - -0.08965728274173806
  train_neg_hamming_loss_micro_oob:
  - -0.08047735618115055
  - -0.07711138310893513
  - -0.08843329253365972
  - -0.08119135046919625
  - -0.08557731538147695
  train_neg_hamming_loss_samples:
  - -0.08404732762137902
  - -0.08455732354141166
  - -0.09169726642186861
  - -0.08312933496532027
  - -0.08965728274173805
  train_neg_hamming_loss_samples_oob:
  - -0.08047735618115055
  - -0.07711138310893512
  - -0.08843329253365972
  - -0.08119135046919625
  - -0.08557731538147695
  train_neg_hamming_loss_weighted:
  - -0.08538269624877484
  - -0.09248370331219169
  - -0.09407594221012067
  - -0.08765681401266347
  - -0.09358865628115282
  train_neg_hamming_loss_weighted_oob:
  - -0.08765110338887404
  - -0.09205793399107352
  - -0.0966648811915071
  - -0.0914440203562341
  - -0.09478641253403561
  train_neg_label_ranking_loss:
  - -0.05177197941390828
  - -0.05425666017748781
  - -0.056631127903357725
  - -0.05250106900243699
  - -0.05667810380960176
  train_neg_label_ranking_loss_oob:
  - -0.11237850710747428
  - -0.12173849861948355
  - -0.10943715664560397
  - -0.11232505002597341
  - -0.12541537460740607
  train_precision_macro:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781315
  - 0.9168706650346797
  - 0.910342717258262
  train_precision_macro_oob:
  - 0.9195226438188494
  - 0.9228886168910648
  - 0.9115667074663402
  - 0.9188086495308037
  - 0.914422684618523
  train_precision_micro:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781314
  - 0.9168706650346797
  - 0.9103427172582619
  train_precision_micro_oob:
  - 0.9195226438188494
  - 0.9228886168910648
  - 0.9115667074663403
  - 0.9188086495308038
  - 0.914422684618523
  train_precision_samples:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781315
  - 0.9168706650346798
  - 0.910342717258262
  train_precision_samples_oob:
  - 0.9195226438188495
  - 0.9228886168910648
  - 0.9115667074663404
  - 0.9188086495308038
  - 0.914422684618523
  train_precision_weighted:
  - 0.9146173037512253
  - 0.9075162966878084
  - 0.9059240577898794
  - 0.9123431859873364
  - 0.9064113437188471
  train_precision_weighted_oob:
  - 0.912348896611126
  - 0.9079420660089265
  - 0.9033351188084929
  - 0.9085559796437659
  - 0.9052135874659645
  train_recall_macro:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781315
  - 0.9168706650346797
  - 0.910342717258262
  train_recall_macro_oob:
  - 0.9195226438188494
  - 0.9228886168910648
  - 0.9115667074663402
  - 0.9188086495308037
  - 0.914422684618523
  train_recall_micro:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781314
  - 0.9168706650346797
  - 0.9103427172582619
  train_recall_micro_oob:
  - 0.9195226438188494
  - 0.9228886168910648
  - 0.9115667074663403
  - 0.9188086495308038
  - 0.914422684618523
  train_recall_samples:
  - 0.915952672378621
  - 0.9154426764585883
  - 0.9083027335781315
  - 0.9168706650346798
  - 0.910342717258262
  train_recall_samples_oob:
  - 0.9195226438188495
  - 0.9228886168910648
  - 0.9115667074663404
  - 0.9188086495308038
  - 0.914422684618523
  train_recall_weighted:
  - 0.9146173037512253
  - 0.9075162966878084
  - 0.9059240577898794
  - 0.9123431859873364
  - 0.9064113437188471
  train_recall_weighted_oob:
  - 0.912348896611126
  - 0.9079420660089265
  - 0.9033351188084929
  - 0.9085559796437659
  - 0.9052135874659645
  train_roc_auc_macro:
  - 0.9438526698900603
  - 0.9435463587975613
  - 0.9406639859004866
  - 0.9462539625982856
  - 0.9401476768625066
  train_roc_auc_macro_oob:
  - 0.8736591365875942
  - 0.8647958834995116
  - 0.8801311588107118
  - 0.8742220597901127
  - 0.862389055598228
  train_roc_auc_micro:
  - 0.9377871396126973
  - 0.939566876723248
  - 0.9345150971488757
  - 0.9403784301789944
  - 0.9342874505085659
  train_roc_auc_micro_oob:
  - 0.8758033717465767
  - 0.8741240836567485
  - 0.8816671673790015
  - 0.8787925276388524
  - 0.8672741516854432
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9500363622630922
  - 0.9481079716986387
  - 0.9444100685284949
  - 0.9504049330360568
  - 0.9456668026904338
  train_roc_auc_weighted_oob:
  - 0.8778052113130618
  - 0.8707942288216038
  - 0.878938347359059
  - 0.8759501792629293
  - 0.8631984247773737
start: 2023-12-12 17:06:46.753769
wrapper: null
