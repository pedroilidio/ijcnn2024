active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          oJmZmZmZEUCAZmZmZmb2P4CZmZmZmfm/gJmZmZmZ+b/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:51:37.387353
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__8
  params: {}
hash: cf80505c8041fd2f894da3a2c61d972460ad00838117e84e8ce4e1d93bf8da53
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cf80505_20231221T065044264863_embedding__8_VirusGO.yml
results:
  fit_time:
  - 41.60148620605469
  - 41.588268518447876
  - 42.057666063308716
  - 42.63128852844238
  - 42.33300828933716
  score_time:
  - 3.0748178958892822
  - 3.179025411605835
  - 3.409316062927246
  - 3.351438522338867
  - 3.4186148643493652
  test_average_precision_macro:
  - 0.9058844533696871
  - 0.9652354752100359
  - 0.9638414025741016
  - 0.990580921646529
  - 0.9790388628026987
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8676124007794223
  - 0.9364371396814817
  - 0.9283491049189434
  - 0.9548713448539496
  - 0.9424535140919531
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9130630630630631
  - 0.9729166666666667
  - 0.9193798449612403
  - 0.943798449612403
  - 0.9829545454545454
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9043935770640076
  - 0.9624203440774807
  - 0.9695697945845005
  - 0.9860231753970143
  - 0.9795388263267519
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9279279279279279
  - 0.9249999999999999
  - 0.9302325581395349
  - 0.9263565891472867
  - 0.9166666666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9279279279279279
  - 0.925
  - 0.9302325581395349
  - 0.9263565891472868
  - 0.9166666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9279279279279278
  - 0.925
  - 0.9302325581395349
  - 0.9263565891472869
  - 0.9166666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9215686274509803
  - 0.9107142857142857
  - 0.9232558139534883
  - 0.9172093023255813
  - 0.9143356643356643
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8666137278781694
  - 0.8617850710873967
  - 0.8716915921471887
  - 0.8644104862999403
  - 0.8473984993318943
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.865546218487395
  - 0.8604651162790697
  - 0.8695652173913043
  - 0.8628158844765343
  - 0.8461538461538461
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8861003861003861
  - 0.881547619047619
  - 0.8837209302325583
  - 0.8815060908084164
  - 0.8679653679653679
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8548810176122718
  - 0.8373277832224201
  - 0.8580858772741289
  - 0.8485746970164176
  - 0.8430303138119976
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9130630630630631
  - 0.9729166666666668
  - 0.9193798449612403
  - 0.943798449612403
  - 0.9829545454545454
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.49642152102212983
  - 0.5853925586834398
  - 0.6154703092064066
  - 0.41963386987500345
  - 0.4166417819900603
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7887098549691179
  - 0.7575873569421767
  - 0.7646623751898065
  - 0.7517504049408098
  - 0.7190644623508835
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7498535186919185
  - 0.7286841649025257
  - 0.6867400494915047
  - 0.6759281642806361
  - 0.657924620410239
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7257320978349051
  - 0.7156133086672039
  - 0.7101142317297815
  - 0.6578816288276604
  - 0.6457881430430896
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9379159391771754
  - 0.981101923658423
  - 0.9409586596334887
  - 0.9591438746031618
  - 0.9893833632253102
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7567567567567568
  - -1.3
  - -1.3953488372093024
  - -1.3255813953488371
  - -1.25
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07207207207207207
  - -0.075
  - -0.06976744186046512
  - -0.07364341085271318
  - -0.08333333333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07207207207207207
  - -0.075
  - -0.06976744186046512
  - -0.07364341085271318
  - -0.08333333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07207207207207207
  - -0.075
  - -0.06976744186046512
  - -0.07364341085271317
  - -0.08333333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0784313725490196
  - -0.08928571428571429
  - -0.07674418604651162
  - -0.08279069767441859
  - -0.08566433566433564
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06756756756756757
  - -0.014374999999999999
  - -0.044767441860465114
  - -0.030813953488372098
  - -0.011363636363636364
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9279279279279279
  - 0.9249999999999999
  - 0.9302325581395349
  - 0.9263565891472867
  - 0.9166666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9279279279279279
  - 0.925
  - 0.9302325581395349
  - 0.9263565891472868
  - 0.9166666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9279279279279278
  - 0.925
  - 0.9302325581395349
  - 0.9263565891472869
  - 0.9166666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9215686274509803
  - 0.9107142857142857
  - 0.9232558139534883
  - 0.9172093023255813
  - 0.9143356643356643
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9279279279279279
  - 0.9249999999999999
  - 0.9302325581395349
  - 0.9263565891472867
  - 0.9166666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9279279279279279
  - 0.925
  - 0.9302325581395349
  - 0.9263565891472868
  - 0.9166666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9279279279279278
  - 0.925
  - 0.9302325581395349
  - 0.9263565891472869
  - 0.9166666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9215686274509803
  - 0.9107142857142857
  - 0.9232558139534883
  - 0.9172093023255813
  - 0.9143356643356643
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9456865760658331
  - 0.9874172646111585
  - 0.9861739567621921
  - 0.9958555840908782
  - 0.9940976586503547
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9553950235064785
  - 0.9820493642483171
  - 0.9770192307692309
  - 0.9867307692307692
  - 0.9813588534107401
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9324324324324325
  - 0.985625
  - 0.955232558139535
  - 0.9691860465116279
  - 0.9886363636363636
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9412695062075866
  - 0.9804371023771827
  - 0.9851282051282051
  - 0.9925363825363825
  - 0.9906633519614287
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.995717675409531
  - 0.9875691832282175
  - 0.9880785629604708
  - 0.987106008755611
  - 0.986673351880921
  train_average_precision_macro_oob:
  - 0.9546376757416745
  - 0.9354218992604414
  - 0.9274770429161765
  - 0.930589491884319
  - 0.9214490369872976
  train_average_precision_micro:
  - 0.9732836928540399
  - 0.9695168682684825
  - 0.966407378852166
  - 0.9669135946568923
  - 0.9642595929537302
  train_average_precision_micro_oob:
  - 0.9299081258651647
  - 0.9149010882190565
  - 0.9150224355112798
  - 0.9013823544463457
  - 0.9093793622931629
  train_average_precision_samples:
  - 0.9843137254901961
  - 0.9795409181636725
  - 0.9751016260162603
  - 0.9771341463414634
  - 0.9775051124744377
  train_average_precision_samples_oob:
  - 0.9370588235294116
  - 0.93313373253493
  - 0.9346544715447155
  - 0.934349593495935
  - 0.9297546012269937
  train_average_precision_weighted:
  - 0.9932299608589337
  - 0.9889862630865053
  - 0.9884252277428464
  - 0.9870989761601777
  - 0.9876390328516229
  train_average_precision_weighted_oob:
  - 0.9594857159381733
  - 0.9401234888750636
  - 0.941235915039185
  - 0.9329245713899628
  - 0.9337825664006736
  train_f1_macro:
  - 0.9421568627450981
  - 0.940119760479042
  - 0.9491869918699187
  - 0.9441056910569104
  - 0.9376278118609407
  train_f1_macro_oob:
  - 0.9098039215686274
  - 0.9191616766467066
  - 0.9095528455284553
  - 0.9247967479674797
  - 0.9212678936605316
  train_f1_micro:
  - 0.942156862745098
  - 0.9401197604790419
  - 0.9491869918699187
  - 0.9441056910569106
  - 0.9376278118609407
  train_f1_micro_oob:
  - 0.9098039215686274
  - 0.9191616766467066
  - 0.9095528455284553
  - 0.9247967479674797
  - 0.9212678936605317
  train_f1_samples:
  - 0.9421568627450981
  - 0.9401197604790419
  - 0.9491869918699186
  - 0.9441056910569104
  - 0.9376278118609408
  train_f1_samples_oob:
  - 0.9098039215686275
  - 0.9191616766467066
  - 0.9095528455284554
  - 0.9247967479674796
  - 0.9212678936605319
  train_f1_weighted:
  - 0.940854550775534
  - 0.9389988495914575
  - 0.9467519922723978
  - 0.9438541415117121
  - 0.9365950920245399
  train_f1_weighted_oob:
  - 0.8952297336845185
  - 0.9183209934810183
  - 0.9014127022458344
  - 0.9150567495773968
  - 0.9164723926380368
  train_jaccard_macro:
  - 0.8907652297482805
  - 0.8872888841524461
  - 0.9047231416448049
  - 0.8950139398438709
  - 0.8833384401319275
  train_jaccard_macro_oob:
  - 0.8356919400101072
  - 0.8513522588888697
  - 0.8349995450028492
  - 0.8609112427108162
  - 0.8547123919273405
  train_jaccard_micro:
  - 0.8906394810009268
  - 0.8870056497175142
  - 0.9032882011605415
  - 0.8941289701636189
  - 0.8825794032723773
  train_jaccard_micro_oob:
  - 0.8345323741007195
  - 0.850415512465374
  - 0.8341099720410066
  - 0.8601134215500945
  - 0.8540284360189574
  train_jaccard_samples:
  - 0.9068627450980393
  - 0.9034787567721699
  - 0.9194250871080138
  - 0.9096980255516842
  - 0.8980426526438796
  train_jaccard_samples_oob:
  - 0.8558823529411764
  - 0.869261477045908
  - 0.8567073170731707
  - 0.8779036004645762
  - 0.8726263511539585
  train_jaccard_weighted:
  - 0.8883515412733728
  - 0.8851268131978447
  - 0.8993664603528252
  - 0.8941724998950467
  - 0.8811252338026914
  train_jaccard_weighted_oob:
  - 0.8111589504563586
  - 0.8493833106850904
  - 0.8209615370822602
  - 0.8438524288279918
  - 0.846064892458232
  train_label_ranking_average_precision_score:
  - 0.9843137254901959
  - 0.9795409181636725
  - 0.9751016260162599
  - 0.9771341463414634
  - 0.9775051124744375
  train_label_ranking_average_precision_score_oob:
  - 0.9370588235294116
  - 0.9331337325349301
  - 0.9346544715447155
  - 0.9343495934959348
  - 0.9297546012269939
  train_matthews_corrcoef_macro:
  - 0.5981279462633833
  - 0.5788287619324474
  - 0.7022043498319467
  - 0.543954703059424
  - 0.5123934784170447
  train_matthews_corrcoef_macro_oob:
  - 0.396403740703142
  - 0.406009806859365
  - 0.3899711941984412
  - 0.4833344316933017
  - 0.4479458746333688
  train_matthews_corrcoef_micro:
  - 0.8099228919828607
  - 0.807211906231623
  - 0.8393187532314359
  - 0.82255500591472
  - 0.8003174594398036
  train_matthews_corrcoef_micro_oob:
  - 0.6938358921776996
  - 0.7348885933332758
  - 0.7042422156980958
  - 0.7575912468073221
  - 0.7444068371023479
  train_matthews_corrcoef_samples:
  - 0.7628947046370771
  - 0.7639541640693043
  - 0.8141185020457711
  - 0.7816774601404883
  - 0.7445489830040368
  train_matthews_corrcoef_samples_oob:
  - 0.6164318617073681
  - 0.6484010706794777
  - 0.6347592882404824
  - 0.7060355893612328
  - 0.6681847707580182
  train_matthews_corrcoef_weighted:
  - 0.7775064130607695
  - 0.7729997537601417
  - 0.7947047216216131
  - 0.7659604031843648
  - 0.7400734432701159
  train_matthews_corrcoef_weighted_oob:
  - 0.6140165454157288
  - 0.6611145992362548
  - 0.6231938913351796
  - 0.6919531251789449
  - 0.677170733806605
  train_ndgc:
  - 0.9894270715934034
  - 0.9850654877453882
  - 0.9820523597329237
  - 0.984122125454243
  - 0.9838230711201362
  train_ndgc_oob:
  - 0.9551914530525768
  - 0.9521835318620834
  - 0.9536613166012894
  - 0.9529098817758024
  - 0.9506215635538043
  train_neg_coverage_error:
  - -1.2294117647058824
  - -1.2694610778443114
  - -1.298780487804878
  - -1.298780487804878
  - -1.2883435582822085
  train_neg_coverage_error_oob:
  - -1.3823529411764706
  - -1.4191616766467066
  - -1.451219512195122
  - -1.4573170731707317
  - -1.49079754601227
  train_neg_hamming_loss_macro:
  - -0.057843137254901957
  - -0.05988023952095809
  - -0.05081300813008131
  - -0.05589430894308942
  - -0.06237218813905931
  train_neg_hamming_loss_macro_oob:
  - -0.09019607843137255
  - -0.08083832335329341
  - -0.09044715447154472
  - -0.07520325203252032
  - -0.07873210633946831
  train_neg_hamming_loss_micro:
  - -0.05784313725490196
  - -0.059880239520958084
  - -0.0508130081300813
  - -0.05589430894308943
  - -0.06237218813905931
  train_neg_hamming_loss_micro_oob:
  - -0.09019607843137255
  - -0.08083832335329341
  - -0.09044715447154472
  - -0.07520325203252033
  - -0.0787321063394683
  train_neg_hamming_loss_samples:
  - -0.057843137254901957
  - -0.059880239520958084
  - -0.05081300813008129
  - -0.055894308943089416
  - -0.0623721881390593
  train_neg_hamming_loss_samples_oob:
  - -0.09019607843137255
  - -0.08083832335329341
  - -0.09044715447154471
  - -0.07520325203252032
  - -0.0787321063394683
  train_neg_hamming_loss_weighted:
  - -0.0591454492244659
  - -0.061001150408542516
  - -0.05324800772760203
  - -0.056145858488287854
  - -0.06340490797546013
  train_neg_hamming_loss_weighted_oob:
  - -0.10477026631548143
  - -0.08167900651898174
  - -0.09858729775416568
  - -0.08494325042260324
  - -0.08352760736196319
  train_neg_label_ranking_loss:
  - -0.007647058823529412
  - -0.010628742514970061
  - -0.012804878048780489
  - -0.011890243902439025
  - -0.011349693251533743
  train_neg_label_ranking_loss_oob:
  - -0.035571895424836596
  - -0.0377245508982036
  - -0.038770325203252035
  - -0.041920731707317076
  - -0.045620313565098845
  train_precision_macro:
  - 0.9421568627450981
  - 0.940119760479042
  - 0.9491869918699187
  - 0.9441056910569104
  - 0.9376278118609407
  train_precision_macro_oob:
  - 0.9098039215686274
  - 0.9191616766467066
  - 0.9095528455284553
  - 0.9247967479674797
  - 0.9212678936605316
  train_precision_micro:
  - 0.942156862745098
  - 0.9401197604790419
  - 0.9491869918699187
  - 0.9441056910569106
  - 0.9376278118609407
  train_precision_micro_oob:
  - 0.9098039215686274
  - 0.9191616766467066
  - 0.9095528455284553
  - 0.9247967479674797
  - 0.9212678936605317
  train_precision_samples:
  - 0.9421568627450981
  - 0.9401197604790419
  - 0.9491869918699186
  - 0.9441056910569104
  - 0.9376278118609408
  train_precision_samples_oob:
  - 0.9098039215686275
  - 0.9191616766467066
  - 0.9095528455284554
  - 0.9247967479674796
  - 0.9212678936605319
  train_precision_weighted:
  - 0.940854550775534
  - 0.9389988495914575
  - 0.9467519922723978
  - 0.9438541415117121
  - 0.9365950920245399
  train_precision_weighted_oob:
  - 0.8952297336845185
  - 0.9183209934810183
  - 0.9014127022458344
  - 0.9150567495773968
  - 0.9164723926380368
  train_recall_macro:
  - 0.9421568627450981
  - 0.940119760479042
  - 0.9491869918699187
  - 0.9441056910569104
  - 0.9376278118609407
  train_recall_macro_oob:
  - 0.9098039215686274
  - 0.9191616766467066
  - 0.9095528455284553
  - 0.9247967479674797
  - 0.9212678936605316
  train_recall_micro:
  - 0.942156862745098
  - 0.9401197604790419
  - 0.9491869918699187
  - 0.9441056910569106
  - 0.9376278118609407
  train_recall_micro_oob:
  - 0.9098039215686274
  - 0.9191616766467066
  - 0.9095528455284553
  - 0.9247967479674797
  - 0.9212678936605317
  train_recall_samples:
  - 0.9421568627450981
  - 0.9401197604790419
  - 0.9491869918699186
  - 0.9441056910569104
  - 0.9376278118609408
  train_recall_samples_oob:
  - 0.9098039215686275
  - 0.9191616766467066
  - 0.9095528455284554
  - 0.9247967479674796
  - 0.9212678936605319
  train_recall_weighted:
  - 0.940854550775534
  - 0.9389988495914575
  - 0.9467519922723978
  - 0.9438541415117121
  - 0.9365950920245399
  train_recall_weighted_oob:
  - 0.8952297336845185
  - 0.9183209934810183
  - 0.9014127022458344
  - 0.9150567495773968
  - 0.9164723926380368
  train_roc_auc_macro:
  - 0.9979497238417543
  - 0.9963087285928484
  - 0.9960932150252736
  - 0.9950997786160428
  - 0.9957714548094891
  train_roc_auc_macro_oob:
  - 0.9832733908889503
  - 0.9773789990893942
  - 0.9744897220464136
  - 0.9693582199800407
  - 0.9669334085094393
  train_roc_auc_micro:
  - 0.992342925178746
  - 0.9911743127184843
  - 0.9893899875921096
  - 0.9898014737535135
  - 0.9886664524421594
  train_roc_auc_micro_oob:
  - 0.9772140518409175
  - 0.9724964086882001
  - 0.969898204654225
  - 0.9680180294244259
  - 0.9677827763496144
  train_roc_auc_samples:
  - 0.9923529411764705
  - 0.9893712574850301
  - 0.9871951219512195
  - 0.988109756097561
  - 0.9886503067484663
  train_roc_auc_samples_oob:
  - 0.9644281045751635
  - 0.9622754491017965
  - 0.9612296747967479
  - 0.958079268292683
  - 0.954379686434901
  train_roc_auc_weighted:
  - 0.9960089354620354
  - 0.9950326201112774
  - 0.9943406394046632
  - 0.9927818335710684
  - 0.9939685551771571
  train_roc_auc_weighted_oob:
  - 0.9801852519144173
  - 0.9723097078254627
  - 0.972945458448086
  - 0.9629131850857058
  - 0.9656711759191176
start: 2023-12-21 06:50:44.264863
wrapper: null
