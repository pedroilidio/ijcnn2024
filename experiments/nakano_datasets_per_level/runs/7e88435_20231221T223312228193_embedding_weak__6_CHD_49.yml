active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z/MzMzMzMz8v6CZmZmZmck/mJmZmZmZ6b80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAADwPwAAAAAAAPA/AAAAAAAAAMAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:35:04.660641
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__6
  params: {}
hash: 7e88435ed0430a368793ea52fe9eef5447c79d20d87ff5df711bf7306351448d
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7e88435_20231221T223312228193_embedding_weak__6_CHD_49.yml
results:
  fit_time:
  - 93.69712376594543
  - 93.78150963783264
  - 94.75702857971191
  - 95.98621773719788
  - 95.32129240036011
  score_time:
  - 4.316424131393433
  - 4.209112882614136
  - 4.566372394561768
  - 4.913594722747803
  - 4.580366373062134
  test_average_precision_macro:
  - 0.5332687487634059
  - 0.5636958932331545
  - 0.5535398570875056
  - 0.5244254622760147
  - 0.5226970077512251
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6917284820047578
  - 0.6990318505236267
  - 0.6918163186627919
  - 0.6658691306185218
  - 0.6874890832735211
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7797547547547548
  - 0.7816666666666666
  - 0.79989898989899
  - 0.7537241887905604
  - 0.7786786786786788
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6584086616352104
  - 0.6768322663098778
  - 0.6693295959431971
  - 0.6364788236676481
  - 0.6539159517509425
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7012012012012012
  - 0.6863636363636365
  - 0.706060606060606
  - 0.6843657817109144
  - 0.6906906906906908
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7012012012012012
  - 0.6863636363636364
  - 0.706060606060606
  - 0.6843657817109144
  - 0.6906906906906907
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7012012012012011
  - 0.6863636363636363
  - 0.7060606060606059
  - 0.6843657817109144
  - 0.6906906906906904
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6534069280548154
  - 0.6488320707070707
  - 0.6627177700348432
  - 0.6392412896837676
  - 0.6463571585522805
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5629204999106173
  - 0.5435184170179854
  - 0.5676635503812509
  - 0.5425110777889625
  - 0.5513597167509376
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5398843930635838
  - 0.5224913494809689
  - 0.5456674473067916
  - 0.5201793721973094
  - 0.5275229357798165
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5780000780000781
  - 0.5577134986225897
  - 0.5761471861471862
  - 0.5622495498601694
  - 0.561011661011661
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49328571217225664
  - 0.4895530202333203
  - 0.5048481853675101
  - 0.4784916818495177
  - 0.48576913154488216
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7797547547547544
  - 0.7998484848484847
  - 0.7998989898989903
  - 0.7537241887905606
  - 0.7876876876876877
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03893867794365689
  - 0.03625279981109186
  - 0.08792210579304031
  - 0.0412552773417781
  - 0.03685222042171978
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4242373863768418
  - 0.3838078195203013
  - 0.42684805808231313
  - 0.38604672369763327
  - 0.40141161582576584
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.43289217121864504
  - 0.3925583136725063
  - 0.4390693803678763
  - 0.3866166260647767
  - 0.40878213479662284
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.037086743907937474
  - 0.028996475106858724
  - 0.07450419232522539
  - 0.035671277386484276
  - 0.03216703522483725
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.853234907778572
  - 0.854476981608771
  - 0.8734027588081374
  - 0.8351958279289392
  - 0.8526630183777064
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8018018018018016
  - -3.8181818181818183
  - -3.8454545454545452
  - -3.84070796460177
  - -3.8378378378378377
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29879879879879884
  - -0.31363636363636366
  - -0.29393939393939394
  - -0.31563421828908556
  - -0.3093093093093093
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2987987987987988
  - -0.31363636363636366
  - -0.29393939393939394
  - -0.31563421828908556
  - -0.30930930930930933
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2987987987987987
  - -0.31363636363636366
  - -0.29393939393939394
  - -0.3156342182890855
  - -0.3093093093093092
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3465930719451846
  - -0.3511679292929293
  - -0.3372822299651567
  - -0.3607587103162324
  - -0.3536428414477195
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21078578578578577
  - -0.20681818181818185
  - -0.2023484848484848
  - -0.23824975417895772
  - -0.21636636636636636
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7012012012012012
  - 0.6863636363636365
  - 0.706060606060606
  - 0.6843657817109144
  - 0.6906906906906908
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7012012012012012
  - 0.6863636363636364
  - 0.706060606060606
  - 0.6843657817109144
  - 0.6906906906906907
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7012012012012011
  - 0.6863636363636363
  - 0.7060606060606059
  - 0.6843657817109144
  - 0.6906906906906904
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6534069280548154
  - 0.6488320707070707
  - 0.6627177700348432
  - 0.6392412896837676
  - 0.6463571585522805
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7012012012012012
  - 0.6863636363636365
  - 0.706060606060606
  - 0.6843657817109144
  - 0.6906906906906908
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7012012012012012
  - 0.6863636363636364
  - 0.706060606060606
  - 0.6843657817109144
  - 0.6906906906906907
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7012012012012011
  - 0.6863636363636363
  - 0.7060606060606059
  - 0.6843657817109144
  - 0.6906906906906904
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6534069280548154
  - 0.6488320707070707
  - 0.6627177700348432
  - 0.6392412896837676
  - 0.6463571585522805
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5606062793639817
  - 0.6267261787952468
  - 0.6021444789815807
  - 0.5985763047245248
  - 0.599077540252242
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7906773099328958
  - 0.7875317353643967
  - 0.7856629083334112
  - 0.7728967461110318
  - 0.7793018488043908
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7892142142142143
  - .nan
  - 0.7976515151515152
  - 0.7617502458210423
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6210652605691348
  - 0.6235382388951712
  - 0.5829076904758226
  - 0.6100390093493224
  - 0.5804018446491354
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8698747303095188
  - 0.8664161640537253
  - 0.8749690813104917
  - 0.8605570694730083
  - 0.8651711623214853
  train_average_precision_macro_oob:
  - 0.6238595086739781
  - 0.6256214008209982
  - 0.6250001622664696
  - 0.6379391890552796
  - 0.6236098028127803
  train_average_precision_micro:
  - 0.7419234433570161
  - 0.7485370911392868
  - 0.7469808959616324
  - 0.7327073598689511
  - 0.7493950277453103
  train_average_precision_micro_oob:
  - 0.7110395716809863
  - 0.7082472909007538
  - 0.6951452199558297
  - 0.7089976181304907
  - 0.7117848162564453
  train_average_precision_samples:
  - 0.8090746996996996
  - 0.8010955056179774
  - 0.8105742821473159
  - 0.8065925087983911
  - 0.8075168918918918
  train_average_precision_samples_oob:
  - 0.7898304554554554
  - 0.7835049937578028
  - 0.7859519350811485
  - 0.7903563348416289
  - 0.7888357107107107
  train_average_precision_weighted:
  - 0.8268972635114593
  - 0.8209811118710644
  - 0.8297196032801596
  - 0.810651132335531
  - 0.8225908574099305
  train_average_precision_weighted_oob:
  - 0.7392289880396387
  - 0.7392197467806361
  - 0.7307945482144794
  - 0.7488537490830212
  - 0.7369486331727038
  train_f1_macro:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861425
  - 0.7903469079939668
  - 0.7864114114114115
  train_f1_macro_oob:
  - 0.7105855855855857
  - 0.7194756554307117
  - 0.7164794007490635
  - 0.7258672699849171
  - 0.71996996996997
  train_f1_micro:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861423
  - 0.7903469079939668
  - 0.7864114114114115
  train_f1_micro_oob:
  - 0.7105855855855856
  - 0.7194756554307116
  - 0.7164794007490637
  - 0.725867269984917
  - 0.71996996996997
  train_f1_samples:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861423
  - 0.7903469079939668
  - 0.7864114114114114
  train_f1_samples_oob:
  - 0.7105855855855856
  - 0.7194756554307117
  - 0.7164794007490638
  - 0.7258672699849171
  - 0.71996996996997
  train_f1_weighted:
  - 0.727194964999843
  - 0.729971713679579
  - 0.7251126048770914
  - 0.7310021874234993
  - 0.730132971399347
  train_f1_weighted_oob:
  - 0.6650265247826224
  - 0.6700223933370001
  - 0.6683067562926255
  - 0.677712365655082
  - 0.6719186435343641
  train_jaccard_macro:
  - 0.681962527402308
  - 0.6910413976483544
  - 0.6807954121449858
  - 0.6903821997313256
  - 0.6818269202802621
  train_jaccard_macro_oob:
  - 0.5728880922458739
  - 0.5846750031497127
  - 0.5804607243239571
  - 0.5922394273133665
  - 0.5846385142414074
  train_jaccard_micro:
  - 0.646477132262052
  - 0.653250773993808
  - 0.6445950107791808
  - 0.6533665835411472
  - 0.6480049489638107
  train_jaccard_micro_oob:
  - 0.5510917030567686
  - 0.5618601930389002
  - 0.5582141814998541
  - 0.5696951760875999
  - 0.5624633431085044
  train_jaccard_samples:
  - 0.6797092547092546
  - 0.6850187265917603
  - 0.6783530327350552
  - 0.6864155452390744
  - 0.681082056082056
  train_jaccard_samples_oob:
  - 0.5865410865410866
  - 0.594768228026655
  - 0.5935162216061092
  - 0.6046336016924253
  - 0.5983395733395733
  train_jaccard_weighted:
  - 0.5983696085533499
  - 0.6034867409978909
  - 0.5961477803982929
  - 0.604349588526575
  - 0.6004036776228083
  train_jaccard_weighted_oob:
  - 0.5078546357471898
  - 0.514014592874874
  - 0.5119018960503005
  - 0.5233890393851088
  - 0.5164999867810465
  train_label_ranking_average_precision_score:
  - 0.8158314564564563
  - 0.803342696629213
  - 0.817315855181023
  - 0.8133798391151326
  - 0.8120213963963959
  train_label_ranking_average_precision_score_oob:
  - 0.7965872122122115
  - 0.7857521847690381
  - 0.7926935081148556
  - 0.7971436651583704
  - 0.7933402152152147
  train_matthews_corrcoef_macro:
  - 0.31567833741211887
  - 0.32359346951751355
  - 0.3085920149657142
  - 0.3198646194048145
  - 0.33150567259920877
  train_matthews_corrcoef_macro_oob:
  - 0.11799301500755856
  - 0.14072323113051505
  - 0.1365636624682329
  - 0.14958880193020793
  - 0.14505925849128087
  train_matthews_corrcoef_micro:
  - 0.6135613289273147
  - 0.626098540203957
  - 0.6111730649991595
  - 0.62511952263974
  - 0.6133797594286474
  train_matthews_corrcoef_micro_oob:
  - 0.43354353027583653
  - 0.45429303780593594
  - 0.4474743099186397
  - 0.46880454395340426
  - 0.4566725805302624
  train_matthews_corrcoef_samples:
  - 0.6305647768191838
  - 0.6467390782242388
  - 0.626215097072822
  - 0.6403047925266661
  - 0.6305478708639326
  train_matthews_corrcoef_samples_oob:
  - 0.4447666634179705
  - 0.4693072208108739
  - 0.4572485661894779
  - 0.4825726756554564
  - 0.468073781497633
  train_matthews_corrcoef_weighted:
  - 0.2697390588155791
  - 0.2815519617504496
  - 0.2661021809012329
  - 0.27393158052732286
  - 0.2968907822322253
  train_matthews_corrcoef_weighted_oob:
  - 0.09855967814729932
  - 0.11622817865247112
  - 0.11239940517984756
  - 0.12398256248910472
  - 0.11888021172774509
  train_ndgc:
  - 0.8737261622842811
  - 0.8676441983458365
  - 0.8741356532346579
  - 0.8707829263372585
  - 0.872375375749836
  train_ndgc_oob:
  - 0.8619194305156257
  - 0.8562505978049123
  - 0.8578215856786247
  - 0.8603492361106608
  - 0.860853205218687
  train_neg_coverage_error:
  - -3.5518018018018016
  - -3.5258426966292133
  - -3.5033707865168537
  - -3.52262443438914
  - -3.518018018018018
  train_neg_coverage_error_oob:
  - -3.725225225225225
  - -3.696629213483146
  - -3.6921348314606743
  - -3.671945701357466
  - -3.722972972972973
  train_neg_hamming_loss_macro:
  - -0.21471471471471473
  - -0.2097378277153558
  - -0.2161048689138577
  - -0.2096530920060332
  - -0.21358858858858856
  train_neg_hamming_loss_macro_oob:
  - -0.2894144144144144
  - -0.28052434456928843
  - -0.28352059925093637
  - -0.2741327300150829
  - -0.28003003003003
  train_neg_hamming_loss_micro:
  - -0.2147147147147147
  - -0.20973782771535582
  - -0.2161048689138577
  - -0.2096530920060332
  - -0.2135885885885886
  train_neg_hamming_loss_micro_oob:
  - -0.2894144144144144
  - -0.2805243445692884
  - -0.2835205992509363
  - -0.274132730015083
  - -0.28003003003003
  train_neg_hamming_loss_samples:
  - -0.2147147147147147
  - -0.2097378277153558
  - -0.21610486891385766
  - -0.20965309200603316
  - -0.2135885885885886
  train_neg_hamming_loss_samples_oob:
  - -0.2894144144144144
  - -0.2805243445692884
  - -0.2835205992509363
  - -0.274132730015083
  - -0.28003003003003
  train_neg_hamming_loss_weighted:
  - -0.27280503500015696
  - -0.27002828632042114
  - -0.2748873951229086
  - -0.2689978125765006
  - -0.26986702860065304
  train_neg_hamming_loss_weighted_oob:
  - -0.33497347521737764
  - -0.32997760666299997
  - -0.3316932437073745
  - -0.322287634344918
  - -0.3280813564656359
  train_neg_label_ranking_loss:
  - -0.16480855855855858
  - -0.17051186017478154
  - -0.16303995006242197
  - -0.16461789844142785
  - -0.16463963963963962
  train_neg_label_ranking_loss_oob:
  - -0.19481981981981983
  - -0.19825842696629215
  - -0.19621722846441947
  - -0.1889957264957265
  - -0.19891141141141142
  train_precision_macro:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861425
  - 0.7903469079939668
  - 0.7864114114114115
  train_precision_macro_oob:
  - 0.7105855855855857
  - 0.7194756554307117
  - 0.7164794007490635
  - 0.7258672699849171
  - 0.71996996996997
  train_precision_micro:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861423
  - 0.7903469079939668
  - 0.7864114114114115
  train_precision_micro_oob:
  - 0.7105855855855856
  - 0.7194756554307116
  - 0.7164794007490637
  - 0.725867269984917
  - 0.71996996996997
  train_precision_samples:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861423
  - 0.7903469079939668
  - 0.7864114114114114
  train_precision_samples_oob:
  - 0.7105855855855856
  - 0.7194756554307117
  - 0.7164794007490638
  - 0.7258672699849171
  - 0.71996996996997
  train_precision_weighted:
  - 0.727194964999843
  - 0.729971713679579
  - 0.7251126048770914
  - 0.7310021874234993
  - 0.730132971399347
  train_precision_weighted_oob:
  - 0.6650265247826224
  - 0.6700223933370001
  - 0.6683067562926255
  - 0.677712365655082
  - 0.6719186435343641
  train_recall_macro:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861425
  - 0.7903469079939668
  - 0.7864114114114115
  train_recall_macro_oob:
  - 0.7105855855855857
  - 0.7194756554307117
  - 0.7164794007490635
  - 0.7258672699849171
  - 0.71996996996997
  train_recall_micro:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861423
  - 0.7903469079939668
  - 0.7864114114114115
  train_recall_micro_oob:
  - 0.7105855855855856
  - 0.7194756554307116
  - 0.7164794007490637
  - 0.725867269984917
  - 0.71996996996997
  train_recall_samples:
  - 0.7852852852852853
  - 0.7902621722846442
  - 0.7838951310861423
  - 0.7903469079939668
  - 0.7864114114114114
  train_recall_samples_oob:
  - 0.7105855855855856
  - 0.7194756554307117
  - 0.7164794007490638
  - 0.7258672699849171
  - 0.71996996996997
  train_recall_weighted:
  - 0.727194964999843
  - 0.729971713679579
  - 0.7251126048770914
  - 0.7310021874234993
  - 0.730132971399347
  train_recall_weighted_oob:
  - 0.6650265247826224
  - 0.6700223933370001
  - 0.6683067562926255
  - 0.677712365655082
  - 0.6719186435343641
  train_roc_auc_macro:
  - 0.8440445806063166
  - 0.848005838697763
  - 0.8457755560786647
  - 0.8313153166667444
  - 0.8401905307640241
  train_roc_auc_macro_oob:
  - 0.6711277017566593
  - 0.6598497727877174
  - 0.6709547652519262
  - 0.652397469291521
  - 0.682329720243608
  train_roc_auc_micro:
  - 0.8430254405964717
  - 0.8468466739682335
  - 0.8478247548142315
  - 0.8432943618197367
  - 0.8453539015268031
  train_roc_auc_micro_oob:
  - 0.8055882434059922
  - 0.8095539781319597
  - 0.808381415992555
  - 0.8108357726742825
  - 0.8059054020255799
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7757942470203574
  - 0.7821423785405262
  - 0.7742480953291737
  - 0.7541049395233153
  - 0.7722547152223139
  train_roc_auc_weighted_oob:
  - 0.6916232450619305
  - 0.6902844266544585
  - 0.6692082354120216
  - 0.6875132781521806
  - 0.6931155596061643
start: 2023-12-21 22:33:12.228193
wrapper: null
