active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMCgmZmZmZkVQAAzMzMzM+O/ADMzMzMz478AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:01:40.651626
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__8
  params: {}
hash: b8c8344b7ed66666b70ceb5ed1831403501376d30befe7d219b29109e36d889a
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b8c8344_20231221T075256023735_embedding_proba_weak__8_VirusGO.yml
results:
  fit_time:
  - 491.83375358581543
  - 496.7498869895935
  - 509.2902991771698
  - 510.9158127307892
  - 510.92146944999695
  score_time:
  - 4.894954442977905
  - 4.933568477630615
  - 5.152672052383423
  - 4.802579879760742
  - 5.003645896911621
  test_average_precision_macro:
  - 0.9046974515616384
  - 0.9644103762642907
  - 0.8805318571643772
  - 0.9521754278032227
  - 0.8835201483125359
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8694254534056899
  - 0.9462400218101973
  - 0.9084779485226592
  - 0.9596869312844791
  - 0.8886031828034118
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9203703703703703
  - 0.9699074074074073
  - 0.9035714285714287
  - 0.9702380952380952
  - 0.9095238095238094
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9002445763258912
  - 0.9669742328749681
  - 0.9226569045161925
  - 0.9654912858733709
  - 0.9073870413835813
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9444444444444443
  - 0.9305555555555555
  - 0.9365079365079366
  - 0.9523809523809524
  - 0.9285714285714287
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9444444444444444
  - 0.9305555555555556
  - 0.9365079365079365
  - 0.9523809523809523
  - 0.9285714285714286
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9444444444444444
  - 0.9305555555555556
  - 0.9365079365079365
  - 0.9523809523809523
  - 0.9285714285714286
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9233115468409586
  - 0.9120370370370371
  - 0.9152380952380952
  - 0.9478021978021978
  - 0.9369747899159664
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8970894324427273
  - 0.8729798229156381
  - 0.8835858585858585
  - 0.909748649283533
  - 0.8678767321690541
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8947368421052632
  - 0.8701298701298701
  - 0.8805970149253731
  - 0.9090909090909091
  - 0.8666666666666667
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9095238095238096
  - 0.8882275132275133
  - 0.9007936507936508
  - 0.9217687074829932
  - 0.8900226757369614
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8605117810306361
  - 0.8405952733616405
  - 0.8468484848484849
  - 0.9013498129777199
  - 0.8825279513313469
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9203703703703703
  - 0.9699074074074073
  - 0.9035714285714285
  - 0.9702380952380952
  - 0.9095238095238094
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6764382028029075
  - 0.7416508863595852
  - 0.7308463663597319
  - 0.6677198346056401
  - 0.4984699307840419
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8150705520329229
  - 0.7914539432439763
  - 0.7952549555929975
  - 0.8507462787278184
  - 0.7730754055347152
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8047172813370752
  - 0.754507712782455
  - 0.7919239989909005
  - 0.7937991026957195
  - 0.7649957649555882
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.779576468637428
  - 0.7579363380607332
  - 0.7577097656808323
  - 0.817573112874149
  - 0.7355919003464855
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9421939047598713
  - 0.9790021373982477
  - 0.9290536912985023
  - 0.9788844569706062
  - 0.9337415575691214
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3111111111111111
  - -1.4166666666666667
  - -1.5238095238095237
  - -1.3333333333333333
  - -1.4761904761904763
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05555555555555555
  - -0.06944444444444445
  - -0.06349206349206349
  - -0.047619047619047616
  - -0.07142857142857142
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05555555555555555
  - -0.06944444444444445
  - -0.06349206349206349
  - -0.047619047619047616
  - -0.07142857142857142
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05555555555555555
  - -0.06944444444444443
  - -0.06349206349206349
  - -0.047619047619047616
  - -0.07142857142857142
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0766884531590414
  - -0.08796296296296297
  - -0.08476190476190475
  - -0.05219780219780219
  - -0.06302521008403361
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.035
  - -0.01597222222222222
  - -0.06362433862433862
  - -0.018452380952380953
  - -0.052976190476190475
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9444444444444443
  - 0.9305555555555555
  - 0.9365079365079366
  - 0.9523809523809524
  - 0.9285714285714287
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9444444444444444
  - 0.9305555555555556
  - 0.9365079365079365
  - 0.9523809523809523
  - 0.9285714285714286
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9444444444444444
  - 0.9305555555555556
  - 0.9365079365079365
  - 0.9523809523809523
  - 0.9285714285714286
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9233115468409586
  - 0.9120370370370371
  - 0.9152380952380952
  - 0.9478021978021978
  - 0.9369747899159664
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9444444444444443
  - 0.9305555555555555
  - 0.9365079365079366
  - 0.9523809523809524
  - 0.9285714285714287
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9444444444444444
  - 0.9305555555555556
  - 0.9365079365079365
  - 0.9523809523809523
  - 0.9285714285714286
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9444444444444444
  - 0.9305555555555556
  - 0.9365079365079365
  - 0.9523809523809523
  - 0.9285714285714286
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9233115468409586
  - 0.9120370370370371
  - 0.9152380952380952
  - 0.9478021978021978
  - 0.9369747899159664
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9656691945070711
  - 0.987885832330008
  - 0.9544797280510644
  - 0.9784785190879473
  - 0.9676106758492873
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9725132061957202
  - 0.9837549603174603
  - 0.9615841584158416
  - 0.9850961538461538
  - 0.9664422983123597
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.965
  - 0.9840277777777777
  - 0.9363756613756613
  - 0.9815476190476191
  - 0.9470238095238095
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9624239939878391
  - 0.9826594480994152
  - 0.9640745614035088
  - 0.9820086273375748
  - 0.958965059708094
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9669672999000215
  - 0.9675551136365605
  - 0.9699959403041664
  - 0.9620384649664039
  - 0.9614654192554694
  train_average_precision_macro_oob:
  - 0.9392043698848033
  - 0.9231669755780628
  - 0.9423944589229905
  - 0.9207360462740858
  - 0.9068008297371785
  train_average_precision_micro:
  - 0.9433222483261796
  - 0.9481024285687072
  - 0.9617603949612866
  - 0.9477882447328534
  - 0.9288228020000826
  train_average_precision_micro_oob:
  - 0.9244503338941726
  - 0.9257050936225323
  - 0.9408039170483512
  - 0.9222215322993652
  - 0.9072752800182069
  train_average_precision_samples:
  - 0.9711934156378601
  - 0.9668615984405456
  - 0.9838383838383838
  - 0.9691919191919193
  - 0.9414141414141415
  train_average_precision_samples_oob:
  - 0.9564814814814814
  - 0.9383040935672514
  - 0.9688888888888889
  - 0.9469023569023568
  - 0.9240404040404041
  train_average_precision_weighted:
  - 0.9571590266166532
  - 0.9678319077920708
  - 0.9679499524471636
  - 0.9630917536330824
  - 0.958858881442483
  train_average_precision_weighted_oob:
  - 0.9399077842608247
  - 0.9413665480790309
  - 0.9489376054309665
  - 0.9354442673370265
  - 0.9279566111111288
  train_f1_macro:
  - 0.9485596707818931
  - 0.9590643274853802
  - 0.9606060606060606
  - 0.9484848484848484
  - 0.9454545454545453
  train_f1_macro_oob:
  - 0.9382716049382717
  - 0.9405458089668617
  - 0.9414141414141414
  - 0.9383838383838383
  - 0.9333333333333332
  train_f1_micro:
  - 0.948559670781893
  - 0.9590643274853801
  - 0.9606060606060606
  - 0.9484848484848485
  - 0.9454545454545454
  train_f1_micro_oob:
  - 0.9382716049382716
  - 0.9405458089668616
  - 0.9414141414141414
  - 0.9383838383838384
  - 0.9333333333333333
  train_f1_samples:
  - 0.9485596707818931
  - 0.9590643274853801
  - 0.9606060606060606
  - 0.9484848484848485
  - 0.9454545454545454
  train_f1_samples_oob:
  - 0.9382716049382716
  - 0.9405458089668617
  - 0.9414141414141415
  - 0.9383838383838383
  - 0.9333333333333333
  train_f1_weighted:
  - 0.9437073889810208
  - 0.9448744410044719
  - 0.9498649864986497
  - 0.9384242424242424
  - 0.9405698778833107
  train_f1_weighted_oob:
  - 0.9343406424666789
  - 0.9324332072010091
  - 0.933003300330033
  - 0.9256666666666666
  - 0.9264284637418966
  train_jaccard_macro:
  - 0.9025861802636683
  - 0.9225327886296718
  - 0.9251318349003771
  - 0.9027119327567039
  - 0.896823240083863
  train_jaccard_macro_oob:
  - 0.8840841031055288
  - 0.8882163717054015
  - 0.8900708362077497
  - 0.885070967946331
  - 0.875369595829859
  train_jaccard_micro:
  - 0.9021526418786693
  - 0.9213483146067416
  - 0.924198250728863
  - 0.9020172910662824
  - 0.896551724137931
  train_jaccard_micro_oob:
  - 0.8837209302325582
  - 0.8877644894204232
  - 0.8893129770992366
  - 0.8839200761179828
  - 0.875
  train_jaccard_samples:
  - 0.9169606114050558
  - 0.9334447229184072
  - 0.9363636363636364
  - 0.917027417027417
  - 0.9103896103896104
  train_jaccard_samples_oob:
  - 0.9004997060552616
  - 0.9042049568365358
  - 0.9053391053391053
  - 0.9014430014430015
  - 0.8924963924963925
  train_jaccard_weighted:
  - 0.8937570061343361
  - 0.8962582975735336
  - 0.9053068805842256
  - 0.8846525943560922
  - 0.8879584394730061
  train_jaccard_weighted_oob:
  - 0.8769486304558196
  - 0.8737873199550404
  - 0.8755188264690633
  - 0.8626046082918688
  - 0.8630530683661775
  train_label_ranking_average_precision_score:
  - 0.97119341563786
  - 0.9668615984405456
  - 0.9838383838383837
  - 0.9691919191919189
  - 0.9414141414141413
  train_label_ranking_average_precision_score_oob:
  - 0.9564814814814814
  - 0.9383040935672514
  - 0.9688888888888888
  - 0.9469023569023568
  - 0.9240404040404041
  train_matthews_corrcoef_macro:
  - 0.6393004261654034
  - 0.8375183387285029
  - 0.8486988297026553
  - 0.652393211925629
  - 0.6495799900860054
  train_matthews_corrcoef_macro_oob:
  - 0.5806033244648757
  - 0.603995499857043
  - 0.6259269014458936
  - 0.5983017110241643
  - 0.5847857816251149
  train_matthews_corrcoef_micro:
  - 0.8384019582218362
  - 0.8687135963429857
  - 0.8762842300130215
  - 0.8354234852620221
  - 0.8291801515406751
  train_matthews_corrcoef_micro_oob:
  - 0.8043957198910713
  - 0.8059727660495534
  - 0.8130649794913439
  - 0.8014212793762081
  - 0.7893014104101992
  train_matthews_corrcoef_samples:
  - 0.8193807633002536
  - 0.8661336305599945
  - 0.8833396760174437
  - 0.8275614602310482
  - 0.8287294541010986
  train_matthews_corrcoef_samples_oob:
  - 0.7672374695008711
  - 0.7682112142313274
  - 0.7852131365315669
  - 0.7749564776362924
  - 0.7775716843085485
  train_matthews_corrcoef_weighted:
  - 0.8068991694174388
  - 0.8479304517239931
  - 0.8602022316036001
  - 0.8018900264121441
  - 0.8070706892496184
  train_matthews_corrcoef_weighted_oob:
  - 0.7671587173105746
  - 0.7686458416175127
  - 0.7783999252356542
  - 0.7598312767416157
  - 0.7586354498509664
  train_ndgc:
  - 0.978854133067935
  - 0.9762428663718578
  - 0.9887997068373269
  - 0.9779945275518912
  - 0.9576478770096556
  train_ndgc_oob:
  - 0.9683717602652913
  - 0.9557425902889253
  - 0.9780079130999497
  - 0.9622390785741844
  - 0.9449880705577911
  train_neg_coverage_error:
  - -1.3148148148148149
  - -1.2748538011695907
  - -1.2727272727272727
  - -1.290909090909091
  - -1.3636363636363635
  train_neg_coverage_error_oob:
  - -1.3888888888888888
  - -1.391812865497076
  - -1.3272727272727274
  - -1.393939393939394
  - -1.4545454545454546
  train_neg_hamming_loss_macro:
  - -0.051440329218107005
  - -0.04093567251461988
  - -0.03939393939393939
  - -0.051515151515151514
  - -0.05454545454545454
  train_neg_hamming_loss_macro_oob:
  - -0.06172839506172839
  - -0.0594541910331384
  - -0.05858585858585858
  - -0.061616161616161604
  - -0.06666666666666667
  train_neg_hamming_loss_micro:
  - -0.051440329218107
  - -0.04093567251461988
  - -0.03939393939393939
  - -0.051515151515151514
  - -0.05454545454545454
  train_neg_hamming_loss_micro_oob:
  - -0.06172839506172839
  - -0.0594541910331384
  - -0.05858585858585859
  - -0.06161616161616162
  - -0.06666666666666667
  train_neg_hamming_loss_samples:
  - -0.05144032921810699
  - -0.04093567251461988
  - -0.03939393939393939
  - -0.051515151515151514
  - -0.05454545454545454
  train_neg_hamming_loss_samples_oob:
  - -0.06172839506172839
  - -0.0594541910331384
  - -0.05858585858585858
  - -0.06161616161616161
  - -0.06666666666666667
  train_neg_hamming_loss_weighted:
  - -0.05629261101897918
  - -0.05512555899552803
  - -0.05013501350135014
  - -0.061575757575757575
  - -0.05943012211668928
  train_neg_hamming_loss_weighted_oob:
  - -0.06565935753332104
  - -0.06756679279899094
  - -0.06699669966996699
  - -0.07433333333333333
  - -0.0735715362581034
  train_neg_label_ranking_loss:
  - -0.014351851851851853
  - -0.015058479532163743
  - -0.008333333333333333
  - -0.014696969696969696
  - -0.02727272727272727
  train_neg_label_ranking_loss_oob:
  - -0.027777777777777776
  - -0.0368421052631579
  - -0.01863636363636364
  - -0.033468013468013466
  - -0.04361952861952862
  train_precision_macro:
  - 0.9485596707818931
  - 0.9590643274853802
  - 0.9606060606060606
  - 0.9484848484848484
  - 0.9454545454545453
  train_precision_macro_oob:
  - 0.9382716049382717
  - 0.9405458089668617
  - 0.9414141414141414
  - 0.9383838383838383
  - 0.9333333333333332
  train_precision_micro:
  - 0.948559670781893
  - 0.9590643274853801
  - 0.9606060606060606
  - 0.9484848484848485
  - 0.9454545454545454
  train_precision_micro_oob:
  - 0.9382716049382716
  - 0.9405458089668616
  - 0.9414141414141414
  - 0.9383838383838384
  - 0.9333333333333333
  train_precision_samples:
  - 0.9485596707818931
  - 0.9590643274853801
  - 0.9606060606060606
  - 0.9484848484848485
  - 0.9454545454545454
  train_precision_samples_oob:
  - 0.9382716049382716
  - 0.9405458089668617
  - 0.9414141414141415
  - 0.9383838383838383
  - 0.9333333333333333
  train_precision_weighted:
  - 0.9437073889810208
  - 0.9448744410044719
  - 0.9498649864986497
  - 0.9384242424242424
  - 0.9405698778833107
  train_precision_weighted_oob:
  - 0.9343406424666789
  - 0.9324332072010091
  - 0.933003300330033
  - 0.9256666666666666
  - 0.9264284637418966
  train_recall_macro:
  - 0.9485596707818931
  - 0.9590643274853802
  - 0.9606060606060606
  - 0.9484848484848484
  - 0.9454545454545453
  train_recall_macro_oob:
  - 0.9382716049382717
  - 0.9405458089668617
  - 0.9414141414141414
  - 0.9383838383838383
  - 0.9333333333333332
  train_recall_micro:
  - 0.948559670781893
  - 0.9590643274853801
  - 0.9606060606060606
  - 0.9484848484848485
  - 0.9454545454545454
  train_recall_micro_oob:
  - 0.9382716049382716
  - 0.9405458089668616
  - 0.9414141414141414
  - 0.9383838383838384
  - 0.9333333333333333
  train_recall_samples:
  - 0.9485596707818931
  - 0.9590643274853801
  - 0.9606060606060606
  - 0.9484848484848485
  - 0.9454545454545454
  train_recall_samples_oob:
  - 0.9382716049382716
  - 0.9405458089668617
  - 0.9414141414141415
  - 0.9383838383838383
  - 0.9333333333333333
  train_recall_weighted:
  - 0.9437073889810208
  - 0.9448744410044719
  - 0.9498649864986497
  - 0.9384242424242424
  - 0.9405698778833107
  train_recall_weighted_oob:
  - 0.9343406424666789
  - 0.9324332072010091
  - 0.933003300330033
  - 0.9256666666666666
  - 0.9264284637418966
  train_roc_auc_macro:
  - 0.9892719985357599
  - 0.9894999381415279
  - 0.9922341298389203
  - 0.9891317867854826
  - 0.986913824215383
  train_roc_auc_macro_oob:
  - 0.975179244018937
  - 0.9701631995505112
  - 0.9821430824746634
  - 0.9719970856517048
  - 0.9687954190697599
  train_roc_auc_micro:
  - 0.9882074710752333
  - 0.9871457707170459
  - 0.9906675629491883
  - 0.9869715189873418
  - 0.9821236025197208
  train_roc_auc_micro_oob:
  - 0.9789702589516749
  - 0.9751562425456801
  - 0.9813916670854903
  - 0.9752088607594936
  - 0.9689890219372087
  train_roc_auc_samples:
  - 0.9856481481481483
  - 0.9849415204678363
  - 0.9916666666666667
  - 0.9853030303030302
  - 0.9727272727272728
  train_roc_auc_samples_oob:
  - 0.9722222222222222
  - 0.9631578947368422
  - 0.9813636363636364
  - 0.9665319865319865
  - 0.9563804713804712
  train_roc_auc_weighted:
  - 0.9829887315680883
  - 0.9852273939681263
  - 0.9873704444732242
  - 0.9850689776643964
  - 0.982407785681057
  train_roc_auc_weighted_oob:
  - 0.9705103529111231
  - 0.9708007276197858
  - 0.977979137138016
  - 0.9696997722155106
  - 0.9706012955296031
start: 2023-12-21 07:52:56.023735
wrapper: null
