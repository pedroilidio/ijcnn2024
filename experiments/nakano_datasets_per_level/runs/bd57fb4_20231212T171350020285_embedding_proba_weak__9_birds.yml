active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb8yMzMzMzPzv5yZmZmZmek/MjMzMzMz87/OzMzMzMz8Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/IzMzMzMz8v8CZmZmZmck/ODMzMzMz8z/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz479oZmZmZmb2P6CZmZmZmdk/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT/MzMzMzMz8v6CZmZmZmck/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:14:45.341620
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: bd57fb4f6b60931cce7f6cc578a77ca1c8c105da3c327915c52c623e4d44d645
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bd57fb4_20231212T171350020285_embedding_proba_weak__9_birds.yml
results:
  fit_time:
  - 29.747360467910767
  - 30.756890058517456
  - 28.75774312019348
  - 28.7816219329834
  - 31.132678985595703
  score_time:
  - 8.205793857574463
  - 8.287934303283691
  - 8.163188695907593
  - 8.267953395843506
  - 8.39807915687561
  test_average_precision_macro:
  - 0.31370163082227426
  - 0.2679749156529139
  - 0.3186064437764027
  - 0.30247339643038207
  - 0.347027946328482
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.22936222371527853
  - 0.22541357028168357
  - 0.22447141456497838
  - 0.22661672614306222
  - 0.21612862865481197
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.22223005453163613
  - 0.24795574503091844
  - 0.23331044730263537
  - 0.2753071592809875
  - 0.24970035914038363
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4056979648644132
  - 0.3698334437665025
  - 0.38158382059103413
  - 0.3726044470410904
  - 0.40504869031853374
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8865769073847409
  - 0.8914728682170544
  - 0.8935128518971849
  - 0.882904936760506
  - 0.8706650346797226
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8865769073847409
  - 0.8914728682170543
  - 0.8935128518971848
  - 0.882904936760506
  - 0.8706650346797226
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8865769073847409
  - 0.8914728682170543
  - 0.8935128518971849
  - 0.8829049367605059
  - 0.8706650346797226
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8820512820512821
  - 0.8869026958232094
  - 0.8890090739739198
  - 0.8761451726568005
  - 0.8770506580133406
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7978368453584194
  - 0.806401345375804
  - 0.8087112472913357
  - 0.7915591456475791
  - 0.7715037163410552
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7962623671674606
  - 0.8041958041958042
  - 0.8075221238938053
  - 0.7903579254930606
  - 0.7709537572254336
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.820704935379691
  - 0.827706126027663
  - 0.8285264431607539
  - 0.8186933263143751
  - 0.7982739921983428
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7900324226623624
  - 0.7987601403184981
  - 0.8012822668812217
  - 0.7804314196842272
  - 0.7813170357095006
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7106021475548916
  - 0.7130720241006858
  - 0.6906747883879069
  - 0.748175376335251
  - 0.6450491963496859
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.25163192205937707
  - 0.26365371383113984
  - 0.3206978320444101
  - 0.2650703719106075
  - 0.29058753349110045
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.26274313682226885
  - 0.3026689167293819
  - 0.32807090433797337
  - 0.2841196635116311
  - 0.30714909898659315
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09823092438678373
  - 0.13675087228081925
  - 0.1373597826053409
  - 0.12355741924897341
  - 0.15355457310839768
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3175595562396155
  - 0.3525381413054341
  - 0.37693574556922627
  - 0.316562097769516
  - 0.370334991211887
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3088674163507953
  - 0.33516892515194296
  - 0.32329355627882633
  - 0.3509929166203854
  - 0.3461719885360211
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.248062015503876
  - -4.348837209302325
  - -3.9302325581395348
  - -3.6589147286821704
  - -4.248062015503876
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1134230926152591
  - -0.10852713178294575
  - -0.10648714810281518
  - -0.1170950632394941
  - -0.12933496532027744
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11342309261525908
  - -0.10852713178294573
  - -0.10648714810281518
  - -0.11709506323949409
  - -0.12933496532027744
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11342309261525908
  - -0.10852713178294572
  - -0.10648714810281518
  - -0.11709506323949408
  - -0.1293349653202774
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11794871794871797
  - -0.11309730417679048
  - -0.11099092602608018
  - -0.12385482734319946
  - -0.12294934198665947
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1377384933301486
  - -0.14132530273091148
  - -0.13356323149414806
  - -0.11361577825326115
  - -0.15506915944672442
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8865769073847409
  - 0.8914728682170544
  - 0.8935128518971849
  - 0.882904936760506
  - 0.8706650346797226
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8865769073847409
  - 0.8914728682170543
  - 0.8935128518971848
  - 0.882904936760506
  - 0.8706650346797226
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8865769073847409
  - 0.8914728682170543
  - 0.8935128518971849
  - 0.8829049367605059
  - 0.8706650346797226
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8820512820512821
  - 0.8869026958232094
  - 0.8890090739739198
  - 0.8761451726568005
  - 0.8770506580133406
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8865769073847409
  - 0.8914728682170544
  - 0.8935128518971849
  - 0.882904936760506
  - 0.8706650346797226
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8865769073847409
  - 0.8914728682170543
  - 0.8935128518971848
  - 0.882904936760506
  - 0.8706650346797226
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8865769073847409
  - 0.8914728682170543
  - 0.8935128518971849
  - 0.8829049367605059
  - 0.8706650346797226
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8820512820512821
  - 0.8869026958232094
  - 0.8890090739739198
  - 0.8761451726568005
  - 0.8770506580133406
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8421387782412468
  - 0.8233976155338144
  - 0.8653230118985477
  - .nan
  - 0.8292601490801449
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8511550061313095
  - 0.8502679738983117
  - 0.8627536406065339
  - 0.8544778313536399
  - 0.8468107552297204
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8480648147759283
  - 0.8455920460646091
  - 0.8592185095606634
  - .nan
  - 0.8483124030899966
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.38113628943415917
  - 0.37644376756269077
  - 0.3373593610029466
  - 0.34286070088553117
  - 0.34524506191801707
  train_average_precision_macro_oob:
  - 0.34603295276443236
  - 0.34098697090660707
  - 0.3004973728067568
  - 0.3120433033307782
  - 0.32150903264843267
  train_average_precision_micro:
  - 0.319941396856912
  - 0.3302098567890017
  - 0.30013436636513235
  - 0.3303624250868802
  - 0.2894840958637176
  train_average_precision_micro_oob:
  - 0.2950187703065714
  - 0.30359498374591054
  - 0.2748303838096059
  - 0.29812128348484707
  - 0.2680751871750979
  train_average_precision_samples:
  - 0.33719030054785865
  - 0.3300800374080413
  - 0.3328422366285738
  - 0.34625941188441184
  - 0.29882787575617037
  train_average_precision_samples_oob:
  - 0.29235202233960994
  - 0.30545177585132766
  - 0.28597132791452484
  - 0.3081223538215357
  - 0.2736926920912749
  train_average_precision_weighted:
  - 0.49216821394048577
  - 0.48346392528567705
  - 0.4753697079278946
  - 0.46141794632632455
  - 0.4709317093919002
  train_average_precision_weighted_oob:
  - 0.4493341419963209
  - 0.44647189100957446
  - 0.4343404675051324
  - 0.4291099739391935
  - 0.43364355975608065
  train_f1_macro:
  - 0.9025907792737659
  - 0.9036107711138311
  - 0.8960628314973479
  - 0.9040187678498574
  - 0.8911668706650345
  train_f1_macro_oob:
  - 0.9022847817217462
  - 0.9031007751937986
  - 0.8960628314973481
  - 0.9052427580579354
  - 0.8900448796409628
  train_f1_micro:
  - 0.9025907792737659
  - 0.903610771113831
  - 0.896062831497348
  - 0.9040187678498572
  - 0.8911668706650346
  train_f1_micro_oob:
  - 0.9022847817217462
  - 0.9031007751937985
  - 0.896062831497348
  - 0.9052427580579355
  - 0.8900448796409629
  train_f1_samples:
  - 0.902590779273766
  - 0.9036107711138311
  - 0.8960628314973481
  - 0.9040187678498572
  - 0.8911668706650347
  train_f1_samples_oob:
  - 0.9022847817217463
  - 0.9031007751937985
  - 0.896062831497348
  - 0.9052427580579355
  - 0.8900448796409629
  train_f1_weighted:
  - 0.9073133025622818
  - 0.9060636553369112
  - 0.9031303063861202
  - 0.9066537467700259
  - 0.9013953488372094
  train_f1_weighted_oob:
  - 0.9060669270371028
  - 0.903741800834824
  - 0.9011886304909561
  - 0.9069136297484334
  - 0.8987596899224808
  train_jaccard_macro:
  - 0.8233034412344536
  - 0.8250461703993722
  - 0.8124406090696521
  - 0.8251909486352573
  - 0.8043099654214337
  train_jaccard_macro_oob:
  - 0.8227959789561968
  - 0.8242751605802555
  - 0.8123778514149427
  - 0.827211037850429
  - 0.8024187458390738
  train_jaccard_micro:
  - 0.8224742076401153
  - 0.8241696902037399
  - 0.8116973112815301
  - 0.8248487668683109
  - 0.8036979118756324
  train_jaccard_micro_oob:
  - 0.8219661772904665
  - 0.823321554770318
  - 0.8116973112815301
  - 0.8268890338209262
  - 0.801874655394229
  train_jaccard_samples:
  - 0.8400682760423239
  - 0.843812690916668
  - 0.8343145969001937
  - 0.8484382514981941
  - 0.8278898707574861
  train_jaccard_samples_oob:
  - 0.8397535836506177
  - 0.8429349855976077
  - 0.8345124010818284
  - 0.8503457645940748
  - 0.8262427853347013
  train_jaccard_weighted:
  - 0.8310928759225524
  - 0.8292844462637495
  - 0.8241711266763032
  - 0.8294624726701081
  - 0.8208902210377833
  train_jaccard_weighted_oob:
  - 0.8290010935364868
  - 0.8254716538245204
  - 0.8209213145853554
  - 0.8298790665238823
  - 0.8164892118306971
  train_label_ranking_average_precision_score:
  - 0.7848647191525099
  - 0.7835684095010642
  - 0.788268593217721
  - 0.7978097994813108
  - 0.7697581083143101
  train_label_ranking_average_precision_score_oob:
  - 0.7400264409442612
  - 0.7589401479443509
  - 0.7413976845036722
  - 0.7596727414184348
  - 0.744622924649414
  train_matthews_corrcoef_macro:
  - 0.39964064894202
  - 0.4201778612880955
  - 0.38756177564359884
  - 0.3945072764086794
  - 0.3785870292291804
  train_matthews_corrcoef_macro_oob:
  - 0.3885177690819987
  - 0.4097881280390151
  - 0.3773227179870568
  - 0.3856785690586856
  - 0.3652009727591355
  train_matthews_corrcoef_micro:
  - 0.4261254127677262
  - 0.45384387659779724
  - 0.4169914435754498
  - 0.4291158508949641
  - 0.39089767662661307
  train_matthews_corrcoef_micro_oob:
  - 0.41507467985978913
  - 0.4397745312670359
  - 0.40482429781394114
  - 0.42255459694737096
  - 0.37147051475885995
  train_matthews_corrcoef_samples:
  - 0.20732620269917368
  - 0.23871918281806964
  - 0.20323006664542503
  - 0.2121930790899012
  - 0.18875897742739772
  train_matthews_corrcoef_samples_oob:
  - 0.1995037541883305
  - 0.2246242065493974
  - 0.19460813265683982
  - 0.20716817132653134
  - 0.16877138454559998
  train_matthews_corrcoef_weighted:
  - 0.4949323343593105
  - 0.5189027646711526
  - 0.49178678522282726
  - 0.4915072659174592
  - 0.46689021591310365
  train_matthews_corrcoef_weighted_oob:
  - 0.4811597575637588
  - 0.5010557419520562
  - 0.4759107181974688
  - 0.4819231963837196
  - 0.444799254297326
  train_ndgc:
  - 0.4042170080989035
  - 0.3955873115591856
  - 0.40115113230181015
  - 0.41102895054151034
  - 0.36783370951048466
  train_ndgc_oob:
  - 0.3696515307086803
  - 0.37944526810756174
  - 0.3680464802657465
  - 0.38247065748558906
  - 0.35046859867334246
  train_neg_coverage_error:
  - -2.3333333333333335
  - -2.2267441860465116
  - -2.3197674418604652
  - -2.37015503875969
  - -2.5
  train_neg_coverage_error_oob:
  - -3.244186046511628
  - -2.9670542635658914
  - -3.2713178294573644
  - -3.12015503875969
  - -3.2887596899224807
  train_neg_hamming_loss_macro:
  - -0.09740922072623419
  - -0.09638922888616891
  - -0.10393716850265197
  - -0.0959812321501428
  - -0.10883312933496532
  train_neg_hamming_loss_macro_oob:
  - -0.09771521827825377
  - -0.09689922480620154
  - -0.10393716850265197
  - -0.09475724194206446
  - -0.10995512035903711
  train_neg_hamming_loss_micro:
  - -0.09740922072623419
  - -0.09638922888616891
  - -0.10393716850265197
  - -0.0959812321501428
  - -0.10883312933496532
  train_neg_hamming_loss_micro_oob:
  - -0.09771521827825377
  - -0.09689922480620156
  - -0.10393716850265197
  - -0.09475724194206446
  - -0.10995512035903712
  train_neg_hamming_loss_samples:
  - -0.09740922072623417
  - -0.0963892288861689
  - -0.10393716850265197
  - -0.09598123215014279
  - -0.1088331293349653
  train_neg_hamming_loss_samples_oob:
  - -0.09771521827825377
  - -0.09689922480620154
  - -0.10393716850265197
  - -0.09475724194206446
  - -0.10995512035903711
  train_neg_hamming_loss_weighted:
  - -0.09268669743771822
  - -0.09393634466308885
  - -0.09686969361387966
  - -0.09334625322997414
  - -0.09860465116279067
  train_neg_hamming_loss_weighted_oob:
  - -0.09393307296289721
  - -0.09625819916517593
  - -0.09881136950904391
  - -0.09308637025156671
  - -0.10124031007751938
  train_neg_label_ranking_loss:
  - -0.058810363491451044
  - -0.05478854456710134
  - -0.0558727973399656
  - -0.05559355525155799
  - -0.06631167573370036
  train_neg_label_ranking_loss_oob:
  - -0.10062403713224506
  - -0.08489015512784323
  - -0.09599936625415421
  - -0.08900956054256327
  - -0.10013105371347505
  train_precision_macro:
  - 0.9025907792737659
  - 0.9036107711138311
  - 0.8960628314973479
  - 0.9040187678498574
  - 0.8911668706650345
  train_precision_macro_oob:
  - 0.9022847817217462
  - 0.9031007751937986
  - 0.8960628314973481
  - 0.9052427580579354
  - 0.8900448796409628
  train_precision_micro:
  - 0.9025907792737659
  - 0.903610771113831
  - 0.896062831497348
  - 0.9040187678498572
  - 0.8911668706650346
  train_precision_micro_oob:
  - 0.9022847817217462
  - 0.9031007751937985
  - 0.896062831497348
  - 0.9052427580579355
  - 0.8900448796409629
  train_precision_samples:
  - 0.902590779273766
  - 0.9036107711138311
  - 0.8960628314973481
  - 0.9040187678498572
  - 0.8911668706650347
  train_precision_samples_oob:
  - 0.9022847817217463
  - 0.9031007751937985
  - 0.896062831497348
  - 0.9052427580579355
  - 0.8900448796409629
  train_precision_weighted:
  - 0.9073133025622818
  - 0.9060636553369112
  - 0.9031303063861202
  - 0.9066537467700259
  - 0.9013953488372094
  train_precision_weighted_oob:
  - 0.9060669270371028
  - 0.903741800834824
  - 0.9011886304909561
  - 0.9069136297484334
  - 0.8987596899224808
  train_recall_macro:
  - 0.9025907792737659
  - 0.9036107711138311
  - 0.8960628314973479
  - 0.9040187678498574
  - 0.8911668706650345
  train_recall_macro_oob:
  - 0.9022847817217462
  - 0.9031007751937986
  - 0.8960628314973481
  - 0.9052427580579354
  - 0.8900448796409628
  train_recall_micro:
  - 0.9025907792737659
  - 0.903610771113831
  - 0.896062831497348
  - 0.9040187678498572
  - 0.8911668706650346
  train_recall_micro_oob:
  - 0.9022847817217462
  - 0.9031007751937985
  - 0.896062831497348
  - 0.9052427580579355
  - 0.8900448796409629
  train_recall_samples:
  - 0.902590779273766
  - 0.9036107711138311
  - 0.8960628314973481
  - 0.9040187678498572
  - 0.8911668706650347
  train_recall_samples_oob:
  - 0.9022847817217463
  - 0.9031007751937985
  - 0.896062831497348
  - 0.9052427580579355
  - 0.8900448796409629
  train_recall_weighted:
  - 0.9073133025622818
  - 0.9060636553369112
  - 0.9031303063861202
  - 0.9066537467700259
  - 0.9013953488372094
  train_recall_weighted_oob:
  - 0.9060669270371028
  - 0.903741800834824
  - 0.9011886304909561
  - 0.9069136297484334
  - 0.8987596899224808
  train_roc_auc_macro:
  - 0.9446615503057574
  - 0.9446387420588911
  - 0.9378598128478555
  - 0.9379134184311803
  - 0.936964888137537
  train_roc_auc_macro_oob:
  - 0.8968901945079354
  - 0.910087628747847
  - 0.8890042592056627
  - 0.8946651507854044
  - 0.8992333118970212
  train_roc_auc_micro:
  - 0.937657319360358
  - 0.9398839608259039
  - 0.933390297599803
  - 0.9378184076459939
  - 0.9309970799398539
  train_roc_auc_micro_oob:
  - 0.9057528502566465
  - 0.9138643199217843
  - 0.8995966314104045
  - 0.9083872423121916
  - 0.903892558208756
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9480302447179162
  - 0.9454594991178283
  - 0.9443116223028079
  - 0.9431150078536873
  - 0.9446247723984652
  train_roc_auc_weighted_oob:
  - 0.9061770497696493
  - 0.9117929417623348
  - 0.9007121427517336
  - 0.9067504639439994
  - 0.9070595383547938
start: 2023-12-12 17:13:50.020285
wrapper: null
