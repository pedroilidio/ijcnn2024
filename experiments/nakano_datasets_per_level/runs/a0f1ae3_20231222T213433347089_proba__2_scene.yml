active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmFsAAMjMzMzPjv4AzMzMzMwtAwJmZmZmZGUCAzMzMzMwMwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:35:08.172075
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__2
  params: {}
hash: a0f1ae310832b32c649f603e8a3a0744fede60074af63dfc425000644d5e5583
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a0f1ae3_20231222T213433347089_proba__2_scene.yml
results:
  fit_time:
  - 3.682011604309082
  - 3.7333953380584717
  - 3.7955193519592285
  - 3.567845106124878
  - 3.7026522159576416
  score_time:
  - 4.137738466262817
  - 4.163930177688599
  - 4.162909984588623
  - 4.222800970077515
  - 4.244213342666626
  test_average_precision_macro:
  - 0.8586683098233845
  - 0.8489538019579311
  - 0.8617997535753869
  - 0.8403612030367871
  - 0.8426496583923649
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.86473376894104
  - 0.8502315467576544
  - 0.8558651539953133
  - 0.8353482130320063
  - 0.8417990332878059
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8904517453798767
  - 0.8788727524204701
  - 0.8964783821478381
  - 0.8761052631578947
  - 0.8665463917525774
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8481689595882733
  - 0.8383789954902371
  - 0.8550261060896277
  - 0.8286864817747203
  - 0.8316650650928772
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8689253935660505
  - 0.8658367911479944
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965635
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8689253935660507
  - 0.8658367911479945
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965636
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8689253935660507
  - 0.8658367911479945
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965636
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8647736912623977
  - 0.8622824793335263
  - 0.8586169851860227
  - 0.858359853121175
  - 0.861349179445253
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7700886807006725
  - 0.7648746062216255
  - 0.7584013171326754
  - 0.7570824089835867
  - 0.7628080133918403
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7682299546142208
  - 0.7634146341463415
  - 0.7573529411764706
  - 0.756007393715342
  - 0.761501210653753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.77896743913171
  - 0.7745998814463543
  - 0.7681809125323769
  - 0.76796992481203
  - 0.7724594992636227
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7638480662841176
  - 0.759540819717231
  - 0.7534106031426538
  - 0.7530545505415731
  - 0.7578155545515669
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8904517453798768
  - 0.87887275242047
  - 0.896478382147838
  - 0.8761052631578946
  - 0.8665463917525768
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.46793383454167986
  - 0.45631265340969057
  - 0.44957527811951237
  - 0.43899112260608786
  - 0.44621357365367104
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4720668977049987
  - 0.4591644025326681
  - 0.4466851151562339
  - 0.4426781752603088
  - 0.4502580739588787
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.276231119754285
  - 0.26606213026494197
  - 0.2524544740970445
  - 0.2567626898108808
  - 0.2555254064497623
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.45426278220362976
  - 0.44759495030458724
  - 0.44230936450594205
  - 0.434475891776285
  - 0.4379247140335792
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9194274403126402
  - 0.9105436531670589
  - 0.923767174516244
  - 0.9090617738668471
  - 0.9017801047836234
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.353182751540041
  - -1.4128630705394192
  - -1.3661087866108788
  - -1.433684210526316
  - -1.4536082474226804
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.13107460643394936
  - -0.13416320885200553
  - -0.13807531380753138
  - -0.13894736842105262
  - -0.13539518900343642
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.13107460643394936
  - -0.13416320885200553
  - -0.13807531380753138
  - -0.13894736842105262
  - -0.13539518900343642
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.13107460643394933
  - -0.1341632088520055
  - -0.13807531380753138
  - -0.13894736842105262
  - -0.13539518900343644
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.13522630873760239
  - -0.13771752066647366
  - -0.14138301481397714
  - -0.14164014687882495
  - -0.13865082055474687
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05631416837782341
  - -0.06680497925311205
  - -0.05496861924686192
  - -0.067
  - -0.07505154639175257
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8689253935660505
  - 0.8658367911479944
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965635
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8689253935660507
  - 0.8658367911479945
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965636
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8689253935660507
  - 0.8658367911479945
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965636
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8647736912623977
  - 0.8622824793335263
  - 0.8586169851860227
  - 0.858359853121175
  - 0.861349179445253
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8689253935660505
  - 0.8658367911479944
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965635
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8689253935660507
  - 0.8658367911479945
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965636
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8689253935660507
  - 0.8658367911479945
  - 0.8619246861924686
  - 0.8610526315789474
  - 0.8646048109965636
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8647736912623977
  - 0.8622824793335263
  - 0.8586169851860227
  - 0.858359853121175
  - 0.861349179445253
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9555461519470524
  - 0.9487140068361354
  - 0.9527016483795276
  - 0.9460810908200165
  - 0.94270446213921
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9611137165213703
  - 0.9540430141205336
  - 0.9577220077220077
  - 0.9510372451724757
  - 0.9491351710056977
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9436858316221767
  - 0.9331950207468881
  - 0.9450313807531381
  - 0.9329999999999999
  - 0.9249484536082475
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9517350127040385
  - 0.944225845583914
  - 0.9493926356938639
  - 0.9409631554225033
  - 0.937537024403982
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9450972892761818
  - 0.9431724938522607
  - 0.9427824096714957
  - 0.9449667739663375
  - 0.9411285651041109
  train_average_precision_macro_oob:
  - 0.9386404517204445
  - 0.9353954006919367
  - 0.9356955293503643
  - 0.9383998956142139
  - 0.9363566535284743
  train_average_precision_micro:
  - 0.944962838017113
  - 0.9426136241992091
  - 0.9414151315275312
  - 0.9439803989614275
  - 0.9407506433247278
  train_average_precision_micro_oob:
  - 0.9383966383638718
  - 0.9347233301448761
  - 0.9346151751018374
  - 0.9374846930175139
  - 0.9356275212062873
  train_average_precision_samples:
  - 0.943984375
  - 0.943030303030303
  - 0.9407162605840678
  - 0.9418219461697722
  - 0.9416926812348249
  train_average_precision_samples_oob:
  - 0.9404166666666666
  - 0.9334545454545455
  - 0.9350267841714187
  - 0.9398119392684611
  - 0.9348508498092265
  train_average_precision_weighted:
  - 0.9407206534443521
  - 0.939170003905961
  - 0.9383317242912834
  - 0.9408587755102019
  - 0.9367554803897614
  train_average_precision_weighted_oob:
  - 0.9339311171024853
  - 0.9311434713715658
  - 0.9310422452480708
  - 0.9341366457294561
  - 0.9319245184307513
  train_f1_macro:
  - 0.9058159722222223
  - 0.9051948051948052
  - 0.9055641956108519
  - 0.9061421670117321
  - 0.9055671175858481
  train_f1_macro_oob:
  - 0.8978298611111112
  - 0.8963636363636364
  - 0.8973561430793157
  - 0.8968253968253967
  - 0.897242455775234
  train_f1_micro:
  - 0.9058159722222222
  - 0.9051948051948052
  - 0.9055641956108519
  - 0.9061421670117322
  - 0.9055671175858481
  train_f1_micro_oob:
  - 0.8978298611111111
  - 0.8963636363636364
  - 0.8973561430793157
  - 0.8968253968253969
  - 0.8972424557752341
  train_f1_samples:
  - 0.9058159722222224
  - 0.9051948051948052
  - 0.905564195610852
  - 0.9061421670117323
  - 0.9055671175858481
  train_f1_samples_oob:
  - 0.8978298611111112
  - 0.8963636363636365
  - 0.8973561430793157
  - 0.8968253968253969
  - 0.8972424557752341
  train_f1_weighted:
  - 0.9045673076923076
  - 0.9039892538587561
  - 0.9042400977316908
  - 0.9049150078002496
  - 0.9042080199341033
  train_f1_weighted_oob:
  - 0.8966950895016933
  - 0.895404643688839
  - 0.8961533069341396
  - 0.8957558436827985
  - 0.8960111666401658
  train_jaccard_macro:
  - 0.8280175696970272
  - 0.826973507577273
  - 0.8276193557948869
  - 0.8285559962612075
  - 0.8276240045263452
  train_jaccard_macro_oob:
  - 0.8147419027342481
  - 0.8122988355414802
  - 0.8139885643880832
  - 0.8130915158573355
  - 0.813804649507647
  train_jaccard_micro:
  - 0.8278460928203094
  - 0.8268090154211151
  - 0.8274255940633142
  - 0.828391167192429
  - 0.8274304730211552
  train_jaccard_micro_oob:
  - 0.8146018744585335
  - 0.8121911037891268
  - 0.8138222849083215
  - 0.8129496402877698
  - 0.8136352913422977
  train_jaccard_samples:
  - 0.8400297619047618
  - 0.8390352504638218
  - 0.8396282307635339
  - 0.8406166814551908
  - 0.8398865269312719
  train_jaccard_samples_oob:
  - 0.827157738095238
  - 0.8246753246753246
  - 0.8263348885432865
  - 0.8253105590062112
  - 0.826433278826619
  train_jaccard_weighted:
  - 0.8259444360492145
  - 0.8249729105192516
  - 0.8254296699499313
  - 0.8265196043916915
  - 0.8253742499947644
  train_jaccard_weighted_oob:
  - 0.8128893414649037
  - 0.8107357954028179
  - 0.8120328941899418
  - 0.8113526122874878
  - 0.8118035322265276
  train_label_ranking_average_precision_score:
  - 0.9439843749999995
  - 0.9430303030303023
  - 0.9407162605840675
  - 0.941821946169772
  - 0.9416926812348244
  train_label_ranking_average_precision_score_oob:
  - 0.9404166666666665
  - 0.9334545454545449
  - 0.9350267841714184
  - 0.9398119392684606
  - 0.9348508498092256
  train_matthews_corrcoef_macro:
  - 0.6522492994302033
  - 0.6489148229719848
  - 0.6498040818102222
  - 0.6516693529544431
  - 0.6514356716821595
  train_matthews_corrcoef_macro_oob:
  - 0.6170870838763337
  - 0.6091318882667434
  - 0.6132974773371526
  - 0.6098409700911529
  - 0.6145304843115925
  train_matthews_corrcoef_micro:
  - 0.6527337399906062
  - 0.6495456317950675
  - 0.6500968391444691
  - 0.6523234533790433
  - 0.6515765944263848
  train_matthews_corrcoef_micro_oob:
  - 0.6186962747902574
  - 0.6116352368759697
  - 0.6148307098675281
  - 0.6122610517927539
  - 0.6160103893944521
  train_matthews_corrcoef_samples:
  - 0.48682189250347163
  - 0.4847523047310476
  - 0.48372384676747715
  - 0.4851493619162843
  - 0.4851684751086343
  train_matthews_corrcoef_samples_oob:
  - 0.4470695199407962
  - 0.43774615772818776
  - 0.4407718626054909
  - 0.43660136336959593
  - 0.44337630272552453
  train_matthews_corrcoef_weighted:
  - 0.652024796421083
  - 0.6488262569271328
  - 0.6493751998143931
  - 0.6516062575690332
  - 0.6508884477603235
  train_matthews_corrcoef_weighted_oob:
  - 0.6178977012965124
  - 0.6106937075445545
  - 0.6139615453176082
  - 0.6112083101693458
  - 0.6151488509934555
  train_ndgc:
  - 0.9588357646149369
  - 0.9582464200256309
  - 0.9564562227096103
  - 0.9574118206507236
  - 0.9572454999597785
  train_ndgc_oob:
  - 0.9562946442342141
  - 0.9511864419326923
  - 0.9523450952585166
  - 0.9558825603296264
  - 0.9522931056705012
  train_neg_coverage_error:
  - -1.234375
  - -1.2311688311688311
  - -1.248315189217211
  - -1.2386128364389235
  - -1.236732570239334
  train_neg_coverage_error_oob:
  - -1.2463541666666667
  - -1.2685714285714285
  - -1.2669777086573355
  - -1.2443064182194616
  - -1.2669094693028096
  train_neg_hamming_loss_macro:
  - -0.09418402777777778
  - -0.0948051948051948
  - -0.0944358043891481
  - -0.09385783298826778
  - -0.09443288241415193
  train_neg_hamming_loss_macro_oob:
  - -0.10217013888888889
  - -0.10363636363636362
  - -0.1026438569206843
  - -0.10317460317460318
  - -0.10275754422476586
  train_neg_hamming_loss_micro:
  - -0.09418402777777778
  - -0.09480519480519481
  - -0.09443580438914809
  - -0.09385783298826778
  - -0.09443288241415193
  train_neg_hamming_loss_micro_oob:
  - -0.10217013888888889
  - -0.10363636363636364
  - -0.1026438569206843
  - -0.10317460317460317
  - -0.10275754422476586
  train_neg_hamming_loss_samples:
  - -0.09418402777777778
  - -0.09480519480519481
  - -0.09443580438914809
  - -0.09385783298826776
  - -0.09443288241415193
  train_neg_hamming_loss_samples_oob:
  - -0.10217013888888889
  - -0.10363636363636364
  - -0.1026438569206843
  - -0.10317460317460317
  - -0.10275754422476586
  train_neg_hamming_loss_weighted:
  - -0.09543269230769232
  - -0.09601074614124397
  - -0.09575990226830922
  - -0.09508499219975043
  - -0.09579198006589687
  train_neg_hamming_loss_weighted_oob:
  - -0.10330491049830673
  - -0.10459535631116106
  - -0.10384669306586031
  - -0.10424415631720148
  - -0.1039888333598343
  train_neg_label_ranking_loss:
  - -0.030481770833333335
  - -0.030051948051948052
  - -0.03398133748055988
  - -0.03192287784679089
  - -0.030983350676378776
  train_neg_label_ranking_loss_oob:
  - -0.032591145833333335
  - -0.03710389610389611
  - -0.03740279937791601
  - -0.033126293995859216
  - -0.036420395421436005
  train_precision_macro:
  - 0.9058159722222223
  - 0.9051948051948052
  - 0.9055641956108519
  - 0.9061421670117321
  - 0.9055671175858481
  train_precision_macro_oob:
  - 0.8978298611111112
  - 0.8963636363636364
  - 0.8973561430793157
  - 0.8968253968253967
  - 0.897242455775234
  train_precision_micro:
  - 0.9058159722222222
  - 0.9051948051948052
  - 0.9055641956108519
  - 0.9061421670117322
  - 0.9055671175858481
  train_precision_micro_oob:
  - 0.8978298611111111
  - 0.8963636363636364
  - 0.8973561430793157
  - 0.8968253968253969
  - 0.8972424557752341
  train_precision_samples:
  - 0.9058159722222224
  - 0.9051948051948052
  - 0.905564195610852
  - 0.9061421670117323
  - 0.9055671175858481
  train_precision_samples_oob:
  - 0.8978298611111112
  - 0.8963636363636365
  - 0.8973561430793157
  - 0.8968253968253969
  - 0.8972424557752341
  train_precision_weighted:
  - 0.9045673076923076
  - 0.9039892538587561
  - 0.9042400977316908
  - 0.9049150078002496
  - 0.9042080199341033
  train_precision_weighted_oob:
  - 0.8966950895016933
  - 0.895404643688839
  - 0.8961533069341396
  - 0.8957558436827985
  - 0.8960111666401658
  train_recall_macro:
  - 0.9058159722222223
  - 0.9051948051948052
  - 0.9055641956108519
  - 0.9061421670117321
  - 0.9055671175858481
  train_recall_macro_oob:
  - 0.8978298611111112
  - 0.8963636363636364
  - 0.8973561430793157
  - 0.8968253968253967
  - 0.897242455775234
  train_recall_micro:
  - 0.9058159722222222
  - 0.9051948051948052
  - 0.9055641956108519
  - 0.9061421670117322
  - 0.9055671175858481
  train_recall_micro_oob:
  - 0.8978298611111111
  - 0.8963636363636364
  - 0.8973561430793157
  - 0.8968253968253969
  - 0.8972424557752341
  train_recall_samples:
  - 0.9058159722222224
  - 0.9051948051948052
  - 0.905564195610852
  - 0.9061421670117323
  - 0.9055671175858481
  train_recall_samples_oob:
  - 0.8978298611111112
  - 0.8963636363636365
  - 0.8973561430793157
  - 0.8968253968253969
  - 0.8972424557752341
  train_recall_weighted:
  - 0.9045673076923076
  - 0.9039892538587561
  - 0.9042400977316908
  - 0.9049150078002496
  - 0.9042080199341033
  train_recall_weighted_oob:
  - 0.8966950895016933
  - 0.895404643688839
  - 0.8961533069341396
  - 0.8957558436827985
  - 0.8960111666401658
  train_roc_auc_macro:
  - 0.9795322346798397
  - 0.9796588920755784
  - 0.9776930513767592
  - 0.9785327395111557
  - 0.9777090944310939
  train_roc_auc_macro_oob:
  - 0.9759269190328158
  - 0.9761383331020763
  - 0.9743922275975144
  - 0.9761703146955841
  - 0.9755773474470502
  train_roc_auc_micro:
  - 0.9818957139364557
  - 0.9817127322743475
  - 0.9799984163630813
  - 0.98064120612166
  - 0.9801886431898706
  train_roc_auc_micro_oob:
  - 0.9786194536348725
  - 0.9782053486536044
  - 0.9768705044519689
  - 0.9783615633428407
  - 0.9777494906893434
  train_roc_auc_samples:
  - 0.9695182291666667
  - 0.969948051948052
  - 0.9660186625194401
  - 0.9680771221532093
  - 0.9690166493236211
  train_roc_auc_samples_oob:
  - 0.9674088541666668
  - 0.9628961038961039
  - 0.9625972006220841
  - 0.9668737060041408
  - 0.963579604578564
  train_roc_auc_weighted:
  - 0.977446141667018
  - 0.977607681616489
  - 0.9752959916830615
  - 0.9764415519813617
  - 0.9754489662553155
  train_roc_auc_weighted_oob:
  - 0.9735460297005811
  - 0.9739487515136506
  - 0.9718341462084944
  - 0.9740064676893813
  - 0.9732850500409316
start: 2023-12-22 21:34:33.347089
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
