active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA/AAAAAAAAAAAAAAAAAADwvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T8yMzMzMzPzv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b9mZmZmZmYSwDQzMzMzMwNAaGZmZmZm9j80MzMzMzMDQA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:54:07.595803
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 9befc4a2d2be6832e8630de25ef6fba5861cebc0f8ce74b2f386779a58900008
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9befc4a_20231212T165330467318_embedding__7_birds.yml
results:
  fit_time:
  - 17.43632936477661
  - 16.669559001922607
  - 17.139732122421265
  - 19.16967463493347
  - 19.058011293411255
  score_time:
  - 5.616039514541626
  - 5.478560209274292
  - 5.759805202484131
  - 5.6294896602630615
  - 5.894948482513428
  test_average_precision_macro:
  - 0.535325702474708
  - 0.5624392051141005
  - 0.6230074541346817
  - 0.5329901796867331
  - 0.46683399765850275
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.522936512910489
  - 0.5204216498091729
  - 0.5863560109791021
  - 0.4750145815579056
  - 0.42666954826657966
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3628119296723948
  - 0.346311228211473
  - 0.3345338231966139
  - 0.35961705176821457
  - 0.28678002660560803
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5828254490100983
  - 0.6180692319904494
  - 0.6841110178297914
  - 0.5631609018858204
  - 0.5113254815181099
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.949000407996736
  - 0.9465524275805793
  - 0.9543043655650756
  - 0.949000407996736
  - 0.9502243982048143
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.949000407996736
  - 0.9465524275805793
  - 0.9543043655650755
  - 0.949000407996736
  - 0.9502243982048144
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9490004079967361
  - 0.9465524275805792
  - 0.9543043655650755
  - 0.9490004079967359
  - 0.9502243982048144
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9237138830162086
  - 0.9203870310643356
  - 0.9297324331082774
  - 0.9224806201550388
  - 0.9267143709004173
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9049457240869325
  - 0.9007591860826957
  - 0.9143059870466844
  - 0.9052658660614966
  - 0.9069583733148038
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9029503105590062
  - 0.8985282726568552
  - 0.9126024190401872
  - 0.9029503105590062
  - 0.9051690633501749
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9077503330283917
  - 0.9057188233629084
  - 0.9177709494190789
  - 0.907933298024299
  - 0.9118687379354721
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8603218584965696
  - 0.8545152403585092
  - 0.8705922561497611
  - 0.8593260269731907
  - 0.8653487156818637
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7814165808351855
  - 0.8191794452657366
  - 0.8151539782353734
  - 0.7704697649465092
  - 0.7829040576133599
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.043437983109056374
  - 0.04117698308606016
  - 0.07286693048610669
  - 0.04029464392255756
  - 0.04596004099708496
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.22431681397255754
  - 0.21193900943635646
  - 0.30385897739163653
  - 0.21722119771674475
  - 0.2418874258496772
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.031706939108391834
  - 0.04719773865627415
  - 0.05296302928285176
  - 0.0448905600776823
  - 0.05258653704184576
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11329380602812539
  - 0.09995630318550265
  - 0.18235913693755135
  - 0.09843280182802554
  - 0.12245049754273488
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.42804447056491335
  - 0.4038984487139496
  - 0.3912284577009492
  - 0.42580884596910556
  - 0.3520435984757355
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.116279069767442
  - -2.9689922480620154
  - -2.7131782945736433
  - -3.1550387596899223
  - -3.2790697674418605
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05099959200326396
  - -0.05344757241942064
  - -0.045695634434924526
  - -0.05099959200326397
  - -0.04977560179518564
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.050999592003263976
  - -0.05344757241942064
  - -0.04569563443492452
  - -0.050999592003263976
  - -0.049775601795185635
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05099959200326397
  - -0.053447572419420636
  - -0.045695634434924526
  - -0.05099959200326397
  - -0.049775601795185635
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0762861169837914
  - -0.07961296893566457
  - -0.07026756689172294
  - -0.07751937984496124
  - -0.0732856290995826
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08884392258195269
  - -0.07189171534246774
  - -0.07330648021482496
  - -0.09412588032629071
  - -0.09200939469407321
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.949000407996736
  - 0.9465524275805793
  - 0.9543043655650756
  - 0.949000407996736
  - 0.9502243982048143
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.949000407996736
  - 0.9465524275805793
  - 0.9543043655650755
  - 0.949000407996736
  - 0.9502243982048144
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9490004079967361
  - 0.9465524275805792
  - 0.9543043655650755
  - 0.9490004079967359
  - 0.9502243982048144
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9237138830162086
  - 0.9203870310643356
  - 0.9297324331082774
  - 0.9224806201550388
  - 0.9267143709004173
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.949000407996736
  - 0.9465524275805793
  - 0.9543043655650756
  - 0.949000407996736
  - 0.9502243982048143
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.949000407996736
  - 0.9465524275805793
  - 0.9543043655650755
  - 0.949000407996736
  - 0.9502243982048144
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9490004079967361
  - 0.9465524275805792
  - 0.9543043655650755
  - 0.9490004079967359
  - 0.9502243982048144
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9237138830162086
  - 0.9203870310643356
  - 0.9297324331082774
  - 0.9224806201550388
  - 0.9267143709004173
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8791263072128662
  - 0.882232525773634
  - 0.8938524420482158
  - 0.8677327804056835
  - 0.8932449450712454
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9039064643851189
  - 0.902992889993628
  - 0.918020571967229
  - 0.8914286654382731
  - 0.8969343452755776
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8843339808503138
  - 0.89513210092959
  - 0.9040402117244156
  - 0.867241141277671
  - 0.8864949289367636
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9696761350698712
  - 0.9645048071687269
  - 0.9610302261992845
  - 0.9616366063009046
  - 0.9589321235557557
  train_average_precision_macro_oob:
  - 0.4749138647459479
  - 0.470156381460623
  - 0.43686029681668453
  - 0.45502837143552494
  - 0.4882613228493399
  train_average_precision_micro:
  - 0.9122282224974568
  - 0.9053536352342304
  - 0.9064375469340578
  - 0.915099163668278
  - 0.9175373516080704
  train_average_precision_micro_oob:
  - 0.5369139419621148
  - 0.5206780782104367
  - 0.5264588764224869
  - 0.5570869565983697
  - 0.5763898927411066
  train_average_precision_samples:
  - 0.5006217700258397
  - 0.5155869324473976
  - 0.5134739910175957
  - 0.5062742248062015
  - 0.5295863325950535
  train_average_precision_samples_oob:
  - 0.33355043863278794
  - 0.33809910640706
  - 0.33856215307037446
  - 0.33354812232320213
  - 0.3447664571863578
  train_average_precision_weighted:
  - 0.9665928319457157
  - 0.962549428546853
  - 0.9581832070661866
  - 0.9594089008793246
  - 0.9538567961790727
  train_average_precision_weighted_oob:
  - 0.5746075428695231
  - 0.5607700375977553
  - 0.5532384265977647
  - 0.5756913507312182
  - 0.6030554517711856
  train_f1_macro:
  - 0.9568543451652386
  - 0.9572623419012648
  - 0.9560383516931864
  - 0.9574663402692778
  - 0.958078335373317
  train_f1_macro_oob:
  - 0.9509383924928599
  - 0.9512443900448795
  - 0.9520603835169318
  - 0.952672378620971
  - 0.9534883720930232
  train_f1_micro:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9560383516931864
  - 0.9574663402692778
  - 0.958078335373317
  train_f1_micro_oob:
  - 0.95093839249286
  - 0.9512443900448796
  - 0.9520603835169319
  - 0.952672378620971
  - 0.9534883720930233
  train_f1_samples:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9560383516931865
  - 0.9574663402692778
  - 0.9580783353733171
  train_f1_samples_oob:
  - 0.9509383924928602
  - 0.9512443900448797
  - 0.9520603835169319
  - 0.952672378620971
  - 0.9534883720930234
  train_f1_weighted:
  - 0.9423690932311621
  - 0.9429100505300406
  - 0.9416995758373555
  - 0.9429869417641218
  - 0.942940410675188
  train_f1_weighted_oob:
  - 0.9280272654370489
  - 0.9279234702292594
  - 0.9322509872751208
  - 0.9321705426356589
  - 0.9330951535593822
  train_jaccard_macro:
  - 0.9182523120560626
  - 0.9189716141070376
  - 0.9167487784283743
  - 0.9193414766836502
  - 0.9205402818709156
  train_jaccard_macro_oob:
  - 0.908178258439949
  - 0.9087456898676212
  - 0.9099340206713326
  - 0.9110553532693852
  - 0.9125315188990095
  train_jaccard_micro:
  - 0.9172777940745086
  - 0.9180279761322508
  - 0.9157791890571568
  - 0.9184032873495744
  - 0.9195301027900147
  train_jaccard_micro_oob:
  - 0.9064657267865824
  - 0.9070219801595021
  - 0.9085069106482383
  - 0.9096221269964939
  - 0.9111111111111111
  train_jaccard_samples:
  - 0.9220528081625149
  - 0.92241523643192
  - 0.9204596338949221
  - 0.9231606655898871
  - 0.9239564320074937
  train_jaccard_samples_oob:
  - 0.9121583449692652
  - 0.9124495934354377
  - 0.9137690643251817
  - 0.9150807876540941
  - 0.9159460960901811
  train_jaccard_weighted:
  - 0.8917206459400424
  - 0.8926051605169469
  - 0.890452114442422
  - 0.8927904659487738
  - 0.8928454047796044
  train_jaccard_weighted_oob:
  - 0.8674697338494517
  - 0.8673223316737709
  - 0.8744047884053034
  - 0.8742531708493779
  - 0.8758767775945597
  train_label_ranking_average_precision_score:
  - 0.9657380490956071
  - 0.9671373200442964
  - 0.9630863941183707
  - 0.9733284883720928
  - 0.9753227667035804
  train_label_ranking_average_precision_score_oob:
  - 0.7986667177025552
  - 0.7896494940039587
  - 0.7881745561711494
  - 0.8006023858890935
  - 0.7905028912948844
  train_matthews_corrcoef_macro:
  - 0.1286677012965388
  - 0.12342552052917745
  - 0.14104523486969614
  - 0.14532620125698745
  - 0.19011545812287334
  train_matthews_corrcoef_macro_oob:
  - 0.06315593266501324
  - 0.060338679132343934
  - 0.08017536806505225
  - 0.08855497680522495
  - 0.11826107173084073
  train_matthews_corrcoef_micro:
  - 0.425897762019759
  - 0.42587813700148064
  - 0.422489031473385
  - 0.44024390945348846
  - 0.4541422565961828
  train_matthews_corrcoef_micro_oob:
  - 0.2730055826915471
  - 0.2684201804517167
  - 0.32788116310532267
  - 0.32767431446502976
  - 0.3512828976033812
  train_matthews_corrcoef_samples:
  - 0.11426856873467173
  - 0.11142624402700643
  - 0.11185440741759609
  - 0.11653854103935407
  - 0.12468137286692647
  train_matthews_corrcoef_samples_oob:
  - 0.0505659954558474
  - 0.057635628656163604
  - 0.07310421909114022
  - 0.07258781358167421
  - 0.07452103892757687
  train_matthews_corrcoef_weighted:
  - 0.27843505499509025
  - 0.2709291480542167
  - 0.2848863454593601
  - 0.30029910331186443
  - 0.3367588118685983
  train_matthews_corrcoef_weighted_oob:
  - 0.15504624958471103
  - 0.14491459510090307
  - 0.19057174487725304
  - 0.20120286932158002
  - 0.2322503107857771
  train_ndgc:
  - 0.5120885022869515
  - 0.5272261716771356
  - 0.5263904365313811
  - 0.5159316250581868
  - 0.538934510257041
  train_ndgc_oob:
  - 0.394886070033177
  - 0.401363742265935
  - 0.4029353579760994
  - 0.3947124186792829
  - 0.406822218266851
  train_neg_coverage_error:
  - -1.1627906976744187
  - -1.1511627906976745
  - -1.2054263565891472
  - -1.1511627906976745
  - -1.1569767441860466
  train_neg_coverage_error_oob:
  - -2.992248062015504
  - -3.056201550387597
  - -3.24031007751938
  - -2.992248062015504
  - -3.060077519379845
  train_neg_hamming_loss_macro:
  - -0.04314565483476132
  - -0.04273765809873521
  - -0.043961648306813546
  - -0.04253365973072215
  - -0.04192166462668299
  train_neg_hamming_loss_macro_oob:
  - -0.04906160750713994
  - -0.04875560995512036
  - -0.04793961648306813
  - -0.04732762137902897
  - -0.046511627906976744
  train_neg_hamming_loss_micro:
  - -0.04314565483476132
  - -0.04273765809873521
  - -0.043961648306813546
  - -0.04253365973072215
  - -0.04192166462668299
  train_neg_hamming_loss_micro_oob:
  - -0.04906160750713994
  - -0.048755609955120356
  - -0.04793961648306814
  - -0.04732762137902897
  - -0.046511627906976744
  train_neg_hamming_loss_samples:
  - -0.04314565483476132
  - -0.04273765809873521
  - -0.04396164830681354
  - -0.04253365973072215
  - -0.04192166462668299
  train_neg_hamming_loss_samples_oob:
  - -0.049061607507139934
  - -0.048755609955120356
  - -0.04793961648306813
  - -0.04732762137902896
  - -0.046511627906976744
  train_neg_hamming_loss_weighted:
  - -0.05763090676883781
  - -0.057089949469959364
  - -0.05830042416264443
  - -0.05701305823587829
  - -0.057059589324812116
  train_neg_hamming_loss_weighted_oob:
  - -0.0719727345629511
  - -0.07207652977074056
  - -0.06774901272487933
  - -0.0678294573643411
  - -0.0669048464406178
  train_neg_label_ranking_loss:
  - -0.006004721009850969
  - -0.005613322401113099
  - -0.006556337750763195
  - -0.005166194384730636
  - -0.004900897697580325
  train_neg_label_ranking_loss_oob:
  - -0.08364769730193808
  - -0.08712559337986835
  - -0.09082113515253051
  - -0.0821952354784092
  - -0.08675350954335222
  train_precision_macro:
  - 0.9568543451652386
  - 0.9572623419012648
  - 0.9560383516931864
  - 0.9574663402692778
  - 0.958078335373317
  train_precision_macro_oob:
  - 0.9509383924928599
  - 0.9512443900448795
  - 0.9520603835169318
  - 0.952672378620971
  - 0.9534883720930232
  train_precision_micro:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9560383516931864
  - 0.9574663402692778
  - 0.958078335373317
  train_precision_micro_oob:
  - 0.95093839249286
  - 0.9512443900448796
  - 0.9520603835169319
  - 0.952672378620971
  - 0.9534883720930233
  train_precision_samples:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9560383516931865
  - 0.9574663402692778
  - 0.9580783353733171
  train_precision_samples_oob:
  - 0.9509383924928602
  - 0.9512443900448797
  - 0.9520603835169319
  - 0.952672378620971
  - 0.9534883720930234
  train_precision_weighted:
  - 0.9423690932311621
  - 0.9429100505300406
  - 0.9416995758373555
  - 0.9429869417641218
  - 0.942940410675188
  train_precision_weighted_oob:
  - 0.9280272654370489
  - 0.9279234702292594
  - 0.9322509872751208
  - 0.9321705426356589
  - 0.9330951535593822
  train_recall_macro:
  - 0.9568543451652386
  - 0.9572623419012648
  - 0.9560383516931864
  - 0.9574663402692778
  - 0.958078335373317
  train_recall_macro_oob:
  - 0.9509383924928599
  - 0.9512443900448795
  - 0.9520603835169318
  - 0.952672378620971
  - 0.9534883720930232
  train_recall_micro:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9560383516931864
  - 0.9574663402692778
  - 0.958078335373317
  train_recall_micro_oob:
  - 0.95093839249286
  - 0.9512443900448796
  - 0.9520603835169319
  - 0.952672378620971
  - 0.9534883720930233
  train_recall_samples:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9560383516931865
  - 0.9574663402692778
  - 0.9580783353733171
  train_recall_samples_oob:
  - 0.9509383924928602
  - 0.9512443900448797
  - 0.9520603835169319
  - 0.952672378620971
  - 0.9534883720930234
  train_recall_weighted:
  - 0.9423690932311621
  - 0.9429100505300406
  - 0.9416995758373555
  - 0.9429869417641218
  - 0.942940410675188
  train_recall_weighted_oob:
  - 0.9280272654370489
  - 0.9279234702292594
  - 0.9322509872751208
  - 0.9321705426356589
  - 0.9330951535593822
  train_roc_auc_macro:
  - 0.9980481885937508
  - 0.9979064027233902
  - 0.9977070955953146
  - 0.9978005032596047
  - 0.9977359189133872
  train_roc_auc_macro_oob:
  - 0.8948812896458744
  - 0.8962173769243846
  - 0.8944568262383301
  - 0.8959501172704808
  - 0.878897724548997
  train_roc_auc_micro:
  - 0.9943498767028178
  - 0.9942120794879972
  - 0.9941970044067203
  - 0.9947255469396862
  - 0.9949273246249012
  train_roc_auc_micro_oob:
  - 0.9133056110743738
  - 0.9108989313278539
  - 0.9073970239378909
  - 0.9153153825029156
  - 0.9095845535009213
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9971815539496826
  - 0.99694833075439
  - 0.9967292677116135
  - 0.9968197362464287
  - 0.996823876342752
  train_roc_auc_weighted_oob:
  - 0.9062673122201436
  - 0.9052831555580483
  - 0.9011566289165877
  - 0.9089988264657601
  - 0.9003981319413006
start: 2023-12-12 16:53:30.467318
wrapper: null
