active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D8AMzMzMzPzvwAzMzMzM/O/ADMzMzMz878AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:47:55.516758
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__7
  params: {}
hash: 20903d2d7c7fd7d2153a86ab3523f72a5cc99b5b026205ff1ca2de0945c003b2
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/20903d2_20231221T164431860419_embedding_weak__7_Gram_positive.yml
results:
  fit_time:
  - 17.132473945617676
  - 5.520705699920654
  - 189.67659640312195
  - 186.91401052474976
  - 187.56822180747986
  score_time:
  - 0.0
  - 0.0
  - 4.217111587524414
  - 3.8718984127044678
  - 4.334700107574463
  test_average_precision_macro:
  - .nan
  - .nan
  - 0.8740844875568234
  - 0.9908535936099594
  - 0.8342371750028641
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - .nan
  - .nan
  - 0.9918354448444994
  - 0.9878986221410214
  - 0.96589897028264
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - .nan
  - .nan
  - 0.9714285714285714
  - 0.9650793650793652
  - 0.9591503267973855
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - .nan
  - .nan
  - 0.9768223066409212
  - 0.9905955461649775
  - 0.9598021116670723
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - .nan
  - .nan
  - 0.9690476190476192
  - 0.9666666666666666
  - 0.9632352941176471
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - .nan
  - .nan
  - 0.969047619047619
  - 0.9666666666666667
  - 0.9632352941176471
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - .nan
  - .nan
  - 0.969047619047619
  - 0.9666666666666667
  - 0.9632352941176471
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - .nan
  - .nan
  - 0.9694331065759637
  - 0.9684353741496597
  - 0.9675716440422323
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - .nan
  - .nan
  - 0.9403182333985519
  - 0.9358494008026719
  - 0.9291961609189612
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - .nan
  - .nan
  - 0.9399538106235565
  - 0.9354838709677419
  - 0.9290780141843972
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - .nan
  - .nan
  - 0.9568253968253968
  - 0.9555555555555556
  - 0.9490196078431373
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - .nan
  - .nan
  - 0.9411205704264386
  - 0.9392008831261167
  - 0.9372306762185091
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - .nan
  - .nan
  - 0.9714285714285714
  - 0.965079365079365
  - 0.9591503267973858
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - .nan
  - .nan
  - 0.6925255868315305
  - 0.685064365340706
  - 0.6866811226822597
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - .nan
  - .nan
  - 0.9168362156677776
  - 0.9111111111111111
  - 0.9029253760041496
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - .nan
  - .nan
  - 0.907936507936508
  - 0.9111111111111112
  - 0.909137753015381
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - .nan
  - .nan
  - 0.9018076628238529
  - 0.8972727437180594
  - 0.8904316096351319
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - .nan
  - .nan
  - 0.9789102716326548
  - 0.97414836687075
  - 0.9702209866791052
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - .nan
  - .nan
  - -1.0571428571428572
  - -1.0761904761904761
  - -1.1372549019607843
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - .nan
  - .nan
  - -0.030952380952380953
  - -0.03333333333333333
  - -0.03676470588235294
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - .nan
  - .nan
  - -0.030952380952380953
  - -0.03333333333333333
  - -0.03676470588235294
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - .nan
  - .nan
  - -0.030952380952380953
  - -0.03333333333333333
  - -0.03676470588235294
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - .nan
  - .nan
  - -0.030566893424036283
  - -0.03156462585034013
  - -0.03242835595776772
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - .nan
  - .nan
  - -0.01904761904761905
  - -0.025396825396825397
  - -0.03758169934640523
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - .nan
  - .nan
  - 0.9690476190476192
  - 0.9666666666666666
  - 0.9632352941176471
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - .nan
  - .nan
  - 0.969047619047619
  - 0.9666666666666667
  - 0.9632352941176471
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - .nan
  - .nan
  - 0.969047619047619
  - 0.9666666666666667
  - 0.9632352941176471
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - .nan
  - .nan
  - 0.9694331065759637
  - 0.9684353741496597
  - 0.9675716440422323
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - .nan
  - .nan
  - 0.9690476190476192
  - 0.9666666666666666
  - 0.9632352941176471
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - .nan
  - .nan
  - 0.969047619047619
  - 0.9666666666666667
  - 0.9632352941176471
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - .nan
  - .nan
  - 0.969047619047619
  - 0.9666666666666667
  - 0.9632352941176471
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - .nan
  - .nan
  - 0.9694331065759637
  - 0.9684353741496597
  - 0.9675716440422323
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - .nan
  - .nan
  - 0.9926882780890134
  - 0.9965777116402117
  - 0.9749741425209297
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - .nan
  - .nan
  - 0.9970672713529857
  - 0.995525321239607
  - 0.9808957489878543
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.9809523809523809
  - 0.9746031746031746
  - 0.9624183006535947
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - .nan
  - .nan
  - 0.99526104886399
  - 0.9963879440665155
  - 0.9884326875937235
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - .nan
  - .nan
  - 0.9156867897679878
  - 0.9079772367056542
  - 0.9454281724315808
  train_average_precision_macro_oob:
  - .nan
  - .nan
  - 0.8712890106905309
  - 0.848224502913389
  - 0.9074098090560304
  train_average_precision_micro:
  - .nan
  - .nan
  - 0.9896875591651165
  - 0.9891088654007295
  - 0.9917529472470675
  train_average_precision_micro_oob:
  - .nan
  - .nan
  - 0.9793377090115992
  - 0.9795113516138382
  - 0.9839013868559213
  train_average_precision_samples:
  - .nan
  - .nan
  - 0.9748389694041868
  - 0.966183574879227
  - 0.9740207833733014
  train_average_precision_samples_oob:
  - .nan
  - .nan
  - 0.9603462157809984
  - 0.9647745571658616
  - 0.9670263788968825
  train_average_precision_weighted:
  - .nan
  - .nan
  - 0.9800681220060053
  - 0.9798891923797134
  - 0.9864825145847462
  train_average_precision_weighted_oob:
  - .nan
  - .nan
  - 0.9687791134784447
  - 0.9663428238805697
  - 0.9754440803864878
  train_f1_macro:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.9673913043478262
  - 0.9754196642685851
  train_f1_macro_oob:
  - .nan
  - .nan
  - 0.9661835748792271
  - 0.9619565217391305
  - 0.9658273381294964
  train_f1_micro:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.967391304347826
  - 0.9754196642685852
  train_f1_micro_oob:
  - .nan
  - .nan
  - 0.966183574879227
  - 0.9619565217391305
  - 0.9658273381294964
  train_f1_samples:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.967391304347826
  - 0.9754196642685852
  train_f1_samples_oob:
  - .nan
  - .nan
  - 0.966183574879227
  - 0.9619565217391305
  - 0.9658273381294964
  train_f1_weighted:
  - .nan
  - .nan
  - 0.9792201188082196
  - 0.970552203961815
  - 0.9786690933649264
  train_f1_weighted_oob:
  - .nan
  - .nan
  - 0.9687897279430462
  - 0.9654554700321291
  - 0.9667416424855343
  train_jaccard_macro:
  - .nan
  - .nan
  - 0.949632705050121
  - 0.9370452571605755
  - 0.9521913198739265
  train_jaccard_macro_oob:
  - .nan
  - .nan
  - 0.9347423785623277
  - 0.9273553548397842
  - 0.9341766877981832
  train_jaccard_micro:
  - .nan
  - .nan
  - 0.9493819894055326
  - 0.9368421052631579
  - 0.952018724400234
  train_jaccard_micro_oob:
  - .nan
  - .nan
  - 0.9345794392523364
  - 0.9267015706806283
  - 0.9339130434782609
  train_jaccard_samples:
  - .nan
  - .nan
  - 0.9623188405797101
  - 0.9555555555555556
  - 0.9659700810779949
  train_jaccard_samples_oob:
  - .nan
  - .nan
  - 0.9513687600644123
  - 0.9471819645732689
  - 0.9531803128925431
  train_jaccard_weighted:
  - .nan
  - .nan
  - 0.9595068996693279
  - 0.9429993028475271
  - 0.9584085314896279
  train_jaccard_weighted_oob:
  - .nan
  - .nan
  - 0.9396393443456396
  - 0.9339121217237226
  - 0.9358897643297528
  train_label_ranking_average_precision_score:
  - .nan
  - .nan
  - 0.9748389694041869
  - 0.966183574879227
  - 0.9740207833733014
  train_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - 0.9603462157809983
  - 0.9647745571658615
  - 0.9670263788968824
  train_matthews_corrcoef_macro:
  - .nan
  - .nan
  - 0.7075303905276029
  - 0.6938295366304185
  - 0.8302287506682093
  train_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - 0.6887661219520324
  - 0.6772963118717525
  - 0.8066767325207559
  train_matthews_corrcoef_micro:
  - .nan
  - .nan
  - 0.9306874211950734
  - 0.9133414581414138
  - 0.9346101889894851
  train_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - 0.9093574045369448
  - 0.8982494992485458
  - 0.9088301321321166
  train_matthews_corrcoef_samples:
  - .nan
  - .nan
  - 0.9238263324037144
  - 0.9151853897245125
  - 0.9357795795666222
  train_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - 0.8970983513870424
  - 0.8930725864917123
  - 0.90743097715644
  train_matthews_corrcoef_weighted:
  - .nan
  - .nan
  - 0.9164928567344169
  - 0.8984887583752842
  - 0.933944797230814
  train_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - 0.8923574471139716
  - 0.8829598728758735
  - 0.9055620892157122
  train_ndgc:
  - .nan
  - .nan
  - 0.9814356126830759
  - 0.9750926242801534
  - 0.9807857681483398
  train_ndgc_oob:
  - .nan
  - .nan
  - 0.9706321962375614
  - 0.9739004773062198
  - 0.9754908752807623
  train_neg_coverage_error:
  - .nan
  - .nan
  - -1.070048309178744
  - -1.0893719806763285
  - -1.0599520383693046
  train_neg_coverage_error_oob:
  - .nan
  - .nan
  - -1.1159420289855073
  - -1.106280193236715
  - -1.0863309352517985
  train_neg_hamming_loss_macro:
  - .nan
  - .nan
  - -0.025966183574879224
  - -0.03260869565217391
  - -0.024580335731414868
  train_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - -0.033816425120772944
  - -0.03804347826086957
  - -0.0341726618705036
  train_neg_hamming_loss_micro:
  - .nan
  - .nan
  - -0.025966183574879228
  - -0.03260869565217391
  - -0.024580335731414868
  train_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - -0.033816425120772944
  - -0.03804347826086957
  - -0.0341726618705036
  train_neg_hamming_loss_samples:
  - .nan
  - .nan
  - -0.025966183574879228
  - -0.03260869565217391
  - -0.024580335731414868
  train_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - -0.033816425120772944
  - -0.03804347826086957
  - -0.0341726618705036
  train_neg_hamming_loss_weighted:
  - .nan
  - .nan
  - -0.020779881191780505
  - -0.029447796038185054
  - -0.021330906635073803
  train_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - -0.031210272056953977
  - -0.034544529967870934
  - -0.03325835751446575
  train_neg_label_ranking_loss:
  - .nan
  - .nan
  - -0.019927536231884056
  - -0.02616747181964573
  - -0.01838529176658673
  train_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - -0.035024154589371984
  - -0.031803542673107886
  - -0.02717825739408473
  train_precision_macro:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.9673913043478262
  - 0.9754196642685851
  train_precision_macro_oob:
  - .nan
  - .nan
  - 0.9661835748792271
  - 0.9619565217391305
  - 0.9658273381294964
  train_precision_micro:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.967391304347826
  - 0.9754196642685852
  train_precision_micro_oob:
  - .nan
  - .nan
  - 0.966183574879227
  - 0.9619565217391305
  - 0.9658273381294964
  train_precision_samples:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.967391304347826
  - 0.9754196642685852
  train_precision_samples_oob:
  - .nan
  - .nan
  - 0.966183574879227
  - 0.9619565217391305
  - 0.9658273381294964
  train_precision_weighted:
  - .nan
  - .nan
  - 0.9792201188082196
  - 0.970552203961815
  - 0.9786690933649264
  train_precision_weighted_oob:
  - .nan
  - .nan
  - 0.9687897279430462
  - 0.9654554700321291
  - 0.9667416424855343
  train_recall_macro:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.9673913043478262
  - 0.9754196642685851
  train_recall_macro_oob:
  - .nan
  - .nan
  - 0.9661835748792271
  - 0.9619565217391305
  - 0.9658273381294964
  train_recall_micro:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.967391304347826
  - 0.9754196642685852
  train_recall_micro_oob:
  - .nan
  - .nan
  - 0.966183574879227
  - 0.9619565217391305
  - 0.9658273381294964
  train_recall_samples:
  - .nan
  - .nan
  - 0.9740338164251208
  - 0.967391304347826
  - 0.9754196642685852
  train_recall_samples_oob:
  - .nan
  - .nan
  - 0.966183574879227
  - 0.9619565217391305
  - 0.9658273381294964
  train_recall_weighted:
  - .nan
  - .nan
  - 0.9792201188082196
  - 0.970552203961815
  - 0.9786690933649264
  train_recall_weighted_oob:
  - .nan
  - .nan
  - 0.9687897279430462
  - 0.9654554700321291
  - 0.9667416424855343
  train_roc_auc_macro:
  - .nan
  - .nan
  - 0.9950779092469377
  - 0.9943913811890475
  - 0.9960629865610235
  train_roc_auc_macro_oob:
  - .nan
  - .nan
  - 0.986738866872266
  - 0.9840449612030547
  - 0.9912210273935891
  train_roc_auc_micro:
  - .nan
  - .nan
  - 0.9964791181949588
  - 0.9960346600088119
  - 0.9971719619132059
  train_roc_auc_micro_oob:
  - .nan
  - .nan
  - 0.9894470167193574
  - 0.9887899915746187
  - 0.9927923245517655
  train_roc_auc_samples:
  - .nan
  - .nan
  - 0.980072463768116
  - 0.9738325281803542
  - 0.9816147082334132
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - 0.964975845410628
  - 0.9681964573268921
  - 0.9728217426059154
  train_roc_auc_weighted:
  - .nan
  - .nan
  - 0.9963980786613827
  - 0.9962814507384091
  - 0.9971747961926282
  train_roc_auc_weighted_oob:
  - .nan
  - .nan
  - 0.9916607308733485
  - 0.9901152536347367
  - 0.9925449278965278
start: 2023-12-21 16:44:31.860419
wrapper: null
