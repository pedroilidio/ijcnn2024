active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8D8AAAAAAAAAwAAAAAAAAAAAAAAAAAAA8D8AAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mZmZmZmZAcCQmZmZmZnJv5yZmZmZmek/nJmZmZmZ6T+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz8z/AmZmZmZnJPzgzMzMzM/M/wJmZmZmZyT9kZmZmZmYGwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzA0A0MzMzMzMLQKCZmZmZmdk/mJmZmZmZ+b9mZmZmZmYSwA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJPzQzMzMzM/M/zMzMzMzM/L+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:52:27.492726
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f022bf79b4a2b967413ff856f0e52bbff93a56539ca4d0164890bddc9c29f41e
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f022bf7_20231212T165202503976_embedding__4_birds.yml
results:
  fit_time:
  - 10.313028335571289
  - 10.239423513412476
  - 10.62988805770874
  - 11.44449234008789
  - 11.415587902069092
  score_time:
  - 3.6931312084198
  - 3.603740930557251
  - 3.777543306350708
  - 3.7851550579071045
  - 3.627505302429199
  test_average_precision_macro:
  - 0.49091016412995314
  - 0.49061542174250333
  - 0.4386204103226817
  - 0.5847463955506637
  - 0.5476740075525178
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5202620976441525
  - 0.4857614338527132
  - 0.4906509207531571
  - 0.5473889968485304
  - 0.47576564683987643
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3675991697794023
  - 0.32342845632859313
  - 0.2896078580289107
  - 0.31524581463021956
  - 0.33974150311359613
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6077887284792809
  - 0.5856734299316741
  - 0.5258826330846122
  - 0.6361508443529776
  - 0.5605754427532814
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9526723786209711
  - 0.9506323949408405
  - 0.9526723786209711
  - 0.9498164014687882
  - 0.9461444308445531
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.952672378620971
  - 0.9506323949408405
  - 0.952672378620971
  - 0.9498164014687882
  - 0.9461444308445532
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.952672378620971
  - 0.9506323949408405
  - 0.952672378620971
  - 0.9498164014687882
  - 0.9461444308445532
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9319151493299681
  - 0.9253650621957816
  - 0.9271937984496125
  - 0.9260042283298097
  - 0.9181306117896381
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9111311649917864
  - 0.9079530512728506
  - 0.9116182874024128
  - 0.9062313827584498
  - 0.9002637604312503
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9096221269964939
  - 0.9059097978227061
  - 0.9096221269964939
  - 0.9044289044289044
  - 0.8977932636469221
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9140827602910515
  - 0.9119275376909352
  - 0.9153799295861986
  - 0.910616273963089
  - 0.9037317418004982
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8738943385860077
  - 0.8637641199700989
  - 0.8664791395966559
  - 0.8640710612784185
  - 0.8512356651413561
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7939557589266891
  - 0.7885447353983603
  - 0.7779799510521664
  - 0.7881140316844831
  - 0.766098092260883
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05932360793599064
  - 0.044588287050127365
  - 0.06022026406500683
  - 0.06089795485803271
  - 0.04197662574083209
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3094946865728814
  - 0.24288781821874914
  - 0.2618896808394834
  - 0.2544554948090293
  - 0.2184269936753604
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.06952236806976575
  - 0.0457834585244302
  - 0.0456398753339357
  - 0.04813417625307244
  - 0.04347187674162593
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.159440900512897
  - 0.11323922982458681
  - 0.14185568784855565
  - 0.14725286651438946
  - 0.0993806878370211
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4267807969918148
  - 0.38895617431771956
  - 0.3568040133856672
  - 0.37959202088678967
  - 0.4084684499451412
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.9069767441860463
  - -3.5736434108527133
  - -3.2713178294573644
  - -3.0775193798449614
  - -3.302325581395349
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04732762137902896
  - -0.049367605059159526
  - -0.04732762137902896
  - -0.05018359853121175
  - -0.05385556915544676
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04732762137902897
  - -0.049367605059159526
  - -0.04732762137902897
  - -0.05018359853121175
  - -0.05385556915544676
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04732762137902896
  - -0.049367605059159526
  - -0.04732762137902896
  - -0.050183598531211744
  - -0.05385556915544675
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06808485067003185
  - -0.0746349378042185
  - -0.0728062015503876
  - -0.07399577167019028
  - -0.08186938821036195
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0865044079647363
  - -0.10216296218348202
  - -0.10107638662700223
  - -0.08339150905840373
  - -0.0975869288283789
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9526723786209711
  - 0.9506323949408405
  - 0.9526723786209711
  - 0.9498164014687882
  - 0.9461444308445531
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.952672378620971
  - 0.9506323949408405
  - 0.952672378620971
  - 0.9498164014687882
  - 0.9461444308445532
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.952672378620971
  - 0.9506323949408405
  - 0.952672378620971
  - 0.9498164014687882
  - 0.9461444308445532
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9319151493299681
  - 0.9253650621957816
  - 0.9271937984496125
  - 0.9260042283298097
  - 0.9181306117896381
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9526723786209711
  - 0.9506323949408405
  - 0.9526723786209711
  - 0.9498164014687882
  - 0.9461444308445531
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.952672378620971
  - 0.9506323949408405
  - 0.952672378620971
  - 0.9498164014687882
  - 0.9461444308445532
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.952672378620971
  - 0.9506323949408405
  - 0.952672378620971
  - 0.9498164014687882
  - 0.9461444308445532
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9319151493299681
  - 0.9253650621957816
  - 0.9271937984496125
  - 0.9260042283298097
  - 0.9181306117896381
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8847245142440441
  - 0.8879713079004421
  - .nan
  - 0.8955163681984956
  - 0.8812590734685082
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9032576834992555
  - 0.8929017353390889
  - 0.8935924333619948
  - 0.9081892665333803
  - 0.9009951208583307
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8974659105941598
  - 0.895125946453914
  - .nan
  - 0.905011654302522
  - 0.8741964135332799
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9653417874279105
  - 0.9650147839413596
  - 0.95968479013005
  - 0.96503436037326
  - 0.9678808585460262
  train_average_precision_macro_oob:
  - 0.4623488352591322
  - 0.4700656056944365
  - 0.4850754365354441
  - 0.4504686697622788
  - 0.4594788818427545
  train_average_precision_micro:
  - 0.9052223639952239
  - 0.9131878177280263
  - 0.9121675671032011
  - 0.9118300717073866
  - 0.9103205461919471
  train_average_precision_micro_oob:
  - 0.5188883171939663
  - 0.54945394603627
  - 0.5624033249150603
  - 0.5288638501488337
  - 0.5424960974184851
  train_average_precision_samples:
  - 0.5035100590623847
  - 0.5183867817152702
  - 0.5198151224314016
  - 0.5199473975636766
  - 0.5080014919404454
  train_average_precision_samples_oob:
  - 0.3203192552331709
  - 0.3371000379843559
  - 0.354249156566188
  - 0.34142484212107654
  - 0.33136934435493554
  train_average_precision_weighted:
  - 0.9649254141212071
  - 0.9630959262257428
  - 0.9596575537557032
  - 0.9585194099384359
  - 0.9646033687719083
  train_average_precision_weighted_oob:
  - 0.554249347837108
  - 0.578320692241676
  - 0.5955386922780058
  - 0.561356703002061
  - 0.5785031589148123
  train_f1_macro:
  - 0.9561403508771928
  - 0.956548347613219
  - 0.957670338637291
  - 0.956752345981232
  - 0.9583843329253365
  train_f1_macro_oob:
  - 0.9512443900448795
  - 0.9509383924928598
  - 0.9516523867809056
  - 0.950734394124847
  - 0.9520603835169319
  train_f1_micro:
  - 0.956140350877193
  - 0.956548347613219
  - 0.9576703386372909
  - 0.9567523459812322
  - 0.9583843329253366
  train_f1_micro_oob:
  - 0.9512443900448796
  - 0.95093839249286
  - 0.9516523867809058
  - 0.950734394124847
  - 0.9520603835169319
  train_f1_samples:
  - 0.9561403508771931
  - 0.9565483476132192
  - 0.9576703386372909
  - 0.9567523459812322
  - 0.9583843329253366
  train_f1_samples_oob:
  - 0.9512443900448797
  - 0.9509383924928602
  - 0.9516523867809058
  - 0.9507343941248471
  - 0.9520603835169319
  train_f1_weighted:
  - 0.9409671465485419
  - 0.9392211148025102
  - 0.9438863732946469
  - 0.9412330333541239
  - 0.9453300218258448
  train_f1_weighted_oob:
  - 0.9285086747877447
  - 0.9276116648209671
  - 0.9310018903591685
  - 0.9271102497846683
  - 0.9300218258448106
  train_jaccard_macro:
  - 0.9169871683300195
  - 0.9178840191789062
  - 0.919678177872497
  - 0.918133427891279
  - 0.9209487771206207
  train_jaccard_macro_oob:
  - 0.9087278201168696
  - 0.9082210551974144
  - 0.9092244813058915
  - 0.907934926726212
  - 0.9101222785728017
  train_jaccard_micro:
  - 0.9159663865546218
  - 0.9167155425219942
  - 0.9187787454741169
  - 0.9170903402424716
  - 0.9200940070505288
  train_jaccard_micro_oob:
  - 0.9070219801595021
  - 0.9064657267865824
  - 0.9077641564506713
  - 0.9060950714494022
  - 0.9085069106482383
  train_jaccard_samples:
  - 0.9207570614420968
  - 0.9212969285517315
  - 0.9234313961513153
  - 0.9217609250091556
  - 0.9245210117935093
  train_jaccard_samples_oob:
  - 0.9126507746831307
  - 0.911709814452484
  - 0.9130162523691342
  - 0.9117348043485557
  - 0.9139339370886388
  train_jaccard_weighted:
  - 0.8891893123584199
  - 0.8864901719860453
  - 0.8944222321423777
  - 0.8897684927673785
  - 0.8968980379160818
  train_jaccard_weighted_oob:
  - 0.8683546236021198
  - 0.8668110741949497
  - 0.8722759997931543
  - 0.8661285484015364
  - 0.8709010836105817
  train_label_ranking_average_precision_score:
  - 0.9666883536360279
  - 0.9718751538082929
  - 0.9674895410360523
  - 0.9714977851605757
  - 0.9711797865140886
  train_label_ranking_average_precision_score_oob:
  - 0.7834975498068142
  - 0.7905884100773789
  - 0.801923575170839
  - 0.792975229717976
  - 0.7945476389285785
  train_matthews_corrcoef_macro:
  - 0.1198192053542843
  - 0.15184752919436287
  - 0.18416266065067857
  - 0.12798873344986866
  - 0.14859884051937486
  train_matthews_corrcoef_macro_oob:
  - 0.07105653050102072
  - 0.0787397667143195
  - 0.07641195039336242
  - 0.0595434123099377
  - 0.06457029648139134
  train_matthews_corrcoef_micro:
  - 0.4156786814769437
  - 0.42461053291088424
  - 0.4540100421563362
  - 0.4235440216737411
  - 0.4461224288161096
  train_matthews_corrcoef_micro_oob:
  - 0.29231857631128766
  - 0.2819048735790581
  - 0.31414236641519355
  - 0.2661814794104152
  - 0.28814286102525655
  train_matthews_corrcoef_samples:
  - 0.10571605731117978
  - 0.10284202288812322
  - 0.13158403084013673
  - 0.11241943401282029
  - 0.12208604764706965
  train_matthews_corrcoef_samples_oob:
  - 0.06258612195916377
  - 0.048331626972510894
  - 0.06912689499358629
  - 0.05462149273249392
  - 0.05643203746256728
  train_matthews_corrcoef_weighted:
  - 0.26467103737941866
  - 0.2896680487421351
  - 0.34099212115475064
  - 0.2703208810839091
  - 0.308842382755528
  train_matthews_corrcoef_weighted_oob:
  - 0.16883804095071164
  - 0.1716722182501576
  - 0.18417766612577616
  - 0.1453860457988906
  - 0.16097135216456535
  train_ndgc:
  - 0.5160341705457345
  - 0.5283412107658372
  - 0.531582848340383
  - 0.5298561164821894
  - 0.5183082623425255
  train_ndgc_oob:
  - 0.38603849767865794
  - 0.39966340938022066
  - 0.4144714241126337
  - 0.40293993653153254
  - 0.39346269650315974
  train_neg_coverage_error:
  - -1.193798449612403
  - -1.1608527131782946
  - -1.191860465116279
  - -1.1472868217054264
  - -1.1317829457364341
  train_neg_coverage_error_oob:
  - -3.124031007751938
  - -3.1705426356589146
  - -2.9786821705426356
  - -3.0949612403100777
  - -3.054263565891473
  train_neg_hamming_loss_macro:
  - -0.04385964912280702
  - -0.043451652386780906
  - -0.0423296613627091
  - -0.04324765401876785
  - -0.0416156670746634
  train_neg_hamming_loss_macro_oob:
  - -0.04875560995512036
  - -0.04906160750713994
  - -0.04834761321909425
  - -0.049265605875152996
  - -0.04793961648306813
  train_neg_hamming_loss_micro:
  - -0.043859649122807015
  - -0.043451652386780906
  - -0.042329661362709096
  - -0.04324765401876785
  - -0.0416156670746634
  train_neg_hamming_loss_micro_oob:
  - -0.048755609955120356
  - -0.04906160750713994
  - -0.04834761321909425
  - -0.049265605875152996
  - -0.04793961648306814
  train_neg_hamming_loss_samples:
  - -0.04385964912280701
  - -0.0434516523867809
  - -0.042329661362709096
  - -0.043247654018767845
  - -0.0416156670746634
  train_neg_hamming_loss_samples_oob:
  - -0.04875560995512036
  - -0.04906160750713994
  - -0.04834761321909425
  - -0.049265605875152996
  - -0.04793961648306813
  train_neg_hamming_loss_weighted:
  - -0.0590328534514581
  - -0.060778885197489856
  - -0.05611362670535308
  - -0.05876696664587603
  - -0.05466997817415519
  train_neg_hamming_loss_weighted_oob:
  - -0.07149132521225544
  - -0.07238833517903287
  - -0.06899810964083175
  - -0.07288975021533162
  - -0.0699781741551893
  train_neg_label_ranking_loss:
  - -0.006101585436400758
  - -0.005108335323793601
  - -0.006061821468798213
  - -0.005218783249734003
  - -0.005002172803130395
  train_neg_label_ranking_loss_oob:
  - -0.08784481940261693
  - -0.09026081362777669
  - -0.08016194377770984
  - -0.0888206669071922
  - -0.08440544151470965
  train_precision_macro:
  - 0.9561403508771928
  - 0.956548347613219
  - 0.957670338637291
  - 0.956752345981232
  - 0.9583843329253365
  train_precision_macro_oob:
  - 0.9512443900448795
  - 0.9509383924928598
  - 0.9516523867809056
  - 0.950734394124847
  - 0.9520603835169319
  train_precision_micro:
  - 0.956140350877193
  - 0.956548347613219
  - 0.9576703386372909
  - 0.9567523459812322
  - 0.9583843329253366
  train_precision_micro_oob:
  - 0.9512443900448796
  - 0.95093839249286
  - 0.9516523867809058
  - 0.950734394124847
  - 0.9520603835169319
  train_precision_samples:
  - 0.9561403508771931
  - 0.9565483476132192
  - 0.9576703386372909
  - 0.9567523459812322
  - 0.9583843329253366
  train_precision_samples_oob:
  - 0.9512443900448797
  - 0.9509383924928602
  - 0.9516523867809058
  - 0.9507343941248471
  - 0.9520603835169319
  train_precision_weighted:
  - 0.9409671465485419
  - 0.9392211148025102
  - 0.9438863732946469
  - 0.9412330333541239
  - 0.9453300218258448
  train_precision_weighted_oob:
  - 0.9285086747877447
  - 0.9276116648209671
  - 0.9310018903591685
  - 0.9271102497846683
  - 0.9300218258448106
  train_recall_macro:
  - 0.9561403508771928
  - 0.956548347613219
  - 0.957670338637291
  - 0.956752345981232
  - 0.9583843329253365
  train_recall_macro_oob:
  - 0.9512443900448795
  - 0.9509383924928598
  - 0.9516523867809056
  - 0.950734394124847
  - 0.9520603835169319
  train_recall_micro:
  - 0.956140350877193
  - 0.956548347613219
  - 0.9576703386372909
  - 0.9567523459812322
  - 0.9583843329253366
  train_recall_micro_oob:
  - 0.9512443900448796
  - 0.95093839249286
  - 0.9516523867809058
  - 0.950734394124847
  - 0.9520603835169319
  train_recall_samples:
  - 0.9561403508771931
  - 0.9565483476132192
  - 0.9576703386372909
  - 0.9567523459812322
  - 0.9583843329253366
  train_recall_samples_oob:
  - 0.9512443900448797
  - 0.9509383924928602
  - 0.9516523867809058
  - 0.9507343941248471
  - 0.9520603835169319
  train_recall_weighted:
  - 0.9409671465485419
  - 0.9392211148025102
  - 0.9438863732946469
  - 0.9412330333541239
  - 0.9453300218258448
  train_recall_weighted_oob:
  - 0.9285086747877447
  - 0.9276116648209671
  - 0.9310018903591685
  - 0.9271102497846683
  - 0.9300218258448106
  train_roc_auc_macro:
  - 0.9980106735585279
  - 0.9980141611556309
  - 0.9976213487635954
  - 0.9979038927049606
  - 0.9979394829835583
  train_roc_auc_macro_oob:
  - 0.892356457726743
  - 0.8794687011520079
  - 0.8986343995847047
  - 0.8652182733935013
  - 0.889803725493623
  train_roc_auc_micro:
  - 0.994267034111845
  - 0.9943867103905902
  - 0.9944008682404374
  - 0.9945692689100397
  - 0.9944676185528973
  train_roc_auc_micro_oob:
  - 0.9084115180720418
  - 0.9074155158345266
  - 0.9147163696951477
  - 0.9084306873353527
  - 0.9111025986473196
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9970817181936229
  - 0.9971825277807652
  - 0.9968775884250012
  - 0.9968986157888122
  - 0.9969360593078248
  train_roc_auc_weighted_oob:
  - 0.8978160437063323
  - 0.8986647430458624
  - 0.9087982726104448
  - 0.898872436160209
  - 0.9029040079401462
start: 2023-12-12 16:52:02.503976
wrapper: null
