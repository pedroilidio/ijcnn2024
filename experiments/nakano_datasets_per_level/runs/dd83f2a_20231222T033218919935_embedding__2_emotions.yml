active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMz4z9wZmZmZmYSQACZmZmZmdm/wJmZmZmZ+T+QmZmZmZkZwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:32:37.271870
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__2
  params: {}
hash: dd83f2adecb6a1d3ffb00969ee01706733941c536b48a061f9554a9fedff291e
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/dd83f2a_20231222T033218919935_embedding__2_emotions.yml
results:
  fit_time:
  - 6.339669466018677
  - 6.294658422470093
  - 6.745501279830933
  - 7.112745761871338
  - 6.800280570983887
  score_time:
  - 2.319617748260498
  - 2.3627090454101562
  - 2.513817310333252
  - 2.3094804286956787
  - 2.5664312839508057
  test_average_precision_macro:
  - 0.7509754524009166
  - 0.7022004275209262
  - 0.65860151031658
  - 0.7519057777771753
  - 0.7221162750382545
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7372768722770002
  - 0.7168179726560376
  - 0.6742870619111202
  - 0.7285035835711016
  - 0.7316816778951278
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8179613935969867
  - 0.8143274853801169
  - 0.7778711484593839
  - 0.8028252611585945
  - 0.7956
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7476163711994739
  - 0.706118447263099
  - 0.6601544648099653
  - 0.7529355783086342
  - 0.7246963469723874
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6892655367231638
  - 0.6769005847953217
  - 0.689075630252101
  - 0.6851851851851852
  - 0.7026666666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6892655367231638
  - 0.6769005847953217
  - 0.6890756302521008
  - 0.6851851851851852
  - 0.7026666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.689265536723164
  - 0.6769005847953217
  - 0.6890756302521011
  - 0.6851851851851851
  - 0.7026666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6753585397653193
  - 0.6630546955624355
  - 0.676205617382088
  - 0.673163940132266
  - 0.6906547085201793
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5295921488714549
  - 0.5152285202172602
  - 0.5289767530247452
  - 0.5242672038124379
  - 0.5447075773591804
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5258620689655172
  - 0.5116022099447514
  - 0.5256410256410257
  - 0.5211267605633803
  - 0.5416238437821171
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5363196125907991
  - 0.5236006683375104
  - 0.5364145658263305
  - 0.5323565323565325
  - 0.5527619047619046
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5143221581682099
  - 0.5003786976081179
  - 0.5149126051366302
  - 0.5111512349487268
  - 0.5312525425139671
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8179613935969867
  - 0.814327485380117
  - 0.7778711484593839
  - 0.8028252611585944
  - 0.7955999999999999
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02699304154486268
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.05582884419105413
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.005359792644353186
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.021252439949348896
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8778565000936394
  - 0.8739540016482297
  - 0.8490404186558183
  - 0.8658620196248822
  - 0.8582912511467492
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6779661016949152
  - -2.736842105263158
  - -2.9243697478991595
  - -2.752136752136752
  - -2.664
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3107344632768361
  - -0.3230994152046784
  - -0.3109243697478991
  - -0.31481481481481477
  - -0.29733333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3107344632768362
  - -0.3230994152046784
  - -0.31092436974789917
  - -0.3148148148148148
  - -0.29733333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.31073446327683624
  - -0.3230994152046784
  - -0.3109243697478993
  - -0.3148148148148148
  - -0.2973333333333334
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32464146023468055
  - -0.3369453044375645
  - -0.323794382617912
  - -0.32683605986773406
  - -0.30934529147982065
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.137758945386064
  - -0.1510477582846004
  - -0.18760504201680672
  - -0.15218423551756882
  - -0.15728888888888887
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6892655367231638
  - 0.6769005847953217
  - 0.689075630252101
  - 0.6851851851851852
  - 0.7026666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6892655367231638
  - 0.6769005847953217
  - 0.6890756302521008
  - 0.6851851851851852
  - 0.7026666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.689265536723164
  - 0.6769005847953217
  - 0.6890756302521011
  - 0.6851851851851851
  - 0.7026666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6753585397653193
  - 0.6630546955624355
  - 0.676205617382088
  - 0.673163940132266
  - 0.6906547085201793
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6892655367231638
  - 0.6769005847953217
  - 0.689075630252101
  - 0.6851851851851852
  - 0.7026666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6892655367231638
  - 0.6769005847953217
  - 0.6890756302521008
  - 0.6851851851851852
  - 0.7026666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.689265536723164
  - 0.6769005847953217
  - 0.6890756302521011
  - 0.6851851851851851
  - 0.7026666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6753585397653193
  - 0.6630546955624355
  - 0.676205617382088
  - 0.673163940132266
  - 0.6906547085201793
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8534776413758104
  - 0.8328904024171139
  - 0.813487854026319
  - 0.8626996580637017
  - 0.8439896811597102
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8695773365419457
  - 0.8575686795735074
  - 0.8363912693180985
  - 0.8726352527257505
  - 0.8635222641059895
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.862241054613936
  - 0.8489522417153996
  - 0.8123949579831934
  - 0.8478157644824311
  - 0.8427111111111111
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.848838840201368
  - 0.8346928773706351
  - 0.8126697345495326
  - 0.8604368507477852
  - 0.8451338395867282
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8897443886156032
  - 0.890890373688412
  - 0.8900732929709313
  - 0.8887838410691011
  - 0.8882840611135863
  train_average_precision_macro_oob:
  - 0.7245418174888525
  - 0.7324261053495752
  - 0.7327848891941334
  - 0.7083044350382677
  - 0.7094908744740368
  train_average_precision_micro:
  - 0.8940231128440834
  - 0.8927249287168234
  - 0.891147464045529
  - 0.8925444905841272
  - 0.8947492059214318
  train_average_precision_micro_oob:
  - 0.7328773461478083
  - 0.7355704551048293
  - 0.7317050225366306
  - 0.7246183511172373
  - 0.7314112439298288
  train_average_precision_samples:
  - 0.9042865497076024
  - 0.8992345163535143
  - 0.9035806375996249
  - 0.9138130252100841
  - 0.9046415004748338
  train_average_precision_samples_oob:
  - 0.8042456140350877
  - 0.7982196706100672
  - 0.8081282231598687
  - 0.8015172735760971
  - 0.8001839981006648
  train_average_precision_weighted:
  - 0.8916233570154796
  - 0.891386217839361
  - 0.8898147750569327
  - 0.8905465415911289
  - 0.8911001051480959
  train_average_precision_weighted_oob:
  - 0.729387668267043
  - 0.7358067515918181
  - 0.7346305248317395
  - 0.7176434608899944
  - 0.7171897405395787
  train_f1_macro:
  - 0.7147368421052631
  - 0.7115518441196937
  - 0.7222222222222222
  - 0.7076330532212886
  - 0.7111823361823362
  train_f1_macro_oob:
  - 0.6891228070175438
  - 0.6913709116214336
  - 0.689873417721519
  - 0.6894257703081234
  - 0.68482905982906
  train_f1_micro:
  - 0.7147368421052631
  - 0.7115518441196939
  - 0.7222222222222222
  - 0.7076330532212886
  - 0.7111823361823362
  train_f1_micro_oob:
  - 0.6891228070175439
  - 0.6913709116214335
  - 0.689873417721519
  - 0.6894257703081232
  - 0.6848290598290598
  train_f1_samples:
  - 0.7147368421052631
  - 0.7115518441196939
  - 0.7222222222222223
  - 0.7076330532212886
  - 0.7111823361823362
  train_f1_samples_oob:
  - 0.6891228070175437
  - 0.6913709116214335
  - 0.689873417721519
  - 0.6894257703081232
  - 0.6848290598290598
  train_f1_weighted:
  - 0.706858126149647
  - 0.7024899205174252
  - 0.7150208113076358
  - 0.6986963894915351
  - 0.7003428461055579
  train_f1_weighted_oob:
  - 0.6764255622144425
  - 0.6787863667495935
  - 0.6773151984455811
  - 0.6764019023618466
  - 0.671797286204066
  train_jaccard_macro:
  - 0.5578504333690251
  - 0.5541903171155543
  - 0.5665252686147707
  - 0.5492877238069257
  - 0.5545788404242816
  train_jaccard_macro_oob:
  - 0.529016788802014
  - 0.531579517618549
  - 0.5297845008225889
  - 0.5294273839815625
  - 0.5241099648997044
  train_jaccard_micro:
  - 0.5561015561015561
  - 0.5522549284364029
  - 0.5652173913043478
  - 0.5475480899485234
  - 0.5518098922354242
  train_jaccard_micro_oob:
  - 0.525695931477516
  - 0.5283169369848445
  - 0.5265700483091788
  - 0.5260486240983169
  - 0.5207148659626321
  train_jaccard_samples:
  - 0.5696741854636591
  - 0.5671040858932299
  - 0.5818766325095439
  - 0.560424169667867
  - 0.5666463166463167
  train_jaccard_samples_oob:
  - 0.537092731829574
  - 0.5392186101998211
  - 0.5381253767329717
  - 0.5371648659463785
  - 0.5317969067969068
  train_jaccard_weighted:
  - 0.5484839960840762
  - 0.5436375376432642
  - 0.5580223349499571
  - 0.539058316878427
  - 0.5420530808745736
  train_jaccard_weighted_oob:
  - 0.5151118100597848
  - 0.51774573434531
  - 0.5159954600494664
  - 0.5151695505621844
  - 0.5099426198436499
  train_label_ranking_average_precision_score:
  - 0.9042865497076017
  - 0.8992345163535137
  - 0.903580637599624
  - 0.9138130252100831
  - 0.9046415004748332
  train_label_ranking_average_precision_score_oob:
  - 0.8042456140350867
  - 0.7982196706100658
  - 0.8081282231598674
  - 0.801517273576096
  - 0.8001839981006637
  train_matthews_corrcoef_macro:
  - 0.18744659006101738
  - 0.17590129168232105
  - 0.22789347963372011
  - 0.14998419904400953
  - 0.2113890007647
  train_matthews_corrcoef_macro_oob:
  - 0.013240704615376108
  - 0.0
  - 0.028954923777569228
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.24288711079183672
  - 0.21480025627863203
  - 0.277854052350017
  - 0.20289610750809367
  - 0.24251276962357787
  train_matthews_corrcoef_micro_oob:
  - 0.027870972017278558
  - 0.0
  - 0.055790507041334224
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.09828793132998956
  - 0.08371862572945485
  - 0.12749269085401368
  - 0.06849819363671665
  - 0.09891316484867091
  train_matthews_corrcoef_samples_oob:
  - 0.0013314853305972125
  - 0.0
  - 0.006112587755487401
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.19805310987292682
  - 0.1847091155310415
  - 0.24209651016971578
  - 0.1644947131203369
  - 0.21446856409026074
  train_matthews_corrcoef_weighted_oob:
  - 0.010658244752399708
  - 0.0
  - 0.0331613470356429
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9376427238854363
  - 0.9336351150171793
  - 0.9373962876109423
  - 0.9455415142412221
  - 0.9393084113306018
  train_ndgc_oob:
  - 0.86688655955569
  - 0.8629148148560151
  - 0.8707962652795055
  - 0.8659580351848654
  - 0.8643519492198284
  train_neg_coverage_error:
  - -2.351578947368421
  - -2.3444676409185803
  - -2.369198312236287
  - -2.313025210084034
  - -2.378205128205128
  train_neg_coverage_error_oob:
  - -2.7494736842105265
  - -2.778705636743215
  - -2.7531645569620253
  - -2.7794117647058822
  - -2.782051282051282
  train_neg_hamming_loss_macro:
  - -0.28526315789473683
  - -0.2884481558803062
  - -0.2777777777777778
  - -0.2923669467787115
  - -0.2888176638176638
  train_neg_hamming_loss_macro_oob:
  - -0.31087719298245614
  - -0.30862908837856645
  - -0.31012658227848106
  - -0.3105742296918767
  - -0.3151709401709401
  train_neg_hamming_loss_micro:
  - -0.28526315789473683
  - -0.2884481558803062
  - -0.2777777777777778
  - -0.2923669467787115
  - -0.28881766381766383
  train_neg_hamming_loss_micro_oob:
  - -0.31087719298245614
  - -0.30862908837856645
  - -0.310126582278481
  - -0.31057422969187676
  - -0.31517094017094016
  train_neg_hamming_loss_samples:
  - -0.28526315789473683
  - -0.28844815588030626
  - -0.2777777777777778
  - -0.2923669467787115
  - -0.2888176638176638
  train_neg_hamming_loss_samples_oob:
  - -0.31087719298245614
  - -0.3086290883785664
  - -0.310126582278481
  - -0.31057422969187676
  - -0.31517094017094016
  train_neg_hamming_loss_weighted:
  - -0.29314187385035306
  - -0.29751007948257474
  - -0.2849791886923641
  - -0.3013036105084649
  - -0.29965715389444203
  train_neg_hamming_loss_weighted_oob:
  - -0.3235744377855575
  - -0.3212136332504066
  - -0.322684801554419
  - -0.3235980976381534
  - -0.3282027137959342
  train_neg_label_ranking_loss:
  - -0.0774736842105263
  - -0.08026559962885642
  - -0.07906704172526957
  - -0.07131185807656396
  - -0.07618114909781575
  train_neg_label_ranking_loss_oob:
  - -0.15681286549707604
  - -0.16140106703781024
  - -0.1543190342240975
  - -0.16293767507002802
  - -0.1596331908831909
  train_precision_macro:
  - 0.7147368421052631
  - 0.7115518441196937
  - 0.7222222222222222
  - 0.7076330532212886
  - 0.7111823361823362
  train_precision_macro_oob:
  - 0.6891228070175438
  - 0.6913709116214336
  - 0.689873417721519
  - 0.6894257703081234
  - 0.68482905982906
  train_precision_micro:
  - 0.7147368421052631
  - 0.7115518441196939
  - 0.7222222222222222
  - 0.7076330532212886
  - 0.7111823361823362
  train_precision_micro_oob:
  - 0.6891228070175439
  - 0.6913709116214335
  - 0.689873417721519
  - 0.6894257703081232
  - 0.6848290598290598
  train_precision_samples:
  - 0.7147368421052631
  - 0.7115518441196939
  - 0.7222222222222223
  - 0.7076330532212886
  - 0.7111823361823362
  train_precision_samples_oob:
  - 0.6891228070175437
  - 0.6913709116214335
  - 0.689873417721519
  - 0.6894257703081232
  - 0.6848290598290598
  train_precision_weighted:
  - 0.706858126149647
  - 0.7024899205174252
  - 0.7150208113076358
  - 0.6986963894915351
  - 0.7003428461055579
  train_precision_weighted_oob:
  - 0.6764255622144425
  - 0.6787863667495935
  - 0.6773151984455811
  - 0.6764019023618466
  - 0.671797286204066
  train_recall_macro:
  - 0.7147368421052631
  - 0.7115518441196937
  - 0.7222222222222222
  - 0.7076330532212886
  - 0.7111823361823362
  train_recall_macro_oob:
  - 0.6891228070175438
  - 0.6913709116214336
  - 0.689873417721519
  - 0.6894257703081234
  - 0.68482905982906
  train_recall_micro:
  - 0.7147368421052631
  - 0.7115518441196939
  - 0.7222222222222222
  - 0.7076330532212886
  - 0.7111823361823362
  train_recall_micro_oob:
  - 0.6891228070175439
  - 0.6913709116214335
  - 0.689873417721519
  - 0.6894257703081232
  - 0.6848290598290598
  train_recall_samples:
  - 0.7147368421052631
  - 0.7115518441196939
  - 0.7222222222222223
  - 0.7076330532212886
  - 0.7111823361823362
  train_recall_samples_oob:
  - 0.6891228070175437
  - 0.6913709116214335
  - 0.689873417721519
  - 0.6894257703081232
  - 0.6848290598290598
  train_recall_weighted:
  - 0.706858126149647
  - 0.7024899205174252
  - 0.7150208113076358
  - 0.6986963894915351
  - 0.7003428461055579
  train_recall_weighted_oob:
  - 0.6764255622144425
  - 0.6787863667495935
  - 0.6773151984455811
  - 0.6764019023618466
  - 0.671797286204066
  train_roc_auc_macro:
  - 0.9272961193773078
  - 0.9268689962743547
  - 0.9265435822754103
  - 0.926917736976157
  - 0.9281215168096838
  train_roc_auc_macro_oob:
  - 0.8476370792550063
  - 0.8478229189789867
  - 0.8478623929075285
  - 0.8436041391231877
  - 0.8479439475109206
  train_roc_auc_micro:
  - 0.9339953744039248
  - 0.9340584146444562
  - 0.9329111107524376
  - 0.9328578307623865
  - 0.9341718301500422
  train_roc_auc_micro_oob:
  - 0.8595177640923028
  - 0.8612270627171315
  - 0.8635862134162791
  - 0.8554574483983136
  - 0.8611327051952135
  train_roc_auc_samples:
  - 0.9225263157894736
  - 0.9197344003711436
  - 0.9209329582747304
  - 0.928688141923436
  - 0.9238188509021843
  train_roc_auc_samples_oob:
  - 0.843187134502924
  - 0.8385989329621897
  - 0.8456809657759025
  - 0.8370623249299721
  - 0.8403668091168092
  train_roc_auc_weighted:
  - 0.9270715616870089
  - 0.9255142971232635
  - 0.9248741461874194
  - 0.9265531340968327
  - 0.9285754801718695
  train_roc_auc_weighted_oob:
  - 0.8486862687746737
  - 0.8478503701227731
  - 0.8475355199463329
  - 0.8462328076486324
  - 0.8495205752274014
start: 2023-12-22 03:32:18.919935
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
