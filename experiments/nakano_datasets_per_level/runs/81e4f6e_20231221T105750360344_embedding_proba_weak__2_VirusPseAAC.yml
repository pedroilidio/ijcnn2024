active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AmZmZmZn5vwAzMzMzM+O/gGZmZmZm9j8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:58:04.286768
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__2
  params: {}
hash: 81e4f6e7c505129680a1d6a3467571f7401cec1c9f779ee6e08da7f1fdc2b74e
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/81e4f6e_20231221T105750360344_embedding_proba_weak__2_VirusPseAAC.yml
results:
  fit_time:
  - 7.417397975921631
  - 7.282067775726318
  - 7.347258567810059
  - 7.8789381980896
  - 7.167690992355347
  score_time:
  - 1.871053695678711
  - 1.9339606761932373
  - 1.8205997943878174
  - 1.8451752662658691
  - 1.8429455757141113
  test_average_precision_macro:
  - 0.48946560305278125
  - 0.2754972202466111
  - 0.33621976367217526
  - 0.42645283361095615
  - 0.37940944784035696
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.577794439666643
  - 0.4267218192768034
  - 0.3924087120581593
  - 0.4228380348159488
  - 0.4685609789994668
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7579166666666666
  - 0.7000000000000001
  - 0.665079365079365
  - 0.669513888888889
  - 0.6986111111111112
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5724741001850471
  - 0.4328991975280775
  - 0.38836368223726425
  - 0.4117956758519027
  - 0.449881323690625
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8041666666666667
  - 0.7906976744186046
  - 0.7817460317460317
  - 0.7749999999999999
  - 0.8134920634920634
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8041666666666667
  - 0.7906976744186046
  - 0.7817460317460317
  - 0.775
  - 0.8134920634920635
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8041666666666668
  - 0.7906976744186048
  - 0.7817460317460316
  - 0.775
  - 0.8134920634920635
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7005
  - 0.6613953488372093
  - 0.6466666666666667
  - 0.6338235294117648
  - 0.7222222222222221
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6938954765041722
  - 0.6858039940585919
  - 0.6753080627518409
  - 0.6669292024854813
  - 0.7039710664148445
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6724738675958188
  - 0.6538461538461539
  - 0.6416938110749185
  - 0.6326530612244898
  - 0.68561872909699
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6892857142857143
  - 0.6779623477297897
  - 0.6685941043083901
  - 0.6621428571428571
  - 0.7023809523809524
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5560549595332204
  - 0.5180962407228545
  - 0.5072165944999528
  - 0.48763127045715704
  - 0.5793640612848656
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7579166666666665
  - 0.6999999999999998
  - 0.665079365079365
  - 0.6695138888888887
  - 0.698611111111111
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.057780969774326174
  - 0.025263951734539967
  - 0.0104783626645271
  - 0.006867665727933761
  - 0.07724004678487074
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2675789619835673
  - 0.24382576557713506
  - 0.21981426542238588
  - 0.21367433662496063
  - 0.30762831992038986
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.19361450479002462
  - 0.2115054230744664
  - 0.1904134903833578
  - 0.20625382501502676
  - 0.22767327762305664
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11787317833962538
  - 0.05153846153846153
  - 0.015699510902563173
  - 0.01384566736684616
  - 0.1544800935697415
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8230559763197329
  - 0.7761066178616982
  - 0.7525926652957466
  - 0.7541010699538948
  - 0.775803359304511
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.075
  - -2.2093023255813953
  - -2.357142857142857
  - -2.3
  - -2.261904761904762
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1958333333333334
  - -0.20930232558139536
  - -0.21825396825396828
  - -0.225
  - -0.1865079365079365
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19583333333333333
  - -0.20930232558139536
  - -0.21825396825396826
  - -0.225
  - -0.1865079365079365
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1958333333333333
  - -0.2093023255813953
  - -0.21825396825396823
  - -0.225
  - -0.1865079365079365
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29950000000000004
  - -0.3386046511627907
  - -0.3533333333333333
  - -0.3661764705882352
  - -0.2777777777777778
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15465277777777778
  - -0.21046511627906977
  - -0.2261904761904762
  - -0.2177083333333333
  - -0.2089285714285714
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8041666666666667
  - 0.7906976744186046
  - 0.7817460317460317
  - 0.7749999999999999
  - 0.8134920634920634
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8041666666666667
  - 0.7906976744186046
  - 0.7817460317460317
  - 0.775
  - 0.8134920634920635
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8041666666666668
  - 0.7906976744186048
  - 0.7817460317460316
  - 0.775
  - 0.8134920634920635
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7005
  - 0.6613953488372093
  - 0.6466666666666667
  - 0.6338235294117648
  - 0.7222222222222221
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8041666666666667
  - 0.7906976744186046
  - 0.7817460317460317
  - 0.7749999999999999
  - 0.8134920634920634
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8041666666666667
  - 0.7906976744186046
  - 0.7817460317460317
  - 0.775
  - 0.8134920634920635
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8041666666666668
  - 0.7906976744186048
  - 0.7817460317460316
  - 0.775
  - 0.8134920634920635
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7005
  - 0.6613953488372093
  - 0.6466666666666667
  - 0.6338235294117648
  - 0.7222222222222221
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7102790677674579
  - 0.4808620029208264
  - 0.5698963175388614
  - 0.6325255508439651
  - 0.6639414186727323
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8315789473684211
  - 0.7651923076923077
  - 0.7523762376237623
  - 0.7712418300653594
  - 0.7913374304945859
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8453472222222222
  - 0.7895348837209303
  - 0.7738095238095238
  - 0.7822916666666666
  - 0.7910714285714286
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6982610939112487
  - 0.5860378510378509
  - 0.5376941070625282
  - 0.5201546582620752
  - 0.6385360459973463
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9833630935204637
  - 0.9367077764388284
  - 0.9370962250108739
  - 0.9375334511399696
  - 0.9746191777189276
  train_average_precision_macro_oob:
  - 0.853841293622675
  - 0.7711367151129725
  - 0.7773913124044473
  - 0.773459397787955
  - 0.7927172031447055
  train_average_precision_micro:
  - 0.9817845215309184
  - 0.9866035597414279
  - 0.9774532868563742
  - 0.9696827715403288
  - 0.9875240443012008
  train_average_precision_micro_oob:
  - 0.893235052027613
  - 0.8954151535685803
  - 0.8892516514609705
  - 0.8758980985517054
  - 0.8884662137029669
  train_average_precision_samples:
  - 0.9860279441117764
  - 0.9867886178861788
  - 0.9828282828282827
  - 0.9740518962075848
  - 0.9858585858585858
  train_average_precision_samples_oob:
  - 0.8994011976047903
  - 0.8830284552845529
  - 0.9009090909090908
  - 0.8835329341317364
  - 0.8854545454545454
  train_average_precision_weighted:
  - 0.9933032038802654
  - 0.9799061193233919
  - 0.9757549694996055
  - 0.9766318169876431
  - 0.9927371180213148
  train_average_precision_weighted_oob:
  - 0.9462858856691185
  - 0.9092780227726516
  - 0.9072709861677432
  - 0.9035535132284723
  - 0.9179909084976534
  train_f1_macro:
  - 0.9500998003992017
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848486
  train_f1_macro_oob:
  - 0.9181636726546906
  - 0.9176829268292682
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323233
  train_f1_micro:
  - 0.9500998003992016
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848485
  train_f1_micro_oob:
  - 0.9181636726546906
  - 0.9176829268292683
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323232
  train_f1_samples:
  - 0.9500998003992017
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848485
  train_f1_samples_oob:
  - 0.9181636726546905
  - 0.9176829268292683
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323231
  train_f1_weighted:
  - 0.9666805003853678
  - 0.972108186428399
  - 0.9704770477047705
  - 0.960377751958769
  - 0.9668325041459369
  train_f1_weighted_oob:
  - 0.9263947352819114
  - 0.9278555904370924
  - 0.941044104410441
  - 0.9245091905740755
  - 0.9370722146841549
  train_jaccard_macro:
  - 0.906848772593341
  - 0.9092945444096178
  - 0.9096922951615429
  - 0.8992543552440578
  - 0.9040135784211497
  train_jaccard_macro_oob:
  - 0.8511555926391797
  - 0.8497466686933169
  - 0.8667867342144137
  - 0.8516365571181935
  - 0.8602507865019952
  train_jaccard_micro:
  - 0.9049429657794676
  - 0.9069767441860465
  - 0.9075144508670521
  - 0.8977272727272727
  - 0.9020172910662824
  train_jaccard_micro_oob:
  - 0.8487084870848709
  - 0.847887323943662
  - 0.864406779661017
  - 0.850415512465374
  - 0.8574108818011257
  train_jaccard_samples:
  - 0.9177359566581124
  - 0.9194250871080138
  - 0.9203463203463202
  - 0.9101796407185628
  - 0.9158730158730157
  train_jaccard_samples_oob:
  - 0.8655546050755631
  - 0.8652729384436701
  - 0.8821067821067821
  - 0.8665526090675791
  - 0.8747474747474746
  train_jaccard_weighted:
  - 0.9369044634946603
  - 0.9475438088029027
  - 0.9442837368169872
  - 0.9248336027604429
  - 0.9373735030262031
  train_jaccard_weighted_oob:
  - 0.8648624335558109
  - 0.8672608232095441
  - 0.8908528146467679
  - 0.8604733010432882
  - 0.8841473356610937
  train_label_ranking_average_precision_score:
  - 0.9860279441117764
  - 0.9867886178861788
  - 0.9828282828282827
  - 0.9740518962075848
  - 0.9858585858585858
  train_label_ranking_average_precision_score_oob:
  - 0.8994011976047905
  - 0.883028455284553
  - 0.9009090909090908
  - 0.8835329341317364
  - 0.8854545454545454
  train_matthews_corrcoef_macro:
  - 0.4649454474428218
  - 0.4701833350805358
  - 0.46900375239471437
  - 0.4579304885362485
  - 0.4578235296101661
  train_matthews_corrcoef_macro_oob:
  - 0.3261973432320538
  - 0.34641645256932957
  - 0.37516803103900936
  - 0.35797922693839856
  - 0.3368235624440261
  train_matthews_corrcoef_micro:
  - 0.8408452230822335
  - 0.8471446144161717
  - 0.8470170773194299
  - 0.8261975103233363
  - 0.8368358898439063
  train_matthews_corrcoef_micro_oob:
  - 0.7322412762037558
  - 0.7354501680245239
  - 0.7663412448113284
  - 0.7328828430795166
  - 0.7525316901049841
  train_matthews_corrcoef_samples:
  - 0.7830644845259683
  - 0.7855409920513547
  - 0.7916892284631648
  - 0.7473006381406565
  - 0.7764946419105191
  train_matthews_corrcoef_samples_oob:
  - 0.6299654158555114
  - 0.6291861401177012
  - 0.6716621170856644
  - 0.6251749966938348
  - 0.6552825206983979
  train_matthews_corrcoef_weighted:
  - 0.7683974427738056
  - 0.7759241298107875
  - 0.7768898051035021
  - 0.7499856232380472
  - 0.7649781827680732
  train_matthews_corrcoef_weighted_oob:
  - 0.6273745310277038
  - 0.6442345599633859
  - 0.6811658862603984
  - 0.6412251203009444
  - 0.6506416669253429
  train_ndgc:
  - 0.9895919730966641
  - 0.9901999345165511
  - 0.987535998808691
  - 0.980751967194184
  - 0.9894658151948055
  train_ndgc_oob:
  - 0.926214537251408
  - 0.9148350973764959
  - 0.9279183207720659
  - 0.9152239662462961
  - 0.9161773795428816
  train_neg_coverage_error:
  - -1.2455089820359282
  - -1.2621951219512195
  - -1.2666666666666666
  - -1.2634730538922156
  - -1.2545454545454546
  train_neg_coverage_error_oob:
  - -1.5748502994011977
  - -1.6646341463414633
  - -1.5757575757575757
  - -1.622754491017964
  - -1.6545454545454545
  train_neg_hamming_loss_macro:
  - -0.04990019960079841
  - -0.04878048780487806
  - -0.048484848484848485
  - -0.05389221556886228
  - -0.051515151515151514
  train_neg_hamming_loss_macro_oob:
  - -0.08183632734530938
  - -0.08231707317073171
  - -0.07272727272727272
  - -0.08083832335329343
  - -0.07676767676767678
  train_neg_hamming_loss_micro:
  - -0.0499001996007984
  - -0.04878048780487805
  - -0.048484848484848485
  - -0.05389221556886228
  - -0.051515151515151514
  train_neg_hamming_loss_micro_oob:
  - -0.08183632734530938
  - -0.08231707317073171
  - -0.07272727272727272
  - -0.08083832335329341
  - -0.07676767676767676
  train_neg_hamming_loss_samples:
  - -0.049900199600798396
  - -0.04878048780487805
  - -0.048484848484848485
  - -0.05389221556886228
  - -0.051515151515151514
  train_neg_hamming_loss_samples_oob:
  - -0.08183632734530939
  - -0.08231707317073171
  - -0.07272727272727272
  - -0.08083832335329341
  - -0.07676767676767676
  train_neg_hamming_loss_weighted:
  - -0.033319499614632125
  - -0.027891813571601067
  - -0.029522952295229523
  - -0.039622248041230976
  - -0.03316749585406302
  train_neg_hamming_loss_weighted_oob:
  - -0.07360526471808858
  - -0.0721444095629075
  - -0.05895589558955895
  - -0.07549080942592427
  - -0.06292778531584502
  train_neg_label_ranking_loss:
  - -0.007185628742514971
  - -0.006097560975609756
  - -0.00803030303030303
  - -0.011976047904191617
  - -0.007272727272727273
  train_neg_label_ranking_loss_oob:
  - -0.06997671324018628
  - -0.08177506775067751
  - -0.0659090909090909
  - -0.07754491017964073
  - -0.08203703703703703
  train_precision_macro:
  - 0.9500998003992017
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848486
  train_precision_macro_oob:
  - 0.9181636726546906
  - 0.9176829268292682
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323233
  train_precision_micro:
  - 0.9500998003992016
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848485
  train_precision_micro_oob:
  - 0.9181636726546906
  - 0.9176829268292683
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323232
  train_precision_samples:
  - 0.9500998003992017
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848485
  train_precision_samples_oob:
  - 0.9181636726546905
  - 0.9176829268292683
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323231
  train_precision_weighted:
  - 0.9666805003853678
  - 0.972108186428399
  - 0.9704770477047705
  - 0.960377751958769
  - 0.9668325041459369
  train_precision_weighted_oob:
  - 0.9263947352819114
  - 0.9278555904370924
  - 0.941044104410441
  - 0.9245091905740755
  - 0.9370722146841549
  train_recall_macro:
  - 0.9500998003992017
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848486
  train_recall_macro_oob:
  - 0.9181636726546906
  - 0.9176829268292682
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323233
  train_recall_micro:
  - 0.9500998003992016
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848485
  train_recall_micro_oob:
  - 0.9181636726546906
  - 0.9176829268292683
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323232
  train_recall_samples:
  - 0.9500998003992017
  - 0.9512195121951219
  - 0.9515151515151515
  - 0.9461077844311377
  - 0.9484848484848485
  train_recall_samples_oob:
  - 0.9181636726546905
  - 0.9176829268292683
  - 0.9272727272727272
  - 0.9191616766467066
  - 0.9232323232323231
  train_recall_weighted:
  - 0.9666805003853678
  - 0.972108186428399
  - 0.9704770477047705
  - 0.960377751958769
  - 0.9668325041459369
  train_recall_weighted_oob:
  - 0.9263947352819114
  - 0.9278555904370924
  - 0.941044104410441
  - 0.9245091905740755
  - 0.9370722146841549
  train_roc_auc_macro:
  - 0.9983081921291861
  - 0.9958883661650483
  - 0.9944776810921288
  - 0.9947226885539503
  - 0.9981355376099179
  train_roc_auc_macro_oob:
  - 0.9705120229224692
  - 0.9685183920244551
  - 0.956892628828431
  - 0.959301005479456
  - 0.972938434862381
  train_roc_auc_micro:
  - 0.9951918316831683
  - 0.9963852523359753
  - 0.994383575413379
  - 0.992006260830678
  - 0.9965319158327501
  train_roc_auc_micro_oob:
  - 0.9525371287128713
  - 0.9514762857359905
  - 0.9557847916771374
  - 0.9483357246228284
  - 0.9487038823625851
  train_roc_auc_samples:
  - 0.9928143712574851
  - 0.9939024390243902
  - 0.9919696969696971
  - 0.9880239520958084
  - 0.9927272727272728
  train_roc_auc_samples_oob:
  - 0.9300232867598137
  - 0.9182249322493224
  - 0.9340909090909091
  - 0.9224550898203594
  - 0.9179629629629631
  train_roc_auc_weighted:
  - 0.9975814107623707
  - 0.9982270215364533
  - 0.9942640009616386
  - 0.9958126724298498
  - 0.9985640274214678
  train_roc_auc_weighted_oob:
  - 0.9832489177793893
  - 0.9838997206013774
  - 0.9794256990652006
  - 0.9720951733118804
  - 0.9817959653504199
start: 2023-12-21 10:57:50.360344
wrapper: null
