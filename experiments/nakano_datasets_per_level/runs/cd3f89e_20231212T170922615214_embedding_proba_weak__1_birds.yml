active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MzMzMzMz87+amZmZmZnpP5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+cmZmZmZnpP5yZmZmZmek/MjMzMzMz878yMzMzMzPzvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j9oZmZmZmb2P6CZmZmZmdk/oJmZmZmZ2T/MzMzMzMwMwA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:09:37.800722
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: cd3f89e6a0c27471c485e22fbb7e5968f3f0b8fd34be8e1d92f87e6de2a76e90
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cd3f89e_20231212T170922615214_embedding_proba_weak__1_birds.yml
results:
  fit_time:
  - 5.102108001708984
  - 5.0880656242370605
  - 4.2463765144348145
  - 5.407701253890991
  - 4.764206409454346
  score_time:
  - 2.1073944568634033
  - 2.042938470840454
  - 2.2511789798736572
  - 2.168576240539551
  - 2.0191237926483154
  test_average_precision_macro:
  - 0.3685414308412492
  - 0.4509531819549267
  - 0.44474847309779525
  - 0.46517084692456834
  - 0.44771266837543844
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.3915892415120491
  - 0.4928036087886919
  - 0.4873739228716866
  - 0.46024239625336794
  - 0.4794106176976899
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.30004732955143354
  - 0.3453158311685444
  - 0.332791791478522
  - 0.34020569224057595
  - 0.36457280044945345
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.48112360490226547
  - 0.5583659419675724
  - 0.541560633498872
  - 0.5703710155107047
  - 0.5566512882416011
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9481844145246838
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930232
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9481844145246838
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930233
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9481844145246837
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930233
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9265951103160406
  - 0.9331544424567682
  - 0.9329367225527312
  - 0.9322156120425455
  - 0.936844505243958
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.90314136748122
  - 0.9133505991700913
  - 0.9072351532418343
  - 0.9087180082991195
  - 0.9123170942724199
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9014740108611327
  - 0.9118564742589703
  - 0.9059097978227061
  - 0.9073929961089494
  - 0.9111111111111111
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9075525586647933
  - 0.9175461096593553
  - 0.9112624147002307
  - 0.914039280571131
  - 0.9161568012933029
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8650802782527306
  - 0.8760481393795333
  - 0.8752745754026663
  - 0.8743152478342395
  - 0.882178654951534
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7574116706367048
  - 0.818184048222808
  - 0.7746522565948012
  - 0.8130739092948396
  - 0.7986813275812364
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12836236144492136
  - 0.17390570238894906
  - 0.15880396897614327
  - 0.20938352857154752
  - 0.21773281847927808
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2814200776573091
  - 0.37381450701603997
  - 0.359990191387446
  - 0.3629465021047988
  - 0.4159059884613782
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07482635006644099
  - 0.10582507284487809
  - 0.11116937894086892
  - 0.10855024551484684
  - 0.12502465498480123
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.20184767473186752
  - 0.27309502610291986
  - 0.27730429289854697
  - 0.3040503123256017
  - 0.3390224676896065
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3726704083752756
  - 0.39987660525866886
  - 0.3994024496882476
  - 0.3983233267698911
  - 0.42729976620374366
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.441860465116279
  - -2.813953488372093
  - -3.248062015503876
  - -2.8372093023255816
  - -3.046511627906977
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05181558547531619
  - -0.046103631170950635
  - -0.049367605059159526
  - -0.04855161158710731
  - -0.046511627906976744
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0518155854753162
  - -0.046103631170950635
  - -0.049367605059159526
  - -0.0485516115871073
  - -0.046511627906976744
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05181558547531619
  - -0.046103631170950635
  - -0.049367605059159526
  - -0.0485516115871073
  - -0.046511627906976744
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07340488968395946
  - -0.06684555754323197
  - -0.0670632774472688
  - -0.06778438795745449
  - -0.06315549475604196
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.10626759747826779
  - -0.0777195115772407
  - -0.09480146063593396
  - -0.07583886764803317
  - -0.07870750367330395
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9481844145246838
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930232
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9481844145246838
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930233
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9481844145246837
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930233
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9265951103160406
  - 0.9331544424567682
  - 0.9329367225527312
  - 0.9322156120425455
  - 0.936844505243958
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9481844145246838
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930232
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9481844145246838
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930233
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9481844145246837
  - 0.9538963688290494
  - 0.9506323949408405
  - 0.9514483884128927
  - 0.9534883720930233
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9265951103160406
  - 0.9331544424567682
  - 0.9329367225527312
  - 0.9322156120425455
  - 0.936844505243958
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8532243393135305
  - 0.858553033621228
  - 0.8660483381070382
  - 0.9035503828359586
  - 0.8885518951346357
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8787558413150831
  - 0.904331687270076
  - 0.8875000834618646
  - 0.9170622759048935
  - 0.9012831914623302
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8800290428529459
  - 0.8888378429176853
  - 0.869352073932491
  - 0.911583335160433
  - 0.8862010506076485
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.6569854761140631
  - 0.7044619752244892
  - 0.6806182787503413
  - 0.6390250034255867
  - 0.620861833196801
  train_average_precision_macro_oob:
  - 0.5451005976403731
  - 0.5658925791399118
  - 0.5361770724710122
  - 0.493437899390678
  - 0.4864433079939852
  train_average_precision_micro:
  - 0.7192692670936277
  - 0.7579877464189837
  - 0.7073543049694249
  - 0.6655815889839211
  - 0.6866928443952484
  train_average_precision_micro_oob:
  - 0.6057461195360464
  - 0.6210837554987426
  - 0.5748526151791246
  - 0.5288714914248378
  - 0.5596609201478957
  train_average_precision_samples:
  - 0.4791910452811616
  - 0.49967514989317313
  - 0.48291573682562056
  - 0.4843325419197512
  - 0.4760524332472007
  train_average_precision_samples_oob:
  - 0.3960350161404503
  - 0.41346503704660337
  - 0.39838671400685405
  - 0.39125071336425643
  - 0.3797620734127367
  train_average_precision_weighted:
  - 0.7763834905758976
  - 0.7926986213971622
  - 0.7699248060028946
  - 0.7381202278355321
  - 0.7247884805389958
  train_average_precision_weighted_oob:
  - 0.6504109704530355
  - 0.6581301516244411
  - 0.6271756844250921
  - 0.5895607729605017
  - 0.5912904908937553
  train_f1_macro:
  - 0.961750305997552
  - 0.9629742962056304
  - 0.9594043247654019
  - 0.9585883312933495
  - 0.9625662994696041
  train_f1_macro_oob:
  - 0.956752345981232
  - 0.9570583435332516
  - 0.9543043655650754
  - 0.9536923704610362
  - 0.956548347613219
  train_f1_micro:
  - 0.9617503059975521
  - 0.9629742962056304
  - 0.9594043247654018
  - 0.9585883312933496
  - 0.9625662994696043
  train_f1_micro_oob:
  - 0.9567523459812322
  - 0.9570583435332517
  - 0.9543043655650755
  - 0.9536923704610363
  - 0.956548347613219
  train_f1_samples:
  - 0.9617503059975521
  - 0.9629742962056305
  - 0.9594043247654019
  - 0.9585883312933496
  - 0.9625662994696043
  train_f1_samples_oob:
  - 0.9567523459812322
  - 0.9570583435332518
  - 0.9543043655650755
  - 0.9536923704610364
  - 0.956548347613219
  train_f1_weighted:
  - 0.951727912894254
  - 0.952393632759335
  - 0.948047249907715
  - 0.9486895533407161
  - 0.9509368172158871
  train_f1_weighted_oob:
  - 0.9394934611515475
  - 0.9390903307888041
  - 0.937249907715024
  - 0.9355813953488372
  - 0.9399673760138875
  train_jaccard_macro:
  - 0.927018250408473
  - 0.9292409731901029
  - 0.9226181053825976
  - 0.9211402926433275
  - 0.928477548650027
  train_jaccard_macro_oob:
  - 0.9182539612161965
  - 0.9188806637643399
  - 0.9137093870721644
  - 0.9126858926464415
  - 0.9177206799723104
  train_jaccard_micro:
  - 0.9263188918361333
  - 0.9285925051637651
  - 0.9219760831209567
  - 0.9204701273261509
  - 0.9278340379510372
  train_jaccard_micro_oob:
  - 0.9170903402424716
  - 0.9176528117359413
  - 0.9126024190401872
  - 0.9114837200233964
  - 0.9167155425219942
  train_jaccard_samples:
  - 0.9307419128450474
  - 0.9329492016802432
  - 0.9266415418083771
  - 0.9256194036274926
  - 0.9320569737531316
  train_jaccard_samples_oob:
  - 0.9221187572678979
  - 0.9225265073091161
  - 0.9178939875426225
  - 0.9170391113212145
  - 0.9216506572295249
  train_jaccard_weighted:
  - 0.9083453947492941
  - 0.9095038813602496
  - 0.9016492322296266
  - 0.902780523576406
  - 0.9068995780361712
  train_jaccard_weighted_oob:
  - 0.8868585561185898
  - 0.88629695057428
  - 0.8829135035079151
  - 0.8800334764605594
  - 0.8875462958662114
  train_label_ranking_average_precision_score:
  - 0.9346174018703086
  - 0.9512255374900722
  - 0.9422180624070152
  - 0.9358829295166502
  - 0.9372927433247198
  train_label_ranking_average_precision_score_oob:
  - 0.8514613727295971
  - 0.865015424643502
  - 0.8576890395882489
  - 0.8428011009611557
  - 0.8410023834902558
  train_matthews_corrcoef_macro:
  - 0.4349622207783364
  - 0.41104373471020744
  - 0.3797240813451883
  - 0.3988050699086725
  - 0.43834222190586797
  train_matthews_corrcoef_macro_oob:
  - 0.3277496183989533
  - 0.265330741752138
  - 0.23154376164545565
  - 0.26023162537537886
  - 0.2413612592289562
  train_matthews_corrcoef_micro:
  - 0.563770528457641
  - 0.5593319100100336
  - 0.5217417461331086
  - 0.5221263994517259
  - 0.5600051612604259
  train_matthews_corrcoef_micro_oob:
  - 0.45973759066784253
  - 0.44029322588247916
  - 0.40828874766843704
  - 0.4058582188835691
  - 0.4338754382415909
  train_matthews_corrcoef_samples:
  - 0.22900764207499172
  - 0.22122219805501836
  - 0.19567041513964067
  - 0.20712916318942792
  - 0.20664937396999786
  train_matthews_corrcoef_samples_oob:
  - 0.147354493887347
  - 0.13004981582435038
  - 0.1253413856674638
  - 0.11775260099751589
  - 0.12667264765659908
  train_matthews_corrcoef_weighted:
  - 0.5387744816148972
  - 0.5264048090421212
  - 0.5031264599644016
  - 0.5016373670227402
  - 0.5307513958791339
  train_matthews_corrcoef_weighted_oob:
  - 0.4047737022221184
  - 0.3625387769707688
  - 0.34367873308198793
  - 0.34199712993591963
  - 0.36660011569243045
  train_ndgc:
  - 0.5015271334127857
  - 0.5177069973898066
  - 0.5033990138079997
  - 0.5066335666292461
  - 0.4973842215124092
  train_ndgc_oob:
  - 0.44290706036735034
  - 0.4573572995976494
  - 0.44370035051385454
  - 0.44169245141809527
  - 0.42884391646861886
  train_neg_coverage_error:
  - -1.3372093023255813
  - -1.2848837209302326
  - -1.312015503875969
  - -1.3875968992248062
  - -1.3410852713178294
  train_neg_coverage_error_oob:
  - -2.393410852713178
  - -2.1511627906976742
  - -2.2093023255813953
  - -2.4186046511627906
  - -2.488372093023256
  train_neg_hamming_loss_macro:
  - -0.03824969400244799
  - -0.03702570379436965
  - -0.04059567523459812
  - -0.04141166870665035
  - -0.03743370053039576
  train_neg_hamming_loss_macro_oob:
  - -0.04324765401876786
  - -0.042941656466748274
  - -0.045695634434924526
  - -0.04630762953896369
  - -0.043451652386780906
  train_neg_hamming_loss_micro:
  - -0.03824969400244798
  - -0.03702570379436965
  - -0.04059567523459812
  - -0.04141166870665035
  - -0.037433700530395755
  train_neg_hamming_loss_micro_oob:
  - -0.04324765401876785
  - -0.04294165646674827
  - -0.04569563443492452
  - -0.04630762953896369
  - -0.043451652386780906
  train_neg_hamming_loss_samples:
  - -0.03824969400244798
  - -0.03702570379436965
  - -0.04059567523459812
  - -0.04141166870665035
  - -0.03743370053039576
  train_neg_hamming_loss_samples_oob:
  - -0.04324765401876785
  - -0.04294165646674826
  - -0.04569563443492452
  - -0.04630762953896368
  - -0.0434516523867809
  train_neg_hamming_loss_weighted:
  - -0.0482720871057459
  - -0.04760636724066512
  - -0.05195275009228498
  - -0.051310446659283866
  - -0.049063182784113014
  train_neg_hamming_loss_weighted_oob:
  - -0.06050653884845257
  - -0.06090966921119593
  - -0.06275009228497601
  - -0.0644186046511628
  - -0.06003262398611235
  train_neg_label_ranking_loss:
  - -0.012749118977744148
  - -0.009558823529411764
  - -0.01128968532354305
  - -0.014044529310432183
  - -0.013377248384943323
  train_neg_label_ranking_loss_oob:
  - -0.05502988787445012
  - -0.04322107868192
  - -0.04764894976078288
  - -0.05608300490738931
  - -0.05976604192660964
  train_precision_macro:
  - 0.961750305997552
  - 0.9629742962056304
  - 0.9594043247654019
  - 0.9585883312933495
  - 0.9625662994696041
  train_precision_macro_oob:
  - 0.956752345981232
  - 0.9570583435332516
  - 0.9543043655650754
  - 0.9536923704610362
  - 0.956548347613219
  train_precision_micro:
  - 0.9617503059975521
  - 0.9629742962056304
  - 0.9594043247654018
  - 0.9585883312933496
  - 0.9625662994696043
  train_precision_micro_oob:
  - 0.9567523459812322
  - 0.9570583435332517
  - 0.9543043655650755
  - 0.9536923704610363
  - 0.956548347613219
  train_precision_samples:
  - 0.9617503059975521
  - 0.9629742962056305
  - 0.9594043247654019
  - 0.9585883312933496
  - 0.9625662994696043
  train_precision_samples_oob:
  - 0.9567523459812322
  - 0.9570583435332518
  - 0.9543043655650755
  - 0.9536923704610364
  - 0.956548347613219
  train_precision_weighted:
  - 0.951727912894254
  - 0.952393632759335
  - 0.948047249907715
  - 0.9486895533407161
  - 0.9509368172158871
  train_precision_weighted_oob:
  - 0.9394934611515475
  - 0.9390903307888041
  - 0.937249907715024
  - 0.9355813953488372
  - 0.9399673760138875
  train_recall_macro:
  - 0.961750305997552
  - 0.9629742962056304
  - 0.9594043247654019
  - 0.9585883312933495
  - 0.9625662994696041
  train_recall_macro_oob:
  - 0.956752345981232
  - 0.9570583435332516
  - 0.9543043655650754
  - 0.9536923704610362
  - 0.956548347613219
  train_recall_micro:
  - 0.9617503059975521
  - 0.9629742962056304
  - 0.9594043247654018
  - 0.9585883312933496
  - 0.9625662994696043
  train_recall_micro_oob:
  - 0.9567523459812322
  - 0.9570583435332517
  - 0.9543043655650755
  - 0.9536923704610363
  - 0.956548347613219
  train_recall_samples:
  - 0.9617503059975521
  - 0.9629742962056305
  - 0.9594043247654019
  - 0.9585883312933496
  - 0.9625662994696043
  train_recall_samples_oob:
  - 0.9567523459812322
  - 0.9570583435332518
  - 0.9543043655650755
  - 0.9536923704610364
  - 0.956548347613219
  train_recall_weighted:
  - 0.951727912894254
  - 0.952393632759335
  - 0.948047249907715
  - 0.9486895533407161
  - 0.9509368172158871
  train_recall_weighted_oob:
  - 0.9394934611515475
  - 0.9390903307888041
  - 0.937249907715024
  - 0.9355813953488372
  - 0.9399673760138875
  train_roc_auc_macro:
  - 0.9839739613472673
  - 0.9851736409542043
  - 0.9830346671099912
  - 0.9812127415465753
  - 0.9825532896921881
  train_roc_auc_macro_oob:
  - 0.9315052516570053
  - 0.9344254550023036
  - 0.929898497361004
  - 0.9237161885608195
  - 0.9203762278065983
  train_roc_auc_micro:
  - 0.9832686233219268
  - 0.9856802365754146
  - 0.983582590488507
  - 0.9805206841870276
  - 0.981509300753324
  train_roc_auc_micro_oob:
  - 0.9385173318636484
  - 0.9415720008554884
  - 0.9404588959196136
  - 0.9332655920434776
  - 0.9314646867414476
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9851599620716929
  - 0.9859309697873436
  - 0.9835706474532923
  - 0.9820136063567982
  - 0.9815516219875239
  train_roc_auc_weighted_oob:
  - 0.9316520814025196
  - 0.9349425518254244
  - 0.9335153845903459
  - 0.9282366691519908
  - 0.9240555195145562
start: 2023-12-12 17:09:22.615214
wrapper: null
