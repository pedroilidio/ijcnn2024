active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADQzMzMz4z8ANDMzMzPjPwA0MzMzM+M/ADMzMzMzA8AANDMzMzPjPw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:03:23.596118
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 062ec2e1d33261ea8e1f5d6f5a180fa84f178ca7f2bb3736ea77d263943ac28c
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/062ec2e_20231212T160309442485_embedding__0_PlantGO.yml
results:
  fit_time:
  - 1.6007239818572998
  - 1.5874226093292236
  - 1.5582315921783447
  - 1.6087327003479004
  - 1.7160453796386719
  score_time:
  - 1.754922866821289
  - 1.75947904586792
  - 1.7385857105255127
  - 1.7560923099517822
  - 1.818812608718872
  test_average_precision_macro:
  - 0.7981455809316836
  - 0.7734381713242962
  - 0.8187714715993438
  - 0.7906342079675067
  - 0.819966878780054
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7549698540368559
  - 0.7560723904418283
  - 0.7443474788473157
  - 0.7237866661792122
  - 0.7878327813441781
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8221937321937323
  - 0.8328693528693529
  - 0.8333536833536833
  - 0.8080567580567581
  - 0.8518498168498168
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8517129056956567
  - 0.841380019794105
  - 0.8479791889890946
  - 0.814022416330568
  - 0.864418001343147
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9299145299145298
  - 0.932905982905983
  - 0.9286324786324788
  - 0.9326599326599326
  - 0.9320512820512822
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9299145299145299
  - 0.9329059829059829
  - 0.9286324786324787
  - 0.9326599326599326
  - 0.9320512820512821
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9299145299145298
  - 0.932905982905983
  - 0.9286324786324786
  - 0.9326599326599327
  - 0.9320512820512821
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8894883947016646
  - 0.8977303398356028
  - 0.8903334537137354
  - 0.895082904516867
  - 0.8937728937728937
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8732907874455056
  - 0.8781702801530846
  - 0.8713077389259364
  - 0.8776758665409186
  - 0.8767259255597465
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8690095846645367
  - 0.8742490989187024
  - 0.8667730355005984
  - 0.8738170347003155
  - 0.8727490996398559
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8727303465765004
  - 0.8779374471682162
  - 0.8706114398422089
  - 0.8776556776556775
  - 0.8762242885319808
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8047894265173839
  - 0.8180547737820789
  - 0.8062797795693217
  - 0.8138829653271594
  - 0.8113358386161208
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8221937321937323
  - 0.8328693528693526
  - 0.8333536833536833
  - 0.8080567580567578
  - 0.8518498168498169
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12289212287946537
  - 0.13837532760848115
  - 0.10077604029440386
  - 0.14143908357431031
  - 0.13748230121265903
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4535248372030077
  - 0.4803321893459414
  - 0.44620783642610007
  - 0.4775615565363723
  - 0.47436517590906785
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2593233545274065
  - 0.2879556148943509
  - 0.2558659193352873
  - 0.29112993224769435
  - 0.26585016105421305
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3010869547120017
  - 0.3423411647787437
  - 0.2703865212613079
  - 0.3302865413647456
  - 0.332677584520552
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8670824605713471
  - 0.8763201653013049
  - 0.8767027579690221
  - 0.8577784151906885
  - 0.8905635293250821
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7384615384615385
  - -1.6974358974358974
  - -1.7435897435897436
  - -1.7171717171717171
  - -1.6564102564102565
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07008547008547009
  - -0.0670940170940171
  - -0.07136752136752138
  - -0.06734006734006735
  - -0.06794871794871794
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07008547008547009
  - -0.06709401709401709
  - -0.07136752136752136
  - -0.06734006734006734
  - -0.06794871794871794
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07008547008547009
  - -0.06709401709401709
  - -0.07136752136752138
  - -0.06734006734006734
  - -0.06794871794871794
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11051160529833515
  - -0.10226966016439702
  - -0.10966654628626459
  - -0.10491709548313323
  - -0.10622710622710624
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05768971768971769
  - -0.053962703962703966
  - -0.05571095571095571
  - -0.05612012379689147
  - -0.048728308728308724
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9299145299145298
  - 0.932905982905983
  - 0.9286324786324788
  - 0.9326599326599326
  - 0.9320512820512822
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9299145299145299
  - 0.9329059829059829
  - 0.9286324786324787
  - 0.9326599326599326
  - 0.9320512820512821
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9299145299145298
  - 0.932905982905983
  - 0.9286324786324786
  - 0.9326599326599327
  - 0.9320512820512821
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8894883947016646
  - 0.8977303398356028
  - 0.8903334537137354
  - 0.895082904516867
  - 0.8937728937728937
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9299145299145298
  - 0.932905982905983
  - 0.9286324786324788
  - 0.9326599326599326
  - 0.9320512820512822
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9299145299145299
  - 0.9329059829059829
  - 0.9286324786324787
  - 0.9326599326599326
  - 0.9320512820512821
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9299145299145298
  - 0.932905982905983
  - 0.9286324786324786
  - 0.9326599326599327
  - 0.9320512820512821
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8894883947016646
  - 0.8977303398356028
  - 0.8903334537137354
  - 0.895082904516867
  - 0.8937728937728937
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9738781282664629
  - 0.9735024706536902
  - 0.972286245614817
  - 0.9728541772799754
  - 0.9674633803086747
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9584879535371389
  - 0.9558218955092179
  - 0.9535151671666104
  - 0.9553608795731175
  - 0.9565750055890901
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9423102823102824
  - 0.9460372960372961
  - 0.9442890442890443
  - 0.9438798762031083
  - 0.9512716912716912
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9762003118457453
  - 0.9722788885608631
  - 0.9678683632082308
  - 0.9639196829081943
  - 0.9726077147805301
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8420125361100398
  - 0.8507464949757333
  - 0.8219449876660464
  - 0.8627491025734865
  - 0.842113724800738
  train_average_precision_macro_oob:
  - 0.7013577391582032
  - 0.7409600629950042
  - 0.6933842217496563
  - 0.7236303468801314
  - 0.7172360018216879
  train_average_precision_micro:
  - 0.7869302089778503
  - 0.8060396673821719
  - 0.7951081792944821
  - 0.8036060925583092
  - 0.7875323593187272
  train_average_precision_micro_oob:
  - 0.7277213007656148
  - 0.7523031995079181
  - 0.7383994399600109
  - 0.7446721618947982
  - 0.724500397727377
  train_average_precision_samples:
  - 0.8567647833931358
  - 0.871664740821829
  - 0.8600731821038334
  - 0.8627380952380953
  - 0.852342942285471
  train_average_precision_samples_oob:
  - 0.8103965673889045
  - 0.8355130856088709
  - 0.8210266780190151
  - 0.8234081196581197
  - 0.8152355059443183
  train_average_precision_weighted:
  - 0.8805260538961647
  - 0.8935660657043168
  - 0.8849996186560979
  - 0.8950969354852153
  - 0.8808055614181318
  train_average_precision_weighted_oob:
  - 0.7909512520455205
  - 0.8229281844773456
  - 0.800000031083014
  - 0.81043869275917
  - 0.7989920699028384
  train_f1_macro:
  - 0.9334823329076204
  - 0.9352916134525331
  - 0.9332694763729248
  - 0.9342948717948718
  - 0.9328437633035335
  train_f1_macro_oob:
  - 0.9311409110259686
  - 0.9318859088974031
  - 0.9302894848871861
  - 0.9316239316239315
  - 0.9296509152830992
  train_f1_micro:
  - 0.9334823329076203
  - 0.935291613452533
  - 0.9332694763729247
  - 0.9342948717948718
  - 0.9328437633035335
  train_f1_micro_oob:
  - 0.9311409110259685
  - 0.9318859088974032
  - 0.930289484887186
  - 0.9316239316239316
  - 0.9296509152830992
  train_f1_samples:
  - 0.9334823329076204
  - 0.9352916134525329
  - 0.9332694763729247
  - 0.9342948717948718
  - 0.9328437633035334
  train_f1_samples_oob:
  - 0.9311409110259684
  - 0.9318859088974031
  - 0.930289484887186
  - 0.9316239316239315
  - 0.9296509152830993
  train_f1_weighted:
  - 0.8981980836859085
  - 0.9044545890963108
  - 0.8988769669005561
  - 0.9010539282781274
  - 0.895064499308531
  train_f1_weighted_oob:
  - 0.8928322831738423
  - 0.8956399131666108
  - 0.8924048136923883
  - 0.8944626942847581
  - 0.8884082613525582
  train_jaccard_macro:
  - 0.8789842549211867
  - 0.8818731691978471
  - 0.8786847109086339
  - 0.8803463215095739
  - 0.877834226432829
  train_jaccard_macro_oob:
  - 0.875197097080163
  - 0.8763139739095213
  - 0.8739176610647513
  - 0.8760743887340725
  - 0.872685215945444
  train_jaccard_micro:
  - 0.8752619499051991
  - 0.8784486205517793
  - 0.8748877581562406
  - 0.8766917293233083
  - 0.8741398224793059
  train_jaccard_micro_oob:
  - 0.8711540376381559
  - 0.8724591470705461
  - 0.8696647099791066
  - 0.872
  - 0.8685492691657551
  train_jaccard_samples:
  - 0.8792359619945826
  - 0.8825144204454548
  - 0.8787531753048994
  - 0.8806029867568329
  - 0.8780009262767883
  train_jaccard_samples_oob:
  - 0.8749694749694749
  - 0.8763673108500694
  - 0.873335859542756
  - 0.8757565511411665
  - 0.8722748515851962
  train_jaccard_weighted:
  - 0.8186740127279402
  - 0.8288590979935376
  - 0.8199102400733911
  - 0.823368601679451
  - 0.8134089797072073
  train_jaccard_weighted_oob:
  - 0.8099691337623294
  - 0.8143622146510818
  - 0.8094759522128357
  - 0.8127346234015024
  - 0.8027117040010551
  train_label_ranking_average_precision_score:
  - 0.8567647833931364
  - 0.8716647408218299
  - 0.8600731821038343
  - 0.862738095238096
  - 0.8523429422854718
  train_label_ranking_average_precision_score_oob:
  - 0.8103965673889048
  - 0.8355130856088718
  - 0.8210266780190161
  - 0.8234081196581202
  - 0.8152355059443186
  train_matthews_corrcoef_macro:
  - 0.14937611525402678
  - 0.16007453654571246
  - 0.1434062412442347
  - 0.15432795844861
  - 0.1574050839362021
  train_matthews_corrcoef_macro_oob:
  - 0.1319039264186902
  - 0.14325474809598074
  - 0.11624857977349519
  - 0.1344287391377834
  - 0.1385796465706953
  train_matthews_corrcoef_micro:
  - 0.49049291537170103
  - 0.5112321692464331
  - 0.486523671890837
  - 0.5009322927532768
  - 0.48439846377740675
  train_matthews_corrcoef_micro_oob:
  - 0.46466709294197156
  - 0.47487670947301625
  - 0.45302581380176526
  - 0.4719395079444713
  - 0.44861785194268056
  train_matthews_corrcoef_samples:
  - 0.29949822168327556
  - 0.3216834059901928
  - 0.29355748059122766
  - 0.30627351734491126
  - 0.29186424925337734
  train_matthews_corrcoef_samples_oob:
  - 0.27297828687692516
  - 0.2851302425193706
  - 0.259045859151394
  - 0.2762231214271734
  - 0.25828145632857913
  train_matthews_corrcoef_weighted:
  - 0.35548239307878154
  - 0.3859523370669425
  - 0.3482280466492859
  - 0.37164944776215664
  - 0.36622679301072014
  train_matthews_corrcoef_weighted_oob:
  - 0.31990110647199693
  - 0.3482271041585653
  - 0.29602616866404596
  - 0.32969692515824073
  - 0.33054731204139426
  train_ndgc:
  - 0.8941771017915086
  - 0.9050383874000839
  - 0.8961704837534925
  - 0.8988679466482308
  - 0.8907220161458701
  train_ndgc_oob:
  - 0.8594738557130854
  - 0.877535047248825
  - 0.8666975392596058
  - 0.8687901551659899
  - 0.8625785261654086
  train_neg_coverage_error:
  - -1.5632183908045978
  - -1.5236270753512133
  - -1.565772669220945
  - -1.5333333333333334
  - -1.5696040868454662
  train_neg_coverage_error_oob:
  - -1.7969348659003832
  - -1.7369093231162196
  - -1.7701149425287357
  - -1.75
  - -1.7752234993614304
  train_neg_hamming_loss_macro:
  - -0.06651766709237975
  - -0.06470838654746701
  - -0.06673052362707535
  - -0.06570512820512821
  - -0.06715623669646657
  train_neg_hamming_loss_macro_oob:
  - -0.06885908897403151
  - -0.06811409110259686
  - -0.06971051511281397
  - -0.06837606837606838
  - -0.07034908471690081
  train_neg_hamming_loss_micro:
  - -0.06651766709237973
  - -0.06470838654746701
  - -0.06673052362707535
  - -0.06570512820512821
  - -0.06715623669646659
  train_neg_hamming_loss_micro_oob:
  - -0.06885908897403151
  - -0.06811409110259685
  - -0.06971051511281397
  - -0.06837606837606838
  - -0.07034908471690081
  train_neg_hamming_loss_samples:
  - -0.06651766709237973
  - -0.06470838654746701
  - -0.06673052362707535
  - -0.06570512820512821
  - -0.06715623669646659
  train_neg_hamming_loss_samples_oob:
  - -0.06885908897403151
  - -0.06811409110259685
  - -0.06971051511281397
  - -0.06837606837606837
  - -0.07034908471690081
  train_neg_hamming_loss_weighted:
  - -0.10180191631409151
  - -0.09554541090368922
  - -0.10112303309944395
  - -0.09894607172187245
  - -0.10493550069146886
  train_neg_hamming_loss_weighted_oob:
  - -0.10716771682615775
  - -0.1043600868333892
  - -0.10759518630761158
  - -0.10553730571524167
  - -0.11159173864744158
  train_neg_label_ranking_loss:
  - -0.041777502569328884
  - -0.03832256150263813
  - -0.04258033721635255
  - -0.038791332124665456
  - -0.042562921681695634
  train_neg_label_ranking_loss_oob:
  - -0.061880834741626575
  - -0.05691353724559344
  - -0.06055424401529126
  - -0.057978071311404644
  - -0.06056821944433695
  train_precision_macro:
  - 0.9334823329076204
  - 0.9352916134525331
  - 0.9332694763729248
  - 0.9342948717948718
  - 0.9328437633035335
  train_precision_macro_oob:
  - 0.9311409110259686
  - 0.9318859088974031
  - 0.9302894848871861
  - 0.9316239316239315
  - 0.9296509152830992
  train_precision_micro:
  - 0.9334823329076203
  - 0.935291613452533
  - 0.9332694763729247
  - 0.9342948717948718
  - 0.9328437633035335
  train_precision_micro_oob:
  - 0.9311409110259685
  - 0.9318859088974032
  - 0.930289484887186
  - 0.9316239316239316
  - 0.9296509152830992
  train_precision_samples:
  - 0.9334823329076204
  - 0.9352916134525329
  - 0.9332694763729247
  - 0.9342948717948718
  - 0.9328437633035334
  train_precision_samples_oob:
  - 0.9311409110259684
  - 0.9318859088974031
  - 0.930289484887186
  - 0.9316239316239315
  - 0.9296509152830993
  train_precision_weighted:
  - 0.8981980836859085
  - 0.9044545890963108
  - 0.8988769669005561
  - 0.9010539282781274
  - 0.895064499308531
  train_precision_weighted_oob:
  - 0.8928322831738423
  - 0.8956399131666108
  - 0.8924048136923883
  - 0.8944626942847581
  - 0.8884082613525582
  train_recall_macro:
  - 0.9334823329076204
  - 0.9352916134525331
  - 0.9332694763729248
  - 0.9342948717948718
  - 0.9328437633035335
  train_recall_macro_oob:
  - 0.9311409110259686
  - 0.9318859088974031
  - 0.9302894848871861
  - 0.9316239316239315
  - 0.9296509152830992
  train_recall_micro:
  - 0.9334823329076203
  - 0.935291613452533
  - 0.9332694763729247
  - 0.9342948717948718
  - 0.9328437633035335
  train_recall_micro_oob:
  - 0.9311409110259685
  - 0.9318859088974032
  - 0.930289484887186
  - 0.9316239316239316
  - 0.9296509152830992
  train_recall_samples:
  - 0.9334823329076204
  - 0.9352916134525329
  - 0.9332694763729247
  - 0.9342948717948718
  - 0.9328437633035334
  train_recall_samples_oob:
  - 0.9311409110259684
  - 0.9318859088974031
  - 0.930289484887186
  - 0.9316239316239315
  - 0.9296509152830993
  train_recall_weighted:
  - 0.8981980836859085
  - 0.9044545890963108
  - 0.8988769669005561
  - 0.9010539282781274
  - 0.895064499308531
  train_recall_weighted_oob:
  - 0.8928322831738423
  - 0.8956399131666108
  - 0.8924048136923883
  - 0.8944626942847581
  - 0.8884082613525582
  train_roc_auc_macro:
  - 0.9840531276288874
  - 0.9850180445565094
  - 0.9859524021677323
  - 0.9859673889178215
  - 0.9842324107564392
  train_roc_auc_macro_oob:
  - 0.9657330597285824
  - 0.967292337351492
  - 0.9674901939688952
  - 0.9666157817580538
  - 0.9666733279050678
  train_roc_auc_micro:
  - 0.9668818635035623
  - 0.9700465209517095
  - 0.9672826731059408
  - 0.9700772901200599
  - 0.9671922519875525
  train_roc_auc_micro_oob:
  - 0.9507826943283132
  - 0.954756750031106
  - 0.9519325875519336
  - 0.953729690852055
  - 0.9515422605335615
  train_roc_auc_samples:
  - 0.958222497430671
  - 0.9616774384973618
  - 0.9574196627836473
  - 0.9612086678753345
  - 0.9574370783183044
  train_roc_auc_samples_oob:
  - 0.9381191652583734
  - 0.9430864627544066
  - 0.9394457559847087
  - 0.9420219286885954
  - 0.939431780555663
  train_roc_auc_weighted:
  - 0.9790319514983412
  - 0.9818298506736142
  - 0.9830003896265623
  - 0.9823556614825127
  - 0.9795524908589462
  train_roc_auc_weighted_oob:
  - 0.9637859864755841
  - 0.9679727657292957
  - 0.9677021825193985
  - 0.9675976315713023
  - 0.9653504460590118
start: 2023-12-12 16:03:09.442485
wrapper: null
