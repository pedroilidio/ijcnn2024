active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AMjMzMzPjv4AzMzMzMwtAgDMzMzMzA0BAZmZmZmYSwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 11:25:04.307991
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__0
  params: {}
hash: 1d81c3a457b18da5332122a12d1b3fed41b2be4185afe0d4d87cb7796c8634bc
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1d81c3a_20231222T112433208276_embedding__0_scene.yml
results:
  fit_time:
  - 1.4290103912353516
  - 1.3748042583465576
  - 1.3524112701416016
  - 1.390458583831787
  - 1.3858246803283691
  score_time:
  - 3.568918228149414
  - 3.4635603427886963
  - 3.589154005050659
  - 3.577376127243042
  - 3.53887939453125
  test_average_precision_macro:
  - 0.8556034142821893
  - 0.8642430536168693
  - 0.84292016482864
  - 0.8548945279967778
  - 0.8646486112586546
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8690284405461909
  - 0.8675116651958312
  - 0.8406658201340707
  - 0.8606105870282847
  - 0.8693107153460471
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.887759336099585
  - 0.8852005532503457
  - 0.874302649930265
  - 0.8935629784272792
  - 0.8814471879286694
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8464558292007963
  - 0.8565417186677744
  - 0.834881921070371
  - 0.8442619904219012
  - 0.8539540991676814
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9024896265560166
  - 0.9045643153526971
  - 0.8929567642956764
  - 0.8990953375086987
  - 0.9043209876543209
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9024896265560166
  - 0.9045643153526971
  - 0.8929567642956764
  - 0.8990953375086986
  - 0.904320987654321
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9024896265560167
  - 0.9045643153526972
  - 0.8929567642956765
  - 0.8990953375086987
  - 0.904320987654321
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8967221519088739
  - 0.8996564925319228
  - 0.8883484538251742
  - 0.8937946963976369
  - 0.8994162120777107
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8264820800794098
  - 0.8286990544240661
  - 0.8097417143616545
  - 0.8203236223878703
  - 0.8285210977368109
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8223062381852552
  - 0.8257575757575758
  - 0.8066141732283465
  - 0.8166877370417194
  - 0.8253521126760563
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8372851215174865
  - 0.841138114997036
  - 0.8231719466029087
  - 0.8321900785366337
  - 0.8408779149519888
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8172471607925648
  - 0.8207510297909805
  - 0.8023901725408736
  - 0.8118617151688771
  - 0.8206266280644626
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.887759336099585
  - 0.8852005532503456
  - 0.8743026499302646
  - 0.893562978427279
  - 0.8814471879286693
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6328540501951321
  - 0.6457421698149803
  - 0.5938843236863445
  - 0.6195542544571876
  - 0.6379414025276123
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6344070746354037
  - 0.6430343877965125
  - 0.5944936073771435
  - 0.620996359825499
  - 0.6373468864100981
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49940668403473204
  - 0.5080639688392223
  - 0.4601895506579254
  - 0.4873590971486931
  - 0.5060735474168158
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6134011551488519
  - 0.6306294912091113
  - 0.5793325170631725
  - 0.6025157778716732
  - 0.6217857873648803
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9174016104588952
  - 0.9158910707966611
  - 0.907190850131619
  - 0.9220957625793434
  - 0.9122322410989028
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.396265560165975
  - -1.4024896265560165
  - -1.4581589958158996
  - -1.3695198329853862
  - -1.382716049382716
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09751037344398339
  - -0.0954356846473029
  - -0.10704323570432357
  - -0.10090466249130133
  - -0.09567901234567903
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0975103734439834
  - -0.0954356846473029
  - -0.10704323570432357
  - -0.10090466249130133
  - -0.09567901234567901
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0975103734439834
  - -0.09543568464730288
  - -0.10704323570432359
  - -0.10090466249130131
  - -0.09567901234567901
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10327784809112611
  - -0.10034350746807708
  - -0.1116515461748258
  - -0.10620530360236309
  - -0.10058378792228921
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06224066390041494
  - -0.06322614107883817
  - -0.0735878661087866
  - -0.05558455114822547
  - -0.06352880658436214
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9024896265560166
  - 0.9045643153526971
  - 0.8929567642956764
  - 0.8990953375086987
  - 0.9043209876543209
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9024896265560166
  - 0.9045643153526971
  - 0.8929567642956764
  - 0.8990953375086986
  - 0.904320987654321
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9024896265560167
  - 0.9045643153526972
  - 0.8929567642956765
  - 0.8990953375086987
  - 0.904320987654321
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8967221519088739
  - 0.8996564925319228
  - 0.8883484538251742
  - 0.8937946963976369
  - 0.8994162120777107
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9024896265560166
  - 0.9045643153526971
  - 0.8929567642956764
  - 0.8990953375086987
  - 0.9043209876543209
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9024896265560166
  - 0.9045643153526971
  - 0.8929567642956764
  - 0.8990953375086986
  - 0.904320987654321
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9024896265560167
  - 0.9045643153526972
  - 0.8929567642956765
  - 0.8990953375086987
  - 0.904320987654321
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8967221519088739
  - 0.8996564925319228
  - 0.8883484538251742
  - 0.8937946963976369
  - 0.8994162120777107
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9523896083779387
  - 0.9537485838249592
  - 0.9451273384760358
  - 0.9514205007475255
  - 0.9543628076580725
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9596546239343208
  - 0.9567122060470323
  - 0.9496152507636982
  - 0.9586933526127777
  - 0.9607372416020673
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9377593360995851
  - 0.9367738589211619
  - 0.9264121338912135
  - 0.9444154488517745
  - 0.9364711934156379
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9483498789586061
  - 0.9502494008040162
  - 0.9405848639305003
  - 0.9465195212126389
  - 0.9498351096484466
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9875536975909175
  - 0.9868008212823337
  - 0.9885428416900144
  - 0.9873238478614588
  - 0.9867885620803919
  train_average_precision_macro_oob:
  - 0.8477634943838129
  - 0.8460096456582082
  - 0.8489123720364402
  - 0.8480841836201719
  - 0.8426921999445683
  train_average_precision_micro:
  - 0.9862647876755491
  - 0.9854415135155281
  - 0.9868585915364437
  - 0.9864334542163656
  - 0.9856808760682406
  train_average_precision_micro_oob:
  - 0.8543201980227176
  - 0.8554706640729148
  - 0.8595981423662109
  - 0.8560867458870666
  - 0.8516372439263236
  train_average_precision_samples:
  - 0.9814718614718614
  - 0.9783982683982683
  - 0.9822014860895109
  - 0.9811116874135547
  - 0.9770085025160508
  train_average_precision_samples_oob:
  - 0.8787012987012986
  - 0.8803722943722944
  - 0.8812640400898565
  - 0.878310857538036
  - 0.873620510150963
  train_average_precision_weighted:
  - 0.9871427726125411
  - 0.9863960632376579
  - 0.9881736177965635
  - 0.9868958700479016
  - 0.9864566513498223
  train_average_precision_weighted_oob:
  - 0.8378925370665451
  - 0.8357553654773597
  - 0.8384527384167878
  - 0.8383343766809928
  - 0.8329907151219649
  train_f1_macro:
  - 0.9494372294372293
  - 0.9516017316017314
  - 0.9525660964230172
  - 0.9505532503457815
  - 0.9501127884782231
  train_f1_macro_oob:
  - 0.9015584415584414
  - 0.9006060606060607
  - 0.9021945740452738
  - 0.901625172890733
  - 0.9013534617386778
  train_f1_micro:
  - 0.9494372294372294
  - 0.9516017316017316
  - 0.9525660964230172
  - 0.9505532503457814
  - 0.9501127884782231
  train_f1_micro_oob:
  - 0.9015584415584416
  - 0.9006060606060606
  - 0.9021945740452739
  - 0.9016251728907331
  - 0.9013534617386778
  train_f1_samples:
  - 0.9494372294372295
  - 0.9516017316017317
  - 0.9525660964230172
  - 0.9505532503457816
  - 0.9501127884782232
  train_f1_samples_oob:
  - 0.9015584415584417
  - 0.9006060606060606
  - 0.9021945740452739
  - 0.9016251728907332
  - 0.9013534617386778
  train_f1_weighted:
  - 0.9470700368813576
  - 0.9491514481649878
  - 0.950077359411928
  - 0.9482273349278072
  - 0.9474901429067802
  train_f1_weighted_oob:
  - 0.8966904793319888
  - 0.8953616016478687
  - 0.8967078882535021
  - 0.8964925419552637
  - 0.8962647082725612
  train_jaccard_macro:
  - 0.9045438725742624
  - 0.9084857273024057
  - 0.9102714851662488
  - 0.9065329993925108
  - 0.9058836894369503
  train_jaccard_macro_oob:
  - 0.8238743964988909
  - 0.8226950835759405
  - 0.8256623653234519
  - 0.8241875674060161
  - 0.8238174268771795
  train_jaccard_micro:
  - 0.9037415526619417
  - 0.9076719795193657
  - 0.9094283593170007
  - 0.9057660626029654
  - 0.9049665316915957
  train_jaccard_micro_oob:
  - 0.8207614093166233
  - 0.8191841234840133
  - 0.8218164646623642
  - 0.8208720289626948
  - 0.8204217010187159
  train_jaccard_samples:
  - 0.9151144094001236
  - 0.918491032776747
  - 0.9201782319978277
  - 0.9167037146808931
  - 0.9161027242755511
  train_jaccard_samples_oob:
  - 0.836499690785405
  - 0.8346444032158318
  - 0.8372954158335183
  - 0.8362354277810709
  - 0.8359857217223172
  train_jaccard_weighted:
  - 0.9003177356041873
  - 0.904108272232147
  - 0.9058002577895073
  - 0.9023731211983038
  - 0.9012038231692282
  train_jaccard_weighted_oob:
  - 0.8160293405391315
  - 0.8142920387578613
  - 0.8168397194090375
  - 0.8159438537067218
  - 0.8156269598309478
  train_label_ranking_average_precision_score:
  - 0.9814718614718613
  - 0.978398268398268
  - 0.9822014860895107
  - 0.9811116874135544
  - 0.9770085025160504
  train_label_ranking_average_precision_score_oob:
  - 0.8787012987012984
  - 0.8803722943722939
  - 0.8812640400898563
  - 0.878310857538036
  - 0.8736205101509626
  train_matthews_corrcoef_macro:
  - 0.825830037631322
  - 0.8340728085774458
  - 0.8374768620774372
  - 0.829826638084735
  - 0.8293938834169238
  train_matthews_corrcoef_macro_oob:
  - 0.6308676422502443
  - 0.6251511332243702
  - 0.6302540610257692
  - 0.630333619706012
  - 0.6301578095636354
  train_matthews_corrcoef_micro:
  - 0.821800904379727
  - 0.8296904250978281
  - 0.8330441043627623
  - 0.8258431118402073
  - 0.8247539119778108
  train_matthews_corrcoef_micro_oob:
  - 0.6299012036135415
  - 0.6257867093333468
  - 0.6319755151494884
  - 0.6298446135136017
  - 0.6301392310128405
  train_matthews_corrcoef_samples:
  - 0.7476927621933825
  - 0.7586496971483452
  - 0.7639558553045255
  - 0.7508519151747124
  - 0.7533481550445853
  train_matthews_corrcoef_samples_oob:
  - 0.4957360582408423
  - 0.491866834367893
  - 0.499100648383623
  - 0.49407118975023767
  - 0.4968402195710964
  train_matthews_corrcoef_weighted:
  - 0.8196916465465471
  - 0.8276462915462137
  - 0.8308378486462965
  - 0.8238091168844397
  - 0.8224135947188601
  train_matthews_corrcoef_weighted_oob:
  - 0.6155039045056481
  - 0.6078364908078897
  - 0.6119485865792569
  - 0.6135347377940018
  - 0.6138643465632452
  train_ndgc:
  - 0.9865511021191501
  - 0.9841262047749072
  - 0.9869836066283464
  - 0.9861582045315578
  - 0.9831627338850074
  train_ndgc_oob:
  - 0.9106390757085124
  - 0.9117272771894394
  - 0.9126459585477016
  - 0.9103373805144372
  - 0.906923784192774
  train_neg_coverage_error:
  - -1.117922077922078
  - -1.1267532467532468
  - -1.1145671332296527
  - -1.1182572614107884
  - -1.133784487246226
  train_neg_coverage_error_oob:
  - -1.4150649350649351
  - -1.410909090909091
  - -1.4053913945049248
  - -1.420643153526971
  - -1.4377928162415408
  train_neg_hamming_loss_macro:
  - -0.05056277056277056
  - -0.048398268398268406
  - -0.0474339035769829
  - -0.04944674965421853
  - -0.04988721152177685
  train_neg_hamming_loss_macro_oob:
  - -0.09844155844155844
  - -0.09939393939393938
  - -0.09780542595472612
  - -0.09837482710926694
  - -0.09864653826132223
  train_neg_hamming_loss_micro:
  - -0.050562770562770566
  - -0.0483982683982684
  - -0.04743390357698289
  - -0.04944674965421853
  - -0.04988721152177685
  train_neg_hamming_loss_micro_oob:
  - -0.09844155844155844
  - -0.0993939393939394
  - -0.0978054259547261
  - -0.09837482710926694
  - -0.09864653826132223
  train_neg_hamming_loss_samples:
  - -0.05056277056277055
  - -0.04839826839826839
  - -0.04743390357698289
  - -0.049446749654218525
  - -0.04988721152177685
  train_neg_hamming_loss_samples_oob:
  - -0.09844155844155844
  - -0.09939393939393938
  - -0.09780542595472609
  - -0.09837482710926694
  - -0.09864653826132223
  train_neg_hamming_loss_weighted:
  - -0.05292996311864236
  - -0.05084855183501218
  - -0.049922640588071915
  - -0.05177266507219275
  - -0.05250985709321988
  train_neg_hamming_loss_weighted_oob:
  - -0.10330952066801122
  - -0.10463839835213143
  - -0.10329211174649777
  - -0.10350745804473623
  - -0.10373529172743877
  train_neg_label_ranking_loss:
  - -0.008467532467532467
  - -0.010324675324675325
  - -0.00826853291861068
  - -0.008985995850622406
  - -0.011035918792295681
  train_neg_label_ranking_loss_oob:
  - -0.06655844155844155
  - -0.0659090909090909
  - -0.06477449455676516
  - -0.0677515560165975
  - -0.07008068714211348
  train_precision_macro:
  - 0.9494372294372293
  - 0.9516017316017314
  - 0.9525660964230172
  - 0.9505532503457815
  - 0.9501127884782231
  train_precision_macro_oob:
  - 0.9015584415584414
  - 0.9006060606060607
  - 0.9021945740452738
  - 0.901625172890733
  - 0.9013534617386778
  train_precision_micro:
  - 0.9494372294372294
  - 0.9516017316017316
  - 0.9525660964230172
  - 0.9505532503457814
  - 0.9501127884782231
  train_precision_micro_oob:
  - 0.9015584415584416
  - 0.9006060606060606
  - 0.9021945740452739
  - 0.9016251728907331
  - 0.9013534617386778
  train_precision_samples:
  - 0.9494372294372295
  - 0.9516017316017317
  - 0.9525660964230172
  - 0.9505532503457816
  - 0.9501127884782232
  train_precision_samples_oob:
  - 0.9015584415584417
  - 0.9006060606060606
  - 0.9021945740452739
  - 0.9016251728907332
  - 0.9013534617386778
  train_precision_weighted:
  - 0.9470700368813576
  - 0.9491514481649878
  - 0.950077359411928
  - 0.9482273349278072
  - 0.9474901429067802
  train_precision_weighted_oob:
  - 0.8966904793319888
  - 0.8953616016478687
  - 0.8967078882535021
  - 0.8964925419552637
  - 0.8962647082725612
  train_recall_macro:
  - 0.9494372294372293
  - 0.9516017316017314
  - 0.9525660964230172
  - 0.9505532503457815
  - 0.9501127884782231
  train_recall_macro_oob:
  - 0.9015584415584414
  - 0.9006060606060607
  - 0.9021945740452738
  - 0.901625172890733
  - 0.9013534617386778
  train_recall_micro:
  - 0.9494372294372294
  - 0.9516017316017316
  - 0.9525660964230172
  - 0.9505532503457814
  - 0.9501127884782231
  train_recall_micro_oob:
  - 0.9015584415584416
  - 0.9006060606060606
  - 0.9021945740452739
  - 0.9016251728907331
  - 0.9013534617386778
  train_recall_samples:
  - 0.9494372294372295
  - 0.9516017316017317
  - 0.9525660964230172
  - 0.9505532503457816
  - 0.9501127884782232
  train_recall_samples_oob:
  - 0.9015584415584417
  - 0.9006060606060606
  - 0.9021945740452739
  - 0.9016251728907332
  - 0.9013534617386778
  train_recall_weighted:
  - 0.9470700368813576
  - 0.9491514481649878
  - 0.950077359411928
  - 0.9482273349278072
  - 0.9474901429067802
  train_recall_weighted_oob:
  - 0.8966904793319888
  - 0.8953616016478687
  - 0.8967078882535021
  - 0.8964925419552637
  - 0.8962647082725612
  train_roc_auc_macro:
  - 0.9966819370160431
  - 0.9965336478392098
  - 0.9969778114117659
  - 0.9966603253992171
  - 0.9965541897293427
  train_roc_auc_macro_oob:
  - 0.9485219456564317
  - 0.9479488124054191
  - 0.9496611536718406
  - 0.9485020821894633
  - 0.9465468660162853
  train_roc_auc_micro:
  - 0.9966793122171465
  - 0.9964874911111228
  - 0.9968408428597066
  - 0.9967044691031253
  - 0.9965311688074734
  train_roc_auc_micro_oob:
  - 0.9547192666876549
  - 0.9553918612768078
  - 0.9570824860283701
  - 0.9548546268960603
  - 0.9531217410871922
  train_roc_auc_samples:
  - 0.9915324675324676
  - 0.9896753246753247
  - 0.9917314670813893
  - 0.9910140041493777
  - 0.9889640812077042
  train_roc_auc_samples_oob:
  - 0.9334415584415584
  - 0.9340909090909091
  - 0.9352255054432349
  - 0.9322484439834025
  - 0.9299193128578865
  train_roc_auc_weighted:
  - 0.9965080027954284
  - 0.9963610575240572
  - 0.9968231891858945
  - 0.9964730706149529
  - 0.9963926041984029
  train_roc_auc_weighted_oob:
  - 0.9439517618937994
  - 0.9431791400076693
  - 0.9451389217221878
  - 0.944090920010269
  - 0.9419419966195902
start: 2023-12-22 11:24:33.208276
wrapper: null
