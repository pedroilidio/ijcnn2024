active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T+AmZmZmZkRwACamZmZmfk/gGZmZmZmFkCAmZmZmZkRwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:47:09.984426
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 25c82b0d7818aa35a6d32881ccbd5fad5542be138bf6c16f40e525bb562fb2cd
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/25c82b0_20231212T164521013449_embedding_proba_weak__9_PlantGO.yml
results:
  fit_time:
  - 54.637558698654175
  - 52.885831356048584
  - 52.31674885749817
  - 53.66332983970642
  - 58.91476273536682
  score_time:
  - 13.174957036972046
  - 13.513156175613403
  - 12.031526565551758
  - 11.893978834152222
  - 12.493029832839966
  test_average_precision_macro:
  - 0.5315199905013562
  - 0.524388630750013
  - 0.6439312934050084
  - 0.5666963546185307
  - 0.5721096045523021
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.628630304566221
  - 0.6230934119015115
  - 0.6244828976913239
  - 0.5910369781633816
  - 0.634652720647524
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8391527573228603
  - 0.808230339105339
  - 0.8492247586319751
  - 0.8393107769423559
  - 0.8573472222222221
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7617979861250165
  - 0.7418645929049381
  - 0.7748075122923092
  - 0.7552672317010239
  - 0.7701805364509707
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9282646048109967
  - 0.92125
  - 0.9312714776632304
  - 0.9293859649122805
  - 0.9329166666666668
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9282646048109966
  - 0.92125
  - 0.9312714776632303
  - 0.9293859649122806
  - 0.9329166666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9282646048109966
  - 0.92125
  - 0.9312714776632302
  - 0.9293859649122806
  - 0.9329166666666666
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9295041728031418
  - 0.9249764150943395
  - 0.9250727568687417
  - 0.9289348964829134
  - 0.9364084507042252
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8673056171139016
  - 0.8559558458920127
  - 0.8738719766099196
  - 0.8698383113627918
  - 0.8757521616031946
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8661322645290581
  - 0.8539976825028969
  - 0.8713826366559485
  - 0.8680868496517821
  - 0.8742678641155799
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.877540500736377
  - 0.8676835811247575
  - 0.8839639741701597
  - 0.8808444187391555
  - 0.8866593406593407
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8693329989111067
  - 0.861918183147356
  - 0.8625693958255508
  - 0.8684199816948536
  - 0.8818679300147302
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8391527573228607
  - 0.8082303391053389
  - 0.8492247586319751
  - 0.8393107769423559
  - 0.8573472222222225
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5124711069188134
  - 0.5019693288128313
  - 0.6014861217190377
  - 0.5582223810540593
  - 0.5354464331325737
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6252631852048517
  - 0.6138597275210875
  - 0.6501082133123282
  - 0.6485178075978785
  - 0.6477285613844095
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6597978873794553
  - 0.6710145449950715
  - 0.7090403616454045
  - 0.7039067762006973
  - 0.6976889999061914
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6817821077705949
  - 0.6745157503566858
  - 0.7018957970105201
  - 0.708325856073284
  - 0.6988360495672711
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8817018365796689
  - 0.8572775384363618
  - 0.8896153635925443
  - 0.8812598937192103
  - 0.8955983694126818
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6494845360824741
  - -1.765
  - -1.6185567010309279
  - -1.6421052631578947
  - -1.515
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07173539518900345
  - -0.07875000000000001
  - -0.06872852233676975
  - -0.0706140350877193
  - -0.06708333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07173539518900343
  - -0.07875
  - -0.06872852233676977
  - -0.0706140350877193
  - -0.06708333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07173539518900343
  - -0.07874999999999999
  - -0.06872852233676975
  - -0.0706140350877193
  - -0.06708333333333334
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07049582719685811
  - -0.07502358490566037
  - -0.07492724313125831
  - -0.07106510351708656
  - -0.06359154929577465
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0468369259606373
  - -0.06268181818181819
  - -0.045325245582977534
  - -0.04638755980861244
  - -0.0387020202020202
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9282646048109967
  - 0.92125
  - 0.9312714776632304
  - 0.9293859649122805
  - 0.9329166666666668
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9282646048109966
  - 0.92125
  - 0.9312714776632303
  - 0.9293859649122806
  - 0.9329166666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9282646048109966
  - 0.92125
  - 0.9312714776632302
  - 0.9293859649122806
  - 0.9329166666666666
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9295041728031418
  - 0.9249764150943395
  - 0.9250727568687417
  - 0.9289348964829134
  - 0.9364084507042252
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9282646048109967
  - 0.92125
  - 0.9312714776632304
  - 0.9293859649122805
  - 0.9329166666666668
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9282646048109966
  - 0.92125
  - 0.9312714776632303
  - 0.9293859649122806
  - 0.9329166666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9282646048109966
  - 0.92125
  - 0.9312714776632302
  - 0.9293859649122806
  - 0.9329166666666666
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9295041728031418
  - 0.9249764150943395
  - 0.9250727568687417
  - 0.9289348964829134
  - 0.9364084507042252
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9456029637498301
  - 0.9391430022364586
  - 0.9591827250056078
  - 0.9445507689139006
  - 0.9579410412753813
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9551193848644274
  - 0.9504479838570591
  - 0.9594486882184654
  - 0.9503549348427132
  - 0.9621407763759818
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9531630740393626
  - 0.9377727272727273
  - 0.9546747544170224
  - 0.9536124401913876
  - 0.9615252525252526
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9627953705546918
  - 0.9550812727480096
  - 0.9634169807432821
  - 0.9550676393500596
  - 0.9682530980868107
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.5289799115383621
  - 0.5579647940101783
  - 0.5920435726717087
  - 0.5550773949049826
  - 0.5639549801922844
  train_average_precision_macro_oob:
  - 0.5067057806827094
  - 0.5401195566910024
  - 0.5840545081550167
  - 0.5461589586619746
  - 0.5564765344590331
  train_average_precision_micro:
  - 0.6422533637847513
  - 0.6373021563355161
  - 0.6474655165752633
  - 0.6231719087276683
  - 0.6174219338817931
  train_average_precision_micro_oob:
  - 0.6268602688277836
  - 0.6232069419036845
  - 0.6391353362921178
  - 0.6127528152566671
  - 0.6100946044905249
  train_average_precision_samples:
  - 0.8757936507936507
  - 0.8819408740359896
  - 0.8888676303854876
  - 0.8717287084038353
  - 0.9110539845758354
  train_average_precision_samples_oob:
  - 0.8604429867184971
  - 0.866078569388338
  - 0.8836329770003238
  - 0.8609142091692853
  - 0.8889225527400334
  train_average_precision_weighted:
  - 0.779752976329114
  - 0.7836052115785871
  - 0.7936448378370439
  - 0.785127039796944
  - 0.7843079499435472
  train_average_precision_weighted_oob:
  - 0.7624404307844591
  - 0.766408812306003
  - 0.7791917742667728
  - 0.7760791443772839
  - 0.7746183380491222
  train_f1_macro:
  - 0.9373937074829932
  - 0.9404455869751498
  - 0.9432397959183674
  - 0.9381345177664976
  - 0.93926735218509
  train_f1_macro_oob:
  - 0.9356930272108842
  - 0.9389460154241647
  - 0.9420705782312925
  - 0.9365482233502537
  - 0.9380891173950299
  train_f1_micro:
  - 0.9373937074829932
  - 0.9404455869751499
  - 0.9432397959183674
  - 0.9381345177664975
  - 0.9392673521850899
  train_f1_micro_oob:
  - 0.9356930272108843
  - 0.9389460154241646
  - 0.9420705782312925
  - 0.9365482233502538
  - 0.93808911739503
  train_f1_samples:
  - 0.9373937074829931
  - 0.9404455869751499
  - 0.9432397959183674
  - 0.9381345177664975
  - 0.9392673521850899
  train_f1_samples_oob:
  - 0.9356930272108842
  - 0.9389460154241646
  - 0.9420705782312924
  - 0.9365482233502538
  - 0.9380891173950299
  train_f1_weighted:
  - 0.9521796884434247
  - 0.9535170937434245
  - 0.9539429246876054
  - 0.9528787860562464
  - 0.9527749451971984
  train_f1_weighted_oob:
  - 0.9455425069436058
  - 0.9477947835951295
  - 0.9506380566410961
  - 0.9481635071090047
  - 0.9471603294884867
  train_jaccard_macro:
  - 0.883299554548953
  - 0.889281886674898
  - 0.8942105893595088
  - 0.8853051179112862
  - 0.8869955422737864
  train_jaccard_macro_oob:
  - 0.8800646729556246
  - 0.8865239052017064
  - 0.8919874726503791
  - 0.8823039894818937
  - 0.8847194283703325
  train_jaccard_micro:
  - 0.8821646493948184
  - 0.8875859280226446
  - 0.8925769462884732
  - 0.8834777412608306
  - 0.8854892456831264
  train_jaccard_micro_oob:
  - 0.8791570957754918
  - 0.8849182313749243
  - 0.8904852808198533
  - 0.8806682577565632
  - 0.8833972160580996
  train_jaccard_samples:
  - 0.894921375143464
  - 0.8994107510514588
  - 0.9046004665602505
  - 0.8959387308222782
  - 0.8975043329572288
  train_jaccard_samples_oob:
  - 0.8915826220598129
  - 0.896484945570081
  - 0.9018307322929171
  - 0.8926623714694781
  - 0.8952603347053673
  train_jaccard_weighted:
  - 0.9097162860937374
  - 0.9124284910617287
  - 0.9130974027340188
  - 0.9113308941734808
  - 0.9108959236016254
  train_jaccard_weighted_oob:
  - 0.8975391418130205
  - 0.901879848463448
  - 0.906962924667292
  - 0.9025589744490103
  - 0.9005050171216059
  train_label_ranking_average_precision_score:
  - 0.8757936507936512
  - 0.8819408740359903
  - 0.8888676303854876
  - 0.8717287084038354
  - 0.9110539845758359
  train_label_ranking_average_precision_score_oob:
  - 0.860442986718497
  - 0.866078569388338
  - 0.8836329770003237
  - 0.8609142091692853
  - 0.8889225527400337
  train_matthews_corrcoef_macro:
  - 0.6053497856351594
  - 0.615713355136479
  - 0.648045145456884
  - 0.6157125705226764
  - 0.591082497388843
  train_matthews_corrcoef_macro_oob:
  - 0.5567455877259739
  - 0.5730296195963114
  - 0.5993097108427483
  - 0.5739416743673882
  - 0.5644236541643157
  train_matthews_corrcoef_micro:
  - 0.7038671136374768
  - 0.7164448339000261
  - 0.7222579383910617
  - 0.7051445226657991
  - 0.7028515884974373
  train_matthews_corrcoef_micro_oob:
  - 0.6758356306537611
  - 0.6941395116684329
  - 0.7026374098826209
  - 0.6834766955728687
  - 0.6834768470051649
  train_matthews_corrcoef_samples:
  - 0.7790918244797582
  - 0.7888304193091159
  - 0.7924442917344503
  - 0.7790074552156634
  - 0.7658849695231135
  train_matthews_corrcoef_samples_oob:
  - 0.7335017014329686
  - 0.7514637718127972
  - 0.7547596963234074
  - 0.7409698703198483
  - 0.7348263889971782
  train_matthews_corrcoef_weighted:
  - 0.7809572682516818
  - 0.7860117420475301
  - 0.7903493639968943
  - 0.783234253207099
  - 0.7756948556236269
  train_matthews_corrcoef_weighted_oob:
  - 0.7435578196314263
  - 0.755332659931416
  - 0.7636654067079889
  - 0.7558028023918837
  - 0.7480404580516469
  train_ndgc:
  - 0.9077604704481156
  - 0.9126622036021287
  - 0.9176717536095842
  - 0.9050394564575914
  - 0.9354529154010728
  train_ndgc_oob:
  - 0.896828154265825
  - 0.9018175535078384
  - 0.9140101434035561
  - 0.8974255309611213
  - 0.9212159653534353
  train_neg_coverage_error:
  - -1.4464285714285714
  - -1.4267352185089974
  - -1.3928571428571428
  - -1.4543147208121827
  - -1.3367609254498716
  train_neg_coverage_error_oob:
  - -1.5688775510204083
  - -1.538560411311054
  - -1.4783163265306123
  - -1.5647208121827412
  - -1.4691516709511567
  train_neg_hamming_loss_macro:
  - -0.0626062925170068
  - -0.059554413024850046
  - -0.05676020408163266
  - -0.06186548223350252
  - -0.06073264781491003
  train_neg_hamming_loss_macro_oob:
  - -0.06430697278911564
  - -0.06105398457583547
  - -0.05792942176870749
  - -0.06345177664974617
  - -0.06191088260497001
  train_neg_hamming_loss_micro:
  - -0.0626062925170068
  - -0.059554413024850046
  - -0.056760204081632654
  - -0.061865482233502536
  - -0.06073264781491003
  train_neg_hamming_loss_micro_oob:
  - -0.06430697278911565
  - -0.061053984575835475
  - -0.05792942176870748
  - -0.06345177664974619
  - -0.06191088260497001
  train_neg_hamming_loss_samples:
  - -0.06260629251700679
  - -0.05955441302485004
  - -0.056760204081632654
  - -0.061865482233502536
  - -0.06073264781491003
  train_neg_hamming_loss_samples_oob:
  - -0.06430697278911565
  - -0.061053984575835475
  - -0.05792942176870749
  - -0.06345177664974619
  - -0.061910882604970005
  train_neg_hamming_loss_weighted:
  - -0.047820311556575304
  - -0.046482906256575404
  - -0.04605707531239446
  - -0.04712121394375345
  - -0.047225054802801515
  train_neg_hamming_loss_weighted_oob:
  - -0.054457493056394156
  - -0.05220521640487059
  - -0.04936194335890384
  - -0.05183649289099526
  - -0.05283967051151316
  train_neg_label_ranking_loss:
  - -0.033135350099635814
  - -0.030523097296876217
  - -0.02807969147254862
  - -0.0337565588200106
  - -0.021799182917434847
  train_neg_label_ranking_loss_oob:
  - -0.04245258709544424
  - -0.03854915911471181
  - -0.03437865045007902
  - -0.04191983284622878
  - -0.031250811456466986
  train_precision_macro:
  - 0.9373937074829932
  - 0.9404455869751498
  - 0.9432397959183674
  - 0.9381345177664976
  - 0.93926735218509
  train_precision_macro_oob:
  - 0.9356930272108842
  - 0.9389460154241647
  - 0.9420705782312925
  - 0.9365482233502537
  - 0.9380891173950299
  train_precision_micro:
  - 0.9373937074829932
  - 0.9404455869751499
  - 0.9432397959183674
  - 0.9381345177664975
  - 0.9392673521850899
  train_precision_micro_oob:
  - 0.9356930272108843
  - 0.9389460154241646
  - 0.9420705782312925
  - 0.9365482233502538
  - 0.93808911739503
  train_precision_samples:
  - 0.9373937074829931
  - 0.9404455869751499
  - 0.9432397959183674
  - 0.9381345177664975
  - 0.9392673521850899
  train_precision_samples_oob:
  - 0.9356930272108842
  - 0.9389460154241646
  - 0.9420705782312924
  - 0.9365482233502538
  - 0.9380891173950299
  train_precision_weighted:
  - 0.9521796884434247
  - 0.9535170937434245
  - 0.9539429246876054
  - 0.9528787860562464
  - 0.9527749451971984
  train_precision_weighted_oob:
  - 0.9455425069436058
  - 0.9477947835951295
  - 0.9506380566410961
  - 0.9481635071090047
  - 0.9471603294884867
  train_recall_macro:
  - 0.9373937074829932
  - 0.9404455869751498
  - 0.9432397959183674
  - 0.9381345177664976
  - 0.93926735218509
  train_recall_macro_oob:
  - 0.9356930272108842
  - 0.9389460154241647
  - 0.9420705782312925
  - 0.9365482233502537
  - 0.9380891173950299
  train_recall_micro:
  - 0.9373937074829932
  - 0.9404455869751499
  - 0.9432397959183674
  - 0.9381345177664975
  - 0.9392673521850899
  train_recall_micro_oob:
  - 0.9356930272108843
  - 0.9389460154241646
  - 0.9420705782312925
  - 0.9365482233502538
  - 0.93808911739503
  train_recall_samples:
  - 0.9373937074829931
  - 0.9404455869751499
  - 0.9432397959183674
  - 0.9381345177664975
  - 0.9392673521850899
  train_recall_samples_oob:
  - 0.9356930272108842
  - 0.9389460154241646
  - 0.9420705782312924
  - 0.9365482233502538
  - 0.9380891173950299
  train_recall_weighted:
  - 0.9521796884434247
  - 0.9535170937434245
  - 0.9539429246876054
  - 0.9528787860562464
  - 0.9527749451971984
  train_recall_weighted_oob:
  - 0.9455425069436058
  - 0.9477947835951295
  - 0.9506380566410961
  - 0.9481635071090047
  - 0.9471603294884867
  train_roc_auc_macro:
  - 0.9658216168910118
  - 0.9668732543818157
  - 0.9694174962680747
  - 0.9675616057421131
  - 0.9672725525037654
  train_roc_auc_macro_oob:
  - 0.9572245747656756
  - 0.9568520561741966
  - 0.9616119057454697
  - 0.9585666834612457
  - 0.957592316057739
  train_roc_auc_micro:
  - 0.9670290578635067
  - 0.9679624515283608
  - 0.9700436338916859
  - 0.9658285694159808
  - 0.9662292706826169
  train_roc_auc_micro_oob:
  - 0.9615739105978868
  - 0.9621391505306373
  - 0.9647637618085962
  - 0.9592846034300205
  - 0.959875477282553
  train_roc_auc_samples:
  - 0.9668646499003641
  - 0.9695353275687465
  - 0.9719203085274514
  - 0.9662434411799894
  - 0.9783760916794336
  train_roc_auc_samples_oob:
  - 0.957637278396207
  - 0.9618072325655873
  - 0.9656213495499211
  - 0.9580801671537712
  - 0.9693655708758537
  train_roc_auc_weighted:
  - 0.9772376852443487
  - 0.976784375464051
  - 0.9787447122450451
  - 0.9778282202018931
  - 0.9768156967912255
  train_roc_auc_weighted_oob:
  - 0.9702982230270482
  - 0.9696336851197133
  - 0.9722242271866091
  - 0.9707137081917387
  - 0.9696267291306466
start: 2023-12-12 16:45:21.013449
wrapper: null
