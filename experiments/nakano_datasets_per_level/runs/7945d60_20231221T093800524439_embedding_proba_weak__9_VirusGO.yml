active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j9AMzMzMzMLQMDMzMzMzATAQDMzMzMzA0BgZmZmZmYSwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:57:56.891797
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__9
  params: {}
hash: 7945d600357a594be033795f31b42f55f15337cecaf456d602457c5a4c8c4c12
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7945d60_20231221T093800524439_embedding_proba_weak__9_VirusGO.yml
results:
  fit_time:
  - 1146.9086799621582
  - 1154.768010854721
  - 1173.815537929535
  - 1173.7383618354797
  - 1181.6145815849304
  score_time:
  - 5.208390712738037
  - 5.5202391147613525
  - 5.636757850646973
  - 5.566552639007568
  - 5.565871000289917
  test_average_precision_macro:
  - 0.9401994795190154
  - 0.9187715430795015
  - 0.8623121591757049
  - 0.8972042955493147
  - 0.9032536867528217
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.899399965414795
  - 0.9464727832691399
  - 0.8709038569847806
  - 0.8830930765804961
  - 0.8985447100330031
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9375
  - 0.9403508771929825
  - 0.9647727272727273
  - 0.9581196581196582
  - 0.953623188405797
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9382790470623289
  - 0.9473399532973361
  - 0.8982202503858675
  - 0.9036834121381564
  - 0.9101533939916293
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8833333333333333
  - 0.8552631578947367
  - 0.8825757575757577
  - 0.8632478632478633
  - 0.8840579710144927
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8833333333333333
  - 0.8552631578947368
  - 0.8825757575757576
  - 0.8632478632478633
  - 0.8840579710144928
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8833333333333334
  - 0.8552631578947368
  - 0.8825757575757577
  - 0.8632478632478634
  - 0.8840579710144927
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.857
  - 0.8082706766917294
  - 0.8557692307692307
  - 0.8190045248868779
  - 0.8504347826086956
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7946619462830739
  - 0.7576733723792547
  - 0.7926967888604718
  - 0.76645486978074
  - 0.7973090153740309
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7910447761194029
  - 0.7471264367816092
  - 0.7898305084745763
  - 0.7593984962406015
  - 0.7922077922077922
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8107142857142857
  - 0.7593984962406016
  - 0.8084415584415585
  - 0.7826617826617827
  - 0.8059006211180125
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7508400491455929
  - 0.6923579821539004
  - 0.7492950357400486
  - 0.6978905414541954
  - 0.7454796221322536
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9375
  - 0.9403508771929825
  - 0.9647727272727273
  - 0.9581196581196582
  - 0.953623188405797
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2330432736842666
  - 0.19630792464975114
  - 0.22674024667450435
  - 0.2005481186542697
  - 0.2077458068594028
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6134504585191239
  - 0.5250740270892841
  - 0.5899935407948299
  - 0.5558683278801674
  - 0.5562305638714214
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5302372813917084
  - 0.3367035050579488
  - 0.4703946953659324
  - 0.42300939990002634
  - 0.40646449121958755
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.47540827831590393
  - 0.39238328178487597
  - 0.45777844214453367
  - 0.4152154980893844
  - 0.4238014459931817
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9546153350348068
  - 0.9613997641359932
  - 0.9753406602813574
  - 0.9702485048779576
  - 0.9660326815207432
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4
  - -1.5789473684210527
  - -1.3636363636363635
  - -1.435897435897436
  - -1.2608695652173914
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.11666666666666665
  - -0.14473684210526316
  - -0.11742424242424242
  - -0.13675213675213674
  - -0.11594202898550725
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11666666666666667
  - -0.14473684210526316
  - -0.11742424242424243
  - -0.13675213675213677
  - -0.11594202898550725
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11666666666666665
  - -0.1447368421052632
  - -0.11742424242424243
  - -0.13675213675213674
  - -0.11594202898550723
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.143
  - -0.19172932330827064
  - -0.14423076923076922
  - -0.1809954751131222
  - -0.14956521739130435
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.029027777777777774
  - -0.043421052631578944
  - -0.03238636363636364
  - -0.021082621082621083
  - -0.03315217391304348
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8833333333333333
  - 0.8552631578947367
  - 0.8825757575757577
  - 0.8632478632478633
  - 0.8840579710144927
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8833333333333333
  - 0.8552631578947368
  - 0.8825757575757576
  - 0.8632478632478633
  - 0.8840579710144928
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8833333333333334
  - 0.8552631578947368
  - 0.8825757575757577
  - 0.8632478632478634
  - 0.8840579710144927
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.857
  - 0.8082706766917294
  - 0.8557692307692307
  - 0.8190045248868779
  - 0.8504347826086956
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8833333333333333
  - 0.8552631578947367
  - 0.8825757575757577
  - 0.8632478632478633
  - 0.8840579710144927
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8833333333333333
  - 0.8552631578947368
  - 0.8825757575757576
  - 0.8632478632478633
  - 0.8840579710144928
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8833333333333334
  - 0.8552631578947368
  - 0.8825757575757577
  - 0.8632478632478634
  - 0.8840579710144927
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.857
  - 0.8082706766917294
  - 0.8557692307692307
  - 0.8190045248868779
  - 0.8504347826086956
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9652408339268953
  - 0.9825878267973854
  - 0.9309577677224737
  - 0.9713146580180894
  - 0.9736537718535692
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9672631578947368
  - 0.9781096796260405
  - 0.950199564586357
  - 0.9772849030322511
  - 0.9727433628318585
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9709722222222222
  - 0.9565789473684211
  - 0.9676136363636364
  - 0.978917378917379
  - 0.9668478260869564
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9615173473869126
  - 0.9852065826330532
  - 0.9383793556870479
  - 0.9632888761565233
  - 0.961039408866995
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9548214586327282
  - 0.9274951315629508
  - 0.9668237323470611
  - 0.9300019584895601
  - 0.9554102309397581
  train_average_precision_macro_oob:
  - 0.906340871778948
  - 0.8968823820448505
  - 0.9455123521247542
  - 0.8994702581625348
  - 0.9236769420619689
  train_average_precision_micro:
  - 0.9378183782289976
  - 0.897725388611065
  - 0.949232343009569
  - 0.9158804826152793
  - 0.9277125980456356
  train_average_precision_micro_oob:
  - 0.9002534786699866
  - 0.8614720439736183
  - 0.9124089912229467
  - 0.8860968554954303
  - 0.885365367124351
  train_average_precision_samples:
  - 0.9565868263473054
  - 0.9431952662721894
  - 0.9720858895705521
  - 0.9617063492063492
  - 0.9675983436853002
  train_average_precision_samples_oob:
  - 0.9327345309381236
  - 0.9152859960552269
  - 0.9576687116564416
  - 0.95109126984127
  - 0.9462732919254658
  train_average_precision_weighted:
  - 0.9569804885097896
  - 0.925326783841237
  - 0.9683089365282177
  - 0.927273208245334
  - 0.95170059058001
  train_average_precision_weighted_oob:
  - 0.9253288774888645
  - 0.9053089204183797
  - 0.9464222943336682
  - 0.9041893915122076
  - 0.9295060852683367
  train_f1_macro:
  - 0.8922155688622756
  - 0.8717948717948719
  - 0.876278118609407
  - 0.8759920634920636
  - 0.8778467908902692
  train_f1_macro_oob:
  - 0.8942115768463075
  - 0.8668639053254438
  - 0.8773006134969324
  - 0.873015873015873
  - 0.875776397515528
  train_f1_micro:
  - 0.8922155688622755
  - 0.8717948717948718
  - 0.876278118609407
  - 0.8759920634920635
  - 0.8778467908902692
  train_f1_micro_oob:
  - 0.8942115768463074
  - 0.8668639053254438
  - 0.8773006134969326
  - 0.873015873015873
  - 0.8757763975155279
  train_f1_samples:
  - 0.8922155688622755
  - 0.8717948717948717
  - 0.8762781186094069
  - 0.8759920634920636
  - 0.8778467908902691
  train_f1_samples_oob:
  - 0.8942115768463073
  - 0.8668639053254438
  - 0.8773006134969326
  - 0.8730158730158731
  - 0.8757763975155279
  train_f1_weighted:
  - 0.8758818995672022
  - 0.8320167895764712
  - 0.8441411042944786
  - 0.8422470978441127
  - 0.8491482688641534
  train_f1_weighted_oob:
  - 0.879765222031185
  - 0.8218730871250766
  - 0.8461963190184051
  - 0.8362947168917318
  - 0.8448434905602362
  train_jaccard_macro:
  - 0.8073957326069833
  - 0.7774719646557768
  - 0.7849032077898488
  - 0.783372955368371
  - 0.7856698067090587
  train_jaccard_macro_oob:
  - 0.8107153154826815
  - 0.7706694078604656
  - 0.7862547832459019
  - 0.778931800668149
  - 0.7826329017113695
  train_jaccard_micro:
  - 0.8054054054054054
  - 0.7727272727272727
  - 0.7797998180163785
  - 0.7793468667255075
  - 0.7822878228782287
  train_jaccard_micro_oob:
  - 0.8086642599277978
  - 0.7650130548302873
  - 0.7814207650273224
  - 0.7746478873239436
  - 0.7790055248618785
  train_jaccard_samples:
  - 0.8250641573994867
  - 0.7903634826711751
  - 0.796815658778849
  - 0.7953514739229025
  - 0.7991718426501037
  train_jaccard_samples_oob:
  - 0.827202737382378
  - 0.7827557058326289
  - 0.7985685071574643
  - 0.7898242630385488
  - 0.7960662525879918
  train_jaccard_weighted:
  - 0.7799854090274897
  - 0.714737105226537
  - 0.7347996410630704
  - 0.7301248459806142
  - 0.7391995589072999
  train_jaccard_weighted_oob:
  - 0.7864550199380529
  - 0.700744866665482
  - 0.7375163077297371
  - 0.7212425365801701
  - 0.7328852019814112
  train_label_ranking_average_precision_score:
  - 0.9565868263473054
  - 0.9431952662721892
  - 0.9720858895705521
  - 0.9617063492063492
  - 0.9675983436853002
  train_label_ranking_average_precision_score_oob:
  - 0.9327345309381239
  - 0.9152859960552269
  - 0.9576687116564416
  - 0.9510912698412698
  - 0.9462732919254659
  train_matthews_corrcoef_macro:
  - 0.247016819187763
  - 0.20417788165670792
  - 0.2209376565782143
  - 0.21327564916765832
  - 0.225629827455875
  train_matthews_corrcoef_macro_oob:
  - 0.2514741347639053
  - 0.19449655711303449
  - 0.22287847175070197
  - 0.20818419652200426
  - 0.2218482994386628
  train_matthews_corrcoef_micro:
  - 0.6364667156418374
  - 0.550725625262015
  - 0.5824301279779183
  - 0.5669300165560647
  - 0.595579185998373
  train_matthews_corrcoef_micro_oob:
  - 0.6446229971237805
  - 0.5295931522933136
  - 0.586473857620388
  - 0.5550517852864756
  - 0.5876121103405687
  train_matthews_corrcoef_samples:
  - 0.5443139361833713
  - 0.4081974158458851
  - 0.4482445932769312
  - 0.42192101115509295
  - 0.4436422067933252
  train_matthews_corrcoef_samples_oob:
  - 0.5470978347706009
  - 0.3867035961297095
  - 0.45049946731353446
  - 0.40683119606025575
  - 0.43226049541423406
  train_matthews_corrcoef_weighted:
  - 0.5023973965361005
  - 0.4163968376309393
  - 0.45177236460759684
  - 0.43228194301052575
  - 0.45924841013852674
  train_matthews_corrcoef_weighted_oob:
  - 0.5111001262852338
  - 0.3964840995933442
  - 0.455673403104297
  - 0.42213750889998863
  - 0.45138582713244196
  train_ndgc:
  - 0.9693735759513835
  - 0.9592290139696652
  - 0.9808745089210608
  - 0.9730298184631672
  - 0.976430430500478
  train_ndgc_oob:
  - 0.952590497097017
  - 0.9393761029753275
  - 0.9721272947369559
  - 0.9659996784290766
  - 0.9619681393619667
  train_neg_coverage_error:
  - -1.3353293413173652
  - -1.378698224852071
  - -1.3251533742331287
  - -1.3452380952380953
  - -1.3478260869565217
  train_neg_coverage_error_oob:
  - -1.4550898203592815
  - -1.5029585798816567
  - -1.4049079754601228
  - -1.4047619047619047
  - -1.453416149068323
  train_neg_hamming_loss_macro:
  - -0.10778443113772453
  - -0.12820512820512822
  - -0.12372188139059305
  - -0.12400793650793651
  - -0.12215320910973083
  train_neg_hamming_loss_macro_oob:
  - -0.10578842315369262
  - -0.1331360946745562
  - -0.12269938650306748
  - -0.12698412698412698
  - -0.12422360248447205
  train_neg_hamming_loss_micro:
  - -0.10778443113772455
  - -0.1282051282051282
  - -0.12372188139059305
  - -0.12400793650793651
  - -0.12215320910973085
  train_neg_hamming_loss_micro_oob:
  - -0.10578842315369262
  - -0.13313609467455623
  - -0.12269938650306748
  - -0.12698412698412698
  - -0.12422360248447205
  train_neg_hamming_loss_samples:
  - -0.10778443113772455
  - -0.1282051282051282
  - -0.12372188139059304
  - -0.1240079365079365
  - -0.12215320910973083
  train_neg_hamming_loss_samples_oob:
  - -0.1057884231536926
  - -0.13313609467455623
  - -0.12269938650306748
  - -0.12698412698412698
  - -0.12422360248447205
  train_neg_hamming_loss_weighted:
  - -0.12411810043279778
  - -0.16798321042352873
  - -0.15585889570552147
  - -0.15775290215588725
  - -0.15085173113584652
  train_neg_hamming_loss_weighted_oob:
  - -0.12023477796881485
  - -0.1781269128749235
  - -0.1538036809815951
  - -0.16370528310826818
  - -0.15515650943976383
  train_neg_label_ranking_loss:
  - -0.022305389221556886
  - -0.03172255095332018
  - -0.016172460804362646
  - -0.025512566137566133
  - -0.01801242236024845
  train_neg_label_ranking_loss_oob:
  - -0.0427977378576181
  - -0.05412557527942143
  - -0.026755282890252214
  - -0.03526785714285714
  - -0.03438578329882678
  train_precision_macro:
  - 0.8922155688622756
  - 0.8717948717948719
  - 0.876278118609407
  - 0.8759920634920636
  - 0.8778467908902692
  train_precision_macro_oob:
  - 0.8942115768463075
  - 0.8668639053254438
  - 0.8773006134969324
  - 0.873015873015873
  - 0.875776397515528
  train_precision_micro:
  - 0.8922155688622755
  - 0.8717948717948718
  - 0.876278118609407
  - 0.8759920634920635
  - 0.8778467908902692
  train_precision_micro_oob:
  - 0.8942115768463074
  - 0.8668639053254438
  - 0.8773006134969326
  - 0.873015873015873
  - 0.8757763975155279
  train_precision_samples:
  - 0.8922155688622755
  - 0.8717948717948717
  - 0.8762781186094069
  - 0.8759920634920636
  - 0.8778467908902691
  train_precision_samples_oob:
  - 0.8942115768463073
  - 0.8668639053254438
  - 0.8773006134969326
  - 0.8730158730158731
  - 0.8757763975155279
  train_precision_weighted:
  - 0.8758818995672022
  - 0.8320167895764712
  - 0.8441411042944786
  - 0.8422470978441127
  - 0.8491482688641534
  train_precision_weighted_oob:
  - 0.879765222031185
  - 0.8218730871250766
  - 0.8461963190184051
  - 0.8362947168917318
  - 0.8448434905602362
  train_recall_macro:
  - 0.8922155688622756
  - 0.8717948717948719
  - 0.876278118609407
  - 0.8759920634920636
  - 0.8778467908902692
  train_recall_macro_oob:
  - 0.8942115768463075
  - 0.8668639053254438
  - 0.8773006134969324
  - 0.873015873015873
  - 0.875776397515528
  train_recall_micro:
  - 0.8922155688622755
  - 0.8717948717948718
  - 0.876278118609407
  - 0.8759920634920635
  - 0.8778467908902692
  train_recall_micro_oob:
  - 0.8942115768463074
  - 0.8668639053254438
  - 0.8773006134969326
  - 0.873015873015873
  - 0.8757763975155279
  train_recall_samples:
  - 0.8922155688622755
  - 0.8717948717948717
  - 0.8762781186094069
  - 0.8759920634920636
  - 0.8778467908902691
  train_recall_samples_oob:
  - 0.8942115768463073
  - 0.8668639053254438
  - 0.8773006134969326
  - 0.8730158730158731
  - 0.8757763975155279
  train_recall_weighted:
  - 0.8758818995672022
  - 0.8320167895764712
  - 0.8441411042944786
  - 0.8422470978441127
  - 0.8491482688641534
  train_recall_weighted_oob:
  - 0.879765222031185
  - 0.8218730871250766
  - 0.8461963190184051
  - 0.8362947168917318
  - 0.8448434905602362
  train_roc_auc_macro:
  - 0.9822833866727946
  - 0.9663939060995235
  - 0.9853782287354694
  - 0.9669358908066866
  - 0.97369520659467
  train_roc_auc_macro_oob:
  - 0.9609939499060874
  - 0.9501842966726546
  - 0.9759162531527545
  - 0.9600438095158251
  - 0.9647316650452566
  train_roc_auc_micro:
  - 0.981980198019802
  - 0.9714425418962177
  - 0.9842962724935732
  - 0.9740085199775596
  - 0.9778977243274066
  train_roc_auc_micro_oob:
  - 0.9643626237623762
  - 0.9555982093504947
  - 0.9722043701799485
  - 0.965587181810896
  - 0.9629749624177077
  train_roc_auc_samples:
  - 0.9776946107784433
  - 0.9682774490466798
  - 0.9838275391956373
  - 0.974487433862434
  - 0.9819875776397515
  train_roc_auc_samples_oob:
  - 0.957202262142382
  - 0.9458744247205786
  - 0.9732447171097479
  - 0.9647321428571429
  - 0.9656142167011733
  train_roc_auc_weighted:
  - 0.9792099128536811
  - 0.9652467036346153
  - 0.9819050132331626
  - 0.9672637359098607
  - 0.9718258735673451
  train_roc_auc_weighted_oob:
  - 0.9634569389771058
  - 0.9510955305373775
  - 0.9669007563325843
  - 0.9577874764396878
  - 0.9618848039138623
start: 2023-12-21 09:38:00.524439
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
