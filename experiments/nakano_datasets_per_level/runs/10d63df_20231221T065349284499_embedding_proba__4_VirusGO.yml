active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AZmZmZmb2PwCamZmZmdk/ADMzMzMz47/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:54:07.653823
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__4
  params: {}
hash: 10d63df2255cbaa4737a9b5d5027d41a5f951fe2bb36c7eab6fa08faa85e382c
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/10d63df_20231221T065349284499_embedding_proba__4_VirusGO.yml
results:
  fit_time:
  - 9.431196212768555
  - 9.323381662368774
  - 9.270281553268433
  - 9.515723466873169
  - 9.594988346099854
  score_time:
  - 2.702849864959717
  - 2.7722976207733154
  - 2.862142562866211
  - 2.864684820175171
  - 2.8701727390289307
  test_average_precision_macro:
  - 0.9488502565430396
  - 0.9788453880798172
  - 0.9389532859927595
  - 0.8610331396400573
  - 0.9623523127199597
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9202485383273826
  - 0.9463921114898715
  - 0.9206466780966975
  - 0.8912023319084925
  - 0.9473985260983556
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9383333333333332
  - 0.95
  - 0.9227642276422763
  - 0.9318783068783068
  - 0.9375
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9479672864620962
  - 0.9681937980320333
  - 0.957538403832711
  - 0.9026718033197254
  - 0.9717701465201465
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9375
  - 0.9249999999999999
  - 0.9349593495934959
  - 0.9325396825396824
  - 0.9545454545454546
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9375
  - 0.925
  - 0.9349593495934959
  - 0.9325396825396826
  - 0.9545454545454546
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9375
  - 0.925
  - 0.934959349593496
  - 0.9325396825396827
  - 0.9545454545454546
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9249999999999999
  - 0.9175000000000001
  - 0.898456943753111
  - 0.9184981684981685
  - 0.9518181818181817
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8848995943375583
  - 0.8608006980100003
  - 0.8835281105629943
  - 0.8743522178304787
  - 0.9145527118237572
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8823529411764706
  - 0.8604651162790697
  - 0.8778625954198473
  - 0.8736059479553904
  - 0.9130434782608695
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8964285714285714
  - 0.8767857142857143
  - 0.8989547038327527
  - 0.8939909297052155
  - 0.9280303030303029
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8650372839132118
  - 0.8478606664653177
  - 0.8207303217269994
  - 0.849959460829026
  - 0.9090208654537979
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9383333333333332
  - 0.95
  - 0.9227642276422763
  - 0.9318783068783068
  - 0.9375
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6410241698478069
  - 0.5490861443180844
  - 0.7716109556316536
  - 0.601521312918047
  - 0.720774904226393
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8068101561913462
  - 0.7614282381264209
  - 0.7874626207339267
  - 0.7852937824096283
  - 0.8469881646362072
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7806797181058933
  - 0.6516227766016838
  - 0.7926186974658788
  - 0.7774211183997031
  - 0.817015529501148
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7690517610622398
  - 0.7212122488039518
  - 0.7483088775296395
  - 0.7447050392289669
  - 0.8063240704594411
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9549840714274275
  - 0.9630929753571458
  - 0.9451222780443108
  - 0.9510431647365193
  - 0.9546803739427235
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.475
  - -1.35
  - -1.3902439024390243
  - -1.5
  - -1.2954545454545454
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0625
  - -0.075
  - -0.06504065040650406
  - -0.06746031746031746
  - -0.04545454545454545
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0625
  - -0.075
  - -0.06504065040650407
  - -0.06746031746031746
  - -0.045454545454545456
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0625
  - -0.075
  - -0.06504065040650406
  - -0.06746031746031746
  - -0.04545454545454545
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.075
  - -0.0825
  - -0.10154305624688902
  - -0.0815018315018315
  - -0.04818181818181819
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.038125000000000006
  - -0.02
  - -0.03780487804878049
  - -0.05112433862433862
  - -0.03125
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9375
  - 0.9249999999999999
  - 0.9349593495934959
  - 0.9325396825396824
  - 0.9545454545454546
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9375
  - 0.925
  - 0.9349593495934959
  - 0.9325396825396826
  - 0.9545454545454546
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9375
  - 0.925
  - 0.934959349593496
  - 0.9325396825396827
  - 0.9545454545454546
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9249999999999999
  - 0.9175000000000001
  - 0.898456943753111
  - 0.9184981684981685
  - 0.9518181818181817
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9375
  - 0.9249999999999999
  - 0.9349593495934959
  - 0.9325396825396824
  - 0.9545454545454546
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9375
  - 0.925
  - 0.9349593495934959
  - 0.9325396825396826
  - 0.9545454545454546
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9375
  - 0.925
  - 0.934959349593496
  - 0.9325396825396827
  - 0.9545454545454546
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9249999999999999
  - 0.9175000000000001
  - 0.898456943753111
  - 0.9184981684981685
  - 0.9518181818181817
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9783061555759766
  - 0.9919721511793123
  - 0.9847550811681246
  - 0.9397853615130263
  - 0.9863504172940448
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9737524639485424
  - 0.9903157894736841
  - 0.9795918367346939
  - 0.9537499999999999
  - 0.9818691588785046
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9618749999999998
  - 0.9800000000000001
  - 0.9621951219512196
  - 0.9488756613756613
  - 0.96875
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9643967380540269
  - 0.9857800511508953
  - 0.9832715412839637
  - 0.9479692018507808
  - 0.987552052052052
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9829131662982604
  - 0.9788656744762682
  - 0.9873377994065288
  - 0.990616744973515
  - 0.9833928213303285
  train_average_precision_macro_oob:
  - 0.9423489351831899
  - 0.9216514959208274
  - 0.9437758089095151
  - 0.9574779618760186
  - 0.9365085492028546
  train_average_precision_micro:
  - 0.9721173699487969
  - 0.970975271255832
  - 0.9779621064545737
  - 0.9739992614265037
  - 0.9715366914331557
  train_average_precision_micro_oob:
  - 0.9389958667444191
  - 0.9350220886953029
  - 0.9385108236652686
  - 0.9447088685942563
  - 0.9297957350981003
  train_average_precision_samples:
  - 0.9755489021956087
  - 0.9790419161676647
  - 0.9879518072289156
  - 0.9833333333333333
  - 0.9795501022494887
  train_average_precision_samples_oob:
  - 0.9470059880239521
  - 0.9567864271457084
  - 0.9615461847389559
  - 0.947171717171717
  - 0.9549079754601225
  train_average_precision_weighted:
  - 0.985174783301137
  - 0.9815802121963595
  - 0.9880530951579539
  - 0.988219140310709
  - 0.9838444609369749
  train_average_precision_weighted_oob:
  - 0.9561226886955231
  - 0.9407561102293588
  - 0.9513260530461091
  - 0.9621216306066123
  - 0.9453467152300354
  train_f1_macro:
  - 0.9481037924151696
  - 0.9500998003992015
  - 0.96285140562249
  - 0.9525252525252524
  - 0.9529652351738239
  train_f1_macro_oob:
  - 0.934131736526946
  - 0.9301397205588823
  - 0.9417670682730924
  - 0.9343434343434344
  - 0.9355828220858896
  train_f1_micro:
  - 0.9481037924151696
  - 0.9500998003992016
  - 0.9628514056224899
  - 0.9525252525252526
  - 0.9529652351738241
  train_f1_micro_oob:
  - 0.9341317365269461
  - 0.9301397205588823
  - 0.9417670682730924
  - 0.9343434343434344
  - 0.9355828220858896
  train_f1_samples:
  - 0.9481037924151697
  - 0.9500998003992015
  - 0.96285140562249
  - 0.9525252525252527
  - 0.9529652351738241
  train_f1_samples_oob:
  - 0.9341317365269461
  - 0.9301397205588822
  - 0.9417670682730924
  - 0.9343434343434345
  - 0.9355828220858896
  train_f1_weighted:
  - 0.9400899693151011
  - 0.9484199916997689
  - 0.9549528161908718
  - 0.9479090909090909
  - 0.9395918119419303
  train_f1_weighted_oob:
  - 0.9255816724759437
  - 0.9210588723543013
  - 0.9334975369458127
  - 0.9288787878787877
  - 0.9222802648362997
  train_jaccard_macro:
  - 0.9019666282840074
  - 0.9053463054746828
  - 0.9291457849548035
  - 0.9097263240520013
  - 0.9113920430911778
  train_jaccard_macro_oob:
  - 0.8769618721435171
  - 0.8703145920232406
  - 0.890307569291268
  - 0.8775348419083692
  - 0.879802562616411
  train_jaccard_micro:
  - 0.9013282732447818
  - 0.9049429657794676
  - 0.9283639883833494
  - 0.9093539054966249
  - 0.91015625
  train_jaccard_micro_oob:
  - 0.8764044943820225
  - 0.8694029850746269
  - 0.889943074003795
  - 0.8767772511848341
  - 0.8789625360230547
  train_jaccard_samples:
  - 0.9155973766752211
  - 0.9187339606501285
  - 0.9391853126792885
  - 0.9223665223665225
  - 0.9249196611159801
  train_jaccard_samples_oob:
  - 0.8944967208440264
  - 0.888366124893071
  - 0.9070567986230635
  - 0.8937950937950938
  - 0.8978965819456617
  train_jaccard_weighted:
  - 0.8874920522740659
  - 0.902122354934205
  - 0.9141597292830127
  - 0.9012538933231542
  - 0.8867402602274757
  train_jaccard_weighted_oob:
  - 0.8618338701595747
  - 0.8543266913853886
  - 0.8754865547923133
  - 0.8676424604475568
  - 0.8565076238547461
  train_label_ranking_average_precision_score:
  - 0.9755489021956085
  - 0.9790419161676644
  - 0.9879518072289156
  - 0.9833333333333333
  - 0.9795501022494886
  train_label_ranking_average_precision_score_oob:
  - 0.947005988023952
  - 0.9567864271457084
  - 0.9615461847389559
  - 0.947171717171717
  - 0.9549079754601225
  train_matthews_corrcoef_macro:
  - 0.6379826505106132
  - 0.6280895139070868
  - 0.8421617008920664
  - 0.657025363772297
  - 0.8110420123410602
  train_matthews_corrcoef_macro_oob:
  - 0.5618963613897396
  - 0.49890273289166487
  - 0.7004920610832114
  - 0.5098971484662393
  - 0.6667771582596603
  train_matthews_corrcoef_micro:
  - 0.8325710639671698
  - 0.8399150456771517
  - 0.8829744027190657
  - 0.8484117570246275
  - 0.852659589323911
  train_matthews_corrcoef_micro_oob:
  - 0.7850494291824794
  - 0.7722333046542393
  - 0.8137864152059011
  - 0.7871317337330958
  - 0.7956184249839479
  train_matthews_corrcoef_samples:
  - 0.8034505526534389
  - 0.8184039274767918
  - 0.874946706971034
  - 0.82566979562761
  - 0.8542402046453476
  train_matthews_corrcoef_samples_oob:
  - 0.7311241728559226
  - 0.7357946826088314
  - 0.7821105144552639
  - 0.7313529613235592
  - 0.7696028003904367
  train_matthews_corrcoef_weighted:
  - 0.7988646918347535
  - 0.808742211980158
  - 0.8670361235514954
  - 0.8191431129020031
  - 0.8298042444944778
  train_matthews_corrcoef_weighted_oob:
  - 0.7433272687818804
  - 0.7079617041602656
  - 0.7907379828421488
  - 0.7251806114755709
  - 0.7643759142390564
  train_ndgc:
  - 0.9823747724323323
  - 0.9851149406150101
  - 0.991574102924333
  - 0.9879147663847262
  - 0.9855947952647788
  train_ndgc_oob:
  - 0.9621932601121431
  - 0.9684859301826121
  - 0.9716846204249521
  - 0.9622426143980963
  - 0.9681809208626175
  train_neg_coverage_error:
  - -1.2694610778443114
  - -1.281437125748503
  - -1.2590361445783131
  - -1.2545454545454546
  - -1.3006134969325154
  train_neg_coverage_error_oob:
  - -1.3712574850299402
  - -1.3532934131736527
  - -1.355421686746988
  - -1.3636363636363635
  - -1.4110429447852761
  train_neg_hamming_loss_macro:
  - -0.051896207584830344
  - -0.04990019960079841
  - -0.03714859437751004
  - -0.047474747474747475
  - -0.04703476482617588
  train_neg_hamming_loss_macro_oob:
  - -0.0658682634730539
  - -0.06986027944111776
  - -0.05823293172690763
  - -0.06565656565656565
  - -0.06441717791411043
  train_neg_hamming_loss_micro:
  - -0.05189620758483034
  - -0.0499001996007984
  - -0.03714859437751004
  - -0.047474747474747475
  - -0.04703476482617587
  train_neg_hamming_loss_micro_oob:
  - -0.0658682634730539
  - -0.06986027944111776
  - -0.05823293172690763
  - -0.06565656565656566
  - -0.06441717791411043
  train_neg_hamming_loss_samples:
  - -0.05189620758483034
  - -0.049900199600798396
  - -0.03714859437751004
  - -0.04747474747474747
  - -0.047034764826175864
  train_neg_hamming_loss_samples_oob:
  - -0.0658682634730539
  - -0.06986027944111775
  - -0.058232931726907626
  - -0.06565656565656565
  - -0.06441717791411043
  train_neg_hamming_loss_weighted:
  - -0.059910030684898856
  - -0.05158000830023122
  - -0.04504718380912814
  - -0.05209090909090909
  - -0.0604081880580696
  train_neg_hamming_loss_weighted_oob:
  - -0.07441832752405636
  - -0.07894112764569869
  - -0.0665024630541872
  - -0.07112121212121211
  - -0.07771973516370043
  train_neg_label_ranking_loss:
  - -0.012574850299401199
  - -0.013323353293413174
  - -0.006325301204819277
  - -0.008333333333333333
  - -0.010889570552147239
  train_neg_label_ranking_loss_oob:
  - -0.030671989354624087
  - -0.028293413173652693
  - -0.025903614457831323
  - -0.028181818181818183
  - -0.030351056578050442
  train_precision_macro:
  - 0.9481037924151696
  - 0.9500998003992015
  - 0.96285140562249
  - 0.9525252525252524
  - 0.9529652351738239
  train_precision_macro_oob:
  - 0.934131736526946
  - 0.9301397205588823
  - 0.9417670682730924
  - 0.9343434343434344
  - 0.9355828220858896
  train_precision_micro:
  - 0.9481037924151696
  - 0.9500998003992016
  - 0.9628514056224899
  - 0.9525252525252526
  - 0.9529652351738241
  train_precision_micro_oob:
  - 0.9341317365269461
  - 0.9301397205588823
  - 0.9417670682730924
  - 0.9343434343434344
  - 0.9355828220858896
  train_precision_samples:
  - 0.9481037924151697
  - 0.9500998003992015
  - 0.96285140562249
  - 0.9525252525252527
  - 0.9529652351738241
  train_precision_samples_oob:
  - 0.9341317365269461
  - 0.9301397205588822
  - 0.9417670682730924
  - 0.9343434343434345
  - 0.9355828220858896
  train_precision_weighted:
  - 0.9400899693151011
  - 0.9484199916997689
  - 0.9549528161908718
  - 0.9479090909090909
  - 0.9395918119419303
  train_precision_weighted_oob:
  - 0.9255816724759437
  - 0.9210588723543013
  - 0.9334975369458127
  - 0.9288787878787877
  - 0.9222802648362997
  train_recall_macro:
  - 0.9481037924151696
  - 0.9500998003992015
  - 0.96285140562249
  - 0.9525252525252524
  - 0.9529652351738239
  train_recall_macro_oob:
  - 0.934131736526946
  - 0.9301397205588823
  - 0.9417670682730924
  - 0.9343434343434344
  - 0.9355828220858896
  train_recall_micro:
  - 0.9481037924151696
  - 0.9500998003992016
  - 0.9628514056224899
  - 0.9525252525252526
  - 0.9529652351738241
  train_recall_micro_oob:
  - 0.9341317365269461
  - 0.9301397205588823
  - 0.9417670682730924
  - 0.9343434343434344
  - 0.9355828220858896
  train_recall_samples:
  - 0.9481037924151697
  - 0.9500998003992015
  - 0.96285140562249
  - 0.9525252525252527
  - 0.9529652351738241
  train_recall_samples_oob:
  - 0.9341317365269461
  - 0.9301397205588822
  - 0.9417670682730924
  - 0.9343434343434345
  - 0.9355828220858896
  train_recall_weighted:
  - 0.9400899693151011
  - 0.9484199916997689
  - 0.9549528161908718
  - 0.9479090909090909
  - 0.9395918119419303
  train_recall_weighted_oob:
  - 0.9255816724759437
  - 0.9210588723543013
  - 0.9334975369458127
  - 0.9288787878787877
  - 0.9222802648362997
  train_roc_auc_macro:
  - 0.9953392094095767
  - 0.9930670653223195
  - 0.9954314527750334
  - 0.996101013043877
  - 0.9941562905371448
  train_roc_auc_macro_oob:
  - 0.9800447003041702
  - 0.9734969486325973
  - 0.9774481845240425
  - 0.9831934400943041
  - 0.9728370731514286
  train_roc_auc_micro:
  - 0.9919938385475866
  - 0.9913242574257426
  - 0.9937010417507872
  - 0.9930474683544304
  - 0.9917353526589772
  train_roc_auc_micro_oob:
  - 0.9792920540866206
  - 0.9762623762376238
  - 0.9792830120698973
  - 0.9829683544303797
  - 0.9760959987751352
  train_roc_auc_samples:
  - 0.9874251497005988
  - 0.9866766467065868
  - 0.9936746987951807
  - 0.9916666666666667
  - 0.9891104294478528
  train_roc_auc_samples_oob:
  - 0.969328010645376
  - 0.9717065868263474
  - 0.9740963855421686
  - 0.9718181818181818
  - 0.9696489434219497
  train_roc_auc_weighted:
  - 0.9934270094824625
  - 0.9910127808321605
  - 0.993621807237485
  - 0.9930423034363908
  - 0.9915889640011739
  train_roc_auc_weighted_oob:
  - 0.9794842646126716
  - 0.9745564597082361
  - 0.9747415867622841
  - 0.9782205615455588
  - 0.9703566329765874
start: 2023-12-21 06:53:49.284499
wrapper: null
