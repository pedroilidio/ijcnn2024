active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzC8AANDMzMzPjPwDNzMzMzARAAJiZmZmZ2b8ANDMzMzPjPw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 06:59:34.606509
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__8
  params: {}
hash: 86006b17c0de4e1f4312d57926daa08d16368c751114dcb002541afa328e11e7
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/86006b1_20231222T065712583906_embedding__8_PlantGO.yml
results:
  fit_time:
  - 86.69146943092346
  - 89.51469802856445
  - 92.27128720283508
  - 89.34051895141602
  - 85.2741174697876
  score_time:
  - 10.571492195129395
  - 9.17525863647461
  - 9.305478811264038
  - 9.336920261383057
  - 9.74203085899353
  test_average_precision_macro:
  - 0.7805044751207738
  - 0.7353619828083446
  - 0.8772578629974618
  - 0.7610356992888895
  - 0.7643049276128989
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8344753160030508
  - 0.7925547680691041
  - 0.85325700604053
  - 0.811823826173467
  - 0.7996430306102805
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.86591888011486
  - 0.850106005106005
  - 0.8966670778846945
  - 0.8705478620019435
  - 0.859165649165649
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8759154337721653
  - 0.8373082278445444
  - 0.9222566331678536
  - 0.8574687959575991
  - 0.8223119716023504
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9484924623115578
  - 0.9474358974358975
  - 0.9468911917098445
  - 0.945578231292517
  - 0.9435897435897437
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9484924623115578
  - 0.9474358974358974
  - 0.9468911917098446
  - 0.9455782312925171
  - 0.9435897435897436
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9484924623115579
  - 0.9474358974358974
  - 0.9468911917098446
  - 0.945578231292517
  - 0.9435897435897438
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9304817928505086
  - 0.9251670919917366
  - 0.9283740439180854
  - 0.9273737664079718
  - 0.9181684981684981
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9036594028553043
  - 0.9020290105495158
  - 0.9013129578093171
  - 0.8986212919940287
  - 0.8953767762011183
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9020310633213859
  - 0.9001218026796589
  - 0.8991389913899139
  - 0.896774193548387
  - 0.8932038834951457
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9069854768347227
  - 0.9048746125669201
  - 0.904549336673689
  - 0.9019735366674141
  - 0.8979994364609749
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.871726759138152
  - 0.8629527137975191
  - 0.8691899593890616
  - 0.866926745294347
  - 0.8508837958621146
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8659188801148601
  - 0.8501060051060051
  - 0.8966670778846944
  - 0.8705478620019438
  - 0.859165649165649
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2535025063740373
  - 0.25888112335590013
  - 0.2238316299503952
  - 0.22079353397039236
  - 0.21156430592614797
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6278064589568032
  - 0.6269846933178326
  - 0.6246876364290166
  - 0.6126355365279895
  - 0.5903066760853937
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4784141596442608
  - 0.4738914642995683
  - 0.4803732439821909
  - 0.46115426505625556
  - 0.42463048809985615
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5317064995129155
  - 0.525499007055416
  - 0.5064625881617209
  - 0.497124559681809
  - 0.4801937661176605
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8997690613606635
  - 0.8889697694820327
  - 0.9235302084535555
  - 0.9039272557451895
  - 0.8966118381007546
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5527638190954773
  - -1.6666666666666667
  - -1.4663212435233162
  - -1.6683673469387754
  - -1.5794871794871794
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05150753768844222
  - -0.05256410256410257
  - -0.05310880829015544
  - -0.054421768707483
  - -0.05641025641025641
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05150753768844221
  - -0.052564102564102565
  - -0.05310880829015544
  - -0.05442176870748299
  - -0.05641025641025641
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.051507537688442205
  - -0.05256410256410256
  - -0.05310880829015543
  - -0.054421768707483
  - -0.05641025641025641
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06951820714949154
  - -0.07483290800826346
  - -0.07162595608191462
  - -0.07262623359202836
  - -0.08183150183150183
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04352993925858247
  - -0.04976689976689976
  - -0.032592767048725595
  - -0.05028516457087886
  - -0.04188811188811189
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9484924623115578
  - 0.9474358974358975
  - 0.9468911917098445
  - 0.945578231292517
  - 0.9435897435897437
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9484924623115578
  - 0.9474358974358974
  - 0.9468911917098446
  - 0.9455782312925171
  - 0.9435897435897436
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9484924623115579
  - 0.9474358974358974
  - 0.9468911917098446
  - 0.945578231292517
  - 0.9435897435897438
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9304817928505086
  - 0.9251670919917366
  - 0.9283740439180854
  - 0.9273737664079718
  - 0.9181684981684981
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9484924623115578
  - 0.9474358974358975
  - 0.9468911917098445
  - 0.945578231292517
  - 0.9435897435897437
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9484924623115578
  - 0.9474358974358974
  - 0.9468911917098446
  - 0.9455782312925171
  - 0.9435897435897436
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9484924623115579
  - 0.9474358974358974
  - 0.9468911917098446
  - 0.945578231292517
  - 0.9435897435897438
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9304817928505086
  - 0.9251670919917366
  - 0.9283740439180854
  - 0.9273737664079718
  - 0.9181684981684981
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9814574155193716
  - 0.9605446229182788
  - 0.9862719576753051
  - 0.9663773113588379
  - 0.9665484910882872
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9738607196737978
  - 0.9608320217978313
  - 0.9776308054085832
  - 0.9623633965237584
  - 0.9679141515761235
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9564700607414175
  - 0.9502331002331001
  - 0.9674072329512744
  - 0.9497148354291212
  - 0.9581118881118881
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9804944411885742
  - 0.9694146738049007
  - 0.986838992069667
  - 0.9743744478515612
  - 0.9629736872441969
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9508314172207766
  - 0.9579899933803381
  - 0.9556802378076839
  - 0.9612265853485468
  - 0.9669303382167524
  train_average_precision_macro_oob:
  - 0.7417878080169867
  - 0.7498297714487087
  - 0.7101202814723302
  - 0.7296278652679256
  - 0.7441816316470371
  train_average_precision_micro:
  - 0.9506392244499283
  - 0.9558930709205681
  - 0.9496177433436424
  - 0.9600992595744144
  - 0.9590247102912113
  train_average_precision_micro_oob:
  - 0.8122685404141378
  - 0.8163862224287322
  - 0.7972944771012229
  - 0.8197886923567635
  - 0.8238159135756578
  train_average_precision_samples:
  - 0.9597133076593924
  - 0.960727969348659
  - 0.9556687898089172
  - 0.9622762148337596
  - 0.9626862494678586
  train_average_precision_samples_oob:
  - 0.8741341528247817
  - 0.8677547689999797
  - 0.8539627393130578
  - 0.8680088702147525
  - 0.8743923452735713
  train_average_precision_weighted:
  - 0.9683972838115323
  - 0.9735578599730447
  - 0.9722774126566082
  - 0.9766438571504888
  - 0.9777977854597272
  train_average_precision_weighted_oob:
  - 0.8402443925839099
  - 0.8439514388490839
  - 0.8253559812351549
  - 0.8389629238987655
  - 0.8508378788453468
  train_f1_macro:
  - 0.9624518613607188
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040068
  - 0.9628565346956152
  train_f1_macro_oob:
  - 0.9439452289259734
  - 0.9410387398893145
  - 0.940764331210191
  - 0.9407502131287298
  - 0.9436994465730097
  train_f1_micro:
  - 0.9624518613607189
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040068
  - 0.9628565346956152
  train_f1_micro_oob:
  - 0.9439452289259734
  - 0.9410387398893146
  - 0.9407643312101911
  - 0.9407502131287298
  - 0.9436994465730097
  train_f1_samples:
  - 0.9624518613607189
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040067
  - 0.962856534695615
  train_f1_samples_oob:
  - 0.9439452289259733
  - 0.9410387398893145
  - 0.9407643312101911
  - 0.9407502131287298
  - 0.9436994465730099
  train_f1_weighted:
  - 0.9566721827108519
  - 0.9567739826769082
  - 0.9513134587117928
  - 0.9565460388430905
  - 0.9594247583637502
  train_f1_weighted_oob:
  - 0.9200746491126673
  - 0.9153365655245047
  - 0.9119828138544454
  - 0.9121838759256671
  - 0.919393623372403
  train_jaccard_macro:
  - 0.9279178161661167
  - 0.9265836921348322
  - 0.9218361061657777
  - 0.9274440238695266
  - 0.9286519251471539
  train_jaccard_macro_oob:
  - 0.8958115605157304
  - 0.8911379255371896
  - 0.8907972214331692
  - 0.8912389578462717
  - 0.8954833288738565
  train_jaccard_micro:
  - 0.9276214042684813
  - 0.9261992619926199
  - 0.9212726901896798
  - 0.9268993839835729
  - 0.9283735248845562
  train_jaccard_micro_oob:
  - 0.8938411669367909
  - 0.888643216080402
  - 0.8881539386650631
  - 0.8881287726358149
  - 0.8934005037783376
  train_jaccard_samples:
  - 0.9319950909167852
  - 0.9307088824330204
  - 0.9257394834464898
  - 0.9312160984795256
  - 0.9325614360097119
  train_jaccard_samples_oob:
  - 0.8986753939257149
  - 0.8934613279440865
  - 0.8927304542591168
  - 0.8926280880245074
  - 0.8981207808794015
  train_jaccard_weighted:
  - 0.917235271367646
  - 0.9175596322535577
  - 0.9077982246563646
  - 0.9174003281783608
  - 0.9223012908247312
  train_jaccard_weighted_oob:
  - 0.8539520488052339
  - 0.846465765176693
  - 0.8408482546995821
  - 0.841974946524299
  - 0.8529695852853515
  train_label_ranking_average_precision_score:
  - 0.9597133076593922
  - 0.960727969348659
  - 0.9556687898089172
  - 0.9622762148337596
  - 0.9626862494678587
  train_label_ranking_average_precision_score_oob:
  - 0.8741341528247825
  - 0.8677547689999802
  - 0.8539627393130582
  - 0.8680088702147531
  - 0.8743923452735722
  train_matthews_corrcoef_macro:
  - 0.3930481247041271
  - 0.35363285759710633
  - 0.33542640197487644
  - 0.3622408604310386
  - 0.3277955091161748
  train_matthews_corrcoef_macro_oob:
  - 0.2310250285617802
  - 0.19618899305927343
  - 0.22773965563160004
  - 0.2205357623676675
  - 0.2125199582349192
  train_matthews_corrcoef_micro:
  - 0.7483466929004556
  - 0.7412389209477315
  - 0.7203581073738344
  - 0.7438331115468418
  - 0.7504993160345851
  train_matthews_corrcoef_micro_oob:
  - 0.5966604701499401
  - 0.5670278200691967
  - 0.5635304803516055
  - 0.5636892420393149
  - 0.5923952213833501
  train_matthews_corrcoef_samples:
  - 0.6293212227376215
  - 0.6186374050553713
  - 0.5869318316984486
  - 0.6130057398605704
  - 0.62489694173361
  train_matthews_corrcoef_samples_oob:
  - 0.43581416416941554
  - 0.39838959571540283
  - 0.38734751434671233
  - 0.39003433786103536
  - 0.4249672561600412
  train_matthews_corrcoef_weighted:
  - 0.6812507541327671
  - 0.6606710188350766
  - 0.6343764993145066
  - 0.6638499491902113
  - 0.6559596045240415
  train_matthews_corrcoef_weighted_oob:
  - 0.49468926583684114
  - 0.4524950114250878
  - 0.45867426135861666
  - 0.44741262573506924
  - 0.47934286810907134
  train_ndgc:
  - 0.9702190372983749
  - 0.9711016751449687
  - 0.9672392961715007
  - 0.9722805536229371
  - 0.9725063270587104
  train_ndgc_oob:
  - 0.9067522761077353
  - 0.9016295447748922
  - 0.8918092491068405
  - 0.9021426891380836
  - 0.9068514064943586
  train_neg_coverage_error:
  - -1.1745827984595636
  - -1.169859514687101
  - -1.180891719745223
  - -1.1687979539641944
  - -1.1660280970625798
  train_neg_coverage_error_oob:
  - -1.6123234916559692
  - -1.6411238825031929
  - -1.689171974522293
  - -1.5984654731457801
  - -1.5798212005108556
  train_neg_hamming_loss_macro:
  - -0.03754813863928113
  - -0.038314176245210725
  - -0.04097664543524416
  - -0.03793691389599318
  - -0.037143465304384844
  train_neg_hamming_loss_macro_oob:
  - -0.05605477107402652
  - -0.0589612601106854
  - -0.059235668789808925
  - -0.059249786871270256
  - -0.0563005534269902
  train_neg_hamming_loss_micro:
  - -0.03754813863928113
  - -0.038314176245210725
  - -0.04097664543524416
  - -0.03793691389599318
  - -0.037143465304384844
  train_neg_hamming_loss_micro_oob:
  - -0.05605477107402653
  - -0.0589612601106854
  - -0.05923566878980892
  - -0.05924978687127025
  - -0.05630055342699021
  train_neg_hamming_loss_samples:
  - -0.03754813863928113
  - -0.038314176245210725
  - -0.040976645435244166
  - -0.03793691389599318
  - -0.03714346530438484
  train_neg_hamming_loss_samples_oob:
  - -0.05605477107402654
  - -0.05896126011068539
  - -0.05923566878980892
  - -0.05924978687127024
  - -0.0563005534269902
  train_neg_hamming_loss_weighted:
  - -0.043327817289148196
  - -0.043226017323092
  - -0.04868654128820713
  - -0.04345396115690932
  - -0.04057524163624959
  train_neg_hamming_loss_weighted_oob:
  - -0.07992535088733276
  - -0.08466343447549526
  - -0.0880171861455546
  - -0.08781612407433284
  - -0.08060637662759679
  train_neg_label_ranking_loss:
  - -0.008244836036877114
  - -0.008133914711181633
  - -0.009415170816444702
  - -0.008103627924599791
  - -0.007744967770510554
  train_neg_label_ranking_loss_oob:
  - -0.044917942799842674
  - -0.048278657154774654
  - -0.05219884621158506
  - -0.04423755887950261
  - -0.04302346582040069
  train_precision_macro:
  - 0.9624518613607188
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040068
  - 0.9628565346956152
  train_precision_macro_oob:
  - 0.9439452289259734
  - 0.9410387398893145
  - 0.940764331210191
  - 0.9407502131287298
  - 0.9436994465730097
  train_precision_micro:
  - 0.9624518613607189
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040068
  - 0.9628565346956152
  train_precision_micro_oob:
  - 0.9439452289259734
  - 0.9410387398893146
  - 0.9407643312101911
  - 0.9407502131287298
  - 0.9436994465730097
  train_precision_samples:
  - 0.9624518613607189
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040067
  - 0.962856534695615
  train_precision_samples_oob:
  - 0.9439452289259733
  - 0.9410387398893145
  - 0.9407643312101911
  - 0.9407502131287298
  - 0.9436994465730099
  train_precision_weighted:
  - 0.9566721827108519
  - 0.9567739826769082
  - 0.9513134587117928
  - 0.9565460388430905
  - 0.9594247583637502
  train_precision_weighted_oob:
  - 0.9200746491126673
  - 0.9153365655245047
  - 0.9119828138544454
  - 0.9121838759256671
  - 0.919393623372403
  train_recall_macro:
  - 0.9624518613607188
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040068
  - 0.9628565346956152
  train_recall_macro_oob:
  - 0.9439452289259734
  - 0.9410387398893145
  - 0.940764331210191
  - 0.9407502131287298
  - 0.9436994465730097
  train_recall_micro:
  - 0.9624518613607189
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040068
  - 0.9628565346956152
  train_recall_micro_oob:
  - 0.9439452289259734
  - 0.9410387398893146
  - 0.9407643312101911
  - 0.9407502131287298
  - 0.9436994465730097
  train_recall_samples:
  - 0.9624518613607189
  - 0.9616858237547893
  - 0.9590233545647558
  - 0.9620630861040067
  - 0.962856534695615
  train_recall_samples_oob:
  - 0.9439452289259733
  - 0.9410387398893145
  - 0.9407643312101911
  - 0.9407502131287298
  - 0.9436994465730099
  train_recall_weighted:
  - 0.9566721827108519
  - 0.9567739826769082
  - 0.9513134587117928
  - 0.9565460388430905
  - 0.9594247583637502
  train_recall_weighted_oob:
  - 0.9200746491126673
  - 0.9153365655245047
  - 0.9119828138544454
  - 0.9121838759256671
  - 0.919393623372403
  train_roc_auc_macro:
  - 0.9968004586288717
  - 0.9970512081500503
  - 0.9970812279149225
  - 0.9980812853019926
  - 0.9974793699005923
  train_roc_auc_macro_oob:
  - 0.9644929847036076
  - 0.9676122845817785
  - 0.9612048447621917
  - 0.9669994957421805
  - 0.9691582824021235
  train_roc_auc_micro:
  - 0.9953696169742257
  - 0.9955291631014502
  - 0.9951599358255561
  - 0.9962114681626235
  - 0.9960632999773722
  train_roc_auc_micro_oob:
  - 0.9648988711194733
  - 0.9654903207143141
  - 0.9605138095813136
  - 0.9674353244635561
  - 0.9679806299688815
  train_roc_auc_samples:
  - 0.9917551639631229
  - 0.9918660852888183
  - 0.9905848291835555
  - 0.9918963720754003
  - 0.9922550322294894
  train_roc_auc_samples_oob:
  - 0.9550820572001572
  - 0.9517213428452254
  - 0.9478011537884149
  - 0.9557624411204974
  - 0.9569765341795994
  train_roc_auc_weighted:
  - 0.9961969659487531
  - 0.9968696137851126
  - 0.9965048756498243
  - 0.9974765418880067
  - 0.9970761294984551
  train_roc_auc_weighted_oob:
  - 0.971170413144756
  - 0.9728665450141495
  - 0.9690295258861675
  - 0.9725192062790677
  - 0.9750814462732191
start: 2023-12-22 06:57:12.583906
wrapper: null
