active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+ZmZmZmZkBwM7MzMzMzPw/zszMzMzM/D+ZmZmZmZkBwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:54:48.515967
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: b89ae5d611033fe83df866a2c1fd239364b6f242fc5969f1d89957309590d02b
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b89ae5d_20231212T165407644060_embedding__8_birds.yml
results:
  fit_time:
  - 19.434335947036743
  - 19.36696434020996
  - 20.146306037902832
  - 21.588568925857544
  - 20.371299028396606
  score_time:
  - 5.846185207366943
  - 5.77288293838501
  - 6.405468225479126
  - 6.256958246231079
  - 6.431894540786743
  test_average_precision_macro:
  - 0.5694102160903477
  - 0.44179515244048567
  - 0.4971126295045905
  - 0.48540852964060105
  - 0.5530420878650439
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5653695695163341
  - 0.4894801576398552
  - 0.47574504394139766
  - 0.49162202967898483
  - 0.557570966961964
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.34006734006734
  - 0.2906909995330538
  - 0.3521816469490888
  - 0.3502226949217373
  - 0.32393654250699394
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6466257660320733
  - 0.5378185374821818
  - 0.545918846684167
  - 0.5735484845835596
  - 0.6309892196925883
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9510403916768665
  - 0.9481844145246838
  - 0.9518563851489187
  - 0.9502243982048143
  - 0.9502243982048143
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9510403916768666
  - 0.9481844145246838
  - 0.9518563851489188
  - 0.9502243982048144
  - 0.9502243982048144
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9510403916768665
  - 0.9481844145246837
  - 0.9518563851489188
  - 0.9502243982048144
  - 0.9502243982048144
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9239946705426358
  - 0.9237533263912994
  - 0.9252664728682171
  - 0.9245080500894457
  - 0.93127386324193
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9088428068008196
  - 0.9034066150799116
  - 0.9102565293131338
  - 0.9072037288968244
  - 0.9065439672285026
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9066511085180864
  - 0.9014740108611327
  - 0.9081354612689763
  - 0.9051690633501749
  - 0.9051690633501749
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9133452245990165
  - 0.9077605463854201
  - 0.912891445146248
  - 0.910408213289912
  - 0.9105358073002157
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.861287349039776
  - 0.8604192837386558
  - 0.8635446488545081
  - 0.8616231339435266
  - 0.8727282506446724
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8129355571216035
  - 0.77906309255631
  - 0.7785382360963755
  - 0.7765792840690243
  - 0.7890528215767616
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.044053637292639065
  - 0.05389596372362334
  - 0.08140556400927136
  - 0.04525597807818806
  - 0.07338293617254728
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2437826985110467
  - 0.22254048844806945
  - 0.2770101929922007
  - 0.24179602337102024
  - 0.29167240360791374
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.049419651631100854
  - 0.029505627027993035
  - 0.06418748599509869
  - 0.0423550168086484
  - 0.050112073029487385
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11245730776667084
  - 0.12941731508020798
  - 0.16912520961306635
  - 0.11920436242224686
  - 0.16877733508485715
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.39556520496664477
  - 0.3592520419856601
  - 0.4166232749435017
  - 0.4150397846563584
  - 0.387377950635818
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6744186046511627
  - -3.4186046511627906
  - -2.9302325581395348
  - -3.248062015503876
  - -3.1705426356589146
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04895960832313342
  - -0.05181558547531619
  - -0.04814361485108119
  - -0.04977560179518564
  - -0.04977560179518564
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04895960832313342
  - -0.0518155854753162
  - -0.04814361485108119
  - -0.049775601795185635
  - -0.049775601795185635
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04895960832313342
  - -0.05181558547531619
  - -0.048143614851081186
  - -0.049775601795185635
  - -0.049775601795185635
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07600532945736434
  - -0.07624667360870069
  - -0.07473352713178295
  - -0.07549194991055456
  - -0.06872613675807011
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07230100547474008
  - -0.10112723383927215
  - -0.08208757663272029
  - -0.09895039411113282
  - -0.08824416071338095
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9510403916768665
  - 0.9481844145246838
  - 0.9518563851489187
  - 0.9502243982048143
  - 0.9502243982048143
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9510403916768666
  - 0.9481844145246838
  - 0.9518563851489188
  - 0.9502243982048144
  - 0.9502243982048144
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9510403916768665
  - 0.9481844145246837
  - 0.9518563851489188
  - 0.9502243982048144
  - 0.9502243982048144
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9239946705426358
  - 0.9237533263912994
  - 0.9252664728682171
  - 0.9245080500894457
  - 0.93127386324193
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9510403916768665
  - 0.9481844145246838
  - 0.9518563851489187
  - 0.9502243982048143
  - 0.9502243982048143
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9510403916768666
  - 0.9481844145246838
  - 0.9518563851489188
  - 0.9502243982048144
  - 0.9502243982048144
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9510403916768665
  - 0.9481844145246837
  - 0.9518563851489188
  - 0.9502243982048144
  - 0.9502243982048144
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9239946705426358
  - 0.9237533263912994
  - 0.9252664728682171
  - 0.9245080500894457
  - 0.93127386324193
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8782888351053435
  - 0.8783465260013079
  - 0.898079885701864
  - 0.8681756746741228
  - 0.9120406234438249
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9162115260439088
  - 0.8930954850263143
  - 0.8982121717606543
  - 0.8885825075398535
  - 0.9140518812927164
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8991708699307297
  - 0.8798908393264402
  - 0.8852253370727513
  - 0.8698565191645923
  - 0.9187067009771983
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9693360026632315
  - 0.9622205148937499
  - 0.9665597079121229
  - 0.9602977712022441
  - 0.9708590192435294
  train_average_precision_macro_oob:
  - 0.46255094770692556
  - 0.49357932168091484
  - 0.4630145342067608
  - 0.4629636790878355
  - 0.4466283227232719
  train_average_precision_micro:
  - 0.9112146512505216
  - 0.9159369664398038
  - 0.9156034378650052
  - 0.904275998295929
  - 0.914667070918655
  train_average_precision_micro_oob:
  - 0.5287746377975238
  - 0.5603235411807618
  - 0.5486713463506154
  - 0.5518593246163659
  - 0.5341704802480456
  train_average_precision_samples:
  - 0.5212909130060293
  - 0.5215731512243139
  - 0.5109007782699643
  - 0.5044319859726837
  - 0.5184486895533407
  train_average_precision_samples_oob:
  - 0.33826051447671224
  - 0.34811341438505916
  - 0.33918530083827264
  - 0.3316668052070169
  - 0.33369031177565206
  train_average_precision_weighted:
  - 0.9658804343948058
  - 0.9626345715046409
  - 0.9625348883247166
  - 0.9562476809179716
  - 0.9668879673489877
  train_average_precision_weighted_oob:
  - 0.5676618667067098
  - 0.6049008201416267
  - 0.5782515823132479
  - 0.5782737756754442
  - 0.5707912672847144
  train_f1_macro:
  - 0.9568543451652386
  - 0.9572623419012646
  - 0.956956344349245
  - 0.9583843329253365
  - 0.956956344349245
  train_f1_macro_oob:
  - 0.9497144022847818
  - 0.9522643818849448
  - 0.951754385964912
  - 0.9523663810689514
  - 0.9510403916768665
  train_f1_micro:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9569563443492453
  - 0.9583843329253366
  - 0.9569563443492453
  train_f1_micro_oob:
  - 0.9497144022847818
  - 0.9522643818849449
  - 0.9517543859649122
  - 0.9523663810689514
  - 0.9510403916768666
  train_f1_samples:
  - 0.9568543451652387
  - 0.9572623419012647
  - 0.9569563443492451
  - 0.9583843329253368
  - 0.9569563443492451
  train_f1_samples_oob:
  - 0.9497144022847818
  - 0.952264381884945
  - 0.9517543859649122
  - 0.9523663810689514
  - 0.9510403916768666
  train_f1_weighted:
  - 0.9430799952839921
  - 0.9421586165772212
  - 0.9429989388982227
  - 0.9448377122906682
  - 0.9408951997614788
  train_f1_weighted_oob:
  - 0.9258444601644708
  - 0.930281007751938
  - 0.9315368290741887
  - 0.9314789336647139
  - 0.9270721526535479
  train_jaccard_macro:
  - 0.9181908823578712
  - 0.9190718090294366
  - 0.9183985051852483
  - 0.9209705362849551
  - 0.9185182632082668
  train_jaccard_macro_oob:
  - 0.9061061306678626
  - 0.9105209926777981
  - 0.9093789606587631
  - 0.910550450535705
  - 0.908435732605074
  train_jaccard_micro:
  - 0.9172777940745086
  - 0.9180279761322508
  - 0.9174652845687463
  - 0.9200940070505288
  - 0.9174652845687463
  train_jaccard_micro_oob:
  - 0.904243954549869
  - 0.9088785046728972
  - 0.9079497907949791
  - 0.909064355953656
  - 0.9066511085180864
  train_jaccard_samples:
  - 0.9217751325183074
  - 0.9225851429213413
  - 0.9222239913215647
  - 0.9246774950136931
  - 0.9220490511061795
  train_jaccard_samples_oob:
  - 0.9097891197107578
  - 0.9140922112939303
  - 0.9133820364558486
  - 0.9144525421775169
  - 0.9121269790203057
  train_jaccard_weighted:
  - 0.8929098114575297
  - 0.8914595267747293
  - 0.8927615802722245
  - 0.896040079628504
  - 0.889083635409048
  train_jaccard_weighted_oob:
  - 0.8639783078722271
  - 0.8714012805677275
  - 0.8730436160382822
  - 0.8732662710855607
  - 0.8658220083074105
  train_label_ranking_average_precision_score:
  - 0.9728413006029284
  - 0.9692475698289649
  - 0.9740790728436076
  - 0.9676102805463268
  - 0.9719370616463638
  train_label_ranking_average_precision_score_oob:
  - 0.7898109020736109
  - 0.7957878329897097
  - 0.8023635954119155
  - 0.7948450997806599
  - 0.7871786838686745
  train_matthews_corrcoef_macro:
  - 0.12790374408267927
  - 0.13982489177697394
  - 0.15072295599116317
  - 0.18431428389696367
  - 0.14755516348050407
  train_matthews_corrcoef_macro_oob:
  - 0.05542185128880227
  - 0.07437304311965795
  - 0.0718575683230858
  - 0.08908588742702479
  - 0.062322022187880854
  train_matthews_corrcoef_micro:
  - 0.432757568581092
  - 0.43109557523233477
  - 0.43487567367493835
  - 0.4602104766796146
  - 0.4244044396136233
  train_matthews_corrcoef_micro_oob:
  - 0.24410826361303595
  - 0.308306990039638
  - 0.30926290908979487
  - 0.3217470522715509
  - 0.2701854800768249
  train_matthews_corrcoef_samples:
  - 0.11807434193329268
  - 0.1149742696713557
  - 0.1153853270956692
  - 0.13039906921347985
  - 0.1117621542744904
  train_matthews_corrcoef_samples_oob:
  - 0.04591466843609245
  - 0.06373984569154907
  - 0.06491888102411056
  - 0.06878592555968233
  - 0.04964355575888421
  train_matthews_corrcoef_weighted:
  - 0.2766261709221944
  - 0.28466511245004367
  - 0.2983542191450214
  - 0.3320223384930557
  - 0.290648854783949
  train_matthews_corrcoef_weighted_oob:
  - 0.13460339932684157
  - 0.1771192214657794
  - 0.17781502964480436
  - 0.19773817931447338
  - 0.1547868772051987
  train_ndgc:
  - 0.5318498720991685
  - 0.5324136310159516
  - 0.5204716565628914
  - 0.5158136209252522
  - 0.5286579885480563
  train_ndgc_oob:
  - 0.4024076912946425
  - 0.40942510667366494
  - 0.3998443709087932
  - 0.3943236443599773
  - 0.39810100095534295
  train_neg_coverage_error:
  - -1.1744186046511629
  - -1.1531007751937985
  - -1.1569767441860466
  - -1.182170542635659
  - -1.1569767441860466
  train_neg_coverage_error_oob:
  - -3.116279069767442
  - -2.998062015503876
  - -3.063953488372093
  - -3.12984496124031
  - -3.1608527131782944
  train_neg_hamming_loss_macro:
  - -0.04314565483476132
  - -0.04273765809873521
  - -0.0430436556507548
  - -0.0416156670746634
  - -0.0430436556507548
  train_neg_hamming_loss_macro_oob:
  - -0.05028559771521828
  - -0.047735618115055084
  - -0.04824561403508772
  - -0.047633618931048546
  - -0.04895960832313342
  train_neg_hamming_loss_micro:
  - -0.04314565483476132
  - -0.04273765809873521
  - -0.0430436556507548
  - -0.0416156670746634
  - -0.0430436556507548
  train_neg_hamming_loss_micro_oob:
  - -0.050285597715218275
  - -0.04773561811505508
  - -0.04824561403508772
  - -0.04763361893104855
  - -0.04895960832313342
  train_neg_hamming_loss_samples:
  - -0.04314565483476132
  - -0.042737658098735205
  - -0.04304365565075479
  - -0.0416156670746634
  - -0.04304365565075479
  train_neg_hamming_loss_samples_oob:
  - -0.05028559771521827
  - -0.04773561811505507
  - -0.04824561403508772
  - -0.047633618931048546
  - -0.04895960832313342
  train_neg_hamming_loss_weighted:
  - -0.0569200047160079
  - -0.05784138342277878
  - -0.05700106110177735
  - -0.05516228770933192
  - -0.059104800238521174
  train_neg_hamming_loss_weighted_oob:
  - -0.07415553983552924
  - -0.06971899224806202
  - -0.0684631709258113
  - -0.06852106633528611
  - -0.07292784734645201
  train_neg_label_ranking_loss:
  - -0.005195960813265874
  - -0.005620142859369946
  - -0.0047508423961912325
  - -0.00607817490939926
  - -0.005349995295275733
  train_neg_label_ranking_loss_oob:
  - -0.0870286906752365
  - -0.08368369087845831
  - -0.08540027320807074
  - -0.08681762185096657
  - -0.0894750515988546
  train_precision_macro:
  - 0.9568543451652386
  - 0.9572623419012646
  - 0.956956344349245
  - 0.9583843329253365
  - 0.956956344349245
  train_precision_macro_oob:
  - 0.9497144022847818
  - 0.9522643818849448
  - 0.951754385964912
  - 0.9523663810689514
  - 0.9510403916768665
  train_precision_micro:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9569563443492453
  - 0.9583843329253366
  - 0.9569563443492453
  train_precision_micro_oob:
  - 0.9497144022847818
  - 0.9522643818849449
  - 0.9517543859649122
  - 0.9523663810689514
  - 0.9510403916768666
  train_precision_samples:
  - 0.9568543451652387
  - 0.9572623419012647
  - 0.9569563443492451
  - 0.9583843329253368
  - 0.9569563443492451
  train_precision_samples_oob:
  - 0.9497144022847818
  - 0.952264381884945
  - 0.9517543859649122
  - 0.9523663810689514
  - 0.9510403916768666
  train_precision_weighted:
  - 0.9430799952839921
  - 0.9421586165772212
  - 0.9429989388982227
  - 0.9448377122906682
  - 0.9408951997614788
  train_precision_weighted_oob:
  - 0.9258444601644708
  - 0.930281007751938
  - 0.9315368290741887
  - 0.9314789336647139
  - 0.9270721526535479
  train_recall_macro:
  - 0.9568543451652386
  - 0.9572623419012646
  - 0.956956344349245
  - 0.9583843329253365
  - 0.956956344349245
  train_recall_macro_oob:
  - 0.9497144022847818
  - 0.9522643818849448
  - 0.951754385964912
  - 0.9523663810689514
  - 0.9510403916768665
  train_recall_micro:
  - 0.9568543451652387
  - 0.9572623419012648
  - 0.9569563443492453
  - 0.9583843329253366
  - 0.9569563443492453
  train_recall_micro_oob:
  - 0.9497144022847818
  - 0.9522643818849449
  - 0.9517543859649122
  - 0.9523663810689514
  - 0.9510403916768666
  train_recall_samples:
  - 0.9568543451652387
  - 0.9572623419012647
  - 0.9569563443492451
  - 0.9583843329253368
  - 0.9569563443492451
  train_recall_samples_oob:
  - 0.9497144022847818
  - 0.952264381884945
  - 0.9517543859649122
  - 0.9523663810689514
  - 0.9510403916768666
  train_recall_weighted:
  - 0.9430799952839921
  - 0.9421586165772212
  - 0.9429989388982227
  - 0.9448377122906682
  - 0.9408951997614788
  train_recall_weighted_oob:
  - 0.9258444601644708
  - 0.930281007751938
  - 0.9315368290741887
  - 0.9314789336647139
  - 0.9270721526535479
  train_roc_auc_macro:
  - 0.9981262142409094
  - 0.9978593698525661
  - 0.9980708925246381
  - 0.9974759675038691
  - 0.9983070480952142
  train_roc_auc_macro_oob:
  - 0.9029611083893868
  - 0.8904277847615386
  - 0.894540050425598
  - 0.8899852869678394
  - 0.8705245463784875
  train_roc_auc_micro:
  - 0.994726475894159
  - 0.9945742054154376
  - 0.9946897972799631
  - 0.9938431577388785
  - 0.9946730106386505
  train_roc_auc_micro_oob:
  - 0.9116186784715796
  - 0.9151650482219204
  - 0.9129826516302108
  - 0.9120165257304553
  - 0.9035942730255527
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9971546081411079
  - 0.9971375521300532
  - 0.9973612151095442
  - 0.996377699867787
  - 0.9975598595089156
  train_roc_auc_weighted_oob:
  - 0.910481814784181
  - 0.9074173383059687
  - 0.9056205142575418
  - 0.9019554192013461
  - 0.894853182123259
start: 2023-12-12 16:54:07.644060
wrapper: null
