active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b+AmZmZmZn5v8DMzMzMzATAAJqZmZmZ2T+gmZmZmZkVQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:33:27.945298
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__8
  params: {}
hash: 6dd65a05c2872ed7f78cee8d3ce235f7901f20aa5f71155ad307aeaa50e75a91
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6dd65a0_20231221T083223690036_embedding_proba__8_VirusGO.yml
results:
  fit_time:
  - 49.32886528968811
  - 48.95183324813843
  - 50.33173108100891
  - 49.61019563674927
  - 49.615864753723145
  score_time:
  - 5.164902925491333
  - 4.952561140060425
  - 5.171353340148926
  - 5.175027847290039
  - 5.098258972167969
  test_average_precision_macro:
  - 0.9536140522299692
  - 0.9327135365103135
  - 0.942365415517442
  - 0.9765904191065818
  - 0.8445130758154343
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.94918221949233
  - 0.915740979836788
  - 0.8862286783081992
  - 0.9653756305729069
  - 0.8522554415233964
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9612403100775193
  - 0.9147286821705427
  - 0.9318181818181818
  - 0.9804878048780489
  - 0.9189814814814814
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9657298094062798
  - 0.9441450719043598
  - 0.9190871542037087
  - 0.9746952417967839
  - 0.8611710428076449
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8255813953488372
  - 0.8217054263565892
  - 0.8219696969696971
  - 0.7926829268292682
  - 0.7962962962962963
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8255813953488372
  - 0.8217054263565892
  - 0.821969696969697
  - 0.7926829268292683
  - 0.7962962962962963
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8255813953488373
  - 0.8217054263565894
  - 0.8219696969696971
  - 0.7926829268292683
  - 0.7962962962962963
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7325581395348837
  - 0.7376744186046511
  - 0.7263814616755792
  - 0.6805816135084428
  - 0.6814058956916099
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7209417455241297
  - 0.7137026882850722
  - 0.7163170392205028
  - 0.6813635869444118
  - 0.6857057999915143
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7029702970297029
  - 0.6973684210526315
  - 0.6977491961414791
  - 0.6565656565656566
  - 0.6615384615384615
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7104097452934663
  - 0.7026578073089703
  - 0.7061688311688313
  - 0.6631823461091755
  - 0.6779100529100529
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5897772537125513
  - 0.5969553504695954
  - 0.5849714624243212
  - 0.5350606558250532
  - 0.5336676246297238
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9612403100775193
  - 0.9147286821705425
  - 0.9318181818181818
  - 0.9804878048780489
  - 0.9189814814814815
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.101970425781575
  - 0.09334158447511054
  - 0.08621470832062883
  - 0.03131121455425748
  - 0.092078322555465
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2867288592645984
  - 0.25595275154532343
  - 0.2534825312820558
  - 0.1234002816582839
  - 0.2841868446726189
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09918397823412446
  - 0.07592816428063609
  - 0.09090909090909091
  - 0.015425744683748192
  - 0.1388888888888889
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.208019668594413
  - 0.18467864191165545
  - 0.17880395801639942
  - 0.0614181516256589
  - 0.19167324287055978
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9723839546479666
  - 0.936023173205172
  - 0.9495373197261117
  - 0.9873481624172247
  - 0.9451232001869033
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.255813953488372
  - -1.441860465116279
  - -1.3181818181818181
  - -1.3658536585365855
  - -1.6666666666666667
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17441860465116277
  - -0.17829457364341086
  - -0.178030303030303
  - -0.20731707317073175
  - -0.20370370370370372
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1744186046511628
  - -0.17829457364341086
  - -0.17803030303030304
  - -0.2073170731707317
  - -0.2037037037037037
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1744186046511628
  - -0.17829457364341086
  - -0.178030303030303
  - -0.20731707317073167
  - -0.20370370370370372
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2674418604651163
  - -0.2623255813953489
  - -0.2736185383244207
  - -0.31941838649155724
  - -0.31859410430838997
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01686046511627907
  - -0.0558139534883721
  - -0.03409090909090909
  - -0.014024390243902438
  - -0.04861111111111111
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8255813953488372
  - 0.8217054263565892
  - 0.8219696969696971
  - 0.7926829268292682
  - 0.7962962962962963
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8255813953488372
  - 0.8217054263565892
  - 0.821969696969697
  - 0.7926829268292683
  - 0.7962962962962963
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8255813953488373
  - 0.8217054263565894
  - 0.8219696969696971
  - 0.7926829268292683
  - 0.7962962962962963
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7325581395348837
  - 0.7376744186046511
  - 0.7263814616755792
  - 0.6805816135084428
  - 0.6814058956916099
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8255813953488372
  - 0.8217054263565892
  - 0.8219696969696971
  - 0.7926829268292682
  - 0.7962962962962963
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8255813953488372
  - 0.8217054263565892
  - 0.821969696969697
  - 0.7926829268292683
  - 0.7962962962962963
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8255813953488373
  - 0.8217054263565894
  - 0.8219696969696971
  - 0.7926829268292683
  - 0.7962962962962963
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7325581395348837
  - 0.7376744186046511
  - 0.7263814616755792
  - 0.6805816135084428
  - 0.6814058956916099
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9872423328305682
  - 0.9675915950425754
  - 0.9741362030642217
  - 0.9920524744693542
  - 0.9285791390752207
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9833653846153846
  - 0.9695192307692307
  - 0.9729356531344933
  - 0.9893933386201428
  - 0.9489795918367347
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9831395348837211
  - 0.9441860465116277
  - 0.9659090909090909
  - 0.9859756097560974
  - 0.9513888888888888
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9856410256410257
  - 0.9716381766381766
  - 0.9531025905638909
  - 0.9876031968423272
  - 0.9187086018617974
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9349998998802648
  - 0.9441989589516803
  - 0.9427691576902445
  - 0.9397214613505532
  - 0.9641761314505585
  train_average_precision_macro_oob:
  - 0.9082158901100419
  - 0.89049533328109
  - 0.9001143719935752
  - 0.9101304046259031
  - 0.9365974207609479
  train_average_precision_micro:
  - 0.9369632935994705
  - 0.939521302336066
  - 0.9447065469443799
  - 0.9295840743845127
  - 0.9602982785532107
  train_average_precision_micro_oob:
  - 0.896666302999669
  - 0.8927745822841437
  - 0.9134299776211753
  - 0.8739719116789804
  - 0.9216041417700799
  train_average_precision_samples:
  - 0.9517276422764227
  - 0.9664634146341463
  - 0.9771983640081797
  - 0.9630522088353414
  - 0.9658869395711502
  train_average_precision_samples_oob:
  - 0.9397357723577237
  - 0.9267276422764227
  - 0.9554192229038856
  - 0.9449799196787149
  - 0.9524366471734893
  train_average_precision_weighted:
  - 0.9433344376437146
  - 0.9464125433560632
  - 0.9502205257033915
  - 0.9377936877371728
  - 0.9644167011412114
  train_average_precision_weighted_oob:
  - 0.9066543824421902
  - 0.9006564109789726
  - 0.9192702265691769
  - 0.8883779627331982
  - 0.9300538804952487
  train_f1_macro:
  - 0.8241869918699187
  - 0.8262195121951219
  - 0.8312883435582821
  - 0.8293172690763052
  - 0.8333333333333334
  train_f1_macro_oob:
  - 0.8089430894308943
  - 0.8170731707317073
  - 0.8169734151329243
  - 0.8122489959839357
  - 0.8109161793372319
  train_f1_micro:
  - 0.8241869918699187
  - 0.8262195121951219
  - 0.8312883435582822
  - 0.8293172690763052
  - 0.8333333333333334
  train_f1_micro_oob:
  - 0.8089430894308943
  - 0.8170731707317073
  - 0.8169734151329243
  - 0.8122489959839357
  - 0.8109161793372319
  train_f1_samples:
  - 0.8241869918699186
  - 0.8262195121951219
  - 0.8312883435582822
  - 0.8293172690763052
  - 0.8333333333333334
  train_f1_samples_oob:
  - 0.8089430894308941
  - 0.8170731707317073
  - 0.8169734151329241
  - 0.8122489959839356
  - 0.8109161793372319
  train_f1_weighted:
  - 0.7392538034291233
  - 0.7403404974643807
  - 0.7531056374568874
  - 0.745843373493976
  - 0.7549045026359001
  train_f1_weighted_oob:
  - 0.7081924655880223
  - 0.7215648394107703
  - 0.7239263803680982
  - 0.7108132530120482
  - 0.7099069512862618
  train_jaccard_macro:
  - 0.7163544201988744
  - 0.7194437474803231
  - 0.7251175598370153
  - 0.7233805676150636
  - 0.7285351096712905
  train_jaccard_macro_oob:
  - 0.6996847539799083
  - 0.7092278006364694
  - 0.7091336779238698
  - 0.7048027892333638
  - 0.7029761460317284
  train_jaccard_micro:
  - 0.7009507346585998
  - 0.7038961038961039
  - 0.7112860892388452
  - 0.7084048027444254
  - 0.7142857142857143
  train_jaccard_micro_oob:
  - 0.6791808873720137
  - 0.6907216494845361
  - 0.6905790838375108
  - 0.68385460693153
  - 0.6819672131147541
  train_jaccard_samples:
  - 0.7135598141695704
  - 0.71602787456446
  - 0.7256792287467134
  - 0.7193057946069995
  - 0.7269562795878586
  train_jaccard_samples_oob:
  - 0.6891695702671313
  - 0.7016550522648084
  - 0.7020157756354075
  - 0.6929145152036719
  - 0.6893622946254526
  train_jaccard_weighted:
  - 0.5976945260967609
  - 0.5987341984252424
  - 0.6139743625628723
  - 0.605420128632338
  - 0.6176170707792814
  train_jaccard_weighted_oob:
  - 0.5637363343005163
  - 0.5777567186174611
  - 0.5814219229805384
  - 0.5673118733182002
  - 0.5663647055235242
  train_label_ranking_average_precision_score:
  - 0.9517276422764228
  - 0.9664634146341463
  - 0.9771983640081797
  - 0.9630522088353414
  - 0.9658869395711502
  train_label_ranking_average_precision_score_oob:
  - 0.9397357723577234
  - 0.9267276422764227
  - 0.9554192229038854
  - 0.9449799196787148
  - 0.9524366471734893
  train_matthews_corrcoef_macro:
  - 0.12254507904746353
  - 0.12555424974714552
  - 0.1381307293030753
  - 0.12603396071474315
  - 0.1290451855588323
  train_matthews_corrcoef_macro_oob:
  - 0.08002649277891737
  - 0.10142313443583434
  - 0.10114549286390805
  - 0.0656370387974511
  - 0.06467849031640605
  train_matthews_corrcoef_micro:
  - 0.3428664611642278
  - 0.3548641183424825
  - 0.38436008404694544
  - 0.35157145002410206
  - 0.3612714944525894
  train_matthews_corrcoef_micro_oob:
  - 0.23306509516329277
  - 0.2947875590931121
  - 0.29825990484172626
  - 0.22419115299965783
  - 0.18941426229856134
  train_matthews_corrcoef_samples:
  - 0.1656236442693194
  - 0.17109539180652078
  - 0.2073296514859022
  - 0.1641081131789278
  - 0.1806863543631639
  train_matthews_corrcoef_samples_oob:
  - 0.08576165282967899
  - 0.1255776414158662
  - 0.12594982900696136
  - 0.08130943732590981
  - 0.050482196093764184
  train_matthews_corrcoef_weighted:
  - 0.2493374017875138
  - 0.25774795560847297
  - 0.2796804606963393
  - 0.25678436885528527
  - 0.25973169511684163
  train_matthews_corrcoef_weighted_oob:
  - 0.16289463620387679
  - 0.20821573380125433
  - 0.2041330498893598
  - 0.13262139567561973
  - 0.13001364436451215
  train_ndgc:
  - 0.9653356511582932
  - 0.9769629598402364
  - 0.9843311925415122
  - 0.9734448592057883
  - 0.9751057707250063
  train_ndgc_oob:
  - 0.9562977399436956
  - 0.9486918384348895
  - 0.9691765310135413
  - 0.9605745519464055
  - 0.9657493486896722
  train_neg_coverage_error:
  - -1.3902439024390243
  - -1.3353658536585367
  - -1.3251533742331287
  - -1.3373493975903614
  - -1.286549707602339
  train_neg_coverage_error_oob:
  - -1.4329268292682926
  - -1.475609756097561
  - -1.4110429447852761
  - -1.391566265060241
  - -1.3333333333333333
  train_neg_hamming_loss_macro:
  - -0.17581300813008136
  - -0.1737804878048781
  - -0.16871165644171782
  - -0.1706827309236948
  - -0.16666666666666666
  train_neg_hamming_loss_macro_oob:
  - -0.1910569105691057
  - -0.1829268292682927
  - -0.18302658486707568
  - -0.18775100401606426
  - -0.189083820662768
  train_neg_hamming_loss_micro:
  - -0.1758130081300813
  - -0.17378048780487804
  - -0.1687116564417178
  - -0.1706827309236948
  - -0.16666666666666666
  train_neg_hamming_loss_micro_oob:
  - -0.1910569105691057
  - -0.18292682926829268
  - -0.18302658486707565
  - -0.18775100401606426
  - -0.18908382066276802
  train_neg_hamming_loss_samples:
  - -0.1758130081300813
  - -0.17378048780487804
  - -0.1687116564417178
  - -0.17068273092369476
  - -0.16666666666666666
  train_neg_hamming_loss_samples_oob:
  - -0.19105691056910568
  - -0.18292682926829268
  - -0.18302658486707565
  - -0.18775100401606423
  - -0.18908382066276805
  train_neg_hamming_loss_weighted:
  - -0.2607461965708766
  - -0.2596595025356194
  - -0.24689436254311267
  - -0.2541566265060241
  - -0.2450954973640999
  train_neg_hamming_loss_weighted_oob:
  - -0.2918075344119778
  - -0.2784351605892297
  - -0.2760736196319018
  - -0.2891867469879518
  - -0.29009304871373837
  train_neg_label_ranking_loss:
  - -0.029573170731707316
  - -0.017293360433604337
  - -0.01586571233810498
  - -0.02401271753681392
  - -0.019005847953216373
  train_neg_label_ranking_loss_oob:
  - -0.038109756097560975
  - -0.04244579945799458
  - -0.031935923653715066
  - -0.034471218206157964
  - -0.027257959714100062
  train_precision_macro:
  - 0.8241869918699187
  - 0.8262195121951219
  - 0.8312883435582821
  - 0.8293172690763052
  - 0.8333333333333334
  train_precision_macro_oob:
  - 0.8089430894308943
  - 0.8170731707317073
  - 0.8169734151329243
  - 0.8122489959839357
  - 0.8109161793372319
  train_precision_micro:
  - 0.8241869918699187
  - 0.8262195121951219
  - 0.8312883435582822
  - 0.8293172690763052
  - 0.8333333333333334
  train_precision_micro_oob:
  - 0.8089430894308943
  - 0.8170731707317073
  - 0.8169734151329243
  - 0.8122489959839357
  - 0.8109161793372319
  train_precision_samples:
  - 0.8241869918699186
  - 0.8262195121951219
  - 0.8312883435582822
  - 0.8293172690763052
  - 0.8333333333333334
  train_precision_samples_oob:
  - 0.8089430894308941
  - 0.8170731707317073
  - 0.8169734151329241
  - 0.8122489959839356
  - 0.8109161793372319
  train_precision_weighted:
  - 0.7392538034291233
  - 0.7403404974643807
  - 0.7531056374568874
  - 0.745843373493976
  - 0.7549045026359001
  train_precision_weighted_oob:
  - 0.7081924655880223
  - 0.7215648394107703
  - 0.7239263803680982
  - 0.7108132530120482
  - 0.7099069512862618
  train_recall_macro:
  - 0.8241869918699187
  - 0.8262195121951219
  - 0.8312883435582821
  - 0.8293172690763052
  - 0.8333333333333334
  train_recall_macro_oob:
  - 0.8089430894308943
  - 0.8170731707317073
  - 0.8169734151329243
  - 0.8122489959839357
  - 0.8109161793372319
  train_recall_micro:
  - 0.8241869918699187
  - 0.8262195121951219
  - 0.8312883435582822
  - 0.8293172690763052
  - 0.8333333333333334
  train_recall_micro_oob:
  - 0.8089430894308943
  - 0.8170731707317073
  - 0.8169734151329243
  - 0.8122489959839357
  - 0.8109161793372319
  train_recall_samples:
  - 0.8241869918699186
  - 0.8262195121951219
  - 0.8312883435582822
  - 0.8293172690763052
  - 0.8333333333333334
  train_recall_samples_oob:
  - 0.8089430894308941
  - 0.8170731707317073
  - 0.8169734151329241
  - 0.8122489959839356
  - 0.8109161793372319
  train_recall_weighted:
  - 0.7392538034291233
  - 0.7403404974643807
  - 0.7531056374568874
  - 0.745843373493976
  - 0.7549045026359001
  train_recall_weighted_oob:
  - 0.7081924655880223
  - 0.7215648394107703
  - 0.7239263803680982
  - 0.7108132530120482
  - 0.7099069512862618
  train_roc_auc_macro:
  - 0.9707351647156925
  - 0.9809550929912191
  - 0.9739017603698139
  - 0.968730665989222
  - 0.9844113486825435
  train_roc_auc_macro_oob:
  - 0.965652397078915
  - 0.9674136211038658
  - 0.9621024337162943
  - 0.9576836360358993
  - 0.9758563721170973
  train_roc_auc_micro:
  - 0.9786850168392799
  - 0.9832968271251679
  - 0.979833778341241
  - 0.9785804020100504
  - 0.9883012408046975
  train_roc_auc_micro_oob:
  - 0.9718543465599757
  - 0.9705185991744955
  - 0.9699763729614476
  - 0.9681909547738693
  - 0.980840251632559
  train_roc_auc_samples:
  - 0.9704268292682929
  - 0.9827066395663957
  - 0.984134287661895
  - 0.9759872824631862
  - 0.9809941520467836
  train_roc_auc_samples_oob:
  - 0.961890243902439
  - 0.9575542005420055
  - 0.9680640763462848
  - 0.9655287817938422
  - 0.9727420402859001
  train_roc_auc_weighted:
  - 0.9721824409937307
  - 0.9742134157638144
  - 0.9712267687322627
  - 0.9662720448223026
  - 0.9820741450634813
  train_roc_auc_weighted_oob:
  - 0.9599652095985387
  - 0.9564102827514045
  - 0.9561564053482089
  - 0.9494765222177594
  - 0.9728714860142521
start: 2023-12-21 08:32:23.690036
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
