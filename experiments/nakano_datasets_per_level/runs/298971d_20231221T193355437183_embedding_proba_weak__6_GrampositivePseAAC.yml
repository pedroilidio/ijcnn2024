active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AzczMzMz8PwCamZmZmek/ADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 19:36:05.856231
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__6
  params: {}
hash: 298971dba2d47bb047903ee82285ccb4acb322bfd79f437431cf8855b6e80d6f
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/298971d_20231221T193355437183_embedding_proba_weak__6_GrampositivePseAAC.yml
results:
  fit_time:
  - 106.93148994445801
  - 106.19006848335266
  - 108.30728006362915
  - 108.83454966545105
  - 111.76395845413208
  score_time:
  - 5.1651291847229
  - 5.196321964263916
  - 5.5350987911224365
  - 5.569347143173218
  - 5.817924737930298
  test_average_precision_macro:
  - 0.45604260908557803
  - 0.38392016016576685
  - 0.4053728698758028
  - 0.40600037835075453
  - 0.39284407058742676
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5093697679216652
  - 0.46243909036907027
  - 0.5177995382813501
  - 0.5129915786031729
  - 0.49719440445737917
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6968253968253969
  - 0.6903594771241828
  - 0.6909385113268608
  - 0.7206349206349205
  - 0.7155448717948717
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5023414870001185
  - 0.4579092084549443
  - 0.5171923233313345
  - 0.49758159084528897
  - 0.4966246523239727
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679613
  - 0.7690476190476191
  - 0.7475961538461539
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679612
  - 0.7690476190476191
  - 0.7475961538461539
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679612
  - 0.7690476190476191
  - 0.7475961538461539
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6718367346938776
  - 0.6771368741671426
  - 0.6680177208030916
  - 0.7079964061096137
  - 0.6707184325108853
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6182566918622044
  - 0.6203321919045125
  - 0.6153311686945814
  - 0.6408433702164702
  - 0.6199305612114547
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.596958174904943
  - 0.6
  - 0.5938104448742747
  - 0.6247582205029013
  - 0.5969289827255279
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6584126984126982
  - 0.6588235294117645
  - 0.6530744336569575
  - 0.6832653061224488
  - 0.6576923076923076
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.511067360451825
  - 0.5192524619717703
  - 0.5065074930538426
  - 0.5524145299995266
  - 0.5151408298500783
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6968253968253966
  - 0.6903594771241831
  - 0.6909385113268608
  - 0.7206349206349206
  - 0.7155448717948717
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.13511067438464586
  - 0.16640450996355088
  - 0.12768044563871067
  - 0.18652708381721145
  - 0.12965183265981015
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3098673725301237
  - 0.3120886144680357
  - 0.29611004613199104
  - 0.3559526920589532
  - 0.3168052543711957
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3015873015873016
  - 0.2997779438155846
  - 0.2847896440129451
  - 0.33735856886486076
  - 0.30917981286903135
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1918708989302981
  - 0.21202660977693213
  - 0.18139247320535953
  - 0.25765027343242874
  - 0.17846747051644715
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7739573972286161
  - 0.7701887284249307
  - 0.7700287838599643
  - 0.7919189445508406
  - 0.7891851171475674
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8
  - -1.803921568627451
  - -1.7766990291262137
  - -1.7333333333333334
  - -1.7307692307692308
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2523809523809524
  - -0.25
  - -0.25485436893203883
  - -0.23095238095238096
  - -0.25240384615384615
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2523809523809524
  - -0.25
  - -0.25485436893203883
  - -0.23095238095238096
  - -0.25240384615384615
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2523809523809524
  - -0.25
  - -0.25485436893203883
  - -0.23095238095238096
  - -0.25240384615384615
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32816326530612244
  - -0.32286312583285737
  - -0.33198227919690826
  - -0.2920035938903863
  - -0.32928156748911463
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2666666666666666
  - -0.2630718954248366
  - -0.25889967637540445
  - -0.24285714285714285
  - -0.23557692307692304
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679613
  - 0.7690476190476191
  - 0.7475961538461539
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679612
  - 0.7690476190476191
  - 0.7475961538461539
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679612
  - 0.7690476190476191
  - 0.7475961538461539
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6718367346938776
  - 0.6771368741671426
  - 0.6680177208030916
  - 0.7079964061096137
  - 0.6707184325108853
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679613
  - 0.7690476190476191
  - 0.7475961538461539
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679612
  - 0.7690476190476191
  - 0.7475961538461539
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7451456310679612
  - 0.7690476190476191
  - 0.7475961538461539
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6718367346938776
  - 0.6771368741671426
  - 0.6680177208030916
  - 0.7079964061096137
  - 0.6707184325108853
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6533884220354809
  - 0.6776276855320434
  - 0.6537505029499375
  - 0.7113100532842399
  - 0.6311887225064188
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7603930461073318
  - 0.7519019576635365
  - 0.7775787853080718
  - 0.7778211753395026
  - 0.761381618989653
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7333333333333335
  - 0.7369281045751633
  - 0.7411003236245955
  - 0.7571428571428571
  - 0.7644230769230769
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.650841670001334
  - 0.640022900282678
  - 0.6841415312115878
  - 0.688847560632074
  - 0.6484881760180027
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9500109607295201
  - 0.96031341319101
  - 0.9552033074546364
  - 0.9589125141998379
  - 0.9537086793930549
  train_average_precision_macro_oob:
  - 0.823047967055155
  - 0.8204397543684061
  - 0.8722224051466918
  - 0.8299256137885218
  - 0.8762164497831101
  train_average_precision_micro:
  - 0.9101083677423193
  - 0.9184550289019404
  - 0.8967457364754745
  - 0.9217896853461656
  - 0.904504535545163
  train_average_precision_micro_oob:
  - 0.8767538791271913
  - 0.8755202219800319
  - 0.8669068112641014
  - 0.8796878411908846
  - 0.8809520764773726
  train_average_precision_samples:
  - 0.9571256038647343
  - 0.9594324540367707
  - 0.9585336538461539
  - 0.9605475040257649
  - 0.9624497991967872
  train_average_precision_samples_oob:
  - 0.9488727858293077
  - 0.9498401278976819
  - 0.9509214743589745
  - 0.9520933977455716
  - 0.9576305220883534
  train_average_precision_weighted:
  - 0.9349945842062054
  - 0.9476294269526796
  - 0.9407264784787149
  - 0.9456994816582507
  - 0.9383826960474883
  train_average_precision_weighted_oob:
  - 0.9066638472701405
  - 0.9142939650089141
  - 0.9231104040367843
  - 0.9123366279373955
  - 0.9214616473315771
  train_f1_macro:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108433
  train_f1_macro_oob:
  - 0.9559178743961352
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019323
  - 0.9608433734939759
  train_f1_micro:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108434
  train_f1_micro_oob:
  - 0.9559178743961353
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019324
  - 0.9608433734939759
  train_f1_samples:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108434
  train_f1_samples_oob:
  - 0.9559178743961353
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019324
  - 0.9608433734939759
  train_f1_weighted:
  - 0.9659986593625038
  - 0.9694701381751741
  - 0.9658024267399269
  - 0.9715589846963009
  - 0.970685620178556
  train_f1_weighted_oob:
  - 0.9518295078935811
  - 0.9538369304556356
  - 0.9508814102564102
  - 0.9566897206872184
  - 0.9573025916616105
  train_jaccard_macro:
  - 0.9345877936557109
  - 0.9416232620984105
  - 0.9351501312250604
  - 0.9436002184022698
  - 0.9435990995588519
  train_jaccard_macro_oob:
  - 0.9161719912869184
  - 0.9199526346039664
  - 0.9157563828582497
  - 0.9229364392664846
  - 0.9251222475634371
  train_jaccard_micro:
  - 0.9334500875656743
  - 0.9406631762652705
  - 0.9337594421847762
  - 0.9425219941348973
  - 0.9426565242832066
  train_jaccard_micro_oob:
  - 0.9155581260844419
  - 0.9194476409666283
  - 0.9148446490218642
  - 0.922228670922809
  - 0.9246376811594202
  train_jaccard_samples:
  - 0.9507246376811594
  - 0.9558752997601919
  - 0.9516025641025642
  - 0.9568438003220612
  - 0.9582329317269077
  train_jaccard_samples_oob:
  - 0.9397745571658617
  - 0.9421262989608313
  - 0.9391025641025643
  - 0.943961352657005
  - 0.9463453815261045
  train_jaccard_weighted:
  - 0.9357627176075934
  - 0.9419855442498355
  - 0.9356936878092497
  - 0.9461347636136709
  - 0.9442332544767006
  train_jaccard_weighted_oob:
  - 0.9087726978386955
  - 0.9122958513366598
  - 0.9073868071428173
  - 0.9178490787271247
  - 0.9186394840664684
  train_label_ranking_average_precision_score:
  - 0.9571256038647343
  - 0.9594324540367706
  - 0.9585336538461539
  - 0.9605475040257648
  - 0.9624497991967871
  train_label_ranking_average_precision_score_oob:
  - 0.9488727858293076
  - 0.9498401278976817
  - 0.950921474358974
  - 0.9520933977455716
  - 0.9576305220883533
  train_matthews_corrcoef_macro:
  - 0.695713689886424
  - 0.7030860786697272
  - 0.697663857654204
  - 0.7048374690985495
  - 0.7060014172937604
  train_matthews_corrcoef_macro_oob:
  - 0.6745876346729923
  - 0.6767289195131789
  - 0.6748654203447358
  - 0.6802317847565817
  - 0.684059493148393
  train_matthews_corrcoef_micro:
  - 0.9097236605666051
  - 0.9196904281845042
  - 0.9099646608882507
  - 0.9222950155757953
  - 0.9221896994825698
  train_matthews_corrcoef_micro_oob:
  - 0.8827603094526725
  - 0.887986415523849
  - 0.8813389368513121
  - 0.8925420001267425
  - 0.8953890276037852
  train_matthews_corrcoef_samples:
  - 0.9191956651782429
  - 0.927984784447489
  - 0.9172378308662676
  - 0.9304678068851672
  - 0.92871382434214
  train_matthews_corrcoef_samples_oob:
  - 0.8843738364294793
  - 0.8870185883595879
  - 0.879750162844772
  - 0.8949987578648307
  - 0.8925270300583988
  train_matthews_corrcoef_weighted:
  - 0.8952113025694806
  - 0.9050947976588398
  - 0.8968361459523884
  - 0.908854545090989
  - 0.9081141341398219
  train_matthews_corrcoef_weighted_oob:
  - 0.8649905016500302
  - 0.87009810097714
  - 0.8643451153463456
  - 0.8761672949381497
  - 0.87867232830914
  train_ndgc:
  - 0.9683147057475918
  - 0.9699987983663996
  - 0.9693542269854123
  - 0.9708403203071103
  - 0.9722066985650668
  train_ndgc_oob:
  - 0.9623014679316374
  - 0.9626887838161976
  - 0.9635803999342121
  - 0.9644725125569467
  - 0.9685164909877957
  train_neg_coverage_error:
  - -1.0990338164251208
  - -1.0935251798561152
  - -1.0961538461538463
  - -1.0893719806763285
  - -1.0867469879518072
  train_neg_coverage_error_oob:
  - -1.1545893719806763
  - -1.1510791366906474
  - -1.1418269230769231
  - -1.1473429951690821
  - -1.108433734939759
  train_neg_hamming_loss_macro:
  - -0.034420289855072464
  - -0.03057553956834532
  - -0.034254807692307696
  - -0.029589371980676325
  - -0.029518072289156625
  train_neg_hamming_loss_macro_oob:
  - -0.044082125603864736
  - -0.041966426858513185
  - -0.04447115384615384
  - -0.04045893719806763
  - -0.0391566265060241
  train_neg_hamming_loss_micro:
  - -0.034420289855072464
  - -0.030575539568345324
  - -0.034254807692307696
  - -0.029589371980676328
  - -0.029518072289156625
  train_neg_hamming_loss_micro_oob:
  - -0.044082125603864736
  - -0.04196642685851319
  - -0.04447115384615385
  - -0.04045893719806763
  - -0.0391566265060241
  train_neg_hamming_loss_samples:
  - -0.034420289855072464
  - -0.030575539568345324
  - -0.034254807692307696
  - -0.029589371980676328
  - -0.029518072289156625
  train_neg_hamming_loss_samples_oob:
  - -0.044082125603864736
  - -0.04196642685851319
  - -0.04447115384615385
  - -0.04045893719806763
  - -0.0391566265060241
  train_neg_hamming_loss_weighted:
  - -0.03400134063749624
  - -0.030529861824825855
  - -0.034197573260073263
  - -0.028441015303699066
  - -0.029314379821444043
  train_neg_hamming_loss_weighted_oob:
  - -0.048170492106418876
  - -0.04616306954436451
  - -0.04911858974358975
  - -0.043310279312781655
  - -0.042697408338389524
  train_neg_label_ranking_loss:
  - -0.02979066022544283
  - -0.02877697841726619
  - -0.02884615384615384
  - -0.027375201288244767
  - -0.027309236947791162
  train_neg_label_ranking_loss_oob:
  - -0.04730273752012882
  - -0.04756195043964828
  - -0.04366987179487179
  - -0.04609500805152979
  - -0.03453815261044176
  train_precision_macro:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108433
  train_precision_macro_oob:
  - 0.9559178743961352
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019323
  - 0.9608433734939759
  train_precision_micro:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108434
  train_precision_micro_oob:
  - 0.9559178743961353
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019324
  - 0.9608433734939759
  train_precision_samples:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108434
  train_precision_samples_oob:
  - 0.9559178743961353
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019324
  - 0.9608433734939759
  train_precision_weighted:
  - 0.9659986593625038
  - 0.9694701381751741
  - 0.9658024267399269
  - 0.9715589846963009
  - 0.970685620178556
  train_precision_weighted_oob:
  - 0.9518295078935811
  - 0.9538369304556356
  - 0.9508814102564102
  - 0.9566897206872184
  - 0.9573025916616105
  train_recall_macro:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108433
  train_recall_macro_oob:
  - 0.9559178743961352
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019323
  - 0.9608433734939759
  train_recall_micro:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108434
  train_recall_micro_oob:
  - 0.9559178743961353
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019324
  - 0.9608433734939759
  train_recall_samples:
  - 0.9655797101449275
  - 0.9694244604316546
  - 0.9657451923076923
  - 0.9704106280193237
  - 0.9704819277108434
  train_recall_samples_oob:
  - 0.9559178743961353
  - 0.9580335731414868
  - 0.9555288461538461
  - 0.9595410628019324
  - 0.9608433734939759
  train_recall_weighted:
  - 0.9659986593625038
  - 0.9694701381751741
  - 0.9658024267399269
  - 0.9715589846963009
  - 0.970685620178556
  train_recall_weighted_oob:
  - 0.9518295078935811
  - 0.9538369304556356
  - 0.9508814102564102
  - 0.9566897206872184
  - 0.9573025916616105
  train_roc_auc_macro:
  - 0.9838134440668005
  - 0.9858360993626757
  - 0.985912262529755
  - 0.9863873268802652
  - 0.9859707593484178
  train_roc_auc_macro_oob:
  - 0.9575601263455502
  - 0.9423574369854036
  - 0.9732830698955357
  - 0.9698348499621406
  - 0.9626568545026639
  train_roc_auc_micro:
  - 0.9840864645090476
  - 0.984796626984127
  - 0.983151508191701
  - 0.9857218341549521
  - 0.9851735666977279
  train_roc_auc_micro_oob:
  - 0.9653979639950221
  - 0.9601133241758241
  - 0.9662838768948094
  - 0.9647042656431756
  - 0.9736095275026961
  train_roc_auc_samples:
  - 0.970209339774557
  - 0.9712230215827338
  - 0.9711538461538461
  - 0.9726247987117551
  - 0.9726907630522087
  train_roc_auc_samples_oob:
  - 0.9526972624798711
  - 0.9524380495603516
  - 0.9563301282051283
  - 0.9539049919484701
  - 0.9654618473895581
  train_roc_auc_weighted:
  - 0.9787994584966105
  - 0.9812146614293605
  - 0.9813596230780118
  - 0.9819550707108688
  - 0.9813057909080375
  train_roc_auc_weighted_oob:
  - 0.9712590842532491
  - 0.9689390488105615
  - 0.9758958929660532
  - 0.9752831821925065
  - 0.9765233920199536
start: 2023-12-21 19:33:55.437183
wrapper: null
