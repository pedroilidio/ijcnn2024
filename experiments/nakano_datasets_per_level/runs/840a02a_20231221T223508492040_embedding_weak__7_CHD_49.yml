active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT/MzMzMzMz8vzQzMzMzM/M/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAIQAAAAAAAABzAAAAAAAAAAAAAAAAAAAAIQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:39:09.636646
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__7
  params: {}
hash: 840a02aec390b71ab3737daac5c2d1ce44ecc006e8fe127910ef6ef24aee183d
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/840a02a_20231221T223508492040_embedding_weak__7_CHD_49.yml
results:
  fit_time:
  - 211.17629146575928
  - 212.80563235282898
  - 214.59738039970398
  - 225.97781038284302
  - 222.22865223884583
  score_time:
  - 4.687891244888306
  - 4.313024520874023
  - 4.739984750747681
  - 4.3594348430633545
  - 4.283257484436035
  test_average_precision_macro:
  - 0.5131364649896917
  - 0.5542774303291377
  - 0.5094389331219947
  - 0.5332896978906893
  - 0.503800352800452
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6924229780239795
  - 0.7114095449472019
  - 0.6431081954541695
  - 0.6656729443676219
  - 0.6852727527776237
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7811616161616161
  - 0.8037165637860082
  - 0.750023540489642
  - 0.7710085085085082
  - 0.7682613168724279
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6382148351567731
  - 0.6749379844547758
  - 0.6265678861315893
  - 0.6462678329887576
  - 0.6341024776250245
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6969696969696969
  - 0.7052469135802469
  - 0.6850282485875706
  - 0.7057057057057058
  - 0.683641975308642
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.696969696969697
  - 0.7052469135802469
  - 0.6850282485875706
  - 0.7057057057057057
  - 0.683641975308642
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6969696969696968
  - 0.7052469135802468
  - 0.6850282485875706
  - 0.7057057057057057
  - 0.6836419753086418
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6532739987285442
  - 0.6710408684546616
  - 0.6255315326106486
  - 0.6612237237237237
  - 0.6448018193632229
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.55705792411515
  - 0.5641280750760843
  - 0.5473727933748647
  - 0.5672490899448852
  - 0.5435275472765329
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5348837209302325
  - 0.5446960667461264
  - 0.5209452201933404
  - 0.5452436194895591
  - 0.5193434935521688
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5668909878000787
  - 0.5803350970017638
  - 0.5594981289896542
  - 0.5828399828399828
  - 0.5586580086580087
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49355430924388816
  - 0.5145828299800705
  - 0.4639800653910557
  - 0.5029177846766161
  - 0.4857640084826553
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7811616161616163
  - 0.8222350823045264
  - 0.7500235404896421
  - 0.7710085085085082
  - 0.7775205761316875
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0597155853378225
  - 0.061388497416761605
  - 0.07788069425410354
  - 0.08003985944034721
  - 0.01338463630720643
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4124781160371109
  - 0.4239191225785406
  - 0.3992403984954287
  - 0.430856762595448
  - 0.3818812671003133
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4240075223473182
  - 0.43758019841200985
  - 0.4100162145261488
  - 0.4345205288780493
  - 0.38242609969618974
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.04810123569219678
  - 0.05319025906748358
  - 0.06225451946109835
  - 0.06800600070941562
  - 0.01066729460808773
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8596902429306452
  - 0.871241797701529
  - 0.8293950448262468
  - 0.8500030443435701
  - 0.8410474591622198
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.9363636363636365
  - -3.8703703703703702
  - -3.6440677966101696
  - -3.891891891891892
  - -3.9814814814814814
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.30303030303030304
  - -0.2947530864197531
  - -0.31497175141242933
  - -0.29429429429429427
  - -0.316358024691358
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.30303030303030304
  - -0.29475308641975306
  - -0.3149717514124294
  - -0.29429429429429427
  - -0.31635802469135804
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.303030303030303
  - -0.29475308641975306
  - -0.31497175141242933
  - -0.2942942942942943
  - -0.31635802469135793
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34672600127145586
  - -0.3289591315453384
  - -0.3744684673893514
  - -0.33877627627627627
  - -0.35519818063677716
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22174242424242424
  - -0.19333847736625515
  - -0.2307674199623352
  - -0.2253753753753754
  - -0.2325360082304527
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6969696969696969
  - 0.7052469135802469
  - 0.6850282485875706
  - 0.7057057057057058
  - 0.683641975308642
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.696969696969697
  - 0.7052469135802469
  - 0.6850282485875706
  - 0.7057057057057057
  - 0.683641975308642
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6969696969696968
  - 0.7052469135802468
  - 0.6850282485875706
  - 0.7057057057057057
  - 0.6836419753086418
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6532739987285442
  - 0.6710408684546616
  - 0.6255315326106486
  - 0.6612237237237237
  - 0.6448018193632229
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6969696969696969
  - 0.7052469135802469
  - 0.6850282485875706
  - 0.7057057057057058
  - 0.683641975308642
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.696969696969697
  - 0.7052469135802469
  - 0.6850282485875706
  - 0.7057057057057057
  - 0.683641975308642
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6969696969696968
  - 0.7052469135802468
  - 0.6850282485875706
  - 0.7057057057057057
  - 0.6836419753086418
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6532739987285442
  - 0.6710408684546616
  - 0.6255315326106486
  - 0.6612237237237237
  - 0.6448018193632229
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6019936082961554
  - 0.5865028156130101
  - 0.5517536925607267
  - 0.63769786308946
  - 0.5452533975508839
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7825623574286675
  - 0.7880080909266037
  - 0.773286219081272
  - 0.7790454144620811
  - 0.7775361268184233
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7782575757575758
  - .nan
  - 0.7692325800376647
  - 0.7746246246246247
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6020814761280782
  - 0.5965059383472977
  - 0.6119196004314877
  - 0.6010944975118262
  - 0.588716697212046
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8654998120389578
  - 0.8656700504293046
  - 0.8706692237697906
  - 0.8664035012749195
  - 0.8526320688606656
  train_average_precision_macro_oob:
  - 0.6467595039091864
  - 0.6427013630721982
  - 0.6263354279021135
  - 0.6326742626196703
  - 0.626505136391072
  train_average_precision_micro:
  - 0.7407909744951393
  - 0.7434447622065248
  - 0.7508202067191406
  - 0.7349177173164348
  - 0.7088663321808462
  train_average_precision_micro_oob:
  - 0.7090372566917409
  - 0.7080374653401027
  - 0.6977266135636114
  - 0.7020289208907375
  - 0.6795683347120904
  train_average_precision_samples:
  - 0.8096660424469413
  - 0.8062484464330102
  - 0.8160310195779302
  - 0.8024806056056056
  - 0.7963708675118071
  train_average_precision_samples_oob:
  - 0.7929525593008737
  - 0.7854057916977379
  - 0.7945048309178743
  - 0.7873686186186185
  - 0.7844332587621178
  train_average_precision_weighted:
  - 0.8195241693011583
  - 0.8182353295059833
  - 0.8286901587196401
  - 0.8220302653724993
  - 0.8025618330363004
  train_average_precision_weighted_oob:
  - 0.7552354888989945
  - 0.7500277511148267
  - 0.7308124881959913
  - 0.7454618996630286
  - 0.7344799316662556
  train_f1_macro:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_f1_macro_oob:
  - 0.7258426966292135
  - 0.7155108128262491
  - 0.725019069412662
  - 0.7143393393393395
  - 0.720357941834452
  train_f1_micro:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_f1_micro_oob:
  - 0.7258426966292135
  - 0.7155108128262491
  - 0.7250190694126621
  - 0.7143393393393394
  - 0.7203579418344519
  train_f1_samples:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_f1_samples_oob:
  - 0.7258426966292135
  - 0.7155108128262492
  - 0.7250190694126621
  - 0.7143393393393392
  - 0.7203579418344519
  train_f1_weighted:
  - 0.7283095084024551
  - 0.7241681260945709
  - 0.7411638416053756
  - 0.7315921690921692
  - 0.7278397687577163
  train_f1_weighted_oob:
  - 0.6759613310586898
  - 0.6652150746169245
  - 0.6796278925261844
  - 0.6666765104265104
  - 0.6707391522286521
  train_jaccard_macro:
  - 0.6837905177636462
  - 0.6892335330056193
  - 0.6955639168952334
  - 0.6908460127759959
  - 0.6865971531330671
  train_jaccard_macro_oob:
  - 0.5926944692571366
  - 0.5800540095519011
  - 0.590110330897228
  - 0.5777764173161154
  - 0.5855409067912385
  train_jaccard_micro:
  - 0.6481481481481481
  - 0.6494464944649446
  - 0.6610706366803928
  - 0.6541446755665943
  - 0.6494464944649446
  train_jaccard_micro_oob:
  - 0.5696649029982364
  - 0.5570391872278665
  - 0.5686509123541729
  - 0.5556204379562044
  - 0.5629370629370629
  train_jaccard_samples:
  - 0.6813599883262804
  - 0.6814753479183009
  - 0.6939849624060149
  - 0.6867117117117116
  - 0.6804516885053796
  train_jaccard_samples_oob:
  - 0.6057162313342088
  - 0.5929070184103741
  - 0.6026380179698256
  - 0.5897800397800397
  - 0.5964331716009568
  train_jaccard_weighted:
  - 0.5996819636985031
  - 0.5976179205071471
  - 0.6156611562884295
  - 0.6048709623526676
  - 0.6004557211221363
  train_jaccard_weighted_oob:
  - 0.521917021068102
  - 0.5083525839001065
  - 0.5251928415326126
  - 0.5098743959017236
  - 0.515184018947502
  train_label_ranking_average_precision_score:
  - 0.8164076154806486
  - 0.8084855828983344
  - 0.8228960081362828
  - 0.809237362362362
  - 0.8008451404424557
  train_label_ranking_average_precision_score_oob:
  - 0.7996941323345811
  - 0.7876429281630621
  - 0.8013698194762264
  - 0.7941253753753748
  - 0.7889075316927662
  train_matthews_corrcoef_macro:
  - 0.32766017229398114
  - 0.31040918176131393
  - 0.34016254399691337
  - 0.3381263700927551
  - 0.3211812190583742
  train_matthews_corrcoef_macro_oob:
  - 0.16128611546771263
  - 0.13656567938339992
  - 0.1449509679565035
  - 0.1307141769429079
  - 0.1502610067170723
  train_matthews_corrcoef_micro:
  - 0.6163544978646646
  - 0.6245931311993703
  - 0.6324049027957758
  - 0.6265981862259246
  - 0.6199724978989303
  train_matthews_corrcoef_micro_oob:
  - 0.47090371873412307
  - 0.44612308097245196
  - 0.4667438211478561
  - 0.44250199526195744
  - 0.4565075505023445
  train_matthews_corrcoef_samples:
  - 0.6325648975042856
  - 0.645027906700916
  - 0.6494408445590152
  - 0.6435709436818312
  - 0.6348067280238148
  train_matthews_corrcoef_samples_oob:
  - 0.4857032066420661
  - 0.4560448908416724
  - 0.4786312066192091
  - 0.45201591221955945
  - 0.4738827587808536
  train_matthews_corrcoef_weighted:
  - 0.2881010749626713
  - 0.2586810063684277
  - 0.3016734280597499
  - 0.29595723732232904
  - 0.2788921427444497
  train_matthews_corrcoef_weighted_oob:
  - 0.1316522767324728
  - 0.11232818715096321
  - 0.11762270412433964
  - 0.10725648927178319
  - 0.12280719025547435
  train_ndgc:
  - 0.8721828193721234
  - 0.8706852690989545
  - 0.878591922377531
  - 0.8665781565904862
  - 0.8635048141451825
  train_ndgc_oob:
  - 0.8626389256983263
  - 0.8565491620233295
  - 0.8645292319925763
  - 0.8578767956055896
  - 0.8565902522973721
  train_neg_coverage_error:
  - -3.498876404494382
  - -3.505592841163311
  - -3.5560640732265445
  - -3.5112612612612613
  - -3.527964205816555
  train_neg_coverage_error_oob:
  - -3.6764044943820227
  - -3.655480984340045
  - -3.739130434782609
  - -3.684684684684685
  - -3.6733780760626398
  train_neg_hamming_loss_macro:
  - -0.21348314606741572
  - -0.21252796420581654
  - -0.20404271548436306
  - -0.2090840840840841
  - -0.21252796420581654
  train_neg_hamming_loss_macro_oob:
  - -0.27415730337078653
  - -0.28448918717375093
  - -0.2749809305873379
  - -0.2856606606606607
  - -0.27964205816554805
  train_neg_hamming_loss_micro:
  - -0.21348314606741572
  - -0.21252796420581654
  - -0.2040427154843631
  - -0.20908408408408408
  - -0.21252796420581654
  train_neg_hamming_loss_micro_oob:
  - -0.27415730337078653
  - -0.28448918717375093
  - -0.2749809305873379
  - -0.28566066066066065
  - -0.2796420581655481
  train_neg_hamming_loss_samples:
  - -0.21348314606741572
  - -0.21252796420581654
  - -0.20404271548436306
  - -0.2090840840840841
  - -0.21252796420581654
  train_neg_hamming_loss_samples_oob:
  - -0.27415730337078653
  - -0.28448918717375093
  - -0.2749809305873379
  - -0.28566066066066065
  - -0.2796420581655481
  train_neg_hamming_loss_weighted:
  - -0.27169049159754494
  - -0.27583187390542907
  - -0.2588361583946243
  - -0.26840783090783094
  - -0.2721602312422836
  train_neg_hamming_loss_weighted_oob:
  - -0.3240386689413103
  - -0.33478492538307536
  - -0.32037210747381567
  - -0.3333234895734896
  - -0.32926084777134784
  train_neg_label_ranking_loss:
  - -0.16199750312109862
  - -0.16747452150136716
  - -0.15833968980422072
  - -0.16532157157157157
  - -0.17174372358936119
  train_neg_label_ranking_loss_oob:
  - -0.1906928838951311
  - -0.19513422818791945
  - -0.1894609712687516
  - -0.192235985985986
  - -0.19551951280139196
  train_precision_macro:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_precision_macro_oob:
  - 0.7258426966292135
  - 0.7155108128262491
  - 0.725019069412662
  - 0.7143393393393395
  - 0.720357941834452
  train_precision_micro:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_precision_micro_oob:
  - 0.7258426966292135
  - 0.7155108128262491
  - 0.7250190694126621
  - 0.7143393393393394
  - 0.7203579418344519
  train_precision_samples:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_precision_samples_oob:
  - 0.7258426966292135
  - 0.7155108128262492
  - 0.7250190694126621
  - 0.7143393393393392
  - 0.7203579418344519
  train_precision_weighted:
  - 0.7283095084024551
  - 0.7241681260945709
  - 0.7411638416053756
  - 0.7315921690921692
  - 0.7278397687577163
  train_precision_weighted_oob:
  - 0.6759613310586898
  - 0.6652150746169245
  - 0.6796278925261844
  - 0.6666765104265104
  - 0.6707391522286521
  train_recall_macro:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_recall_macro_oob:
  - 0.7258426966292135
  - 0.7155108128262491
  - 0.725019069412662
  - 0.7143393393393395
  - 0.720357941834452
  train_recall_micro:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_recall_micro_oob:
  - 0.7258426966292135
  - 0.7155108128262491
  - 0.7250190694126621
  - 0.7143393393393394
  - 0.7203579418344519
  train_recall_samples:
  - 0.7865168539325843
  - 0.7874720357941835
  - 0.795957284515637
  - 0.7909159159159159
  - 0.7874720357941835
  train_recall_samples_oob:
  - 0.7258426966292135
  - 0.7155108128262492
  - 0.7250190694126621
  - 0.7143393393393392
  - 0.7203579418344519
  train_recall_weighted:
  - 0.7283095084024551
  - 0.7241681260945709
  - 0.7411638416053756
  - 0.7315921690921692
  - 0.7278397687577163
  train_recall_weighted_oob:
  - 0.6759613310586898
  - 0.6652150746169245
  - 0.6796278925261844
  - 0.6666765104265104
  - 0.6707391522286521
  train_roc_auc_macro:
  - 0.8410047917568101
  - 0.839635969271434
  - 0.8406993858312481
  - 0.8447072693704198
  - 0.8322699872976168
  train_roc_auc_macro_oob:
  - 0.6946152251023463
  - 0.698974518190628
  - 0.6691838328558947
  - 0.6673687536753157
  - 0.6578125382795991
  train_roc_auc_micro:
  - 0.8477338156683295
  - 0.8457095662656084
  - 0.8483028129776654
  - 0.8430742776959882
  - 0.8371883599476329
  train_roc_auc_micro_oob:
  - 0.8112778441961771
  - 0.8138558464302772
  - 0.8080393411550053
  - 0.8067882775119618
  - 0.8039576405237854
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7697691144741046
  - 0.7668658820661914
  - 0.7713073075034871
  - 0.7764638337294928
  - 0.759593319692589
  train_roc_auc_weighted_oob:
  - 0.6935262193395629
  - 0.6918293820676843
  - 0.6624984595811588
  - 0.6928952217758468
  - 0.6863322993750874
start: 2023-12-21 22:35:08.492040
wrapper: null
