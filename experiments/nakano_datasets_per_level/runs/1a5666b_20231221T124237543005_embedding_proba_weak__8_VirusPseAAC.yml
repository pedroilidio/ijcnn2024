active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0AAMzMzMzPjv8DMzMzMzAzAQDMzMzMzA0CAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:51:28.978956
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__8
  params: {}
hash: 1a5666b08fce70bf9521b2733b9e7c47eaedafed82e0d233f036ebc410c50c46
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1a5666b_20231221T124237543005_embedding_proba_weak__8_VirusPseAAC.yml
results:
  fit_time:
  - 495.42256212234497
  - 496.5086033344269
  - 508.79767870903015
  - 512.5219385623932
  - 517.2665359973907
  score_time:
  - 5.444933652877808
  - 5.18701958656311
  - 5.05208683013916
  - 5.216261148452759
  - 5.462031364440918
  test_average_precision_macro:
  - 0.4804795732056926
  - 0.2952281431049805
  - 0.3293325663925667
  - 0.34274550883413984
  - 0.443785340549019
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.48494932107142974
  - 0.45415428383230516
  - 0.3928233382680581
  - 0.43557319058474897
  - 0.4091385815300771
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6576023391812866
  - 0.6402777777777777
  - 0.64
  - 0.6373219373219373
  - 0.664922480620155
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4874523563765859
  - 0.4464118717785863
  - 0.4187394571652571
  - 0.4266304784182042
  - 0.4622980680250162
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7807017543859649
  - 0.7976190476190476
  - 0.8148148148148149
  - 0.7905982905982906
  - 0.8062015503875969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7807017543859649
  - 0.7976190476190477
  - 0.8148148148148148
  - 0.7905982905982906
  - 0.8062015503875969
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7807017543859649
  - 0.7976190476190478
  - 0.8148148148148151
  - 0.7905982905982903
  - 0.8062015503875972
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6666666666666666
  - 0.6755368814192344
  - 0.7066666666666667
  - 0.6738461538461539
  - 0.6976744186046511
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6661936828603495
  - 0.6906128021635897
  - 0.7106643606843966
  - 0.679424138590631
  - 0.6987423811132017
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6402877697841727
  - 0.6633663366336634
  - 0.6875
  - 0.6537102473498233
  - 0.6753246753246753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6478696741854638
  - 0.6683673469387756
  - 0.6904761904761906
  - 0.6636141636141638
  - 0.6794019933554818
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5199068179460337
  - 0.5287367422504983
  - 0.5624124523042575
  - 0.5291839202847352
  - 0.5544893134558788
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6576023391812865
  - 0.6402777777777778
  - 0.6399999999999999
  - 0.6373219373219373
  - 0.664922480620155
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.030453209785201885
  - 0.0
  - 0.0
  - 0.0324161085506458
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12364843289440755
  - 0.0
  - 0.0
  - 0.12567414776440305
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.016643566632465155
  - 0.0
  - 0.0
  - 0.02564102564102564
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06090641957040377
  - 0.0
  - 0.0
  - 0.06223892841723993
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7451742671830022
  - 0.7337395064230336
  - 0.7323673444072104
  - 0.7291740776828742
  - 0.7513532235226553
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.526315789473684
  - -2.4047619047619047
  - -2.311111111111111
  - -2.5128205128205128
  - -2.2325581395348837
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2192982456140351
  - -0.2023809523809524
  - -0.18518518518518515
  - -0.20940170940170943
  - -0.19379844961240308
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21929824561403508
  - -0.20238095238095238
  - -0.18518518518518517
  - -0.2094017094017094
  - -0.1937984496124031
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2192982456140351
  - -0.20238095238095233
  - -0.18518518518518515
  - -0.20940170940170943
  - -0.19379844961240308
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3333333333333333
  - -0.32446311858076554
  - -0.29333333333333333
  - -0.3261538461538461
  - -0.3023255813953488
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23837719298245616
  - -0.23630952380952377
  - -0.23499999999999993
  - -0.2518518518518518
  - -0.2151162790697674
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7807017543859649
  - 0.7976190476190476
  - 0.8148148148148149
  - 0.7905982905982906
  - 0.8062015503875969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7807017543859649
  - 0.7976190476190477
  - 0.8148148148148148
  - 0.7905982905982906
  - 0.8062015503875969
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7807017543859649
  - 0.7976190476190478
  - 0.8148148148148151
  - 0.7905982905982903
  - 0.8062015503875972
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6666666666666666
  - 0.6755368814192344
  - 0.7066666666666667
  - 0.6738461538461539
  - 0.6976744186046511
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7807017543859649
  - 0.7976190476190476
  - 0.8148148148148149
  - 0.7905982905982906
  - 0.8062015503875969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7807017543859649
  - 0.7976190476190477
  - 0.8148148148148148
  - 0.7905982905982906
  - 0.8062015503875969
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7807017543859649
  - 0.7976190476190478
  - 0.8148148148148151
  - 0.7905982905982903
  - 0.8062015503875972
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6666666666666666
  - 0.6755368814192344
  - 0.7066666666666667
  - 0.6738461538461539
  - 0.6976744186046511
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6675006023914941
  - 0.5382866783379542
  - 0.601260022038924
  - 0.5894545342914908
  - 0.6670063728887258
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7915143458513348
  - 0.7597307579748318
  - 0.7714545454545454
  - 0.7604347826086957
  - 0.7720192307692307
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7616228070175438
  - 0.7636904761904763
  - 0.7650000000000001
  - 0.7481481481481481
  - 0.7848837209302324
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6048568700092308
  - 0.5593502167662101
  - 0.5901654635480053
  - 0.5690638871508437
  - 0.6097920997920998
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7373025920195113
  - 0.7313144030852028
  - 0.7323926284758818
  - 0.7082002035671472
  - 0.7139639199370399
  train_average_precision_macro_oob:
  - 0.5332519929800525
  - 0.5624689768316495
  - 0.5732374953189162
  - 0.5711732433143297
  - 0.5088187131634999
  train_average_precision_micro:
  - 0.7771099047201628
  - 0.770540405896388
  - 0.7593745623445568
  - 0.7681223667752395
  - 0.7728363983275682
  train_average_precision_micro_oob:
  - 0.6922491003618019
  - 0.6947017790032018
  - 0.6945632962912541
  - 0.7119495317151262
  - 0.7097495743240743
  train_average_precision_samples:
  - 0.8300788954635107
  - 0.811111111111111
  - 0.8171296296296297
  - 0.8356150793650793
  - 0.8139735772357723
  train_average_precision_samples_oob:
  - 0.7615384615384615
  - 0.7682828282828283
  - 0.7692386831275719
  - 0.7929398148148147
  - 0.7621781842818428
  train_average_precision_weighted:
  - 0.7677576730640355
  - 0.7539649784390126
  - 0.7432143298936252
  - 0.7503069663216462
  - 0.7591345482794686
  train_average_precision_weighted_oob:
  - 0.6840609740977965
  - 0.6823210853373107
  - 0.6743194850387458
  - 0.6988562392018315
  - 0.6841405809474912
  train_f1_macro:
  - 0.8648915187376724
  - 0.8616161616161616
  - 0.8600823045267489
  - 0.875
  - 0.8597560975609756
  train_f1_macro_oob:
  - 0.8422090729783038
  - 0.8464646464646465
  - 0.8456790123456791
  - 0.8333333333333335
  - 0.8353658536585366
  train_f1_micro:
  - 0.8648915187376726
  - 0.8616161616161616
  - 0.8600823045267489
  - 0.875
  - 0.8597560975609756
  train_f1_micro_oob:
  - 0.8422090729783037
  - 0.8464646464646465
  - 0.845679012345679
  - 0.8333333333333334
  - 0.8353658536585366
  train_f1_samples:
  - 0.8648915187376726
  - 0.8616161616161616
  - 0.860082304526749
  - 0.875
  - 0.8597560975609756
  train_f1_samples_oob:
  - 0.8422090729783036
  - 0.8464646464646464
  - 0.845679012345679
  - 0.8333333333333334
  - 0.8353658536585366
  train_f1_weighted:
  - 0.816891872000942
  - 0.815015829941203
  - 0.8136230289695636
  - 0.823402876001886
  - 0.8079570152137164
  train_f1_weighted_oob:
  - 0.7708204539433011
  - 0.7844112769485904
  - 0.784317320620951
  - 0.7545968882602547
  - 0.7606556387346051
  train_jaccard_macro:
  - 0.7680881575766486
  - 0.7627375913963178
  - 0.7603411906600105
  - 0.7846205102576916
  - 0.7608181861429312
  train_jaccard_macro_oob:
  - 0.7392796839966652
  - 0.7430656086700947
  - 0.741622759305117
  - 0.7281793360922402
  - 0.7297699755524868
  train_jaccard_micro:
  - 0.7619461337966985
  - 0.7568766637089619
  - 0.7545126353790613
  - 0.7777777777777778
  - 0.7540106951871658
  train_jaccard_micro_oob:
  - 0.727427597955707
  - 0.7338003502626971
  - 0.732620320855615
  - 0.7142857142857143
  - 0.7172774869109948
  train_jaccard_samples:
  - 0.7751479289940828
  - 0.768831168831169
  - 0.7692533803644915
  - 0.7908163265306123
  - 0.7668408826945413
  train_jaccard_samples_oob:
  - 0.7399267399267401
  - 0.746897546897547
  - 0.7486772486772486
  - 0.7240646258503401
  - 0.730836236933798
  train_jaccard_weighted:
  - 0.6940371208982119
  - 0.691378170350337
  - 0.6893024117940209
  - 0.7052022351352883
  - 0.6818882387448331
  train_jaccard_weighted_oob:
  - 0.6354869928060578
  - 0.6516415634273847
  - 0.6512127401375923
  - 0.6157258641973227
  - 0.6222395572672322
  train_label_ranking_average_precision_score:
  - 0.8300788954635109
  - 0.811111111111111
  - 0.8171296296296294
  - 0.8356150793650793
  - 0.8139735772357722
  train_label_ranking_average_precision_score_oob:
  - 0.7615384615384615
  - 0.768282828282828
  - 0.7692386831275719
  - 0.7929398148148146
  - 0.7621781842818428
  train_matthews_corrcoef_macro:
  - 0.1948912085973535
  - 0.19530134814420008
  - 0.19684820190501465
  - 0.3031804388636272
  - 0.23169467702221525
  train_matthews_corrcoef_macro_oob:
  - 0.14823112069386266
  - 0.16601850562249512
  - 0.17010499474334542
  - 0.1335516070987473
  - 0.14676187165679425
  train_matthews_corrcoef_micro:
  - 0.522005920153756
  - 0.5208647492754842
  - 0.5269598742487495
  - 0.5704146567504231
  - 0.5189479074946438
  train_matthews_corrcoef_micro_oob:
  - 0.4128409343768436
  - 0.4521095712109416
  - 0.46417039340210325
  - 0.3732087490482419
  - 0.4050155431581582
  train_matthews_corrcoef_samples:
  - 0.34170890319213837
  - 0.3316717597764003
  - 0.34803247019447564
  - 0.39938288235817543
  - 0.3325519509347114
  train_matthews_corrcoef_samples_oob:
  - 0.22410888946589164
  - 0.26466142734507725
  - 0.29376213817533403
  - 0.17721291021331378
  - 0.22149119097766315
  train_matthews_corrcoef_weighted:
  - 0.39885383975685773
  - 0.39635966909535325
  - 0.4006855473449315
  - 0.48102357941843593
  - 0.42000753388996287
  train_matthews_corrcoef_weighted_oob:
  - 0.30420207250457654
  - 0.3372284453786697
  - 0.3463086806332704
  - 0.2720496482271447
  - 0.2983005054957699
  train_ndgc:
  - 0.8756321037228002
  - 0.8607897342531672
  - 0.8646363405718465
  - 0.8780576995487034
  - 0.862307547960783
  train_ndgc_oob:
  - 0.8241865754019484
  - 0.8287483597612452
  - 0.8291195590727743
  - 0.8467800465113369
  - 0.8231744841658752
  train_neg_coverage_error:
  - -1.7751479289940828
  - -1.8303030303030303
  - -1.8580246913580247
  - -1.7857142857142858
  - -1.853658536585366
  train_neg_coverage_error_oob:
  - -2.059171597633136
  - -2.012121212121212
  - -2.0617283950617282
  - -1.9166666666666667
  - -2.1219512195121952
  train_neg_hamming_loss_macro:
  - -0.1351084812623274
  - -0.1383838383838384
  - -0.13991769547325103
  - -0.125
  - -0.14024390243902438
  train_neg_hamming_loss_macro_oob:
  - -0.15779092702169628
  - -0.15353535353535352
  - -0.154320987654321
  - -0.16666666666666666
  - -0.16463414634146342
  train_neg_hamming_loss_micro:
  - -0.1351084812623274
  - -0.1383838383838384
  - -0.13991769547325103
  - -0.125
  - -0.1402439024390244
  train_neg_hamming_loss_micro_oob:
  - -0.15779092702169625
  - -0.15353535353535352
  - -0.15432098765432098
  - -0.16666666666666666
  - -0.16463414634146342
  train_neg_hamming_loss_samples:
  - -0.1351084812623274
  - -0.1383838383838384
  - -0.139917695473251
  - -0.125
  - -0.14024390243902438
  train_neg_hamming_loss_samples_oob:
  - -0.15779092702169623
  - -0.15353535353535355
  - -0.15432098765432098
  - -0.16666666666666666
  - -0.16463414634146342
  train_neg_hamming_loss_weighted:
  - -0.18310812799905796
  - -0.18498417005879694
  - -0.18637697103043635
  - -0.1765971239981141
  - -0.19204298478628354
  train_neg_hamming_loss_weighted_oob:
  - -0.22917954605669877
  - -0.21558872305140964
  - -0.21568267937904903
  - -0.24540311173974544
  - -0.23934436126539485
  train_neg_label_ranking_loss:
  - -0.10953320184089416
  - -0.11749158249158251
  - -0.11982167352537723
  - -0.11390542328042329
  - -0.12125677506775066
  train_neg_label_ranking_loss_oob:
  - -0.16692965154503617
  - -0.15513468013468013
  - -0.16124828532235938
  - -0.14135251322751324
  - -0.17544037940379406
  train_precision_macro:
  - 0.8648915187376724
  - 0.8616161616161616
  - 0.8600823045267489
  - 0.875
  - 0.8597560975609756
  train_precision_macro_oob:
  - 0.8422090729783038
  - 0.8464646464646465
  - 0.8456790123456791
  - 0.8333333333333335
  - 0.8353658536585366
  train_precision_micro:
  - 0.8648915187376726
  - 0.8616161616161616
  - 0.8600823045267489
  - 0.875
  - 0.8597560975609756
  train_precision_micro_oob:
  - 0.8422090729783037
  - 0.8464646464646465
  - 0.845679012345679
  - 0.8333333333333334
  - 0.8353658536585366
  train_precision_samples:
  - 0.8648915187376726
  - 0.8616161616161616
  - 0.860082304526749
  - 0.875
  - 0.8597560975609756
  train_precision_samples_oob:
  - 0.8422090729783036
  - 0.8464646464646464
  - 0.845679012345679
  - 0.8333333333333334
  - 0.8353658536585366
  train_precision_weighted:
  - 0.816891872000942
  - 0.815015829941203
  - 0.8136230289695636
  - 0.823402876001886
  - 0.8079570152137164
  train_precision_weighted_oob:
  - 0.7708204539433011
  - 0.7844112769485904
  - 0.784317320620951
  - 0.7545968882602547
  - 0.7606556387346051
  train_recall_macro:
  - 0.8648915187376724
  - 0.8616161616161616
  - 0.8600823045267489
  - 0.875
  - 0.8597560975609756
  train_recall_macro_oob:
  - 0.8422090729783038
  - 0.8464646464646465
  - 0.8456790123456791
  - 0.8333333333333335
  - 0.8353658536585366
  train_recall_micro:
  - 0.8648915187376726
  - 0.8616161616161616
  - 0.8600823045267489
  - 0.875
  - 0.8597560975609756
  train_recall_micro_oob:
  - 0.8422090729783037
  - 0.8464646464646465
  - 0.845679012345679
  - 0.8333333333333334
  - 0.8353658536585366
  train_recall_samples:
  - 0.8648915187376726
  - 0.8616161616161616
  - 0.860082304526749
  - 0.875
  - 0.8597560975609756
  train_recall_samples_oob:
  - 0.8422090729783036
  - 0.8464646464646464
  - 0.845679012345679
  - 0.8333333333333334
  - 0.8353658536585366
  train_recall_weighted:
  - 0.816891872000942
  - 0.815015829941203
  - 0.8136230289695636
  - 0.823402876001886
  - 0.8079570152137164
  train_recall_weighted_oob:
  - 0.7708204539433011
  - 0.7844112769485904
  - 0.784317320620951
  - 0.7545968882602547
  - 0.7606556387346051
  train_roc_auc_macro:
  - 0.8408411474123275
  - 0.8444952116356289
  - 0.8099418760044347
  - 0.8374324068831759
  - 0.838330718417465
  train_roc_auc_macro_oob:
  - 0.7581858577885784
  - 0.8013348960892119
  - 0.782808096433263
  - 0.7930933265682838
  - 0.7595189230038376
  train_roc_auc_micro:
  - 0.8938823716595374
  - 0.8928109768016698
  - 0.8796836826539797
  - 0.8929870034149817
  - 0.8926084424299208
  train_roc_auc_micro_oob:
  - 0.8520986702404338
  - 0.8587480846716985
  - 0.8525073935965025
  - 0.866391912144068
  - 0.8558089184877569
  train_roc_auc_samples:
  - 0.8904667981591058
  - 0.8825084175084175
  - 0.8801783264746227
  - 0.8860945767195768
  - 0.8787432249322493
  train_roc_auc_samples_oob:
  - 0.8330703484549639
  - 0.8448653198653199
  - 0.8387517146776405
  - 0.8586474867724869
  - 0.8245596205962058
  train_roc_auc_weighted:
  - 0.8129450903868243
  - 0.7903285869087308
  - 0.7662193715583749
  - 0.8003068875849885
  - 0.8070504320192347
  train_roc_auc_weighted_oob:
  - 0.7710111925089006
  - 0.7782604139802145
  - 0.7527507416915838
  - 0.7842138380193625
  - 0.7836850145569629
start: 2023-12-21 12:42:37.543005
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
