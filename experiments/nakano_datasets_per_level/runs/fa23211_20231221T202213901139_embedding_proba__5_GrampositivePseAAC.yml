active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmpmZmZnpP4CZmZmZmQHAAJqZmZmZ6T8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:22:50.686010
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__5
  params: {}
hash: fa23211d7600b0bcc37cf23c4d87cf971a5597d6e80e156b6e3672b8b2436e10
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fa23211_20231221T202213901139_embedding_proba__5_GrampositivePseAAC.yml
results:
  fit_time:
  - 19.60337805747986
  - 19.645374298095703
  - 18.841383457183838
  - 20.094335079193115
  - 19.77941393852234
  score_time:
  - 4.86713981628418
  - 4.8509063720703125
  - 4.839159250259399
  - 4.866830587387085
  - 4.76956582069397
  test_average_precision_macro:
  - 0.3463741229910039
  - 0.30655360274066
  - 0.4252868920918039
  - 0.4062159155476756
  - 0.4863955746761355
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4756333709365082
  - 0.37929680800051896
  - 0.5492551887711592
  - 0.49754356886492923
  - 0.5253796753649763
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6674757281553396
  - 0.6423948220064722
  - 0.7562893081761005
  - 0.7184466019417475
  - 0.7315705128205128
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4536237275992786
  - 0.37348649766920494
  - 0.5380827795354116
  - 0.49454226574144766
  - 0.5212424252816239
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7524271844660195
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7524271844660194
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7524271844660194
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6748044113488548
  - 0.6767176997759522
  - 0.676931292274831
  - 0.674618585298197
  - 0.6797619047619048
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6246891335643572
  - 0.6203715198865883
  - 0.6203929674207407
  - 0.6172034588629662
  - 0.6268191666658375
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.603112840466926
  - 0.6
  - 0.6
  - 0.5968992248062015
  - 0.6061776061776062
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.603883495145631
  - 0.601294498381877
  - 0.5999999999999999
  - 0.598705501618123
  - 0.6089743589743588
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5152294797285851
  - 0.5183709946323282
  - 0.5184281303170373
  - 0.5156450524191758
  - 0.5200653621966473
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.66747572815534
  - 0.6423948220064728
  - 0.7562893081761004
  - 0.7184466019417475
  - 0.7315705128205129
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.030439943302418022
  - 0.03450327796711771
  - 0.0
  - 0.029831850580494604
  - 0.0523493325333785
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0854357657716761
  - 0.08488633392626585
  - 0.0
  - 0.08434389003018909
  - 0.14668008282191813
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.009708737864077669
  - 0.009708737864077669
  - 0.0
  - 0.009708737864077669
  - 0.028846153846153848
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.048467482539772386
  - 0.046446720340350765
  - 0.0
  - 0.047730960928791366
  - 0.0837589320534056
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7522503086262798
  - 0.7341830738930851
  - 0.8180951762305001
  - 0.790912613861173
  - 0.799963492952674
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8640776699029127
  - -1.9514563106796117
  - -1.6603773584905661
  - -1.7378640776699028
  - -1.7115384615384615
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24757281553398058
  - -0.25
  - -0.25
  - -0.2524271844660194
  - -0.2451923076923077
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24757281553398058
  - -0.25
  - -0.25
  - -0.2524271844660194
  - -0.24519230769230768
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24757281553398058
  - -0.25
  - -0.25
  - -0.2524271844660194
  - -0.24519230769230768
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3251955886511453
  - -0.3232823002240478
  - -0.3230687077251691
  - -0.3253814147018031
  - -0.3202380952380952
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.28802588996763756
  - -0.3122977346278318
  - -0.220125786163522
  - -0.24029126213592233
  - -0.233974358974359
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7524271844660195
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7524271844660194
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7524271844660194
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6748044113488548
  - 0.6767176997759522
  - 0.676931292274831
  - 0.674618585298197
  - 0.6797619047619048
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7524271844660195
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7524271844660194
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7524271844660194
  - 0.75
  - 0.75
  - 0.7475728155339806
  - 0.7548076923076923
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6748044113488548
  - 0.6767176997759522
  - 0.676931292274831
  - 0.674618585298197
  - 0.6797619047619048
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5700420146795684
  - 0.5540037579960215
  - 0.649320756602067
  - 0.7022283275890042
  - 0.6453334135504148
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7408489647154932
  - 0.6728896103896104
  - 0.7719532455203513
  - 0.7646657360012409
  - 0.7642933700811514
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7119741100323624
  - 0.6877022653721683
  - 0.779874213836478
  - 0.7597087378640777
  - 0.7660256410256411
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6032815641251723
  - 0.5112144429715527
  - 0.6749110587532816
  - 0.6590545907723385
  - 0.6456837645244556
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7784121004455198
  - 0.7726202459229711
  - 0.7528317437407974
  - 0.7525275839436913
  - 0.776417794187696
  train_average_precision_macro_oob:
  - 0.735567499568691
  - 0.7383161550826851
  - 0.6757074317488119
  - 0.6573380922332226
  - 0.666692177109407
  train_average_precision_micro:
  - 0.8174557548583357
  - 0.8357248673538336
  - 0.8240592201948306
  - 0.8132646907882213
  - 0.8251820861012362
  train_average_precision_micro_oob:
  - 0.7920363828194857
  - 0.811547616239942
  - 0.8066539965058133
  - 0.7960327714977535
  - 0.7919039990254012
  train_average_precision_samples:
  - 0.8335336538461539
  - 0.8467548076923077
  - 0.839588377723971
  - 0.8269230769230769
  - 0.8349397590361446
  train_average_precision_samples_oob:
  - 0.8092948717948717
  - 0.8339342948717948
  - 0.8355528652138822
  - 0.8153044871794871
  - 0.813855421686747
  train_average_precision_weighted:
  - 0.8121365254424995
  - 0.8284219706186351
  - 0.8129553242210464
  - 0.8078310431854304
  - 0.8180176992340212
  train_average_precision_weighted_oob:
  - 0.7939311228199489
  - 0.8138026609678591
  - 0.7970598223001735
  - 0.7903285580963365
  - 0.7854396930287243
  train_f1_macro:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200969
  - 0.8671875
  - 0.8668674698795181
  train_f1_macro_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_f1_micro:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200968
  - 0.8671875
  - 0.8668674698795181
  train_f1_micro_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_f1_samples:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200968
  - 0.8671875
  - 0.8668674698795181
  train_f1_samples_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_f1_weighted:
  - 0.8347928113553114
  - 0.833606801909308
  - 0.8329472015607854
  - 0.8322138387927862
  - 0.8324609442554909
  train_f1_weighted_oob:
  - 0.8118589743589743
  - 0.8066997888746099
  - 0.810493493824795
  - 0.8006532940743467
  - 0.8117887819219461
  train_jaccard_macro:
  - 0.772811959928229
  - 0.7731006149374867
  - 0.7726400666620137
  - 0.7712700974696104
  - 0.7706721610383571
  train_jaccard_macro_oob:
  - 0.7435178386781646
  - 0.739605330337767
  - 0.7460818160365185
  - 0.7348847964259877
  - 0.7470370867265237
  train_jaccard_micro:
  - 0.7673924588422729
  - 0.7673924588422729
  - 0.7668449197860963
  - 0.7655172413793103
  - 0.7650186071238703
  train_jaccard_micro_oob:
  - 0.7369519832985386
  - 0.7324310255075481
  - 0.7389473684210527
  - 0.7270368448365335
  - 0.740041928721174
  train_jaccard_samples:
  - 0.7897435897435897
  - 0.7897435897435897
  - 0.789184826472962
  - 0.7878205128205127
  - 0.7869879518072288
  train_jaccard_samples_oob:
  - 0.7580128205128204
  - 0.753525641025641
  - 0.7604519774011298
  - 0.7477564102564102
  - 0.7609638554216867
  train_jaccard_weighted:
  - 0.7184203039313637
  - 0.7167353066618591
  - 0.7158588234744571
  - 0.7146249738734589
  - 0.7151653905623512
  train_jaccard_weighted_oob:
  - 0.6848349388416423
  - 0.6776187541481502
  - 0.6833845777518381
  - 0.669675850971969
  - 0.6855016537884706
  train_label_ranking_average_precision_score:
  - 0.8335336538461533
  - 0.8467548076923072
  - 0.8395883777239704
  - 0.8269230769230764
  - 0.8349397590361441
  train_label_ranking_average_precision_score_oob:
  - 0.8092948717948713
  - 0.8339342948717943
  - 0.8355528652138814
  - 0.8153044871794867
  - 0.8138554216867468
  train_matthews_corrcoef_macro:
  - 0.47249008581475216
  - 0.47134400391925013
  - 0.47152329443833063
  - 0.46733184623066454
  - 0.4687874768981979
  train_matthews_corrcoef_macro_oob:
  - 0.4159880899155848
  - 0.4071406105273669
  - 0.42403012272860385
  - 0.3992958189948013
  - 0.4271908925140102
  train_matthews_corrcoef_micro:
  - 0.6379129381877693
  - 0.6371212988392724
  - 0.6368823044974848
  - 0.632687037082966
  - 0.632533610186976
  train_matthews_corrcoef_micro_oob:
  - 0.5767324517101625
  - 0.566109190075201
  - 0.5809492937845233
  - 0.553340055702796
  - 0.5822426079507944
  train_matthews_corrcoef_samples:
  - 0.480125122133579
  - 0.4787372609095655
  - 0.4787700988076728
  - 0.47254170737785967
  - 0.4716434959218527
  train_matthews_corrcoef_samples_oob:
  - 0.4007981990566559
  - 0.3884070919932443
  - 0.4071542385917173
  - 0.37259615384615385
  - 0.4065832549579973
  train_matthews_corrcoef_weighted:
  - 0.6048849728299757
  - 0.6045014460200346
  - 0.6040847727132704
  - 0.6000934722034877
  - 0.5994683608918148
  train_matthews_corrcoef_weighted_oob:
  - 0.5425923255765679
  - 0.5323894239027794
  - 0.5481062463988182
  - 0.5200618813539097
  - 0.5492781754513398
  train_ndgc:
  - 0.8763237893735091
  - 0.8859579962629527
  - 0.8806536627096794
  - 0.87123514747251
  - 0.8772569931284457
  train_ndgc_oob:
  - 0.8581941310793515
  - 0.8762593216025786
  - 0.8774669209963735
  - 0.8623558156390806
  - 0.8616602689526904
  train_neg_coverage_error:
  - -1.4326923076923077
  - -1.4254807692307692
  - -1.4334140435835352
  - -1.4543269230769231
  - -1.4265060240963856
  train_neg_coverage_error_oob:
  - -1.5096153846153846
  - -1.4615384615384615
  - -1.460048426150121
  - -1.5048076923076923
  - -1.4987951807228916
  train_neg_hamming_loss_macro:
  - -0.13161057692307693
  - -0.13161057692307693
  - -0.13196125907990316
  - -0.1328125
  - -0.13313253012048193
  train_neg_hamming_loss_macro_oob:
  - -0.15144230769230768
  - -0.1544471153846154
  - -0.15012106537530268
  - -0.15805288461538464
  - -0.1493975903614458
  train_neg_hamming_loss_micro:
  - -0.13161057692307693
  - -0.13161057692307693
  - -0.13196125907990314
  - -0.1328125
  - -0.13313253012048193
  train_neg_hamming_loss_micro_oob:
  - -0.15144230769230768
  - -0.1544471153846154
  - -0.15012106537530268
  - -0.1580528846153846
  - -0.1493975903614458
  train_neg_hamming_loss_samples:
  - -0.13161057692307693
  - -0.13161057692307693
  - -0.13196125907990314
  - -0.1328125
  - -0.13313253012048193
  train_neg_hamming_loss_samples_oob:
  - -0.15144230769230768
  - -0.1544471153846154
  - -0.15012106537530268
  - -0.1580528846153846
  - -0.1493975903614458
  train_neg_hamming_loss_weighted:
  - -0.16520718864468864
  - -0.1663931980906921
  - -0.16705279843921475
  - -0.16778616120721385
  - -0.16753905574450914
  train_neg_hamming_loss_weighted_oob:
  - -0.18814102564102564
  - -0.19330021112539011
  - -0.18950650617520512
  - -0.1993467059256533
  - -0.18821121807805383
  train_neg_label_ranking_loss:
  - -0.140625
  - -0.13882211538461536
  - -0.14083938660209847
  - -0.14943910256410256
  - -0.1395582329317269
  train_neg_label_ranking_loss_oob:
  - -0.16606570512820512
  - -0.15104166666666669
  - -0.15012106537530268
  - -0.16626602564102566
  - -0.16305220883534136
  train_precision_macro:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200969
  - 0.8671875
  - 0.8668674698795181
  train_precision_macro_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_precision_micro:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200968
  - 0.8671875
  - 0.8668674698795181
  train_precision_micro_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_precision_samples:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200968
  - 0.8671875
  - 0.8668674698795181
  train_precision_samples_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_precision_weighted:
  - 0.8347928113553114
  - 0.833606801909308
  - 0.8329472015607854
  - 0.8322138387927862
  - 0.8324609442554909
  train_precision_weighted_oob:
  - 0.8118589743589743
  - 0.8066997888746099
  - 0.810493493824795
  - 0.8006532940743467
  - 0.8117887819219461
  train_recall_macro:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200969
  - 0.8671875
  - 0.8668674698795181
  train_recall_macro_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_recall_micro:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200968
  - 0.8671875
  - 0.8668674698795181
  train_recall_micro_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_recall_samples:
  - 0.8683894230769231
  - 0.8683894230769231
  - 0.8680387409200968
  - 0.8671875
  - 0.8668674698795181
  train_recall_samples_oob:
  - 0.8485576923076923
  - 0.8455528846153846
  - 0.8498789346246973
  - 0.8419471153846154
  - 0.8506024096385543
  train_recall_weighted:
  - 0.8347928113553114
  - 0.833606801909308
  - 0.8329472015607854
  - 0.8322138387927862
  - 0.8324609442554909
  train_recall_weighted_oob:
  - 0.8118589743589743
  - 0.8066997888746099
  - 0.810493493824795
  - 0.8006532940743467
  - 0.8117887819219461
  train_roc_auc_macro:
  - 0.8743853852173034
  - 0.8792104154616572
  - 0.8672197507089054
  - 0.8633123016022625
  - 0.8685386899503669
  train_roc_auc_macro_oob:
  - 0.8524108417353611
  - 0.8580132906860606
  - 0.848657621427501
  - 0.8446348194120669
  - 0.8386898319283421
  train_roc_auc_micro:
  - 0.9038106721788394
  - 0.9107379398261304
  - 0.8963368576393944
  - 0.8959522145506771
  - 0.9054060821795376
  train_roc_auc_micro_oob:
  - 0.8842539427346501
  - 0.8902205480633751
  - 0.8823658482121185
  - 0.8780902716443817
  - 0.8795159836349767
  train_roc_auc_samples:
  - 0.859375
  - 0.8611778846153846
  - 0.8591606133979016
  - 0.8505608974358974
  - 0.860441767068273
  train_roc_auc_samples_oob:
  - 0.8339342948717949
  - 0.8489583333333333
  - 0.8498789346246973
  - 0.8337339743589745
  - 0.8369477911646587
  train_roc_auc_weighted:
  - 0.8631441177411467
  - 0.8802009994326647
  - 0.8591008986570832
  - 0.855549710616134
  - 0.8670056849523161
  train_roc_auc_weighted_oob:
  - 0.8427913117270557
  - 0.8610572787771682
  - 0.8453547616876038
  - 0.8370349603197456
  - 0.8428583164817157
start: 2023-12-21 20:22:13.901139
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
