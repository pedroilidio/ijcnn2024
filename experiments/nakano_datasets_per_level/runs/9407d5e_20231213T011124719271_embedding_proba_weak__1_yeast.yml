active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wMzMzMzMDMCAZmZmZmb2P4BmZmZmZvY/ADMzMzMz47+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T+AZmZmZmb2P4BmZmZmZvY/gGZmZmZm9j9gZmZmZmYSwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzC0BgZmZmZmYWwNDMzMzMzCBAwMzMzMzMBMDAzMzMzMwMwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmEkA0MzMzMzMjQGBmZmZmZva/YGZmZmZm9r/MzMzMzMwmwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z9gZmZmZmb2vw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz879kZmZmZmYgwHBmZmZmZg5AODMzMzMzG0AgMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AzczMzMz8PwCYmZmZmcm/ADMzMzMz878AmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/0MzMzMzM/D+YmZmZmZkBwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMKECAzMzMzMwMwACZmZmZmfm/kJmZmZmZMcDgzMzMzMwkQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:14:37.718762
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 9407d5eb2cb3bb5b2a6dc7abcedcecd1dfd97b007362055ef4afdfb377ae1749
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9407d5e_20231213T011124719271_embedding_proba_weak__1_yeast.yml
results:
  fit_time:
  - 131.26985573768616
  - 130.64432501792908
  - 116.20874762535095
  - 131.78521537780762
  - 124.8651192188263
  score_time:
  - 7.741729497909546
  - 7.275040864944458
  - 12.445433855056763
  - 11.222524166107178
  - 9.612762689590454
  test_average_precision_macro:
  - 0.5332000183058865
  - 0.5397067883776431
  - 0.5104538603209112
  - 0.5141090198087883
  - 0.5262286344168702
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7431981311555824
  - 0.7183552043637474
  - 0.7289723283987626
  - 0.7112314926918518
  - 0.7239652130697349
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7757228596971165
  - 0.7624130180485905
  - 0.7588411990494096
  - 0.7491435775190883
  - 0.7797319082326472
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7024808854650197
  - 0.6925935221159268
  - 0.6857675694312692
  - 0.6792455280897463
  - 0.6765452722507797
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8110403397027601
  - 0.8103549427984748
  - 0.8128129602356408
  - 0.8100940975192471
  - 0.8029296285110238
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8110403397027601
  - 0.8103549427984746
  - 0.8128129602356406
  - 0.8100940975192472
  - 0.8029296285110239
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8110403397027601
  - 0.8103549427984746
  - 0.8128129602356406
  - 0.8100940975192472
  - 0.8029296285110239
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7683067862762243
  - 0.759146705400501
  - 0.7633255278816813
  - 0.7541901024187552
  - 0.7607684529828109
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6904368324116993
  - 0.6904707199450223
  - 0.6941022817348603
  - 0.6909542719080705
  - 0.6791518687665279
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6821428571428572
  - 0.6811737147084207
  - 0.6846545093660836
  - 0.680805176132279
  - 0.6707455531727009
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.706081721405727
  - 0.7039123570528331
  - 0.709266060754363
  - 0.7072110306078901
  - 0.6965995048899113
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6267380911353353
  - 0.6155775921648409
  - 0.6217954014161946
  - 0.6102666232603076
  - 0.6175042996336864
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7757228596971161
  - 0.7624130180485904
  - 0.7588411990494092
  - 0.7491435775190881
  - 0.7797319082326475
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21338296897584913
  - 0.22628992980545665
  - 0.2345585445338332
  - 0.21342810632464473
  - 0.21653615512189908
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.538802180346781
  - 0.5273660829879249
  - 0.5345255520561907
  - 0.5205025709799951
  - 0.5205273109912735
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5454310553597064
  - 0.5307631567530422
  - 0.5314713832585706
  - 0.5160952540279353
  - 0.5287625043095576
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23778262357917798
  - 0.24882757854860113
  - 0.2538399594561442
  - 0.23149314445294752
  - 0.23763409379856593
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8656506301343118
  - 0.8523088219081848
  - 0.849891225385033
  - 0.8413215292409777
  - 0.8703947137055863
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.065817409766455
  - -6.921971252566735
  - -7.0597938144329895
  - -6.918163672654691
  - -7.2431289640591965
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18895966029723993
  - -0.18964505720152539
  - -0.18718703976435935
  - -0.18990590248075276
  - -0.19707037148897613
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18895966029723993
  - -0.18964505720152539
  - -0.18718703976435935
  - -0.1899059024807528
  - -0.19707037148897613
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18895966029723993
  - -0.18964505720152536
  - -0.18718703976435933
  - -0.18990590248075276
  - -0.1970703714889761
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23169321372377577
  - -0.24085329459949906
  - -0.2366744721183185
  - -0.24580989758124477
  - -0.23923154701718907
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15764628826503257
  - -0.15901989865028882
  - -0.1673843882349037
  - -0.1699673627389624
  - -0.15880392971906107
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8110403397027601
  - 0.8103549427984748
  - 0.8128129602356408
  - 0.8100940975192471
  - 0.8029296285110238
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8110403397027601
  - 0.8103549427984746
  - 0.8128129602356406
  - 0.8100940975192472
  - 0.8029296285110239
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8110403397027601
  - 0.8103549427984746
  - 0.8128129602356406
  - 0.8100940975192472
  - 0.8029296285110239
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7683067862762243
  - 0.759146705400501
  - 0.7633255278816813
  - 0.7541901024187552
  - 0.7607684529828109
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8110403397027601
  - 0.8103549427984748
  - 0.8128129602356408
  - 0.8100940975192471
  - 0.8029296285110238
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8110403397027601
  - 0.8103549427984746
  - 0.8128129602356406
  - 0.8100940975192472
  - 0.8029296285110239
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8110403397027601
  - 0.8103549427984746
  - 0.8128129602356406
  - 0.8100940975192472
  - 0.8029296285110239
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7683067862762243
  - 0.759146705400501
  - 0.7633255278816813
  - 0.7541901024187552
  - 0.7607684529828109
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7247232701732174
  - 0.7298638836804974
  - 0.7116016861030773
  - 0.7342746855831407
  - 0.7198007844932294
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8529602719638096
  - 0.852454635290952
  - 0.8460301245520848
  - 0.849912852350781
  - 0.843719912890655
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8423537117349674
  - 0.8409801013497112
  - 0.8326156117650964
  - 0.8300326372610376
  - 0.841196070280939
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7339983870419753
  - 0.7177881857123417
  - 0.7277156232759452
  - 0.7174265062490723
  - 0.7078744620238417
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9927162550076873
  - 0.9905554170227756
  - 0.9882383285353423
  - 0.9917648030412767
  - 0.9879843492109929
  train_average_precision_macro_oob:
  - 0.9104889486055787
  - 0.9108476101050389
  - 0.9032748362173526
  - 0.9078482973205965
  - 0.9207841811460172
  train_average_precision_micro:
  - 0.9815597863348393
  - 0.9816740530895661
  - 0.9808431370293922
  - 0.9818255271079089
  - 0.9830427129903441
  train_average_precision_micro_oob:
  - 0.8996767328382703
  - 0.9033554815099625
  - 0.9006692184081724
  - 0.9055016632366295
  - 0.9088027860884433
  train_average_precision_samples:
  - 0.9757081170473109
  - 0.9764814588066345
  - 0.9749776651450989
  - 0.9761308071115985
  - 0.9787151453594906
  train_average_precision_samples_oob:
  - 0.8882491490353855
  - 0.8948377514627557
  - 0.891902738128176
  - 0.8958632814853499
  - 0.8920033291204508
  train_average_precision_weighted:
  - 0.993596034138189
  - 0.9933978963412553
  - 0.9923212851173419
  - 0.9932035092726628
  - 0.9931941530760232
  train_average_precision_weighted_oob:
  - 0.9340989966144488
  - 0.935358189629989
  - 0.9313814107585612
  - 0.9347491949062046
  - 0.9427997657435601
  train_f1_macro:
  - 0.9424827484950816
  - 0.9432642487046632
  - 0.9431381248151435
  - 0.9433716075156576
  - 0.9480085243974131
  train_f1_macro_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974131
  train_f1_micro:
  - 0.9424827484950815
  - 0.9432642487046632
  - 0.9431381248151435
  - 0.9433716075156576
  - 0.9480085243974132
  train_f1_micro_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974132
  train_f1_samples:
  - 0.9424827484950815
  - 0.9432642487046632
  - 0.9431381248151436
  - 0.9433716075156576
  - 0.9480085243974133
  train_f1_samples_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974133
  train_f1_weighted:
  - 0.9521521525413652
  - 0.9525321194201241
  - 0.9518899056277011
  - 0.9525537951361424
  - 0.9552892821294621
  train_f1_weighted_oob:
  - 0.872430971851411
  - 0.8803571044654181
  - 0.8726694199593792
  - 0.8805508344873566
  - 0.8798500342222041
  train_jaccard_macro:
  - 0.8922760200685823
  - 0.8936333393636858
  - 0.8933318398093124
  - 0.8937840192140332
  - 0.9019193215287592
  train_jaccard_macro_oob:
  - 0.7858959617433755
  - 0.7921283696545778
  - 0.7875531409487676
  - 0.7926229233907105
  - 0.7966611937968537
  train_jaccard_micro:
  - 0.8912221026691194
  - 0.8926207403775435
  - 0.8923948786119079
  - 0.8928130402568536
  - 0.9011560895532814
  train_jaccard_micro_oob:
  - 0.7835679214402619
  - 0.7897002815035602
  - 0.7853465346534654
  - 0.7902359261854707
  - 0.7945404193590927
  train_jaccard_samples:
  - 0.9020310332892466
  - 0.9033646139121042
  - 0.9028722701895404
  - 0.9031470092706899
  - 0.9112617780127719
  train_jaccard_samples_oob:
  - 0.8031188425760397
  - 0.8083521660360989
  - 0.8047458399308084
  - 0.8086663819500225
  - 0.8131365935791556
  train_jaccard_weighted:
  - 0.909432214427921
  - 0.910049842326687
  - 0.9088830292059064
  - 0.9101221313627242
  - 0.9148994402193156
  train_jaccard_weighted_oob:
  - 0.7745192528524041
  - 0.7875172719988764
  - 0.7748090589111988
  - 0.7878242048756589
  - 0.7862091318075042
  train_label_ranking_average_precision_score:
  - 0.9757081170473111
  - 0.9764814588066351
  - 0.9749776651450989
  - 0.9761308071115986
  - 0.9787151453594907
  train_label_ranking_average_precision_score_oob:
  - 0.8882491490353881
  - 0.8948377514627569
  - 0.8919027381281781
  - 0.8958632814853513
  - 0.8920033291204523
  train_matthews_corrcoef_macro:
  - 0.6621390507278769
  - 0.6667820883303293
  - 0.6714516208841479
  - 0.672969928048852
  - 0.6866841657603988
  train_matthews_corrcoef_macro_oob:
  - 0.43850370437443054
  - 0.4506530904123767
  - 0.45976049028249644
  - 0.45579042312018964
  - 0.46010255048142146
  train_matthews_corrcoef_micro:
  - 0.862731608710856
  - 0.8653564055078946
  - 0.86498412668738
  - 0.8662603065602915
  - 0.8757981550352808
  train_matthews_corrcoef_micro_oob:
  - 0.7024149665986813
  - 0.7143998776733647
  - 0.707002047108673
  - 0.7166261800078889
  - 0.7197354122453228
  train_matthews_corrcoef_samples:
  - 0.8570471117805184
  - 0.8609752882561479
  - 0.8613106203982636
  - 0.8601040239531683
  - 0.8707310961476682
  train_matthews_corrcoef_samples_oob:
  - 0.6948684140161772
  - 0.7062717250659648
  - 0.7009516861061477
  - 0.7084822339702967
  - 0.7064573212892591
  train_matthews_corrcoef_weighted:
  - 0.8387188996606686
  - 0.8402052113990073
  - 0.8417089827046838
  - 0.8430676997039765
  - 0.8534185671242553
  train_matthews_corrcoef_weighted_oob:
  - 0.6098018392802937
  - 0.6307832466034644
  - 0.6176818064144034
  - 0.6330886723222259
  - 0.6340199263942354
  train_ndgc:
  - 0.9865618603496289
  - 0.9868154622970503
  - 0.9867756773678052
  - 0.9869308163807666
  - 0.9881713279149338
  train_ndgc_oob:
  - 0.9334605003353809
  - 0.9384574125887039
  - 0.9363232360062087
  - 0.9387410064832389
  - 0.934571534046366
  train_neg_coverage_error:
  - -4.477903391572457
  - -4.491709844559585
  - -4.527432712215321
  - -4.538100208768268
  - -4.43724279835391
  train_neg_coverage_error_oob:
  - -5.450668036998972
  - -5.463730569948186
  - -5.521221532091097
  - -5.492693110647181
  - -5.343621399176954
  train_neg_hamming_loss_macro:
  - -0.05751725150491851
  - -0.05673575129533679
  - -0.05686187518485654
  - -0.05662839248434238
  - -0.051991475602586705
  train_neg_hamming_loss_macro_oob:
  - -0.12134781970342093
  - -0.11750555144337528
  - -0.1202307009760426
  - -0.1171711899791232
  - -0.1144914756025867
  train_neg_hamming_loss_micro:
  - -0.057517251504918515
  - -0.05673575129533679
  - -0.05686187518485655
  - -0.05662839248434238
  - -0.05199147560258671
  train_neg_hamming_loss_micro_oob:
  - -0.12134781970342094
  - -0.11750555144337528
  - -0.12023070097604259
  - -0.11717118997912317
  - -0.11449147560258671
  train_neg_hamming_loss_samples:
  - -0.05751725150491851
  - -0.05673575129533678
  - -0.056861875184856546
  - -0.05662839248434237
  - -0.051991475602586705
  train_neg_hamming_loss_samples_oob:
  - -0.12134781970342091
  - -0.11750555144337527
  - -0.12023070097604258
  - -0.11717118997912314
  - -0.11449147560258668
  train_neg_hamming_loss_weighted:
  - -0.04784784745863479
  - -0.04746788057987584
  - -0.04811009437229896
  - -0.047446204863857526
  - -0.04471071787053783
  train_neg_hamming_loss_weighted_oob:
  - -0.1275690281485889
  - -0.11964289553458173
  - -0.12733058004062076
  - -0.1194491655126435
  - -0.12014996577779591
  train_neg_label_ranking_loss:
  - -0.011924150662955539
  - -0.011054111814659557
  - -0.012530866570906497
  - -0.011351721252369926
  - -0.010136449708760114
  train_neg_label_ranking_loss_oob:
  - -0.06357368069946986
  - -0.06024075141488169
  - -0.06296910402112264
  - -0.06076577658183682
  - -0.05867442752638961
  train_precision_macro:
  - 0.9424827484950816
  - 0.9432642487046632
  - 0.9431381248151435
  - 0.9433716075156576
  - 0.9480085243974131
  train_precision_macro_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974131
  train_precision_micro:
  - 0.9424827484950815
  - 0.9432642487046632
  - 0.9431381248151435
  - 0.9433716075156576
  - 0.9480085243974132
  train_precision_micro_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974132
  train_precision_samples:
  - 0.9424827484950815
  - 0.9432642487046632
  - 0.9431381248151436
  - 0.9433716075156576
  - 0.9480085243974133
  train_precision_samples_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974133
  train_precision_weighted:
  - 0.9521521525413652
  - 0.9525321194201241
  - 0.9518899056277011
  - 0.9525537951361424
  - 0.9552892821294621
  train_precision_weighted_oob:
  - 0.872430971851411
  - 0.8803571044654181
  - 0.8726694199593792
  - 0.8805508344873566
  - 0.8798500342222041
  train_recall_macro:
  - 0.9424827484950816
  - 0.9432642487046632
  - 0.9431381248151435
  - 0.9433716075156576
  - 0.9480085243974131
  train_recall_macro_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974131
  train_recall_micro:
  - 0.9424827484950815
  - 0.9432642487046632
  - 0.9431381248151435
  - 0.9433716075156576
  - 0.9480085243974132
  train_recall_micro_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974132
  train_recall_samples:
  - 0.9424827484950815
  - 0.9432642487046632
  - 0.9431381248151436
  - 0.9433716075156576
  - 0.9480085243974133
  train_recall_samples_oob:
  - 0.8786521802965791
  - 0.8824944485566247
  - 0.8797692990239574
  - 0.8828288100208769
  - 0.8855085243974133
  train_recall_weighted:
  - 0.9521521525413652
  - 0.9525321194201241
  - 0.9518899056277011
  - 0.9525537951361424
  - 0.9552892821294621
  train_recall_weighted_oob:
  - 0.872430971851411
  - 0.8803571044654181
  - 0.8726694199593792
  - 0.8805508344873566
  - 0.8798500342222041
  train_roc_auc_macro:
  - 0.9971635817052693
  - 0.997002145165573
  - 0.9969932985652742
  - 0.9970975467368204
  - 0.9972396979507232
  train_roc_auc_macro_oob:
  - 0.96311319978159
  - 0.9617721316550875
  - 0.9619434470658295
  - 0.9626631335413752
  - 0.9650694467826251
  train_roc_auc_micro:
  - 0.9918167636904798
  - 0.9919103784122109
  - 0.9913392319210416
  - 0.9917518178020022
  - 0.9925099553103862
  train_roc_auc_micro_oob:
  - 0.9487501321304815
  - 0.9497573140102124
  - 0.9482777343032124
  - 0.9503279615514092
  - 0.9531669143853748
  train_roc_auc_samples:
  - 0.9880758493370445
  - 0.9889458881853405
  - 0.9874691334290936
  - 0.9886482787476302
  - 0.9898635502912398
  train_roc_auc_samples_oob:
  - 0.9364263193005301
  - 0.9397592485851184
  - 0.9370308959788773
  - 0.9392342234181632
  - 0.9413255724736105
  train_roc_auc_weighted:
  - 0.9963892404654712
  - 0.9961876348447537
  - 0.996410290828435
  - 0.9963944431665772
  - 0.9966142796375568
  train_roc_auc_weighted_oob:
  - 0.9597316628165439
  - 0.9575139885611182
  - 0.9584980834110755
  - 0.9591136241592921
  - 0.961586764110966
start: 2023-12-13 01:11:24.719271
wrapper: null
