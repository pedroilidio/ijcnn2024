active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwEAzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzC8BwZmZmZmYaQJCZmZmZmRHA4MzMzMzMDEAgMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:57:01.525722
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__7
  params: {}
hash: 838a7a968d0fa6959496daff3c31b5b18a6f9922c3201bfa51c87f6f43bf88ca
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/838a7a9_20231222T025231969692_embedding_proba_weak__7_emotions.yml
results:
  fit_time:
  - 243.83210134506226
  - 241.9518985748291
  - 245.1241807937622
  - 247.77627038955688
  - 242.87536215782166
  score_time:
  - 6.811571359634399
  - 6.57610297203064
  - 7.4555370807647705
  - 7.041972637176514
  - 7.039297103881836
  test_average_precision_macro:
  - 0.7151639509585888
  - 0.718627514344977
  - 0.6491801978084795
  - 0.752768015707873
  - 0.6266490276932651
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6506438044884258
  - 0.7044225473869217
  - 0.612722468682771
  - 0.7174525862130793
  - 0.6205349868366836
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8081967213114754
  - 0.8490079365079365
  - 0.7784552845528455
  - 0.7996376811594204
  - 0.72688246097337
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6965256946087426
  - 0.7303500243274715
  - 0.6421006995207306
  - 0.7572389562978172
  - 0.6291048579201958
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8128415300546449
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.8086956521739131
  - 0.7327823691460056
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8128415300546448
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.808695652173913
  - 0.7327823691460055
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8128415300546449
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.808695652173913
  - 0.7327823691460056
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8030571555161721
  - 0.8127402306213964
  - 0.7710701541404554
  - 0.8085765336509827
  - 0.7312011266352887
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.690017218421992
  - 0.684998086167884
  - 0.6356685800124001
  - 0.6840666801775646
  - 0.5845517415431072
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6846950517836594
  - 0.6779026217228464
  - 0.630939226519337
  - 0.6788321167883211
  - 0.5782608695652174
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.715534738485558
  - 0.7159863945578232
  - 0.6736423468130784
  - 0.7187201204592508
  - 0.6196415155092841
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6766298322069797
  - 0.6913437775533825
  - 0.631792192236522
  - 0.6831344145056647
  - 0.5816954815930754
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8081967213114751
  - 0.8490079365079364
  - 0.7784552845528453
  - 0.79963768115942
  - 0.7268824609733702
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5779942623237269
  - 0.5741803078580997
  - 0.4893444321548039
  - 0.5775972771432042
  - 0.39786855908162183
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5866828645970039
  - 0.5860022144347256
  - 0.5052254248918905
  - 0.5838390173868875
  - 0.40685850848850424
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6009423245225265
  - 0.5960820721100962
  - 0.5109430496928022
  - 0.5761199419630019
  - 0.40064780715238063
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.568292038564543
  - 0.5892316990599218
  - 0.49418989873465535
  - 0.5839492587741376
  - 0.40425171319169306
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8630579787880833
  - 0.9003906932613618
  - 0.8458177902613869
  - 0.861135885002402
  - 0.8111033575507985
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.5081967213114753
  - -2.6964285714285716
  - -2.731707317073171
  - -2.739130434782609
  - -3.0826446280991737
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18715846994535515
  - -0.19196428571428573
  - -0.22628726287262876
  - -0.19130434782608696
  - -0.26721763085399447
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1871584699453552
  - -0.19196428571428573
  - -0.22628726287262874
  - -0.19130434782608696
  - -0.26721763085399447
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18715846994535518
  - -0.19196428571428573
  - -0.2262872628726287
  - -0.19130434782608696
  - -0.26721763085399447
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1969428444838281
  - -0.18725976937860345
  - -0.2289298458595446
  - -0.1914234663490173
  - -0.2687988733647111
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13989071038251366
  - -0.12333829365079366
  - -0.1818654019873532
  - -0.15321256038647343
  - -0.23326446280991736
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8128415300546449
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.8086956521739131
  - 0.7327823691460056
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8128415300546448
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.808695652173913
  - 0.7327823691460055
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8128415300546449
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.808695652173913
  - 0.7327823691460056
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8030571555161721
  - 0.8127402306213964
  - 0.7710701541404554
  - 0.8085765336509827
  - 0.7312011266352887
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8128415300546449
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.8086956521739131
  - 0.7327823691460056
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8128415300546448
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.808695652173913
  - 0.7327823691460055
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8128415300546449
  - 0.8080357142857143
  - 0.7737127371273713
  - 0.808695652173913
  - 0.7327823691460056
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8030571555161721
  - 0.8127402306213964
  - 0.7710701541404554
  - 0.8085765336509827
  - 0.7312011266352887
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8561661390120072
  - 0.847218863496214
  - 0.8136900532490374
  - 0.8700283418172724
  - 0.7894569969053092
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8725755166931637
  - 0.8599978027904561
  - 0.8350998188294808
  - 0.880086089055638
  - 0.8044646916706042
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8601092896174862
  - 0.8766617063492063
  - 0.8181345980126468
  - 0.8467874396135266
  - 0.7667355371900827
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8432535527169389
  - 0.8518553796500603
  - 0.8096208836613875
  - 0.8710429049611741
  - 0.790100269201889
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8340322513813145
  - 0.8254649729119294
  - 0.8051048956867848
  - 0.8164636857690227
  - 0.786597711104925
  train_average_precision_macro_oob:
  - 0.8149275316711653
  - 0.8024048485069512
  - 0.7910654195653309
  - 0.7953711649155681
  - 0.776025425817691
  train_average_precision_micro:
  - 0.7805828332004625
  - 0.7806676601343302
  - 0.7732451427923805
  - 0.7874925918543754
  - 0.750222218416868
  train_average_precision_micro_oob:
  - 0.7667761562665234
  - 0.7592832293028594
  - 0.7669945178061498
  - 0.767574058411861
  - 0.7445068949954433
  train_average_precision_samples:
  - 0.8630101439018636
  - 0.8663086163086163
  - 0.8666784869976358
  - 0.8846582984658299
  - 0.8667725988700565
  train_average_precision_samples_oob:
  - 0.8509082330738381
  - 0.8568145068145069
  - 0.8568912529550828
  - 0.8697989307298931
  - 0.8632827212806026
  train_average_precision_weighted:
  - 0.8244521217295853
  - 0.8155041883551155
  - 0.7963039373944384
  - 0.8078222079900993
  - 0.7759879726461936
  train_average_precision_weighted_oob:
  - 0.8059789836336289
  - 0.7924509599382434
  - 0.7848806511432059
  - 0.7878405269339374
  - 0.7668204909655076
  train_f1_macro:
  - 0.894550601556971
  - 0.8866943866943867
  - 0.8801418439716313
  - 0.8866806136680614
  - 0.8806497175141245
  train_f1_macro_oob:
  - 0.8765038924274594
  - 0.8776853776853777
  - 0.8648936170212767
  - 0.8720362622036261
  - 0.8612288135593221
  train_f1_micro:
  - 0.894550601556971
  - 0.8866943866943867
  - 0.8801418439716312
  - 0.8866806136680614
  - 0.8806497175141242
  train_f1_micro_oob:
  - 0.8765038924274593
  - 0.8776853776853777
  - 0.8648936170212767
  - 0.8720362622036262
  - 0.861228813559322
  train_f1_samples:
  - 0.8945506015569711
  - 0.8866943866943867
  - 0.8801418439716312
  - 0.8866806136680613
  - 0.8806497175141244
  train_f1_samples_oob:
  - 0.8765038924274594
  - 0.8776853776853776
  - 0.8648936170212767
  - 0.8720362622036263
  - 0.861228813559322
  train_f1_weighted:
  - 0.8893114405256575
  - 0.8796880322304053
  - 0.8753676029648109
  - 0.880941399061519
  - 0.8756966388968687
  train_f1_weighted_oob:
  - 0.8717943187972375
  - 0.8710713320882812
  - 0.8611360310873372
  - 0.8654992916680394
  - 0.8572369051038974
  train_jaccard_macro:
  - 0.8125576575177264
  - 0.7995069494577841
  - 0.787614705989153
  - 0.7997504334626018
  - 0.7891594956239905
  train_jaccard_macro_oob:
  - 0.7839748216296134
  - 0.7851522457631076
  - 0.7637150923590356
  - 0.7769547624930081
  - 0.7589991774782637
  train_jaccard_micro:
  - 0.8092189500640204
  - 0.7964519140989729
  - 0.7859404686510449
  - 0.7964296899467586
  - 0.7867507886435331
  train_jaccard_micro_oob:
  - 0.7801574803149607
  - 0.7820314912009879
  - 0.7619493908153702
  - 0.7731066460587326
  - 0.7562790697674419
  train_jaccard_samples:
  - 0.8304519259933272
  - 0.8198594198594198
  - 0.8098682877406281
  - 0.820691372783423
  - 0.8096650524616625
  train_jaccard_samples_oob:
  - 0.8041350722879385
  - 0.8061479061479061
  - 0.7894731509625126
  - 0.7988443913130104
  - 0.7824656981436643
  train_jaccard_weighted:
  - 0.8038112608310833
  - 0.7883032932306122
  - 0.7799128085516623
  - 0.7903576305550126
  - 0.7811141339120894
  train_jaccard_weighted_oob:
  - 0.7762080839461311
  - 0.7746588560000287
  - 0.757706607479159
  - 0.7665935568375671
  - 0.7525914058170879
  train_label_ranking_average_precision_score:
  - 0.8630101439018624
  - 0.8663086163086154
  - 0.8666784869976347
  - 0.8846582984658283
  - 0.8667725988700556
  train_label_ranking_average_precision_score_oob:
  - 0.8509082330738371
  - 0.8568145068145058
  - 0.856891252955082
  - 0.8697989307298918
  - 0.8632827212806018
  train_matthews_corrcoef_macro:
  - 0.7818161368282635
  - 0.7589781440017926
  - 0.7473457433707358
  - 0.7605518749784389
  - 0.7507586570059689
  train_matthews_corrcoef_macro_oob:
  - 0.7375566391807103
  - 0.7365467065623467
  - 0.7082041714472574
  - 0.7266599807868935
  - 0.7040969502198688
  train_matthews_corrcoef_micro:
  - 0.7785773945329625
  - 0.7575050266181734
  - 0.7490350002234482
  - 0.7587600154965499
  - 0.7510550691307745
  train_matthews_corrcoef_micro_oob:
  - 0.7349001812634472
  - 0.7360247682984488
  - 0.711813267807203
  - 0.7251296080359882
  - 0.7054860489738775
  train_matthews_corrcoef_samples:
  - 0.7875882799052161
  - 0.7694739514062996
  - 0.7579825758147777
  - 0.7699596458283028
  - 0.7605376617526781
  train_matthews_corrcoef_samples_oob:
  - 0.7449818118242549
  - 0.749198369072703
  - 0.7200092048887248
  - 0.7366384383288341
  - 0.7111615526091617
  train_matthews_corrcoef_weighted:
  - 0.7750423367538484
  - 0.7497466065387131
  - 0.7421757871146022
  - 0.7529911159965024
  - 0.7446371682950191
  train_matthews_corrcoef_weighted_oob:
  - 0.7330135837998801
  - 0.7286682207729424
  - 0.7057475727167302
  - 0.7185810598465036
  - 0.7010305413904858
  train_ndgc:
  - 0.9034968533485099
  - 0.9065042905873906
  - 0.9074132619815212
  - 0.9209419715844026
  - 0.9063634990882731
  train_ndgc_oob:
  - 0.8958675202636313
  - 0.9004347507205048
  - 0.9007765973662173
  - 0.9102142443915306
  - 0.9050880541001749
  train_neg_coverage_error:
  - -2.2951167728237793
  - -2.261954261954262
  - -2.3170212765957445
  - -2.2615062761506275
  - -2.2902542372881354
  train_neg_coverage_error_oob:
  - -2.3842887473460723
  - -2.361746361746362
  - -2.4063829787234043
  - -2.3577405857740588
  - -2.36228813559322
  train_neg_hamming_loss_macro:
  - -0.10544939844302902
  - -0.11330561330561333
  - -0.1198581560283688
  - -0.11331938633193862
  - -0.1193502824858757
  train_neg_hamming_loss_macro_oob:
  - -0.12349610757254069
  - -0.12231462231462231
  - -0.1351063829787234
  - -0.1279637377963738
  - -0.13877118644067796
  train_neg_hamming_loss_micro:
  - -0.10544939844302902
  - -0.11330561330561331
  - -0.1198581560283688
  - -0.11331938633193864
  - -0.1193502824858757
  train_neg_hamming_loss_micro_oob:
  - -0.12349610757254069
  - -0.12231462231462231
  - -0.1351063829787234
  - -0.12796373779637377
  - -0.13877118644067796
  train_neg_hamming_loss_samples:
  - -0.10544939844302902
  - -0.11330561330561331
  - -0.11985815602836879
  - -0.11331938633193862
  - -0.1193502824858757
  train_neg_hamming_loss_samples_oob:
  - -0.1234961075725407
  - -0.12231462231462233
  - -0.13510638297872338
  - -0.12796373779637377
  - -0.13877118644067796
  train_neg_hamming_loss_weighted:
  - -0.11068855947434257
  - -0.1203119677695949
  - -0.12463239703518915
  - -0.119058600938481
  - -0.1243033611031313
  train_neg_hamming_loss_weighted_oob:
  - -0.12820568120276246
  - -0.12892866791171875
  - -0.13886396891266278
  - -0.1345007083319606
  - -0.14276309489610264
  train_neg_label_ranking_loss:
  - -0.08072658645907053
  - -0.08018595518595519
  - -0.08154846335697401
  - -0.07359948860994886
  - -0.08120291902071562
  train_neg_label_ranking_loss_oob:
  - -0.09464496343477233
  - -0.09536267036267036
  - -0.09609338061465722
  - -0.09048117154811715
  - -0.09098987758945386
  train_precision_macro:
  - 0.894550601556971
  - 0.8866943866943867
  - 0.8801418439716313
  - 0.8866806136680614
  - 0.8806497175141245
  train_precision_macro_oob:
  - 0.8765038924274594
  - 0.8776853776853777
  - 0.8648936170212767
  - 0.8720362622036261
  - 0.8612288135593221
  train_precision_micro:
  - 0.894550601556971
  - 0.8866943866943867
  - 0.8801418439716312
  - 0.8866806136680614
  - 0.8806497175141242
  train_precision_micro_oob:
  - 0.8765038924274593
  - 0.8776853776853777
  - 0.8648936170212767
  - 0.8720362622036262
  - 0.861228813559322
  train_precision_samples:
  - 0.8945506015569711
  - 0.8866943866943867
  - 0.8801418439716312
  - 0.8866806136680613
  - 0.8806497175141244
  train_precision_samples_oob:
  - 0.8765038924274594
  - 0.8776853776853776
  - 0.8648936170212767
  - 0.8720362622036263
  - 0.861228813559322
  train_precision_weighted:
  - 0.8893114405256575
  - 0.8796880322304053
  - 0.8753676029648109
  - 0.880941399061519
  - 0.8756966388968687
  train_precision_weighted_oob:
  - 0.8717943187972375
  - 0.8710713320882812
  - 0.8611360310873372
  - 0.8654992916680394
  - 0.8572369051038974
  train_recall_macro:
  - 0.894550601556971
  - 0.8866943866943867
  - 0.8801418439716313
  - 0.8866806136680614
  - 0.8806497175141245
  train_recall_macro_oob:
  - 0.8765038924274594
  - 0.8776853776853777
  - 0.8648936170212767
  - 0.8720362622036261
  - 0.8612288135593221
  train_recall_micro:
  - 0.894550601556971
  - 0.8866943866943867
  - 0.8801418439716312
  - 0.8866806136680614
  - 0.8806497175141242
  train_recall_micro_oob:
  - 0.8765038924274593
  - 0.8776853776853777
  - 0.8648936170212767
  - 0.8720362622036262
  - 0.861228813559322
  train_recall_samples:
  - 0.8945506015569711
  - 0.8866943866943867
  - 0.8801418439716312
  - 0.8866806136680613
  - 0.8806497175141244
  train_recall_samples_oob:
  - 0.8765038924274594
  - 0.8776853776853776
  - 0.8648936170212767
  - 0.8720362622036263
  - 0.861228813559322
  train_recall_weighted:
  - 0.8893114405256575
  - 0.8796880322304053
  - 0.8753676029648109
  - 0.880941399061519
  - 0.8756966388968687
  train_recall_weighted_oob:
  - 0.8717943187972375
  - 0.8710713320882812
  - 0.8611360310873372
  - 0.8654992916680394
  - 0.8572369051038974
  train_roc_auc_macro:
  - 0.9364061073592991
  - 0.9366537997130558
  - 0.9305990513183809
  - 0.9328019160335704
  - 0.9238354999076281
  train_roc_auc_macro_oob:
  - 0.9259334423590758
  - 0.923998400471168
  - 0.919651583746265
  - 0.9173830789474914
  - 0.9135521566593452
  train_roc_auc_micro:
  - 0.9327459216681018
  - 0.9325416387851272
  - 0.9322238624122302
  - 0.9312528455418566
  - 0.9270310110585893
  train_roc_auc_micro_oob:
  - 0.9233395778548323
  - 0.9203590295247857
  - 0.9218405070422865
  - 0.9168155395431559
  - 0.9171345747042386
  train_roc_auc_samples:
  - 0.9192734135409294
  - 0.9198140448140448
  - 0.918451536643026
  - 0.9264005113900512
  - 0.9187970809792844
  train_roc_auc_samples_oob:
  - 0.9053550365652276
  - 0.9046373296373296
  - 0.9039066193853428
  - 0.9095188284518828
  - 0.9090101224105462
  train_roc_auc_weighted:
  - 0.9306735157112301
  - 0.9302545615529382
  - 0.9249923198352191
  - 0.9265527977319225
  - 0.9169499666309597
  train_roc_auc_weighted_oob:
  - 0.9204284573703649
  - 0.9172977666191924
  - 0.9147192586740209
  - 0.911405293376517
  - 0.9069506531419701
start: 2023-12-22 02:52:31.969692
wrapper: null
