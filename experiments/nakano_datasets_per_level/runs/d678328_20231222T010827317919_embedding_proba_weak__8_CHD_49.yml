active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpP8CZmZmZmek/IDMzMzMz878AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAAQAAAAAAAAABAAAAAAAAA8L8AAAAAAAAQwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:17:40.375441
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__8
  params: {}
hash: d67832861532c345aaf74e37afe7b5e128287bf407bc91a9fca2748a02a87db1
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d678328_20231222T010827317919_embedding_proba_weak__8_CHD_49.yml
results:
  fit_time:
  - 515.8386781215668
  - 507.663556098938
  - 510.9089138507843
  - 526.323084115982
  - 532.0214059352875
  score_time:
  - 6.465517997741699
  - 6.609589099884033
  - 6.839576005935669
  - 6.773823022842407
  - 6.955021619796753
  test_average_precision_macro:
  - 0.5184395993245133
  - 0.5228001732674135
  - 0.5565268557896274
  - 0.5063899371234114
  - 0.5111156304157877
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6615333576710369
  - 0.6718742150635348
  - 0.6673826022014216
  - 0.6232429960168323
  - 0.6190434048612147
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7831565656565657
  - 0.7717762487257901
  - 0.7895005096839961
  - 0.7444320436507937
  - 0.7347342995169082
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6501799610382638
  - 0.6468553007732892
  - 0.6570148896166571
  - 0.6191603117654623
  - 0.6218003717702929
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6196969696969696
  - 0.6330275229357799
  - 0.6513761467889908
  - 0.6220238095238095
  - 0.6449275362318841
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6196969696969697
  - 0.6330275229357798
  - 0.6513761467889908
  - 0.6220238095238095
  - 0.644927536231884
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6196969696969696
  - 0.6330275229357798
  - 0.6513761467889908
  - 0.6220238095238094
  - 0.6449275362318841
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5232815964523282
  - 0.5457423439720894
  - 0.564091871431321
  - 0.529482886904762
  - 0.5534615967277685
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4786800730630783
  - 0.4913419743529111
  - 0.5088334977339893
  - 0.4799074940058214
  - 0.5040968401785927
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4489571899012075
  - 0.46308724832214765
  - 0.48299319727891155
  - 0.4514038876889849
  - 0.47593582887700536
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.474120425029516
  - 0.49017038007863706
  - 0.507518169903491
  - 0.4742810760667903
  - 0.5024430641821946
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.361996924506088
  - 0.3818277804804434
  - 0.39949954510007774
  - 0.3684951524044422
  - 0.39080407603428136
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7831565656565656
  - 0.7809505606523957
  - 0.8078491335372071
  - 0.7444320436507936
  - 0.7347342995169084
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07934637492313823
  - 0.08281416051944958
  - 0.14911271197066447
  - 0.07511173026725894
  - 0.12653585382070867
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.21628364688164683
  - 0.24326724789264945
  - 0.2993948113180298
  - 0.2083177891917862
  - 0.24773546534016386
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.158524045360619
  - 0.22727996145031457
  - 0.24498374975686826
  - 0.18993180827019643
  - 0.19614201677677182
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08586121789345438
  - 0.08070374405293416
  - 0.1544873329330834
  - 0.06880159585064856
  - 0.1281416526853993
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8552249652014189
  - 0.851114923254112
  - 0.860546864460204
  - 0.8310119201894629
  - 0.8213651489385261
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7181818181818183
  - -3.7889908256880735
  - -3.6788990825688073
  - -3.857142857142857
  - -3.8260869565217392
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.38030303030303036
  - -0.3669724770642202
  - -0.34862385321100925
  - -0.37797619047619047
  - -0.35507246376811596
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3803030303030303
  - -0.3669724770642202
  - -0.3486238532110092
  - -0.37797619047619047
  - -0.35507246376811596
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.38030303030303025
  - -0.3669724770642202
  - -0.3486238532110092
  - -0.3779761904761904
  - -0.355072463768116
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4767184035476718
  - -0.45425765602791063
  - -0.43590812856867905
  - -0.47051711309523814
  - -0.44653840327223143
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2227525252525253
  - -0.2262487257900102
  - -0.19775739041794085
  - -0.2578125
  - -0.26652173913043475
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6196969696969696
  - 0.6330275229357799
  - 0.6513761467889908
  - 0.6220238095238095
  - 0.6449275362318841
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6196969696969697
  - 0.6330275229357798
  - 0.6513761467889908
  - 0.6220238095238095
  - 0.644927536231884
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6196969696969696
  - 0.6330275229357798
  - 0.6513761467889908
  - 0.6220238095238094
  - 0.6449275362318841
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5232815964523282
  - 0.5457423439720894
  - 0.564091871431321
  - 0.529482886904762
  - 0.5534615967277685
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6196969696969696
  - 0.6330275229357799
  - 0.6513761467889908
  - 0.6220238095238095
  - 0.6449275362318841
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6196969696969697
  - 0.6330275229357798
  - 0.6513761467889908
  - 0.6220238095238095
  - 0.644927536231884
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6196969696969696
  - 0.6330275229357798
  - 0.6513761467889908
  - 0.6220238095238094
  - 0.6449275362318841
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5232815964523282
  - 0.5457423439720894
  - 0.564091871431321
  - 0.529482886904762
  - 0.5534615967277685
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5280054049310967
  - 0.5963378118771332
  - 0.5888842487390906
  - 0.5453360229272155
  - 0.5923155191261006
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7309506683730185
  - 0.748429767795965
  - 0.7505700820918212
  - 0.721652560763889
  - 0.7239000181565091
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7772474747474749
  - .nan
  - .nan
  - 0.7421875
  - 0.7334782608695651
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.564066495529144
  - 0.5941518177101489
  - 0.5752170939130735
  - 0.546340870399978
  - 0.560810233636295
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8152792598886379
  - 0.8082819528330126
  - 0.7996949788922799
  - 0.8097693683922859
  - 0.8109231971478262
  train_average_precision_macro_oob:
  - 0.7194714143330309
  - 0.7174168797468604
  - 0.7029098167274691
  - 0.7282428234132236
  - 0.7211129166903975
  train_average_precision_micro:
  - 0.8655029107919716
  - 0.863266579613518
  - 0.8527010118930735
  - 0.8780410307451999
  - 0.8664962693668445
  train_average_precision_micro_oob:
  - 0.857438431483529
  - 0.8575931891611124
  - 0.8472292247531122
  - 0.8740593749038711
  - 0.8628636231614412
  train_average_precision_samples:
  - 0.8857521847690387
  - 0.879767688091679
  - 0.8809853014449428
  - 0.8845090293453725
  - 0.8830656565656565
  train_average_precision_samples_oob:
  - 0.8767259675405742
  - 0.8694195316392624
  - 0.8748038116591929
  - 0.88241472284926
  - 0.8753857323232324
  train_average_precision_weighted:
  - 0.8667316968387063
  - 0.8611442954622985
  - 0.8490662725261341
  - 0.8735737356402428
  - 0.8672960476296369
  train_average_precision_weighted_oob:
  - 0.8553523611589092
  - 0.8517117988934386
  - 0.8417195052921618
  - 0.8670722700060121
  - 0.8593813405975987
  train_f1_macro:
  - 0.7801498127340825
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.7814393939393941
  train_f1_macro_oob:
  - 0.7722846441947565
  - 0.7701793721973095
  - 0.7683109118086695
  - 0.7712565838976673
  - 0.7765151515151515
  train_f1_micro:
  - 0.7801498127340823
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.781439393939394
  train_f1_micro_oob:
  - 0.7722846441947565
  - 0.7701793721973094
  - 0.7683109118086696
  - 0.7712565838976674
  - 0.7765151515151515
  train_f1_samples:
  - 0.7801498127340823
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.781439393939394
  train_f1_samples_oob:
  - 0.7722846441947566
  - 0.7701793721973094
  - 0.7683109118086696
  - 0.7712565838976675
  - 0.7765151515151514
  train_f1_weighted:
  - 0.7233227025170502
  - 0.7285354916329433
  - 0.7206622371438186
  - 0.7233263350644841
  - 0.7227808654227869
  train_f1_weighted_oob:
  - 0.7158785143025367
  - 0.7160767019265324
  - 0.7091932164127126
  - 0.7142654185543577
  - 0.7179257641921397
  train_jaccard_macro:
  - 0.652706573279373
  - 0.6549715095785883
  - 0.651354054484567
  - 0.6528975897957047
  - 0.6550920741838677
  train_jaccard_macro_oob:
  - 0.6421039487644226
  - 0.6387223145077882
  - 0.637804451290074
  - 0.6409930262156575
  - 0.6484222164957795
  train_jaccard_micro:
  - 0.6395455941050046
  - 0.6427255985267035
  - 0.6376988984088128
  - 0.6397285626156693
  - 0.6412806963009015
  train_jaccard_micro_oob:
  - 0.6290420988407566
  - 0.626253418413856
  - 0.6237864077669902
  - 0.6276791181873852
  - 0.6346749226006192
  train_jaccard_samples:
  - 0.6648163821197529
  - 0.6701162813270437
  - 0.6617659619901771
  - 0.6670751370525636
  - 0.6657900432900433
  train_jaccard_samples_oob:
  - 0.6540084634466656
  - 0.6540688758177547
  - 0.6483557548579969
  - 0.6543050628829409
  - 0.6589718614718614
  train_jaccard_weighted:
  - 0.5720908348035239
  - 0.57735190865095
  - 0.5691234609132643
  - 0.5717177885134999
  - 0.5722581875790715
  train_jaccard_weighted_oob:
  - 0.5622582571785318
  - 0.5613497379081578
  - 0.5548792390688824
  - 0.5599777231271044
  - 0.5658313045104073
  train_label_ranking_average_precision_score:
  - 0.8924937578027459
  - 0.8842519930244138
  - 0.8832274539113099
  - 0.8912810383747166
  - 0.8898838383838374
  train_label_ranking_average_precision_score_oob:
  - 0.8834675405742811
  - 0.8739038365719972
  - 0.8770459641255597
  - 0.8891867318786043
  - 0.8822039141414134
  train_matthews_corrcoef_macro:
  - 0.45246392303085226
  - 0.44559244073988075
  - 0.4404460600135042
  - 0.4525718254642561
  - 0.4593180817917603
  train_matthews_corrcoef_macro_oob:
  - 0.43613773504367853
  - 0.420890329688594
  - 0.41971142200451483
  - 0.4357291942622937
  - 0.4498138268094096
  train_matthews_corrcoef_micro:
  - 0.5887199387717953
  - 0.5885784874897315
  - 0.5803908937989402
  - 0.5908235785092009
  - 0.5947483355138469
  train_matthews_corrcoef_micro_oob:
  - 0.5744003734373933
  - 0.5658573519016238
  - 0.5605413921528549
  - 0.5750024148077174
  - 0.5859292008048483
  train_matthews_corrcoef_samples:
  - 0.5235442410039898
  - 0.5353927410946999
  - 0.5224303088051723
  - 0.5241192469308231
  - 0.5255285308765147
  train_matthews_corrcoef_samples_oob:
  - 0.5058355285124078
  - 0.5131779179778166
  - 0.49714980062427744
  - 0.5072521177312763
  - 0.5163290569535163
  train_matthews_corrcoef_weighted:
  - 0.5194726016537426
  - 0.5095735947602243
  - 0.49669128596615075
  - 0.5205100760261773
  - 0.5223587359183106
  train_matthews_corrcoef_weighted_oob:
  - 0.5050179399994625
  - 0.4865855798964668
  - 0.47568841284041274
  - 0.5050209955649313
  - 0.5136034879490121
  train_ndgc:
  - 0.9283618597303737
  - 0.9237001954803918
  - 0.9247899429259145
  - 0.9260395384770761
  - 0.9265166865430072
  train_ndgc_oob:
  - 0.9227256531883967
  - 0.9172442332562181
  - 0.9208744904469227
  - 0.9251709541840177
  - 0.9223210726532934
  train_neg_coverage_error:
  - -3.215730337078652
  - -3.219730941704036
  - -3.2286995515695067
  - -3.2031602708803613
  - -3.2818181818181817
  train_neg_coverage_error_oob:
  - -3.30561797752809
  - -3.311659192825112
  - -3.302690582959641
  - -3.2460496613995486
  - -3.3795454545454544
  train_neg_hamming_loss_macro:
  - -0.21985018726591762
  - -0.21748878923766815
  - -0.2212257100149477
  - -0.21971407072987206
  - -0.21856060606060604
  train_neg_hamming_loss_macro_oob:
  - -0.2277153558052434
  - -0.2298206278026906
  - -0.23168908819133036
  - -0.2287434161023326
  - -0.22348484848484848
  train_neg_hamming_loss_micro:
  - -0.2198501872659176
  - -0.21748878923766815
  - -0.22122571001494767
  - -0.2197140707298721
  - -0.21856060606060607
  train_neg_hamming_loss_micro_oob:
  - -0.22771535580524344
  - -0.22982062780269058
  - -0.23168908819133036
  - -0.2287434161023326
  - -0.22348484848484848
  train_neg_hamming_loss_samples:
  - -0.21985018726591762
  - -0.21748878923766815
  - -0.22122571001494767
  - -0.21971407072987212
  - -0.21856060606060604
  train_neg_hamming_loss_samples_oob:
  - -0.22771535580524344
  - -0.22982062780269058
  - -0.23168908819133036
  - -0.22874341610233256
  - -0.2234848484848485
  train_neg_hamming_loss_weighted:
  - -0.27667729748294984
  - -0.27146450836705677
  - -0.2793377628561814
  - -0.276673664935516
  - -0.2772191345772132
  train_neg_hamming_loss_weighted_oob:
  - -0.2841214856974633
  - -0.2839232980734676
  - -0.29080678358728745
  - -0.2857345814456424
  - -0.28207423580786023
  train_neg_label_ranking_loss:
  - -0.11074906367041198
  - -0.11418161434977578
  - -0.11129172894867961
  - -0.10501630298470029
  - -0.1135669191919192
  train_neg_label_ranking_loss_oob:
  - -0.12589263420724095
  - -0.12653836571998006
  - -0.12483806676631788
  - -0.11094181088537748
  - -0.12779671717171717
  train_precision_macro:
  - 0.7801498127340825
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.7814393939393941
  train_precision_macro_oob:
  - 0.7722846441947565
  - 0.7701793721973095
  - 0.7683109118086695
  - 0.7712565838976673
  - 0.7765151515151515
  train_precision_micro:
  - 0.7801498127340823
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.781439393939394
  train_precision_micro_oob:
  - 0.7722846441947565
  - 0.7701793721973094
  - 0.7683109118086696
  - 0.7712565838976674
  - 0.7765151515151515
  train_precision_samples:
  - 0.7801498127340823
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.781439393939394
  train_precision_samples_oob:
  - 0.7722846441947566
  - 0.7701793721973094
  - 0.7683109118086696
  - 0.7712565838976675
  - 0.7765151515151514
  train_precision_weighted:
  - 0.7233227025170502
  - 0.7285354916329433
  - 0.7206622371438186
  - 0.7233263350644841
  - 0.7227808654227869
  train_precision_weighted_oob:
  - 0.7158785143025367
  - 0.7160767019265324
  - 0.7091932164127126
  - 0.7142654185543577
  - 0.7179257641921397
  train_recall_macro:
  - 0.7801498127340825
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.7814393939393941
  train_recall_macro_oob:
  - 0.7722846441947565
  - 0.7701793721973095
  - 0.7683109118086695
  - 0.7712565838976673
  - 0.7765151515151515
  train_recall_micro:
  - 0.7801498127340823
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.781439393939394
  train_recall_micro_oob:
  - 0.7722846441947565
  - 0.7701793721973094
  - 0.7683109118086696
  - 0.7712565838976674
  - 0.7765151515151515
  train_recall_samples:
  - 0.7801498127340823
  - 0.7825112107623319
  - 0.7787742899850523
  - 0.780285929270128
  - 0.781439393939394
  train_recall_samples_oob:
  - 0.7722846441947566
  - 0.7701793721973094
  - 0.7683109118086696
  - 0.7712565838976675
  - 0.7765151515151514
  train_recall_weighted:
  - 0.7233227025170502
  - 0.7285354916329433
  - 0.7206622371438186
  - 0.7233263350644841
  - 0.7227808654227869
  train_recall_weighted_oob:
  - 0.7158785143025367
  - 0.7160767019265324
  - 0.7091932164127126
  - 0.7142654185543577
  - 0.7179257641921397
  train_roc_auc_macro:
  - 0.8115002078171338
  - 0.8222332950657584
  - 0.7925490766129196
  - 0.8216856465855118
  - 0.8162761112122795
  train_roc_auc_macro_oob:
  - 0.7678912281094155
  - 0.7917531892336193
  - 0.7418315733665132
  - 0.8012078788575301
  - 0.7856890530878259
  train_roc_auc_micro:
  - 0.8810405898775862
  - 0.8814718175930825
  - 0.8786649214659686
  - 0.8892394758477982
  - 0.8717696543062028
  train_roc_auc_micro_oob:
  - 0.8718187414990335
  - 0.8755404345367312
  - 0.8695257160455805
  - 0.8848301632317485
  - 0.8675135458807379
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.807650255995491
  - 0.8080358246421272
  - 0.7967349857081065
  - 0.8190066083797172
  - 0.8070213686120078
  train_roc_auc_weighted_oob:
  - 0.7985280249024789
  - 0.800442804637933
  - 0.7874667770972071
  - 0.8139363498653274
  - 0.803829862126165
start: 2023-12-22 01:08:27.317919
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
