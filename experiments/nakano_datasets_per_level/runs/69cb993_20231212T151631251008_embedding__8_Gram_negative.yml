active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j8wMzMzMzPjv5iZmZmZmfm/MDMzMzMz479oZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP2ZmZmZmZva/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b+AzMzMzMwEwACZmZmZmfm/wJmZmZmZFUAAnJmZmZnZPw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:18:19.993152
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 69cb99333b5ed30408848e52dc3bd850e09c9211cb06bf5399bb79db7d5098b7
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/69cb993_20231212T151631251008_embedding__8_Gram_negative.yml
results:
  fit_time:
  - 51.18557047843933
  - 54.92384314537048
  - 54.76248240470886
  - 64.25471258163452
  - 58.284576177597046
  score_time:
  - 10.033314228057861
  - 9.452013731002808
  - 10.94452691078186
  - 9.956032276153564
  - 10.142581224441528
  test_average_precision_macro:
  - 0.9647507091571033
  - 0.8912116732003859
  - 0.9029776473531783
  - 0.8847660463146239
  - 0.9303489772346434
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9725257950183885
  - 0.9773595743886787
  - 0.9831002910703173
  - 0.9765157493118085
  - 0.9791347348485752
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9674149659863945
  - 0.9752075919335704
  - 0.9826190476190476
  - 0.9692918192918193
  - 0.9737410071942446
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9731406732335437
  - 0.979607536233582
  - 0.9847675546202418
  - 0.9781122385275498
  - 0.9835935312026135
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9723522167487684
  - 0.9769967347837252
  - 0.9870383867832847
  - 0.9658709106984968
  - 0.9730895695814482
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9634006751225029
  - 0.9703699438563892
  - 0.9771425849186607
  - 0.9582554257991521
  - 0.9658647813850725
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9631901840490797
  - 0.9702015775635408
  - 0.9770520741394528
  - 0.9578664276109368
  - 0.9655324790101635
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9685714285714287
  - 0.9742190589165679
  - 0.9798412698412701
  - 0.9638583638583639
  - 0.9705835331734614
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.946230848983183
  - 0.955092679161584
  - 0.9745400410361771
  - 0.9342673933894453
  - 0.9478179656242357
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9674149659863945
  - 0.9752075919335706
  - 0.9826190476190474
  - 0.9692918192918193
  - 0.9737410071942447
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6452158627704283
  - 0.6968622924763894
  - 0.7068174970516957
  - 0.657693961147087
  - 0.6844695438463019
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.9149693169286184
  - 0.9316422546918891
  - 0.9483596245614438
  - 0.9041357164248675
  - 0.9211946367314817
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9041214438085158
  - 0.9241615439499535
  - 0.9490592141476437
  - 0.9013989974015835
  - 0.9150362824047518
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9016555166408862
  - 0.9170974047243441
  - 0.93466793457389
  - 0.885531671836125
  - 0.9068490218698038
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.976472063949443
  - 0.982063206143293
  - 0.9884524561125728
  - 0.9774805073496909
  - 0.981041393460867
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1607142857142858
  - -1.1209964412811388
  - -1.1321428571428571
  - -1.1428571428571428
  - -1.1258992805755397
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.018750000000000003
  - -0.015124555160142349
  - -0.011607142857142856
  - -0.02152014652014652
  - -0.017535971223021585
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.01875
  - -0.015124555160142349
  - -0.011607142857142858
  - -0.02152014652014652
  - -0.01753597122302158
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.01875
  - -0.015124555160142349
  - -0.011607142857142858
  - -0.02152014652014652
  - -0.01753597122302158
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.027647783251231524
  - -0.023003265216274722
  - -0.012961613216715259
  - -0.034129089301503095
  - -0.026910430418551755
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.015943877551020405
  - -0.010718522284358583
  - -0.008758503401360545
  - -0.010858189429618
  - -0.010234669407331276
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9723522167487684
  - 0.9769967347837252
  - 0.9870383867832847
  - 0.9658709106984968
  - 0.9730895695814482
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.98125
  - 0.9848754448398577
  - 0.9883928571428572
  - 0.9784798534798534
  - 0.9824640287769785
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9723522167487684
  - 0.9769967347837252
  - 0.9870383867832847
  - 0.9658709106984968
  - 0.9730895695814482
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9909117660441513
  - 0.9922973628308147
  - 0.9957105093949461
  - 0.9933394040020598
  - 0.988031063187395
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9930937223695844
  - 0.9928163417250964
  - 0.9944242856443708
  - 0.9943314641517679
  - 0.9942986970736157
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9840561224489798
  - 0.9892814777156415
  - 0.9912414965986395
  - 0.9891418105703822
  - 0.9897653305926688
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9907833585515052
  - 0.9892375037054605
  - 0.9967728832419942
  - 0.9904977108750741
  - 0.9936210005429861
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9986127040700139
  - 0.9958669859096831
  - 0.9818454730920058
  - 0.9957615166975206
  - 0.9953263394571072
  train_average_precision_macro_oob:
  - 0.8798822700654844
  - 0.9211385522893646
  - 0.8698273492536922
  - 0.8928265957295811
  - 0.8586586770212163
  train_average_precision_micro:
  - 0.9971523562590241
  - 0.9961842868303122
  - 0.9956945373217034
  - 0.9965054912424042
  - 0.9960343079938896
  train_average_precision_micro_oob:
  - 0.9843379456476831
  - 0.983202097321211
  - 0.981259560272214
  - 0.9809808974749707
  - 0.9821938319590524
  train_average_precision_samples:
  - 0.9929556354916066
  - 0.9888988898889888
  - 0.9884592326139088
  - 0.9891271969019958
  - 0.9898264512268101
  train_average_precision_samples_oob:
  - 0.9797961630695443
  - 0.9786678667866788
  - 0.9758393285371701
  - 0.9774501042597558
  - 0.9783897580576217
  train_average_precision_weighted:
  - 0.9980484374033499
  - 0.9961315078970476
  - 0.9947403984555272
  - 0.996389350079288
  - 0.9958776985207458
  train_average_precision_weighted_oob:
  - 0.9845993697573724
  - 0.9826663894691822
  - 0.9785928343910134
  - 0.9814307892254063
  - 0.9808918982728264
  train_f1_macro:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813286
  train_f1_macro_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_f1_micro:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813285
  train_f1_micro_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_f1_samples:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813285
  train_f1_samples_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_f1_weighted:
  - 0.986460659945457
  - 0.9854942575802645
  - 0.9831659629267325
  - 0.9869929503952469
  - 0.9848175002504218
  train_f1_weighted_oob:
  - 0.9803052926441008
  - 0.9771732538060675
  - 0.9745864238041582
  - 0.97875001724463
  - 0.9784020773456823
  train_jaccard_macro:
  - 0.9813597867943455
  - 0.9798053950194665
  - 0.9769673763738445
  - 0.9805711478336159
  - 0.9787445395117482
  train_jaccard_macro_oob:
  - 0.9721750097157904
  - 0.9704617689792595
  - 0.9670302624185079
  - 0.9706252610461099
  - 0.9711432820316253
  train_jaccard_micro:
  - 0.9812917594654789
  - 0.9797304822363292
  - 0.9768888888888889
  - 0.9805309734513274
  - 0.9786856127886323
  train_jaccard_micro_oob:
  - 0.9720682775437819
  - 0.9702948348481489
  - 0.9668361706831748
  - 0.9705040721989875
  - 0.9710273139444875
  train_jaccard_samples:
  - 0.9837729816147082
  - 0.9821582158215822
  - 0.9798960831334934
  - 0.9830006950650383
  - 0.9813684420506683
  train_jaccard_samples_oob:
  - 0.9757793764988009
  - 0.9743174317431743
  - 0.9715027977617906
  - 0.9745010425975573
  - 0.9749850388988629
  train_jaccard_weighted:
  - 0.9733482420897288
  - 0.9715090906757663
  - 0.9669502253542183
  - 0.9743593368089294
  - 0.9701442326752908
  train_jaccard_weighted_oob:
  - 0.9614359929889308
  - 0.9555066835050531
  - 0.9505251548480536
  - 0.9584482539457825
  - 0.9577949068646784
  train_label_ranking_average_precision_score:
  - 0.9929556354916068
  - 0.988898889888989
  - 0.9884592326139089
  - 0.9891271969019958
  - 0.9898264512268103
  train_label_ranking_average_precision_score_oob:
  - 0.9797961630695445
  - 0.9786678667866786
  - 0.9758393285371704
  - 0.9774501042597558
  - 0.978389758057622
  train_matthews_corrcoef_macro:
  - 0.8175057716830574
  - 0.7067637625455073
  - 0.6992388538861369
  - 0.7096235786707449
  - 0.7759470477373884
  train_matthews_corrcoef_macro_oob:
  - 0.6947788466187392
  - 0.6874076782468777
  - 0.6780477270527656
  - 0.6881817863265355
  - 0.6871212347988177
  train_matthews_corrcoef_micro:
  - 0.9580580735852681
  - 0.9544821258698716
  - 0.9477635056922533
  - 0.9560764598348923
  - 0.9519605567265413
  train_matthews_corrcoef_micro_oob:
  - 0.9366964500581457
  - 0.9325694531258786
  - 0.9241696925468702
  - 0.9326633946701611
  - 0.9341072350542307
  train_matthews_corrcoef_samples:
  - 0.9563707797178127
  - 0.9516800702421259
  - 0.9418750386322413
  - 0.9543346135322653
  - 0.9471300913187071
  train_matthews_corrcoef_samples_oob:
  - 0.9322499140002642
  - 0.9297133930388228
  - 0.9169521198244304
  - 0.9252059078779934
  - 0.9297856090264356
  train_matthews_corrcoef_weighted:
  - 0.9508363720610845
  - 0.9433226503920387
  - 0.9369717051586486
  - 0.9457544653622539
  - 0.9440895471999268
  train_matthews_corrcoef_weighted_oob:
  - 0.9232983782758973
  - 0.9181090502468648
  - 0.9101519772635314
  - 0.9194110319846951
  - 0.9199319337159804
  train_ndgc:
  - 0.994786049277364
  - 0.9918371783269953
  - 0.9915126212903445
  - 0.992036609833152
  - 0.992476297191588
  train_ndgc_oob:
  - 0.9855512759470488
  - 0.9847152142145158
  - 0.9824640163392562
  - 0.9839904470199111
  - 0.9844850682234801
  train_neg_coverage_error:
  - -1.0638489208633093
  - -1.072007200720072
  - -1.0692446043165467
  - -1.066130473637176
  - -1.0673249551166966
  train_neg_coverage_error_oob:
  - -1.1214028776978417
  - -1.1278127812781278
  - -1.1258992805755397
  - -1.133154602323503
  - -1.1202872531418313
  train_neg_hamming_loss_macro:
  - -0.009442446043165468
  - -0.010238523852385238
  - -0.011690647482014389
  - -0.009830205540661306
  - -0.010771992818671453
  train_neg_hamming_loss_macro_oob:
  - -0.014163669064748202
  - -0.015076507650765077
  - -0.016861510791366906
  - -0.014968722073279712
  - -0.014699281867145421
  train_neg_hamming_loss_micro:
  - -0.009442446043165468
  - -0.010238523852385238
  - -0.011690647482014389
  - -0.009830205540661306
  - -0.010771992818671455
  train_neg_hamming_loss_micro_oob:
  - -0.014163669064748202
  - -0.015076507650765077
  - -0.016861510791366906
  - -0.014968722073279714
  - -0.014699281867145421
  train_neg_hamming_loss_samples:
  - -0.009442446043165468
  - -0.010238523852385238
  - -0.011690647482014389
  - -0.009830205540661306
  - -0.010771992818671455
  train_neg_hamming_loss_samples_oob:
  - -0.014163669064748202
  - -0.015076507650765077
  - -0.016861510791366906
  - -0.014968722073279714
  - -0.014699281867145421
  train_neg_hamming_loss_weighted:
  - -0.013539340054542987
  - -0.014505742419735535
  - -0.016834037073267374
  - -0.013007049604753079
  - -0.015182499749578136
  train_neg_hamming_loss_weighted_oob:
  - -0.01969470735589916
  - -0.022826746193932698
  - -0.025413576195841947
  - -0.02124998275536998
  - -0.021597922654317658
  train_neg_label_ranking_loss:
  - -0.002183967112024666
  - -0.003289614675753289
  - -0.003415125042822884
  - -0.0033405676837312227
  - -0.003077712233906129
  train_neg_label_ranking_loss_oob:
  - -0.009121274409044193
  - -0.00992242081350992
  - -0.010384549503254539
  - -0.011053661857951402
  - -0.009307942207403608
  train_precision_macro:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813286
  train_precision_macro_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_precision_micro:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813285
  train_precision_micro_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_precision_samples:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813285
  train_precision_samples_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_precision_weighted:
  - 0.986460659945457
  - 0.9854942575802645
  - 0.9831659629267325
  - 0.9869929503952469
  - 0.9848175002504218
  train_precision_weighted_oob:
  - 0.9803052926441008
  - 0.9771732538060675
  - 0.9745864238041582
  - 0.97875001724463
  - 0.9784020773456823
  train_recall_macro:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813286
  train_recall_macro_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_recall_micro:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813285
  train_recall_micro_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_recall_samples:
  - 0.9905575539568345
  - 0.9897614761476148
  - 0.9883093525179856
  - 0.9901697944593387
  - 0.9892280071813285
  train_recall_samples_oob:
  - 0.9858363309352518
  - 0.9849234923492349
  - 0.9831384892086331
  - 0.9850312779267203
  - 0.9853007181328546
  train_recall_weighted:
  - 0.986460659945457
  - 0.9854942575802645
  - 0.9831659629267325
  - 0.9869929503952469
  - 0.9848175002504218
  train_recall_weighted_oob:
  - 0.9803052926441008
  - 0.9771732538060675
  - 0.9745864238041582
  - 0.97875001724463
  - 0.9784020773456823
  train_roc_auc_macro:
  - 0.999657090574657
  - 0.9994880276268561
  - 0.9993208808978233
  - 0.9995414892312126
  - 0.9994624619638327
  train_roc_auc_macro_oob:
  - 0.9908302372731261
  - 0.9898331227782746
  - 0.9916254098138566
  - 0.9912153547587471
  - 0.9923054705759651
  train_roc_auc_micro:
  - 0.9995625850143901
  - 0.9994013756356771
  - 0.9993359785145235
  - 0.9994583892715033
  - 0.9993845603254423
  train_roc_auc_micro_oob:
  - 0.9956169742532602
  - 0.9950359524723819
  - 0.9947789606836968
  - 0.9939791656661315
  - 0.9948589818237824
  train_roc_auc_samples:
  - 0.9978160328879754
  - 0.9967103853242467
  - 0.9965848749571772
  - 0.9966594323162686
  - 0.9969222877660939
  train_roc_auc_samples_oob:
  - 0.9908787255909558
  - 0.99007757918649
  - 0.9896154504967453
  - 0.9889463381420487
  - 0.9906920577925963
  train_roc_auc_weighted:
  - 0.9993086499155337
  - 0.9991683669315171
  - 0.9990191468078014
  - 0.9993135075641367
  - 0.9991470425275659
  train_roc_auc_weighted_oob:
  - 0.9952765955136186
  - 0.9942865407814587
  - 0.9929937880740369
  - 0.9940453927675851
  - 0.994585622313396
start: 2023-12-12 15:16:31.251008
wrapper: null
