active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L80MzMzMzPzP6CZmZmZmck/mJmZmZmZ6b80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:59:30.030029
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: 0f08a6e3c5898abe9330089567f0fca1ff7ac1a70ca1943de1aec1dd8145b174
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0f08a6e_20231221T235911851836_embedding_proba__2_CHD_49.yml
results:
  fit_time:
  - 5.912555932998657
  - 6.9175872802734375
  - 6.323212385177612
  - 6.916781902313232
  - 5.893423318862915
  score_time:
  - 2.777117967605591
  - 2.746992588043213
  - 2.6242785453796387
  - 2.883443832397461
  - 2.689055919647217
  test_average_precision_macro:
  - 0.5263645594852349
  - 0.4974789054337503
  - 0.5259002321267604
  - 0.5573065767062054
  - 0.48752252051045725
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6571763937534139
  - 0.6513975011816903
  - 0.6774949960239722
  - 0.6902565265866746
  - 0.6454089635635579
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7560685685685685
  - 0.7956956956956959
  - 0.7938583078491334
  - 0.7962212212212213
  - 0.7740290068829891
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6309251556508993
  - 0.6219886944888847
  - 0.6553142415878995
  - 0.6663078031228012
  - 0.6129620774131314
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.593093093093093
  - 0.6051051051051052
  - 0.6116207951070337
  - 0.611111111111111
  - 0.6135693215339233
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5930930930930931
  - 0.6051051051051051
  - 0.6116207951070336
  - 0.6111111111111112
  - 0.6135693215339233
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5930930930930929
  - 0.6051051051051052
  - 0.6116207951070336
  - 0.6111111111111112
  - 0.6135693215339234
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.48472248472248464
  - 0.501984501984502
  - 0.5126426493622734
  - 0.5148632953511002
  - 0.5064360418342719
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4558157557057534
  - 0.4676571733371619
  - 0.47157369178754277
  - 0.4698635930477794
  - 0.4763548596202363
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4215581643543223
  - 0.43379978471474706
  - 0.44052863436123346
  - 0.44
  - 0.4425531914893617
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4395967395967397
  - 0.45315315315315324
  - 0.46797728265618177
  - 0.4602355602355603
  - 0.4643106156380493
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.33497215532729163
  - 0.3432032475676106
  - 0.35275584792820286
  - 0.35559521413317213
  - 0.348496825847118
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7740865865865869
  - 0.795695695695696
  - 0.7938583078491332
  - 0.8052302302302304
  - 0.7740290068829891
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02782269108830464
  - 0.05235407168899651
  - 0.08139058858632252
  - 0.06734293014677578
  - 0.06660829893932473
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12901574925495995
  - 0.17735582745681838
  - 0.21627200604477215
  - 0.19362671617379207
  - 0.1802987617796851
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07691309027269434
  - 0.123340348884484
  - 0.15357985040738548
  - 0.1390563942097965
  - 0.13266756546074804
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.01245223054129934
  - 0.06976708790663591
  - 0.08191891101103072
  - 0.0680235043206661
  - 0.06370892501693305
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8319990874167735
  - 0.8716134624344751
  - 0.8578794058229862
  - 0.863320824568727
  - 0.8536500700502763
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.720720720720721
  - -3.765765765765766
  - -3.6605504587155964
  - -3.5495495495495497
  - -3.769911504424779
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.40690690690690695
  - -0.3948948948948949
  - -0.38837920489296635
  - -0.3888888888888889
  - -0.3864306784660767
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4069069069069069
  - -0.3948948948948949
  - -0.38837920489296635
  - -0.3888888888888889
  - -0.3864306784660767
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.40690690690690684
  - -0.39489489489489493
  - -0.3883792048929663
  - -0.38888888888888895
  - -0.38643067846607676
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5152775152775153
  - -0.498015498015498
  - -0.48735735063772656
  - -0.4851367046488998
  - -0.4935639581657281
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22364864864864864
  - -0.2148648648648648
  - -0.214525993883792
  - -0.1799299299299299
  - -0.23338249754178958
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.593093093093093
  - 0.6051051051051052
  - 0.6116207951070337
  - 0.611111111111111
  - 0.6135693215339233
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5930930930930931
  - 0.6051051051051051
  - 0.6116207951070336
  - 0.6111111111111112
  - 0.6135693215339233
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5930930930930929
  - 0.6051051051051052
  - 0.6116207951070336
  - 0.6111111111111112
  - 0.6135693215339234
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.48472248472248464
  - 0.501984501984502
  - 0.5126426493622734
  - 0.5148632953511002
  - 0.5064360418342719
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.593093093093093
  - 0.6051051051051052
  - 0.6116207951070337
  - 0.611111111111111
  - 0.6135693215339233
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5930930930930931
  - 0.6051051051051051
  - 0.6116207951070336
  - 0.6111111111111112
  - 0.6135693215339233
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5930930930930929
  - 0.6051051051051052
  - 0.6116207951070336
  - 0.6111111111111112
  - 0.6135693215339234
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.48472248472248464
  - 0.501984501984502
  - 0.5126426493622734
  - 0.5148632953511002
  - 0.5064360418342719
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5638306409622836
  - 0.5839196957508267
  - 0.5425299076318725
  - 0.6117518734091294
  - 0.5254440786781558
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.768503864556496
  - 0.7579867500920131
  - 0.7725127932478235
  - 0.7992148786923227
  - 0.7490991151705438
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7851351351351353
  - 0.7854740061162079
  - .nan
  - 0.7666175024582105
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.558286213003716
  - 0.5596545077086571
  - 0.5780396223049645
  - 0.6232326556553569
  - 0.5261862181496021
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8269842330837457
  - 0.8183739669469573
  - 0.8245177809738413
  - 0.8145134494409528
  - 0.8248512465191863
  train_average_precision_macro_oob:
  - 0.7160989320685895
  - 0.7359376354898947
  - 0.7201953262912365
  - 0.7144179979167395
  - 0.7227933176563884
  train_average_precision_micro:
  - 0.890732614245494
  - 0.8919823728539343
  - 0.8921593015873353
  - 0.8924498702563437
  - 0.899749559210065
  train_average_precision_micro_oob:
  - 0.8661489042485793
  - 0.8693003621456915
  - 0.8692537019214849
  - 0.8724094477079548
  - 0.8734665793683356
  train_average_precision_samples:
  - 0.8919012762762762
  - 0.8948198198198197
  - 0.8937032884902839
  - 0.8968562312312311
  - 0.9080096782302666
  train_average_precision_samples_oob:
  - 0.8770645645645646
  - 0.8809841091091091
  - 0.8774539113104135
  - 0.8834647147147147
  - 0.8870852187028657
  train_average_precision_weighted:
  - 0.8810211418756212
  - 0.8817060054385184
  - 0.8827413656021174
  - 0.8812632586986469
  - 0.8889822569682051
  train_average_precision_weighted_oob:
  - 0.8535437887892781
  - 0.8573756458216161
  - 0.8555748100803489
  - 0.8572890252703755
  - 0.8593419176058439
  train_f1_macro:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563528
  - 0.7462462462462462
  - 0.7383107088989442
  train_f1_macro_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866965
  - 0.6798048048048048
  - 0.682503770739065
  train_f1_micro:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563528
  - 0.7462462462462462
  - 0.7383107088989442
  train_f1_micro_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866966
  - 0.6798048048048048
  - 0.6825037707390649
  train_f1_samples:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563529
  - 0.7462462462462464
  - 0.7383107088989442
  train_f1_samples_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866966
  - 0.6798048048048048
  - 0.6825037707390648
  train_f1_weighted:
  - 0.6791759036523435
  - 0.6761159064823986
  - 0.6828773963616426
  - 0.684263739722255
  - 0.6760520559411844
  train_f1_weighted_oob:
  - 0.6068896121252143
  - 0.6012589814945837
  - 0.6125462627528541
  - 0.6107222943467484
  - 0.6111301951308111
  train_jaccard_macro:
  - 0.6063166194140146
  - 0.6030267488710002
  - 0.6075348145961975
  - 0.6105296373956547
  - 0.6005970294750416
  train_jaccard_macro_oob:
  - 0.5328271516517836
  - 0.5262954588484012
  - 0.5388659418616455
  - 0.5354092659016522
  - 0.5380428286441571
  train_jaccard_micro:
  - 0.5904477611940299
  - 0.5871313672922251
  - 0.5923832192799762
  - 0.5952095808383233
  - 0.5851763299462044
  train_jaccard_micro_oob:
  - 0.5123474311666194
  - 0.5055100310822266
  - 0.5187287173666288
  - 0.5149274950241683
  - 0.5180309101316543
  train_jaccard_samples:
  - 0.616001716001716
  - 0.6149077649077649
  - 0.6191864189622037
  - 0.6216001716001717
  - 0.6127774186597716
  train_jaccard_samples_oob:
  - 0.533075933075933
  - 0.5319069069069069
  - 0.5445334187486655
  - 0.5398755898755899
  - 0.5447532859297566
  train_jaccard_weighted:
  - 0.5185557939485279
  - 0.5159449756037207
  - 0.5226828773234411
  - 0.5244109295620998
  - 0.5153656463742801
  train_jaccard_weighted_oob:
  - 0.4388218590856911
  - 0.43372508279701144
  - 0.44535214227951486
  - 0.44297724129264837
  - 0.44433368628897485
  train_label_ranking_average_precision_score:
  - 0.8941535285285274
  - 0.9015765765765762
  - 0.9004297458893867
  - 0.9013607357357352
  - 0.9147970085470077
  train_label_ranking_average_precision_score_oob:
  - 0.8793168168168157
  - 0.8877408658658652
  - 0.8841803687095164
  - 0.8879692192192188
  - 0.8938725490196069
  train_matthews_corrcoef_macro:
  - 0.39132443072452255
  - 0.3910051029201174
  - 0.39483483698920135
  - 0.3992486131795829
  - 0.38704181408031163
  train_matthews_corrcoef_macro_oob:
  - 0.22514412204450118
  - 0.2317298794421927
  - 0.26773998220148015
  - 0.2510736253598074
  - 0.2647862830408708
  train_matthews_corrcoef_micro:
  - 0.5251738183424994
  - 0.5203230907938486
  - 0.5268401804395415
  - 0.5324088950053678
  - 0.5196106622864204
  train_matthews_corrcoef_micro_oob:
  - 0.3924065836944238
  - 0.38118307810804664
  - 0.4060464590526997
  - 0.3998919992294874
  - 0.4036643828588016
  train_matthews_corrcoef_samples:
  - 0.4449675706971911
  - 0.43527634514844343
  - 0.4393563753354755
  - 0.45315674474750134
  - 0.43878572754502243
  train_matthews_corrcoef_samples_oob:
  - 0.28829866794771364
  - 0.2751915098361412
  - 0.29650761037438766
  - 0.2995761412881488
  - 0.3037824662304245
  train_matthews_corrcoef_weighted:
  - 0.4589029563311547
  - 0.45474029090304696
  - 0.4629540910905928
  - 0.46735838787458683
  - 0.454542493437058
  train_matthews_corrcoef_weighted_oob:
  - 0.29596816202780263
  - 0.29475054409742674
  - 0.33214904136653295
  - 0.3179812091814389
  - 0.32175057347052816
  train_ndgc:
  - 0.9311977909033591
  - 0.9316245745581668
  - 0.9315544786020201
  - 0.9356172006769718
  - 0.9435141584224123
  train_ndgc_oob:
  - 0.9213170325717216
  - 0.9223129120194844
  - 0.9213233321081492
  - 0.9256792753560205
  - 0.9289803475625222
  train_neg_coverage_error:
  - -3.195945945945946
  - -3.1621621621621623
  - -3.1614349775784754
  - -3.2274774774774775
  - -3.16289592760181
  train_neg_coverage_error_oob:
  - -3.295045045045045
  - -3.2522522522522523
  - -3.2623318385650224
  - -3.279279279279279
  - -3.2850678733031673
  train_neg_hamming_loss_macro:
  - -0.2575075075075075
  - -0.26013513513513514
  - -0.25597907324364727
  - -0.25375375375375375
  - -0.26168929110105577
  train_neg_hamming_loss_macro_oob:
  - -0.32244744744744747
  - -0.3284534534534534
  - -0.31689088191330345
  - -0.3201951951951952
  - -0.3174962292609352
  train_neg_hamming_loss_micro:
  - -0.2575075075075075
  - -0.26013513513513514
  - -0.2559790732436472
  - -0.25375375375375375
  - -0.2616892911010558
  train_neg_hamming_loss_micro_oob:
  - -0.32244744744744747
  - -0.32845345345345345
  - -0.31689088191330345
  - -0.3201951951951952
  - -0.3174962292609351
  train_neg_hamming_loss_samples:
  - -0.2575075075075075
  - -0.26013513513513514
  - -0.2559790732436472
  - -0.25375375375375375
  - -0.26168929110105577
  train_neg_hamming_loss_samples_oob:
  - -0.3224474474474474
  - -0.3284534534534534
  - -0.3168908819133034
  - -0.3201951951951952
  - -0.3174962292609351
  train_neg_hamming_loss_weighted:
  - -0.3208240963476566
  - -0.3238840935176014
  - -0.3171226036383575
  - -0.315736260277745
  - -0.32394794405881566
  train_neg_hamming_loss_weighted_oob:
  - -0.39311038787478575
  - -0.39874101850541643
  - -0.38745373724714594
  - -0.3892777056532515
  - -0.38886980486918893
  train_neg_label_ranking_loss:
  - -0.10206456456456456
  - -0.09612112112112112
  - -0.0956589436970603
  - -0.10066941941941943
  - -0.0867081447963801
  train_neg_label_ranking_loss_oob:
  - -0.11990115115115114
  - -0.11119244244244243
  - -0.11299202790234181
  - -0.1144019019019019
  - -0.10855957767722474
  train_precision_macro:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563528
  - 0.7462462462462462
  - 0.7383107088989442
  train_precision_macro_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866965
  - 0.6798048048048048
  - 0.682503770739065
  train_precision_micro:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563528
  - 0.7462462462462462
  - 0.7383107088989442
  train_precision_micro_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866966
  - 0.6798048048048048
  - 0.6825037707390649
  train_precision_samples:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563529
  - 0.7462462462462464
  - 0.7383107088989442
  train_precision_samples_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866966
  - 0.6798048048048048
  - 0.6825037707390648
  train_precision_weighted:
  - 0.6791759036523435
  - 0.6761159064823986
  - 0.6828773963616426
  - 0.684263739722255
  - 0.6760520559411844
  train_precision_weighted_oob:
  - 0.6068896121252143
  - 0.6012589814945837
  - 0.6125462627528541
  - 0.6107222943467484
  - 0.6111301951308111
  train_recall_macro:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563528
  - 0.7462462462462462
  - 0.7383107088989442
  train_recall_macro_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866965
  - 0.6798048048048048
  - 0.682503770739065
  train_recall_micro:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563528
  - 0.7462462462462462
  - 0.7383107088989442
  train_recall_micro_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866966
  - 0.6798048048048048
  - 0.6825037707390649
  train_recall_samples:
  - 0.7424924924924925
  - 0.7398648648648649
  - 0.7440209267563529
  - 0.7462462462462464
  - 0.7383107088989442
  train_recall_samples_oob:
  - 0.6775525525525525
  - 0.6715465465465466
  - 0.6831091180866966
  - 0.6798048048048048
  - 0.6825037707390648
  train_recall_weighted:
  - 0.6791759036523435
  - 0.6761159064823986
  - 0.6828773963616426
  - 0.684263739722255
  - 0.6760520559411844
  train_recall_weighted_oob:
  - 0.6068896121252143
  - 0.6012589814945837
  - 0.6125462627528541
  - 0.6107222943467484
  - 0.6111301951308111
  train_roc_auc_macro:
  - 0.8288281127135976
  - 0.8313605965888953
  - 0.8231615787935357
  - 0.8008375978408795
  - 0.8298478040283749
  train_roc_auc_macro_oob:
  - 0.7656002451341529
  - 0.7951331514649707
  - 0.7921780613553998
  - 0.7646356225055554
  - 0.7848137635439913
  train_roc_auc_micro:
  - 0.9008836946749534
  - 0.9012268714920662
  - 0.9028160376954869
  - 0.9010329135175692
  - 0.909796242603756
  train_roc_auc_micro_oob:
  - 0.8860877153046514
  - 0.8869528427916773
  - 0.8882341364350724
  - 0.8875708277394632
  - 0.8914128245598177
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8192313777203857
  - 0.8284272529983515
  - 0.8263995124009537
  - 0.8205644973783328
  - 0.8363183079569287
  train_roc_auc_weighted_oob:
  - 0.7956795644982676
  - 0.8119043251557784
  - 0.8088320260113547
  - 0.8030607600587706
  - 0.8104020091019981
start: 2023-12-21 23:59:11.851836
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
