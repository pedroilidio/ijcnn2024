active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T8AmpmZmZnZP8DMzMzMzAzAQDMzMzMzA0AAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:44:37.831760
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__1
  params: {}
hash: e71aa170ad6c4dfbcfde4b0793dc9097d864d6e0abb1c82f9d98ac5dbce91b1f
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e71aa17_20231221T074429099703_embedding_proba_weak__1_VirusGO.yml
results:
  fit_time:
  - 3.962329864501953
  - 4.18366265296936
  - 3.9977757930755615
  - 4.1605658531188965
  - 3.936241626739502
  score_time:
  - 1.1269752979278564
  - 1.1442527770996094
  - 1.1728403568267822
  - 1.1104891300201416
  - 1.1347453594207764
  test_average_precision_macro:
  - 0.9914961934081999
  - 0.985439817930732
  - 0.9190513280557667
  - 0.8615458918679622
  - 0.9595086766403664
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9400776759833209
  - 0.9331739601611595
  - 0.8449380153514184
  - 0.8763857014610426
  - 0.9301524554908157
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.975609756097561
  - 0.9674796747967479
  - 0.9
  - 0.9009971509971509
  - 0.9378048780487804
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9879527042767173
  - 0.9838834125447398
  - 0.9004196521437184
  - 0.8859186987757223
  - 0.9663679601901632
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9430894308943089
  - 0.9349593495934959
  - 0.9222222222222222
  - 0.9102564102564102
  - 0.9308943089430893
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.943089430894309
  - 0.9349593495934959
  - 0.9222222222222223
  - 0.9102564102564102
  - 0.9308943089430894
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9430894308943091
  - 0.934959349593496
  - 0.9222222222222223
  - 0.9102564102564105
  - 0.9308943089430896
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9522357723577235
  - 0.9333958724202627
  - 0.8919389978213508
  - 0.8958974358974359
  - 0.9230033476805357
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8938599729297403
  - 0.8800343217431185
  - 0.858968816303295
  - 0.8381282375585565
  - 0.8711808002505675
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8923076923076924
  - 0.8778625954198473
  - 0.8556701030927835
  - 0.8352941176470589
  - 0.870722433460076
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9041811846689894
  - 0.8966318234610917
  - 0.8714285714285714
  - 0.8601953601953602
  - 0.8931475029036005
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9098775685984988
  - 0.8782934512964846
  - 0.8076542593127765
  - 0.8159934188970663
  - 0.857479952281594
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.975609756097561
  - 0.9674796747967479
  - 0.9
  - 0.9009971509971509
  - 0.9378048780487804
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4403606991948205
  - 0.5160985408023991
  - 0.4953930737819437
  - 0.456524361369202
  - 0.571863771589473
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8118962896929951
  - 0.7970323378119462
  - 0.7377105179026412
  - 0.7180287023450416
  - 0.7801205416923435
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7292040633195374
  - 0.7751176128813343
  - 0.689493082760794
  - 0.672900268950011
  - 0.7394201894150448
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7350821505176505
  - 0.7349410068927752
  - 0.6683909161493594
  - 0.6467170556166688
  - 0.73752317758752
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9819965733449492
  - 0.9760434770928292
  - 0.9277347312129739
  - 0.9268767972173405
  - 0.954678855629508
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2195121951219512
  - -1.3414634146341464
  - -1.4222222222222223
  - -1.641025641025641
  - -1.4390243902439024
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.056910569105691054
  - -0.06504065040650407
  - -0.07777777777777778
  - -0.08974358974358974
  - -0.06910569105691057
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.056910569105691054
  - -0.06504065040650407
  - -0.07777777777777778
  - -0.08974358974358974
  - -0.06910569105691057
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05691056910569105
  - -0.06504065040650406
  - -0.07777777777777778
  - -0.08974358974358973
  - -0.06910569105691056
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.047764227642276426
  - -0.06660412757973734
  - -0.10806100217864922
  - -0.1041025641025641
  - -0.07699665231946437
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.00975609756097561
  - -0.017073170731707315
  - -0.051111111111111114
  - -0.07364672364672366
  - -0.03902439024390244
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9430894308943089
  - 0.9349593495934959
  - 0.9222222222222222
  - 0.9102564102564102
  - 0.9308943089430893
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.943089430894309
  - 0.9349593495934959
  - 0.9222222222222223
  - 0.9102564102564102
  - 0.9308943089430894
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9430894308943091
  - 0.934959349593496
  - 0.9222222222222223
  - 0.9102564102564105
  - 0.9308943089430896
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9522357723577235
  - 0.9333958724202627
  - 0.8919389978213508
  - 0.8958974358974359
  - 0.9230033476805357
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9430894308943089
  - 0.9349593495934959
  - 0.9222222222222222
  - 0.9102564102564102
  - 0.9308943089430893
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.943089430894309
  - 0.9349593495934959
  - 0.9222222222222223
  - 0.9102564102564102
  - 0.9308943089430894
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9430894308943091
  - 0.934959349593496
  - 0.9222222222222223
  - 0.9102564102564105
  - 0.9308943089430896
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9522357723577235
  - 0.9333958724202627
  - 0.8919389978213508
  - 0.8958974358974359
  - 0.9230033476805357
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9962896825396825
  - 0.993569336600027
  - 0.9690287879469236
  - 0.929872959284724
  - 0.9879438261791204
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9831649831649832
  - 0.9793814432989691
  - 0.9637389202256245
  - 0.9452173913043478
  - 0.9750628456510809
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9902439024390244
  - 0.9829268292682927
  - 0.948888888888889
  - 0.9263532763532764
  - 0.9609756097560977
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9935714285714287
  - 0.9890287444635272
  - 0.9536314716063765
  - 0.9204329004329006
  - 0.9850992861373484
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.964407564610696
  - 0.9556987889402563
  - 0.961292265615358
  - 0.9780030894120616
  - 0.9558823839891337
  train_average_precision_macro_oob:
  - 0.9241156814517243
  - 0.925039062507858
  - 0.9355611328422501
  - 0.9484471273270731
  - 0.9224261509112751
  train_average_precision_micro:
  - 0.9283109794152399
  - 0.9117686329124625
  - 0.9425824999832528
  - 0.9452205321066944
  - 0.8989924168883838
  train_average_precision_micro_oob:
  - 0.9004486041059409
  - 0.8909083723382739
  - 0.9112625183664336
  - 0.9183035102250107
  - 0.8766562511491164
  train_average_precision_samples:
  - 0.9578313253012049
  - 0.9518072289156626
  - 0.9701646090534979
  - 0.96875
  - 0.9513052208835341
  train_average_precision_samples_oob:
  - 0.932128514056225
  - 0.9137550200803213
  - 0.9419067215363512
  - 0.9444444444444444
  - 0.9130522088353413
  train_average_precision_weighted:
  - 0.9598573377807311
  - 0.949038296939828
  - 0.9609450497222477
  - 0.9724216671554107
  - 0.9461230508978943
  train_average_precision_weighted_oob:
  - 0.9325535284566201
  - 0.9311862205439035
  - 0.942359475992468
  - 0.9506658269994587
  - 0.9274831149394462
  train_f1_macro:
  - 0.929718875502008
  - 0.9377510040160643
  - 0.9423868312757202
  - 0.9474206349206349
  - 0.9427710843373495
  train_f1_macro_oob:
  - 0.9216867469879517
  - 0.9277108433734939
  - 0.9320987654320989
  - 0.9335317460317459
  - 0.9236947791164658
  train_f1_micro:
  - 0.929718875502008
  - 0.9377510040160643
  - 0.9423868312757202
  - 0.9474206349206349
  - 0.9427710843373494
  train_f1_micro_oob:
  - 0.9216867469879518
  - 0.927710843373494
  - 0.9320987654320988
  - 0.933531746031746
  - 0.9236947791164659
  train_f1_samples:
  - 0.929718875502008
  - 0.9377510040160641
  - 0.9423868312757203
  - 0.947420634920635
  - 0.9427710843373494
  train_f1_samples_oob:
  - 0.9216867469879518
  - 0.927710843373494
  - 0.9320987654320988
  - 0.933531746031746
  - 0.9236947791164659
  train_f1_weighted:
  - 0.9236947791164658
  - 0.9343674698795182
  - 0.9428782015846692
  - 0.9426567656765676
  - 0.937751004016064
  train_f1_weighted_oob:
  - 0.9129459012520672
  - 0.9224397590361445
  - 0.9338492721577298
  - 0.9242102781706742
  - 0.9170712701552479
  train_jaccard_macro:
  - 0.8692537872481448
  - 0.8836620239154279
  - 0.8918950689834627
  - 0.9006038114139816
  - 0.892042051286036
  train_jaccard_macro_oob:
  - 0.8553559590913248
  - 0.8659835917949437
  - 0.8736010034132281
  - 0.8760165531691498
  - 0.8590709419541489
  train_jaccard_micro:
  - 0.8686679174484052
  - 0.8827977315689981
  - 0.8910505836575876
  - 0.9000942507068803
  - 0.8917378917378918
  train_jaccard_micro_oob:
  - 0.8547486033519553
  - 0.8651685393258427
  - 0.8728323699421965
  - 0.8753488372093023
  - 0.8582089552238806
  train_jaccard_samples:
  - 0.8866896156052781
  - 0.8980206540447503
  - 0.9072604350382129
  - 0.9148242630385488
  - 0.9061962134251292
  train_jaccard_samples_oob:
  - 0.8744979919678716
  - 0.8815261044176708
  - 0.889623750734862
  - 0.8929988662131519
  - 0.8755020080321284
  train_jaccard_weighted:
  - 0.8585567416520787
  - 0.8772969146313525
  - 0.8924198065432137
  - 0.8921923095660743
  - 0.8829533100971327
  train_jaccard_weighted_oob:
  - 0.8401084840579413
  - 0.8564045082267725
  - 0.8762911256734385
  - 0.8596968105321917
  - 0.8471983818089472
  train_label_ranking_average_precision_score:
  - 0.9578313253012046
  - 0.9518072289156625
  - 0.9701646090534979
  - 0.9687499999999998
  - 0.9513052208835339
  train_label_ranking_average_precision_score_oob:
  - 0.9321285140562247
  - 0.9137550200803213
  - 0.941906721536351
  - 0.9444444444444442
  - 0.9130522088353413
  train_matthews_corrcoef_macro:
  - 0.49931510943459606
  - 0.5134132406337667
  - 0.5433968286436831
  - 0.6314714507436447
  - 0.6067553335084016
  train_matthews_corrcoef_macro_oob:
  - 0.4617075227966955
  - 0.45157788278938144
  - 0.4675456569046774
  - 0.5672664664676321
  - 0.40437058973732065
  train_matthews_corrcoef_micro:
  - 0.7740266958780896
  - 0.7978797275428609
  - 0.8179682897087195
  - 0.8303518767033911
  - 0.816183551622559
  train_matthews_corrcoef_micro_oob:
  - 0.7466110461860606
  - 0.7630715192572324
  - 0.7839835942230081
  - 0.7834722389229412
  - 0.750696058222141
  train_matthews_corrcoef_samples:
  - 0.7275081271532391
  - 0.7482451676214336
  - 0.7762124701542568
  - 0.8067668629791973
  - 0.7864059327173034
  train_matthews_corrcoef_samples_oob:
  - 0.6904678663216096
  - 0.6895181598018522
  - 0.7219835261052897
  - 0.744170269133859
  - 0.6898416608646912
  train_matthews_corrcoef_weighted:
  - 0.7107388966127953
  - 0.7364790745466543
  - 0.7600156210761276
  - 0.8008271347014756
  - 0.7836286510623219
  train_matthews_corrcoef_weighted_oob:
  - 0.6770339604645601
  - 0.6896462502788551
  - 0.7135629366952343
  - 0.7441026814483879
  - 0.6612903518786896
  train_ndgc:
  - 0.9697671921712442
  - 0.9653205626962015
  - 0.9786345952802066
  - 0.9779096299714896
  - 0.9644820784624768
  train_ndgc_oob:
  - 0.951291870424965
  - 0.9384038284343422
  - 0.9586391644138839
  - 0.9595625239719542
  - 0.9365637184783197
  train_neg_coverage_error:
  - -1.3433734939759037
  - -1.3313253012048192
  - -1.3271604938271604
  - -1.2857142857142858
  - -1.3253012048192772
  train_neg_coverage_error_oob:
  - -1.4457831325301205
  - -1.4939759036144578
  - -1.4506172839506173
  - -1.3511904761904763
  - -1.4698795180722892
  train_neg_hamming_loss_macro:
  - -0.07028112449799197
  - -0.06224899598393574
  - -0.05761316872427983
  - -0.05257936507936508
  - -0.05722891566265059
  train_neg_hamming_loss_macro_oob:
  - -0.07831325301204818
  - -0.07228915662650603
  - -0.06790123456790123
  - -0.06646825396825397
  - -0.07630522088353414
  train_neg_hamming_loss_micro:
  - -0.07028112449799197
  - -0.06224899598393574
  - -0.05761316872427984
  - -0.05257936507936508
  - -0.0572289156626506
  train_neg_hamming_loss_micro_oob:
  - -0.0783132530120482
  - -0.07228915662650602
  - -0.06790123456790123
  - -0.06646825396825397
  - -0.07630522088353414
  train_neg_hamming_loss_samples:
  - -0.07028112449799197
  - -0.06224899598393573
  - -0.05761316872427983
  - -0.05257936507936507
  - -0.05722891566265059
  train_neg_hamming_loss_samples_oob:
  - -0.0783132530120482
  - -0.07228915662650602
  - -0.06790123456790123
  - -0.06646825396825397
  - -0.07630522088353413
  train_neg_hamming_loss_weighted:
  - -0.07630522088353414
  - -0.06563253012048192
  - -0.05712179841533075
  - -0.057343234323432336
  - -0.06224899598393575
  train_neg_hamming_loss_weighted_oob:
  - -0.0870540987479329
  - -0.07756024096385541
  - -0.06615072784227012
  - -0.07578972182932579
  - -0.08292872984475215
  train_neg_label_ranking_loss:
  - -0.0213855421686747
  - -0.02379518072289157
  - -0.016512345679012344
  - -0.01517857142857143
  - -0.022289156626506025
  train_neg_label_ranking_loss_oob:
  - -0.04004350736278447
  - -0.051489290495314595
  - -0.04041495198902607
  - -0.029166666666666667
  - -0.048862115127175365
  train_precision_macro:
  - 0.929718875502008
  - 0.9377510040160643
  - 0.9423868312757202
  - 0.9474206349206349
  - 0.9427710843373495
  train_precision_macro_oob:
  - 0.9216867469879517
  - 0.9277108433734939
  - 0.9320987654320989
  - 0.9335317460317459
  - 0.9236947791164658
  train_precision_micro:
  - 0.929718875502008
  - 0.9377510040160643
  - 0.9423868312757202
  - 0.9474206349206349
  - 0.9427710843373494
  train_precision_micro_oob:
  - 0.9216867469879518
  - 0.927710843373494
  - 0.9320987654320988
  - 0.933531746031746
  - 0.9236947791164659
  train_precision_samples:
  - 0.929718875502008
  - 0.9377510040160641
  - 0.9423868312757203
  - 0.947420634920635
  - 0.9427710843373494
  train_precision_samples_oob:
  - 0.9216867469879518
  - 0.927710843373494
  - 0.9320987654320988
  - 0.933531746031746
  - 0.9236947791164659
  train_precision_weighted:
  - 0.9236947791164658
  - 0.9343674698795182
  - 0.9428782015846692
  - 0.9426567656765676
  - 0.937751004016064
  train_precision_weighted_oob:
  - 0.9129459012520672
  - 0.9224397590361445
  - 0.9338492721577298
  - 0.9242102781706742
  - 0.9170712701552479
  train_recall_macro:
  - 0.929718875502008
  - 0.9377510040160643
  - 0.9423868312757202
  - 0.9474206349206349
  - 0.9427710843373495
  train_recall_macro_oob:
  - 0.9216867469879517
  - 0.9277108433734939
  - 0.9320987654320989
  - 0.9335317460317459
  - 0.9236947791164658
  train_recall_micro:
  - 0.929718875502008
  - 0.9377510040160643
  - 0.9423868312757202
  - 0.9474206349206349
  - 0.9427710843373494
  train_recall_micro_oob:
  - 0.9216867469879518
  - 0.927710843373494
  - 0.9320987654320988
  - 0.933531746031746
  - 0.9236947791164659
  train_recall_samples:
  - 0.929718875502008
  - 0.9377510040160641
  - 0.9423868312757203
  - 0.947420634920635
  - 0.9427710843373494
  train_recall_samples_oob:
  - 0.9216867469879518
  - 0.927710843373494
  - 0.9320987654320988
  - 0.933531746031746
  - 0.9236947791164659
  train_recall_weighted:
  - 0.9236947791164658
  - 0.9343674698795182
  - 0.9428782015846692
  - 0.9426567656765676
  - 0.937751004016064
  train_recall_weighted_oob:
  - 0.9129459012520672
  - 0.9224397590361445
  - 0.9338492721577298
  - 0.9242102781706742
  - 0.9170712701552479
  train_roc_auc_macro:
  - 0.9869639489155642
  - 0.9831814239811395
  - 0.9892568271374028
  - 0.9912528078538339
  - 0.9830201263806675
  train_roc_auc_macro_oob:
  - 0.9708545315608257
  - 0.9654478296475141
  - 0.9743246256135492
  - 0.9815074361865026
  - 0.9705054888450411
  train_roc_auc_micro:
  - 0.9807356654783125
  - 0.9769597989949749
  - 0.9832581579779442
  - 0.9869512075277006
  - 0.9770174285803686
  train_roc_auc_micro_oob:
  - 0.9671902852049911
  - 0.9625565326633165
  - 0.9674971446270592
  - 0.9755976217969191
  - 0.9628085985168497
  train_roc_auc_samples:
  - 0.9786144578313254
  - 0.9762048192771084
  - 0.9834876543209876
  - 0.9848214285714286
  - 0.977710843373494
  train_roc_auc_samples_oob:
  - 0.9599564926372156
  - 0.9485107095046854
  - 0.959585048010974
  - 0.9708333333333333
  - 0.9511378848728248
  train_roc_auc_weighted:
  - 0.9796692792824565
  - 0.9738952176403207
  - 0.9838165805123957
  - 0.9862945186060598
  - 0.9736018096745709
  train_roc_auc_weighted_oob:
  - 0.9637824737209033
  - 0.9595908785944868
  - 0.96728360794703
  - 0.9752150839176424
  - 0.9639938654490893
start: 2023-12-21 07:44:29.099703
wrapper: null
