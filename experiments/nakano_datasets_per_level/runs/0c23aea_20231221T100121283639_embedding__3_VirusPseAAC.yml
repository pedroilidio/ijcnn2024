active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b/AzMzMzMwEwKCZmZmZmRVAADMzMzMz478AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:01:33.690724
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__3
  params: {}
hash: 0c23aeaef2b7b87957cb01350f395506c7949e3f83a740ea895b5d757f2db908
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0c23aea_20231221T100121283639_embedding__3_VirusPseAAC.yml
results:
  fit_time:
  - 5.869597673416138
  - 5.932060956954956
  - 6.086709499359131
  - 5.9906065464019775
  - 6.248671770095825
  score_time:
  - 1.817990779876709
  - 1.644603967666626
  - 1.77146577835083
  - 1.6219720840454102
  - 1.7450881004333496
  test_average_precision_macro:
  - 0.4801861401624989
  - 0.29508929019023894
  - 0.4462514698309718
  - 0.43659770911762047
  - 0.3293599051482831
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4760124829496766
  - 0.37654169214982014
  - 0.5354556255710938
  - 0.48450562311105627
  - 0.3806050929057722
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7155038759689922
  - 0.6543560606060606
  - 0.7516203703703703
  - 0.7223544973544973
  - 0.6424603174603174
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.49515966447998294
  - 0.3404755745611423
  - 0.4936875506978433
  - 0.5073431924229436
  - 0.3826856897033909
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.810077519379845
  - 0.7992424242424243
  - 0.7824074074074074
  - 0.8015873015873017
  - 0.7777777777777778
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.810077519379845
  - 0.7992424242424242
  - 0.7824074074074074
  - 0.8015873015873016
  - 0.7777777777777778
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8100775193798451
  - 0.7992424242424245
  - 0.7824074074074073
  - 0.8015873015873017
  - 0.7777777777777777
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7113543091655267
  - 0.6870629370629371
  - 0.6524943310657597
  - 0.6857142857142857
  - 0.6419047619047619
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7015489290990916
  - 0.6907747814418393
  - 0.6717478220252916
  - 0.6945676044234766
  - 0.6706274703557312
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6807817589576547
  - 0.6656151419558359
  - 0.6425855513307985
  - 0.6688741721854304
  - 0.6363636363636364
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6926910299003324
  - 0.6764069264069265
  - 0.6547619047619049
  - 0.6819727891156463
  - 0.649092970521542
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5689788265114412
  - 0.5430506212024807
  - 0.5046122419245254
  - 0.5393792737056777
  - 0.5007875494071147
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7155038759689921
  - 0.6543560606060604
  - 0.7516203703703703
  - 0.7223544973544973
  - 0.6424603174603174
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0416914608769339
  - 0.00738453498780896
  - 0.035036235335002504
  - 0.02617813418133237
  - -0.02875318440694649
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.19194788295217266
  - 0.09610778873874067
  - 0.17751428500422856
  - 0.16909778060619424
  - 0.07448711470284299
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.10232558139534882
  - 0.05
  - 0.08979043144537988
  - 0.10112413322618947
  - 0.049164549144460744
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07847804400364028
  - 0.014357732392385051
  - 0.07293257151367867
  - 0.053403393729918036
  - -0.058656496190170854
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7893980610560304
  - 0.7424990171618433
  - 0.8155575052249042
  - 0.7929162207981013
  - 0.7358425405056476
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2325581395348837
  - -2.3636363636363638
  - -2.1666666666666665
  - -2.0952380952380953
  - -2.357142857142857
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18992248062015504
  - -0.20075757575757577
  - -0.2175925925925926
  - -0.19841269841269846
  - -0.22222222222222224
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18992248062015504
  - -0.20075757575757575
  - -0.2175925925925926
  - -0.1984126984126984
  - -0.2222222222222222
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18992248062015502
  - -0.2007575757575757
  - -0.2175925925925926
  - -0.19841269841269837
  - -0.22222222222222224
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.28864569083447333
  - -0.31293706293706297
  - -0.3475056689342403
  - -0.3142857142857143
  - -0.3580952380952381
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20290697674418604
  - -0.23465909090909085
  - -0.17430555555555557
  - -0.1838624338624339
  - -0.22407407407407412
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.810077519379845
  - 0.7992424242424243
  - 0.7824074074074074
  - 0.8015873015873017
  - 0.7777777777777778
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.810077519379845
  - 0.7992424242424242
  - 0.7824074074074074
  - 0.8015873015873016
  - 0.7777777777777778
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8100775193798451
  - 0.7992424242424245
  - 0.7824074074074073
  - 0.8015873015873017
  - 0.7777777777777777
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7113543091655267
  - 0.6870629370629371
  - 0.6524943310657597
  - 0.6857142857142857
  - 0.6419047619047619
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.810077519379845
  - 0.7992424242424243
  - 0.7824074074074074
  - 0.8015873015873017
  - 0.7777777777777778
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.810077519379845
  - 0.7992424242424242
  - 0.7824074074074074
  - 0.8015873015873016
  - 0.7777777777777778
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8100775193798451
  - 0.7992424242424245
  - 0.7824074074074073
  - 0.8015873015873017
  - 0.7777777777777777
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7113543091655267
  - 0.6870629370629371
  - 0.6524943310657597
  - 0.6857142857142857
  - 0.6419047619047619
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.70578313661647
  - 0.4999916199058356
  - 0.5880486039445018
  - 0.7745391969367977
  - 0.5964570433436532
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8020270910296486
  - 0.7497278664731495
  - 0.7932298667970181
  - 0.8226732673267326
  - 0.7692079207920792
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7970930232558139
  - 0.765340909090909
  - 0.8256944444444445
  - 0.8161375661375662
  - 0.7759259259259259
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6857840344114854
  - 0.49077750087365474
  - 0.5768080916577157
  - 0.7253582248303687
  - 0.5430552631578948
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9138855290137836
  - 0.9151755116586773
  - 0.9150818809642542
  - 0.9783271641990129
  - 0.9795269102665943
  train_average_precision_macro_oob:
  - 0.4180855318219756
  - 0.4749194748051273
  - 0.4232294047106652
  - 0.4104904438435492
  - 0.405005535050454
  train_average_precision_micro:
  - 0.9105500044732114
  - 0.9208046462907763
  - 0.909857771168908
  - 0.9064300766050581
  - 0.9076041270777504
  train_average_precision_micro_oob:
  - 0.6186911617675928
  - 0.6667394570816558
  - 0.5651567573939025
  - 0.6066692914153348
  - 0.5858567969747377
  train_average_precision_samples:
  - 0.9041666666666665
  - 0.9069529652351739
  - 0.8947368421052632
  - 0.8934343434343436
  - 0.8911111111111111
  train_average_precision_samples_oob:
  - 0.7556233062330623
  - 0.7403715064758009
  - 0.7226933073424302
  - 0.7517171717171717
  - 0.7398316498316498
  train_average_precision_weighted:
  - 0.9720050914938994
  - 0.9758814678183874
  - 0.9698690835115769
  - 0.9953299636686357
  - 0.9962850486729344
  train_average_precision_weighted_oob:
  - 0.5887997577379033
  - 0.6520320982722144
  - 0.5576053517795252
  - 0.5753943049594379
  - 0.5485008921965516
  train_f1_macro:
  - 0.9227642276422764
  - 0.9284253578732106
  - 0.9220272904483431
  - 0.9232323232323233
  - 0.9222222222222222
  train_f1_macro_oob:
  - 0.8160569105691057
  - 0.8312883435582821
  - 0.8148148148148148
  - 0.8262626262626264
  - 0.8212121212121213
  train_f1_micro:
  - 0.9227642276422764
  - 0.9284253578732107
  - 0.9220272904483431
  - 0.9232323232323232
  - 0.9222222222222223
  train_f1_micro_oob:
  - 0.8160569105691057
  - 0.8312883435582822
  - 0.8148148148148148
  - 0.8262626262626263
  - 0.8212121212121212
  train_f1_samples:
  - 0.9227642276422763
  - 0.9284253578732107
  - 0.9220272904483432
  - 0.9232323232323233
  - 0.9222222222222224
  train_f1_samples_oob:
  - 0.8160569105691056
  - 0.8312883435582821
  - 0.8148148148148147
  - 0.8262626262626261
  - 0.8212121212121208
  train_f1_weighted:
  - 0.9379322897706588
  - 0.9500613496932516
  - 0.9354708610606979
  - 0.9405940594059405
  - 0.9372037203720371
  train_f1_weighted_oob:
  - 0.7195425312462079
  - 0.7519325153374234
  - 0.7175409788839915
  - 0.7428442844284427
  - 0.7313231323132313
  train_jaccard_macro:
  - 0.8598325880059626
  - 0.8707668294652652
  - 0.8583605882152182
  - 0.8608936350618036
  - 0.8591934289905095
  train_jaccard_macro_oob:
  - 0.7085008212704799
  - 0.7251004773680574
  - 0.7074415648096403
  - 0.7189165848717022
  - 0.7136088906756163
  train_jaccard_micro:
  - 0.8566037735849057
  - 0.8664122137404581
  - 0.8553345388788427
  - 0.8574108818011257
  - 0.8556701030927835
  train_jaccard_micro_oob:
  - 0.6892703862660944
  - 0.7112860892388452
  - 0.6875
  - 0.7039586919104991
  - 0.6966580976863753
  train_jaccard_samples:
  - 0.8732578397212544
  - 0.881244522348817
  - 0.8692564745196324
  - 0.8722943722943722
  - 0.870995670995671
  train_jaccard_samples_oob:
  - 0.7029616724738678
  - 0.7245106631609699
  - 0.6984126984126985
  - 0.7196248196248196
  - 0.7108225108225109
  train_jaccard_weighted:
  - 0.8860756417431249
  - 0.9093514814990571
  - 0.8818056704069298
  - 0.8915176176922998
  - 0.8852356314134753
  train_jaccard_weighted_oob:
  - 0.5764216209356496
  - 0.6121343019700062
  - 0.575119441087228
  - 0.6018992123012328
  - 0.5884855785181314
  train_label_ranking_average_precision_score:
  - 0.9041666666666665
  - 0.9069529652351737
  - 0.8947368421052632
  - 0.8934343434343434
  - 0.8911111111111111
  train_label_ranking_average_precision_score_oob:
  - 0.7556233062330623
  - 0.7403715064758007
  - 0.72269330734243
  - 0.7517171717171717
  - 0.7398316498316496
  train_matthews_corrcoef_macro:
  - 0.3086457498180678
  - 0.32088974213461513
  - 0.305551620664334
  - 0.3109704534992818
  - 0.3089141768977164
  train_matthews_corrcoef_macro_oob:
  - 0.08913692941473417
  - 0.13173685185705253
  - 0.06468297950383249
  - 0.11299908026558525
  - 0.10184440072345884
  train_matthews_corrcoef_micro:
  - 0.7522729007498717
  - 0.7722333453190438
  - 0.7431227879672178
  - 0.7542508796408154
  - 0.7508174830945973
  train_matthews_corrcoef_micro_oob:
  - 0.2780037415214956
  - 0.3760402237810273
  - 0.22299758623375177
  - 0.34082156590501156
  - 0.3098855241447817
  train_matthews_corrcoef_samples:
  - 0.6536663722120079
  - 0.6661750121429632
  - 0.6290266824733197
  - 0.6392659133152925
  - 0.6415238669295172
  train_matthews_corrcoef_samples_oob:
  - 0.13658536585365852
  - 0.20036591568263443
  - 0.09979480154425352
  - 0.2046198646070811
  - 0.1687639387524336
  train_matthews_corrcoef_weighted:
  - 0.631109385856464
  - 0.6548632664285805
  - 0.6191564113472445
  - 0.6333480842207063
  - 0.6288963777550297
  train_matthews_corrcoef_weighted_oob:
  - 0.18165183367992108
  - 0.26916524956932725
  - 0.12912708245946022
  - 0.22973918482978994
  - 0.20687399030334452
  train_ndgc:
  - 0.9305936868025195
  - 0.9327597239640895
  - 0.9234599460760198
  - 0.923330511248445
  - 0.9209723721430105
  train_ndgc_oob:
  - 0.8176694975100238
  - 0.8066484597659324
  - 0.7938132448292008
  - 0.8154688916096754
  - 0.8061999828157436
  train_neg_coverage_error:
  - -1.5426829268292683
  - -1.5276073619631902
  - -1.5029239766081872
  - -1.5575757575757576
  - -1.5696969696969696
  train_neg_coverage_error_oob:
  - -2.152439024390244
  - -2.1901840490797544
  - -2.1871345029239766
  - -2.2
  - -2.175757575757576
  train_neg_hamming_loss_macro:
  - -0.07723577235772357
  - -0.07157464212678936
  - -0.07797270955165692
  - -0.07676767676767678
  - -0.07777777777777778
  train_neg_hamming_loss_macro_oob:
  - -0.18394308943089432
  - -0.16871165644171782
  - -0.1851851851851852
  - -0.17373737373737372
  - -0.1787878787878788
  train_neg_hamming_loss_micro:
  - -0.07723577235772358
  - -0.07157464212678936
  - -0.07797270955165692
  - -0.07676767676767676
  - -0.07777777777777778
  train_neg_hamming_loss_micro_oob:
  - -0.1839430894308943
  - -0.1687116564417178
  - -0.18518518518518517
  - -0.17373737373737375
  - -0.1787878787878788
  train_neg_hamming_loss_samples:
  - -0.07723577235772357
  - -0.07157464212678936
  - -0.07797270955165692
  - -0.07676767676767676
  - -0.07777777777777777
  train_neg_hamming_loss_samples_oob:
  - -0.1839430894308943
  - -0.16871165644171776
  - -0.1851851851851852
  - -0.17373737373737372
  - -0.1787878787878788
  train_neg_hamming_loss_weighted:
  - -0.06206771022934109
  - -0.04993865030674846
  - -0.06452913893930227
  - -0.0594059405940594
  - -0.06279627962796279
  train_neg_hamming_loss_weighted_oob:
  - -0.280457468753792
  - -0.2480674846625767
  - -0.2824590211160084
  - -0.25715571557155714
  - -0.2686768676867687
  train_neg_label_ranking_loss:
  - -0.05960365853658538
  - -0.05567484662576687
  - -0.059714100064977266
  - -0.06166666666666667
  - -0.06552188552188552
  train_neg_label_ranking_loss_oob:
  - -0.18648373983739835
  - -0.1925357873210634
  - -0.1966049382716049
  - -0.19264309764309764
  - -0.1918013468013468
  train_precision_macro:
  - 0.9227642276422764
  - 0.9284253578732106
  - 0.9220272904483431
  - 0.9232323232323233
  - 0.9222222222222222
  train_precision_macro_oob:
  - 0.8160569105691057
  - 0.8312883435582821
  - 0.8148148148148148
  - 0.8262626262626264
  - 0.8212121212121213
  train_precision_micro:
  - 0.9227642276422764
  - 0.9284253578732107
  - 0.9220272904483431
  - 0.9232323232323232
  - 0.9222222222222223
  train_precision_micro_oob:
  - 0.8160569105691057
  - 0.8312883435582822
  - 0.8148148148148148
  - 0.8262626262626263
  - 0.8212121212121212
  train_precision_samples:
  - 0.9227642276422763
  - 0.9284253578732107
  - 0.9220272904483432
  - 0.9232323232323233
  - 0.9222222222222224
  train_precision_samples_oob:
  - 0.8160569105691056
  - 0.8312883435582821
  - 0.8148148148148147
  - 0.8262626262626261
  - 0.8212121212121208
  train_precision_weighted:
  - 0.9379322897706588
  - 0.9500613496932516
  - 0.9354708610606979
  - 0.9405940594059405
  - 0.9372037203720371
  train_precision_weighted_oob:
  - 0.7195425312462079
  - 0.7519325153374234
  - 0.7175409788839915
  - 0.7428442844284427
  - 0.7313231323132313
  train_recall_macro:
  - 0.9227642276422764
  - 0.9284253578732106
  - 0.9220272904483431
  - 0.9232323232323233
  - 0.9222222222222222
  train_recall_macro_oob:
  - 0.8160569105691057
  - 0.8312883435582821
  - 0.8148148148148148
  - 0.8262626262626264
  - 0.8212121212121213
  train_recall_micro:
  - 0.9227642276422764
  - 0.9284253578732107
  - 0.9220272904483431
  - 0.9232323232323232
  - 0.9222222222222223
  train_recall_micro_oob:
  - 0.8160569105691057
  - 0.8312883435582822
  - 0.8148148148148148
  - 0.8262626262626263
  - 0.8212121212121212
  train_recall_samples:
  - 0.9227642276422763
  - 0.9284253578732107
  - 0.9220272904483432
  - 0.9232323232323233
  - 0.9222222222222224
  train_recall_samples_oob:
  - 0.8160569105691056
  - 0.8312883435582821
  - 0.8148148148148147
  - 0.8262626262626261
  - 0.8212121212121208
  train_recall_weighted:
  - 0.9379322897706588
  - 0.9500613496932516
  - 0.9354708610606979
  - 0.9405940594059405
  - 0.9372037203720371
  train_recall_weighted_oob:
  - 0.7195425312462079
  - 0.7519325153374234
  - 0.7175409788839915
  - 0.7428442844284427
  - 0.7313231323132313
  train_roc_auc_macro:
  - 0.9951859893351118
  - 0.9955910044484885
  - 0.995249060247994
  - 0.9992869253937239
  - 0.9991011016878982
  train_roc_auc_macro_oob:
  - 0.7210530881498958
  - 0.7686496080703878
  - 0.7134327033050316
  - 0.6787281189843123
  - 0.6916814141986326
  train_roc_auc_micro:
  - 0.9625372498935717
  - 0.9671272493573264
  - 0.9639909259048656
  - 0.9622053575915968
  - 0.9621927928833492
  train_roc_auc_micro_oob:
  - 0.8279865042603077
  - 0.8386953727506427
  - 0.8187754760009337
  - 0.8103482937126201
  - 0.813696788460572
  train_roc_auc_samples:
  - 0.9403963414634144
  - 0.9443251533742332
  - 0.9402858999350228
  - 0.9383333333333332
  - 0.9344781144781146
  train_roc_auc_samples_oob:
  - 0.8135162601626017
  - 0.8074642126789366
  - 0.8033950617283949
  - 0.8073569023569025
  - 0.8081986531986531
  train_roc_auc_weighted:
  - 0.9979579769195149
  - 0.9983879284197755
  - 0.9981597471506636
  - 0.9998423924883356
  - 0.9997938087994399
  train_roc_auc_weighted_oob:
  - 0.7624024320781154
  - 0.8035178471291502
  - 0.7387864185298998
  - 0.7226166663144502
  - 0.7164781958185313
start: 2023-12-21 10:01:21.283639
wrapper: null
