active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b9AMzMzMzMLQKCZmZmZmRVAgJmZmZmZ+b9gZmZmZmYWwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:12:28.968500
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__3
  params: {}
hash: d6548145ae08e609e3457ed0fff6c9f61d7710e3a6ef916034d7a6e801a2ab8b
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d654814_20231221T101214248148_proba_weak__3_VirusPseAAC.yml
results:
  fit_time:
  - 9.653950452804565
  - 9.50719165802002
  - 9.555015563964844
  - 9.391230821609497
  - 9.409989356994629
  score_time:
  - 1.367081880569458
  - 1.2924437522888184
  - 1.2474994659423828
  - 1.292069911956787
  - 1.2945363521575928
  test_average_precision_macro:
  - 0.4557266257128916
  - 0.48571612943510106
  - 0.35830168325343204
  - 0.34663680472109215
  - 0.30975823981415196
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4031199794206331
  - 0.4589857556193543
  - 0.5168958982132575
  - 0.3959640636413263
  - 0.37006896989159255
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6267441860465116
  - 0.6460526315789474
  - 0.716898148148148
  - 0.613953488372093
  - 0.625354609929078
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.45302493689589773
  - 0.4794770943059972
  - 0.5178436409101365
  - 0.39845633143177195
  - 0.3573959556447625
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7906976744186047
  - 0.7850877192982456
  - 0.7870370370370371
  - 0.7945736434108527
  - 0.7907801418439716
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7906976744186046
  - 0.7850877192982456
  - 0.7870370370370371
  - 0.7945736434108527
  - 0.7907801418439716
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7906976744186045
  - 0.7850877192982455
  - 0.7870370370370369
  - 0.7945736434108527
  - 0.7907801418439717
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6744186046511629
  - 0.6535087719298246
  - 0.6711111111111111
  - 0.6707706338349294
  - 0.6653027823240589
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6812697364939228
  - 0.677055648753762
  - 0.6741633225354154
  - 0.687860789776102
  - 0.6854136940971675
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6538461538461539
  - 0.6462093862815884
  - 0.648854961832061
  - 0.6591639871382636
  - 0.6539589442815249
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6655592469545958
  - 0.6560150375939852
  - 0.6653439153439155
  - 0.6710963455149502
  - 0.667679837892604
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5303603602079816
  - 0.508304326700553
  - 0.5217067543393125
  - 0.5285939873805835
  - 0.5236914035233362
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6267441860465115
  - 0.6460526315789474
  - 0.716898148148148
  - 0.613953488372093
  - 0.6253546099290779
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.0035190988591749
  - 0.0117474128770936
  - 0.059276176743356813
  - -0.0003219169289451114
  - -0.01062850535836949
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.10812909340507669
  - 0.13476227731334106
  - 0.24474163449857878
  - 0.12145104515696377
  - 0.10893641884788219
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.06662583869924073
  - 0.08677280516055337
  - 0.14714907211391742
  - 0.07517338446589943
  - 0.07372151200143301
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.007038197718349801
  - 0.021929006191930486
  - 0.1209234005564479
  - -0.0037955320636420048
  - -0.02009369702438061
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7205857067354883
  - 0.7421889075213832
  - 0.791372688666553
  - 0.7140746914559678
  - 0.7218008644878162
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.604651162790698
  - -2.4210526315789473
  - -2.4166666666666665
  - -2.4186046511627906
  - -2.3617021276595747
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2093023255813953
  - -0.21491228070175436
  - -0.21296296296296294
  - -0.2054263565891473
  - -0.20921985815602837
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20930232558139536
  - -0.2149122807017544
  - -0.21296296296296297
  - -0.2054263565891473
  - -0.20921985815602837
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2093023255813954
  - -0.21491228070175436
  - -0.212962962962963
  - -0.2054263565891473
  - -0.20921985815602834
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32558139534883723
  - -0.34649122807017546
  - -0.32888888888888884
  - -0.3292293661650707
  - -0.334697217675941
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.28339793281653747
  - -0.22565789473684209
  - -0.20439814814814816
  - -0.24360465116279065
  - -0.24893617021276596
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7906976744186047
  - 0.7850877192982456
  - 0.7870370370370371
  - 0.7945736434108527
  - 0.7907801418439716
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7906976744186046
  - 0.7850877192982456
  - 0.7870370370370371
  - 0.7945736434108527
  - 0.7907801418439716
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7906976744186045
  - 0.7850877192982455
  - 0.7870370370370369
  - 0.7945736434108527
  - 0.7907801418439717
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6744186046511629
  - 0.6535087719298246
  - 0.6711111111111111
  - 0.6707706338349294
  - 0.6653027823240589
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7906976744186047
  - 0.7850877192982456
  - 0.7870370370370371
  - 0.7945736434108527
  - 0.7907801418439716
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7906976744186046
  - 0.7850877192982456
  - 0.7870370370370371
  - 0.7945736434108527
  - 0.7907801418439716
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7906976744186045
  - 0.7850877192982455
  - 0.7870370370370369
  - 0.7945736434108527
  - 0.7907801418439717
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6744186046511629
  - 0.6535087719298246
  - 0.6711111111111111
  - 0.6707706338349294
  - 0.6653027823240589
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6625063721548656
  - 0.6830323985654868
  - 0.605406283997265
  - 0.6646919063418347
  - 0.5431578614694564
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7578857630008524
  - 0.805324074074074
  - 0.7939759036144578
  - 0.7734204793028323
  - 0.7627926421404683
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7166020671834626
  - 0.774342105263158
  - 0.795601851851852
  - 0.7563953488372093
  - 0.751063829787234
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6262185925026671
  - 0.6120509520095917
  - 0.6495148107337309
  - 0.608233796096063
  - 0.5562805005517516
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9622891678038736
  - 0.9509654764167719
  - 0.9635511148904006
  - 0.9735640098510164
  - 0.9511328991785648
  train_average_precision_macro_oob:
  - 0.8273791054887228
  - 0.801559983370287
  - 0.8195533049617781
  - 0.8192606471423981
  - 0.7975443135731112
  train_average_precision_micro:
  - 0.9941171818073832
  - 0.9857888986172102
  - 0.9929877214518098
  - 0.9925553850884291
  - 0.990722132765749
  train_average_precision_micro_oob:
  - 0.9232539875626784
  - 0.90906889860622
  - 0.9315810164897562
  - 0.9108871306676245
  - 0.9120151502239663
  train_average_precision_samples:
  - 0.989329268292683
  - 0.9827416173570018
  - 0.9894736842105263
  - 0.9888211382113821
  - 0.9927083333333332
  train_average_precision_samples_oob:
  - 0.9324186991869919
  - 0.9127218934911243
  - 0.9407407407407408
  - 0.9204268292682927
  - 0.9038541666666667
  train_average_precision_weighted:
  - 0.9927895536323982
  - 0.9854887465463188
  - 0.9912148357692911
  - 0.994579888776668
  - 0.9870512702381897
  train_average_precision_weighted_oob:
  - 0.9403291346754581
  - 0.927503781164224
  - 0.9349298158845959
  - 0.9364762063418212
  - 0.9296940325975459
  train_f1_macro:
  - 0.9522357723577235
  - 0.9556213017751478
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_f1_macro_oob:
  - 0.928861788617886
  - 0.9289940828402367
  - 0.9278752436647174
  - 0.9247967479674797
  - 0.9291666666666667
  train_f1_micro:
  - 0.9522357723577236
  - 0.9556213017751479
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_f1_micro_oob:
  - 0.9288617886178862
  - 0.9289940828402367
  - 0.9278752436647173
  - 0.9247967479674797
  - 0.9291666666666667
  train_f1_samples:
  - 0.9522357723577237
  - 0.9556213017751479
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_f1_samples_oob:
  - 0.9288617886178863
  - 0.9289940828402367
  - 0.9278752436647174
  - 0.9247967479674798
  - 0.9291666666666668
  train_f1_weighted:
  - 0.9723637908020871
  - 0.976592412112774
  - 0.9777372474089515
  - 0.9751547142337095
  - 0.9745
  train_f1_weighted_oob:
  - 0.947730857905594
  - 0.9481378350156631
  - 0.9458340570899195
  - 0.9402378352141731
  - 0.9478750000000001
  train_jaccard_macro:
  - 0.9111750626988048
  - 0.9174560688629033
  - 0.9220364713252529
  - 0.9150736978791277
  - 0.9131295101843965
  train_jaccard_macro_oob:
  - 0.8705728864780743
  - 0.8707151819354607
  - 0.8681800409445097
  - 0.8632576852788015
  - 0.8708892872212819
  train_jaccard_micro:
  - 0.9088263821532493
  - 0.9150141643059491
  - 0.9195509822263798
  - 0.9125364431486881
  - 0.9104477611940298
  train_jaccard_micro_oob:
  - 0.8671726755218216
  - 0.8674033149171271
  - 0.8654545454545455
  - 0.8601134215500945
  - 0.867704280155642
  train_jaccard_samples:
  - 0.9218931475029036
  - 0.9264581572273879
  - 0.9298245614035088
  - 0.9253774680603949
  - 0.9226190476190477
  train_jaccard_samples_oob:
  - 0.8847270615563299
  - 0.8840518455903073
  - 0.8805346700083543
  - 0.8773228803716608
  - 0.8842261904761906
  train_jaccard_weighted:
  - 0.9480269620976434
  - 0.9560586390097411
  - 0.9582173906929933
  - 0.9534401179839149
  - 0.9523431098129893
  train_jaccard_weighted_oob:
  - 0.9039805291738506
  - 0.9047440240503694
  - 0.9000738110015053
  - 0.8902113062442637
  - 0.9041004808073082
  train_label_ranking_average_precision_score:
  - 0.989329268292683
  - 0.9827416173570018
  - 0.9894736842105263
  - 0.9888211382113821
  - 0.9927083333333332
  train_label_ranking_average_precision_score_oob:
  - 0.9324186991869919
  - 0.9127218934911243
  - 0.9407407407407408
  - 0.9204268292682927
  - 0.9038541666666667
  train_matthews_corrcoef_macro:
  - 0.4702189945532509
  - 0.48097907165664405
  - 0.5463195992255838
  - 0.4769353439858797
  - 0.47619206794348856
  train_matthews_corrcoef_macro_oob:
  - 0.3595901745748001
  - 0.3589599118238808
  - 0.3535293393349266
  - 0.35249199393764963
  - 0.3772619123253144
  train_matthews_corrcoef_micro:
  - 0.850166849507459
  - 0.8589656653176297
  - 0.8649219814046158
  - 0.8567023991147271
  - 0.8553812124623387
  train_matthews_corrcoef_micro_oob:
  - 0.7734709098228008
  - 0.7703040155286955
  - 0.7619489099966995
  - 0.7597912746017855
  - 0.7783296868610855
  train_matthews_corrcoef_samples:
  - 0.7880606511445244
  - 0.7999779122153168
  - 0.8019549444761537
  - 0.800710963639359
  - 0.7927587642913052
  train_matthews_corrcoef_samples_oob:
  - 0.6662494577077277
  - 0.6587389510238675
  - 0.6493681098696025
  - 0.6423450011682986
  - 0.6714015582445914
  train_matthews_corrcoef_weighted:
  - 0.779858961195619
  - 0.7887056813509339
  - 0.802678003449749
  - 0.7872519283917718
  - 0.7860005003393821
  train_matthews_corrcoef_weighted_oob:
  - 0.6809795541761142
  - 0.6768066331526003
  - 0.670439939549886
  - 0.6645162126770513
  - 0.693029054716017
  train_ndgc:
  - 0.9920276589342457
  - 0.9871210995194544
  - 0.9920977328326167
  - 0.9916520106925089
  - 0.9945683109598216
  train_ndgc_oob:
  - 0.9509648342723184
  - 0.9368988840714548
  - 0.9574638422254278
  - 0.9424487498867784
  - 0.9301236713461772
  train_neg_coverage_error:
  - -1.2560975609756098
  - -1.2544378698224852
  - -1.2163742690058479
  - -1.2560975609756098
  - -1.26875
  train_neg_coverage_error_oob:
  - -1.451219512195122
  - -1.5266272189349113
  - -1.409356725146199
  - -1.5304878048780488
  - -1.58125
  train_neg_hamming_loss_macro:
  - -0.047764227642276426
  - -0.04437869822485207
  - -0.04191033138401559
  - -0.04573170731707318
  - -0.046875
  train_neg_hamming_loss_macro_oob:
  - -0.07113821138211383
  - -0.07100591715976332
  - -0.07212475633528265
  - -0.07520325203252033
  - -0.07083333333333335
  train_neg_hamming_loss_micro:
  - -0.047764227642276426
  - -0.04437869822485207
  - -0.04191033138401559
  - -0.04573170731707317
  - -0.046875
  train_neg_hamming_loss_micro_oob:
  - -0.07113821138211382
  - -0.07100591715976332
  - -0.07212475633528265
  - -0.07520325203252033
  - -0.07083333333333333
  train_neg_hamming_loss_samples:
  - -0.04776422764227642
  - -0.04437869822485207
  - -0.04191033138401559
  - -0.04573170731707316
  - -0.04687499999999999
  train_neg_hamming_loss_samples_oob:
  - -0.07113821138211382
  - -0.07100591715976332
  - -0.07212475633528265
  - -0.07520325203252032
  - -0.07083333333333333
  train_neg_hamming_loss_weighted:
  - -0.027636209197912875
  - -0.023407587887225894
  - -0.02226275259104858
  - -0.0248452857662905
  - -0.0255
  train_neg_hamming_loss_weighted_oob:
  - -0.052269142094406015
  - -0.05186216498433693
  - -0.05416594291008047
  - -0.05976216478582696
  - -0.052125000000000005
  train_neg_label_ranking_loss:
  - -0.006097560975609756
  - -0.009467455621301775
  - -0.007017543859649124
  - -0.006097560975609756
  - -0.0037500000000000007
  train_neg_label_ranking_loss_oob:
  - -0.04229336043360434
  - -0.05945101906640368
  - -0.04143924626380766
  - -0.05625000000000001
  - -0.06210069444444445
  train_precision_macro:
  - 0.9522357723577235
  - 0.9556213017751478
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_precision_macro_oob:
  - 0.928861788617886
  - 0.9289940828402367
  - 0.9278752436647174
  - 0.9247967479674797
  - 0.9291666666666667
  train_precision_micro:
  - 0.9522357723577236
  - 0.9556213017751479
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_precision_micro_oob:
  - 0.9288617886178862
  - 0.9289940828402367
  - 0.9278752436647173
  - 0.9247967479674797
  - 0.9291666666666667
  train_precision_samples:
  - 0.9522357723577237
  - 0.9556213017751479
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_precision_samples_oob:
  - 0.9288617886178863
  - 0.9289940828402367
  - 0.9278752436647174
  - 0.9247967479674798
  - 0.9291666666666668
  train_precision_weighted:
  - 0.9723637908020871
  - 0.976592412112774
  - 0.9777372474089515
  - 0.9751547142337095
  - 0.9745
  train_precision_weighted_oob:
  - 0.947730857905594
  - 0.9481378350156631
  - 0.9458340570899195
  - 0.9402378352141731
  - 0.9478750000000001
  train_recall_macro:
  - 0.9522357723577235
  - 0.9556213017751478
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_recall_macro_oob:
  - 0.928861788617886
  - 0.9289940828402367
  - 0.9278752436647174
  - 0.9247967479674797
  - 0.9291666666666667
  train_recall_micro:
  - 0.9522357723577236
  - 0.9556213017751479
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_recall_micro_oob:
  - 0.9288617886178862
  - 0.9289940828402367
  - 0.9278752436647173
  - 0.9247967479674797
  - 0.9291666666666667
  train_recall_samples:
  - 0.9522357723577237
  - 0.9556213017751479
  - 0.9580896686159844
  - 0.9542682926829268
  - 0.953125
  train_recall_samples_oob:
  - 0.9288617886178863
  - 0.9289940828402367
  - 0.9278752436647174
  - 0.9247967479674798
  - 0.9291666666666668
  train_recall_weighted:
  - 0.9723637908020871
  - 0.976592412112774
  - 0.9777372474089515
  - 0.9751547142337095
  - 0.9745
  train_recall_weighted_oob:
  - 0.947730857905594
  - 0.9481378350156631
  - 0.9458340570899195
  - 0.9402378352141731
  - 0.9478750000000001
  train_roc_auc_macro:
  - 0.9987291496110119
  - 0.9966333011880396
  - 0.9982619375444907
  - 0.9986636161477933
  - 0.9967385131797446
  train_roc_auc_macro_oob:
  - 0.9800809685125853
  - 0.9721208601344347
  - 0.9724422945379754
  - 0.9783146844155942
  - 0.9763063394390535
  train_roc_auc_micro:
  - 0.9979095582114967
  - 0.9957576857903655
  - 0.9976749495337883
  - 0.9974075980251997
  - 0.9967697368421053
  train_roc_auc_micro_oob:
  - 0.9678173627393047
  - 0.9582970225127087
  - 0.9683985388830145
  - 0.9588646804292713
  - 0.9599013157894736
  train_roc_auc_samples:
  - 0.9939024390243902
  - 0.9905325443786983
  - 0.992982456140351
  - 0.9939024390243902
  - 0.9962500000000001
  train_roc_auc_samples_oob:
  - 0.9577066395663956
  - 0.9405489809335964
  - 0.9585607537361923
  - 0.9437499999999999
  - 0.9378993055555555
  train_roc_auc_weighted:
  - 0.9997064160571747
  - 0.9979845390985338
  - 0.999503879380857
  - 0.9996766084051179
  - 0.9988640940320045
  train_roc_auc_weighted_oob:
  - 0.9907326392591952
  - 0.9877381396997885
  - 0.9894904426400136
  - 0.988676822438144
  - 0.9894636552762758
start: 2023-12-21 10:12:14.248148
wrapper: null
