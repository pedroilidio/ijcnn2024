active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJqZmZmZ+T8AMzMzMzMDwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:07:57.517210
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 5167852358c9467af4111e689b87fcda901d71633423c79c3ca7743aacbe85c2
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5167852_20231212T160647058896_embedding__6_PlantGO.yml
results:
  fit_time:
  - 30.218289613723755
  - 31.49149179458618
  - 32.13941502571106
  - 33.898051261901855
  - 33.170196294784546
  score_time:
  - 7.835465908050537
  - 6.957918167114258
  - 8.049333095550537
  - 7.937548398971558
  - 8.023837327957153
  test_average_precision_macro:
  - 0.8381199328290995
  - 0.7865527914594662
  - 0.8115899471751659
  - 0.7266595619898388
  - 0.8075433131133921
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8240024543501794
  - 0.8231266680636777
  - 0.8174939317194094
  - 0.8079677312119543
  - 0.8477271760315912
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8872732426303855
  - 0.8755474155474154
  - 0.8648821548821548
  - 0.8696305841924398
  - 0.8930315055315056
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8752878197820113
  - 0.8609445344599436
  - 0.8690592357389537
  - 0.8333828672089497
  - 0.8746082401660148
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9464285714285713
  - 0.9491452991452992
  - 0.9474358974358975
  - 0.9488831615120276
  - 0.9486531986531986
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9464285714285714
  - 0.9491452991452991
  - 0.9474358974358974
  - 0.9488831615120275
  - 0.9486531986531986
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9464285714285714
  - 0.949145299145299
  - 0.9474358974358974
  - 0.9488831615120273
  - 0.9486531986531987
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.923469387755102
  - 0.9276923076923076
  - 0.9308050089445437
  - 0.9278103882010555
  - 0.9310320182961692
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9006749359304619
  - 0.9052363346560313
  - 0.9014779049809457
  - 0.9042577307735412
  - 0.9040465071365237
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8983050847457628
  - 0.9032126880845872
  - 0.9001218026796589
  - 0.9027380465876583
  - 0.9023218574859888
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9032294236375867
  - 0.9083234714003945
  - 0.9056635672020287
  - 0.9078962274838565
  - 0.9074037074037071
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8606990347846729
  - 0.8676415017182753
  - 0.8719057547593823
  - 0.8670017506288009
  - 0.8731576377472725
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8872732426303855
  - 0.8755474155474156
  - 0.864882154882155
  - 0.8696305841924399
  - 0.8930315055315053
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2411583801041003
  - 0.28299428042668695
  - 0.2728565781430233
  - 0.25945386385781816
  - 0.23031501777077826
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6126107746873293
  - 0.6398898486163034
  - 0.6353303466881061
  - 0.6386006769008342
  - 0.6331896005736475
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.46617856791998064
  - 0.49560885428227425
  - 0.505399064072484
  - 0.5053876246122652
  - 0.48634003464705555
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5060725364277119
  - 0.5488997964871004
  - 0.5330241564009208
  - 0.5393206930404318
  - 0.5205537503205225
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.916310127339925
  - 0.908455692073986
  - 0.8998707188164128
  - 0.9037664427167237
  - 0.9215191816814741
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4642857142857142
  - -1.6102564102564103
  - -1.6974358974358974
  - -1.5515463917525774
  - -1.505050505050505
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.053571428571428575
  - -0.05085470085470086
  - -0.05256410256410257
  - -0.0511168384879725
  - -0.051346801346801356
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05357142857142857
  - -0.050854700854700854
  - -0.052564102564102565
  - -0.05111683848797251
  - -0.05134680134680135
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05357142857142857
  - -0.050854700854700854
  - -0.052564102564102565
  - -0.051116838487972514
  - -0.051346801346801335
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07653061224489796
  - -0.07230769230769231
  - -0.06919499105545616
  - -0.07218961179894441
  - -0.06896798170383078
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03434601113172542
  - -0.043814210480877136
  - -0.05086247086247086
  - -0.04116682286785379
  - -0.03595041322314049
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9464285714285713
  - 0.9491452991452992
  - 0.9474358974358975
  - 0.9488831615120276
  - 0.9486531986531986
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9464285714285714
  - 0.9491452991452991
  - 0.9474358974358974
  - 0.9488831615120275
  - 0.9486531986531986
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9464285714285714
  - 0.949145299145299
  - 0.9474358974358974
  - 0.9488831615120273
  - 0.9486531986531987
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.923469387755102
  - 0.9276923076923076
  - 0.9308050089445437
  - 0.9278103882010555
  - 0.9310320182961692
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9464285714285713
  - 0.9491452991452992
  - 0.9474358974358975
  - 0.9488831615120276
  - 0.9486531986531986
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9464285714285714
  - 0.9491452991452991
  - 0.9474358974358974
  - 0.9488831615120275
  - 0.9486531986531986
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9464285714285714
  - 0.949145299145299
  - 0.9474358974358974
  - 0.9488831615120273
  - 0.9486531986531987
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.923469387755102
  - 0.9276923076923076
  - 0.9308050089445437
  - 0.9278103882010555
  - 0.9310320182961692
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9799510101021006
  - 0.9624151723427575
  - 0.9672111008453861
  - 0.9673478533035836
  - 0.9783079668419598
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9750070888416051
  - 0.963864296892466
  - 0.9655529411764706
  - 0.9681193846515125
  - 0.9731541868656924
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9656539888682747
  - 0.9561857895191227
  - 0.9491375291375292
  - 0.9588331771321461
  - 0.9640495867768595
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9768377782333778
  - 0.9688791058923959
  - 0.9720964418064557
  - 0.9711151924306956
  - 0.9812112799474312
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9586622808788648
  - 0.9690535168522838
  - 0.9620843177652808
  - 0.9625808458904771
  - 0.95685718787634
  train_average_precision_macro_oob:
  - 0.7355273107249302
  - 0.7636896832140909
  - 0.7534088274491794
  - 0.7674807363612293
  - 0.7639292094780715
  train_average_precision_micro:
  - 0.959203665407142
  - 0.9651161198066963
  - 0.958236751647751
  - 0.9593989127140666
  - 0.957928257625148
  train_average_precision_micro_oob:
  - 0.8306007553548582
  - 0.8368067919193987
  - 0.8324778982626426
  - 0.8350731182425469
  - 0.8269143146912291
  train_average_precision_samples:
  - 0.9569479965899402
  - 0.9644955300127714
  - 0.9615793954874414
  - 0.9635416666666666
  - 0.9622222222222222
  train_average_precision_samples_oob:
  - 0.8754059594852432
  - 0.8809062620365302
  - 0.881496731592517
  - 0.8817111530759489
  - 0.8826882839382838
  train_average_precision_weighted:
  - 0.9731821695746543
  - 0.9819244034937102
  - 0.9740869555014353
  - 0.975367106441764
  - 0.9729387723642906
  train_average_precision_weighted_oob:
  - 0.8495940257461854
  - 0.8692954253187773
  - 0.852752074721396
  - 0.8624671832468346
  - 0.8599442430738672
  train_f1_macro:
  - 0.9633418584825234
  - 0.964665815240528
  - 0.9650915283099192
  - 0.9651360544217688
  - 0.9626068376068373
  train_f1_macro_oob:
  - 0.9472506393861891
  - 0.9461472967220096
  - 0.9471051511281398
  - 0.9502551020408162
  - 0.946153846153846
  train_f1_micro:
  - 0.9633418584825234
  - 0.9646658152405279
  - 0.9650915283099191
  - 0.9651360544217688
  - 0.9626068376068376
  train_f1_micro_oob:
  - 0.9472506393861893
  - 0.9461472967220094
  - 0.9471051511281396
  - 0.9502551020408163
  - 0.9461538461538461
  train_f1_samples:
  - 0.9633418584825233
  - 0.9646658152405277
  - 0.9650915283099191
  - 0.9651360544217686
  - 0.9626068376068375
  train_f1_samples_oob:
  - 0.9472506393861893
  - 0.9461472967220093
  - 0.9471051511281396
  - 0.9502551020408163
  - 0.9461538461538461
  train_f1_weighted:
  - 0.9598562212427371
  - 0.9608741980094765
  - 0.960645867542419
  - 0.9615809089593284
  - 0.958504425586276
  train_f1_weighted_oob:
  - 0.92689382259225
  - 0.9242301268826468
  - 0.9257632427172658
  - 0.932673867419308
  - 0.924664659184232
  train_jaccard_macro:
  - 0.9297628306735738
  - 0.9320854198794484
  - 0.9328579070754159
  - 0.9328718595462172
  - 0.9282355532740292
  train_jaccard_macro_oob:
  - 0.9016792880059953
  - 0.899592633738327
  - 0.9014062118592165
  - 0.9065681981530255
  - 0.8995646677035917
  train_jaccard_micro:
  - 0.9292763157894737
  - 0.9317434210526315
  - 0.932538050185109
  - 0.932621199671323
  - 0.9279093717816684
  train_jaccard_micro_oob:
  - 0.8997874278773155
  - 0.8977984245606948
  - 0.8995249166077024
  - 0.905224787363305
  - 0.8978102189781022
  train_jaccard_samples:
  - 0.9336274978218712
  - 0.9359970808246671
  - 0.9367156470604746
  - 0.9368524332810048
  - 0.9322795153564385
  train_jaccard_samples_oob:
  - 0.9047918833085073
  - 0.902538840469875
  - 0.9044363044363044
  - 0.9102209015474322
  - 0.9025810087348548
  train_jaccard_weighted:
  - 0.9234981087463888
  - 0.9251077082415401
  - 0.9246531657980978
  - 0.926276737684583
  - 0.9206563346101857
  train_jaccard_weighted_oob:
  - 0.8659241356814908
  - 0.8610516244036989
  - 0.8638682409615159
  - 0.8752897326539283
  - 0.861691013277773
  train_label_ranking_average_precision_score:
  - 0.9569479965899402
  - 0.9644955300127714
  - 0.9615793954874418
  - 0.9635416666666666
  - 0.9622222222222223
  train_label_ranking_average_precision_score_oob:
  - 0.8754059594852432
  - 0.8809062620365304
  - 0.8814967315925176
  - 0.8817111530759499
  - 0.8826882839382841
  train_matthews_corrcoef_macro:
  - 0.3531464019264651
  - 0.4011236033687345
  - 0.4032895825204439
  - 0.39307395865826616
  - 0.3339330346165574
  train_matthews_corrcoef_macro_oob:
  - 0.25713125774063367
  - 0.23908231527523863
  - 0.2527450227830322
  - 0.2938762375691399
  - 0.23530570860400898
  train_matthews_corrcoef_micro:
  - 0.7547263006525807
  - 0.7639521669431824
  - 0.7656851830619951
  - 0.7673988298457833
  - 0.7489079774391968
  train_matthews_corrcoef_micro_oob:
  - 0.6252855559445994
  - 0.6144110131911751
  - 0.6202452788626438
  - 0.6499458760345983
  - 0.6151615193626966
  train_matthews_corrcoef_samples:
  - 0.6339405215898749
  - 0.645757316992316
  - 0.6519007501061752
  - 0.6546638637134146
  - 0.6237654745052235
  train_matthews_corrcoef_samples_oob:
  - 0.4734549146470043
  - 0.45362537725306246
  - 0.4636686617157846
  - 0.503622794214568
  - 0.4539714888438959
  train_matthews_corrcoef_weighted:
  - 0.6678713242543535
  - 0.691107029747316
  - 0.6951021882040564
  - 0.6947077865522698
  - 0.6593054871136627
  train_matthews_corrcoef_weighted_oob:
  - 0.5212223841456843
  - 0.5077046432649496
  - 0.5228535919188001
  - 0.5610313457436105
  - 0.510421322434478
  train_ndgc:
  - 0.9682049590114459
  - 0.9737603263866684
  - 0.971766913350124
  - 0.9730506307404031
  - 0.972104289640431
  train_ndgc_oob:
  - 0.9076484168868452
  - 0.9114399011485528
  - 0.912307845040442
  - 0.9123219400762053
  - 0.9130752067312591
  train_neg_coverage_error:
  - -1.180306905370844
  - -1.1596424010217115
  - -1.1634738186462323
  - -1.1658163265306123
  - -1.1692307692307693
  train_neg_coverage_error_oob:
  - -1.6010230179028133
  - -1.5849297573435503
  - -1.5555555555555556
  - -1.5829081632653061
  - -1.5807692307692307
  train_neg_hamming_loss_macro:
  - -0.03665814151747655
  - -0.035334184759472115
  - -0.034908471690080885
  - -0.034863945578231297
  - -0.037393162393162385
  train_neg_hamming_loss_macro_oob:
  - -0.05274936061381074
  - -0.05385270327799064
  - -0.05289484887186036
  - -0.049744897959183666
  - -0.05384615384615385
  train_neg_hamming_loss_micro:
  - -0.03665814151747655
  - -0.035334184759472115
  - -0.034908471690080885
  - -0.03486394557823129
  - -0.03739316239316239
  train_neg_hamming_loss_micro_oob:
  - -0.05274936061381074
  - -0.05385270327799063
  - -0.05289484887186036
  - -0.04974489795918367
  - -0.05384615384615385
  train_neg_hamming_loss_samples:
  - -0.03665814151747655
  - -0.03533418475947211
  - -0.03490847169008088
  - -0.03486394557823129
  - -0.037393162393162385
  train_neg_hamming_loss_samples_oob:
  - -0.05274936061381074
  - -0.05385270327799063
  - -0.05289484887186036
  - -0.04974489795918367
  - -0.05384615384615385
  train_neg_hamming_loss_weighted:
  - -0.040143778757263
  - -0.03912580199052348
  - -0.03935413245758074
  - -0.03841909104067159
  - -0.04149557441372388
  train_neg_hamming_loss_weighted_oob:
  - -0.07310617740775002
  - -0.07576987311735323
  - -0.0742367572827343
  - -0.06732613258069185
  - -0.07533534081576787
  train_neg_label_ranking_loss:
  - -0.008853453546548175
  - -0.00728549866480901
  - -0.00798878525570735
  - -0.007775673400673401
  - -0.007937062937062938
  train_neg_label_ranking_loss_oob:
  - -0.0441163553695523
  - -0.04356958258618539
  - -0.0408265283744211
  - -0.04265873015873016
  - -0.042448631615298285
  train_precision_macro:
  - 0.9633418584825234
  - 0.964665815240528
  - 0.9650915283099192
  - 0.9651360544217688
  - 0.9626068376068373
  train_precision_macro_oob:
  - 0.9472506393861891
  - 0.9461472967220096
  - 0.9471051511281398
  - 0.9502551020408162
  - 0.946153846153846
  train_precision_micro:
  - 0.9633418584825234
  - 0.9646658152405279
  - 0.9650915283099191
  - 0.9651360544217688
  - 0.9626068376068376
  train_precision_micro_oob:
  - 0.9472506393861893
  - 0.9461472967220094
  - 0.9471051511281396
  - 0.9502551020408163
  - 0.9461538461538461
  train_precision_samples:
  - 0.9633418584825233
  - 0.9646658152405277
  - 0.9650915283099191
  - 0.9651360544217686
  - 0.9626068376068375
  train_precision_samples_oob:
  - 0.9472506393861893
  - 0.9461472967220093
  - 0.9471051511281396
  - 0.9502551020408163
  - 0.9461538461538461
  train_precision_weighted:
  - 0.9598562212427371
  - 0.9608741980094765
  - 0.960645867542419
  - 0.9615809089593284
  - 0.958504425586276
  train_precision_weighted_oob:
  - 0.92689382259225
  - 0.9242301268826468
  - 0.9257632427172658
  - 0.932673867419308
  - 0.924664659184232
  train_recall_macro:
  - 0.9633418584825234
  - 0.964665815240528
  - 0.9650915283099192
  - 0.9651360544217688
  - 0.9626068376068373
  train_recall_macro_oob:
  - 0.9472506393861891
  - 0.9461472967220096
  - 0.9471051511281398
  - 0.9502551020408162
  - 0.946153846153846
  train_recall_micro:
  - 0.9633418584825234
  - 0.9646658152405279
  - 0.9650915283099191
  - 0.9651360544217688
  - 0.9626068376068376
  train_recall_micro_oob:
  - 0.9472506393861893
  - 0.9461472967220094
  - 0.9471051511281396
  - 0.9502551020408163
  - 0.9461538461538461
  train_recall_samples:
  - 0.9633418584825233
  - 0.9646658152405277
  - 0.9650915283099191
  - 0.9651360544217686
  - 0.9626068376068375
  train_recall_samples_oob:
  - 0.9472506393861893
  - 0.9461472967220093
  - 0.9471051511281396
  - 0.9502551020408163
  - 0.9461538461538461
  train_recall_weighted:
  - 0.9598562212427371
  - 0.9608741980094765
  - 0.960645867542419
  - 0.9615809089593284
  - 0.958504425586276
  train_recall_weighted_oob:
  - 0.92689382259225
  - 0.9242301268826468
  - 0.9257632427172658
  - 0.932673867419308
  - 0.924664659184232
  train_roc_auc_macro:
  - 0.9972140627756388
  - 0.9983177015922823
  - 0.99709844896666
  - 0.9971559194108681
  - 0.9969202270629537
  train_roc_auc_macro_oob:
  - 0.9701320987164576
  - 0.9741674961672754
  - 0.9703956059166852
  - 0.9673758223249195
  - 0.9710491635263662
  train_roc_auc_micro:
  - 0.9959983514113238
  - 0.9967792271778311
  - 0.9959051292326186
  - 0.9960222694925016
  - 0.9959237898496496
  train_roc_auc_micro_oob:
  - 0.9678921157367952
  - 0.9700035775600486
  - 0.9694991262049467
  - 0.9677374820734643
  - 0.9689315807015515
  train_roc_auc_samples:
  - 0.9911465464534518
  - 0.9927145013351909
  - 0.9920112147442928
  - 0.9922243265993265
  - 0.9920629370629371
  train_roc_auc_samples_oob:
  - 0.9558836446304477
  - 0.9564304174138146
  - 0.9591734716255789
  - 0.9573412698412698
  - 0.9575513683847018
  train_roc_auc_weighted:
  - 0.9970421951247017
  - 0.9979163796991493
  - 0.9968442279743703
  - 0.9968352427374128
  - 0.9964852081852661
  train_roc_auc_weighted_oob:
  - 0.9759450409213708
  - 0.9789108191428805
  - 0.9755281196299812
  - 0.9737093309049528
  - 0.9742639402184474
start: 2023-12-12 16:06:47.058896
wrapper: null
