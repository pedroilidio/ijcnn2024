active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D8AmpmZmZnpPwCYmZmZmcm/gJmZmZmZAcAAmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:57:46.612914
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__8
  params: {}
hash: 53403a9db85d8c927612d48ff8737b3302330801755a4954a94f534fd0d80aba
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/53403a9_20231221T165640902294_embedding__8_Gram_positive.yml
results:
  fit_time:
  - 45.82176685333252
  - 46.67628574371338
  - 47.8322491645813
  - 46.912091970443726
  - 47.00315308570862
  score_time:
  - 5.04416298866272
  - 4.912626028060913
  - 5.369518756866455
  - 5.195004224777222
  - 5.208317518234253
  test_average_precision_macro:
  - 0.8757135081358696
  - 0.8728647150012517
  - 0.9201225766986637
  - 0.8387634577525399
  - 0.8171111348648864
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9514972644341161
  - 0.9650505447516708
  - 0.993075332740067
  - 0.962129881424571
  - 0.9659426003731243
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9591503267973855
  - 0.9546925566343042
  - 0.983974358974359
  - 0.9591194968553458
  - 0.9495192307692307
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9689722969110777
  - 0.9507474984097913
  - 0.9878315374239288
  - 0.9569560281694883
  - 0.9567687408594636
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7696078431372548
  - 0.7839805825242719
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384615
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7696078431372549
  - 0.7839805825242718
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384616
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7696078431372549
  - 0.7839805825242718
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384616
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6966440422322775
  - 0.7203136669156086
  - 0.7221708579881656
  - 0.7443930224279103
  - 0.7517399267399267
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6447489691971865
  - 0.6609563227619936
  - 0.6638052636229204
  - 0.6789322210941319
  - 0.6875822009059419
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6254980079681275
  - 0.6447105788423154
  - 0.6475247524752475
  - 0.6660117878192534
  - 0.6740442655935613
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.633986928104575
  - 0.6556634304207117
  - 0.6576923076923075
  - 0.6792452830188677
  - 0.6897435897435896
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5403524319483572
  - 0.5691330157086983
  - 0.5698409845091686
  - 0.5970603963651216
  - 0.608535444660145
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9591503267973855
  - 0.9546925566343043
  - 0.9839743589743589
  - 0.9591194968553458
  - 0.9495192307692306
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.19398710361792193
  - 0.24549451341281445
  - 0.23320457278233148
  - 0.28485030096980807
  - 0.3040054700882776
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.27100580029937105
  - 0.33450996876282346
  - 0.334991718362665
  - 0.39538278089001
  - 0.4258416464740386
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09803921568627451
  - 0.14563106796116504
  - 0.14423076923076922
  - 0.19811320754716982
  - 0.23076923076923078
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2504234834950969
  - 0.3066595721831741
  - 0.3060664592884377
  - 0.36742065157734544
  - 0.3890076487831269
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9694614914748296
  - 0.9661747755728551
  - 0.9880948029532972
  - 0.9693787016685015
  - 0.9628015162711462
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1372549019607843
  - -1.1359223300970873
  - -1.0384615384615385
  - -1.1226415094339623
  - -1.1730769230769231
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23039215686274508
  - -0.21601941747572814
  - -0.21394230769230768
  - -0.20047169811320753
  - -0.1947115384615385
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23039215686274508
  - -0.21601941747572814
  - -0.21394230769230768
  - -0.20047169811320756
  - -0.19471153846153846
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23039215686274508
  - -0.21601941747572814
  - -0.21394230769230768
  - -0.20047169811320756
  - -0.19471153846153846
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3033559577677225
  - -0.27968633308439134
  - -0.2778291420118343
  - -0.25560697757208967
  - -0.24826007326007327
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.039215686274509796
  - -0.042071197411003236
  - -0.01282051282051282
  - -0.040880503144654086
  - -0.052884615384615384
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7696078431372548
  - 0.7839805825242719
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384615
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7696078431372549
  - 0.7839805825242718
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384616
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7696078431372549
  - 0.7839805825242718
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384616
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6966440422322775
  - 0.7203136669156086
  - 0.7221708579881656
  - 0.7443930224279103
  - 0.7517399267399267
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7696078431372548
  - 0.7839805825242719
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384615
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7696078431372549
  - 0.7839805825242718
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384616
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7696078431372549
  - 0.7839805825242718
  - 0.7860576923076923
  - 0.7995283018867925
  - 0.8052884615384616
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6966440422322775
  - 0.7203136669156086
  - 0.7221708579881656
  - 0.7443930224279103
  - 0.7517399267399267
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9815815576076771
  - 0.9849319591021386
  - 0.9973371767556501
  - 0.9702225447592965
  - 0.9725610128968654
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9800259362348178
  - 0.987887112887113
  - 0.9974728796844181
  - 0.9784620861516554
  - 0.9796968305006891
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.96078431372549
  - 0.9579288025889968
  - 0.9871794871794872
  - 0.9591194968553458
  - 0.9471153846153846
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9863281985268209
  - 0.9863019762060696
  - 0.9988358865097804
  - 0.9856161448952273
  - 0.9877406488064558
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9496752566536715
  - 0.8831826471769981
  - 0.8858688799159657
  - 0.9645938383610291
  - 0.9634185098380922
  train_average_precision_macro_oob:
  - 0.8891303514556976
  - 0.858069771727257
  - 0.8507046188501032
  - 0.893463708386786
  - 0.9411880355169406
  train_average_precision_micro:
  - 0.9848748491918178
  - 0.9831217819317587
  - 0.982838204235609
  - 0.9886584072259733
  - 0.9862946724542025
  train_average_precision_micro_oob:
  - 0.9705652170303057
  - 0.9661361035501091
  - 0.968383091045787
  - 0.9755496846003183
  - 0.9747394011359999
  train_average_precision_samples:
  - 0.971023181454836
  - 0.9725560897435899
  - 0.973694779116466
  - 0.9729620661824052
  - 0.9809236947791166
  train_average_precision_samples_oob:
  - 0.9606314948041568
  - 0.9583333333333334
  - 0.9580321285140563
  - 0.957223567393059
  - 0.9668674698795181
  train_average_precision_weighted:
  - 0.9861142014965725
  - 0.973055738085045
  - 0.9753157602009122
  - 0.987909060485098
  - 0.9868145905109442
  train_average_precision_weighted_oob:
  - 0.9696351930454682
  - 0.9595273788170593
  - 0.9631253618386466
  - 0.9720271969765644
  - 0.9750685406914508
  train_f1_macro:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.8084337349397591
  - 0.8280871670702179
  - 0.8216867469879517
  train_f1_macro_oob:
  - 0.7805755395683454
  - 0.7896634615384617
  - 0.7807228915662652
  - 0.8026634382566586
  - 0.7879518072289157
  train_f1_micro:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.808433734939759
  - 0.8280871670702179
  - 0.8216867469879519
  train_f1_micro_oob:
  - 0.7805755395683454
  - 0.7896634615384616
  - 0.7807228915662651
  - 0.8026634382566586
  - 0.7879518072289157
  train_f1_samples:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.808433734939759
  - 0.8280871670702179
  - 0.8216867469879519
  train_f1_samples_oob:
  - 0.7805755395683454
  - 0.7896634615384616
  - 0.7807228915662651
  - 0.8026634382566586
  - 0.7879518072289157
  train_f1_weighted:
  - 0.7681816360753878
  - 0.7792420139526344
  - 0.755539580757397
  - 0.7843120176981901
  - 0.7724563325070618
  train_f1_weighted_oob:
  - 0.7173697795939858
  - 0.7290710482834589
  - 0.7193547459527849
  - 0.7475220791889491
  - 0.7248169712342192
  train_jaccard_macro:
  - 0.704559699336756
  - 0.7148592664705441
  - 0.6904748981781499
  - 0.7155415471246168
  - 0.7079596861427688
  train_jaccard_macro_oob:
  - 0.6561604673417297
  - 0.6673426755207159
  - 0.6555846208885773
  - 0.6830789360672269
  - 0.6658340157982077
  train_jaccard_micro:
  - 0.6934010152284263
  - 0.7049180327868853
  - 0.6784630940343782
  - 0.7066115702479339
  - 0.6973415132924335
  train_jaccard_micro_oob:
  - 0.640117994100295
  - 0.6524329692154915
  - 0.6403162055335968
  - 0.6703741152679474
  - 0.6500994035785288
  train_jaccard_samples:
  - 0.7109512390087928
  - 0.7237179487179486
  - 0.6947791164658633
  - 0.726230831315577
  - 0.7156626506024094
  train_jaccard_samples_oob:
  - 0.649560351718625
  - 0.6644230769230768
  - 0.650441767068273
  - 0.6855528652138819
  - 0.6616867469879516
  train_jaccard_weighted:
  - 0.6275298254760632
  - 0.6412517311983705
  - 0.6110784423981732
  - 0.6470450689586165
  - 0.6326362081623121
  train_jaccard_weighted_oob:
  - 0.5644772373405105
  - 0.5779642052724012
  - 0.5659602522631383
  - 0.6002843954763207
  - 0.5736011240825056
  train_label_ranking_average_precision_score:
  - 0.971023181454836
  - 0.9725560897435896
  - 0.973694779116466
  - 0.9729620661824051
  - 0.9809236947791162
  train_label_ranking_average_precision_score_oob:
  - 0.9606314948041564
  - 0.9583333333333333
  - 0.9580321285140561
  - 0.9572235673930589
  - 0.9668674698795179
  train_matthews_corrcoef_macro:
  - 0.34853270936994607
  - 0.3661925964627097
  - 0.3122276527945554
  - 0.3574587010522372
  - 0.34726499830562785
  train_matthews_corrcoef_macro_oob:
  - 0.2256560176385413
  - 0.25693748477872946
  - 0.21666626660111424
  - 0.29441012841281955
  - 0.25573636508309694
  train_matthews_corrcoef_micro:
  - 0.47419966154611154
  - 0.5038975359091186
  - 0.4380427618980203
  - 0.5092281283450775
  - 0.48548342219075113
  train_matthews_corrcoef_micro_oob:
  - 0.31277056826864846
  - 0.358526998977612
  - 0.3185830792788804
  - 0.4155130765388036
  - 0.35075225053217324
  train_matthews_corrcoef_samples:
  - 0.2805755395683453
  - 0.3138878612240135
  - 0.2433734939759036
  - 0.3220338983050847
  - 0.29397590361445786
  train_matthews_corrcoef_samples_oob:
  - 0.12709832134292565
  - 0.1658653846153846
  - 0.13253012048192772
  - 0.22033898305084745
  - 0.15903614457831325
  train_matthews_corrcoef_weighted:
  - 0.4442944147919096
  - 0.4727279876010094
  - 0.40603742551744276
  - 0.4734274147009754
  - 0.4524294422964183
  train_matthews_corrcoef_weighted_oob:
  - 0.28997593258885007
  - 0.332254282725404
  - 0.28892589555378584
  - 0.38525071189899535
  - 0.3263733471447241
  train_ndgc:
  - 0.9784031570039547
  - 0.9797393869747242
  - 0.9803932210050065
  - 0.979946945957465
  - 0.9857291763750577
  train_ndgc_oob:
  - 0.9708051015787683
  - 0.9689575021346131
  - 0.9688100017371608
  - 0.9683076336181043
  - 0.9752212595251633
  train_neg_coverage_error:
  - -1.0815347721822541
  - -1.0793269230769231
  - -1.0795180722891566
  - -1.0726392251815982
  - -1.0626506024096385
  train_neg_coverage_error_oob:
  - -1.1127098321342925
  - -1.1346153846153846
  - -1.1301204819277109
  - -1.1234866828087167
  - -1.1036144578313254
  train_neg_hamming_loss_macro:
  - -0.18105515587529974
  - -0.17307692307692307
  - -0.19156626506024096
  - -0.1719128329297821
  - -0.1783132530120482
  train_neg_hamming_loss_macro_oob:
  - -0.2194244604316547
  - -0.21033653846153844
  - -0.21927710843373494
  - -0.1973365617433414
  - -0.21204819277108433
  train_neg_hamming_loss_micro:
  - -0.18105515587529977
  - -0.17307692307692307
  - -0.19156626506024096
  - -0.17191283292978207
  - -0.1783132530120482
  train_neg_hamming_loss_micro_oob:
  - -0.21942446043165467
  - -0.21033653846153846
  - -0.21927710843373494
  - -0.1973365617433414
  - -0.21204819277108433
  train_neg_hamming_loss_samples:
  - -0.18105515587529977
  - -0.17307692307692307
  - -0.19156626506024096
  - -0.17191283292978207
  - -0.1783132530120482
  train_neg_hamming_loss_samples_oob:
  - -0.21942446043165467
  - -0.21033653846153846
  - -0.21927710843373494
  - -0.1973365617433414
  - -0.21204819277108433
  train_neg_hamming_loss_weighted:
  - -0.2318183639246121
  - -0.22075798604736552
  - -0.24446041924260287
  - -0.21568798230180988
  - -0.22754366749293825
  train_neg_hamming_loss_weighted_oob:
  - -0.2826302204060141
  - -0.2709289517165412
  - -0.2806452540472151
  - -0.2524779208110509
  - -0.2751830287657808
  train_neg_label_ranking_loss:
  - -0.025579536370903277
  - -0.02363782051282051
  - -0.023293172690763052
  - -0.02098466505246166
  - -0.018473895582329317
  train_neg_label_ranking_loss_oob:
  - -0.03557154276578737
  - -0.042067307692307696
  - -0.03975903614457831
  - -0.03753026634382566
  - -0.0321285140562249
  train_precision_macro:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.8084337349397591
  - 0.8280871670702179
  - 0.8216867469879517
  train_precision_macro_oob:
  - 0.7805755395683454
  - 0.7896634615384617
  - 0.7807228915662652
  - 0.8026634382566586
  - 0.7879518072289157
  train_precision_micro:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.808433734939759
  - 0.8280871670702179
  - 0.8216867469879519
  train_precision_micro_oob:
  - 0.7805755395683454
  - 0.7896634615384616
  - 0.7807228915662651
  - 0.8026634382566586
  - 0.7879518072289157
  train_precision_samples:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.808433734939759
  - 0.8280871670702179
  - 0.8216867469879519
  train_precision_samples_oob:
  - 0.7805755395683454
  - 0.7896634615384616
  - 0.7807228915662651
  - 0.8026634382566586
  - 0.7879518072289157
  train_precision_weighted:
  - 0.7681816360753878
  - 0.7792420139526344
  - 0.755539580757397
  - 0.7843120176981901
  - 0.7724563325070618
  train_precision_weighted_oob:
  - 0.7173697795939858
  - 0.7290710482834589
  - 0.7193547459527849
  - 0.7475220791889491
  - 0.7248169712342192
  train_recall_macro:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.8084337349397591
  - 0.8280871670702179
  - 0.8216867469879517
  train_recall_macro_oob:
  - 0.7805755395683454
  - 0.7896634615384617
  - 0.7807228915662652
  - 0.8026634382566586
  - 0.7879518072289157
  train_recall_micro:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.808433734939759
  - 0.8280871670702179
  - 0.8216867469879519
  train_recall_micro_oob:
  - 0.7805755395683454
  - 0.7896634615384616
  - 0.7807228915662651
  - 0.8026634382566586
  - 0.7879518072289157
  train_recall_samples:
  - 0.8189448441247003
  - 0.8269230769230769
  - 0.808433734939759
  - 0.8280871670702179
  - 0.8216867469879519
  train_recall_samples_oob:
  - 0.7805755395683454
  - 0.7896634615384616
  - 0.7807228915662651
  - 0.8026634382566586
  - 0.7879518072289157
  train_recall_weighted:
  - 0.7681816360753878
  - 0.7792420139526344
  - 0.755539580757397
  - 0.7843120176981901
  - 0.7724563325070618
  train_recall_weighted_oob:
  - 0.7173697795939858
  - 0.7290710482834589
  - 0.7193547459527849
  - 0.7475220791889491
  - 0.7248169712342192
  train_roc_auc_macro:
  - 0.9923486852631211
  - 0.9898977454752685
  - 0.9914614613488236
  - 0.9944031378536694
  - 0.9942811178617216
  train_roc_auc_macro_oob:
  - 0.9830258433175776
  - 0.9768138993015942
  - 0.9833473505874909
  - 0.9858455321009413
  - 0.9879895870741244
  train_roc_auc_micro:
  - 0.9929146180906538
  - 0.9923014252714918
  - 0.9925189286490416
  - 0.9949630578937658
  - 0.9935549237608734
  train_roc_auc_micro_oob:
  - 0.9857088534789645
  - 0.9819727597741803
  - 0.9836551091486386
  - 0.9871202633035273
  - 0.9884408540014947
  train_roc_auc_samples:
  - 0.9744204636290968
  - 0.9763621794871794
  - 0.9767068273092369
  - 0.9790153349475385
  - 0.9815261044176707
  train_roc_auc_samples_oob:
  - 0.9644284572342127
  - 0.9579326923076923
  - 0.9602409638554217
  - 0.9624697336561744
  - 0.9678714859437751
  train_roc_auc_weighted:
  - 0.9953863420422021
  - 0.9930348829922648
  - 0.9946774054780929
  - 0.9957779360572762
  - 0.9953799562939354
  train_roc_auc_weighted_oob:
  - 0.9907628033340844
  - 0.985586372535233
  - 0.9890929499348798
  - 0.9908816406872054
  - 0.9905627842095979
start: 2023-12-21 16:56:40.902294
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
