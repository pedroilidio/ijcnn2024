active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP4CZmZmZmdk/QDMzMzMz479AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmFkAANDMzMzPjP4CZmZmZmRHAAJqZmZmZ+T8AMzMzMzMLwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 10:34:20.892303
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__5
  params: {}
hash: 41989df753a79d0b7208634ed5533858a833747e3b612163a68c39475953d507
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/41989df_20231222T103223070070_embedding_proba_weak__5_PlantGO.yml
results:
  fit_time:
  - 73.5795066356659
  - 74.60586452484131
  - 75.04410290718079
  - 77.14394354820251
  - 77.29342460632324
  score_time:
  - 8.310517311096191
  - 8.429083108901978
  - 8.049104928970337
  - 8.175307035446167
  - 8.098889350891113
  test_average_precision_macro:
  - 0.6947528463225393
  - 0.7807482943842001
  - 0.7431843726626265
  - 0.7164002546180283
  - 0.7121358960475579
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7936366367891171
  - 0.7518672236337025
  - 0.7298189227096548
  - 0.792523302092737
  - 0.7768502805659677
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8604010025062657
  - 0.8672079772079772
  - 0.8362976190476189
  - 0.8926239567992145
  - 0.8690316662678472
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8123496177845811
  - 0.8185533514131084
  - 0.7957652255516815
  - 0.8192053018112938
  - 0.8226516368862579
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9166666666666669
  - 0.9256410256410256
  - 0.9229166666666666
  - 0.9269759450171823
  - 0.9250418760469014
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9166666666666666
  - 0.9256410256410257
  - 0.9229166666666667
  - 0.9269759450171822
  - 0.9250418760469011
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9166666666666666
  - 0.9256410256410257
  - 0.9229166666666666
  - 0.9269759450171821
  - 0.9250418760469014
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8577949613369917
  - 0.8822943249483532
  - 0.8702843601895734
  - 0.884961156984414
  - 0.8754435685536689
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8527852947316595
  - 0.8665156017658443
  - 0.8624597542421801
  - 0.8688006097562552
  - 0.865807411873833
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8461538461538461
  - 0.8615751789976134
  - 0.8568665377176016
  - 0.8638911128903123
  - 0.8605375925204519
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8486986697513011
  - 0.8652014652014651
  - 0.859230769230769
  - 0.8678599750764698
  - 0.8634712021646693
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7568419481801071
  - 0.7931610188264218
  - 0.7752544978513725
  - 0.7978117372266986
  - 0.7827112727408057
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8604010025062658
  - 0.8672079772079769
  - 0.836297619047619
  - 0.8926239567992145
  - 0.8690316662678473
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07292953848990834
  - 0.09115340455537096
  - 0.075635541675801
  - 0.09036070123012689
  - 0.09504769994288037
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3009637127752785
  - 0.40418113153009944
  - 0.33630884366097685
  - 0.422940987392391
  - 0.3732579757251615
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.115311004784689
  - 0.22668932189337387
  - 0.1465528174941344
  - 0.23477038425492033
  - 0.17907720420283235
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.19096279454755113
  - 0.25162405509540664
  - 0.1964114538298782
  - 0.2516821681326391
  - 0.2416386762053166
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8962283103457914
  - 0.9027043967422981
  - 0.8775711230480101
  - 0.9206866153043808
  - 0.9029167964783532
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6578947368421053
  - -1.5743589743589743
  - -1.65
  - -1.541237113402062
  - -1.5829145728643217
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08333333333333333
  - -0.07435897435897436
  - -0.07708333333333334
  - -0.07302405498281787
  - -0.07495812395309882
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08333333333333333
  - -0.07435897435897436
  - -0.07708333333333334
  - -0.07302405498281787
  - -0.07495812395309882
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08333333333333334
  - -0.07435897435897436
  - -0.07708333333333334
  - -0.07302405498281787
  - -0.07495812395309881
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.14220503866300824
  - -0.11770567505164659
  - -0.12971563981042655
  - -0.11503884301558608
  - -0.12455643144633118
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0485645933014354
  - -0.04144522144522145
  - -0.053204545454545456
  - -0.036591863653719324
  - -0.04430654958293149
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9166666666666669
  - 0.9256410256410256
  - 0.9229166666666666
  - 0.9269759450171823
  - 0.9250418760469014
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9166666666666666
  - 0.9256410256410257
  - 0.9229166666666667
  - 0.9269759450171822
  - 0.9250418760469011
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9166666666666666
  - 0.9256410256410257
  - 0.9229166666666666
  - 0.9269759450171821
  - 0.9250418760469014
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8577949613369917
  - 0.8822943249483532
  - 0.8702843601895734
  - 0.884961156984414
  - 0.8754435685536689
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9166666666666669
  - 0.9256410256410256
  - 0.9229166666666666
  - 0.9269759450171823
  - 0.9250418760469014
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9166666666666666
  - 0.9256410256410257
  - 0.9229166666666667
  - 0.9269759450171822
  - 0.9250418760469011
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9166666666666666
  - 0.9256410256410257
  - 0.9229166666666666
  - 0.9269759450171821
  - 0.9250418760469014
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8577949613369917
  - 0.8822943249483532
  - 0.8702843601895734
  - 0.884961156984414
  - 0.8754435685536689
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9709042344691784
  - 0.9607122555907764
  - 0.9585377046621083
  - 0.9618274293104244
  - 0.9605313638204618
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9645500379101106
  - 0.9606138653975009
  - 0.9523479093009208
  - 0.9638046327741797
  - 0.9607856370020921
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9514354066985645
  - 0.9585547785547786
  - 0.9467954545454547
  - 0.9634081363462805
  - 0.9556934504170683
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.971360022914867
  - 0.9614172753016204
  - 0.9564121770339788
  - 0.9703242502657392
  - 0.9658618248475271
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8775233382376716
  - 0.8402691643994467
  - 0.8435537179928313
  - 0.8713080703158825
  - 0.8441114475061546
  train_average_precision_macro_oob:
  - 0.8009110001715198
  - 0.7487653357253085
  - 0.7354119284699353
  - 0.7651844671208138
  - 0.7478537595294324
  train_average_precision_micro:
  - 0.8799272317673493
  - 0.8712479742946768
  - 0.8724170724510413
  - 0.8795355163125028
  - 0.8797833387410113
  train_average_precision_micro_oob:
  - 0.8277234145710973
  - 0.8172202626233638
  - 0.8181466736823866
  - 0.8213580399094063
  - 0.8321314325049407
  train_average_precision_samples:
  - 0.9227243427751042
  - 0.9178617501414437
  - 0.9162637205696332
  - 0.9162865443796566
  - 0.9161628665158832
  train_average_precision_samples_oob:
  - 0.8917910522923214
  - 0.8797549938354535
  - 0.8829646538836771
  - 0.8728346695821184
  - 0.8831617106328274
  train_average_precision_weighted:
  - 0.9045737940642646
  - 0.8992249112862689
  - 0.8970518530364537
  - 0.907384349366856
  - 0.9002837376062119
  train_average_precision_weighted_oob:
  - 0.8609944260016221
  - 0.8500978920379031
  - 0.8476834169355988
  - 0.855867485163277
  - 0.8548853728181062
  train_f1_macro:
  - 0.9313663282571913
  - 0.930928054491273
  - 0.9284490145672665
  - 0.9339923469387754
  - 0.9320710312366282
  train_f1_macro_oob:
  - 0.919839255499154
  - 0.9222009365687526
  - 0.9206298200514138
  - 0.9257015306122449
  - 0.9215875053487377
  train_f1_micro:
  - 0.9313663282571912
  - 0.9309280544912729
  - 0.9284490145672665
  - 0.9339923469387755
  - 0.9320710312366282
  train_f1_micro_oob:
  - 0.919839255499154
  - 0.9222009365687527
  - 0.9206298200514139
  - 0.9257015306122449
  - 0.9215875053487377
  train_f1_samples:
  - 0.931366328257191
  - 0.9309280544912728
  - 0.9284490145672664
  - 0.9339923469387754
  - 0.932071031236628
  train_f1_samples_oob:
  - 0.9198392554991539
  - 0.9222009365687526
  - 0.9206298200514139
  - 0.9257015306122449
  - 0.9215875053487375
  train_f1_weighted:
  - 0.8858815286164505
  - 0.8913523754183993
  - 0.8849797146651397
  - 0.8985561345391236
  - 0.8919169673113543
  train_f1_weighted_oob:
  - 0.8600196670435682
  - 0.8704218191062447
  - 0.8673655868127047
  - 0.8808455846793695
  - 0.8696119706270647
  train_jaccard_macro:
  - 0.8754908293753015
  - 0.8746288466169103
  - 0.8705935444041533
  - 0.879503673311516
  - 0.876221556284794
  train_jaccard_macro_oob:
  - 0.8580867065620161
  - 0.8612342984842029
  - 0.8588764175593822
  - 0.8665864950827582
  - 0.860253792026236
  train_jaccard_micro:
  - 0.8715487382483919
  - 0.8707814833250374
  - 0.866453418632547
  - 0.8761591384983548
  - 0.8727837323449865
  train_jaccard_micro_oob:
  - 0.8515762678676326
  - 0.8556334551199763
  - 0.8529324203632034
  - 0.8616800237459187
  - 0.8545779188572562
  train_jaccard_samples:
  - 0.8748647291794499
  - 0.874402481299033
  - 0.8699228791773779
  - 0.8800403677954699
  - 0.8764998800942317
  train_jaccard_samples_oob:
  - 0.8538349974898198
  - 0.8584592929420515
  - 0.8556569394615666
  - 0.8649304776855796
  - 0.8572867440646643
  train_jaccard_weighted:
  - 0.7990010010577071
  - 0.8071563118206068
  - 0.7968602257616348
  - 0.8186313495114537
  - 0.8077231626805417
  train_jaccard_weighted_oob:
  - 0.7605078882341666
  - 0.7751071594204336
  - 0.7704838324256382
  - 0.7909939901649915
  - 0.773868045640495
  train_label_ranking_average_precision_score:
  - 0.9227243427751045
  - 0.9178617501414439
  - 0.9162637205696336
  - 0.9162865443796564
  - 0.9161628665158833
  train_label_ranking_average_precision_score_oob:
  - 0.8917910522923218
  - 0.8797549938354542
  - 0.8829646538836775
  - 0.8728346695821189
  - 0.883161710632828
  train_matthews_corrcoef_macro:
  - 0.16641204407023544
  - 0.14678951351493566
  - 0.14179737718635532
  - 0.16505509278523697
  - 0.1666738683100438
  train_matthews_corrcoef_macro_oob:
  - 0.09128421827349238
  - 0.08859861420008709
  - 0.06068347729620511
  - 0.08752780133544967
  - 0.07956731878532355
  train_matthews_corrcoef_micro:
  - 0.4624160152939074
  - 0.4621761839066209
  - 0.4385095792647827
  - 0.4951353895426918
  - 0.4791000218528597
  train_matthews_corrcoef_micro_oob:
  - 0.3048487669155795
  - 0.34994199974182894
  - 0.33375594932362584
  - 0.3972260064989928
  - 0.34679019353176666
  train_matthews_corrcoef_samples:
  - 0.2532969754681648
  - 0.2593169848975472
  - 0.23422495804189927
  - 0.29627562528240703
  - 0.27395229209039257
  train_matthews_corrcoef_samples_oob:
  - 0.11869316993241709
  - 0.15783306611948167
  - 0.14290722131339098
  - 0.201182745825603
  - 0.150241124808857
  train_matthews_corrcoef_weighted:
  - 0.37102307888300257
  - 0.34985871723554307
  - 0.33820980890521357
  - 0.3846148795330386
  - 0.38139891752015975
  train_matthews_corrcoef_weighted_oob:
  - 0.22045683093347004
  - 0.22896251047785648
  - 0.1792904043528323
  - 0.23503783364124897
  - 0.21184180646553238
  train_ndgc:
  - 0.9429485660492015
  - 0.9394276564075318
  - 0.9378566865906067
  - 0.937735213106455
  - 0.9383521206361226
  train_ndgc_oob:
  - 0.9198540572833472
  - 0.9108869996466505
  - 0.9130017778058136
  - 0.9051260063627359
  - 0.9137682726566064
  train_neg_coverage_error:
  - -1.3718274111675126
  - -1.438058748403576
  - -1.4318766066838047
  - -1.3915816326530612
  - -1.417201540436457
  train_neg_coverage_error_oob:
  - -1.5215736040609138
  - -1.6066411238825031
  - -1.5964010282776349
  - -1.594387755102041
  - -1.5648267008985879
  train_neg_hamming_loss_macro:
  - -0.06863367174280881
  - -0.06907194550872713
  - -0.07155098543273351
  - -0.0660076530612245
  - -0.06792896876337186
  train_neg_hamming_loss_macro_oob:
  - -0.08016074450084602
  - -0.07779906343124735
  - -0.07937017994858613
  - -0.07429846938775511
  - -0.07841249465126231
  train_neg_hamming_loss_micro:
  - -0.0686336717428088
  - -0.06907194550872711
  - -0.0715509854327335
  - -0.06600765306122448
  - -0.06792896876337184
  train_neg_hamming_loss_micro_oob:
  - -0.08016074450084602
  - -0.07779906343124735
  - -0.07937017994858611
  - -0.0742984693877551
  - -0.07841249465126231
  train_neg_hamming_loss_samples:
  - -0.0686336717428088
  - -0.06907194550872711
  - -0.07155098543273351
  - -0.06600765306122448
  - -0.06792896876337184
  train_neg_hamming_loss_samples_oob:
  - -0.08016074450084602
  - -0.07779906343124735
  - -0.07937017994858611
  - -0.0742984693877551
  - -0.0784124946512623
  train_neg_hamming_loss_weighted:
  - -0.11411847138354946
  - -0.10864762458160072
  - -0.11502028533486032
  - -0.10144386546087629
  - -0.10808303268864565
  train_neg_hamming_loss_weighted_oob:
  - -0.1399803329564318
  - -0.12957818089375533
  - -0.13263441318729519
  - -0.11915441532063062
  - -0.13038802937293525
  train_neg_label_ranking_loss:
  - -0.02514762686082483
  - -0.03017402634260872
  - -0.02989535457401781
  - -0.0275278293135436
  - -0.02767318024057434
  train_neg_label_ranking_loss_oob:
  - -0.03791403886581552
  - -0.04504452786700552
  - -0.04383141613218734
  - -0.045319693533979244
  - -0.04026616183227223
  train_precision_macro:
  - 0.9313663282571913
  - 0.930928054491273
  - 0.9284490145672665
  - 0.9339923469387754
  - 0.9320710312366282
  train_precision_macro_oob:
  - 0.919839255499154
  - 0.9222009365687526
  - 0.9206298200514138
  - 0.9257015306122449
  - 0.9215875053487377
  train_precision_micro:
  - 0.9313663282571912
  - 0.9309280544912729
  - 0.9284490145672665
  - 0.9339923469387755
  - 0.9320710312366282
  train_precision_micro_oob:
  - 0.919839255499154
  - 0.9222009365687527
  - 0.9206298200514139
  - 0.9257015306122449
  - 0.9215875053487377
  train_precision_samples:
  - 0.931366328257191
  - 0.9309280544912728
  - 0.9284490145672664
  - 0.9339923469387754
  - 0.932071031236628
  train_precision_samples_oob:
  - 0.9198392554991539
  - 0.9222009365687526
  - 0.9206298200514139
  - 0.9257015306122449
  - 0.9215875053487375
  train_precision_weighted:
  - 0.8858815286164505
  - 0.8913523754183993
  - 0.8849797146651397
  - 0.8985561345391236
  - 0.8919169673113543
  train_precision_weighted_oob:
  - 0.8600196670435682
  - 0.8704218191062447
  - 0.8673655868127047
  - 0.8808455846793695
  - 0.8696119706270647
  train_recall_macro:
  - 0.9313663282571913
  - 0.930928054491273
  - 0.9284490145672665
  - 0.9339923469387754
  - 0.9320710312366282
  train_recall_macro_oob:
  - 0.919839255499154
  - 0.9222009365687526
  - 0.9206298200514138
  - 0.9257015306122449
  - 0.9215875053487377
  train_recall_micro:
  - 0.9313663282571912
  - 0.9309280544912729
  - 0.9284490145672665
  - 0.9339923469387755
  - 0.9320710312366282
  train_recall_micro_oob:
  - 0.919839255499154
  - 0.9222009365687527
  - 0.9206298200514139
  - 0.9257015306122449
  - 0.9215875053487377
  train_recall_samples:
  - 0.931366328257191
  - 0.9309280544912728
  - 0.9284490145672664
  - 0.9339923469387754
  - 0.932071031236628
  train_recall_samples_oob:
  - 0.9198392554991539
  - 0.9222009365687526
  - 0.9206298200514139
  - 0.9257015306122449
  - 0.9215875053487375
  train_recall_weighted:
  - 0.8858815286164505
  - 0.8913523754183993
  - 0.8849797146651397
  - 0.8985561345391236
  - 0.8919169673113543
  train_recall_weighted_oob:
  - 0.8600196670435682
  - 0.8704218191062447
  - 0.8673655868127047
  - 0.8808455846793695
  - 0.8696119706270647
  train_roc_auc_macro:
  - 0.9783477409473958
  - 0.9754398594936139
  - 0.9777970483777003
  - 0.9822101328307605
  - 0.9815935735677449
  train_roc_auc_macro_oob:
  - 0.9648774390740648
  - 0.9654419080700295
  - 0.9656978819513523
  - 0.9701926538333167
  - 0.9706124355916185
  train_roc_auc_micro:
  - 0.9803479466543982
  - 0.9745105493462908
  - 0.9765356940348653
  - 0.9806282941266317
  - 0.978983335971252
  train_roc_auc_micro_oob:
  - 0.9679174380287177
  - 0.9633013147336175
  - 0.9641356068605411
  - 0.9676655392019055
  - 0.9685489515945661
  train_roc_auc_samples:
  - 0.9748523731391752
  - 0.9698259736573912
  - 0.9701046454259822
  - 0.9724721706864563
  - 0.9723268197594256
  train_roc_auc_samples_oob:
  - 0.9620859611341845
  - 0.9549554721329944
  - 0.9561685838678127
  - 0.9546803064660209
  - 0.9597338381677278
  train_roc_auc_weighted:
  - 0.979176177959673
  - 0.979233537157209
  - 0.9785285341480202
  - 0.9807376058995079
  - 0.9821166889557394
  train_roc_auc_weighted_oob:
  - 0.9698408964904862
  - 0.9715919791569624
  - 0.9707287025785754
  - 0.9720681965620805
  - 0.974909492813547
start: 2023-12-22 10:32:23.070070
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
