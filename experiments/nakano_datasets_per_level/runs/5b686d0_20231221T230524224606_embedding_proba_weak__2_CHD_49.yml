active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJPzQzMzMzM/M/zMzMzMzM/L+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAwAAAAAAAAPC/AAAAAAAAAAAAAAAAAAAIQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:05:44.984720
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__2
  params: {}
hash: 5b686d053e725a7a55dcc82aea6735e825265c25490212ec48114c198cb9db6a
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5b686d0_20231221T230524224606_embedding_proba_weak__2_CHD_49.yml
results:
  fit_time:
  - 8.738971471786499
  - 8.709807872772217
  - 9.258837223052979
  - 9.26403522491455
  - 9.77681589126587
  score_time:
  - 2.7134804725646973
  - 2.6881377696990967
  - 2.715562343597412
  - 2.6757144927978516
  - 2.5427842140197754
  test_average_precision_macro:
  - 0.5351549418442688
  - 0.568395215245577
  - 0.5204253641833447
  - 0.5425504179388072
  - 0.5624846315939295
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6721224467820327
  - 0.7116368325368271
  - 0.6778434725683731
  - 0.7037624591656417
  - 0.731637679411737
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8030405405405405
  - 0.79960668633235
  - 0.7875620039682539
  - 0.795045045045045
  - 0.7986496913580248
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6445902251827677
  - 0.6884236320784232
  - 0.643840909363811
  - 0.6601013583735559
  - 0.6977697634910731
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7147147147147147
  - 0.7123893805309734
  - 0.6964285714285715
  - 0.7192192192192192
  - 0.7160493827160495
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7147147147147147
  - 0.7123893805309734
  - 0.6964285714285714
  - 0.7192192192192193
  - 0.7160493827160493
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7147147147147148
  - 0.7123893805309734
  - 0.6964285714285714
  - 0.7192192192192192
  - 0.7160493827160493
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.677182408889726
  - 0.6689278776479294
  - 0.6502452213279678
  - 0.6853370611991302
  - 0.6774256651017214
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5736319091053619
  - 0.5714493791715692
  - 0.5572711249608391
  - 0.5754698320869345
  - 0.5771698929143184
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5560747663551402
  - 0.5532646048109966
  - 0.5342465753424658
  - 0.5615474794841735
  - 0.5576923076923077
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5977808977808977
  - 0.5955867141707849
  - 0.5750115955473099
  - 0.6052845052845051
  - 0.6015913099246432
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5165221562078891
  - 0.507182036726601
  - 0.48917340426783384
  - 0.5249636153675163
  - 0.5192350989438604
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8030405405405403
  - 0.79960668633235
  - 0.7875620039682542
  - 0.7950450450450447
  - 0.8264274691358027
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.14641035833540797
  - 0.14990356959278875
  - 0.13523027812964394
  - 0.15814890955107966
  - 0.1550327523320065
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4417713026319254
  - 0.4425186284272631
  - 0.41328526640012825
  - 0.4445585930244296
  - 0.4553992954313009
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4591711136415683
  - 0.4549604309813275
  - 0.4265605678042014
  - 0.4727781360424163
  - 0.4758551755862795
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.15133074652070974
  - 0.15194697831282578
  - 0.1513001852773724
  - 0.1543612255914597
  - 0.1514416285218915
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8683638505586765
  - 0.8720733874235367
  - 0.8622086567119709
  - 0.8649279823067089
  - 0.8605812766429229
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6216216216216215
  - -3.6814159292035398
  - -3.6964285714285716
  - -3.6216216216216215
  - -3.6018518518518516
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2852852852852853
  - -0.28761061946902655
  - -0.30357142857142855
  - -0.2807807807807808
  - -0.2839506172839506
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2852852852852853
  - -0.28761061946902655
  - -0.30357142857142855
  - -0.2807807807807808
  - -0.2839506172839506
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2852852852852852
  - -0.28761061946902655
  - -0.30357142857142855
  - -0.2807807807807808
  - -0.2839506172839506
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3228175911102741
  - -0.3310721223520705
  - -0.3497547786720322
  - -0.3146629388008698
  - -0.3225743348982786
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20140140140140136
  - -0.19523107177974436
  - -0.20560515873015875
  - -0.20905905905905903
  - -0.17291666666666666
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7147147147147147
  - 0.7123893805309734
  - 0.6964285714285715
  - 0.7192192192192192
  - 0.7160493827160495
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7147147147147147
  - 0.7123893805309734
  - 0.6964285714285714
  - 0.7192192192192193
  - 0.7160493827160493
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7147147147147148
  - 0.7123893805309734
  - 0.6964285714285714
  - 0.7192192192192192
  - 0.7160493827160493
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.677182408889726
  - 0.6689278776479294
  - 0.6502452213279678
  - 0.6853370611991302
  - 0.6774256651017214
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7147147147147147
  - 0.7123893805309734
  - 0.6964285714285715
  - 0.7192192192192192
  - 0.7160493827160495
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7147147147147147
  - 0.7123893805309734
  - 0.6964285714285714
  - 0.7192192192192193
  - 0.7160493827160493
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7147147147147148
  - 0.7123893805309734
  - 0.6964285714285714
  - 0.7192192192192192
  - 0.7160493827160493
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.677182408889726
  - 0.6689278776479294
  - 0.6502452213279678
  - 0.6853370611991302
  - 0.6774256651017214
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.616401021049966
  - 0.6272771211653576
  - 0.5791382039092051
  - 0.6059432436175346
  - 0.5977957000124854
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.78741967216129
  - 0.7994065070354759
  - 0.7903840569188325
  - 0.792571533382245
  - 0.8027201671567871
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7985985985985986
  - 0.8047689282202557
  - 0.7943948412698413
  - 0.790940940940941
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6069259125401992
  - 0.6341648928540063
  - 0.5992350996487087
  - 0.6182019838771474
  - 0.6315828085177224
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8672420913771628
  - 0.8712090164434946
  - 0.8476497596426326
  - 0.8586630147844568
  - 0.8567936863971304
  train_average_precision_macro_oob:
  - 0.8083546919925229
  - 0.7608965765783583
  - 0.7690243748201048
  - 0.7620398949660175
  - 0.7857648443529476
  train_average_precision_micro:
  - 0.8291521647561536
  - 0.8421087664284352
  - 0.8263320405681344
  - 0.8283790881623109
  - 0.8198573154591573
  train_average_precision_micro_oob:
  - 0.8078319006942288
  - 0.8180108194284368
  - 0.7998477400394712
  - 0.8125765734965695
  - 0.7956933321856234
  train_average_precision_samples:
  - 0.8861986986986987
  - 0.883107088989442
  - 0.8849103335841485
  - 0.8787568818818821
  - 0.8755157842406166
  train_average_precision_samples_oob:
  - 0.8729323073073073
  - 0.8727218451483157
  - 0.8634248808628042
  - 0.8628847597597598
  - 0.8574881928908775
  train_average_precision_weighted:
  - 0.8463499997937944
  - 0.8523772633245242
  - 0.8211211317401197
  - 0.8319097082506229
  - 0.8294989747767896
  train_average_precision_weighted_oob:
  - 0.8166652599786459
  - 0.8235557316709713
  - 0.7895290850237582
  - 0.8109641916453108
  - 0.803091906433477
  train_f1_macro:
  - 0.8667417417417417
  - 0.8567119155354449
  - 0.8566591422121896
  - 0.8678678678678678
  - 0.8575689783743475
  train_f1_macro_oob:
  - 0.8340840840840841
  - 0.8167420814479639
  - 0.8145221971407072
  - 0.8273273273273274
  - 0.8135719612229679
  train_f1_micro:
  - 0.8667417417417418
  - 0.8567119155354449
  - 0.8566591422121896
  - 0.8678678678678678
  - 0.8575689783743475
  train_f1_micro_oob:
  - 0.8340840840840841
  - 0.8167420814479638
  - 0.8145221971407073
  - 0.8273273273273273
  - 0.8135719612229679
  train_f1_samples:
  - 0.8667417417417417
  - 0.856711915535445
  - 0.8566591422121896
  - 0.867867867867868
  - 0.8575689783743473
  train_f1_samples_oob:
  - 0.8340840840840842
  - 0.8167420814479638
  - 0.8145221971407074
  - 0.8273273273273273
  - 0.8135719612229678
  train_f1_weighted:
  - 0.8364432117707228
  - 0.8249184927582052
  - 0.8265960626391172
  - 0.8374276202647482
  - 0.8251330979273359
  train_f1_weighted_oob:
  - 0.7985660332821906
  - 0.7798158430318718
  - 0.7776641681282985
  - 0.7910138685094903
  - 0.7756764024974862
  train_jaccard_macro:
  - 0.769749987686939
  - 0.754578986137509
  - 0.7542742501577333
  - 0.7713894562184801
  - 0.7560006170508928
  train_jaccard_macro_oob:
  - 0.7216698552695692
  - 0.6984726958521166
  - 0.6958121357288135
  - 0.7125706723485575
  - 0.6948452943838848
  train_jaccard_micro:
  - 0.7648227890029812
  - 0.7493403693931399
  - 0.7492596248766041
  - 0.76657824933687
  - 0.7506527415143603
  train_jaccard_micro_oob:
  - 0.7153895685769478
  - 0.6902485659655831
  - 0.6870834655664868
  - 0.70550576184379
  - 0.6857322438717788
  train_jaccard_samples:
  - 0.7969872469872469
  - 0.7821815439462498
  - 0.7826947319046642
  - 0.7996996996996997
  - 0.7829241601053681
  train_jaccard_samples_oob:
  - 0.7507410007410007
  - 0.7304058686411627
  - 0.7256065980670947
  - 0.7443303693303693
  - 0.7225234124562981
  train_jaccard_weighted:
  - 0.7212070042278251
  - 0.703907080261808
  - 0.7061641866849386
  - 0.7222498646323863
  - 0.7043701304404004
  train_jaccard_weighted_oob:
  - 0.6663653883302082
  - 0.6413295667071357
  - 0.6390648135750726
  - 0.6556819527301735
  - 0.6364345919193276
  train_label_ranking_average_precision_score:
  - 0.8929554554554548
  - 0.8898944193061834
  - 0.8916823426134933
  - 0.8855136386386375
  - 0.8755157842406156
  train_label_ranking_average_precision_score_oob:
  - 0.8796890640640636
  - 0.879509175465057
  - 0.870196889892149
  - 0.8696415165165153
  - 0.8574881928908771
  train_matthews_corrcoef_macro:
  - 0.5288766371144991
  - 0.5038410245913738
  - 0.5131788126921026
  - 0.5326283030382343
  - 0.5139656510734171
  train_matthews_corrcoef_macro_oob:
  - 0.41280697632396185
  - 0.37975246516204436
  - 0.3793256222349486
  - 0.42670884862774416
  - 0.39860946428098226
  train_matthews_corrcoef_micro:
  - 0.7437298633703595
  - 0.7257520922830843
  - 0.7254657395415426
  - 0.7462921774297525
  - 0.7289792341404053
  train_matthews_corrcoef_micro_oob:
  - 0.677632422803531
  - 0.6470018698827964
  - 0.6452089749628465
  - 0.6662936661012488
  - 0.6439781812127471
  train_matthews_corrcoef_samples:
  - 0.7490413745768914
  - 0.7272572306613525
  - 0.7295325359537748
  - 0.744414531145396
  - 0.7334014216807553
  train_matthews_corrcoef_samples_oob:
  - 0.6790221966209384
  - 0.6551591281032397
  - 0.653299219458755
  - 0.668640735391779
  - 0.6511956941223351
  train_matthews_corrcoef_weighted:
  - 0.5842714388371492
  - 0.5507650307409458
  - 0.5683386984995754
  - 0.5925256575680999
  - 0.5653837843671569
  train_matthews_corrcoef_weighted_oob:
  - 0.42328488452383584
  - 0.38635901413955276
  - 0.3859185148011306
  - 0.4597364809736451
  - 0.4207963202659381
  train_ndgc:
  - 0.9231061193965896
  - 0.9213087539203653
  - 0.9228760281362139
  - 0.9172414436459078
  - 0.9161353062203508
  train_ndgc_oob:
  - 0.9151970959508006
  - 0.9154944369422588
  - 0.9088930671707889
  - 0.9069907953341216
  - 0.9047322413005268
  train_neg_coverage_error:
  - -3.060810810810811
  - -3.1040723981900453
  - -3.0970654627539504
  - -3.0923423423423424
  - -3.0917225950783
  train_neg_coverage_error_oob:
  - -3.195945945945946
  - -3.226244343891403
  - -3.2641083521444694
  - -3.204954954954955
  - -3.243847874720358
  train_neg_hamming_loss_macro:
  - -0.13325825825825824
  - -0.14328808446455507
  - -0.1433408577878104
  - -0.13213213213213215
  - -0.1424310216256525
  train_neg_hamming_loss_macro_oob:
  - -0.1659159159159159
  - -0.18325791855203621
  - -0.18547780285929272
  - -0.1726726726726727
  - -0.18642803877703207
  train_neg_hamming_loss_micro:
  - -0.13325825825825827
  - -0.14328808446455504
  - -0.1433408577878104
  - -0.13213213213213212
  - -0.1424310216256525
  train_neg_hamming_loss_micro_oob:
  - -0.16591591591591592
  - -0.1832579185520362
  - -0.1854778028592927
  - -0.17267267267267267
  - -0.18642803877703207
  train_neg_hamming_loss_samples:
  - -0.13325825825825827
  - -0.14328808446455504
  - -0.14334085778781036
  - -0.13213213213213212
  - -0.14243102162565252
  train_neg_hamming_loss_samples_oob:
  - -0.1659159159159159
  - -0.1832579185520362
  - -0.1854778028592927
  - -0.17267267267267264
  - -0.1864280387770321
  train_neg_hamming_loss_weighted:
  - -0.16355678822927733
  - -0.17508150724179491
  - -0.1734039373608828
  - -0.16257237973525188
  - -0.17486690207266406
  train_neg_hamming_loss_weighted_oob:
  - -0.2014339667178095
  - -0.2201841569681282
  - -0.22233583187170153
  - -0.2089861314905098
  - -0.22432359750251388
  train_neg_label_ranking_loss:
  - -0.09508258258258259
  - -0.09812719959778783
  - -0.09433157762728869
  - -0.09527027027027027
  - -0.10337434750186426
  train_neg_label_ranking_loss_oob:
  - -0.11584084084084086
  - -0.1160570638511815
  - -0.12183345874090794
  - -0.11295045045045046
  - -0.12572706935123043
  train_precision_macro:
  - 0.8667417417417417
  - 0.8567119155354449
  - 0.8566591422121896
  - 0.8678678678678678
  - 0.8575689783743475
  train_precision_macro_oob:
  - 0.8340840840840841
  - 0.8167420814479639
  - 0.8145221971407072
  - 0.8273273273273274
  - 0.8135719612229679
  train_precision_micro:
  - 0.8667417417417418
  - 0.8567119155354449
  - 0.8566591422121896
  - 0.8678678678678678
  - 0.8575689783743475
  train_precision_micro_oob:
  - 0.8340840840840841
  - 0.8167420814479638
  - 0.8145221971407073
  - 0.8273273273273273
  - 0.8135719612229679
  train_precision_samples:
  - 0.8667417417417417
  - 0.856711915535445
  - 0.8566591422121896
  - 0.867867867867868
  - 0.8575689783743473
  train_precision_samples_oob:
  - 0.8340840840840842
  - 0.8167420814479638
  - 0.8145221971407074
  - 0.8273273273273273
  - 0.8135719612229678
  train_precision_weighted:
  - 0.8364432117707228
  - 0.8249184927582052
  - 0.8265960626391172
  - 0.8374276202647482
  - 0.8251330979273359
  train_precision_weighted_oob:
  - 0.7985660332821906
  - 0.7798158430318718
  - 0.7776641681282985
  - 0.7910138685094903
  - 0.7756764024974862
  train_recall_macro:
  - 0.8667417417417417
  - 0.8567119155354449
  - 0.8566591422121896
  - 0.8678678678678678
  - 0.8575689783743475
  train_recall_macro_oob:
  - 0.8340840840840841
  - 0.8167420814479639
  - 0.8145221971407072
  - 0.8273273273273274
  - 0.8135719612229679
  train_recall_micro:
  - 0.8667417417417418
  - 0.8567119155354449
  - 0.8566591422121896
  - 0.8678678678678678
  - 0.8575689783743475
  train_recall_micro_oob:
  - 0.8340840840840841
  - 0.8167420814479638
  - 0.8145221971407073
  - 0.8273273273273273
  - 0.8135719612229679
  train_recall_samples:
  - 0.8667417417417417
  - 0.856711915535445
  - 0.8566591422121896
  - 0.867867867867868
  - 0.8575689783743473
  train_recall_samples_oob:
  - 0.8340840840840842
  - 0.8167420814479638
  - 0.8145221971407074
  - 0.8273273273273273
  - 0.8135719612229678
  train_recall_weighted:
  - 0.8364432117707228
  - 0.8249184927582052
  - 0.8265960626391172
  - 0.8374276202647482
  - 0.8251330979273359
  train_recall_weighted_oob:
  - 0.7985660332821906
  - 0.7798158430318718
  - 0.7776641681282985
  - 0.7910138685094903
  - 0.7756764024974862
  train_roc_auc_macro:
  - 0.8906263055744225
  - 0.8958755486539478
  - 0.8797011236867438
  - 0.8881441648853833
  - 0.8817478860809246
  train_roc_auc_macro_oob:
  - 0.8628205850604456
  - 0.8422229661524124
  - 0.8348882180419616
  - 0.8563030537377171
  - 0.8495734582581828
  train_roc_auc_micro:
  - 0.9116960997668542
  - 0.9124977180725755
  - 0.9079911507487828
  - 0.9126014599648816
  - 0.9078193922654443
  train_roc_auc_micro_oob:
  - 0.8881371621757592
  - 0.8867677186231356
  - 0.8826141634169417
  - 0.8896413604552955
  - 0.8829566981179217
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - 0.8966256524981356
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - 0.8742729306487697
  train_roc_auc_weighted:
  - 0.8489041019797751
  - 0.8591543235164619
  - 0.8346916506337533
  - 0.8461791586219813
  - 0.8357598007493787
  train_roc_auc_weighted_oob:
  - 0.8218214439289115
  - 0.8243348166293857
  - 0.8006878528512064
  - 0.819495044278426
  - 0.8052761972826957
start: 2023-12-21 23:05:24.224606
wrapper: null
