active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0AAMzMzMzPjv8DMzMzMzAzAwMzMzMzMDMCgmZmZmZkRQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:25:06.069384
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__6
  params: {}
hash: 8ce0d4da42d2641a2b79aa7947efa3741a126de1275e06dd103ae2b54f51e1eb
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8ce0d4d_20231221T092310961173_embedding_proba_weak__6_VirusGO.yml
results:
  fit_time:
  - 100.88737607002258
  - 101.95785903930664
  - 102.14856934547424
  - 103.57440614700317
  - 103.05782270431519
  score_time:
  - 3.9764559268951416
  - 4.009884834289551
  - 4.1383819580078125
  - 3.9302315711975098
  - 4.315716505050659
  test_average_precision_macro:
  - 0.9506864988437503
  - 0.942691047266729
  - 0.923721274922274
  - 0.9558534303760258
  - 0.8339306713513749
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9233531170064123
  - 0.863730137612553
  - 0.8993614815549065
  - 0.8643651180382935
  - 0.8966558701039183
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9247076023391814
  - 0.9075396825396825
  - 0.9440740740740741
  - 0.9333333333333333
  - 0.9166666666666666
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9534698547359699
  - 0.9252241175814139
  - 0.9150102240892111
  - 0.9410702496677729
  - 0.9096202615467323
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8815789473684211
  - 0.876984126984127
  - 0.8777777777777779
  - 0.8851851851851853
  - 0.8603603603603603
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.881578947368421
  - 0.876984126984127
  - 0.8777777777777778
  - 0.8851851851851852
  - 0.8603603603603603
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.881578947368421
  - 0.8769841269841271
  - 0.8777777777777781
  - 0.8851851851851854
  - 0.8603603603603605
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8533834586466166
  - 0.848901098901099
  - 0.8396514161220043
  - 0.8502222222222222
  - 0.8302702702702703
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.79189484073205
  - 0.7840203274985883
  - 0.7867002923770312
  - 0.8007729847791959
  - 0.7599350984822882
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.788235294117647
  - 0.7809187279151943
  - 0.7821782178217822
  - 0.7940199335548173
  - 0.7549407114624506
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8076441102756893
  - 0.8004535147392291
  - 0.7952380952380954
  - 0.8095238095238095
  - 0.7754182754182755
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7458401536237322
  - 0.7389784128914564
  - 0.7271358441413447
  - 0.7462340454576478
  - 0.7139626969001307
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9247076023391814
  - 0.9075396825396824
  - 0.9440740740740741
  - 0.9333333333333333
  - 0.9166666666666666
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.23271440196404494
  - 0.2214380921733413
  - 0.20522788107114398
  - 0.22034664976990645
  - 0.21463484893024057
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.620777094895213
  - 0.5852301606217757
  - 0.5499835174440346
  - 0.571377919833036
  - 0.5626557954084442
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5322944401114666
  - 0.49035079029052514
  - 0.38510715840299337
  - 0.4192202458681633
  - 0.40617168717794994
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4844258979659711
  - 0.4472254627752331
  - 0.42379977495937854
  - 0.44950716553060915
  - 0.4267871200071015
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9472227226750909
  - 0.9357602328066257
  - 0.9598329694117663
  - 0.9525146798351601
  - 0.9452465034976132
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5789473684210527
  - -1.5476190476190477
  - -1.3555555555555556
  - -1.288888888888889
  - -1.7027027027027026
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.11842105263157894
  - -0.12301587301587301
  - -0.12222222222222222
  - -0.11481481481481481
  - -0.13963963963963966
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11842105263157894
  - -0.12301587301587301
  - -0.12222222222222222
  - -0.11481481481481481
  - -0.13963963963963963
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11842105263157894
  - -0.12301587301587302
  - -0.12222222222222225
  - -0.11481481481481483
  - -0.13963963963963963
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.14661654135338345
  - -0.15109890109890106
  - -0.16034858387799564
  - -0.14977777777777776
  - -0.16972972972972974
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05453216374269005
  - -0.05119047619047619
  - -0.04055555555555555
  - -0.03222222222222223
  - -0.05503003003003003
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8815789473684211
  - 0.876984126984127
  - 0.8777777777777779
  - 0.8851851851851853
  - 0.8603603603603603
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.881578947368421
  - 0.876984126984127
  - 0.8777777777777778
  - 0.8851851851851852
  - 0.8603603603603603
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.881578947368421
  - 0.8769841269841271
  - 0.8777777777777781
  - 0.8851851851851854
  - 0.8603603603603605
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8533834586466166
  - 0.848901098901099
  - 0.8396514161220043
  - 0.8502222222222222
  - 0.8302702702702703
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8815789473684211
  - 0.876984126984127
  - 0.8777777777777779
  - 0.8851851851851853
  - 0.8603603603603603
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.881578947368421
  - 0.876984126984127
  - 0.8777777777777778
  - 0.8851851851851852
  - 0.8603603603603603
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.881578947368421
  - 0.8769841269841271
  - 0.8777777777777781
  - 0.8851851851851854
  - 0.8603603603603605
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8533834586466166
  - 0.848901098901099
  - 0.8396514161220043
  - 0.8502222222222222
  - 0.8302702702702703
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9595004668534081
  - 0.9769897276649452
  - 0.9674433115304044
  - 0.9838724321564313
  - 0.9147530982089805
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9696727853152434
  - 0.9613461538461539
  - 0.972334139135106
  - 0.9714545454545455
  - 0.9481395348837209
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9454678362573099
  - 0.9488095238095239
  - 0.9594444444444444
  - 0.9677777777777777
  - 0.94496996996997
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9586120162350653
  - 0.9619732022363601
  - 0.9484920158043065
  - 0.9716926462497707
  - 0.9511991341991342
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9518451221382156
  - 0.9401777666285459
  - 0.9538410997010317
  - 0.9339924435401556
  - 0.9610678750699329
  train_average_precision_macro_oob:
  - 0.9206771163477777
  - 0.8981092017679053
  - 0.913912750355285
  - 0.9087724149770074
  - 0.9233014412959594
  train_average_precision_micro:
  - 0.942634404022439
  - 0.9318530312667482
  - 0.940678866809391
  - 0.9099373467048348
  - 0.9342697558932913
  train_average_precision_micro_oob:
  - 0.9071776104316326
  - 0.8954250434967604
  - 0.8968881294066203
  - 0.8756019026478815
  - 0.8949759488231459
  train_average_precision_samples:
  - 0.9577909270216963
  - 0.9385858585858584
  - 0.9701646090534981
  - 0.963991769547325
  - 0.9634313725490196
  train_average_precision_samples_oob:
  - 0.9316568047337277
  - 0.9211111111111112
  - 0.9489711934156377
  - 0.9388888888888889
  - 0.9419607843137254
  train_average_precision_weighted:
  - 0.956745798328627
  - 0.9581965717463246
  - 0.9606720832252992
  - 0.9358514092127215
  - 0.9602180159135176
  train_average_precision_weighted_oob:
  - 0.9343168418907098
  - 0.9325103960924234
  - 0.9307687536990439
  - 0.9153029212673776
  - 0.93423624483027
  train_f1_macro:
  - 0.8836291913214991
  - 0.894949494949495
  - 0.882716049382716
  - 0.8703703703703706
  - 0.8931372549019608
  train_f1_macro_oob:
  - 0.8786982248520708
  - 0.890909090909091
  - 0.8796296296296294
  - 0.8641975308641975
  - 0.8892156862745099
  train_f1_micro:
  - 0.883629191321499
  - 0.8949494949494949
  - 0.8827160493827161
  - 0.8703703703703703
  - 0.8931372549019608
  train_f1_micro_oob:
  - 0.878698224852071
  - 0.8909090909090909
  - 0.8796296296296297
  - 0.8641975308641975
  - 0.8892156862745098
  train_f1_samples:
  - 0.8836291913214991
  - 0.894949494949495
  - 0.8827160493827161
  - 0.8703703703703703
  - 0.8931372549019607
  train_f1_samples_oob:
  - 0.878698224852071
  - 0.8909090909090909
  - 0.8796296296296297
  - 0.8641975308641975
  - 0.8892156862745098
  train_f1_weighted:
  - 0.8585711370857257
  - 0.8805454545454545
  - 0.8589767213316134
  - 0.8335472436132502
  - 0.873966220151427
  train_f1_weighted_oob:
  - 0.8485440289153817
  - 0.8723030303030302
  - 0.8525581966709662
  - 0.8207126268182374
  - 0.8659871869539896
  train_jaccard_macro:
  - 0.7942775103489389
  - 0.8119423169231089
  - 0.7941782936164957
  - 0.7762153917258798
  - 0.8091529003808736
  train_jaccard_macro_oob:
  - 0.7869675238511352
  - 0.8055824649342096
  - 0.7889382423437792
  - 0.7685787452507578
  - 0.8031296577504882
  train_jaccard_micro:
  - 0.7915194346289752
  - 0.8098720292504571
  - 0.7900552486187845
  - 0.7704918032786885
  - 0.8069087688219664
  train_jaccard_micro_oob:
  - 0.783641160949868
  - 0.8032786885245902
  - 0.7851239669421488
  - 0.7608695652173914
  - 0.8005295675198588
  train_jaccard_samples:
  - 0.8079740772048464
  - 0.8275613275613275
  - 0.808641975308642
  - 0.7883597883597884
  - 0.8240896358543416
  train_jaccard_samples_oob:
  - 0.8007889546351086
  - 0.8210678210678211
  - 0.8026161081716638
  - 0.7786596119929452
  - 0.8173669467787116
  train_jaccard_weighted:
  - 0.7533790041355135
  - 0.7873196125770352
  - 0.7563329174598669
  - 0.7201716990024201
  - 0.7769240248043198
  train_jaccard_weighted_oob:
  - 0.7385149526532231
  - 0.7743434629545232
  - 0.745454755821087
  - 0.7042935231630576
  - 0.7646674228355683
  train_label_ranking_average_precision_score:
  - 0.9577909270216963
  - 0.9385858585858586
  - 0.9701646090534977
  - 0.9639917695473252
  - 0.9634313725490196
  train_label_ranking_average_precision_score_oob:
  - 0.9316568047337277
  - 0.9211111111111112
  - 0.9489711934156377
  - 0.9388888888888889
  - 0.9419607843137254
  train_matthews_corrcoef_macro:
  - 0.23170412596246845
  - 0.2518949441637789
  - 0.23613395607892615
  - 0.2109663471477021
  - 0.24413928747048405
  train_matthews_corrcoef_macro_oob:
  - 0.22225284200203876
  - 0.24407572723919682
  - 0.2302403483944555
  - 0.19894369972346285
  - 0.23648958626356453
  train_matthews_corrcoef_micro:
  - 0.601730040961227
  - 0.6475353643522371
  - 0.6120103239542422
  - 0.5629872228851006
  - 0.6336030363605618
  train_matthews_corrcoef_micro_oob:
  - 0.5819292914544045
  - 0.6322065457744757
  - 0.6002319214550557
  - 0.5378885200436716
  - 0.6182142621592048
  train_matthews_corrcoef_samples:
  - 0.47256727043869706
  - 0.5407964434673099
  - 0.49926892699201975
  - 0.392935439196419
  - 0.4840711752253123
  train_matthews_corrcoef_samples_oob:
  - 0.44950592963336555
  - 0.5226146252854916
  - 0.4773381467173281
  - 0.359201420282423
  - 0.46054176346060643
  train_matthews_corrcoef_weighted:
  - 0.4690679621247095
  - 0.5139849511923064
  - 0.4802589554218662
  - 0.427536370877195
  - 0.5004246190824454
  train_matthews_corrcoef_weighted_oob:
  - 0.44984615624846297
  - 0.4980337325772344
  - 0.46800638756122065
  - 0.40253878712382635
  - 0.48486050609153947
  train_ndgc:
  - 0.9695525865200906
  - 0.9556867890020583
  - 0.9795862017221116
  - 0.974475324689696
  - 0.9738289777982394
  train_ndgc_oob:
  - 0.95166515443601
  - 0.9446186311653838
  - 0.9641054416462725
  - 0.9565159523569837
  - 0.9586953704466583
  train_neg_coverage_error:
  - -1.319526627218935
  - -1.412121212121212
  - -1.3395061728395061
  - -1.382716049382716
  - -1.311764705882353
  train_neg_coverage_error_oob:
  - -1.4142011834319526
  - -1.5212121212121212
  - -1.4135802469135803
  - -1.462962962962963
  - -1.4058823529411764
  train_neg_hamming_loss_macro:
  - -0.11637080867850098
  - -0.10505050505050505
  - -0.11728395061728396
  - -0.12962962962962962
  - -0.10686274509803921
  train_neg_hamming_loss_macro_oob:
  - -0.121301775147929
  - -0.10909090909090909
  - -0.12037037037037036
  - -0.13580246913580246
  - -0.11078431372549019
  train_neg_hamming_loss_micro:
  - -0.11637080867850098
  - -0.10505050505050505
  - -0.11728395061728394
  - -0.12962962962962962
  - -0.10686274509803921
  train_neg_hamming_loss_micro_oob:
  - -0.12130177514792899
  - -0.10909090909090909
  - -0.12037037037037036
  - -0.13580246913580246
  - -0.11078431372549019
  train_neg_hamming_loss_samples:
  - -0.11637080867850097
  - -0.10505050505050505
  - -0.11728395061728394
  - -0.12962962962962962
  - -0.1068627450980392
  train_neg_hamming_loss_samples_oob:
  - -0.12130177514792899
  - -0.10909090909090909
  - -0.12037037037037036
  - -0.13580246913580246
  - -0.11078431372549019
  train_neg_hamming_loss_weighted:
  - -0.14142886291427406
  - -0.11945454545454544
  - -0.14102327866838646
  - -0.1664527563867498
  - -0.1260337798485731
  train_neg_hamming_loss_weighted_oob:
  - -0.1514559710846183
  - -0.1276969696969697
  - -0.14744180332903384
  - -0.1792873731817626
  - -0.13401281304601048
  train_neg_label_ranking_loss:
  - -0.022041420118343192
  - -0.036666666666666674
  - -0.01682098765432099
  - -0.024142661179698217
  - -0.022058823529411766
  train_neg_label_ranking_loss_oob:
  - -0.038461538461538464
  - -0.05331649831649832
  - -0.030555555555555558
  - -0.038786008230452675
  - -0.038071895424836605
  train_precision_macro:
  - 0.8836291913214991
  - 0.894949494949495
  - 0.882716049382716
  - 0.8703703703703706
  - 0.8931372549019608
  train_precision_macro_oob:
  - 0.8786982248520708
  - 0.890909090909091
  - 0.8796296296296294
  - 0.8641975308641975
  - 0.8892156862745099
  train_precision_micro:
  - 0.883629191321499
  - 0.8949494949494949
  - 0.8827160493827161
  - 0.8703703703703703
  - 0.8931372549019608
  train_precision_micro_oob:
  - 0.878698224852071
  - 0.8909090909090909
  - 0.8796296296296297
  - 0.8641975308641975
  - 0.8892156862745098
  train_precision_samples:
  - 0.8836291913214991
  - 0.894949494949495
  - 0.8827160493827161
  - 0.8703703703703703
  - 0.8931372549019607
  train_precision_samples_oob:
  - 0.878698224852071
  - 0.8909090909090909
  - 0.8796296296296297
  - 0.8641975308641975
  - 0.8892156862745098
  train_precision_weighted:
  - 0.8585711370857257
  - 0.8805454545454545
  - 0.8589767213316134
  - 0.8335472436132502
  - 0.873966220151427
  train_precision_weighted_oob:
  - 0.8485440289153817
  - 0.8723030303030302
  - 0.8525581966709662
  - 0.8207126268182374
  - 0.8659871869539896
  train_recall_macro:
  - 0.8836291913214991
  - 0.894949494949495
  - 0.882716049382716
  - 0.8703703703703706
  - 0.8931372549019608
  train_recall_macro_oob:
  - 0.8786982248520708
  - 0.890909090909091
  - 0.8796296296296294
  - 0.8641975308641975
  - 0.8892156862745099
  train_recall_micro:
  - 0.883629191321499
  - 0.8949494949494949
  - 0.8827160493827161
  - 0.8703703703703703
  - 0.8931372549019608
  train_recall_micro_oob:
  - 0.878698224852071
  - 0.8909090909090909
  - 0.8796296296296297
  - 0.8641975308641975
  - 0.8892156862745098
  train_recall_samples:
  - 0.8836291913214991
  - 0.894949494949495
  - 0.8827160493827161
  - 0.8703703703703703
  - 0.8931372549019607
  train_recall_samples_oob:
  - 0.878698224852071
  - 0.8909090909090909
  - 0.8796296296296297
  - 0.8641975308641975
  - 0.8892156862745098
  train_recall_weighted:
  - 0.8585711370857257
  - 0.8805454545454545
  - 0.8589767213316134
  - 0.8335472436132502
  - 0.873966220151427
  train_recall_weighted_oob:
  - 0.8485440289153817
  - 0.8723030303030302
  - 0.8525581966709662
  - 0.8207126268182374
  - 0.8659871869539896
  train_roc_auc_macro:
  - 0.9767300084696764
  - 0.9797522985819004
  - 0.9827733468786829
  - 0.9659378904692998
  - 0.9844873840356106
  train_roc_auc_macro_oob:
  - 0.9694517536539561
  - 0.9609446582823974
  - 0.9683173467294653
  - 0.9608102638360263
  - 0.9732484992420113
  train_roc_auc_micro:
  - 0.9802591218042556
  - 0.9758227848101266
  - 0.981364255247756
  - 0.9741063392053491
  - 0.981447747464233
  train_roc_auc_micro_oob:
  - 0.9675216997807244
  - 0.9571772151898733
  - 0.9653999780604112
  - 0.9634306287771633
  - 0.9658912101479097
  train_roc_auc_samples:
  - 0.9779585798816568
  - 0.9633333333333333
  - 0.9831790123456791
  - 0.9758573388203019
  - 0.9779411764705882
  train_roc_auc_samples_oob:
  - 0.9615384615384616
  - 0.9466835016835017
  - 0.9694444444444443
  - 0.9612139917695474
  - 0.9619281045751633
  train_roc_auc_weighted:
  - 0.9768340408999782
  - 0.9825039956820326
  - 0.9814619760046935
  - 0.9649997860755767
  - 0.9802808542408863
  train_roc_auc_weighted_oob:
  - 0.9684901261194722
  - 0.9688400660104706
  - 0.9661930373491762
  - 0.9567911634087382
  - 0.9672387690449715
start: 2023-12-21 09:23:10.961173
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
