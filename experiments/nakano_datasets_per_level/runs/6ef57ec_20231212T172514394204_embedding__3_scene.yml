active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZFUAAnJmZmZnZP4DMzMzMzAzAAJyZmZmZ2T+AzMzMzMwEwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:28:15.555077
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 6ef57ec7394a9a0e2da0724b139a02a281f17bff20f5376ee8abc5383477622f
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6ef57ec_20231212T172514394204_embedding__3_scene.yml
results:
  fit_time:
  - 112.02658200263977
  - 115.78401017189026
  - 116.26181125640869
  - 121.13622903823853
  - 132.18034100532532
  score_time:
  - 10.518053770065308
  - 10.282229900360107
  - 10.220370769500732
  - 10.469083309173584
  - 8.690160751342773
  test_average_precision_macro:
  - 0.824030693916966
  - 0.8038108957772302
  - 0.8331051129694466
  - 0.8494264235853614
  - 0.8522268316363303
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8365720952536833
  - 0.8218773920857702
  - 0.8372953120397609
  - 0.8527974587891465
  - 0.8547886780439305
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8685924369747899
  - 0.8544525294525295
  - 0.8670790378006872
  - 0.8803880803880805
  - 0.8790633608815427
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.813220291430275
  - 0.7907768540304183
  - 0.8216100632119512
  - 0.8392425848883214
  - 0.8423739730613251
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8974089635854341
  - 0.891891891891892
  - 0.9003436426116839
  - 0.9002079002079002
  - 0.8956611570247933
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8974089635854342
  - 0.8918918918918919
  - 0.9003436426116839
  - 0.9002079002079002
  - 0.8956611570247934
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8974089635854343
  - 0.8918918918918919
  - 0.900343642611684
  - 0.9002079002079003
  - 0.8956611570247934
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8916144492479073
  - 0.8863237119051073
  - 0.8947012311079973
  - 0.8941030848545298
  - 0.8899312896405921
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8183045017739231
  - 0.8096881050143367
  - 0.8224869604229554
  - 0.8236300722689373
  - 0.8151066505166961
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8139091775166719
  - 0.8048780487804879
  - 0.81875
  - 0.8185255198487713
  - 0.8110383536014967
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8307322929171667
  - 0.8217503217503216
  - 0.8345606283750613
  - 0.8329373329373329
  - 0.8253640299094843
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8089991587268046
  - 0.8008746334737977
  - 0.8135115135345103
  - 0.813995229438184
  - 0.8060832076895527
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8685924369747894
  - 0.8544525294525291
  - 0.8670790378006871
  - 0.8803880803880804
  - 0.8790633608815428
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6133370583430414
  - 0.5774208789418367
  - 0.6185902345270385
  - 0.616460256833383
  - 0.596460676231465
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6172671404328783
  - 0.5860400553935214
  - 0.6197950114845759
  - 0.6262100736983612
  - 0.6014472002484647
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49508971639241883
  - 0.4627138012613105
  - 0.4874594202267799
  - 0.4827004839268361
  - 0.44539381242662873
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5939909543809906
  - 0.5576825081244593
  - 0.5987628432828421
  - 0.5945327122144933
  - 0.5762670742636692
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9034134830421024
  - 0.892569501365188
  - 0.9020564810324389
  - 0.9120243435202906
  - 0.910979972569938
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4831932773109244
  - -1.4885654885654886
  - -1.4391752577319588
  - -1.4324324324324325
  - -1.4049586776859504
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10259103641456584
  - -0.10810810810810811
  - -0.09965635738831614
  - -0.0997920997920998
  - -0.10433884297520661
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10259103641456582
  - -0.10810810810810811
  - -0.09965635738831616
  - -0.0997920997920998
  - -0.10433884297520661
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10259103641456582
  - -0.10810810810810811
  - -0.09965635738831614
  - -0.0997920997920998
  - -0.10433884297520661
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10838555075209276
  - -0.11367628809489273
  - -0.1052987688920028
  - -0.10589691514547006
  - -0.11006871035940803
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07626050420168067
  - -0.08123700623700625
  - -0.07314432989690722
  - -0.06819126819126818
  - -0.06585743801652892
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8974089635854341
  - 0.891891891891892
  - 0.9003436426116839
  - 0.9002079002079002
  - 0.8956611570247933
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8974089635854342
  - 0.8918918918918919
  - 0.9003436426116839
  - 0.9002079002079002
  - 0.8956611570247934
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8974089635854343
  - 0.8918918918918919
  - 0.900343642611684
  - 0.9002079002079003
  - 0.8956611570247934
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8916144492479073
  - 0.8863237119051073
  - 0.8947012311079973
  - 0.8941030848545298
  - 0.8899312896405921
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8974089635854341
  - 0.891891891891892
  - 0.9003436426116839
  - 0.9002079002079002
  - 0.8956611570247933
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8974089635854342
  - 0.8918918918918919
  - 0.9003436426116839
  - 0.9002079002079002
  - 0.8956611570247934
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8974089635854343
  - 0.8918918918918919
  - 0.900343642611684
  - 0.9002079002079003
  - 0.8956611570247934
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8916144492479073
  - 0.8863237119051073
  - 0.8947012311079973
  - 0.8941030848545298
  - 0.8899312896405921
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9385997382125483
  - 0.9355985805901111
  - 0.9426009901362445
  - 0.9461417319492385
  - 0.9508186459990959
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9460430883590856
  - 0.9455213750695057
  - 0.9489048786914486
  - 0.9525565478443563
  - 0.9551918182644488
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9237394957983193
  - 0.9187629937629939
  - 0.9268556701030928
  - 0.9318087318087319
  - 0.9341425619834711
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9338152001811603
  - 0.9297482937666236
  - 0.9370268411503346
  - 0.9408157182523886
  - 0.9465812201818777
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.995030883918584
  - 0.9950066835044186
  - 0.9953048444995857
  - 0.9939049161297809
  - 0.9950272451246746
  train_average_precision_macro_oob:
  - 0.8703065650516475
  - 0.8714306189443647
  - 0.867069846351864
  - 0.8608782587132341
  - 0.8662999757999937
  train_average_precision_micro:
  - 0.9946803356343475
  - 0.9945884804767134
  - 0.9950224004821373
  - 0.9937253042607843
  - 0.9944177397310452
  train_average_precision_micro_oob:
  - 0.8756778674500649
  - 0.873338832771884
  - 0.8733841342259977
  - 0.8676506705116539
  - 0.8708282564203138
  train_average_precision_samples:
  - 0.9889090281374072
  - 0.989312911041883
  - 0.9902011793270897
  - 0.9875822083766008
  - 0.9896429190500953
  train_average_precision_samples_oob:
  - 0.8865872604867944
  - 0.889607130494981
  - 0.8908255289628858
  - 0.8829006576670129
  - 0.8875715028601144
  train_average_precision_weighted:
  - 0.9949521385650155
  - 0.9949157764006701
  - 0.9952369927577862
  - 0.9937989174611951
  - 0.9950099807159944
  train_average_precision_weighted_oob:
  - 0.8620375833136926
  - 0.8634511531539337
  - 0.8588260307850907
  - 0.8525679241590753
  - 0.8577816473157169
  train_f1_macro:
  - 0.9577075781115139
  - 0.9556074766355142
  - 0.9580298300381548
  - 0.9560401523018345
  - 0.9583983359334373
  train_f1_macro_oob:
  - 0.9032452960469532
  - 0.9015230183454483
  - 0.8996704821366631
  - 0.9008307372793355
  - 0.8998093257063616
  train_f1_micro:
  - 0.9577075781115139
  - 0.955607476635514
  - 0.9580298300381547
  - 0.9560401523018346
  - 0.9583983359334374
  train_f1_micro_oob:
  - 0.9032452960469532
  - 0.9015230183454482
  - 0.8996704821366632
  - 0.9008307372793354
  - 0.8998093257063616
  train_f1_samples:
  - 0.957707578111514
  - 0.955607476635514
  - 0.9580298300381548
  - 0.9560401523018346
  - 0.9583983359334375
  train_f1_samples_oob:
  - 0.9032452960469532
  - 0.9015230183454483
  - 0.8996704821366632
  - 0.9008307372793355
  - 0.8998093257063616
  train_f1_weighted:
  - 0.9558562767863006
  - 0.9538903669708655
  - 0.9563950594941865
  - 0.9545014520813166
  - 0.9567761927490149
  train_f1_weighted_oob:
  - 0.8981986471304536
  - 0.8962398999822832
  - 0.8942815706264108
  - 0.8954084273994526
  - 0.8943626377244553
  train_jaccard_macro:
  - 0.9192996480499045
  - 0.9154105504483688
  - 0.9198669294039566
  - 0.9161833997244656
  - 0.9204993340537212
  train_jaccard_macro_oob:
  - 0.826847616909791
  - 0.8241244142628935
  - 0.8214842284917268
  - 0.8231463218925463
  - 0.8214437362216502
  train_jaccard_micro:
  - 0.9188473004306061
  - 0.9149888143176734
  - 0.9194407456724367
  - 0.9157824933687002
  - 0.9201198202695956
  train_jaccard_micro_oob:
  - 0.8235618163217124
  - 0.8207026941862298
  - 0.8176373236661676
  - 0.819555975436939
  - 0.8178667086812668
  train_jaccard_samples:
  - 0.9285714285714285
  - 0.9252212826979181
  - 0.9295252960705613
  - 0.9260371853829796
  - 0.9298962434687863
  train_jaccard_samples_oob:
  - 0.837895489630342
  - 0.835298917074618
  - 0.8318839502502353
  - 0.8345942738466102
  - 0.8326028279226406
  train_jaccard_weighted:
  - 0.915928369428923
  - 0.9122865603275414
  - 0.916871013040875
  - 0.913369038726824
  - 0.9175397256701241
  train_jaccard_weighted_oob:
  - 0.8187518030674804
  - 0.8156537078598939
  - 0.8128794523539672
  - 0.8144545160374789
  - 0.8127814780040206
  train_label_ranking_average_precision_score:
  - 0.9889090281374069
  - 0.9893129110418827
  - 0.9902011793270896
  - 0.9875822083766008
  - 0.9896429190500949
  train_label_ranking_average_precision_score_oob:
  - 0.8865872604867941
  - 0.8896071304949809
  - 0.8908255289628857
  - 0.8829006576670125
  - 0.8875715028601145
  train_matthews_corrcoef_macro:
  - 0.8548743836762709
  - 0.8473818919605643
  - 0.856269102528644
  - 0.8482444416682616
  - 0.8574497382857905
  train_matthews_corrcoef_macro_oob:
  - 0.6381599471031408
  - 0.632193370178591
  - 0.6215774867611487
  - 0.6272609746165343
  - 0.6239617969181216
  train_matthews_corrcoef_micro:
  - 0.8516600193858083
  - 0.8446069169947131
  - 0.85366221190164
  - 0.8459496608854223
  - 0.8548044797176868
  train_matthews_corrcoef_micro_oob:
  - 0.6373595769926014
  - 0.6310299913015576
  - 0.6246216097043678
  - 0.6270477293170488
  - 0.6243131405281487
  train_matthews_corrcoef_samples:
  - 0.7910930435062478
  - 0.781767621622299
  - 0.7974881969744955
  - 0.782671233119563
  - 0.7984642313597067
  train_matthews_corrcoef_samples_oob:
  - 0.48785389032598137
  - 0.4846160007994843
  - 0.4723916744570367
  - 0.4846355866457105
  - 0.4775984057419429
  train_matthews_corrcoef_weighted:
  - 0.8502367820737234
  - 0.8432688004730226
  - 0.8523022107555104
  - 0.84463894709026
  - 0.8535896485956651
  train_matthews_corrcoef_weighted_oob:
  - 0.6219766243314677
  - 0.6151832593668518
  - 0.6038731082442597
  - 0.6093190859366028
  - 0.6057038455809483
  train_ndgc:
  - 0.991975666987914
  - 0.9921729986850704
  - 0.9929395177202162
  - 0.990939421198738
  - 0.992434340435506
  train_ndgc_oob:
  - 0.9163345446859439
  - 0.9188204508870106
  - 0.9196468279826142
  - 0.9136094068064647
  - 0.9169624630061136
  train_neg_coverage_error:
  - -1.0973588814085966
  - -1.0996884735202492
  - -1.1014568158168574
  - -1.1022845275181723
  - -1.1014040561622465
  train_neg_coverage_error_oob:
  - -1.4013464526152253
  - -1.4034267912772587
  - -1.3980228928199792
  - -1.411214953271028
  - -1.4071762870514821
  train_neg_hamming_loss_macro:
  - -0.04229242188848611
  - -0.04439252336448598
  - -0.0419701699618453
  - -0.04395984769816546
  - -0.04160166406656266
  train_neg_hamming_loss_macro_oob:
  - -0.09675470395304676
  - -0.09847698165455175
  - -0.10032951786333681
  - -0.09916926272066458
  - -0.10019067429363841
  train_neg_hamming_loss_micro:
  - -0.0422924218884861
  - -0.04439252336448598
  - -0.0419701699618453
  - -0.04395984769816545
  - -0.04160166406656266
  train_neg_hamming_loss_micro_oob:
  - -0.09675470395304678
  - -0.09847698165455175
  - -0.1003295178633368
  - -0.09916926272066459
  - -0.10019067429363841
  train_neg_hamming_loss_samples:
  - -0.0422924218884861
  - -0.04439252336448598
  - -0.04197016996184529
  - -0.04395984769816545
  - -0.04160166406656266
  train_neg_hamming_loss_samples_oob:
  - -0.09675470395304676
  - -0.09847698165455175
  - -0.10032951786333681
  - -0.09916926272066458
  - -0.10019067429363841
  train_neg_hamming_loss_weighted:
  - -0.044143723213699346
  - -0.046109633029134525
  - -0.04360494050581369
  - -0.04549854791868345
  - -0.04322380725098506
  train_neg_hamming_loss_weighted_oob:
  - -0.1018013528695463
  - -0.10376010001771692
  - -0.1057184293735893
  - -0.10459157260054748
  - -0.10563736227554468
  train_neg_label_ranking_loss:
  - -0.00513982392542724
  - -0.005010384215991692
  - -0.004591571279916753
  - -0.005737279335410177
  - -0.004953198127925117
  train_neg_label_ranking_loss_oob:
  - -0.06450025893319525
  - -0.06369418483904465
  - -0.06212278876170656
  - -0.06609553478712356
  - -0.06467758710348413
  train_precision_macro:
  - 0.9577075781115139
  - 0.9556074766355142
  - 0.9580298300381548
  - 0.9560401523018345
  - 0.9583983359334373
  train_precision_macro_oob:
  - 0.9032452960469532
  - 0.9015230183454483
  - 0.8996704821366631
  - 0.9008307372793355
  - 0.8998093257063616
  train_precision_micro:
  - 0.9577075781115139
  - 0.955607476635514
  - 0.9580298300381547
  - 0.9560401523018346
  - 0.9583983359334374
  train_precision_micro_oob:
  - 0.9032452960469532
  - 0.9015230183454482
  - 0.8996704821366632
  - 0.9008307372793354
  - 0.8998093257063616
  train_precision_samples:
  - 0.957707578111514
  - 0.955607476635514
  - 0.9580298300381548
  - 0.9560401523018346
  - 0.9583983359334375
  train_precision_samples_oob:
  - 0.9032452960469532
  - 0.9015230183454483
  - 0.8996704821366632
  - 0.9008307372793355
  - 0.8998093257063616
  train_precision_weighted:
  - 0.9558562767863006
  - 0.9538903669708655
  - 0.9563950594941865
  - 0.9545014520813166
  - 0.9567761927490149
  train_precision_weighted_oob:
  - 0.8981986471304536
  - 0.8962398999822832
  - 0.8942815706264108
  - 0.8954084273994526
  - 0.8943626377244553
  train_recall_macro:
  - 0.9577075781115139
  - 0.9556074766355142
  - 0.9580298300381548
  - 0.9560401523018345
  - 0.9583983359334373
  train_recall_macro_oob:
  - 0.9032452960469532
  - 0.9015230183454483
  - 0.8996704821366631
  - 0.9008307372793355
  - 0.8998093257063616
  train_recall_micro:
  - 0.9577075781115139
  - 0.955607476635514
  - 0.9580298300381547
  - 0.9560401523018346
  - 0.9583983359334374
  train_recall_micro_oob:
  - 0.9032452960469532
  - 0.9015230183454482
  - 0.8996704821366632
  - 0.9008307372793354
  - 0.8998093257063616
  train_recall_samples:
  - 0.957707578111514
  - 0.955607476635514
  - 0.9580298300381548
  - 0.9560401523018346
  - 0.9583983359334375
  train_recall_samples_oob:
  - 0.9032452960469532
  - 0.9015230183454483
  - 0.8996704821366632
  - 0.9008307372793355
  - 0.8998093257063616
  train_recall_weighted:
  - 0.9558562767863006
  - 0.9538903669708655
  - 0.9563950594941865
  - 0.9545014520813166
  - 0.9567761927490149
  train_recall_weighted_oob:
  - 0.8981986471304536
  - 0.8962398999822832
  - 0.8942815706264108
  - 0.8954084273994526
  - 0.8943626377244553
  train_roc_auc_macro:
  - 0.998760947592772
  - 0.9988238046750021
  - 0.9988356583167589
  - 0.998519153092416
  - 0.998833023662499
  train_roc_auc_macro_oob:
  - 0.954196418941652
  - 0.9540630988310003
  - 0.9538467669216003
  - 0.9527706050795596
  - 0.9534174262384867
  train_roc_auc_micro:
  - 0.9987346656959007
  - 0.9987777530576168
  - 0.9988538695846187
  - 0.998534300639487
  - 0.9987051435579183
  train_roc_auc_micro_oob:
  - 0.9593771608352925
  - 0.958637912234508
  - 0.9592667644899455
  - 0.9573006486677269
  - 0.9582273023298382
  train_roc_auc_samples:
  - 0.9948601760745728
  - 0.9949896157840082
  - 0.9954084287200832
  - 0.9942627206645898
  - 0.9950468018720748
  train_roc_auc_samples_oob:
  - 0.9354997410668049
  - 0.9363058151609552
  - 0.9378772112382934
  - 0.9339044652128766
  - 0.9353224128965159
  train_roc_auc_weighted:
  - 0.9987195584921582
  - 0.9987855235228661
  - 0.9987956532440762
  - 0.9984687693647412
  - 0.9988178195395988
  train_roc_auc_weighted_oob:
  - 0.9502544482139784
  - 0.9501584346044262
  - 0.9500973064450869
  - 0.9491191305211585
  - 0.9496725559738415
start: 2023-12-12 17:25:14.394204
wrapper: null
