active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AZmZmZmb2PwCamZmZmdk/gJmZmZmZ+b+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:38:29.484379
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__3
  params: {}
hash: 3b172bf21b383d92acf236c593895ea5a0e26e50c688ca3c1ef449796f3615b3
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3b172bf_20231221T113816846186_embedding__3_VirusPseAAC.yml
results:
  fit_time:
  - 5.799044370651245
  - 6.05461859703064
  - 6.066161155700684
  - 5.985895156860352
  - 6.268397331237793
  score_time:
  - 1.718477725982666
  - 1.7005679607391357
  - 1.7264254093170166
  - 1.7180523872375488
  - 1.6843433380126953
  test_average_precision_macro:
  - 0.4668558394678801
  - 0.48165542606425643
  - 0.2356529777282342
  - 0.4387858900194051
  - 0.3337407412590439
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5032573608856533
  - 0.4179919846860921
  - 0.40753706896653147
  - 0.4841957556397072
  - 0.44531633587986663
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7001388888888889
  - 0.659375
  - 0.6867886178861788
  - 0.6682170542635659
  - 0.6767441860465115
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5135554785348968
  - 0.45759225485209687
  - 0.3581089780825673
  - 0.4681750902241777
  - 0.44129712883279826
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7875000000000001
  - 0.7875000000000001
  - 0.8008130081300813
  - 0.8062015503875969
  - 0.8023255813953488
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7875
  - 0.7875
  - 0.8008130081300813
  - 0.8062015503875969
  - 0.8023255813953488
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7875
  - 0.7875
  - 0.8008130081300814
  - 0.806201550387597
  - 0.802325581395349
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6749999999999999
  - 0.6749999999999999
  - 0.6769537083125934
  - 0.6976744186046511
  - 0.6830825353397173
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6750451240932764
  - 0.6750451240932764
  - 0.6949888745986454
  - 0.6987423811132017
  - 0.6962148869229442
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6494845360824743
  - 0.6494845360824743
  - 0.6677966101694915
  - 0.6753246753246753
  - 0.6699029126213593
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6589285714285715
  - 0.6553571428571429
  - 0.672473867595819
  - 0.6794019933554818
  - 0.674418604651163
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5291994160316404
  - 0.5291994160316404
  - 0.5312803438516981
  - 0.5544893134558788
  - 0.5367952779192239
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7001388888888889
  - 0.6593749999999999
  - 0.6867886178861788
  - 0.6682170542635658
  - 0.6767441860465115
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7794650179228766
  - 0.7463131800943267
  - 0.7662485335414848
  - 0.7538308710709266
  - 0.7581569040351592
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.225
  - -2.45
  - -2.292682926829268
  - -2.3255813953488373
  - -2.2790697674418605
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21250000000000002
  - -0.21250000000000002
  - -0.19918699186991873
  - -0.19379844961240308
  - -0.19767441860465115
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2125
  - -0.2125
  - -0.1991869918699187
  - -0.1937984496124031
  - -0.19767441860465115
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2125
  - -0.2125
  - -0.19918699186991867
  - -0.19379844961240308
  - -0.19767441860465113
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3249999999999999
  - -0.3249999999999999
  - -0.3230462916874067
  - -0.3023255813953488
  - -0.3169174646602827
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.18708333333333335
  - -0.234375
  - -0.2268292682926829
  - -0.2238372093023256
  - -0.2197674418604651
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7875000000000001
  - 0.7875000000000001
  - 0.8008130081300813
  - 0.8062015503875969
  - 0.8023255813953488
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7875
  - 0.7875
  - 0.8008130081300813
  - 0.8062015503875969
  - 0.8023255813953488
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7875
  - 0.7875
  - 0.8008130081300814
  - 0.806201550387597
  - 0.802325581395349
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6749999999999999
  - 0.6749999999999999
  - 0.6769537083125934
  - 0.6976744186046511
  - 0.6830825353397173
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7875000000000001
  - 0.7875000000000001
  - 0.8008130081300813
  - 0.8062015503875969
  - 0.8023255813953488
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7875
  - 0.7875
  - 0.8008130081300813
  - 0.8062015503875969
  - 0.8023255813953488
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7875
  - 0.7875
  - 0.8008130081300814
  - 0.806201550387597
  - 0.802325581395349
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6749999999999999
  - 0.6749999999999999
  - 0.6769537083125934
  - 0.6976744186046511
  - 0.6830825353397173
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7072369533880168
  - 0.6463425510740088
  - 0.4706288120418555
  - 0.6068834671775848
  - 0.5583272283272284
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8055814918560017
  - 0.7806826434277414
  - 0.7399772091577749
  - 0.7838461538461539
  - 0.7696315241072273
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8129166666666666
  - 0.765625
  - 0.7731707317073171
  - 0.7761627906976742
  - 0.780232558139535
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6644319309213642
  - 0.5792623593135101
  - 0.45203444412849914
  - 0.5847539847539847
  - 0.5458452440805381
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7160580882250711
  - 0.7267243528890281
  - 0.7211072610692139
  - 0.7237352018142981
  - 0.6848716872881028
  train_average_precision_macro_oob:
  - 0.35611906046498176
  - 0.3670273729802515
  - 0.37718977585098035
  - 0.3226106976865501
  - 0.35929658636966316
  train_average_precision_micro:
  - 0.7502967876616738
  - 0.7444280699544421
  - 0.7619343090252363
  - 0.7534780836694548
  - 0.7505965906166865
  train_average_precision_micro_oob:
  - 0.4491987038494189
  - 0.5165940868660762
  - 0.5211520042024455
  - 0.48088160473821795
  - 0.5146448873361392
  train_average_precision_samples:
  - 0.8257485029940118
  - 0.7923652694610778
  - 0.7991967871485943
  - 0.8045223577235772
  - 0.8128048780487805
  train_average_precision_samples_oob:
  - 0.6743512974051896
  - 0.6893047238855622
  - 0.6847222222222222
  - 0.6736619241192412
  - 0.6827574525745258
  train_average_precision_weighted:
  - 0.7446531582685002
  - 0.7509625984395059
  - 0.7534728700058058
  - 0.7552314766904514
  - 0.7371687233333053
  train_average_precision_weighted_oob:
  - 0.4293701094400628
  - 0.48509442448553936
  - 0.4841534679545303
  - 0.4536388237226115
  - 0.4682721677684057
  train_f1_macro:
  - 0.8033932135728543
  - 0.8123752495009979
  - 0.8012048192771085
  - 0.7987804878048781
  - 0.8038617886178862
  train_f1_macro_oob:
  - 0.7994011976047903
  - 0.7994011976047903
  - 0.7961847389558233
  - 0.7947154471544716
  - 0.7957317073170732
  train_f1_micro:
  - 0.8033932135728543
  - 0.812375249500998
  - 0.8012048192771084
  - 0.7987804878048781
  - 0.8038617886178862
  train_f1_micro_oob:
  - 0.7994011976047904
  - 0.7994011976047904
  - 0.7961847389558233
  - 0.7947154471544715
  - 0.7957317073170732
  train_f1_samples:
  - 0.8033932135728541
  - 0.8123752495009978
  - 0.8012048192771081
  - 0.7987804878048779
  - 0.803861788617886
  train_f1_samples_oob:
  - 0.7994011976047902
  - 0.7994011976047902
  - 0.7961847389558231
  - 0.7947154471544714
  - 0.795731707317073
  train_f1_weighted:
  - 0.6918104090326809
  - 0.7100426013644353
  - 0.6933645913704077
  - 0.686398212992031
  - 0.6981858997694455
  train_f1_weighted_oob:
  - 0.6838263770965531
  - 0.6838263770965531
  - 0.6832156211051102
  - 0.6780367061096354
  - 0.681865064919306
  train_jaccard_macro:
  - 0.6954892706409921
  - 0.7049834777170648
  - 0.6916260313064045
  - 0.68952234541608
  - 0.6944946177704798
  train_jaccard_macro_oob:
  - 0.6913520230254836
  - 0.6913520230254836
  - 0.6865339038327595
  - 0.6854594196140238
  - 0.6860879384484534
  train_jaccard_micro:
  - 0.6713928273561302
  - 0.6840336134453782
  - 0.6683417085427136
  - 0.6649746192893401
  - 0.6720475785896347
  train_jaccard_micro_oob:
  - 0.6658354114713217
  - 0.6658354114713217
  - 0.6613844870725605
  - 0.6593591905564924
  - 0.660759493670886
  train_jaccard_samples:
  - 0.677502138579983
  - 0.6928999144568008
  - 0.6755593803786576
  - 0.672473867595819
  - 0.6803135888501743
  train_jaccard_samples_oob:
  - 0.6706586826347306
  - 0.6715141146278871
  - 0.6673838209982789
  - 0.6655052264808363
  - 0.6668118466898956
  train_jaccard_weighted:
  - 0.5469076938800987
  - 0.5661657755983411
  - 0.5482854509272644
  - 0.5405734620140553
  - 0.5536372597875429
  train_jaccard_weighted_oob:
  - 0.5386331986490818
  - 0.5386331986490818
  - 0.5379912895693183
  - 0.5322174806920817
  - 0.5367635252075711
  train_label_ranking_average_precision_score:
  - 0.825748502994012
  - 0.7923652694610778
  - 0.7991967871485943
  - 0.8045223577235768
  - 0.8128048780487804
  train_label_ranking_average_precision_score_oob:
  - 0.6743512974051898
  - 0.6893047238855623
  - 0.6847222222222221
  - 0.6736619241192411
  - 0.6827574525745259
  train_matthews_corrcoef_macro:
  - 0.031896831320432785
  - 0.07792329533014164
  - 0.048966451166886166
  - 0.042071370397410414
  - 0.0576620937209437
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.12638133957768286
  - 0.22887152305159603
  - 0.1403901860655695
  - 0.12570271259575144
  - 0.17869110603927252
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.023952095808383235
  - 0.0734425812219602
  - 0.027906358626708892
  - 0.024390243902439025
  - 0.04653936300020534
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.06379366264086556
  - 0.15822288781367705
  - 0.09906032840875337
  - 0.08607546013123682
  - 0.11623867414125148
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8722722668930906
  - 0.8469871723148386
  - 0.851777071326526
  - 0.8560272193846412
  - 0.8622424191844461
  train_ndgc_oob:
  - 0.7568577164755482
  - 0.7691741914310963
  - 0.7662630632980565
  - 0.7568083830041228
  - 0.7636722324444025
  train_neg_coverage_error:
  - -1.8263473053892216
  - -1.8562874251497006
  - -1.8614457831325302
  - -1.8841463414634145
  - -1.8475609756097562
  train_neg_coverage_error_oob:
  - -2.3592814371257487
  - -2.287425149700599
  - -2.319277108433735
  - -2.3597560975609757
  - -2.323170731707317
  train_neg_hamming_loss_macro:
  - -0.1966067864271457
  - -0.18762475049900204
  - -0.19879518072289157
  - -0.201219512195122
  - -0.19613821138211382
  train_neg_hamming_loss_macro_oob:
  - -0.20059880239520958
  - -0.20059880239520958
  - -0.20381526104417672
  - -0.20528455284552846
  - -0.20426829268292682
  train_neg_hamming_loss_micro:
  - -0.1966067864271457
  - -0.18762475049900199
  - -0.19879518072289157
  - -0.20121951219512196
  - -0.19613821138211382
  train_neg_hamming_loss_micro_oob:
  - -0.20059880239520958
  - -0.20059880239520958
  - -0.20381526104417672
  - -0.20528455284552846
  - -0.20426829268292682
  train_neg_hamming_loss_samples:
  - -0.1966067864271457
  - -0.18762475049900196
  - -0.19879518072289157
  - -0.20121951219512196
  - -0.19613821138211382
  train_neg_hamming_loss_samples_oob:
  - -0.20059880239520958
  - -0.20059880239520958
  - -0.20381526104417677
  - -0.20528455284552843
  - -0.20426829268292682
  train_neg_hamming_loss_weighted:
  - -0.30818959096731907
  - -0.2899573986355647
  - -0.30663540862959227
  - -0.3136017870079691
  - -0.30181410023055455
  train_neg_hamming_loss_weighted_oob:
  - -0.31617362290344686
  - -0.31617362290344686
  - -0.3167843788948899
  - -0.3219632938903647
  - -0.3181349350806941
  train_neg_label_ranking_loss:
  - -0.11706586826347305
  - -0.1270791749833666
  - -0.12287483266398928
  - -0.12589769647696478
  - -0.11988482384823848
  train_neg_label_ranking_loss_oob:
  - -0.23158682634730537
  - -0.21621756487025948
  - -0.2147255689424364
  - -0.22679539295392953
  - -0.220630081300813
  train_precision_macro:
  - 0.8033932135728543
  - 0.8123752495009979
  - 0.8012048192771085
  - 0.7987804878048781
  - 0.8038617886178862
  train_precision_macro_oob:
  - 0.7994011976047903
  - 0.7994011976047903
  - 0.7961847389558233
  - 0.7947154471544716
  - 0.7957317073170732
  train_precision_micro:
  - 0.8033932135728543
  - 0.812375249500998
  - 0.8012048192771084
  - 0.7987804878048781
  - 0.8038617886178862
  train_precision_micro_oob:
  - 0.7994011976047904
  - 0.7994011976047904
  - 0.7961847389558233
  - 0.7947154471544715
  - 0.7957317073170732
  train_precision_samples:
  - 0.8033932135728541
  - 0.8123752495009978
  - 0.8012048192771081
  - 0.7987804878048779
  - 0.803861788617886
  train_precision_samples_oob:
  - 0.7994011976047902
  - 0.7994011976047902
  - 0.7961847389558231
  - 0.7947154471544714
  - 0.795731707317073
  train_precision_weighted:
  - 0.6918104090326809
  - 0.7100426013644353
  - 0.6933645913704077
  - 0.686398212992031
  - 0.6981858997694455
  train_precision_weighted_oob:
  - 0.6838263770965531
  - 0.6838263770965531
  - 0.6832156211051102
  - 0.6780367061096354
  - 0.681865064919306
  train_recall_macro:
  - 0.8033932135728543
  - 0.8123752495009979
  - 0.8012048192771085
  - 0.7987804878048781
  - 0.8038617886178862
  train_recall_macro_oob:
  - 0.7994011976047903
  - 0.7994011976047903
  - 0.7961847389558233
  - 0.7947154471544716
  - 0.7957317073170732
  train_recall_micro:
  - 0.8033932135728543
  - 0.812375249500998
  - 0.8012048192771084
  - 0.7987804878048781
  - 0.8038617886178862
  train_recall_micro_oob:
  - 0.7994011976047904
  - 0.7994011976047904
  - 0.7961847389558233
  - 0.7947154471544715
  - 0.7957317073170732
  train_recall_samples:
  - 0.8033932135728541
  - 0.8123752495009978
  - 0.8012048192771081
  - 0.7987804878048779
  - 0.803861788617886
  train_recall_samples_oob:
  - 0.7994011976047902
  - 0.7994011976047902
  - 0.7961847389558231
  - 0.7947154471544714
  - 0.795731707317073
  train_recall_weighted:
  - 0.6918104090326809
  - 0.7100426013644353
  - 0.6933645913704077
  - 0.686398212992031
  - 0.6981858997694455
  train_recall_weighted_oob:
  - 0.6838263770965531
  - 0.6838263770965531
  - 0.6832156211051102
  - 0.6780367061096354
  - 0.681865064919306
  train_roc_auc_macro:
  - 0.8004815013296898
  - 0.8248657640712741
  - 0.829776563864537
  - 0.8362480427021436
  - 0.7823616447352227
  train_roc_auc_macro_oob:
  - 0.6013233521434979
  - 0.6269811293703046
  - 0.6559303448180788
  - 0.6123066233911715
  - 0.5761302933227533
  train_roc_auc_micro:
  - 0.8837025856982255
  - 0.8852181042353774
  - 0.8904888215233042
  - 0.8872971056696461
  - 0.8790339490288023
  train_roc_auc_micro_oob:
  - 0.7804982577747964
  - 0.793485754746865
  - 0.8017691748613173
  - 0.788958243650452
  - 0.7781844290679426
  train_roc_auc_samples:
  - 0.8829341317365269
  - 0.8729208250166334
  - 0.8771251673360106
  - 0.8741023035230351
  - 0.8801151761517614
  train_roc_auc_samples_oob:
  - 0.7684131736526946
  - 0.7837824351297404
  - 0.7852744310575636
  - 0.7732046070460705
  - 0.7793699186991869
  train_roc_auc_weighted:
  - 0.7776532922569367
  - 0.7875883600718542
  - 0.7922580578860433
  - 0.7898494288151612
  - 0.7637154556898612
  train_roc_auc_weighted_oob:
  - 0.6080149237206975
  - 0.6535462580996025
  - 0.6612205170593553
  - 0.6383277904248852
  - 0.6075933447079296
start: 2023-12-21 11:38:16.846186
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
