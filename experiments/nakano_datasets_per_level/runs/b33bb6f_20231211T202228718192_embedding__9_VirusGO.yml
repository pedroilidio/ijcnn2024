active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0AAMzMzMzPjvwCamZmZmdk/YGZmZmZmEsCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: &id004 !!python/name:nakano_datasets_v2.estimators.get_oob_proba ''
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id005 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: &id007 !!python/name:nakano_datasets_v2.estimators.get_oob_predictions ''
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id008 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id009 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id010 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id011 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id012 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id013 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id014 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id015 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id016 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-11 20:27:54.117185
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      average_precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__9
  params:
    min_levels: 0
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    trim_to_best_score: false
hash: b33bb6f3fb0cd8488dcf3bab7c1602ba0890615304be35f3de2eb21dc8cb3e40
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b33bb6f_20231211T202228718192_embedding__9_VirusGO.yml
results:
  fit_time:
  - 157.76053929328918
  - 156.7025454044342
  - 157.4900040626526
  - 154.94952964782715
  - 158.53454160690308
  score_time:
  - 62.48663115501404
  - 63.711864709854126
  - 67.07081389427185
  - 67.63842916488647
  - 65.76118993759155
  test_average_precision_macro:
  - 0.9476353283765414
  - 0.9708810076889662
  - 0.9690471725693505
  - 0.9930630608068688
  - 0.8677855323158897
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9388996056748826
  - 0.9301571034367462
  - 0.9390498921850198
  - 0.9656468017884807
  - 0.8637286989569329
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9482456140350877
  - 0.9345238095238095
  - 0.9369918699186991
  - 0.9873188405797101
  - 0.9
  test_average_precision_samples_oob:
  - 0.47543859649122805
  - 0.5718253968253968
  - 0.4855691056910569
  - 0.4960144927536232
  - 0.5314583333333334
  test_average_precision_weighted:
  - 0.9576910010196484
  - 0.9592797953680307
  - 0.9648590597097245
  - 0.9860641958693578
  - 0.89628718861296
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_coverage_error:
  - -1.4736842105263157
  - -1.3571428571428572
  - -1.3902439024390243
  - -1.173913043478261
  - -1.625
  test_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.912280701754386
  - 0.9246031746031748
  - 0.9146341463414633
  - 0.9384057971014492
  - 0.9166666666666669
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9122807017543859
  - 0.9246031746031746
  - 0.9146341463414634
  - 0.9384057971014492
  - 0.9166666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9122807017543859
  - 0.9246031746031746
  - 0.9146341463414634
  - 0.9384057971014492
  - 0.9166666666666667
  test_f1_samples_oob:
  - 0.75
  - 0.757936507936508
  - 0.7235772357723578
  - 0.7608695652173914
  - 0.7708333333333334
  test_f1_weighted:
  - 0.8995703544575725
  - 0.9204761904761906
  - 0.8847441415590627
  - 0.93561872909699
  - 0.8975000000000002
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_macro:
  - -0.08771929824561403
  - -0.07539682539682539
  - -0.08536585365853659
  - -0.06159420289855073
  - -0.08333333333333333
  test_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_micro:
  - -0.08771929824561403
  - -0.07539682539682539
  - -0.08536585365853659
  - -0.06159420289855073
  - -0.08333333333333333
  test_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_samples:
  - -0.08771929824561404
  - -0.07539682539682539
  - -0.08536585365853658
  - -0.06159420289855073
  - -0.08333333333333333
  test_hamming_loss_samples_oob:
  - -0.25
  - -0.24206349206349204
  - -0.2764227642276423
  - -0.2391304347826087
  - -0.22916666666666666
  test_hamming_loss_weighted:
  - -0.10042964554242749
  - -0.07952380952380951
  - -0.11525585844093737
  - -0.06438127090301003
  - -0.1025
  test_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8414494719372767
  - 0.8605182257356171
  - 0.8461307493684922
  - 0.8843310657596372
  - 0.8491767180535117
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8387096774193549
  - 0.8597785977859779
  - 0.8426966292134831
  - 0.8839590443686007
  - 0.8461538461538461
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8590225563909776
  - 0.8758503401360545
  - 0.8652729384436701
  - 0.9016563146997929
  - 0.869047619047619
  test_jaccard_samples_oob:
  - 0.6165413533834587
  - 0.6315192743764173
  - 0.5865272938443671
  - 0.6293995859213252
  - 0.6428571428571429
  test_jaccard_weighted:
  - 0.8206223675113672
  - 0.8531646903820815
  - 0.7948121544845711
  - 0.8791758241758241
  - 0.817931631291354
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9482456140350877
  - 0.9345238095238095
  - 0.9369918699186991
  - 0.9873188405797101
  - 0.9
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_loss:
  - 0.034868421052631576
  - 0.03273809523809524
  - 0.028658536585365855
  - 0.00676328502415459
  - 0.06875
  test_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3751153354188495
  - 0.4099357373368546
  - 0.609832544388365
  - 0.5249161567329051
  - 0.4996225218467276
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7250614084642576
  - 0.7494785719597395
  - 0.7244937454830983
  - 0.788739268267592
  - 0.735798173363639
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6799191818242436
  - 0.6745195744793977
  - 0.6909712714179196
  - 0.7267925115659494
  - 0.7015898590529466
  test_matthews_corrcoef_samples_oob:
  - 0.05778676035659136
  - 0.10508558005042534
  - 0.028376618573580384
  - 0.07600108465546829
  - 0.10615124735378853
  test_matthews_corrcoef_weighted:
  - 0.6290695259410551
  - 0.6590466819449613
  - 0.6561102221631655
  - 0.7335321113872376
  - 0.6633547886638905
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9623271869348855
  - 0.9525222965114244
  - 0.9545577123671046
  - 0.9912695160230571
  - 0.9289769936268524
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.912280701754386
  - 0.9246031746031748
  - 0.9146341463414633
  - 0.9384057971014492
  - 0.9166666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9122807017543859
  - 0.9246031746031746
  - 0.9146341463414634
  - 0.9384057971014492
  - 0.9166666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9122807017543859
  - 0.9246031746031746
  - 0.9146341463414634
  - 0.9384057971014492
  - 0.9166666666666667
  test_precision_samples_oob:
  - 0.75
  - 0.757936507936508
  - 0.7235772357723578
  - 0.7608695652173914
  - 0.7708333333333334
  test_precision_weighted:
  - 0.8995703544575725
  - 0.9204761904761906
  - 0.8847441415590627
  - 0.93561872909699
  - 0.8975
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.912280701754386
  - 0.9246031746031748
  - 0.9146341463414633
  - 0.9384057971014492
  - 0.9166666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9122807017543859
  - 0.9246031746031746
  - 0.9146341463414634
  - 0.9384057971014492
  - 0.9166666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9122807017543859
  - 0.9246031746031746
  - 0.9146341463414634
  - 0.9384057971014492
  - 0.9166666666666667
  test_recall_samples_oob:
  - 0.75
  - 0.757936507936508
  - 0.7235772357723578
  - 0.7608695652173914
  - 0.7708333333333334
  test_recall_weighted:
  - 0.8995703544575725
  - 0.9204761904761906
  - 0.8847441415590627
  - 0.93561872909699
  - 0.8975
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.983485060690943
  - 0.9855283224400871
  - 0.9878338788185336
  - 0.9949880335275872
  - 0.9400838158330966
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9802759092463801
  - 0.9800990099009901
  - 0.9835093011563599
  - 0.9911572802197802
  - 0.9469473684210525
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9651315789473683
  - 0.9672619047619048
  - 0.9713414634146342
  - 0.9932367149758453
  - 0.93125
  test_roc_auc_samples_oob:
  - 0.6157894736842104
  - 0.7220238095238096
  - 0.6195121951219513
  - 0.6096618357487923
  - 0.666875
  test_roc_auc_weighted:
  - 0.9792774252558165
  - 0.9735333333333333
  - 0.9802391153000451
  - 0.9898635846911709
  - 0.947475845410628
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9886051909216677
  - 0.989213407308975
  - 0.9902823111499686
  - 0.9850335256993225
  - 0.9961672673933367
  train_average_precision_macro_oob:
  - 0.940745613437408
  - 0.9564637033569631
  - 0.938619190219192
  - 0.9314160655482541
  - 0.9535554108188796
  train_average_precision_micro:
  - 0.970944432524876
  - 0.9743154272941508
  - 0.9725010281847113
  - 0.967769941956663
  - 0.9777730611155919
  train_average_precision_micro_oob:
  - 0.9243136470870573
  - 0.9291749869577338
  - 0.9278664630243985
  - 0.9115860510916761
  - 0.9381622095262435
  train_average_precision_samples:
  - 0.9802761341222881
  - 0.9782828282828282
  - 0.9799196787148595
  - 0.9777432712215323
  - 0.9880239520958084
  train_average_precision_samples_oob:
  - 0.953353057199211
  - 0.9345454545454545
  - 0.9498995983935743
  - 0.924120082815735
  - 0.9464071856287424
  train_average_precision_weighted:
  - 0.9889205694826056
  - 0.9902880721874948
  - 0.9918832238836279
  - 0.986881568785644
  - 0.9940634220201864
  train_average_precision_weighted_oob:
  - 0.9481353793680024
  - 0.9609971774342501
  - 0.9475635106414435
  - 0.9403706117395473
  - 0.9598468587263317
  train_coverage_error:
  - -1.2603550295857988
  - -1.284848484848485
  - -1.2710843373493976
  - -1.3043478260869565
  - -1.2335329341317365
  train_coverage_error_oob:
  - -1.3668639053254439
  - -1.406060606060606
  - -1.4036144578313252
  - -1.4720496894409938
  - -1.401197604790419
  train_f1_macro:
  - 0.9467455621301776
  - 0.9454545454545454
  - 0.9528112449799196
  - 0.937888198757764
  - 0.9441117764471056
  train_f1_macro_oob:
  - 0.92603550295858
  - 0.9333333333333335
  - 0.9337349397590361
  - 0.9182194616977225
  - 0.9221556886227545
  train_f1_micro:
  - 0.9467455621301775
  - 0.9454545454545454
  - 0.9528112449799196
  - 0.937888198757764
  - 0.9441117764471059
  train_f1_micro_oob:
  - 0.9260355029585798
  - 0.9333333333333333
  - 0.9337349397590361
  - 0.9182194616977226
  - 0.9221556886227545
  train_f1_samples:
  - 0.9467455621301775
  - 0.9454545454545454
  - 0.9528112449799198
  - 0.937888198757764
  - 0.9441117764471058
  train_f1_samples_oob:
  - 0.9260355029585798
  - 0.9333333333333333
  - 0.9337349397590361
  - 0.9182194616977226
  - 0.9221556886227545
  train_f1_weighted:
  - 0.9480572477919958
  - 0.9462946294629463
  - 0.951327698855122
  - 0.9375776397515527
  - 0.9463449338945871
  train_f1_weighted_oob:
  - 0.92237735739062
  - 0.9283828382838283
  - 0.9337049691302525
  - 0.9120807453416149
  - 0.9195470445248117
  train_hamming_loss_macro:
  - -0.05325443786982248
  - -0.05454545454545454
  - -0.04718875502008032
  - -0.06211180124223603
  - -0.05588822355289421
  train_hamming_loss_macro_oob:
  - -0.07396449704142012
  - -0.06666666666666667
  - -0.06626506024096385
  - -0.08178053830227744
  - -0.07784431137724551
  train_hamming_loss_micro:
  - -0.05325443786982249
  - -0.05454545454545454
  - -0.04718875502008032
  - -0.062111801242236024
  - -0.05588822355289421
  train_hamming_loss_micro_oob:
  - -0.07396449704142012
  - -0.06666666666666667
  - -0.06626506024096386
  - -0.08178053830227744
  - -0.07784431137724551
  train_hamming_loss_samples:
  - -0.05325443786982249
  - -0.05454545454545454
  - -0.04718875502008031
  - -0.062111801242236024
  - -0.0558882235528942
  train_hamming_loss_samples_oob:
  - -0.07396449704142011
  - -0.06666666666666667
  - -0.06626506024096386
  - -0.08178053830227741
  - -0.07784431137724551
  train_hamming_loss_weighted:
  - -0.0519427522080042
  - -0.0537053705370537
  - -0.048672301144878014
  - -0.0624223602484472
  - -0.05365506610541294
  train_hamming_loss_weighted_oob:
  - -0.07762264260938002
  - -0.0716171617161716
  - -0.06629503086974765
  - -0.0879192546583851
  - -0.08045295547518824
  train_jaccard_macro:
  - 0.8997897806957521
  - 0.8974391209136877
  - 0.9114858615597777
  - 0.8836990522317305
  - 0.8948107015628817
  train_jaccard_macro_oob:
  - 0.8628072738845445
  - 0.875729962674583
  - 0.876604855160875
  - 0.8495631537528213
  - 0.8562212959357716
  train_jaccard_micro:
  - 0.898876404494382
  - 0.896551724137931
  - 0.909875359539789
  - 0.8830409356725146
  - 0.8941398865784499
  train_jaccard_micro_oob:
  - 0.8622589531680441
  - 0.875
  - 0.8757062146892656
  - 0.8488038277511962
  - 0.8555555555555555
  train_jaccard_samples:
  - 0.9136376444068753
  - 0.911111111111111
  - 0.9221170395869192
  - 0.898698609878734
  - 0.9080410607356715
  train_jaccard_samples_oob:
  - 0.8812341504649198
  - 0.8935064935064936
  - 0.8919965576592082
  - 0.8697131026323572
  - 0.8748217850014256
  train_jaccard_weighted:
  - 0.9018143746939443
  - 0.8985762814492907
  - 0.9078051546449749
  - 0.8827829793255291
  - 0.8985409322086786
  train_jaccard_weighted_oob:
  - 0.8561516881856427
  - 0.8667009271227191
  - 0.8761864413770949
  - 0.8385808028967315
  - 0.8512777822834888
  train_label_ranking_average_precision_score:
  - 0.9802761341222878
  - 0.9782828282828281
  - 0.9799196787148592
  - 0.9777432712215318
  - 0.9880239520958084
  train_label_ranking_average_precision_score_oob:
  - 0.953353057199211
  - 0.9345454545454545
  - 0.9498995983935743
  - 0.9241200828157348
  - 0.9464071856287426
  train_label_ranking_loss:
  - 0.010502958579881658
  - 0.011060606060606062
  - 0.010240963855421687
  - 0.011801242236024845
  - 0.004790419161676647
  train_label_ranking_loss_oob:
  - 0.028763971071663376
  - 0.034915824915824914
  - 0.033266398929049534
  - 0.04192546583850932
  - 0.03321689953426481
  train_matthews_corrcoef_macro:
  - 0.5512390137555289
  - 0.5462267925605837
  - 0.7079565209759388
  - 0.5197469976510443
  - 0.5363337777536007
  train_matthews_corrcoef_macro_oob:
  - 0.44520753497496557
  - 0.5014496941285641
  - 0.5283346779084438
  - 0.38855739335982276
  - 0.42203871864218856
  train_matthews_corrcoef_micro:
  - 0.8282515091035357
  - 0.826207898160278
  - 0.84906290288556
  - 0.8032246852597706
  - 0.8199708305413107
  train_matthews_corrcoef_micro_oob:
  - 0.7564879583323356
  - 0.785419943927482
  - 0.784845724075331
  - 0.7368529810877901
  - 0.7443678346430421
  train_matthews_corrcoef_samples:
  - 0.7757802239749666
  - 0.7851138591581249
  - 0.8169198664166142
  - 0.7546116152741685
  - 0.7698116456560293
  train_matthews_corrcoef_samples_oob:
  - 0.6901821484399621
  - 0.7328208141545847
  - 0.7224631066085739
  - 0.6716334087172223
  - 0.6704595870506345
  train_matthews_corrcoef_weighted:
  - 0.7716883468020974
  - 0.7705819965991856
  - 0.8044794569661776
  - 0.7451195284822429
  - 0.7658191531291353
  train_matthews_corrcoef_weighted_oob:
  - 0.6833810599959634
  - 0.7226868624116772
  - 0.7243113113589794
  - 0.6456163572389869
  - 0.6716376197430326
  train_ndgc:
  - 0.986106222651828
  - 0.9847048956687737
  - 0.9861602540414373
  - 0.984010293432472
  - 0.99115999409752
  train_ndgc_oob:
  - 0.9672916420764669
  - 0.9526341830365197
  - 0.9649328045919343
  - 0.9460258017894914
  - 0.9618740213038867
  train_precision_macro:
  - 0.9467455621301776
  - 0.9454545454545454
  - 0.9528112449799196
  - 0.937888198757764
  - 0.9441117764471056
  train_precision_macro_oob:
  - 0.92603550295858
  - 0.9333333333333335
  - 0.9337349397590361
  - 0.9182194616977225
  - 0.9221556886227545
  train_precision_micro:
  - 0.9467455621301775
  - 0.9454545454545454
  - 0.9528112449799196
  - 0.937888198757764
  - 0.9441117764471058
  train_precision_micro_oob:
  - 0.9260355029585798
  - 0.9333333333333333
  - 0.9337349397590361
  - 0.9182194616977226
  - 0.9221556886227545
  train_precision_samples:
  - 0.9467455621301775
  - 0.9454545454545454
  - 0.9528112449799198
  - 0.937888198757764
  - 0.9441117764471058
  train_precision_samples_oob:
  - 0.9260355029585798
  - 0.9333333333333333
  - 0.9337349397590361
  - 0.9182194616977226
  - 0.9221556886227545
  train_precision_weighted:
  - 0.9480572477919958
  - 0.9462946294629463
  - 0.951327698855122
  - 0.9375776397515527
  - 0.9463449338945871
  train_precision_weighted_oob:
  - 0.92237735739062
  - 0.9283828382838283
  - 0.9337049691302525
  - 0.9120807453416149
  - 0.9195470445248117
  train_recall_macro:
  - 0.9467455621301776
  - 0.9454545454545454
  - 0.9528112449799196
  - 0.937888198757764
  - 0.9441117764471056
  train_recall_macro_oob:
  - 0.92603550295858
  - 0.9333333333333335
  - 0.9337349397590361
  - 0.9182194616977225
  - 0.9221556886227545
  train_recall_micro:
  - 0.9467455621301775
  - 0.9454545454545454
  - 0.9528112449799196
  - 0.937888198757764
  - 0.9441117764471058
  train_recall_micro_oob:
  - 0.9260355029585798
  - 0.9333333333333333
  - 0.9337349397590361
  - 0.9182194616977226
  - 0.9221556886227545
  train_recall_samples:
  - 0.9467455621301775
  - 0.9454545454545454
  - 0.9528112449799198
  - 0.937888198757764
  - 0.9441117764471058
  train_recall_samples_oob:
  - 0.9260355029585798
  - 0.9333333333333333
  - 0.9337349397590361
  - 0.9182194616977226
  - 0.9221556886227545
  train_recall_weighted:
  - 0.9480572477919958
  - 0.9462946294629463
  - 0.951327698855122
  - 0.9375776397515527
  - 0.9463449338945871
  train_recall_weighted_oob:
  - 0.92237735739062
  - 0.9283828382838283
  - 0.9337049691302525
  - 0.9120807453416149
  - 0.9195470445248117
  train_roc_auc_macro:
  - 0.9961585741233355
  - 0.99630198504215
  - 0.9972819082283874
  - 0.9954972431420067
  - 0.9981175753791279
  train_roc_auc_macro_oob:
  - 0.9771985170349345
  - 0.980935505542119
  - 0.9778559906190663
  - 0.9727319015054622
  - 0.9842992121507783
  train_roc_auc_micro:
  - 0.9910771230555235
  - 0.992134492637081
  - 0.9915016114396571
  - 0.9901501305483028
  - 0.993954207920792
  train_roc_auc_micro_oob:
  - 0.975120419356994
  - 0.9760956425591799
  - 0.9739353546731749
  - 0.9702872062663185
  - 0.980266089108911
  train_roc_auc_samples:
  - 0.9894970414201185
  - 0.988939393939394
  - 0.9897590361445784
  - 0.9881987577639753
  - 0.9952095808383233
  train_roc_auc_samples_oob:
  - 0.9712360289283366
  - 0.965084175084175
  - 0.9667336010709505
  - 0.9580745341614907
  - 0.9667831004657352
  train_roc_auc_weighted:
  - 0.99456478251153
  - 0.9951840270097162
  - 0.9964501883258615
  - 0.9938506258100265
  - 0.9964300991050516
  train_roc_auc_weighted_oob:
  - 0.975824253200478
  - 0.9795903716968567
  - 0.9721681353870922
  - 0.9700164731464055
  - 0.9808091210059984
start: 2023-12-11 20:22:28.718192
wrapper: null
