active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv8zMzMzMzPy/NDMzMzMz8z80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAIQAAAAAAAAAjAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:04:57.187113
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__8
  params: {}
hash: a57f118b9fc4edf843b9cb754285955c6d598a216e9669efdc09b636c4ad201a
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a57f118_20231222T000326486214_embedding_proba__8_CHD_49.yml
results:
  fit_time:
  - 64.91439080238342
  - 64.56008744239807
  - 65.07650375366211
  - 65.60016417503357
  - 65.48082375526428
  score_time:
  - 7.597691297531128
  - 7.549665689468384
  - 7.712700605392456
  - 7.657562494277954
  - 7.8331992626190186
  test_average_precision_macro:
  - 0.5555464986743385
  - 0.5169825855642616
  - 0.5206624062764563
  - 0.50758274750424
  - 0.5176511087507679
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6546710961790017
  - 0.624155411461115
  - 0.639882899853319
  - 0.6391113841572216
  - 0.6290074848870622
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7675550550550548
  - 0.7591820987654321
  - 0.7711379142300195
  - 0.7846346346346343
  - 0.7689814814814814
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6533049554414373
  - 0.6309939721818306
  - 0.6291108849372826
  - 0.6282843116086646
  - 0.6319650847180925
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6336336336336336
  - 0.6003086419753086
  - 0.6096491228070177
  - 0.6156156156156156
  - 0.608108108108108
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6336336336336337
  - 0.6003086419753086
  - 0.6096491228070176
  - 0.6156156156156156
  - 0.6081081081081081
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6336336336336336
  - 0.6003086419753088
  - 0.6096491228070176
  - 0.6156156156156154
  - 0.6081081081081081
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5436061061061062
  - 0.4926832426832427
  - 0.5185219145424538
  - 0.5130393551446182
  - 0.5008820008820009
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4915638916076055
  - 0.4630296024030875
  - 0.4675059584647156
  - 0.4782366589427213
  - 0.4706213952532181
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.46373626373626375
  - 0.4288864388092613
  - 0.4384858044164038
  - 0.44468546637744033
  - 0.4368932038834951
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4860145860145861
  - 0.4507976591309925
  - 0.46856155540366073
  - 0.4667953667953668
  - 0.462899262899263
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.38018326563034993
  - 0.33977830988918
  - 0.35906053919106146
  - 0.35355439610189254
  - 0.34328890923513117
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7765640640640639
  - 0.7684413580246913
  - 0.7711379142300198
  - 0.7936436436436437
  - 0.7689814814814813
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.118721803028698
  - 0.07571507204651913
  - 0.045970477951629986
  - 0.06213776997462151
  - 0.04550286330420847
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2513520974739836
  - 0.17909653275389584
  - 0.15187518046475204
  - 0.18883115478546944
  - 0.1695691830566288
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.19550861821642276
  - 0.13033128639949268
  - 0.132280684803195
  - 0.1647311185301266
  - 0.1361302657397076
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.13502638779157225
  - 0.056687163955180815
  - 0.0552177627628572
  - 0.05060085611967239
  - 0.03571039800635337
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8461855601784739
  - 0.8374184667650239
  - 0.8501744826786677
  - 0.8567194308467795
  - 0.8421230688698915
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.828828828828829
  - -3.8333333333333335
  - -3.7719298245614037
  - -3.6936936936936937
  - -3.6486486486486487
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3663663663663664
  - -0.3996913580246914
  - -0.39035087719298245
  - -0.3843843843843844
  - -0.3918918918918919
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3663663663663664
  - -0.39969135802469136
  - -0.39035087719298245
  - -0.3843843843843844
  - -0.3918918918918919
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.36636636636636627
  - -0.39969135802469136
  - -0.3903508771929824
  - -0.3843843843843843
  - -0.3918918918918919
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4563938938938939
  - -0.5073167573167573
  - -0.4814780854575464
  - -0.48696064485538176
  - -0.49911799911799914
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2297047047047047
  - -0.236059670781893
  - -0.23940058479532164
  - -0.21951951951951953
  - -0.23013013013013012
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6336336336336336
  - 0.6003086419753086
  - 0.6096491228070177
  - 0.6156156156156156
  - 0.608108108108108
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6336336336336337
  - 0.6003086419753086
  - 0.6096491228070176
  - 0.6156156156156156
  - 0.6081081081081081
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6336336336336336
  - 0.6003086419753088
  - 0.6096491228070176
  - 0.6156156156156154
  - 0.6081081081081081
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5436061061061062
  - 0.4926832426832427
  - 0.5185219145424538
  - 0.5130393551446182
  - 0.5008820008820009
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6336336336336336
  - 0.6003086419753086
  - 0.6096491228070177
  - 0.6156156156156156
  - 0.608108108108108
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6336336336336337
  - 0.6003086419753086
  - 0.6096491228070176
  - 0.6156156156156156
  - 0.6081081081081081
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6336336336336336
  - 0.6003086419753088
  - 0.6096491228070176
  - 0.6156156156156154
  - 0.6081081081081081
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5436061061061062
  - 0.4926832426832427
  - 0.5185219145424538
  - 0.5130393551446182
  - 0.5008820008820009
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6253720220950483
  - 0.5645637094288586
  - 0.6039949132980428
  - 0.5670786410277903
  - 0.6289511978078922
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7466380070546738
  - 0.7155275663562957
  - 0.7286003914375236
  - 0.7279458488741539
  - 0.737523003312477
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.7605994152046784
  - .nan
  - 0.7698698698698698
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5900205271648424
  - 0.5437054758349317
  - 0.5992089839316105
  - 0.5631855924136068
  - 0.5641361499481986
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8091381709680491
  - 0.7976703794631872
  - 0.8262464853620868
  - 0.7961836247812134
  - 0.8110090962781289
  train_average_precision_macro_oob:
  - 0.7169671610480296
  - 0.7134716353658428
  - 0.7279221772883782
  - 0.7178313021417985
  - 0.7252999761359455
  train_average_precision_micro:
  - 0.868395132340839
  - 0.861136831399365
  - 0.8767090118152271
  - 0.8645987131888284
  - 0.8762252443345502
  train_average_precision_micro_oob:
  - 0.8655656233884007
  - 0.8558146393349637
  - 0.8722417196733464
  - 0.8607560014851395
  - 0.8727083336323751
  train_average_precision_samples:
  - 0.8895176426426427
  - 0.8817953020134228
  - 0.8882936507936509
  - 0.8876376376376376
  - 0.8805148898898898
  train_average_precision_samples_oob:
  - 0.8835554304304304
  - 0.8681425553069849
  - 0.8804453262786597
  - 0.8810279029029028
  - 0.8827546296296296
  train_average_precision_weighted:
  - 0.8664759822223996
  - 0.8630707345732075
  - 0.8779753428818204
  - 0.8648492922962921
  - 0.8729460850660268
  train_average_precision_weighted_oob:
  - 0.8591828097173351
  - 0.8554131551665474
  - 0.8704230958422834
  - 0.8574554822074527
  - 0.8653464414880687
  train_f1_macro:
  - 0.7770270270270271
  - 0.779269202087994
  - 0.7751322751322752
  - 0.7770270270270271
  - 0.7774024024024024
  train_f1_macro_oob:
  - 0.7676426426426426
  - 0.7669649515287099
  - 0.7664399092970521
  - 0.7710210210210211
  - 0.7698948948948949
  train_f1_micro:
  - 0.777027027027027
  - 0.779269202087994
  - 0.7751322751322751
  - 0.777027027027027
  - 0.7774024024024024
  train_f1_micro_oob:
  - 0.7676426426426426
  - 0.7669649515287099
  - 0.7664399092970522
  - 0.771021021021021
  - 0.7698948948948949
  train_f1_samples:
  - 0.7770270270270269
  - 0.779269202087994
  - 0.7751322751322751
  - 0.777027027027027
  - 0.7774024024024023
  train_f1_samples_oob:
  - 0.7676426426426427
  - 0.7669649515287099
  - 0.7664399092970522
  - 0.7710210210210211
  - 0.7698948948948949
  train_f1_weighted:
  - 0.7172754047754049
  - 0.7199070007144781
  - 0.7135608828684312
  - 0.7170880557977333
  - 0.7191150574658427
  train_f1_weighted_oob:
  - 0.7079435204435205
  - 0.7073177397503622
  - 0.704286605471883
  - 0.7113445180140908
  - 0.7102102102102102
  train_jaccard_macro:
  - 0.649627759973705
  - 0.6524197798267588
  - 0.6477297460910912
  - 0.6496862272342878
  - 0.6495611863812986
  train_jaccard_macro_oob:
  - 0.6371354238299598
  - 0.6362131168159454
  - 0.6364470940842679
  - 0.6415126253795539
  - 0.6400929269120227
  train_jaccard_micro:
  - 0.6353591160220995
  - 0.6383628588882101
  - 0.6328293736501079
  - 0.6353591160220995
  - 0.6358612219834203
  train_jaccard_micro_oob:
  - 0.6229058787694182
  - 0.6220139098881161
  - 0.6213235294117647
  - 0.6273671350030544
  - 0.625877326823314
  train_jaccard_samples:
  - 0.6594809094809094
  - 0.6628102695216789
  - 0.6585465932404709
  - 0.6617224367224367
  - 0.6594594594594594
  train_jaccard_samples_oob:
  - 0.6474367224367225
  - 0.6467454990944923
  - 0.6465608465608466
  - 0.6539360789360789
  - 0.6494530244530244
  train_jaccard_weighted:
  - 0.5655758092381339
  - 0.5686455930990079
  - 0.5611320236606335
  - 0.5657232463151608
  - 0.5676002418160287
  train_jaccard_weighted_oob:
  - 0.5534419492054339
  - 0.5524838329474769
  - 0.5495910874434509
  - 0.55821562649214
  - 0.556837813518625
  train_label_ranking_average_precision_score:
  - 0.894022147147146
  - 0.8862695749440705
  - 0.8950963718820862
  - 0.892142142142141
  - 0.8872716466466458
  train_label_ranking_average_precision_score_oob:
  - 0.8880599349349343
  - 0.8726168282376321
  - 0.8872480473670943
  - 0.8855324074074068
  - 0.8895113863863857
  train_matthews_corrcoef_macro:
  - 0.4561059996574411
  - 0.45699959334412216
  - 0.4527102107681788
  - 0.4582039267932445
  - 0.4565598187502293
  train_matthews_corrcoef_macro_oob:
  - 0.4374101085389568
  - 0.43259311909768644
  - 0.4365296041965938
  - 0.44469582164599714
  - 0.44160386888153735
  train_matthews_corrcoef_micro:
  - 0.5869023424340933
  - 0.5896802912470225
  - 0.5854488644636522
  - 0.5880888374005839
  - 0.5880220115637718
  train_matthews_corrcoef_micro_oob:
  - 0.5694280456674807
  - 0.5668218278979994
  - 0.5698840504313815
  - 0.5767745204179153
  - 0.5734494376969389
  train_matthews_corrcoef_samples:
  - 0.5240752791593202
  - 0.5196969730863336
  - 0.5205006011565009
  - 0.5275769294661465
  - 0.5132173693464958
  train_matthews_corrcoef_samples_oob:
  - 0.5061230813159273
  - 0.4977422890584993
  - 0.5052294780411002
  - 0.5160300175676694
  - 0.4992542636504732
  train_matthews_corrcoef_weighted:
  - 0.521142319219013
  - 0.5241975975083827
  - 0.5179167956679827
  - 0.5218648348252852
  - 0.5232963990393904
  train_matthews_corrcoef_weighted_oob:
  - 0.5037623499818611
  - 0.5011247369144722
  - 0.5025286479103322
  - 0.5092222237098935
  - 0.5061222534210958
  train_ndgc:
  - 0.9317523852675004
  - 0.9260256358690155
  - 0.9316955108173784
  - 0.9328472351917413
  - 0.9236105711330181
  train_ndgc_oob:
  - 0.9274981943589058
  - 0.9172150547931026
  - 0.9262830169435726
  - 0.9286201352649256
  - 0.9261585077454423
  train_neg_coverage_error:
  - -3.2274774774774775
  - -3.2841163310961967
  - -3.292517006802721
  - -3.313063063063063
  - -3.2432432432432434
  train_neg_coverage_error_oob:
  - -3.2972972972972974
  - -3.360178970917226
  - -3.3492063492063493
  - -3.369369369369369
  - -3.286036036036036
  train_neg_hamming_loss_macro:
  - -0.222972972972973
  - -0.22073079791200598
  - -0.22486772486772486
  - -0.22297297297297294
  - -0.2225975975975976
  train_neg_hamming_loss_macro_oob:
  - -0.23235735735735732
  - -0.23303504847129008
  - -0.23356009070294784
  - -0.228978978978979
  - -0.2301051051051051
  train_neg_hamming_loss_micro:
  - -0.22297297297297297
  - -0.22073079791200598
  - -0.22486772486772486
  - -0.22297297297297297
  - -0.2225975975975976
  train_neg_hamming_loss_micro_oob:
  - -0.23235735735735735
  - -0.23303504847129008
  - -0.23356009070294784
  - -0.22897897897897898
  - -0.2301051051051051
  train_neg_hamming_loss_samples:
  - -0.22297297297297297
  - -0.22073079791200598
  - -0.22486772486772488
  - -0.22297297297297294
  - -0.22259759759759762
  train_neg_hamming_loss_samples_oob:
  - -0.23235735735735732
  - -0.23303504847129008
  - -0.23356009070294784
  - -0.22897897897897895
  - -0.2301051051051051
  train_neg_hamming_loss_weighted:
  - -0.28272459522459525
  - -0.2800929992855219
  - -0.2864391171315688
  - -0.2829119442022668
  - -0.2808849425341572
  train_neg_hamming_loss_weighted_oob:
  - -0.29205647955647956
  - -0.2926822602496379
  - -0.2957133945281169
  - -0.28865548198590923
  - -0.2897897897897898
  train_neg_label_ranking_loss:
  - -0.10541166166166166
  - -0.11534924185930898
  - -0.11078987150415721
  - -0.1171358858858859
  - -0.11455830830830832
  train_neg_label_ranking_loss_oob:
  - -0.11676051051051052
  - -0.12943077305493414
  - -0.12217813051146385
  - -0.1272147147147147
  - -0.12010135135135136
  train_precision_macro:
  - 0.7770270270270271
  - 0.779269202087994
  - 0.7751322751322752
  - 0.7770270270270271
  - 0.7774024024024024
  train_precision_macro_oob:
  - 0.7676426426426426
  - 0.7669649515287099
  - 0.7664399092970521
  - 0.7710210210210211
  - 0.7698948948948949
  train_precision_micro:
  - 0.777027027027027
  - 0.779269202087994
  - 0.7751322751322751
  - 0.777027027027027
  - 0.7774024024024024
  train_precision_micro_oob:
  - 0.7676426426426426
  - 0.7669649515287099
  - 0.7664399092970522
  - 0.771021021021021
  - 0.7698948948948949
  train_precision_samples:
  - 0.7770270270270269
  - 0.779269202087994
  - 0.7751322751322751
  - 0.777027027027027
  - 0.7774024024024023
  train_precision_samples_oob:
  - 0.7676426426426427
  - 0.7669649515287099
  - 0.7664399092970522
  - 0.7710210210210211
  - 0.7698948948948949
  train_precision_weighted:
  - 0.7172754047754049
  - 0.7199070007144781
  - 0.7135608828684312
  - 0.7170880557977333
  - 0.7191150574658427
  train_precision_weighted_oob:
  - 0.7079435204435205
  - 0.7073177397503622
  - 0.704286605471883
  - 0.7113445180140908
  - 0.7102102102102102
  train_recall_macro:
  - 0.7770270270270271
  - 0.779269202087994
  - 0.7751322751322752
  - 0.7770270270270271
  - 0.7774024024024024
  train_recall_macro_oob:
  - 0.7676426426426426
  - 0.7669649515287099
  - 0.7664399092970521
  - 0.7710210210210211
  - 0.7698948948948949
  train_recall_micro:
  - 0.777027027027027
  - 0.779269202087994
  - 0.7751322751322751
  - 0.777027027027027
  - 0.7774024024024024
  train_recall_micro_oob:
  - 0.7676426426426426
  - 0.7669649515287099
  - 0.7664399092970522
  - 0.771021021021021
  - 0.7698948948948949
  train_recall_samples:
  - 0.7770270270270269
  - 0.779269202087994
  - 0.7751322751322751
  - 0.777027027027027
  - 0.7774024024024023
  train_recall_samples_oob:
  - 0.7676426426426427
  - 0.7669649515287099
  - 0.7664399092970522
  - 0.7710210210210211
  - 0.7698948948948949
  train_recall_weighted:
  - 0.7172754047754049
  - 0.7199070007144781
  - 0.7135608828684312
  - 0.7170880557977333
  - 0.7191150574658427
  train_recall_weighted_oob:
  - 0.7079435204435205
  - 0.7073177397503622
  - 0.704286605471883
  - 0.7113445180140908
  - 0.7102102102102102
  train_roc_auc_macro:
  - 0.808977697561324
  - 0.7882353571857834
  - 0.8264702901011004
  - 0.7955775684041378
  - 0.81473435337608
  train_roc_auc_macro_oob:
  - 0.7594722363186177
  - 0.7553617956481714
  - 0.7613583745794575
  - 0.7615717332710875
  - 0.7675956891749584
  train_roc_auc_micro:
  - 0.876976559624586
  - 0.8645890143251891
  - 0.8809390537312826
  - 0.8637105538566401
  - 0.8817221267995226
  train_roc_auc_micro_oob:
  - 0.8714494387191756
  - 0.8579984956733566
  - 0.8747501665556295
  - 0.859164861589001
  - 0.8768518326906671
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7991872464392566
  - 0.7932028160409427
  - 0.8097379992474272
  - 0.8002449934148652
  - 0.8076898699413093
  train_roc_auc_weighted_oob:
  - 0.7957435768413949
  - 0.7882836116662306
  - 0.8025332169730439
  - 0.7949967872418168
  - 0.8038004131472934
start: 2023-12-22 00:03:26.486214
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
