active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzC8CgmZmZmZn5P0AzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r8AmZmZmZnZv+DMzMzMzARAAJmZmZmZ2b8AmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:32:17.519993
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__1
  params: {}
hash: 372cd88298800e44bb7ba1be6ed0fbfba11a3b84b5ce01c885f27b0e28f8e07c
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/372cd88_20231222T033203987991_embedding__1_emotions.yml
results:
  fit_time:
  - 3.607560157775879
  - 3.737720489501953
  - 3.5118296146392822
  - 3.181535005569458
  - 3.237628221511841
  score_time:
  - 1.825263261795044
  - 1.6956052780151367
  - 1.9167132377624512
  - 1.6868791580200195
  - 1.6528964042663574
  test_average_precision_macro:
  - 0.7170037950553496
  - 0.7089027346611583
  - 0.7196903319205563
  - 0.7453907447930118
  - 0.707852232416481
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7048925939129425
  - 0.7137638199056097
  - 0.7190241898014692
  - 0.7455617972685169
  - 0.7003000743282718
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7823611111111111
  - 0.7718487394957982
  - 0.8375478927203066
  - 0.8277077497665731
  - 0.7914098972922501
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7183723157513155
  - 0.7149803468306307
  - 0.7137087490859823
  - 0.7468121131083244
  - 0.7060224516846771
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6861111111111112
  - 0.6918767507002802
  - 0.6824712643678161
  - 0.6918767507002802
  - 0.6946778711484595
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6861111111111111
  - 0.6918767507002801
  - 0.6824712643678161
  - 0.6918767507002801
  - 0.6946778711484594
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6861111111111112
  - 0.6918767507002802
  - 0.6824712643678161
  - 0.6918767507002802
  - 0.6946778711484594
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.674188790560472
  - 0.6782276546982429
  - 0.6689421126540803
  - 0.6780748663101605
  - 0.6820791665082322
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5253245911505205
  - 0.5324398508981906
  - 0.5215127156451476
  - 0.532481184690604
  - 0.5358178185833989
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5221987315010571
  - 0.5289079229122056
  - 0.5179934569247546
  - 0.5289079229122056
  - 0.5321888412017167
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5345238095238095
  - 0.5400160064025611
  - 0.5277093596059114
  - 0.53921568627451
  - 0.5444177671068428
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5122402405824126
  - 0.5174452111758722
  - 0.5069101805926576
  - 0.5173110642314035
  - 0.5217940655672276
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7823611111111112
  - 0.7718487394957984
  - 0.8375478927203062
  - 0.827707749766573
  - 0.7914098972922501
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.04616520392719875
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.09701818592341424
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.014387602181237896
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0376006185832388
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8511576951130144
  - 0.8418679216603945
  - 0.8907702329852919
  - 0.883201617684504
  - 0.856937396039291
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8583333333333334
  - -2.8487394957983194
  - -2.6206896551724137
  - -2.6134453781512605
  - -2.764705882352941
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3138888888888889
  - -0.30812324929971985
  - -0.3175287356321839
  - -0.30812324929971985
  - -0.3053221288515406
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3138888888888889
  - -0.3081232492997199
  - -0.3175287356321839
  - -0.3081232492997199
  - -0.30532212885154064
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.31388888888888894
  - -0.3081232492997199
  - -0.3175287356321839
  - -0.30812324929972
  - -0.3053221288515406
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.325811209439528
  - -0.3217723453017571
  - -0.33105788734591984
  - -0.32192513368983955
  - -0.31792083349176775
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.173125
  - -0.17880485527544349
  - -0.13002873563218392
  - -0.13618113912231558
  - -0.167250233426704
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6861111111111112
  - 0.6918767507002802
  - 0.6824712643678161
  - 0.6918767507002802
  - 0.6946778711484595
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6861111111111111
  - 0.6918767507002801
  - 0.6824712643678161
  - 0.6918767507002801
  - 0.6946778711484594
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6861111111111112
  - 0.6918767507002802
  - 0.6824712643678161
  - 0.6918767507002802
  - 0.6946778711484594
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.674188790560472
  - 0.6782276546982429
  - 0.6689421126540803
  - 0.6780748663101605
  - 0.6820791665082322
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6861111111111112
  - 0.6918767507002802
  - 0.6824712643678161
  - 0.6918767507002802
  - 0.6946778711484595
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6861111111111111
  - 0.6918767507002801
  - 0.6824712643678161
  - 0.6918767507002801
  - 0.6946778711484594
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6861111111111112
  - 0.6918767507002802
  - 0.6824712643678161
  - 0.6918767507002802
  - 0.6946778711484594
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.674188790560472
  - 0.6782276546982429
  - 0.6689421126540803
  - 0.6780748663101605
  - 0.6820791665082322
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8348157820582195
  - 0.8305586382422474
  - 0.8475725906702639
  - 0.8630250892769716
  - 0.8323742411493479
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8532209523127082
  - 0.845979020979021
  - 0.870988330554894
  - 0.875506072874494
  - 0.8479895000596588
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8268749999999999
  - 0.8211951447245565
  - 0.8699712643678161
  - 0.8638188608776844
  - 0.8327497665732959
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8347960640987189
  - 0.8323128259012006
  - 0.8405969361899607
  - 0.8628782177088773
  - 0.8311385037255715
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8935987623023168
  - 0.8980019011150754
  - 0.8909637932676531
  - 0.8777638185211943
  - 0.8841821258342937
  train_average_precision_macro_oob:
  - 0.7232955048752353
  - 0.7436064210666083
  - 0.7131834195337222
  - 0.7002837968518776
  - 0.6946256631253543
  train_average_precision_micro:
  - 0.8953151421076929
  - 0.901566581661435
  - 0.8940844507715245
  - 0.8851232708284158
  - 0.8906207310070474
  train_average_precision_micro_oob:
  - 0.7209476281105383
  - 0.758949638533828
  - 0.7205314708237871
  - 0.7208824507751337
  - 0.7279787924157013
  train_average_precision_samples:
  - 0.9115280714117924
  - 0.9130274261603375
  - 0.8998136501281155
  - 0.8925164088138773
  - 0.8895335208626347
  train_average_precision_samples_oob:
  - 0.8097486492835331
  - 0.8238103609939053
  - 0.7976589797344513
  - 0.7920124238162213
  - 0.7977848101265822
  train_average_precision_weighted:
  - 0.8945718496683993
  - 0.8996654859994676
  - 0.8921904888942129
  - 0.8801715767351421
  - 0.886871085721093
  train_average_precision_weighted_oob:
  - 0.7220320668595743
  - 0.7470255134331498
  - 0.7144875650768058
  - 0.7062077909745214
  - 0.7004351256096081
  train_f1_macro:
  - 0.7096546863988724
  - 0.719760900140647
  - 0.709643605870021
  - 0.7148382559774964
  - 0.7099156118143459
  train_f1_macro_oob:
  - 0.6895701198026779
  - 0.6877637130801687
  - 0.6900768693221523
  - 0.6881153305203939
  - 0.689873417721519
  train_f1_micro:
  - 0.7096546863988724
  - 0.719760900140647
  - 0.709643605870021
  - 0.7148382559774965
  - 0.709915611814346
  train_f1_micro_oob:
  - 0.6895701198026779
  - 0.6877637130801688
  - 0.6900768693221523
  - 0.6881153305203939
  - 0.689873417721519
  train_f1_samples:
  - 0.7096546863988724
  - 0.7197609001406469
  - 0.709643605870021
  - 0.7148382559774966
  - 0.709915611814346
  train_f1_samples_oob:
  - 0.6895701198026779
  - 0.6877637130801688
  - 0.6900768693221523
  - 0.6881153305203938
  - 0.689873417721519
  train_f1_weighted:
  - 0.6993019899996644
  - 0.7107186300224276
  - 0.6982881075114808
  - 0.7045867069601247
  - 0.6981267154729116
  train_f1_weighted_oob:
  - 0.6765735187662097
  - 0.6751102368190977
  - 0.6774253779848215
  - 0.6754689816398678
  - 0.6764398080097422
  train_jaccard_macro:
  - 0.5524552349959886
  - 0.5642435301541658
  - 0.5528327817375424
  - 0.5588114548546529
  - 0.5535342920989265
  train_jaccard_macro_oob:
  - 0.5295551871127185
  - 0.5274073223790533
  - 0.530092797685318
  - 0.5278358507874416
  - 0.530194129447725
  train_jaccard_micro:
  - 0.5499726925177498
  - 0.56220818456468
  - 0.5499593826157595
  - 0.5562243502051983
  - 0.5502861815208504
  train_jaccard_micro_oob:
  - 0.5262167249260554
  - 0.5241157556270096
  - 0.5268071485729527
  - 0.5245242562315733
  - 0.5265700483091788
  train_jaccard_samples:
  - 0.5624685392127252
  - 0.5788627687361865
  - 0.5650394329639613
  - 0.5717299578059072
  - 0.5629395218002813
  train_jaccard_samples_oob:
  - 0.5370985603543742
  - 0.5352622061482821
  - 0.5382849156434062
  - 0.5359152099658429
  - 0.5374723729154108
  train_jaccard_weighted:
  - 0.5404498670997772
  - 0.5536202658591388
  - 0.5399349070845414
  - 0.5468590398967811
  - 0.539902565528799
  train_jaccard_weighted_oob:
  - 0.5153145633332231
  - 0.5135738458941131
  - 0.5162056516624802
  - 0.5140047203962473
  - 0.5154485380622684
  train_label_ranking_average_precision_score:
  - 0.9115280714117916
  - 0.9130274261603369
  - 0.899813650128115
  - 0.8925164088138762
  - 0.8895335208626344
  train_label_ranking_average_precision_score_oob:
  - 0.8097486492835314
  - 0.8238103609939048
  - 0.7976589797344507
  - 0.7920124238162198
  - 0.7977848101265806
  train_matthews_corrcoef_macro:
  - 0.17713379286984152
  - 0.23412101056502488
  - 0.18620409844068478
  - 0.21740388974353897
  - 0.19218968931156752
  train_matthews_corrcoef_macro_oob:
  - 0.008548445915032257
  - 0.0
  - 0.0
  - 0.013236064507533047
  - 0.029890372391228617
  train_matthews_corrcoef_micro:
  - 0.21510065432084946
  - 0.2698332925941627
  - 0.21080063764232143
  - 0.24758180528892304
  - 0.2217434932001858
  train_matthews_corrcoef_micro_oob:
  - 0.027958924721187144
  - 0.0
  - 0.0
  - 0.027834890200117302
  - 0.062335566235573
  train_matthews_corrcoef_samples:
  - 0.07245955202734584
  - 0.12512411507886173
  - 0.07395477548046345
  - 0.10123083184646044
  - 0.07804525327422737
  train_matthews_corrcoef_samples_oob:
  - 0.0013371152897117882
  - 0.0
  - 0.0
  - 0.0013342943713790631
  - 0.0058898603103395425
  train_matthews_corrcoef_weighted:
  - 0.1825583981220927
  - 0.24110442295909285
  - 0.18857021959890377
  - 0.22071129924491728
  - 0.19199686837241706
  train_matthews_corrcoef_weighted_oob:
  - 0.012270218286202762
  - 0.0
  - 0.0
  - 0.010642511327002923
  - 0.023858380668534226
  train_ndgc:
  - 0.9447740557224299
  - 0.9440656098085229
  - 0.9347684096530935
  - 0.9310264804094552
  - 0.92831340825786
  train_ndgc_oob:
  - 0.8719399256284821
  - 0.8806669381947342
  - 0.8616315831230681
  - 0.8604673216060599
  - 0.8628682351374389
  train_neg_coverage_error:
  - -2.3488372093023258
  - -2.308016877637131
  - -2.348008385744235
  - -2.440928270042194
  - -2.4219409282700424
  train_neg_coverage_error_oob:
  - -2.763213530655391
  - -2.6645569620253164
  - -2.788259958071279
  - -2.852320675105485
  - -2.780590717299578
  train_neg_hamming_loss_macro:
  - -0.29034531360112753
  - -0.28023909985935297
  - -0.290356394129979
  - -0.28516174402250355
  - -0.290084388185654
  train_neg_hamming_loss_macro_oob:
  - -0.31042988019732204
  - -0.31223628691983124
  - -0.30992313067784766
  - -0.3118846694796062
  - -0.31012658227848106
  train_neg_hamming_loss_micro:
  - -0.29034531360112753
  - -0.280239099859353
  - -0.29035639412997905
  - -0.2851617440225035
  - -0.290084388185654
  train_neg_hamming_loss_micro_oob:
  - -0.31042988019732204
  - -0.31223628691983124
  - -0.30992313067784766
  - -0.3118846694796062
  - -0.310126582278481
  train_neg_hamming_loss_samples:
  - -0.29034531360112753
  - -0.28023909985935297
  - -0.29035639412997905
  - -0.28516174402250355
  - -0.290084388185654
  train_neg_hamming_loss_samples_oob:
  - -0.3104298801973221
  - -0.31223628691983124
  - -0.3099231306778476
  - -0.31188466947960614
  - -0.310126582278481
  train_neg_hamming_loss_weighted:
  - -0.3006980100003356
  - -0.28928136997757253
  - -0.30171189248851926
  - -0.2954132930398753
  - -0.30187328452708845
  train_neg_hamming_loss_weighted_oob:
  - -0.3234264812337902
  - -0.32488976318090246
  - -0.3225746220151785
  - -0.3245310183601323
  - -0.3235601919902578
  train_neg_label_ranking_loss:
  - -0.07350246652572234
  - -0.06926863572433194
  - -0.07793501048218028
  - -0.09138537271448664
  - -0.08703703703703705
  train_neg_label_ranking_loss_oob:
  - -0.15734085036410617
  - -0.1391936240037506
  - -0.16611344048450968
  - -0.1713314580403188
  - -0.16016760431317395
  train_precision_macro:
  - 0.7096546863988724
  - 0.719760900140647
  - 0.709643605870021
  - 0.7148382559774964
  - 0.7099156118143459
  train_precision_macro_oob:
  - 0.6895701198026779
  - 0.6877637130801687
  - 0.6900768693221523
  - 0.6881153305203939
  - 0.689873417721519
  train_precision_micro:
  - 0.7096546863988724
  - 0.719760900140647
  - 0.709643605870021
  - 0.7148382559774965
  - 0.709915611814346
  train_precision_micro_oob:
  - 0.6895701198026779
  - 0.6877637130801688
  - 0.6900768693221523
  - 0.6881153305203939
  - 0.689873417721519
  train_precision_samples:
  - 0.7096546863988724
  - 0.7197609001406469
  - 0.709643605870021
  - 0.7148382559774966
  - 0.709915611814346
  train_precision_samples_oob:
  - 0.6895701198026779
  - 0.6877637130801688
  - 0.6900768693221523
  - 0.6881153305203938
  - 0.689873417721519
  train_precision_weighted:
  - 0.6993019899996644
  - 0.7107186300224276
  - 0.6982881075114808
  - 0.7045867069601247
  - 0.6981267154729116
  train_precision_weighted_oob:
  - 0.6765735187662097
  - 0.6751102368190977
  - 0.6774253779848215
  - 0.6754689816398678
  - 0.6764398080097422
  train_recall_macro:
  - 0.7096546863988724
  - 0.719760900140647
  - 0.709643605870021
  - 0.7148382559774964
  - 0.7099156118143459
  train_recall_macro_oob:
  - 0.6895701198026779
  - 0.6877637130801687
  - 0.6900768693221523
  - 0.6881153305203939
  - 0.689873417721519
  train_recall_micro:
  - 0.7096546863988724
  - 0.719760900140647
  - 0.709643605870021
  - 0.7148382559774965
  - 0.709915611814346
  train_recall_micro_oob:
  - 0.6895701198026779
  - 0.6877637130801688
  - 0.6900768693221523
  - 0.6881153305203939
  - 0.689873417721519
  train_recall_samples:
  - 0.7096546863988724
  - 0.7197609001406469
  - 0.709643605870021
  - 0.7148382559774966
  - 0.709915611814346
  train_recall_samples_oob:
  - 0.6895701198026779
  - 0.6877637130801688
  - 0.6900768693221523
  - 0.6881153305203938
  - 0.689873417721519
  train_recall_weighted:
  - 0.6993019899996644
  - 0.7107186300224276
  - 0.6982881075114808
  - 0.7045867069601247
  - 0.6981267154729116
  train_recall_weighted_oob:
  - 0.6765735187662097
  - 0.6751102368190977
  - 0.6774253779848215
  - 0.6754689816398678
  - 0.6764398080097422
  train_roc_auc_macro:
  - 0.9288799659444061
  - 0.9341282569362903
  - 0.9313071488408454
  - 0.9147015842538666
  - 0.9237262728725139
  train_roc_auc_macro_oob:
  - 0.8438218708408943
  - 0.861220545751107
  - 0.8377352307131319
  - 0.8275915568830715
  - 0.8416709649817954
  train_roc_auc_micro:
  - 0.9349469508321393
  - 0.9396745288233018
  - 0.936925206570291
  - 0.92402851471103
  - 0.9300208139025117
  train_roc_auc_micro_oob:
  - 0.8594539042610909
  - 0.8752815315315315
  - 0.8554946983859688
  - 0.8498688489102599
  - 0.8587990153578142
  train_roc_auc_samples:
  - 0.9264975334742777
  - 0.9307313642756679
  - 0.9220649895178197
  - 0.9086146272855133
  - 0.912962962962963
  train_roc_auc_samples_oob:
  - 0.8426591496358938
  - 0.8608063759962494
  - 0.8338865595154903
  - 0.8286685419596812
  - 0.8398323956868261
  train_roc_auc_weighted:
  - 0.9280352261763262
  - 0.9336984173340362
  - 0.9307401282654311
  - 0.9149866145263843
  - 0.9237312001667383
  train_roc_auc_weighted_oob:
  - 0.8423424239545417
  - 0.8604492592901628
  - 0.8383412985182961
  - 0.8290349460285935
  - 0.8429239181870514
start: 2023-12-22 03:32:03.987991
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
