active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T8AmpmZmZn5PwA0MzMzM+M/ADMzMzMzA8AAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 06:55:19.454077
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__6
  params: {}
hash: 813c7067358a65ec2ac0b9d6f6bfb7d3ff9f84753749017d95213fa81d0b964c
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/813c706_20231222T065352946083_embedding__6_PlantGO.yml
results:
  fit_time:
  - 46.76207399368286
  - 1.5382652282714844
  - 44.63209819793701
  - 45.7267861366272
  - 45.23380208015442
  score_time:
  - 6.683541774749756
  - 0.0
  - 7.2295167446136475
  - 8.147413730621338
  - 6.89555811882019
  test_average_precision_macro:
  - 0.8074693178499689
  - .nan
  - 0.7861697582600583
  - 0.84428246338591
  - 0.8303629433754501
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8211847492102433
  - .nan
  - 0.8105245118296707
  - 0.825336336473531
  - 0.8483388103583233
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8685853379152347
  - .nan
  - 0.8677350427350426
  - 0.8745009620009621
  - 0.8897510273144791
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8661932589447575
  - .nan
  - 0.8611075981879595
  - 0.8820396978451469
  - 0.8960578142964702
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9463058419243987
  - .nan
  - 0.9423076923076924
  - 0.9427609427609428
  - 0.9517766497461927
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9463058419243986
  - .nan
  - 0.9423076923076923
  - 0.9427609427609428
  - 0.9517766497461929
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9463058419243985
  - .nan
  - 0.9423076923076923
  - 0.9427609427609429
  - 0.9517766497461929
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9253188058826404
  - .nan
  - 0.9156776556776557
  - 0.9187888272395315
  - 0.9359588134818486
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9000861673073901
  - .nan
  - 0.8936164251861164
  - 0.8937256914748081
  - 0.9101054560845386
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8980839788014676
  - .nan
  - 0.8909090909090909
  - 0.89171974522293
  - 0.9079903147699758
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9032287300328538
  - .nan
  - 0.8956325725556494
  - 0.8964146964146963
  - 0.9129581078819656
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8633548371308392
  - .nan
  - 0.8476146045931572
  - 0.8517266805521595
  - 0.8828863165623813
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8685853379152348
  - .nan
  - 0.8677350427350428
  - 0.874500962000962
  - 0.8897510273144793
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2727326428853283
  - .nan
  - 0.22741784048083283
  - 0.20918425937050833
  - 0.28963480394871327
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6194042768666528
  - .nan
  - 0.5785496195184381
  - 0.5823969184303475
  - 0.6599298858171562
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4693836897602543
  - .nan
  - 0.41223710744115943
  - 0.4173925585103206
  - 0.5180732782410626
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5255332088587783
  - .nan
  - 0.4622754035010245
  - 0.4708023279247078
  - 0.5639325783154069
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9019605717976199
  - .nan
  - 0.9014017635939319
  - 0.9071507957281449
  - 0.9191533206392066
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6185567010309279
  - .nan
  - -1.5692307692307692
  - -1.5101010101010102
  - -1.517766497461929
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05369415807560138
  - .nan
  - -0.0576923076923077
  - -0.05723905723905725
  - -0.04822335025380711
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05369415807560137
  - .nan
  - -0.057692307692307696
  - -0.05723905723905724
  - -0.048223350253807105
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05369415807560137
  - .nan
  - -0.057692307692307696
  - -0.057239057239057235
  - -0.048223350253807105
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07468119411735966
  - .nan
  - -0.08432234432234431
  - -0.0812111727604685
  - -0.06404118651815142
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.045123919608455694
  - .nan
  - -0.04342657342657342
  - -0.0379247015610652
  - -0.03623886923379309
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9463058419243987
  - .nan
  - 0.9423076923076924
  - 0.9427609427609428
  - 0.9517766497461927
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9463058419243986
  - .nan
  - 0.9423076923076923
  - 0.9427609427609428
  - 0.9517766497461929
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9463058419243985
  - .nan
  - 0.9423076923076923
  - 0.9427609427609429
  - 0.9517766497461929
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9253188058826404
  - .nan
  - 0.9156776556776557
  - 0.9187888272395315
  - 0.9359588134818486
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9463058419243987
  - .nan
  - 0.9423076923076924
  - 0.9427609427609428
  - 0.9517766497461927
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9463058419243986
  - .nan
  - 0.9423076923076923
  - 0.9427609427609428
  - 0.9517766497461929
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9463058419243985
  - .nan
  - 0.9423076923076923
  - 0.9427609427609429
  - 0.9517766497461929
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9253188058826404
  - .nan
  - 0.9156776556776557
  - 0.9187888272395315
  - 0.9359588134818486
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9634643850311578
  - .nan
  - 0.9750480322077086
  - 0.9837570415269344
  - 0.9739419441290124
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9665783871032738
  - .nan
  - 0.9665437066845517
  - 0.9754752897102138
  - 0.9713372501282239
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9548760803915443
  - .nan
  - 0.9565734265734265
  - 0.9620752984389348
  - 0.9637611307662068
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9723509411924081
  - .nan
  - 0.9744162389323335
  - 0.9765378620812842
  - 0.9787288809745803
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.956527678781677
  - .nan
  - 0.960129803863139
  - 0.9635289441476008
  - 0.9581649027191683
  train_average_precision_macro_oob:
  - 0.7362439518258229
  - .nan
  - 0.7208105598516329
  - 0.734386893522004
  - 0.7305986015280053
  train_average_precision_micro:
  - 0.9577848636513249
  - .nan
  - 0.950869534808183
  - 0.9494099769311042
  - 0.9516294947782098
  train_average_precision_micro_oob:
  - 0.8172727198179587
  - .nan
  - 0.8029832798695364
  - 0.8107114672762934
  - 0.810500675079943
  train_average_precision_samples:
  - 0.9618409863945578
  - .nan
  - 0.9614729672200936
  - 0.9620726495726497
  - 0.9586427656850193
  train_average_precision_samples_oob:
  - 0.8673469387755102
  - .nan
  - 0.8509518188636961
  - 0.8719246494246494
  - 0.8593765069757386
  train_average_precision_weighted:
  - 0.9734986309277334
  - .nan
  - 0.9730947240767255
  - 0.9725730168230552
  - 0.9708865622726092
  train_average_precision_weighted_oob:
  - 0.844422162492184
  - .nan
  - 0.8329460684119033
  - 0.8379378947171944
  - 0.8346125989044176
  train_f1_macro:
  - 0.9607780612244898
  - .nan
  - 0.96019582801192
  - 0.9610042735042733
  - 0.9627614169867691
  train_f1_macro_oob:
  - 0.9420705782312925
  - .nan
  - 0.9382716049382718
  - 0.9423076923076921
  - 0.9397140418267179
  train_f1_micro:
  - 0.9607780612244898
  - .nan
  - 0.9601958280119199
  - 0.9610042735042735
  - 0.9627614169867691
  train_f1_micro_oob:
  - 0.9420705782312925
  - .nan
  - 0.9382716049382716
  - 0.9423076923076923
  - 0.9397140418267179
  train_f1_samples:
  - 0.9607780612244898
  - .nan
  - 0.9601958280119198
  - 0.9610042735042735
  - 0.9627614169867692
  train_f1_samples_oob:
  - 0.9420705782312924
  - .nan
  - 0.9382716049382717
  - 0.9423076923076923
  - 0.9397140418267178
  train_f1_weighted:
  - 0.9547088088790016
  - .nan
  - 0.953568054894315
  - 0.9560554844996652
  - 0.956645083772779
  train_f1_weighted_oob:
  - 0.915576034916336
  - .nan
  - 0.9097039908710997
  - 0.9171508618064438
  - 0.9111647480748343
  train_jaccard_macro:
  - 0.9250695203292799
  - .nan
  - 0.9239163541204269
  - 0.9253680215803883
  - 0.9286129743846442
  train_jaccard_macro_oob:
  - 0.8929415483702119
  - .nan
  - 0.8868820760077546
  - 0.8933016014231497
  - 0.8890760936650953
  train_jaccard_micro:
  - 0.9245167229211415
  - .nan
  - 0.923439099283521
  - 0.9249357326478149
  - 0.928196687583582
  train_jaccard_micro_oob:
  - 0.8904852808198533
  - .nan
  - 0.8837209302325582
  - 0.8909090909090909
  - 0.886283586595552
  train_jaccard_samples:
  - 0.928896613590491
  - .nan
  - 0.9279300520679831
  - 0.9293491124260355
  - 0.9325350705632396
  train_jaccard_samples_oob:
  - 0.8951446512671003
  - .nan
  - 0.8881843571498744
  - 0.8956776556776556
  - 0.8909710008301557
  train_jaccard_weighted:
  - 0.9140379514766178
  - .nan
  - 0.9118048377758219
  - 0.9163249453405856
  - 0.917413391931059
  train_jaccard_weighted_oob:
  - 0.8469148555129342
  - .nan
  - 0.8377158896690606
  - 0.8495051196846884
  - 0.8397213396371136
  train_label_ranking_average_precision_score:
  - 0.9618409863945581
  - .nan
  - 0.9614729672200939
  - 0.9620726495726497
  - 0.9586427656850193
  train_label_ranking_average_precision_score_oob:
  - 0.8673469387755111
  - .nan
  - 0.8509518188636968
  - 0.8719246494246499
  - 0.8593765069757386
  train_matthews_corrcoef_macro:
  - 0.3293772566050807
  - .nan
  - 0.33793469317829095
  - 0.32599605316859376
  - 0.40703042299582415
  train_matthews_corrcoef_macro_oob:
  - 0.20354336758226085
  - .nan
  - 0.18871882230220005
  - 0.20316335431816937
  - 0.2237201071937516
  train_matthews_corrcoef_micro:
  - 0.7339401715035119
  - .nan
  - 0.730193008759392
  - 0.7364709924391657
  - 0.7501151765757721
  train_matthews_corrcoef_micro_oob:
  - 0.5760945184194535
  - .nan
  - 0.5406883800351798
  - 0.579669493927125
  - 0.5557537033703217
  train_matthews_corrcoef_samples:
  - 0.6041461464188432
  - .nan
  - 0.6029245052467544
  - 0.6069142155876356
  - 0.6245964115067882
  train_matthews_corrcoef_samples_oob:
  - 0.40686766915808664
  - .nan
  - 0.3583338660045008
  - 0.41172239899278
  - 0.3840738195039055
  train_matthews_corrcoef_weighted:
  - 0.642123142346995
  - .nan
  - 0.643772414409434
  - 0.6465174247210423
  - 0.6866077619410559
  train_matthews_corrcoef_weighted_oob:
  - 0.46186091108735133
  - .nan
  - 0.4223859464270121
  - 0.4653133225661011
  - 0.4519612223276846
  train_ndgc:
  - 0.9717996793014219
  - .nan
  - 0.9715166311222189
  - 0.9720625819269557
  - 0.9695445448643982
  train_ndgc_oob:
  - 0.9016149235710099
  - .nan
  - 0.8891962987640672
  - 0.9053227061163848
  - 0.8955228897870552
  train_neg_coverage_error:
  - -1.1619897959183674
  - .nan
  - -1.1660280970625798
  - -1.1666666666666667
  - -1.1818181818181819
  train_neg_coverage_error_oob:
  - -1.5918367346938775
  - .nan
  - -1.6883780332056195
  - -1.594871794871795
  - -1.6376440460947503
  train_neg_hamming_loss_macro:
  - -0.0392219387755102
  - .nan
  - -0.03980417198808003
  - -0.03899572649572649
  - -0.0372385830132309
  train_neg_hamming_loss_macro_oob:
  - -0.05792942176870749
  - .nan
  - -0.0617283950617284
  - -0.05769230769230769
  - -0.06028595817328211
  train_neg_hamming_loss_micro:
  - -0.0392219387755102
  - .nan
  - -0.039804171988080034
  - -0.038995726495726496
  - -0.0372385830132309
  train_neg_hamming_loss_micro_oob:
  - -0.05792942176870748
  - .nan
  - -0.06172839506172839
  - -0.057692307692307696
  - -0.06028595817328212
  train_neg_hamming_loss_samples:
  - -0.0392219387755102
  - .nan
  - -0.039804171988080034
  - -0.038995726495726496
  - -0.0372385830132309
  train_neg_hamming_loss_samples_oob:
  - -0.05792942176870748
  - .nan
  - -0.06172839506172839
  - -0.057692307692307696
  - -0.06028595817328211
  train_neg_hamming_loss_weighted:
  - -0.04529119112099816
  - .nan
  - -0.04643194510568516
  - -0.04394451550033497
  - -0.04335491622722114
  train_neg_hamming_loss_weighted_oob:
  - -0.08442396508366382
  - .nan
  - -0.09029600912890037
  - -0.08284913819355626
  - -0.08883525192516581
  train_neg_label_ranking_loss:
  - -0.007740027829313544
  - .nan
  - -0.007854406130268199
  - -0.007774756108089441
  - -0.008912212177256993
  train_neg_label_ranking_loss_oob:
  - -0.04450800522229094
  - .nan
  - -0.05232830647900891
  - -0.043524346024346024
  - -0.04804726738145433
  train_precision_macro:
  - 0.9607780612244898
  - .nan
  - 0.96019582801192
  - 0.9610042735042733
  - 0.9627614169867691
  train_precision_macro_oob:
  - 0.9420705782312925
  - .nan
  - 0.9382716049382718
  - 0.9423076923076921
  - 0.9397140418267179
  train_precision_micro:
  - 0.9607780612244898
  - .nan
  - 0.9601958280119199
  - 0.9610042735042735
  - 0.9627614169867691
  train_precision_micro_oob:
  - 0.9420705782312925
  - .nan
  - 0.9382716049382716
  - 0.9423076923076923
  - 0.9397140418267179
  train_precision_samples:
  - 0.9607780612244898
  - .nan
  - 0.9601958280119198
  - 0.9610042735042735
  - 0.9627614169867692
  train_precision_samples_oob:
  - 0.9420705782312924
  - .nan
  - 0.9382716049382717
  - 0.9423076923076923
  - 0.9397140418267178
  train_precision_weighted:
  - 0.9547088088790016
  - .nan
  - 0.953568054894315
  - 0.9560554844996652
  - 0.956645083772779
  train_precision_weighted_oob:
  - 0.915576034916336
  - .nan
  - 0.9097039908710997
  - 0.9171508618064438
  - 0.9111647480748343
  train_recall_macro:
  - 0.9607780612244898
  - .nan
  - 0.96019582801192
  - 0.9610042735042733
  - 0.9627614169867691
  train_recall_macro_oob:
  - 0.9420705782312925
  - .nan
  - 0.9382716049382718
  - 0.9423076923076921
  - 0.9397140418267179
  train_recall_micro:
  - 0.9607780612244898
  - .nan
  - 0.9601958280119199
  - 0.9610042735042735
  - 0.9627614169867691
  train_recall_micro_oob:
  - 0.9420705782312925
  - .nan
  - 0.9382716049382716
  - 0.9423076923076923
  - 0.9397140418267179
  train_recall_samples:
  - 0.9607780612244898
  - .nan
  - 0.9601958280119198
  - 0.9610042735042735
  - 0.9627614169867692
  train_recall_samples_oob:
  - 0.9420705782312924
  - .nan
  - 0.9382716049382717
  - 0.9423076923076923
  - 0.9397140418267178
  train_recall_weighted:
  - 0.9547088088790016
  - .nan
  - 0.953568054894315
  - 0.9560554844996652
  - 0.956645083772779
  train_recall_weighted_oob:
  - 0.915576034916336
  - .nan
  - 0.9097039908710997
  - 0.9171508618064438
  - 0.9111647480748343
  train_roc_auc_macro:
  - 0.9979206074078165
  - .nan
  - 0.9970235512520822
  - 0.996844256566734
  - 0.9971910426088106
  train_roc_auc_macro_oob:
  - 0.9724443101787011
  - .nan
  - 0.9643789254986505
  - 0.9662188314942758
  - 0.9665441678554507
  train_roc_auc_micro:
  - 0.9962417764432177
  - .nan
  - 0.9954803030061885
  - 0.9954552020340885
  - 0.9954187710624827
  train_roc_auc_micro_oob:
  - 0.9675810070149264
  - .nan
  - 0.9617646712831261
  - 0.9649264461063032
  - 0.965198693125739
  train_roc_auc_samples:
  - 0.9922599721706865
  - .nan
  - 0.9921455938697318
  - 0.9922252438919107
  - 0.9910877878227431
  train_roc_auc_samples_oob:
  - 0.955491994777709
  - .nan
  - 0.9476716935209911
  - 0.9564756539756539
  - 0.9519527326185457
  train_roc_auc_weighted:
  - 0.9972658206783139
  - .nan
  - 0.9963677132132855
  - 0.996090106883465
  - 0.996347475450671
  train_roc_auc_weighted_oob:
  - 0.9740947233748651
  - .nan
  - 0.9720584670475062
  - 0.9723888372664085
  - 0.9709127700786188
start: 2023-12-22 06:53:52.946083
wrapper: null
