active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwCamZmZmek/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:51:36.881223
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__6
  params: {}
hash: d5773e1a9dc98d70bda5abb11772ac13d80f6a695523ddaab2f107db4113bd85
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d5773e1_20231221T174937197022_embedding_proba_weak__6_Gram_positive.yml
results:
  fit_time:
  - 101.21209406852722
  - 20.0648672580719
  - 100.69549942016602
  - 102.96421837806702
  - 101.09939455986023
  score_time:
  - 4.92363166809082
  - 0.0
  - 4.81612491607666
  - 5.17919921875
  - 5.117352247238159
  test_average_precision_macro:
  - 0.8996904456064787
  - .nan
  - 0.9469410580726982
  - 0.8499504161643561
  - 0.8785710604483219
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9878553193958292
  - .nan
  - 0.9654414421121377
  - 0.9703275575626248
  - 0.9745296513164052
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9807692307692307
  - .nan
  - 0.9611650485436893
  - 0.9655448717948717
  - 0.9476190476190476
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.979836784491319
  - .nan
  - 0.968365785224662
  - 0.9565138651024092
  - 0.9689945121678292
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669903
  - 0.9278846153846153
  - 0.938095238095238
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669902
  - 0.9278846153846154
  - 0.9380952380952381
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669902
  - 0.9278846153846154
  - 0.9380952380952381
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9271449704142012
  - .nan
  - 0.8404068423485899
  - 0.9205128205128206
  - 0.9345124716553288
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8790585962253449
  - .nan
  - 0.7832326341363872
  - 0.8665596584026749
  - 0.8841190612231697
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8781038374717833
  - .nan
  - 0.7758620689655172
  - 0.8654708520179372
  - 0.8834080717488789
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8974358974358974
  - .nan
  - 0.8019417475728153
  - 0.8897435897435897
  - 0.9022222222222221
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.864514785321475
  - .nan
  - 0.7306050696207538
  - 0.8533709719140011
  - 0.8775464734778655
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9807692307692307
  - .nan
  - 0.9611650485436893
  - 0.9655448717948717
  - 0.9476190476190475
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6082038427724666
  - .nan
  - 0.4901707541896357
  - 0.5947294367122166
  - 0.6206459801054109
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8244546989308082
  - .nan
  - 0.6547769888031216
  - 0.8043384104237783
  - 0.8327121760877029
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7467948717948718
  - .nan
  - 0.5210355987055016
  - 0.7403846153846154
  - 0.7587301587301588
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8013281530107276
  - .nan
  - 0.6203567127418294
  - 0.7761792138121643
  - 0.8089116593189404
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9858049905219791
  - .nan
  - 0.9713343497919579
  - 0.9750089839386912
  - 0.9608102107660249
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0384615384615385
  - .nan
  - -1.0970873786407767
  - -1.1057692307692308
  - -1.1523809523809523
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06490384615384615
  - .nan
  - -0.1262135922330097
  - -0.07211538461538462
  - -0.0619047619047619
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06490384615384616
  - .nan
  - -0.1262135922330097
  - -0.07211538461538461
  - -0.06190476190476191
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06490384615384616
  - .nan
  - -0.1262135922330097
  - -0.07211538461538461
  - -0.06190476190476191
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07285502958579881
  - .nan
  - -0.15959315765141008
  - -0.0794871794871795
  - -0.06548752834467121
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01282051282051282
  - .nan
  - -0.02588996763754045
  - -0.030448717948717948
  - -0.050793650793650794
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669903
  - 0.9278846153846153
  - 0.938095238095238
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669902
  - 0.9278846153846154
  - 0.9380952380952381
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669902
  - 0.9278846153846154
  - 0.9380952380952381
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9271449704142012
  - .nan
  - 0.8404068423485899
  - 0.9205128205128206
  - 0.9345124716553288
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669903
  - 0.9278846153846153
  - 0.938095238095238
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669902
  - 0.9278846153846154
  - 0.9380952380952381
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9350961538461539
  - .nan
  - 0.8737864077669902
  - 0.9278846153846154
  - 0.9380952380952381
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9271449704142012
  - .nan
  - 0.8404068423485899
  - 0.9205128205128206
  - 0.9345124716553288
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9943103467532812
  - .nan
  - 0.9887070205022142
  - 0.9820132358036132
  - 0.9845404439305304
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9955621301775148
  - .nan
  - 0.9886148596246316
  - 0.9863726841218803
  - 0.9886318972033258
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9871794871794871
  - .nan
  - 0.9741100323624596
  - 0.969551282051282
  - 0.9492063492063493
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.99641492181166
  - .nan
  - 0.9893705967235378
  - 0.9862835047529998
  - 0.9923982117599516
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9622159954757752
  - .nan
  - 0.8918668173558862
  - 0.9008305272996061
  - 0.9400639005021593
  train_average_precision_macro_oob:
  - 0.9128745173893895
  - .nan
  - 0.8419416082624409
  - 0.8862517902403424
  - 0.8473818658094929
  train_average_precision_micro:
  - 0.9862301244112637
  - .nan
  - 0.9791158625455912
  - 0.9873612851079829
  - 0.9810661943273044
  train_average_precision_micro_oob:
  - 0.9787182008176676
  - .nan
  - 0.9696948774889458
  - 0.9818080954437174
  - 0.972457990797308
  train_average_precision_samples:
  - 0.9710843373493976
  - .nan
  - 0.9665464743589745
  - 0.9744979919678716
  - 0.9671900161030594
  train_average_precision_samples_oob:
  - 0.9600401606425704
  - .nan
  - 0.9591346153846154
  - 0.9676706827309236
  - 0.9653784219001611
  train_average_precision_weighted:
  - 0.9838400617192987
  - .nan
  - 0.9706194893944232
  - 0.9795563892416083
  - 0.9774463214092582
  train_average_precision_weighted_oob:
  - 0.9734648627910821
  - .nan
  - 0.9596482702222444
  - 0.9733438670495828
  - 0.9618678625103312
  train_f1_macro:
  - 0.9403614457831324
  - .nan
  - 0.9068509615384615
  - 0.9301204819277108
  - 0.928743961352657
  train_f1_macro_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_f1_micro:
  - 0.9403614457831325
  - .nan
  - 0.9068509615384616
  - 0.9301204819277108
  - 0.928743961352657
  train_f1_micro_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_f1_samples:
  - 0.9403614457831325
  - .nan
  - 0.9068509615384616
  - 0.9301204819277108
  - 0.928743961352657
  train_f1_samples_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_f1_weighted:
  - 0.9355723610432182
  - .nan
  - 0.8849029260213471
  - 0.9180492304144809
  - 0.9160945842868041
  train_f1_weighted_oob:
  - 0.9377404606492797
  - .nan
  - 0.876638986013986
  - 0.9167233527411079
  - 0.9178628389154707
  train_jaccard_macro:
  - 0.8879350848335512
  - .nan
  - 0.8321769932657928
  - 0.8708199858566036
  - 0.8686553332106542
  train_jaccard_macro_oob:
  - 0.8911351973101744
  - .nan
  - 0.8204212351776994
  - 0.8677358295471631
  - 0.8707287671738271
  train_jaccard_micro:
  - 0.8874360432063673
  - .nan
  - 0.8295766904892798
  - 0.8693693693693694
  - 0.8669673055242391
  train_jaccard_micro_oob:
  - 0.8906605922551253
  - .nan
  - 0.817586018569088
  - 0.8662169758291175
  - 0.8690744920993227
  train_jaccard_samples:
  - 0.9061847389558233
  - .nan
  - 0.8516025641025641
  - 0.8894779116465863
  - 0.8879227053140096
  train_jaccard_samples_oob:
  - 0.9093975903614457
  - .nan
  - 0.8403846153846153
  - 0.886586345381526
  - 0.889855072463768
  train_jaccard_weighted:
  - 0.879192407424789
  - .nan
  - 0.7948897525288786
  - 0.8496850626386258
  - 0.8466309893311001
  train_jaccard_weighted_oob:
  - 0.8830466956672177
  - .nan
  - 0.781508500566327
  - 0.8473905918352006
  - 0.8496493710366003
  train_label_ranking_average_precision_score:
  - 0.9710843373493975
  - .nan
  - 0.9665464743589745
  - 0.9744979919678716
  - 0.9671900161030593
  train_label_ranking_average_precision_score_oob:
  - 0.96004016064257
  - .nan
  - 0.9591346153846152
  - 0.9676706827309236
  - 0.965378421900161
  train_matthews_corrcoef_macro:
  - 0.62759490288784
  - .nan
  - 0.558117723220056
  - 0.6077019755780421
  - 0.603756076778039
  train_matthews_corrcoef_macro_oob:
  - 0.6320204515492294
  - .nan
  - 0.5391690659798227
  - 0.6016995979569695
  - 0.6062214689608882
  train_matthews_corrcoef_micro:
  - 0.8400803171490543
  - .nan
  - 0.7476370060351231
  - 0.8125797458300172
  - 0.8085985178090249
  train_matthews_corrcoef_micro_oob:
  - 0.8449923475671046
  - .nan
  - 0.7272255293500026
  - 0.8076318737816552
  - 0.8119083296183291
  train_matthews_corrcoef_samples:
  - 0.7744547409017725
  - .nan
  - 0.6327981176342699
  - 0.7293172690763052
  - 0.7284477059642263
  train_matthews_corrcoef_samples_oob:
  - 0.7827020896507131
  - .nan
  - 0.6049679487179488
  - 0.7220883534136546
  - 0.7332786238386223
  train_matthews_corrcoef_weighted:
  - 0.8166681299669055
  - .nan
  - 0.7165155975389929
  - 0.7859183136240784
  - 0.7810495713107649
  train_matthews_corrcoef_weighted_oob:
  - 0.821854041761382
  - .nan
  - 0.6957009043860558
  - 0.7809660968552296
  - 0.7846364597060946
  train_ndgc:
  - 0.9786453240230872
  - .nan
  - 0.975238980243332
  - 0.9810242077692062
  - 0.9757132207834901
  train_ndgc_oob:
  - 0.9704060641423151
  - .nan
  - 0.969662539758917
  - 0.9759465915299638
  - 0.9743268883719497
  train_neg_coverage_error:
  - -1.0795180722891566
  - .nan
  - -1.0889423076923077
  - -1.072289156626506
  - -1.0917874396135265
  train_neg_coverage_error_oob:
  - -1.1156626506024097
  - .nan
  - -1.1201923076923077
  - -1.0891566265060242
  - -1.106280193236715
  train_neg_hamming_loss_macro:
  - -0.059638554216867465
  - .nan
  - -0.09314903846153846
  - -0.06987951807228915
  - -0.07125603864734299
  train_neg_hamming_loss_macro_oob:
  - -0.05783132530120482
  - .nan
  - -0.10036057692307693
  - -0.07168674698795181
  - -0.07004830917874397
  train_neg_hamming_loss_micro:
  - -0.05963855421686747
  - .nan
  - -0.09314903846153846
  - -0.06987951807228916
  - -0.07125603864734299
  train_neg_hamming_loss_micro_oob:
  - -0.05783132530120482
  - .nan
  - -0.10036057692307693
  - -0.07168674698795181
  - -0.07004830917874397
  train_neg_hamming_loss_samples:
  - -0.05963855421686747
  - .nan
  - -0.09314903846153846
  - -0.06987951807228916
  - -0.07125603864734299
  train_neg_hamming_loss_samples_oob:
  - -0.05783132530120482
  - .nan
  - -0.10036057692307693
  - -0.07168674698795181
  - -0.07004830917874397
  train_neg_hamming_loss_weighted:
  - -0.06442763895678177
  - .nan
  - -0.11509707397865293
  - -0.0819507695855191
  - -0.08390541571319604
  train_neg_hamming_loss_weighted_oob:
  - -0.0622595393507203
  - .nan
  - -0.12336101398601398
  - -0.08327664725889203
  - -0.08213716108452951
  train_neg_label_ranking_loss:
  - -0.023092369477911642
  - .nan
  - -0.02784455128205128
  - -0.021686746987951807
  - -0.02717391304347826
  train_neg_label_ranking_loss_oob:
  - -0.03493975903614458
  - .nan
  - -0.03806089743589743
  - -0.027309236947791162
  - -0.031803542673107886
  train_precision_macro:
  - 0.9403614457831324
  - .nan
  - 0.9068509615384615
  - 0.9301204819277108
  - 0.928743961352657
  train_precision_macro_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_precision_micro:
  - 0.9403614457831325
  - .nan
  - 0.9068509615384616
  - 0.9301204819277108
  - 0.928743961352657
  train_precision_micro_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_precision_samples:
  - 0.9403614457831325
  - .nan
  - 0.9068509615384616
  - 0.9301204819277108
  - 0.928743961352657
  train_precision_samples_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_precision_weighted:
  - 0.9355723610432182
  - .nan
  - 0.8849029260213471
  - 0.9180492304144809
  - 0.9160945842868041
  train_precision_weighted_oob:
  - 0.9377404606492797
  - .nan
  - 0.876638986013986
  - 0.9167233527411079
  - 0.9178628389154707
  train_recall_macro:
  - 0.9403614457831324
  - .nan
  - 0.9068509615384615
  - 0.9301204819277108
  - 0.928743961352657
  train_recall_macro_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_recall_micro:
  - 0.9403614457831325
  - .nan
  - 0.9068509615384616
  - 0.9301204819277108
  - 0.928743961352657
  train_recall_micro_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_recall_samples:
  - 0.9403614457831325
  - .nan
  - 0.9068509615384616
  - 0.9301204819277108
  - 0.928743961352657
  train_recall_samples_oob:
  - 0.9421686746987952
  - .nan
  - 0.8996394230769231
  - 0.9283132530120481
  - 0.9299516908212561
  train_recall_weighted:
  - 0.9355723610432182
  - .nan
  - 0.8849029260213471
  - 0.9180492304144809
  - 0.9160945842868041
  train_recall_weighted_oob:
  - 0.9377404606492797
  - .nan
  - 0.876638986013986
  - 0.9167233527411079
  - 0.9178628389154707
  train_roc_auc_macro:
  - 0.9930524568129181
  - .nan
  - 0.9899992585790716
  - 0.9926239514708878
  - 0.9911641740814461
  train_roc_auc_macro_oob:
  - 0.9875334392562453
  - .nan
  - 0.9822490753982736
  - 0.9891084262256318
  - 0.981298672817482
  train_roc_auc_micro:
  - 0.9948459457016534
  - .nan
  - 0.9923276014346387
  - 0.9946701954711108
  - 0.9925988049872073
  train_roc_auc_micro_oob:
  - 0.9909400187315258
  - .nan
  - 0.9865041818028216
  - 0.9919503964126389
  - 0.9868285782748838
  train_roc_auc_samples:
  - 0.9769076305220884
  - .nan
  - 0.9721554487179488
  - 0.9783132530120482
  - 0.9728260869565217
  train_roc_auc_samples_oob:
  - 0.9650602409638555
  - .nan
  - 0.9619391025641024
  - 0.9726907630522087
  - 0.9681964573268922
  train_roc_auc_weighted:
  - 0.9949044456282501
  - .nan
  - 0.9918530648189707
  - 0.9958897926771406
  - 0.9924157112710598
  train_roc_auc_weighted_oob:
  - 0.9921236558888793
  - .nan
  - 0.9875281988461404
  - 0.9922662192789534
  - 0.9883663940248666
start: 2023-12-21 17:49:37.197022
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
