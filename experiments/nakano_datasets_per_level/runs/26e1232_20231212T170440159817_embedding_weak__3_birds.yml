active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8L8AAAAAAADwPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D8yMzMzMzPzv5CZmZmZmcm/nJmZmZmZ6T8yMzMzMzPzvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv2hmZmZmZvY/mJmZmZmZ+b9oZmZmZmb2Pw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:05:04.290693
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 26e1232be4d18d6765bc73c739320c37ab87b6443cbc64612c863923c85db448
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/26e1232_20231212T170440159817_embedding_weak__3_birds.yml
results:
  fit_time:
  - 11.088384866714478
  - 11.683234930038452
  - 10.771778583526611
  - 10.94598913192749
  - 11.714670896530151
  score_time:
  - 3.1669528484344482
  - 3.092231512069702
  - 3.1000239849090576
  - 3.2124407291412354
  - 3.315284252166748
  test_average_precision_macro:
  - 0.374740167869853
  - 0.367692435467188
  - 0.4220866009621043
  - 0.4464894474002343
  - 0.3695586601169034
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.28696146554980434
  - 0.33774242119094905
  - 0.36019158015826636
  - 0.3881529016194481
  - 0.2838850011638318
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.25275480441178116
  - 0.2889390045785395
  - 0.36027643317315
  - 0.30113038877573756
  - 0.2880898655607958
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.44250326569034965
  - 0.46868355658031513
  - 0.4743959557731299
  - 0.5080792318147624
  - 0.4813732736232446
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9334965320277437
  - 0.9404324765401878
  - 0.9477764177886577
  - 0.9449204406364747
  - 0.9408404732762136
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9334965320277437
  - 0.9404324765401877
  - 0.9477764177886577
  - 0.944920440636475
  - 0.9408404732762138
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9334965320277437
  - 0.9404324765401877
  - 0.9477764177886577
  - 0.9449204406364748
  - 0.9408404732762138
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9180083482409064
  - 0.9138544034504867
  - 0.9287056612638007
  - 0.9252832438878952
  - 0.9268072832161529
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8766762256481723
  - 0.8899481094356666
  - 0.9022069728238898
  - 0.897157289445292
  - 0.8895073535347319
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8752869166029075
  - 0.8875625721986908
  - 0.9007367196587824
  - 0.8955916473317865
  - 0.8882896764252697
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.888745588132174
  - 0.8965867097987085
  - 0.9066196414528063
  - 0.9030819006855407
  - 0.8968922797234223
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8499149054909764
  - 0.8445862521464939
  - 0.8683248410204227
  - 0.862096831627849
  - 0.864596055985062
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.756630773404029
  - 0.7540552836483069
  - 0.7633772083669488
  - 0.7662466678455051
  - 0.7299503306770747
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.14354992838935102
  - 0.14675197434611706
  - 0.22254170990774208
  - 0.24424792337389106
  - 0.1716923893589392
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2265543202565259
  - 0.2120333897175692
  - 0.34629569861712217
  - 0.32265515790030863
  - 0.2619739509223442
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.06520689140931803
  - 0.04760568014789254
  - 0.11498002434755557
  - 0.09651013846371222
  - 0.07552003301483286
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.213110180852042
  - 0.1825029977860752
  - 0.28800680281401636
  - 0.29202256082594313
  - 0.26569387503860914
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.327627648942829
  - 0.36563454551369434
  - 0.4298912914176089
  - 0.3713854088071206
  - 0.366198452601086
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.248062015503876
  - -3.317829457364341
  - -3.511627906976744
  - -3.248062015503876
  - -3.201550387596899
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06650346797225622
  - -0.05956752345981233
  - -0.052223582211342316
  - -0.0550795593635251
  - -0.05915952672378622
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06650346797225622
  - -0.059567523459812324
  - -0.05222358221134231
  - -0.05507955936352509
  - -0.05915952672378621
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06650346797225622
  - -0.05956752345981232
  - -0.05222358221134231
  - -0.055079559363525085
  - -0.05915952672378621
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08199165175909363
  - -0.08614559654951331
  - -0.07129433873619921
  - -0.07471675611210496
  - -0.07319271678384713
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09698049961387854
  - -0.0954881694279779
  - -0.10735610781780412
  - -0.09828413277455685
  - -0.09797144956173684
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9334965320277437
  - 0.9404324765401878
  - 0.9477764177886577
  - 0.9449204406364747
  - 0.9408404732762136
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9334965320277437
  - 0.9404324765401877
  - 0.9477764177886577
  - 0.944920440636475
  - 0.9408404732762138
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9334965320277437
  - 0.9404324765401877
  - 0.9477764177886577
  - 0.9449204406364748
  - 0.9408404732762138
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9180083482409064
  - 0.9138544034504867
  - 0.9287056612638007
  - 0.9252832438878952
  - 0.9268072832161529
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9334965320277437
  - 0.9404324765401878
  - 0.9477764177886577
  - 0.9449204406364747
  - 0.9408404732762136
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9334965320277437
  - 0.9404324765401877
  - 0.9477764177886577
  - 0.944920440636475
  - 0.9408404732762138
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9334965320277437
  - 0.9404324765401877
  - 0.9477764177886577
  - 0.9449204406364748
  - 0.9408404732762138
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9180083482409064
  - 0.9138544034504867
  - 0.9287056612638007
  - 0.9252832438878952
  - 0.9268072832161529
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8791910170084922
  - 0.8668441608875783
  - 0.8683407618995436
  - 0.8935492357416767
  - 0.8622136326181467
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8911278295164551
  - 0.8930923079917221
  - 0.869987063389392
  - 0.8973784509329534
  - 0.8774312441159385
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8822781119175884
  - 0.8777513791034687
  - 0.8695952474367177
  - 0.890861494332052
  - 0.8768279996881855
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.5240055161165063
  - 0.48120816838849195
  - 0.49064091299090573
  - 0.5008911006292178
  - 0.47728912283160235
  train_average_precision_macro_oob:
  - 0.39575628279253044
  - 0.3572261264116576
  - 0.362374988968387
  - 0.37420735795327986
  - 0.3557556859147781
  train_average_precision_micro:
  - 0.495690278289456
  - 0.4455170250915901
  - 0.447317366762934
  - 0.49678736457314265
  - 0.427175215897242
  train_average_precision_micro_oob:
  - 0.37870815123390206
  - 0.33431982104573765
  - 0.3436090556537708
  - 0.38220359675226895
  - 0.323821476883925
  train_average_precision_samples:
  - 0.44414165883642626
  - 0.4298733773225052
  - 0.39400730549955354
  - 0.4235636472700426
  - 0.4052767955020862
  train_average_precision_samples_oob:
  - 0.3222675993605926
  - 0.3159177317643175
  - 0.29704255088625514
  - 0.3196910451731038
  - 0.30990801098954734
  train_average_precision_weighted:
  - 0.6613474353461049
  - 0.5981479599788371
  - 0.6317679359152385
  - 0.6363628214732295
  - 0.61069180847823
  train_average_precision_weighted_oob:
  - 0.502520221291755
  - 0.44587196053219513
  - 0.4690216293586334
  - 0.47895188782481607
  - 0.4508946710745372
  train_f1_macro:
  - 0.9442064463484292
  - 0.9413504691962465
  - 0.940126478988168
  - 0.9439004487964094
  - 0.9402284781721746
  train_f1_macro_oob:
  - 0.9453284373725012
  - 0.9419624643002855
  - 0.9415544675642595
  - 0.9456344349245206
  - 0.9416564667482662
  train_f1_micro:
  - 0.9442064463484292
  - 0.9413504691962464
  - 0.9401264789881681
  - 0.9439004487964097
  - 0.9402284781721746
  train_f1_micro_oob:
  - 0.945328437372501
  - 0.9419624643002856
  - 0.9415544675642595
  - 0.9456344349245206
  - 0.941656466748266
  train_f1_samples:
  - 0.9442064463484292
  - 0.9413504691962464
  - 0.9401264789881681
  - 0.9439004487964097
  - 0.9402284781721746
  train_f1_samples_oob:
  - 0.9453284373725012
  - 0.9419624643002856
  - 0.9415544675642595
  - 0.9456344349245207
  - 0.941656466748266
  train_f1_weighted:
  - 0.9337645718681579
  - 0.9306194110907766
  - 0.9280681041907987
  - 0.932059589324812
  - 0.9292100406053894
  train_f1_weighted_oob:
  - 0.9295113616190307
  - 0.9278221666741063
  - 0.9241104576910512
  - 0.9267634179537251
  - 0.9244702842377261
  train_jaccard_macro:
  - 0.8951438272814156
  - 0.8902215310839394
  - 0.8879788650978
  - 0.8944086648740676
  - 0.8880200455013475
  train_jaccard_macro_oob:
  - 0.8973654742096147
  - 0.8913391153881235
  - 0.8908921213835449
  - 0.8982108907096259
  - 0.891045025523345
  train_jaccard_micro:
  - 0.8943097285286445
  - 0.8891993448309086
  - 0.887017611394476
  - 0.8937608653660422
  - 0.8871992300288739
  train_jaccard_micro_oob:
  - 0.8963249516441005
  - 0.8902921045020726
  - 0.8895634576467187
  - 0.8968753023120828
  - 0.889745566692367
  train_jaccard_samples:
  - 0.9031013970363482
  - 0.8988384944519087
  - 0.8964599750385056
  - 0.9017501314611192
  - 0.8967195766884005
  train_jaccard_samples_oob:
  - 0.9040742625036524
  - 0.8996910185147463
  - 0.8983593968165927
  - 0.9042315739535155
  - 0.8987049233830494
  train_jaccard_weighted:
  - 0.8764037018724586
  - 0.8708201866157104
  - 0.8665218237308645
  - 0.8732529142882475
  - 0.8683415389657096
  train_jaccard_weighted_oob:
  - 0.8693992243210138
  - 0.8660830442104009
  - 0.8600389469352601
  - 0.8648350400184215
  - 0.8606612228023028
  train_label_ranking_average_precision_score:
  - 0.8879401084488289
  - 0.8833617494155279
  - 0.862999553561569
  - 0.8770520193630659
  - 0.864579121083481
  train_label_ranking_average_precision_score_oob:
  - 0.7660660489729957
  - 0.7694061038573407
  - 0.7660347989482696
  - 0.7731794172661273
  - 0.7692103365709424
  train_matthews_corrcoef_macro:
  - 0.35513095818026535
  - 0.33242191499502954
  - 0.3191960791296891
  - 0.325961746868965
  - 0.33616402680821694
  train_matthews_corrcoef_macro_oob:
  - 0.26251835543741975
  - 0.23690148515876847
  - 0.24720147866736808
  - 0.22797796630151868
  - 0.22940993268383883
  train_matthews_corrcoef_micro:
  - 0.393711004471182
  - 0.38955088856085945
  - 0.3802362129415478
  - 0.3819294471864284
  - 0.38088063134336836
  train_matthews_corrcoef_micro_oob:
  - 0.3356669867773239
  - 0.32577534848325995
  - 0.31450343075403747
  - 0.3156556213607139
  - 0.30638291977425053
  train_matthews_corrcoef_samples:
  - 0.15031328093092014
  - 0.148548319632694
  - 0.1280194826908948
  - 0.13771219863240775
  - 0.14610475282644594
  train_matthews_corrcoef_samples_oob:
  - 0.10844516668547112
  - 0.10752933334222019
  - 0.09394414649315505
  - 0.09532002086803752
  - 0.09995899539869375
  train_matthews_corrcoef_weighted:
  - 0.4287653779779236
  - 0.4194751537302177
  - 0.40600955176518977
  - 0.401175868651882
  - 0.39510972681532447
  train_matthews_corrcoef_weighted_oob:
  - 0.34330611850856035
  - 0.3235621304483543
  - 0.3211148341509045
  - 0.29775164551072725
  - 0.2778710949465605
  train_ndgc:
  - 0.4807945952114485
  - 0.46968638043158506
  - 0.4385173744962506
  - 0.46363015523244594
  - 0.44894694631730403
  train_ndgc_oob:
  - 0.39204178376013077
  - 0.3864433809601724
  - 0.3670402527290197
  - 0.38924955480365014
  - 0.37958216463657735
  train_neg_coverage_error:
  - -1.6647286821705427
  - -1.691860465116279
  - -1.7984496124031009
  - -1.680232558139535
  - -1.802325581395349
  train_neg_coverage_error_oob:
  - -3.391472868217054
  - -3.246124031007752
  - -3.1627906976744184
  - -3.2209302325581395
  - -3.393410852713178
  train_neg_hamming_loss_macro:
  - -0.05579355365157079
  - -0.05864953080375358
  - -0.059873521011831916
  - -0.05609955120359038
  - -0.05977152182782539
  train_neg_hamming_loss_macro_oob:
  - -0.05467156262749898
  - -0.05803753569971441
  - -0.05844553243574052
  - -0.05436556507547941
  - -0.058343533251734
  train_neg_hamming_loss_micro:
  - -0.055793553651570786
  - -0.05864953080375357
  - -0.0598735210118319
  - -0.05609955120359037
  - -0.05977152182782538
  train_neg_hamming_loss_micro_oob:
  - -0.05467156262749898
  - -0.058037535699714406
  - -0.058445532435740515
  - -0.0543655650754794
  - -0.058343533251733984
  train_neg_hamming_loss_samples:
  - -0.055793553651570786
  - -0.05864953080375356
  - -0.0598735210118319
  - -0.05609955120359037
  - -0.05977152182782537
  train_neg_hamming_loss_samples_oob:
  - -0.054671562627498976
  - -0.0580375356997144
  - -0.05844553243574051
  - -0.05436556507547939
  - -0.05834353325173398
  train_neg_hamming_loss_weighted:
  - -0.0662354281318421
  - -0.06938058890922344
  - -0.07193189580920134
  - -0.06794041067518788
  - -0.07078995939461055
  train_neg_hamming_loss_weighted_oob:
  - -0.07048863838096929
  - -0.07217783332589385
  - -0.07588954230894887
  - -0.07323658204627494
  - -0.07552971576227392
  train_neg_label_ranking_loss:
  - -0.02711995327846901
  - -0.028238607607622652
  - -0.033318039499640045
  - -0.02814275233050883
  - -0.033777124196925835
  train_neg_label_ranking_loss_oob:
  - -0.10120784748007731
  - -0.09343496094522086
  - -0.09281049231459627
  - -0.0926267436014358
  - -0.10041151896059558
  train_precision_macro:
  - 0.9442064463484292
  - 0.9413504691962465
  - 0.940126478988168
  - 0.9439004487964094
  - 0.9402284781721746
  train_precision_macro_oob:
  - 0.9453284373725012
  - 0.9419624643002855
  - 0.9415544675642595
  - 0.9456344349245206
  - 0.9416564667482662
  train_precision_micro:
  - 0.9442064463484292
  - 0.9413504691962464
  - 0.9401264789881681
  - 0.9439004487964097
  - 0.9402284781721746
  train_precision_micro_oob:
  - 0.945328437372501
  - 0.9419624643002856
  - 0.9415544675642595
  - 0.9456344349245206
  - 0.941656466748266
  train_precision_samples:
  - 0.9442064463484292
  - 0.9413504691962464
  - 0.9401264789881681
  - 0.9439004487964097
  - 0.9402284781721746
  train_precision_samples_oob:
  - 0.9453284373725012
  - 0.9419624643002856
  - 0.9415544675642595
  - 0.9456344349245207
  - 0.941656466748266
  train_precision_weighted:
  - 0.9337645718681579
  - 0.9306194110907766
  - 0.9280681041907987
  - 0.932059589324812
  - 0.9292100406053894
  train_precision_weighted_oob:
  - 0.9295113616190307
  - 0.9278221666741063
  - 0.9241104576910512
  - 0.9267634179537251
  - 0.9244702842377261
  train_recall_macro:
  - 0.9442064463484292
  - 0.9413504691962465
  - 0.940126478988168
  - 0.9439004487964094
  - 0.9402284781721746
  train_recall_macro_oob:
  - 0.9453284373725012
  - 0.9419624643002855
  - 0.9415544675642595
  - 0.9456344349245206
  - 0.9416564667482662
  train_recall_micro:
  - 0.9442064463484292
  - 0.9413504691962464
  - 0.9401264789881681
  - 0.9439004487964097
  - 0.9402284781721746
  train_recall_micro_oob:
  - 0.945328437372501
  - 0.9419624643002856
  - 0.9415544675642595
  - 0.9456344349245206
  - 0.941656466748266
  train_recall_samples:
  - 0.9442064463484292
  - 0.9413504691962464
  - 0.9401264789881681
  - 0.9439004487964097
  - 0.9402284781721746
  train_recall_samples_oob:
  - 0.9453284373725012
  - 0.9419624643002856
  - 0.9415544675642595
  - 0.9456344349245207
  - 0.941656466748266
  train_recall_weighted:
  - 0.9337645718681579
  - 0.9306194110907766
  - 0.9280681041907987
  - 0.932059589324812
  - 0.9292100406053894
  train_recall_weighted_oob:
  - 0.9295113616190307
  - 0.9278221666741063
  - 0.9241104576910512
  - 0.9267634179537251
  - 0.9244702842377261
  train_roc_auc_macro:
  - 0.9669057082407394
  - 0.9652744018217924
  - 0.9648969343736936
  - 0.9673908609210371
  - 0.9654137396346393
  train_roc_auc_macro_oob:
  - 0.8752400386555275
  - 0.8850650009020979
  - 0.8860768888883167
  - 0.8894023613122202
  - 0.8750287696432019
  train_roc_auc_micro:
  - 0.9649807103843117
  - 0.962524524738532
  - 0.960807429367267
  - 0.9652336552382205
  - 0.9598819659343423
  train_roc_auc_micro_oob:
  - 0.8930739380429059
  - 0.8935453183258854
  - 0.8982944784161823
  - 0.8986129162279548
  - 0.8892496625765296
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9732370204780729
  - 0.9681454365966146
  - 0.967959003803599
  - 0.9709060811059576
  - 0.9682548507473379
  train_roc_auc_weighted_oob:
  - 0.8867436551942558
  - 0.8822782936466583
  - 0.8901873586413077
  - 0.8915223362139022
  - 0.8816424799188308
start: 2023-12-12 17:04:40.159817
wrapper: null
