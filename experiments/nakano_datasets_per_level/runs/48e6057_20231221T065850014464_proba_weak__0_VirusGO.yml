active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCAZmZmZmb2P4CZmZmZmfm/ADMzMzMz479AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:58:54.599325
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__0
  params: {}
hash: 48e60577074349f72b40a5b85b7be126e3b6dd690ae5d5d02c5718780aecaabf
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/48e6057_20231221T065850014464_proba_weak__0_VirusGO.yml
results:
  fit_time:
  - 1.3822948932647705
  - 1.3692269325256348
  - 1.3335440158843994
  - 1.3075082302093506
  - 1.2921974658966064
  score_time:
  - 0.5410473346710205
  - 0.5401685237884521
  - 0.5987844467163086
  - 0.5559477806091309
  - 0.5320115089416504
  test_average_precision_macro:
  - 0.8907019602385923
  - 0.9499823421644357
  - 0.8966087753717512
  - 0.9653508566294514
  - 0.9941643323996265
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6969431584710292
  - 0.8115364054208767
  - 0.7380772997643983
  - 0.8052027209627137
  - 0.842314962461976
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7632575757575758
  - 0.8800000000000001
  - 0.7711240310077518
  - 0.8571428571428571
  - 0.8315789473684211
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8528879102167776
  - 0.9516306446821153
  - 0.8849916329271534
  - 0.9649638727285786
  - 0.9933333333333333
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8409090909090909
  - 0.8708333333333332
  - 0.8178294573643411
  - 0.8730158730158731
  - 0.8114035087719298
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8409090909090909
  - 0.8708333333333333
  - 0.8178294573643411
  - 0.873015873015873
  - 0.8114035087719298
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8409090909090909
  - 0.8708333333333333
  - 0.8178294573643413
  - 0.8730158730158731
  - 0.8114035087719299
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7618181818181817
  - 0.8365
  - 0.7267441860465116
  - 0.8323809523809524
  - 0.7205263157894737
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7393970615065949
  - 0.7763389589476546
  - 0.7095141046108077
  - 0.7802154228728903
  - 0.700047101745215
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7254901960784313
  - 0.7712177121771218
  - 0.6918032786885245
  - 0.7746478873239436
  - 0.6826568265682657
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7462121212121212
  - 0.7922619047619048
  - 0.7054263565891473
  - 0.7925170068027211
  - 0.699248120300752
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6241608551466563
  - 0.7242396637179246
  - 0.584364058407181
  - 0.7154453611576076
  - 0.5771437066078575
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7632575757575757
  - 0.8799999999999999
  - 0.7711240310077518
  - 0.8571428571428573
  - 0.8315789473684211
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11619281946732089
  - 0.21619652078345078
  - 0.09341731056368463
  - 0.20965394199639395
  - 0.11576583607157809
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.36784766737073643
  - 0.5715739957163775
  - 0.272916969158302
  - 0.5574667979074904
  - 0.33579782756217336
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2727272727272727
  - 0.44743416490252574
  - 0.13488372093023254
  - 0.3960108460008018
  - 0.18421052631578946
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23703335171333464
  - 0.4410409023982396
  - 0.18824721693545213
  - 0.4300490062102281
  - 0.23616230558601928
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.823258709009484
  - 0.9123387176265034
  - 0.8309539828977145
  - 0.8969510191522525
  - 0.8772678021135034
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8636363636363635
  - -1.7
  - -1.9534883720930232
  - -1.6428571428571428
  - -2.026315789473684
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1590909090909091
  - -0.12916666666666668
  - -0.1821705426356589
  - -0.12698412698412698
  - -0.18859649122807012
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1590909090909091
  - -0.12916666666666668
  - -0.1821705426356589
  - -0.12698412698412698
  - -0.18859649122807018
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.15909090909090906
  - -0.12916666666666665
  - -0.18217054263565893
  - -0.12698412698412698
  - -0.18859649122807015
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23818181818181816
  - -0.1635
  - -0.27325581395348836
  - -0.16761904761904764
  - -0.2794736842105263
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.14488636363636365
  - -0.08375
  - -0.1467700258397933
  - -0.08452380952380951
  - -0.13421052631578947
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8409090909090909
  - 0.8708333333333332
  - 0.8178294573643411
  - 0.8730158730158731
  - 0.8114035087719298
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8409090909090909
  - 0.8708333333333333
  - 0.8178294573643411
  - 0.873015873015873
  - 0.8114035087719298
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8409090909090909
  - 0.8708333333333333
  - 0.8178294573643413
  - 0.8730158730158731
  - 0.8114035087719299
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7618181818181817
  - 0.8365
  - 0.7267441860465116
  - 0.8323809523809524
  - 0.7205263157894737
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8409090909090909
  - 0.8708333333333332
  - 0.8178294573643411
  - 0.8730158730158731
  - 0.8114035087719298
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8409090909090909
  - 0.8708333333333333
  - 0.8178294573643411
  - 0.873015873015873
  - 0.8114035087719298
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8409090909090909
  - 0.8708333333333333
  - 0.8178294573643413
  - 0.8730158730158731
  - 0.8114035087719299
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7618181818181817
  - 0.8365
  - 0.7267441860465116
  - 0.8323809523809524
  - 0.7205263157894737
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9406827520798108
  - 0.9731635407786303
  - 0.9599959299959301
  - 0.9843976483230868
  - 0.9972645308123248
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8932710280373832
  - 0.9154736842105263
  - 0.8969380134428678
  - 0.9184158415841585
  - 0.9232584269662921
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8551136363636364
  - 0.91625
  - 0.8532299741602066
  - 0.9154761904761906
  - 0.8657894736842104
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9220150150150149
  - 0.9604006820119352
  - 0.9336916502301118
  - 0.9760863697705804
  - 0.9955654761904762
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9674215206817737
  - 0.9539073729350734
  - 0.9570233856060156
  - 0.9388802286332131
  - 0.952782079346589
  train_average_precision_macro_oob:
  - 0.910335980186128
  - 0.8312258492166964
  - 0.8801279375763942
  - 0.7998589546617128
  - 0.8794290605807017
  train_average_precision_micro:
  - 0.8020328078562856
  - 0.7941664768284713
  - 0.7802155010921888
  - 0.7913286683755824
  - 0.7928297173790444
  train_average_precision_micro_oob:
  - 0.773623987547165
  - 0.73925645483336
  - 0.7367309443385588
  - 0.7464669497976398
  - 0.7311802595806899
  train_average_precision_samples:
  - 0.7988070892978868
  - 0.8594810379241515
  - 0.8116869918699188
  - 0.8599999999999999
  - 0.8709072978303748
  train_average_precision_samples_oob:
  - 0.7880197682344922
  - 0.8172654690618761
  - 0.7715955284552845
  - 0.8256397306397306
  - 0.8291913214990138
  train_average_precision_weighted:
  - 0.9617765765555415
  - 0.9373604596672792
  - 0.9452817116311307
  - 0.9318837930179235
  - 0.9370695109893896
  train_average_precision_weighted_oob:
  - 0.9229082471927766
  - 0.8584113587879373
  - 0.8840901388477572
  - 0.8592847867095592
  - 0.868112125485618
  train_f1_macro:
  - 0.8404907975460122
  - 0.8562874251497007
  - 0.8302845528455284
  - 0.8707070707070708
  - 0.8372781065088756
  train_f1_macro_oob:
  - 0.8343558282208589
  - 0.8353293413173652
  - 0.8211382113821138
  - 0.8474747474747475
  - 0.8254437869822485
  train_f1_micro:
  - 0.8404907975460123
  - 0.8562874251497006
  - 0.8302845528455285
  - 0.8707070707070707
  - 0.8372781065088757
  train_f1_micro_oob:
  - 0.8343558282208589
  - 0.8353293413173652
  - 0.8211382113821138
  - 0.8474747474747475
  - 0.8254437869822485
  train_f1_samples:
  - 0.8404907975460123
  - 0.8562874251497006
  - 0.8302845528455286
  - 0.8707070707070707
  - 0.8372781065088757
  train_f1_samples_oob:
  - 0.8343558282208587
  - 0.8353293413173652
  - 0.8211382113821137
  - 0.8474747474747474
  - 0.8254437869822485
  train_f1_weighted:
  - 0.7731579906456905
  - 0.8023062785320448
  - 0.74875
  - 0.8336633663366335
  - 0.7613216942996074
  train_f1_weighted_oob:
  - 0.7608576808601106
  - 0.7593525819647833
  - 0.7301219512195122
  - 0.7862586258625862
  - 0.7372429550647371
  train_jaccard_macro:
  - 0.7353481981662996
  - 0.7567722773501632
  - 0.7245045777553517
  - 0.7763062380897364
  - 0.7333145442135733
  train_jaccard_macro_oob:
  - 0.7280243304452356
  - 0.7302480047438845
  - 0.7140349521043602
  - 0.7445021690749515
  - 0.7195546147869102
  train_jaccard_micro:
  - 0.7248677248677249
  - 0.7486910994764397
  - 0.7098175499565595
  - 0.7710196779964222
  - 0.7201017811704835
  train_jaccard_micro_oob:
  - 0.7157894736842105
  - 0.7172236503856041
  - 0.696551724137931
  - 0.7353198948290973
  - 0.7027707808564232
  train_jaccard_samples:
  - 0.7404323692667252
  - 0.7678927858568577
  - 0.7257549361207898
  - 0.7897546897546897
  - 0.7358410819949281
  train_jaccard_samples_oob:
  - 0.7302074203914696
  - 0.7341032221271744
  - 0.7093495934959351
  - 0.7529581529581529
  - 0.7172442941673711
  train_jaccard_weighted:
  - 0.6374660166450266
  - 0.6754146314847781
  - 0.6093303176522991
  - 0.7191815637323372
  - 0.6243845593412822
  train_jaccard_weighted_oob:
  - 0.6227794222714118
  - 0.6210061433804721
  - 0.5880248696553145
  - 0.654262097157362
  - 0.5964265017271089
  train_label_ranking_average_precision_score:
  - 0.7988070892978862
  - 0.8594810379241515
  - 0.8116869918699184
  - 0.8599999999999995
  - 0.8709072978303748
  train_label_ranking_average_precision_score_oob:
  - 0.7880197682344916
  - 0.817265469061876
  - 0.771595528455284
  - 0.8256397306397303
  - 0.8291913214990136
  train_matthews_corrcoef_macro:
  - 0.15665877467682748
  - 0.17534369459338628
  - 0.12427082547104878
  - 0.20690517208208203
  - 0.13801108445074017
  train_matthews_corrcoef_macro_oob:
  - 0.14348555839078617
  - 0.12915016837604812
  - 0.10121724277728365
  - 0.16038039223877334
  - 0.10342701899729582
  train_matthews_corrcoef_micro:
  - 0.43358966041696156
  - 0.48751777352189934
  - 0.3622859494091758
  - 0.5564252502785204
  - 0.3864937667987889
  train_matthews_corrcoef_micro_oob:
  - 0.4027266170902128
  - 0.38162845839314186
  - 0.3060447580485576
  - 0.4532859440660796
  - 0.31146397183194796
  train_matthews_corrcoef_samples:
  - 0.2656862444893826
  - 0.354848169199218
  - 0.21400833290305504
  - 0.4299033125818491
  - 0.22405272818974767
  train_matthews_corrcoef_samples_oob:
  - 0.23001288213682872
  - 0.24528309976148732
  - 0.15575963531464013
  - 0.31376829645961646
  - 0.16942281379901583
  train_matthews_corrcoef_weighted:
  - 0.31905253333938455
  - 0.35808649004364923
  - 0.25277003723106306
  - 0.42149307818567183
  - 0.27975428610240566
  train_matthews_corrcoef_weighted_oob:
  - 0.29266359464723335
  - 0.26360857098375384
  - 0.20573175474771566
  - 0.3266107081394007
  - 0.20922437840896904
  train_ndgc:
  - 0.8524799568804855
  - 0.8976965102642044
  - 0.8613074562622907
  - 0.8981780929213486
  - 0.9060127126302718
  train_ndgc_oob:
  - 0.8437747780264181
  - 0.8659276862252842
  - 0.8306985791085989
  - 0.8713258903417767
  - 0.8745126861117863
  train_neg_coverage_error:
  - -1.9079754601226995
  - -1.7065868263473054
  - -1.8475609756097562
  - -1.696969696969697
  - -1.6390532544378698
  train_neg_coverage_error_oob:
  - -1.969325153374233
  - -1.874251497005988
  - -2.0
  - -1.8424242424242425
  - -1.8047337278106508
  train_neg_hamming_loss_macro:
  - -0.15950920245398773
  - -0.1437125748502994
  - -0.16971544715447154
  - -0.12929292929292927
  - -0.1627218934911243
  train_neg_hamming_loss_macro_oob:
  - -0.1656441717791411
  - -0.16467065868263472
  - -0.17886178861788618
  - -0.1525252525252525
  - -0.17455621301775148
  train_neg_hamming_loss_micro:
  - -0.15950920245398773
  - -0.1437125748502994
  - -0.16971544715447154
  - -0.1292929292929293
  - -0.16272189349112426
  train_neg_hamming_loss_micro_oob:
  - -0.1656441717791411
  - -0.16467065868263472
  - -0.17886178861788618
  - -0.15252525252525254
  - -0.17455621301775148
  train_neg_hamming_loss_samples:
  - -0.15950920245398773
  - -0.1437125748502994
  - -0.1697154471544715
  - -0.1292929292929293
  - -0.16272189349112426
  train_neg_hamming_loss_samples_oob:
  - -0.1656441717791411
  - -0.16467065868263472
  - -0.17886178861788618
  - -0.1525252525252525
  - -0.17455621301775148
  train_neg_hamming_loss_weighted:
  - -0.22684200935430968
  - -0.19769372146795516
  - -0.25125
  - -0.16633663366336635
  - -0.23867830570039253
  train_neg_hamming_loss_weighted_oob:
  - -0.23914231913988943
  - -0.2406474180352167
  - -0.2698780487804878
  - -0.21374137413741376
  - -0.26275704493526275
  train_neg_label_ranking_loss:
  - -0.12958418541240627
  - -0.09273120425815036
  - -0.12195121951219512
  - -0.08779461279461279
  - -0.08193622616699539
  train_neg_label_ranking_loss_oob:
  - -0.14354124062713022
  - -0.12618097139055223
  - -0.15457317073170732
  - -0.12149831649831651
  - -0.11522024983563445
  train_precision_macro:
  - 0.8404907975460122
  - 0.8562874251497007
  - 0.8302845528455284
  - 0.8707070707070708
  - 0.8372781065088756
  train_precision_macro_oob:
  - 0.8343558282208589
  - 0.8353293413173652
  - 0.8211382113821138
  - 0.8474747474747475
  - 0.8254437869822485
  train_precision_micro:
  - 0.8404907975460123
  - 0.8562874251497006
  - 0.8302845528455285
  - 0.8707070707070707
  - 0.8372781065088757
  train_precision_micro_oob:
  - 0.8343558282208589
  - 0.8353293413173652
  - 0.8211382113821138
  - 0.8474747474747475
  - 0.8254437869822485
  train_precision_samples:
  - 0.8404907975460123
  - 0.8562874251497006
  - 0.8302845528455286
  - 0.8707070707070707
  - 0.8372781065088757
  train_precision_samples_oob:
  - 0.8343558282208587
  - 0.8353293413173652
  - 0.8211382113821137
  - 0.8474747474747474
  - 0.8254437869822485
  train_precision_weighted:
  - 0.7731579906456905
  - 0.8023062785320448
  - 0.74875
  - 0.8336633663366335
  - 0.7613216942996074
  train_precision_weighted_oob:
  - 0.7608576808601106
  - 0.7593525819647833
  - 0.7301219512195122
  - 0.7862586258625862
  - 0.7372429550647371
  train_recall_macro:
  - 0.8404907975460122
  - 0.8562874251497007
  - 0.8302845528455284
  - 0.8707070707070708
  - 0.8372781065088756
  train_recall_macro_oob:
  - 0.8343558282208589
  - 0.8353293413173652
  - 0.8211382113821138
  - 0.8474747474747475
  - 0.8254437869822485
  train_recall_micro:
  - 0.8404907975460123
  - 0.8562874251497006
  - 0.8302845528455285
  - 0.8707070707070707
  - 0.8372781065088757
  train_recall_micro_oob:
  - 0.8343558282208589
  - 0.8353293413173652
  - 0.8211382113821138
  - 0.8474747474747475
  - 0.8254437869822485
  train_recall_samples:
  - 0.8404907975460123
  - 0.8562874251497006
  - 0.8302845528455286
  - 0.8707070707070707
  - 0.8372781065088757
  train_recall_samples_oob:
  - 0.8343558282208587
  - 0.8353293413173652
  - 0.8211382113821137
  - 0.8474747474747474
  - 0.8254437869822485
  train_recall_weighted:
  - 0.7731579906456905
  - 0.8023062785320448
  - 0.74875
  - 0.8336633663366335
  - 0.7613216942996074
  train_recall_weighted_oob:
  - 0.7608576808601106
  - 0.7593525819647833
  - 0.7301219512195122
  - 0.7862586258625862
  - 0.7372429550647371
  train_roc_auc_macro:
  - 0.9873019756921476
  - 0.9805262469105376
  - 0.9833449789601584
  - 0.9792231102879431
  - 0.9789143884996951
  train_roc_auc_macro_oob:
  - 0.9679094373041935
  - 0.9574453810221324
  - 0.9615520080496527
  - 0.9520911193547598
  - 0.9576884124455619
  train_roc_auc_micro:
  - 0.9113823109115036
  - 0.9212964108910892
  - 0.9105516581632653
  - 0.9204371261999296
  - 0.9221485880115106
  train_roc_auc_micro_oob:
  - 0.8991145248545473
  - 0.9028898514851486
  - 0.8973852040816326
  - 0.9046275820475448
  - 0.9034775398722139
  train_roc_auc_samples:
  - 0.8704158145875939
  - 0.9072687957418496
  - 0.8780487804878049
  - 0.9122053872053872
  - 0.9180637738330047
  train_roc_auc_samples_oob:
  - 0.8564587593728699
  - 0.8738190286094476
  - 0.8454268292682927
  - 0.8785016835016833
  - 0.8847797501643655
  train_roc_auc_weighted:
  - 0.9775090665735087
  - 0.9660600975584884
  - 0.9727233423000485
  - 0.9685210474580823
  - 0.9636238996724859
  train_roc_auc_weighted_oob:
  - 0.9559433748299415
  - 0.9397248675696753
  - 0.9493895785011109
  - 0.9464996675067651
  - 0.9367663769136889
start: 2023-12-21 06:58:50.014464
wrapper: null
