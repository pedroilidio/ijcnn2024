active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmpmZmZnpPwCamZmZmek/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:51:32.136738
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__6
  params: {}
hash: 37dd925bf20a983556c1b4710b7f498812f63130d3ce4e12e23cc49c84c53300
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/37dd925_20231221T165110553762_proba__6_Gram_positive.yml
results:
  fit_time:
  - 11.343836784362793
  - 11.23581838607788
  - 11.203620433807373
  - 11.324741125106812
  - 11.172845840454102
  score_time:
  - 2.2771966457366943
  - 2.3408422470092773
  - 2.348590850830078
  - 2.3976216316223145
  - 2.3802413940429688
  test_average_precision_macro:
  - 0.8599222224564096
  - 0.9798372450306427
  - 0.9324606829829987
  - 0.9395806423520974
  - 0.9372400674372299
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9663455486034898
  - 0.9757043596013567
  - 0.9702118396524823
  - 0.9651640088251263
  - 0.9546574667283045
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9523809523809523
  - 0.9635922330097088
  - 0.9741100323624596
  - 0.9546925566343042
  - 0.9333333333333333
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9539166351699292
  - 0.9797662387707066
  - 0.9736463775415167
  - 0.9824551840205513
  - 0.9704396165221427
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339807
  - 0.7476190476190476
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7476190476190476
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7476190476190476
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6738544474393531
  - 0.6696201338486191
  - 0.6695294996265869
  - 0.6734503360716952
  - 0.6738544474393531
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6176403871358
  - 0.6224456901796231
  - 0.6190201012897639
  - 0.6176475169245657
  - 0.6176403871358
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.596958174904943
  - 0.6
  - 0.5968992248062015
  - 0.5968992248062015
  - 0.596958174904943
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5974603174603172
  - 0.6
  - 0.5974110032362459
  - 0.5974110032362459
  - 0.5974603174603172
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5150097868204152
  - 0.5102172392815073
  - 0.5092665218136275
  - 0.5147040675680669
  - 0.5150097868204152
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9523809523809523
  - 0.9635922330097088
  - 0.9741100323624595
  - 0.9546925566343043
  - 0.9333333333333333
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9649894643563383
  - 0.9729733502864285
  - 0.9805076006768763
  - 0.9658695702857911
  - 0.9501918501034784
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.161904761904762
  - -1.087378640776699
  - -1.0970873786407767
  - -1.1650485436893203
  - -1.2
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2523809523809524
  - -0.25
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.2523809523809524
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2523809523809524
  - -0.25
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.2523809523809524
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2523809523809524
  - -0.25
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.2523809523809524
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32614555256064687
  - -0.3303798661513809
  - -0.330470500373413
  - -0.3265496639283047
  - -0.32614555256064687
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04920634920634921
  - -0.02912621359223301
  - -0.02912621359223301
  - -0.0517799352750809
  - -0.06349206349206349
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339807
  - 0.7476190476190476
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7476190476190476
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7476190476190476
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6738544474393531
  - 0.6696201338486191
  - 0.6695294996265869
  - 0.6734503360716952
  - 0.6738544474393531
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339807
  - 0.7476190476190476
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7476190476190476
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7476190476190476
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6738544474393531
  - 0.6696201338486191
  - 0.6695294996265869
  - 0.6734503360716952
  - 0.6738544474393531
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9854121249710005
  - 0.9929402711489244
  - 0.9915222910564698
  - 0.9928713889894938
  - 0.9866396887137694
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.977646917437808
  - 0.9879661922267257
  - 0.9843906093906093
  - 0.9758366633366633
  - 0.9731702920322076
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9507936507936507
  - 0.970873786407767
  - 0.970873786407767
  - 0.948220064724919
  - 0.9365079365079366
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9922439093639822
  - 0.9919876218125261
  - 0.9916032939230283
  - 0.9944812445168983
  - 0.98977181242383
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9636175667923408
  - 0.9076742832774223
  - 0.9642774040610169
  - 0.9622251755232009
  - 0.9533460965835441
  train_average_precision_macro_oob:
  - 0.9467505785617537
  - 0.8458706354221639
  - 0.948376460820215
  - 0.8963329067666042
  - 0.8850862145335193
  train_average_precision_micro:
  - 0.9761516642860826
  - 0.9732533182869192
  - 0.977629699894845
  - 0.9732340501601559
  - 0.9693579589053167
  train_average_precision_micro_oob:
  - 0.9697466919909165
  - 0.963991677811307
  - 0.9714985486291446
  - 0.9684516551527163
  - 0.9600417928364265
  train_average_precision_samples:
  - 0.9593397745571659
  - 0.9629407051282052
  - 0.9607371794871795
  - 0.9643429487179488
  - 0.9607487922705314
  train_average_precision_samples_oob:
  - 0.9514895330112721
  - 0.9595352564102563
  - 0.9581330128205129
  - 0.9627403846153846
  - 0.9549114331723029
  train_average_precision_weighted:
  - 0.9870173047860812
  - 0.9740665760014788
  - 0.9832590105220111
  - 0.98319532187597
  - 0.9747292234919638
  train_average_precision_weighted_oob:
  - 0.9804638705900505
  - 0.9591598205771855
  - 0.9764383108710126
  - 0.9665764446587745
  - 0.9530335057470397
  train_f1_macro:
  - 0.7481884057971013
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971013
  train_f1_macro_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971013
  train_f1_micro:
  - 0.7481884057971014
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_f1_micro_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_f1_samples:
  - 0.7481884057971014
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_f1_samples_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_f1_weighted:
  - 0.6717003209026983
  - 0.6727220695970696
  - 0.6727613824123371
  - 0.6717975491096017
  - 0.6717003209026983
  train_f1_weighted_oob:
  - 0.6726618705035972
  - 0.6736721611721611
  - 0.6727613824123371
  - 0.6717975491096017
  - 0.6717003209026983
  train_jaccard_macro:
  - 0.6191601671882165
  - 0.6179711386099254
  - 0.6188179435353216
  - 0.6191545003244906
  - 0.6191601671882165
  train_jaccard_macro_oob:
  - 0.6197765688319543
  - 0.6185862647995143
  - 0.6188179435353216
  - 0.6191545003244906
  - 0.6191601671882165
  train_jaccard_micro:
  - 0.597684515195369
  - 0.5969289827255279
  - 0.5976956313010081
  - 0.5976956313010081
  - 0.597684515195369
  train_jaccard_micro_oob:
  - 0.5984555984555985
  - 0.5976956313010081
  - 0.5976956313010081
  - 0.5976956313010081
  - 0.597684515195369
  train_jaccard_samples:
  - 0.5980676328502413
  - 0.5974358974358972
  - 0.598076923076923
  - 0.598076923076923
  - 0.5980676328502413
  train_jaccard_samples_oob:
  - 0.5990338164251207
  - 0.5983974358974358
  - 0.598076923076923
  - 0.598076923076923
  - 0.5980676328502413
  train_jaccard_weighted:
  - 0.5123999115978736
  - 0.5135619651263911
  - 0.5138113173203459
  - 0.5124747290215935
  - 0.5123999115978736
  train_jaccard_weighted_oob:
  - 0.5133814240473744
  - 0.5145344503404079
  - 0.5138113173203459
  - 0.5124747290215935
  - 0.5123999115978736
  train_label_ranking_average_precision_score:
  - 0.9593397745571659
  - 0.9629407051282051
  - 0.9607371794871793
  - 0.9643429487179483
  - 0.9607487922705314
  train_label_ranking_average_precision_score_oob:
  - 0.9514895330112721
  - 0.9595352564102563
  - 0.9581330128205128
  - 0.9627403846153845
  - 0.9549114331723026
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.01503615448943895
  - 0.015060240963855422
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.04237099148456804
  - 0.04220262067413278
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0024154589371980675
  - 0.002403846153846154
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.023942461824909986
  - 0.023809523809523808
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9697101674175813
  - 0.9725477637865567
  - 0.9707689799072587
  - 0.9734875610456515
  - 0.9706633612268922
  train_ndgc_oob:
  - 0.9637257544629811
  - 0.9698261394330429
  - 0.9687908592453665
  - 0.9721729687256248
  - 0.9663734390283025
  train_neg_coverage_error:
  - -1.1256038647342994
  - -1.1105769230769231
  - -1.125
  - -1.1129807692307692
  - -1.1376811594202898
  train_neg_coverage_error_oob:
  - -1.1594202898550725
  - -1.1370192307692308
  - -1.1370192307692308
  - -1.1298076923076923
  - -1.1473429951690821
  train_neg_hamming_loss_macro:
  - -0.25181159420289856
  - -0.25240384615384615
  - -0.25180288461538464
  - -0.2518028846153846
  - -0.25181159420289856
  train_neg_hamming_loss_macro_oob:
  - -0.25120772946859904
  - -0.2518028846153846
  - -0.25180288461538464
  - -0.2518028846153846
  - -0.25181159420289856
  train_neg_hamming_loss_micro:
  - -0.25181159420289856
  - -0.25240384615384615
  - -0.25180288461538464
  - -0.25180288461538464
  - -0.25181159420289856
  train_neg_hamming_loss_micro_oob:
  - -0.25120772946859904
  - -0.25180288461538464
  - -0.25180288461538464
  - -0.25180288461538464
  - -0.25181159420289856
  train_neg_hamming_loss_samples:
  - -0.25181159420289856
  - -0.25240384615384615
  - -0.25180288461538464
  - -0.25180288461538464
  - -0.25181159420289856
  train_neg_hamming_loss_samples_oob:
  - -0.25120772946859904
  - -0.25180288461538464
  - -0.25180288461538464
  - -0.25180288461538464
  - -0.25181159420289856
  train_neg_hamming_loss_weighted:
  - -0.3282996790973019
  - -0.3272779304029304
  - -0.3272386175876629
  - -0.3282024508903984
  - -0.3282996790973019
  train_neg_hamming_loss_weighted_oob:
  - -0.3273381294964029
  - -0.32632783882783883
  - -0.3272386175876629
  - -0.3282024508903984
  - -0.3282996790973019
  train_neg_label_ranking_loss:
  - -0.0392512077294686
  - -0.03325320512820513
  - -0.03886217948717948
  - -0.034855769230769225
  - -0.043075684380032196
  train_neg_label_ranking_loss_oob:
  - -0.05052334943639291
  - -0.042067307692307696
  - -0.042868589743589744
  - -0.040464743589743585
  - -0.046296296296296294
  train_precision_macro:
  - 0.7481884057971013
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971013
  train_precision_macro_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971013
  train_precision_micro:
  - 0.7481884057971014
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_precision_micro_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_precision_samples:
  - 0.7481884057971014
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_precision_samples_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_precision_weighted:
  - 0.6717003209026983
  - 0.6727220695970696
  - 0.6727613824123371
  - 0.6717975491096017
  - 0.6717003209026983
  train_precision_weighted_oob:
  - 0.6726618705035972
  - 0.6736721611721611
  - 0.6727613824123371
  - 0.6717975491096017
  - 0.6717003209026983
  train_recall_macro:
  - 0.7481884057971013
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971013
  train_recall_macro_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971013
  train_recall_micro:
  - 0.7481884057971014
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_recall_micro_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_recall_samples:
  - 0.7481884057971014
  - 0.7475961538461539
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_recall_samples_oob:
  - 0.748792270531401
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481971153846154
  - 0.7481884057971014
  train_recall_weighted:
  - 0.6717003209026983
  - 0.6727220695970696
  - 0.6727613824123371
  - 0.6717975491096017
  - 0.6717003209026983
  train_recall_weighted_oob:
  - 0.6726618705035972
  - 0.6736721611721611
  - 0.6727613824123371
  - 0.6717975491096017
  - 0.6717003209026983
  train_roc_auc_macro:
  - 0.9919851457192931
  - 0.9894080282382525
  - 0.9943613363065587
  - 0.9934112492906604
  - 0.9919381263843434
  train_roc_auc_macro_oob:
  - 0.9889224192952342
  - 0.984515384152794
  - 0.991290547730322
  - 0.986786980429734
  - 0.9856253362471601
  train_roc_auc_micro:
  - 0.9867360349008927
  - 0.9856147603736027
  - 0.9883543721425081
  - 0.9837363774908705
  - 0.9827682648070406
  train_roc_auc_micro_oob:
  - 0.9816147082334133
  - 0.9800049762670341
  - 0.984344058812817
  - 0.979486442188803
  - 0.977526937287942
  train_roc_auc_samples:
  - 0.9607487922705314
  - 0.9667467948717948
  - 0.9611378205128205
  - 0.9651442307692307
  - 0.9569243156199678
  train_roc_auc_samples_oob:
  - 0.9494766505636072
  - 0.9579326923076923
  - 0.9571314102564101
  - 0.9595352564102565
  - 0.9537037037037038
  train_roc_auc_weighted:
  - 0.995097961572833
  - 0.9928718146573835
  - 0.994984875076771
  - 0.9938524466387758
  - 0.9926074977280138
  train_roc_auc_weighted_oob:
  - 0.9921863348253801
  - 0.99007909991335
  - 0.9925732049162455
  - 0.9916866964715177
  - 0.9871254587702939
start: 2023-12-21 16:51:10.553762
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
