active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz87+AZmZmZmYGQADNzMzMzPw/ADMzMzMz87+AmZmZmZkBwA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:22:09.630050
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__6
  params: {}
hash: fc474c68588202b55b274aa0c78834d3b3e841fb87b3c91bb365f176c83bf081
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fc474c6_20231221T212001322815_embedding_proba_weak__6_GrampositivePseAAC.yml
results:
  fit_time:
  - 107.77166771888733
  - 106.11799430847168
  - 104.83714413642883
  - 110.20814061164856
  - 109.39224004745483
  score_time:
  - 5.300316333770752
  - 5.091813325881958
  - 5.213575601577759
  - 5.677042007446289
  - 5.821653604507446
  test_average_precision_macro:
  - 0.3637428856547139
  - 0.39427623000302925
  - 0.4141898164005779
  - 0.46000037055713283
  - 0.37124197725082736
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4647494944342444
  - 0.4968333812218725
  - 0.48825257394696303
  - 0.5160727023746599
  - 0.4639234840781481
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7039682539682539
  - 0.7161716171617162
  - 0.699346405228758
  - 0.7047619047619048
  - 0.7083333333333333
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4609852829701017
  - 0.49856706435157366
  - 0.480569509682169
  - 0.517619481784314
  - 0.4622906439051183
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6777324263038549
  - 0.6735557050850717
  - 0.6591251885369532
  - 0.6751927437641724
  - 0.676931292274831
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6203382288624186
  - 0.6213922738811593
  - 0.6144631021298527
  - 0.6207709774756927
  - 0.6203929674207407
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6
  - 0.6
  - 0.5906432748538012
  - 0.6
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6025396825396824
  - 0.6026402640264026
  - 0.5921568627450979
  - 0.5999999999999999
  - 0.60125786163522
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5194301315820876
  - 0.5135690111849903
  - 0.4989630555701536
  - 0.5169160900972294
  - 0.5184281303170373
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7039682539682537
  - 0.7161716171617162
  - 0.6993464052287582
  - 0.7047619047619048
  - 0.7083333333333333
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02964684116402451
  - 0.06533732942716765
  - -0.02081269604908704
  - 0.0
  - 0.007355570965031315
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.05661385170722979
  - 0.12057759205964591
  - -0.02899230022147983
  - 0.0
  - 0.039746431675858215
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0126984126984127
  - 0.019801980198019802
  - -0.00326797385620915
  - 0.0
  - 0.006289308176100629
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03838125387202072
  - 0.09449202458803482
  - -0.033620509002371374
  - 0.0
  - 0.01165788605778548
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7788542380197894
  - 0.7891519637226494
  - 0.7768214164760311
  - 0.7796668601715101
  - 0.782623233719066
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.819047619047619
  - -1.7722772277227723
  - -1.7941176470588236
  - -1.8
  - -1.7641509433962264
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25
  - -0.25
  - -0.2573529411764706
  - -0.25
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25
  - -0.25
  - -0.25735294117647056
  - -0.25
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25
  - -0.25
  - -0.25735294117647056
  - -0.25
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3222675736961451
  - -0.3264442949149284
  - -0.34087481146304677
  - -0.3248072562358277
  - -0.3230687077251691
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.27301587301587305
  - -0.24917491749174916
  - -0.25653594771241833
  - -0.2666666666666666
  - -0.25471698113207547
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6777324263038549
  - 0.6735557050850717
  - 0.6591251885369532
  - 0.6751927437641724
  - 0.676931292274831
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.75
  - 0.75
  - 0.7426470588235294
  - 0.75
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6777324263038549
  - 0.6735557050850717
  - 0.6591251885369532
  - 0.6751927437641724
  - 0.676931292274831
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6207203190531223
  - 0.6423290508892232
  - 0.6907520737278201
  - 0.6923653643709042
  - 0.651574677504022
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7346938775510204
  - 0.7553462568138568
  - 0.7583502024291497
  - 0.7590929705215419
  - 0.7537083185000595
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.726984126984127
  - 0.750825082508251
  - 0.7434640522875818
  - 0.7333333333333333
  - 0.7452830188679245
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6169297248602411
  - 0.6366860207425431
  - 0.6388455896062096
  - 0.665731298753458
  - 0.6458404889918292
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7503769962198639
  - 0.7792148579622328
  - 0.7716795251093944
  - 0.7564493427282104
  - 0.7721816820259946
  train_average_precision_macro_oob:
  - 0.6148325729313573
  - 0.7087045792530634
  - 0.6978170254211725
  - 0.6322823061202895
  - 0.6568316507767564
  train_average_precision_micro:
  - 0.8148517455464971
  - 0.8194411007657535
  - 0.818508914397842
  - 0.8304276109348412
  - 0.836646392091306
  train_average_precision_micro_oob:
  - 0.783327746611903
  - 0.7943394104823651
  - 0.7948877340817988
  - 0.8097283524367702
  - 0.8137822170945708
  train_average_precision_samples:
  - 0.840780998389694
  - 0.8413078149920254
  - 0.8373301358912869
  - 0.840378421900161
  - 0.8549233252623084
  train_average_precision_samples_oob:
  - 0.8148148148148148
  - 0.8259569377990431
  - 0.8213429256594724
  - 0.822463768115942
  - 0.8355528652138822
  train_average_precision_weighted:
  - 0.8041095443662016
  - 0.8083088780225594
  - 0.8127439658916271
  - 0.8231421891538455
  - 0.829139986188101
  train_average_precision_weighted_oob:
  - 0.7704175982931906
  - 0.7892138113155107
  - 0.7914593424947536
  - 0.798859388311193
  - 0.8029443535591612
  train_f1_macro:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.8681055155875299
  - 0.8689613526570048
  - 0.8686440677966101
  train_f1_macro_oob:
  - 0.8508454106280192
  - 0.8397129186602871
  - 0.8477218225419665
  - 0.8496376811594202
  - 0.8450363196125908
  train_f1_micro:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.86810551558753
  - 0.8689613526570048
  - 0.8686440677966102
  train_f1_micro_oob:
  - 0.8508454106280193
  - 0.8397129186602871
  - 0.8477218225419664
  - 0.8496376811594203
  - 0.8450363196125908
  train_f1_samples:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.86810551558753
  - 0.8689613526570048
  - 0.8686440677966102
  train_f1_samples_oob:
  - 0.8508454106280193
  - 0.8397129186602871
  - 0.8477218225419664
  - 0.8496376811594203
  - 0.8450363196125908
  train_f1_weighted:
  - 0.8350322446432287
  - 0.8300865800865801
  - 0.8341660800238092
  - 0.8344197119940828
  - 0.8333594625510247
  train_f1_weighted_oob:
  - 0.8114439590412131
  - 0.7979209387104124
  - 0.8089375754766116
  - 0.8107042969743199
  - 0.8012785897190239
  train_jaccard_macro:
  - 0.7748359720034678
  - 0.7698481168969895
  - 0.7725027004990483
  - 0.7739504938452624
  - 0.7736581253994217
  train_jaccard_macro_oob:
  - 0.7475171417781227
  - 0.7316890568360568
  - 0.7427856051733572
  - 0.745628583298505
  - 0.7402121900138335
  train_jaccard_micro:
  - 0.7692307692307693
  - 0.7637130801687764
  - 0.7669491525423728
  - 0.7682861719167111
  - 0.7677902621722846
  train_jaccard_micro_oob:
  - 0.7404098791382029
  - 0.7237113402061855
  - 0.7356919875130072
  - 0.7385826771653543
  - 0.7316561844863732
  train_jaccard_samples:
  - 0.7913043478260867
  - 0.785645933014354
  - 0.7896083133493205
  - 0.7903381642512077
  - 0.7898305084745761
  train_jaccard_samples_oob:
  - 0.7616747181964572
  - 0.7438596491228069
  - 0.7569944044764187
  - 0.7597423510466988
  - 0.7520581113801451
  train_jaccard_weighted:
  - 0.7188288630332093
  - 0.7121663526224157
  - 0.7176542601711456
  - 0.7179345111834563
  - 0.7166204826394339
  train_jaccard_weighted_oob:
  - 0.6847764070071118
  - 0.6660825944504393
  - 0.6812092583318403
  - 0.6835590105484438
  - 0.6716750236656989
  train_label_ranking_average_precision_score:
  - 0.8407809983896934
  - 0.8413078149920251
  - 0.8373301358912864
  - 0.8403784219001605
  - 0.8549233252623077
  train_label_ranking_average_precision_score_oob:
  - 0.8148148148148145
  - 0.8259569377990429
  - 0.8213429256594722
  - 0.8224637681159416
  - 0.8355528652138817
  train_matthews_corrcoef_macro:
  - 0.4745933665686712
  - 0.4680644635476682
  - 0.47133365835745467
  - 0.4736658781744242
  - 0.4736430607441108
  train_matthews_corrcoef_macro_oob:
  - 0.4267431123331178
  - 0.3969255183083472
  - 0.41805195163544906
  - 0.4225991966310012
  - 0.4181732983114277
  train_matthews_corrcoef_micro:
  - 0.6414542145331334
  - 0.6291618433383558
  - 0.6354623844254829
  - 0.6396445641531308
  - 0.638700330609012
  train_matthews_corrcoef_micro_oob:
  - 0.5839921505944433
  - 0.5459809869356608
  - 0.5720535558799767
  - 0.5801763874348613
  - 0.565509060608285
  train_matthews_corrcoef_samples:
  - 0.4838391330356485
  - 0.46687727401526136
  - 0.47721822541966424
  - 0.48142367409845044
  - 0.4801680413480835
  train_matthews_corrcoef_samples_oob:
  - 0.4099807990520987
  - 0.3626252398784441
  - 0.39568345323741005
  - 0.40514988117770256
  - 0.38573704861200603
  train_matthews_corrcoef_weighted:
  - 0.6085935758582546
  - 0.5959859196490643
  - 0.6026410198200026
  - 0.6070366662270741
  - 0.6058607051739217
  train_matthews_corrcoef_weighted_oob:
  - 0.551080920896901
  - 0.5131341876844977
  - 0.5392551486426911
  - 0.5473808228647158
  - 0.5331777230602232
  train_ndgc:
  - 0.8814598651634513
  - 0.8819903393335435
  - 0.87886638511103
  - 0.8810785577189941
  - 0.8923711639638658
  train_ndgc_oob:
  - 0.8621077062074421
  - 0.8703770992859007
  - 0.8669143512597207
  - 0.8678796307160566
  - 0.8777672023547434
  train_neg_coverage_error:
  - -1.4371980676328502
  - -1.4138755980861244
  - -1.4220623501199041
  - -1.434782608695652
  - -1.3849878934624698
  train_neg_coverage_error_oob:
  - -1.5338164251207729
  - -1.4712918660287082
  - -1.4676258992805755
  - -1.497584541062802
  - -1.450363196125908
  train_neg_hamming_loss_macro:
  - -0.13043478260869565
  - -0.1339712918660287
  - -0.13189448441247004
  - -0.13103864734299517
  - -0.13135593220338984
  train_neg_hamming_loss_macro_oob:
  - -0.14915458937198067
  - -0.16028708133971292
  - -0.15227817745803357
  - -0.1503623188405797
  - -0.1549636803874092
  train_neg_hamming_loss_micro:
  - -0.13043478260869565
  - -0.1339712918660287
  - -0.13189448441247004
  - -0.13103864734299517
  - -0.13135593220338984
  train_neg_hamming_loss_micro_oob:
  - -0.14915458937198067
  - -0.16028708133971292
  - -0.15227817745803357
  - -0.1503623188405797
  - -0.1549636803874092
  train_neg_hamming_loss_samples:
  - -0.13043478260869565
  - -0.1339712918660287
  - -0.13189448441247004
  - -0.13103864734299517
  - -0.13135593220338984
  train_neg_hamming_loss_samples_oob:
  - -0.14915458937198067
  - -0.16028708133971292
  - -0.15227817745803357
  - -0.1503623188405797
  - -0.1549636803874092
  train_neg_hamming_loss_weighted:
  - -0.16496775535677138
  - -0.16991341991341993
  - -0.1658339199761909
  - -0.1655802880059173
  - -0.16664053744897542
  train_neg_hamming_loss_weighted_oob:
  - -0.18855604095878695
  - -0.2020790612895876
  - -0.19106242452338845
  - -0.18929570302568013
  - -0.1987214102809762
  train_neg_label_ranking_loss:
  - -0.14210950080515297
  - -0.13596491228070173
  - -0.13908872901678657
  - -0.14150563607085345
  - -0.12429378531073446
  train_neg_label_ranking_loss_oob:
  - -0.17371175523349433
  - -0.155103668261563
  - -0.15427657873701037
  - -0.16183574879227053
  - -0.14608555286521388
  train_precision_macro:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.8681055155875299
  - 0.8689613526570048
  - 0.8686440677966101
  train_precision_macro_oob:
  - 0.8508454106280192
  - 0.8397129186602871
  - 0.8477218225419665
  - 0.8496376811594202
  - 0.8450363196125908
  train_precision_micro:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.86810551558753
  - 0.8689613526570048
  - 0.8686440677966102
  train_precision_micro_oob:
  - 0.8508454106280193
  - 0.8397129186602871
  - 0.8477218225419664
  - 0.8496376811594203
  - 0.8450363196125908
  train_precision_samples:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.86810551558753
  - 0.8689613526570048
  - 0.8686440677966102
  train_precision_samples_oob:
  - 0.8508454106280193
  - 0.8397129186602871
  - 0.8477218225419664
  - 0.8496376811594203
  - 0.8450363196125908
  train_precision_weighted:
  - 0.8350322446432287
  - 0.8300865800865801
  - 0.8341660800238092
  - 0.8344197119940828
  - 0.8333594625510247
  train_precision_weighted_oob:
  - 0.8114439590412131
  - 0.7979209387104124
  - 0.8089375754766116
  - 0.8107042969743199
  - 0.8012785897190239
  train_recall_macro:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.8681055155875299
  - 0.8689613526570048
  - 0.8686440677966101
  train_recall_macro_oob:
  - 0.8508454106280192
  - 0.8397129186602871
  - 0.8477218225419665
  - 0.8496376811594202
  - 0.8450363196125908
  train_recall_micro:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.86810551558753
  - 0.8689613526570048
  - 0.8686440677966102
  train_recall_micro_oob:
  - 0.8508454106280193
  - 0.8397129186602871
  - 0.8477218225419664
  - 0.8496376811594203
  - 0.8450363196125908
  train_recall_samples:
  - 0.8695652173913043
  - 0.8660287081339713
  - 0.86810551558753
  - 0.8689613526570048
  - 0.8686440677966102
  train_recall_samples_oob:
  - 0.8508454106280193
  - 0.8397129186602871
  - 0.8477218225419664
  - 0.8496376811594203
  - 0.8450363196125908
  train_recall_weighted:
  - 0.8350322446432287
  - 0.8300865800865801
  - 0.8341660800238092
  - 0.8344197119940828
  - 0.8333594625510247
  train_recall_weighted_oob:
  - 0.8114439590412131
  - 0.7979209387104124
  - 0.8089375754766116
  - 0.8107042969743199
  - 0.8012785897190239
  train_roc_auc_macro:
  - 0.8557997679012407
  - 0.8612730258385504
  - 0.8720209140866169
  - 0.8567958198402982
  - 0.8787797566308707
  train_roc_auc_macro_oob:
  - 0.8045507998616227
  - 0.8460576385825471
  - 0.8530468740715779
  - 0.817475837098111
  - 0.8567325292904616
  train_roc_auc_micro:
  - 0.8914227299781249
  - 0.8981153963182716
  - 0.8957466689341926
  - 0.9043989765867159
  - 0.9128360469519122
  train_roc_auc_micro_oob:
  - 0.8636286339287784
  - 0.8786379887418228
  - 0.8793478697038777
  - 0.8840833726260137
  - 0.8953892756240351
  train_roc_auc_samples:
  - 0.857890499194847
  - 0.8640350877192982
  - 0.8609112709832134
  - 0.8584943639291465
  - 0.8757062146892656
  train_roc_auc_samples_oob:
  - 0.8262882447665058
  - 0.8448963317384369
  - 0.8457234212629896
  - 0.8381642512077294
  - 0.853914447134786
  train_roc_auc_weighted:
  - 0.8496496715743892
  - 0.8519590611693304
  - 0.8568690838201299
  - 0.8696655500610586
  - 0.8797578374519205
  train_roc_auc_weighted_oob:
  - 0.8224173564586057
  - 0.8374671276600587
  - 0.8386752058572141
  - 0.852736754186631
  - 0.8654319771284977
start: 2023-12-21 21:20:01.322815
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
