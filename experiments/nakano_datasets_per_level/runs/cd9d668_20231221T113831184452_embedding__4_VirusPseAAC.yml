active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AmpmZmZnZPwCamZmZmdk/QDMzMzMzA0BgZmZmZmYSwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:38:47.300294
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__4
  params: {}
hash: cd9d6688ca44b9b90bef20b1a7cae4172ba1eca8859d231bb82417c8ca232607
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cd9d668_20231221T113831184452_embedding__4_VirusPseAAC.yml
results:
  fit_time:
  - 8.58659029006958
  - 8.516857147216797
  - 8.80712890625
  - 8.843218088150024
  - 8.906320571899414
  score_time:
  - 2.0742015838623047
  - 2.0612385272979736
  - 2.1016573905944824
  - 2.006197214126587
  - 2.1724138259887695
  test_average_precision_macro:
  - 0.35921614435566257
  - 0.3288243819411047
  - 0.38586249878552387
  - 0.36947527708928546
  - 0.40220876355095
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.487303987724606
  - 0.43915270218001035
  - 0.36193376501976116
  - 0.4472212555742131
  - 0.38044030546423907
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6870833333333334
  - 0.6560975609756097
  - 0.5857723577235772
  - 0.6221509971509971
  - 0.6125
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4874614536908944
  - 0.41435805473336595
  - 0.3545925336377472
  - 0.4280091046295849
  - 0.39208025678883157
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7875000000000001
  - 0.7926829268292682
  - 0.8048780487804877
  - 0.7863247863247863
  - 0.8115942028985508
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7875
  - 0.7926829268292683
  - 0.8048780487804879
  - 0.7863247863247863
  - 0.8115942028985508
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7875
  - 0.7926829268292683
  - 0.804878048780488
  - 0.7863247863247862
  - 0.8115942028985511
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6593137254901961
  - 0.6829268292682926
  - 0.6880081300813008
  - 0.6666666666666667
  - 0.7081939799331104
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6787549874817729
  - 0.6812234548100626
  - 0.6989826404275954
  - 0.6748989366970082
  - 0.7050555305979834
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6494845360824743
  - 0.6565656565656566
  - 0.673469387755102
  - 0.647887323943662
  - 0.6829268292682927
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.656547619047619
  - 0.6620209059233451
  - 0.6777003484320558
  - 0.6562881562881565
  - 0.6863354037267082
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5117412353798925
  - 0.5376280415044036
  - 0.5427139678085734
  - 0.5214729762580018
  - 0.5654744914414725
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6870833333333334
  - 0.6560975609756097
  - 0.5857723577235773
  - 0.6221509971509972
  - 0.6124999999999999
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.766610217718273
  - 0.7471790046785923
  - 0.6928336893340441
  - 0.7197393944965779
  - 0.7097439912481063
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.325
  - -2.5609756097560976
  - -2.3902439024390243
  - -2.5128205128205128
  - -2.347826086956522
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21250000000000002
  - -0.2073170731707317
  - -0.19512195121951223
  - -0.2136752136752137
  - -0.1884057971014493
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2125
  - -0.2073170731707317
  - -0.1951219512195122
  - -0.21367521367521367
  - -0.18840579710144928
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2125
  - -0.20731707317073167
  - -0.19512195121951217
  - -0.21367521367521364
  - -0.18840579710144922
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34068627450980393
  - -0.3170731707317073
  - -0.3119918699186992
  - -0.33333333333333326
  - -0.29180602006688966
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21090277777777774
  - -0.24939024390243897
  - -0.24756097560975607
  - -0.24537037037037038
  - -0.24673913043478257
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7875000000000001
  - 0.7926829268292682
  - 0.8048780487804877
  - 0.7863247863247863
  - 0.8115942028985508
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7875
  - 0.7926829268292683
  - 0.8048780487804879
  - 0.7863247863247863
  - 0.8115942028985508
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7875
  - 0.7926829268292683
  - 0.804878048780488
  - 0.7863247863247862
  - 0.8115942028985511
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6593137254901961
  - 0.6829268292682926
  - 0.6880081300813008
  - 0.6666666666666667
  - 0.7081939799331104
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7875000000000001
  - 0.7926829268292682
  - 0.8048780487804877
  - 0.7863247863247863
  - 0.8115942028985508
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7875
  - 0.7926829268292683
  - 0.8048780487804879
  - 0.7863247863247863
  - 0.8115942028985508
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7875
  - 0.7926829268292683
  - 0.804878048780488
  - 0.7863247863247862
  - 0.8115942028985511
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6593137254901961
  - 0.6829268292682926
  - 0.6880081300813008
  - 0.6666666666666667
  - 0.7081939799331104
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6060199509688
  - 0.48326595017771495
  - 0.5826985704191587
  - 0.6303040339805046
  - 0.6072099337819418
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7869073555348065
  - 0.7525389643036703
  - 0.7548400673400674
  - 0.7817391304347826
  - 0.7676854395604396
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7890972222222222
  - 0.750609756097561
  - 0.7524390243902439
  - 0.7546296296296297
  - 0.7532608695652173
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5911896193226117
  - 0.5413787156866741
  - 0.4909002305877305
  - 0.5717346437346437
  - 0.5620973853732474
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7087915350383577
  - 0.6885554480916113
  - 0.673335325820681
  - 0.7411999849374998
  - 0.7127377847057836
  train_average_precision_macro_oob:
  - 0.37718391986837324
  - 0.3480859469278383
  - 0.36546137933688483
  - 0.3084946542605322
  - 0.2996221566898402
  train_average_precision_micro:
  - 0.7553685974623711
  - 0.7466843775007657
  - 0.7631401588412244
  - 0.7552794234561777
  - 0.7430859516833175
  train_average_precision_micro_oob:
  - 0.535057991654447
  - 0.5327500349278419
  - 0.5165868812436984
  - 0.49103219310215646
  - 0.47698319360691294
  train_average_precision_samples:
  - 0.8039421157684631
  - 0.8086847389558234
  - 0.8187081659973227
  - 0.826438492063492
  - 0.788664596273292
  train_average_precision_samples_oob:
  - 0.7078176979374584
  - 0.7018406961178045
  - 0.6921017402945113
  - 0.7044146825396825
  - 0.6522601794340924
  train_average_precision_weighted:
  - 0.7479164648599631
  - 0.7324697809333557
  - 0.7388654968960112
  - 0.7640773669241802
  - 0.7432156533186169
  train_average_precision_weighted_oob:
  - 0.4959607411748762
  - 0.4871571433618719
  - 0.4869342916092711
  - 0.4442332279941883
  - 0.4346731245900536
  train_f1_macro:
  - 0.8063872255489022
  - 0.8052208835341365
  - 0.7951807228915663
  - 0.8095238095238096
  - 0.7960662525879917
  train_f1_macro_oob:
  - 0.7994011976047903
  - 0.7981927710843374
  - 0.7951807228915663
  - 0.7996031746031748
  - 0.7929606625258799
  train_f1_micro:
  - 0.8063872255489022
  - 0.8052208835341366
  - 0.7951807228915663
  - 0.8095238095238095
  - 0.7960662525879917
  train_f1_micro_oob:
  - 0.7994011976047904
  - 0.7981927710843374
  - 0.7951807228915663
  - 0.7996031746031746
  - 0.7929606625258799
  train_f1_samples:
  - 0.806387225548902
  - 0.8052208835341363
  - 0.795180722891566
  - 0.8095238095238095
  - 0.7960662525879917
  train_f1_samples_oob:
  - 0.7994011976047902
  - 0.7981927710843372
  - 0.795180722891566
  - 0.7996031746031745
  - 0.7929606625258798
  train_f1_weighted:
  - 0.7016117019691959
  - 0.6960678535035666
  - 0.6806638317977795
  - 0.7054455445544554
  - 0.681024844720497
  train_f1_weighted_oob:
  - 0.6875800637530909
  - 0.6819217167176167
  - 0.6806638317977795
  - 0.6857024988213107
  - 0.6747204968944098
  train_jaccard_macro:
  - 0.6977620464269562
  - 0.6971786494473254
  - 0.6855361877611162
  - 0.701897226349118
  - 0.686563203923431
  train_jaccard_macro_oob:
  - 0.6904980111256442
  - 0.6899038730062433
  - 0.6855361877611162
  - 0.6913062098006546
  - 0.6834612711858535
  train_jaccard_micro:
  - 0.6755852842809364
  - 0.6739495798319328
  - 0.66
  - 0.68
  - 0.6612209802235598
  train_jaccard_micro_oob:
  - 0.6658354114713217
  - 0.6641604010025063
  - 0.66
  - 0.6661157024793388
  - 0.6569468267581475
  train_jaccard_samples:
  - 0.6823495865412034
  - 0.6815834767641998
  - 0.666092943201377
  - 0.6882086167800454
  - 0.668589174800355
  train_jaccard_samples_oob:
  - 0.6712289706301684
  - 0.6699655765920828
  - 0.666092943201377
  - 0.671201814058957
  - 0.663265306122449
  train_jaccard_weighted:
  - 0.5574785062693788
  - 0.5512346343501805
  - 0.5353233185780797
  - 0.5614897483832789
  - 0.5351780803460373
  train_jaccard_weighted_oob:
  - 0.5428905117020129
  - 0.5365957337601076
  - 0.5353233185780797
  - 0.540412576836337
  - 0.5288820601723276
  train_label_ranking_average_precision_score:
  - 0.8039421157684631
  - 0.8086847389558234
  - 0.8187081659973225
  - 0.8264384920634921
  - 0.7886645962732918
  train_label_ranking_average_precision_score_oob:
  - 0.7078176979374584
  - 0.7018406961178046
  - 0.6921017402945113
  - 0.7044146825396826
  - 0.6522601794340926
  train_matthews_corrcoef_macro:
  - 0.05472378249540565
  - 0.05442711669702744
  - 0.0
  - 0.05148058717057823
  - 0.03735523400917059
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.16743864814469303
  - 0.16731559024281153
  - 0.0
  - 0.1999523743370304
  - 0.10923124175095159
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.037514437509385344
  - 0.03995455139779323
  - 0.0
  - 0.05952380952380952
  - 0.018633540372670808
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.11036794756335169
  - 0.11021495669506548
  - 0.0
  - 0.10245146555728935
  - 0.07599689128760816
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8552768374353866
  - 0.8576119528548061
  - 0.8663300224999668
  - 0.8718933869890441
  - 0.8445538237191534
  train_ndgc_oob:
  - 0.7831349728114793
  - 0.7773133765737006
  - 0.7706921430506969
  - 0.7792872339881234
  - 0.7413523429068715
  train_neg_coverage_error:
  - -1.8562874251497006
  - -1.8614457831325302
  - -1.855421686746988
  - -1.7857142857142858
  - -1.9627329192546583
  train_neg_coverage_error_oob:
  - -2.251497005988024
  - -2.2951807228915664
  - -2.3132530120481927
  - -2.3214285714285716
  - -2.4782608695652173
  train_neg_hamming_loss_macro:
  - -0.1936127744510978
  - -0.19477911646586346
  - -0.20481927710843373
  - -0.19047619047619047
  - -0.2039337474120083
  train_neg_hamming_loss_macro_oob:
  - -0.20059880239520958
  - -0.2018072289156627
  - -0.20481927710843373
  - -0.20039682539682543
  - -0.20703933747412007
  train_neg_hamming_loss_micro:
  - -0.1936127744510978
  - -0.19477911646586346
  - -0.20481927710843373
  - -0.19047619047619047
  - -0.2039337474120083
  train_neg_hamming_loss_micro_oob:
  - -0.20059880239520958
  - -0.20180722891566266
  - -0.20481927710843373
  - -0.2003968253968254
  - -0.2070393374741201
  train_neg_hamming_loss_samples:
  - -0.19361277445109779
  - -0.19477911646586346
  - -0.20481927710843378
  - -0.19047619047619047
  - -0.20393374741200826
  train_neg_hamming_loss_samples_oob:
  - -0.20059880239520958
  - -0.2018072289156627
  - -0.20481927710843378
  - -0.20039682539682543
  - -0.2070393374741201
  train_neg_hamming_loss_weighted:
  - -0.298388298030804
  - -0.3039321464964335
  - -0.3193361682022206
  - -0.2945544554455446
  - -0.3189751552795031
  train_neg_hamming_loss_weighted_oob:
  - -0.31241993624690917
  - -0.3180782832823833
  - -0.3193361682022206
  - -0.3142975011786893
  - -0.32527950310559006
  train_neg_label_ranking_loss:
  - -0.12634730538922156
  - -0.12807898259705489
  - -0.12098393574297191
  - -0.11301256613756613
  - -0.1388888888888889
  train_neg_label_ranking_loss_oob:
  - -0.20753493013972055
  - -0.21772088353413654
  - -0.21631526104417673
  - -0.22328042328042325
  - -0.24568668046928918
  train_precision_macro:
  - 0.8063872255489022
  - 0.8052208835341365
  - 0.7951807228915663
  - 0.8095238095238096
  - 0.7960662525879917
  train_precision_macro_oob:
  - 0.7994011976047903
  - 0.7981927710843374
  - 0.7951807228915663
  - 0.7996031746031748
  - 0.7929606625258799
  train_precision_micro:
  - 0.8063872255489022
  - 0.8052208835341366
  - 0.7951807228915663
  - 0.8095238095238095
  - 0.7960662525879917
  train_precision_micro_oob:
  - 0.7994011976047904
  - 0.7981927710843374
  - 0.7951807228915663
  - 0.7996031746031746
  - 0.7929606625258799
  train_precision_samples:
  - 0.806387225548902
  - 0.8052208835341363
  - 0.795180722891566
  - 0.8095238095238095
  - 0.7960662525879917
  train_precision_samples_oob:
  - 0.7994011976047902
  - 0.7981927710843372
  - 0.795180722891566
  - 0.7996031746031745
  - 0.7929606625258798
  train_precision_weighted:
  - 0.7016117019691959
  - 0.6960678535035666
  - 0.6806638317977795
  - 0.7054455445544554
  - 0.681024844720497
  train_precision_weighted_oob:
  - 0.6875800637530909
  - 0.6819217167176167
  - 0.6806638317977795
  - 0.6857024988213107
  - 0.6747204968944098
  train_recall_macro:
  - 0.8063872255489022
  - 0.8052208835341365
  - 0.7951807228915663
  - 0.8095238095238096
  - 0.7960662525879917
  train_recall_macro_oob:
  - 0.7994011976047903
  - 0.7981927710843374
  - 0.7951807228915663
  - 0.7996031746031748
  - 0.7929606625258799
  train_recall_micro:
  - 0.8063872255489022
  - 0.8052208835341366
  - 0.7951807228915663
  - 0.8095238095238095
  - 0.7960662525879917
  train_recall_micro_oob:
  - 0.7994011976047904
  - 0.7981927710843374
  - 0.7951807228915663
  - 0.7996031746031746
  - 0.7929606625258799
  train_recall_samples:
  - 0.806387225548902
  - 0.8052208835341363
  - 0.795180722891566
  - 0.8095238095238095
  - 0.7960662525879917
  train_recall_samples_oob:
  - 0.7994011976047902
  - 0.7981927710843372
  - 0.795180722891566
  - 0.7996031746031745
  - 0.7929606625258798
  train_recall_weighted:
  - 0.7016117019691959
  - 0.6960678535035666
  - 0.6806638317977795
  - 0.7054455445544554
  - 0.681024844720497
  train_recall_weighted_oob:
  - 0.6875800637530909
  - 0.6819217167176167
  - 0.6806638317977795
  - 0.6857024988213107
  - 0.6747204968944098
  train_roc_auc_macro:
  - 0.8201168463919433
  - 0.7846977876152317
  - 0.8034323771783071
  - 0.840683435084013
  - 0.812194546379243
  train_roc_auc_macro_oob:
  - 0.635525256072637
  - 0.609313594607438
  - 0.6359213614892337
  - 0.6092493976741797
  - 0.5722473043409567
  train_roc_auc_micro:
  - 0.8887211880671548
  - 0.8751650552270096
  - 0.885342394533571
  - 0.8894553227034862
  - 0.8793603133159269
  train_roc_auc_micro_oob:
  - 0.7985913130974343
  - 0.7843111486592197
  - 0.7971628045157457
  - 0.7845551924919539
  - 0.7756723237597911
  train_roc_auc_samples:
  - 0.8736526946107783
  - 0.871921017402945
  - 0.879016064257028
  - 0.8869874338624341
  - 0.8611111111111113
  train_roc_auc_samples_oob:
  - 0.7924650698602793
  - 0.7822791164658633
  - 0.7836847389558231
  - 0.7767195767195767
  - 0.7543133195307108
  train_roc_auc_weighted:
  - 0.7968004956395992
  - 0.7528226876081353
  - 0.7745125443394859
  - 0.7982907962062256
  - 0.7740760798964508
  train_roc_auc_weighted_oob:
  - 0.6662113483620518
  - 0.6297202928359644
  - 0.6532538204583221
  - 0.6363452211792381
  - 0.6040933445901926
start: 2023-12-21 11:38:31.184452
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
