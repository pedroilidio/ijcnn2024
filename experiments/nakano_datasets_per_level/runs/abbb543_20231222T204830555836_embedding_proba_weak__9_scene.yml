active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZFUCAzMzMzMwEwIAzMzMzMwNAgMzMzMzMBMCAzMzMzMwEwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:31:33.649266
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__9
  params: {}
hash: abbb543a480ff41472c44b93e7c46da678c8bf5d0e7eab1762eef36254d83383
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/abbb543_20231222T204830555836_embedding_proba_weak__9_scene.yml
results:
  fit_time:
  - 2423.5041959285736
  - 2189.939570903778
  - 2338.7061824798584
  - 2277.382977962494
  - 2438.280178785324
  score_time:
  - 18.170509815216064
  - 21.502686023712158
  - 20.27192497253418
  - 20.759572505950928
  - 19.559627056121826
  test_average_precision_macro:
  - 0.8533531061596736
  - 0.8214331357251784
  - 0.8371706120158798
  - 0.8254909068111013
  - 0.8308522924316994
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8531055916064013
  - 0.812942818010444
  - 0.8340653993215672
  - 0.8146917837120331
  - 0.8204148299102654
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8880252100840336
  - 0.8678719008264462
  - 0.8795755045233126
  - 0.8632920110192837
  - 0.8829201101928374
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8451185406661166
  - 0.8075901112429662
  - 0.8252045231712375
  - 0.8126833715303047
  - 0.8176446970165008
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.924719887955182
  - 0.9166666666666666
  - 0.9217118997912318
  - 0.9142561983471075
  - 0.9256198347107438
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9247198879551821
  - 0.9166666666666666
  - 0.9217118997912317
  - 0.9142561983471075
  - 0.9256198347107438
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9247198879551821
  - 0.9166666666666667
  - 0.9217118997912317
  - 0.9142561983471075
  - 0.9256198347107438
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9211576522500893
  - 0.9117780537906655
  - 0.9165371979738149
  - 0.9096525716119714
  - 0.921063989641447
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8616963597002357
  - 0.849262281529057
  - 0.857971820523402
  - 0.8445688097957468
  - 0.8651037181083922
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.859980462390101
  - 0.8461538461538461
  - 0.8547918683446273
  - 0.8420551855375833
  - 0.8615384615384616
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8805522208883553
  - 0.8701790633608815
  - 0.8773734963714087
  - 0.8671782762691853
  - 0.8838055883510427
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8556822107502252
  - 0.8411810113704227
  - 0.8493984192636697
  - 0.8369102226134038
  - 0.85730522496879
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8880252100840336
  - 0.867871900826446
  - 0.8795755045233122
  - 0.8632920110192835
  - 0.882920110192837
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.73739555998278
  - 0.7096710553819893
  - 0.7302648520644488
  - 0.7012307843078891
  - 0.7417700330264334
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7319621489248762
  - 0.7008257132009218
  - 0.7206619873027952
  - 0.6917236670961779
  - 0.7344069363127241
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7022810727323059
  - 0.6735491610304216
  - 0.7006390845366262
  - 0.6679090326665068
  - 0.7134197531711262
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7278253524637929
  - 0.6950760903511641
  - 0.7155125759918017
  - 0.6885110315887495
  - 0.727874884588152
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9174547903605429
  - 0.9027069162624772
  - 0.9113960285234921
  - 0.8989005717220069
  - 0.9137471235538164
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.434873949579832
  - -1.4566115702479339
  - -1.4405010438413361
  - -1.4442148760330578
  - -1.4173553719008265
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07528011204481792
  - -0.08333333333333333
  - -0.07828810020876827
  - -0.08574380165289257
  - -0.0743801652892562
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07528011204481792
  - -0.08333333333333333
  - -0.07828810020876827
  - -0.08574380165289257
  - -0.0743801652892562
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07528011204481794
  - -0.08333333333333333
  - -0.07828810020876827
  - -0.08574380165289257
  - -0.0743801652892562
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07884234774991077
  - -0.08822194620933455
  - -0.08346280202618504
  - -0.09034742838802856
  - -0.078936010358553
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06759453781512605
  - -0.0743801652892562
  - -0.0701983298538622
  - -0.07474173553719007
  - -0.06745867768595042
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.924719887955182
  - 0.9166666666666666
  - 0.9217118997912318
  - 0.9142561983471075
  - 0.9256198347107438
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9247198879551821
  - 0.9166666666666666
  - 0.9217118997912317
  - 0.9142561983471075
  - 0.9256198347107438
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9247198879551821
  - 0.9166666666666667
  - 0.9217118997912317
  - 0.9142561983471075
  - 0.9256198347107438
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9211576522500893
  - 0.9117780537906655
  - 0.9165371979738149
  - 0.9096525716119714
  - 0.921063989641447
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.924719887955182
  - 0.9166666666666666
  - 0.9217118997912318
  - 0.9142561983471075
  - 0.9256198347107438
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9247198879551821
  - 0.9166666666666666
  - 0.9217118997912317
  - 0.9142561983471075
  - 0.9256198347107438
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9247198879551821
  - 0.9166666666666667
  - 0.9217118997912317
  - 0.9142561983471075
  - 0.9256198347107438
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9211576522500893
  - 0.9117780537906655
  - 0.9165371979738149
  - 0.9096525716119714
  - 0.921063989641447
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9517919399233339
  - 0.9338926984452206
  - 0.9434403993132853
  - 0.940302752113871
  - 0.9410644549670973
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9548619253495215
  - 0.9398924718152551
  - 0.9480179629300879
  - 0.9446512535203826
  - 0.9454532489411132
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9324054621848741
  - 0.9256198347107438
  - 0.9298016701461378
  - 0.92525826446281
  - 0.9325413223140496
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9476696829961976
  - 0.9272839698061319
  - 0.9383659499028818
  - 0.9344745972578979
  - 0.9348275148436163
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.985242458471273
  - 0.9854038702004333
  - 0.9845289316279704
  - 0.98401426141382
  - 0.9836789289562421
  train_average_precision_macro_oob:
  - 0.963398969328673
  - 0.9647801114490872
  - 0.9624370719184813
  - 0.9597675232471147
  - 0.9599367319268514
  train_average_precision_micro:
  - 0.984344106114245
  - 0.9841866215379238
  - 0.9827957470733524
  - 0.9835762132968353
  - 0.9822206001955937
  train_average_precision_micro_oob:
  - 0.9617765204571121
  - 0.9627517248855206
  - 0.9602485179913648
  - 0.959286050004399
  - 0.9577815448311683
  train_average_precision_samples:
  - 0.9831693423096841
  - 0.9802825446351187
  - 0.9816303596127248
  - 0.9827526434390709
  - 0.9809325706361589
  train_average_precision_samples_oob:
  - 0.9658467115484205
  - 0.9634338706881609
  - 0.9631483402489626
  - 0.963910556422257
  - 0.9606084243369735
  train_average_precision_weighted:
  - 0.9841034497761592
  - 0.9846369001371315
  - 0.9832259128145159
  - 0.9831027883087111
  - 0.9829514916228161
  train_average_precision_weighted_oob:
  - 0.9617138730752853
  - 0.9638345642716745
  - 0.9606549406659312
  - 0.9583150211759219
  - 0.9587320850386046
  train_f1_macro:
  - 0.9794579665113067
  - 0.9793725082336625
  - 0.9780428769017981
  - 0.9784191367654707
  - 0.9768590743629746
  train_f1_macro_oob:
  - 0.9659071292939756
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719015
  train_f1_micro:
  - 0.9794579665113068
  - 0.9793725082336627
  - 0.978042876901798
  - 0.9784191367654707
  - 0.9768590743629745
  train_f1_micro_oob:
  - 0.9659071292939755
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719016
  train_f1_samples:
  - 0.9794579665113067
  - 0.9793725082336627
  - 0.9780428769017981
  - 0.9784191367654707
  - 0.9768590743629745
  train_f1_samples_oob:
  - 0.9659071292939754
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719015
  train_f1_weighted:
  - 0.9789889554406913
  - 0.9790282608400174
  - 0.9774261023727061
  - 0.9779827714847725
  - 0.9764919416892729
  train_f1_weighted_oob:
  - 0.965238312492155
  - 0.9662900165571
  - 0.9630070653732535
  - 0.9641652912493311
  - 0.9607940023597075
  train_jaccard_macro:
  - 0.9598281717680059
  - 0.9596809877591151
  - 0.9571292492503928
  - 0.9578296695663976
  - 0.9548399256058359
  train_jaccard_macro_oob:
  - 0.9341651346745764
  - 0.9357064731014796
  - 0.9296780442555237
  - 0.9321268703513769
  - 0.9261943389345509
  train_jaccard_micro:
  - 0.959742895805142
  - 0.959578804347826
  - 0.9570292674674336
  - 0.9577500636294223
  - 0.9547649301143584
  train_jaccard_micro_oob:
  - 0.9340622652533177
  - 0.9355812783090085
  - 0.9296080066722269
  - 0.9320160750167448
  - 0.9260495784992906
  train_jaccard_samples:
  - 0.966794900249069
  - 0.966631998613278
  - 0.9645327010472239
  - 0.9649728846296708
  - 0.9627937498452319
  train_jaccard_samples_oob:
  - 0.9444280042415724
  - 0.9458930738181909
  - 0.9406861292234737
  - 0.9424757942698659
  - 0.9376098853477948
  train_jaccard_weighted:
  - 0.958922143594987
  - 0.9590156318405758
  - 0.9559439918095616
  - 0.9569873299752876
  - 0.954134182358989
  train_jaccard_weighted_oob:
  - 0.9329109985244413
  - 0.9348975207424096
  - 0.9287201065280518
  - 0.9309107726958611
  - 0.9246884074904334
  train_label_ranking_average_precision_score:
  - 0.983169342309684
  - 0.9802825446351187
  - 0.9816303596127247
  - 0.9827526434390708
  - 0.9809325706361587
  train_label_ranking_average_precision_score_oob:
  - 0.9658467115484203
  - 0.9634338706881608
  - 0.9631483402489623
  - 0.9639105564222569
  - 0.9606084243369731
  train_matthews_corrcoef_macro:
  - 0.9294883555444174
  - 0.929131446208486
  - 0.9250803106855999
  - 0.9260305607203243
  - 0.920347262737156
  train_matthews_corrcoef_macro_oob:
  - 0.881134378961581
  - 0.8839333826081609
  - 0.8723832599973962
  - 0.8776822692151138
  - 0.8662963717560671
  train_matthews_corrcoef_micro:
  - 0.9288917239984917
  - 0.9288468650812026
  - 0.9240991328340212
  - 0.9255648970908558
  - 0.9200717125607513
  train_matthews_corrcoef_micro_oob:
  - 0.8805329761777485
  - 0.883875692808157
  - 0.8721891449923802
  - 0.877151257138665
  - 0.8654919376735586
  train_matthews_corrcoef_samples:
  - 0.9222718675185343
  - 0.9231072951658211
  - 0.9180667506223937
  - 0.9176723930847241
  - 0.9128687147641759
  train_matthews_corrcoef_samples_oob:
  - 0.856305678244862
  - 0.8627267177776022
  - 0.8468307604005942
  - 0.8516735369103123
  - 0.840119266931157
  train_matthews_corrcoef_weighted:
  - 0.9285191936130897
  - 0.9285778175967079
  - 0.9237102010243722
  - 0.9251970133878006
  - 0.9198348495592727
  train_matthews_corrcoef_weighted_oob:
  - 0.8800360998516229
  - 0.8835483311460423
  - 0.8719148010711566
  - 0.8766265687396794
  - 0.8649174953032636
  train_ndgc:
  - 0.9875966916716235
  - 0.9854431728902739
  - 0.9865045670715833
  - 0.9873021734788447
  - 0.9860082956353501
  train_ndgc_oob:
  - 0.9752085539481692
  - 0.9732279244930874
  - 0.973151353730092
  - 0.9736952348329543
  - 0.9711636502097832
  train_neg_coverage_error:
  - -1.1051268772656655
  - -1.1144045761830472
  - -1.1115145228215768
  - -1.1128445137805512
  - -1.1159646385855435
  train_neg_coverage_error_oob:
  - -1.1796996374935267
  - -1.1892875715028601
  - -1.179460580912863
  - -1.1918876755070202
  - -1.1955278211128446
  train_neg_hamming_loss_macro:
  - -0.02054203348869325
  - -0.02062749176633732
  - -0.021957123098201938
  - -0.021580863234529384
  - -0.02314092563702548
  train_neg_hamming_loss_macro_oob:
  - -0.034092870706024514
  - -0.033281331253250133
  - -0.036479944674965424
  - -0.03518807418963425
  - -0.038394869128098454
  train_neg_hamming_loss_micro:
  - -0.02054203348869325
  - -0.02062749176633732
  - -0.021957123098201935
  - -0.02158086323452938
  - -0.02314092563702548
  train_neg_hamming_loss_micro_oob:
  - -0.034092870706024514
  - -0.033281331253250133
  - -0.036479944674965424
  - -0.03518807418963425
  - -0.03839486912809846
  train_neg_hamming_loss_samples:
  - -0.02054203348869325
  - -0.020627491766337318
  - -0.021957123098201935
  - -0.021580863234529377
  - -0.023140925637025477
  train_neg_hamming_loss_samples_oob:
  - -0.03409287070602451
  - -0.03328133125325013
  - -0.03647994467496542
  - -0.035188074189634246
  - -0.03839486912809845
  train_neg_hamming_loss_weighted:
  - -0.021011044559308727
  - -0.02097173915998266
  - -0.022573897627294042
  - -0.022017228515227565
  - -0.023508058310727012
  train_neg_hamming_loss_weighted_oob:
  - -0.03476168750784504
  - -0.03370998344290015
  - -0.036992934626746535
  - -0.03583470875066886
  - -0.03920599764029246
  train_neg_label_ranking_loss:
  - -0.007004142931123771
  - -0.008086323452938117
  - -0.007637448132780083
  - -0.007254290171606864
  - -0.008060322412896517
  train_neg_label_ranking_loss_oob:
  - -0.02031330916623511
  - -0.0218408736349454
  - -0.02003371369294606
  - -0.02168486739469579
  - -0.022971918876755072
  train_precision_macro:
  - 0.9794579665113067
  - 0.9793725082336625
  - 0.9780428769017981
  - 0.9784191367654707
  - 0.9768590743629746
  train_precision_macro_oob:
  - 0.9659071292939756
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719015
  train_precision_micro:
  - 0.9794579665113068
  - 0.9793725082336627
  - 0.978042876901798
  - 0.9784191367654707
  - 0.9768590743629745
  train_precision_micro_oob:
  - 0.9659071292939755
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719016
  train_precision_samples:
  - 0.9794579665113067
  - 0.9793725082336627
  - 0.9780428769017981
  - 0.9784191367654707
  - 0.9768590743629745
  train_precision_samples_oob:
  - 0.9659071292939754
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719015
  train_precision_weighted:
  - 0.9789889554406913
  - 0.9790282608400174
  - 0.9774261023727061
  - 0.9779827714847725
  - 0.9764919416892729
  train_precision_weighted_oob:
  - 0.965238312492155
  - 0.9662900165571
  - 0.9630070653732535
  - 0.9641652912493311
  - 0.9607940023597075
  train_recall_macro:
  - 0.9794579665113067
  - 0.9793725082336625
  - 0.9780428769017981
  - 0.9784191367654707
  - 0.9768590743629746
  train_recall_macro_oob:
  - 0.9659071292939756
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719015
  train_recall_micro:
  - 0.9794579665113068
  - 0.9793725082336627
  - 0.978042876901798
  - 0.9784191367654707
  - 0.9768590743629745
  train_recall_micro_oob:
  - 0.9659071292939755
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719016
  train_recall_samples:
  - 0.9794579665113067
  - 0.9793725082336627
  - 0.9780428769017981
  - 0.9784191367654707
  - 0.9768590743629745
  train_recall_samples_oob:
  - 0.9659071292939754
  - 0.9667186687467498
  - 0.9635200553250346
  - 0.9648119258103658
  - 0.9616051308719015
  train_recall_weighted:
  - 0.9789889554406913
  - 0.9790282608400174
  - 0.9774261023727061
  - 0.9779827714847725
  - 0.9764919416892729
  train_recall_weighted_oob:
  - 0.965238312492155
  - 0.9662900165571
  - 0.9630070653732535
  - 0.9641652912493311
  - 0.9607940023597075
  train_roc_auc_macro:
  - 0.9973519941103658
  - 0.997273284713808
  - 0.9971234304249257
  - 0.9972341466445851
  - 0.9969842781562123
  train_roc_auc_macro_oob:
  - 0.9882838839489861
  - 0.9886474843088034
  - 0.9889965508693038
  - 0.9877224879386942
  - 0.9878474333483585
  train_roc_auc_micro:
  - 0.9973794422206437
  - 0.9972280352260537
  - 0.9970788815449068
  - 0.9972652096357116
  - 0.9969361405966924
  train_roc_auc_micro_oob:
  - 0.9885528258533985
  - 0.9885853510668219
  - 0.9890778358241877
  - 0.9878922442032048
  - 0.9879835845252952
  train_roc_auc_samples:
  - 0.9929958570688762
  - 0.9919136765470619
  - 0.99236255186722
  - 0.9927457098283933
  - 0.9919396775871034
  train_roc_auc_samples_oob:
  - 0.9796866908337649
  - 0.9781591263650546
  - 0.979966286307054
  - 0.9783151326053043
  - 0.977028081123245
  train_roc_auc_weighted:
  - 0.9971524727370489
  - 0.9971299088070688
  - 0.9968804478404204
  - 0.9970790454351887
  - 0.9968201097856418
  train_roc_auc_weighted_oob:
  - 0.98763851970769
  - 0.988268057239133
  - 0.9884195395738422
  - 0.9871756004794898
  - 0.9872523133298039
start: 2023-12-22 20:48:30.555836
wrapper: null
