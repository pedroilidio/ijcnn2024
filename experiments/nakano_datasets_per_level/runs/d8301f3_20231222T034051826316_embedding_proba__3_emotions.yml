active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMLwEAzMzMzM+M/oJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r/gzMzMzMwEQMCZmZmZmfk/wJmZmZmZ+T+QmZmZmZkRwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:41:18.046128
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__3
  params: {}
hash: d8301f3245003a828863cce2db40e8ecbc72646a1e704968ea95bcf4b67d8346
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d8301f3_20231222T034051826316_embedding_proba__3_emotions.yml
results:
  fit_time:
  - 10.223552942276001
  - 10.772802591323853
  - 10.827013492584229
  - 11.413768768310547
  - 10.742223978042603
  score_time:
  - 3.4436159133911133
  - 3.5437610149383545
  - 3.9605348110198975
  - 3.903007984161377
  - 3.865532159805298
  test_average_precision_macro:
  - 0.7670252502461844
  - 0.7719420270984917
  - 0.7006117830776156
  - 0.747941449853936
  - 0.6454321815006108
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7671612495090058
  - 0.7808589253528115
  - 0.6891506301706456
  - 0.7560994191966748
  - 0.6534791701257624
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8218055555555556
  - 0.8312499999999998
  - 0.7850664767331434
  - 0.8140788224121557
  - 0.76323396567299
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7623524773538378
  - 0.7754824932420686
  - 0.7038087858779948
  - 0.7485587291633712
  - 0.6607744776172065
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7347222222222222
  - 0.742816091954023
  - 0.7207977207977208
  - 0.7350427350427351
  - 0.7289972899728997
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7347222222222223
  - 0.742816091954023
  - 0.7207977207977208
  - 0.7350427350427351
  - 0.7289972899728997
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7347222222222222
  - 0.7428160919540232
  - 0.7207977207977209
  - 0.7350427350427349
  - 0.7289972899728999
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7221846846846848
  - 0.7356065270935961
  - 0.7129210658622422
  - 0.7264957264957266
  - 0.7207573427085622
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5852455700091835
  - 0.5935159060692392
  - 0.5650137379946168
  - 0.5843360903714959
  - 0.5753936721726511
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5806805708013172
  - 0.5908571428571429
  - 0.5634743875278396
  - 0.581081081081081
  - 0.5735607675906184
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5982142857142858
  - 0.6083743842364532
  - 0.585144485144485
  - 0.5978835978835977
  - 0.5911730545876888
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5700645984043387
  - 0.5841408372768477
  - 0.5556603580289418
  - 0.5735785429423328
  - 0.5655710619327231
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8218055555555555
  - 0.83125
  - 0.7850664767331432
  - 0.8140788224121557
  - 0.7632339656729898
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.28644064014909265
  - 0.3275213082584077
  - 0.2543148565811659
  - 0.2778423014755453
  - 0.21070868341662916
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.30314916339120956
  - 0.3727749851064816
  - 0.26563132160547004
  - 0.3152412717423609
  - 0.24751808947271742
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.16858339782659565
  - 0.23282787011999495
  - 0.1644946637939863
  - 0.19348016059840967
  - 0.15884275627212363
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2780362018304617
  - 0.3326624950233671
  - 0.25635331049947724
  - 0.28013602067435217
  - 0.21789196228383526
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8779026273133802
  - 0.8876048839069793
  - 0.8520034131314359
  - 0.8709679505313442
  - 0.8351310795093707
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6166666666666667
  - -2.793103448275862
  - -2.8034188034188032
  - -2.7094017094017095
  - -2.8048780487804876
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2652777777777778
  - -0.257183908045977
  - -0.2792022792022792
  - -0.26495726495726496
  - -0.27100271002710025
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2652777777777778
  - -0.257183908045977
  - -0.2792022792022792
  - -0.26495726495726496
  - -0.27100271002710025
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2652777777777777
  - -0.25718390804597696
  - -0.27920227920227925
  - -0.26495726495726496
  - -0.2710027100271003
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2778153153153153
  - -0.2643934729064039
  - -0.2870789341377577
  - -0.27350427350427353
  - -0.2792426572914378
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13465277777777776
  - -0.14873084291187735
  - -0.17602089268755935
  - -0.15417853751187083
  - -0.18640469738030713
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7347222222222222
  - 0.742816091954023
  - 0.7207977207977208
  - 0.7350427350427351
  - 0.7289972899728997
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7347222222222223
  - 0.742816091954023
  - 0.7207977207977208
  - 0.7350427350427351
  - 0.7289972899728997
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7347222222222222
  - 0.7428160919540232
  - 0.7207977207977209
  - 0.7350427350427349
  - 0.7289972899728999
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7221846846846848
  - 0.7356065270935961
  - 0.7129210658622422
  - 0.7264957264957266
  - 0.7207573427085622
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7347222222222222
  - 0.742816091954023
  - 0.7207977207977208
  - 0.7350427350427351
  - 0.7289972899728997
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7347222222222223
  - 0.742816091954023
  - 0.7207977207977208
  - 0.7350427350427351
  - 0.7289972899728997
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7347222222222222
  - 0.7428160919540232
  - 0.7207977207977209
  - 0.7350427350427349
  - 0.7289972899728999
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7221846846846848
  - 0.7356065270935961
  - 0.7129210658622422
  - 0.7264957264957266
  - 0.7207573427085622
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8662897447510031
  - 0.8569541245136322
  - 0.8234161402346906
  - 0.8561621146108923
  - 0.8155022572447924
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8836245884438657
  - 0.8664970490314771
  - 0.8399450616645188
  - 0.8728078882932963
  - 0.8263583350792654
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8653472222222223
  - 0.8512691570881226
  - 0.8239791073124405
  - 0.8458214624881292
  - 0.8135953026196928
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8620187667145033
  - 0.854915404653372
  - 0.8228475649759577
  - 0.8523616585700703
  - 0.8216809304807408
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8984385904776516
  - 0.8874222408780028
  - 0.8998251175393085
  - 0.8882528581584821
  - 0.8945750754227019
  train_average_precision_macro_oob:
  - 0.8772075535804044
  - 0.8573139890476592
  - 0.8818758076061958
  - 0.876477431014227
  - 0.8732157449608913
  train_average_precision_micro:
  - 0.9021748083569716
  - 0.8936028053901389
  - 0.9049853394021602
  - 0.8941479726801809
  - 0.8997846298795646
  train_average_precision_micro_oob:
  - 0.8833035207017639
  - 0.8686780764586013
  - 0.8893076459722086
  - 0.881663888755646
  - 0.8783063908998482
  train_average_precision_samples:
  - 0.9077871740662438
  - 0.9041462846494291
  - 0.9124299719887956
  - 0.9053863211951447
  - 0.9078664302600472
  train_average_precision_samples_oob:
  - 0.8956483439041578
  - 0.8880444910319124
  - 0.8962301587301588
  - 0.8957107843137255
  - 0.8882624113475177
  train_average_precision_weighted:
  - 0.899910246699303
  - 0.8894256625234407
  - 0.9022612639170534
  - 0.8897939775235856
  - 0.8952748969757736
  train_average_precision_weighted_oob:
  - 0.8798140222067398
  - 0.8610416157187081
  - 0.8857790466652219
  - 0.8781952757600046
  - 0.8753406783236111
  train_f1_macro:
  - 0.8114869626497533
  - 0.8113207547169812
  - 0.8112745098039215
  - 0.8105742296918766
  - 0.8060283687943262
  train_f1_macro_oob:
  - 0.7748414376321353
  - 0.7784765897973446
  - 0.774859943977591
  - 0.7794117647058822
  - 0.7723404255319148
  train_f1_micro:
  - 0.8114869626497534
  - 0.8113207547169812
  - 0.8112745098039216
  - 0.8105742296918768
  - 0.8060283687943263
  train_f1_micro_oob:
  - 0.7748414376321353
  - 0.7784765897973445
  - 0.7748599439775911
  - 0.7794117647058824
  - 0.7723404255319148
  train_f1_samples:
  - 0.8114869626497534
  - 0.8113207547169812
  - 0.8112745098039215
  - 0.8105742296918769
  - 0.8060283687943262
  train_f1_samples_oob:
  - 0.7748414376321353
  - 0.7784765897973446
  - 0.774859943977591
  - 0.7794117647058824
  - 0.7723404255319148
  train_f1_weighted:
  - 0.8066326554961127
  - 0.8058187958298946
  - 0.8062608357886558
  - 0.8054938510837407
  - 0.801354401805869
  train_f1_weighted_oob:
  - 0.7699974706379241
  - 0.7748560478860147
  - 0.7704352315898173
  - 0.7762262385269068
  - 0.7671461505211085
  train_jaccard_macro:
  - 0.6836404897432337
  - 0.6835594949506708
  - 0.6833421878915648
  - 0.6822762735934674
  - 0.675793021995259
  train_jaccard_macro_oob:
  - 0.6335958718810778
  - 0.6381466858768587
  - 0.6332495888395435
  - 0.6390765087232219
  - 0.6302085169756187
  train_jaccard_micro:
  - 0.6827749777646013
  - 0.6825396825396826
  - 0.6824742268041237
  - 0.6814836620547542
  - 0.675081675081675
  train_jaccard_micro_oob:
  - 0.6324417601380501
  - 0.6372997711670481
  - 0.6324664189768505
  - 0.6385542168674698
  - 0.6291161178509532
  train_jaccard_samples:
  - 0.7033625289439241
  - 0.7036038734151941
  - 0.7034813925570227
  - 0.7024309723889556
  - 0.6957953394123607
  train_jaccard_samples_oob:
  - 0.6520185241115474
  - 0.6570829589697514
  - 0.6521608643457382
  - 0.6599639855942377
  - 0.6486322188449848
  train_jaccard_weighted:
  - 0.6769238832064647
  - 0.6759724012345351
  - 0.6764002799999376
  - 0.6752945691369617
  - 0.6693773679600756
  train_jaccard_weighted_oob:
  - 0.6271991821457824
  - 0.6332948299402221
  - 0.6274524372113168
  - 0.6348200889913634
  - 0.6233459405444117
  train_label_ranking_average_precision_score:
  - 0.9077871740662435
  - 0.9041462846494285
  - 0.912429971988795
  - 0.9053863211951444
  - 0.9078664302600468
  train_label_ranking_average_precision_score_oob:
  - 0.8956483439041573
  - 0.8880444910319115
  - 0.8962301587301581
  - 0.8957107843137245
  - 0.8882624113475172
  train_matthews_corrcoef_macro:
  - 0.5495925145855963
  - 0.5462851082110217
  - 0.5473110688811424
  - 0.54690002081361
  - 0.5374497489119395
  train_matthews_corrcoef_macro_oob:
  - 0.4397426413770647
  - 0.4399401930373714
  - 0.43796785056514426
  - 0.4497919046598721
  - 0.43940222476686114
  train_matthews_corrcoef_micro:
  - 0.5576204740823322
  - 0.5528895346946717
  - 0.5549922313926464
  - 0.5540859723366337
  - 0.5461322723903346
  train_matthews_corrcoef_micro_oob:
  - 0.45762890419738445
  - 0.4608851592244538
  - 0.455375200031082
  - 0.4691158674621977
  - 0.4540386247022035
  train_matthews_corrcoef_samples:
  - 0.455465413413617
  - 0.4475450537192702
  - 0.43912130519292103
  - 0.44281298360202886
  - 0.4368088322123432
  train_matthews_corrcoef_samples_oob:
  - 0.3398484828669488
  - 0.33863108947564824
  - 0.3165963483502116
  - 0.342194759293053
  - 0.3191001151940712
  train_matthews_corrcoef_weighted:
  - 0.5517388631287762
  - 0.5472462472723045
  - 0.5491953035006497
  - 0.5487645765332464
  - 0.5403189664993779
  train_matthews_corrcoef_weighted_oob:
  - 0.4455811151079137
  - 0.4486369817980429
  - 0.4454688257711009
  - 0.4589426267701456
  - 0.4443505594845035
  train_ndgc:
  - 0.9394031052870074
  - 0.936401231493434
  - 0.9430247234230485
  - 0.9375624985013145
  - 0.9408147928413763
  train_ndgc_oob:
  - 0.9312413947295238
  - 0.9262522421758653
  - 0.9320331253832113
  - 0.9309393851639453
  - 0.9266517215378028
  train_neg_coverage_error:
  - -2.33615221987315
  - -2.331236897274633
  - -2.313025210084034
  - -2.331932773109244
  - -2.382978723404255
  train_neg_coverage_error_oob:
  - -2.4080338266384778
  - -2.419287211740042
  - -2.399159663865546
  - -2.3781512605042017
  - -2.4446808510638296
  train_neg_hamming_loss_macro:
  - -0.18851303735024663
  - -0.18867924528301885
  - -0.18872549019607843
  - -0.18942577030812324
  - -0.19397163120567376
  train_neg_hamming_loss_macro_oob:
  - -0.2251585623678647
  - -0.2215234102026555
  - -0.22514005602240897
  - -0.22058823529411764
  - -0.22765957446808513
  train_neg_hamming_loss_micro:
  - -0.18851303735024666
  - -0.18867924528301888
  - -0.18872549019607843
  - -0.18942577030812324
  - -0.19397163120567376
  train_neg_hamming_loss_micro_oob:
  - -0.2251585623678647
  - -0.22152341020265548
  - -0.22514005602240897
  - -0.22058823529411764
  - -0.2276595744680851
  train_neg_hamming_loss_samples:
  - -0.18851303735024663
  - -0.18867924528301888
  - -0.18872549019607845
  - -0.18942577030812324
  - -0.19397163120567376
  train_neg_hamming_loss_samples_oob:
  - -0.2251585623678647
  - -0.22152341020265548
  - -0.22514005602240894
  - -0.22058823529411764
  - -0.2276595744680851
  train_neg_hamming_loss_weighted:
  - -0.19336734450388712
  - -0.1941812041701054
  - -0.19373916421134407
  - -0.1945061489162594
  - -0.1986455981941309
  train_neg_hamming_loss_weighted_oob:
  - -0.23000252936207577
  - -0.2251439521139854
  - -0.22956476841018256
  - -0.2237737614730932
  - -0.23285384947889148
  train_neg_label_ranking_loss:
  - -0.07532887009631195
  - -0.07880270207314233
  - -0.07280578898225956
  - -0.0777719421101774
  - -0.07865248226950354
  train_neg_label_ranking_loss_oob:
  - -0.08805496828752643
  - -0.09299440950384347
  - -0.08778594771241831
  - -0.0856734360410831
  - -0.09268321513002364
  train_precision_macro:
  - 0.8114869626497533
  - 0.8113207547169812
  - 0.8112745098039215
  - 0.8105742296918766
  - 0.8060283687943262
  train_precision_macro_oob:
  - 0.7748414376321353
  - 0.7784765897973446
  - 0.774859943977591
  - 0.7794117647058822
  - 0.7723404255319148
  train_precision_micro:
  - 0.8114869626497534
  - 0.8113207547169812
  - 0.8112745098039216
  - 0.8105742296918768
  - 0.8060283687943263
  train_precision_micro_oob:
  - 0.7748414376321353
  - 0.7784765897973445
  - 0.7748599439775911
  - 0.7794117647058824
  - 0.7723404255319148
  train_precision_samples:
  - 0.8114869626497534
  - 0.8113207547169812
  - 0.8112745098039215
  - 0.8105742296918769
  - 0.8060283687943262
  train_precision_samples_oob:
  - 0.7748414376321353
  - 0.7784765897973446
  - 0.774859943977591
  - 0.7794117647058824
  - 0.7723404255319148
  train_precision_weighted:
  - 0.8066326554961127
  - 0.8058187958298946
  - 0.8062608357886558
  - 0.8054938510837407
  - 0.801354401805869
  train_precision_weighted_oob:
  - 0.7699974706379241
  - 0.7748560478860147
  - 0.7704352315898173
  - 0.7762262385269068
  - 0.7671461505211085
  train_recall_macro:
  - 0.8114869626497533
  - 0.8113207547169812
  - 0.8112745098039215
  - 0.8105742296918766
  - 0.8060283687943262
  train_recall_macro_oob:
  - 0.7748414376321353
  - 0.7784765897973446
  - 0.774859943977591
  - 0.7794117647058822
  - 0.7723404255319148
  train_recall_micro:
  - 0.8114869626497534
  - 0.8113207547169812
  - 0.8112745098039216
  - 0.8105742296918768
  - 0.8060283687943263
  train_recall_micro_oob:
  - 0.7748414376321353
  - 0.7784765897973445
  - 0.7748599439775911
  - 0.7794117647058824
  - 0.7723404255319148
  train_recall_samples:
  - 0.8114869626497534
  - 0.8113207547169812
  - 0.8112745098039215
  - 0.8105742296918769
  - 0.8060283687943262
  train_recall_samples_oob:
  - 0.7748414376321353
  - 0.7784765897973446
  - 0.774859943977591
  - 0.7794117647058824
  - 0.7723404255319148
  train_recall_weighted:
  - 0.8066326554961127
  - 0.8058187958298946
  - 0.8062608357886558
  - 0.8054938510837407
  - 0.801354401805869
  train_recall_weighted_oob:
  - 0.7699974706379241
  - 0.7748560478860147
  - 0.7704352315898173
  - 0.7762262385269068
  - 0.7671461505211085
  train_roc_auc_macro:
  - 0.9334733053678109
  - 0.9285657845542691
  - 0.9364023937198614
  - 0.9247368152591854
  - 0.9297744537066515
  train_roc_auc_macro_oob:
  - 0.9210706718302105
  - 0.9146744796087797
  - 0.9255953950408301
  - 0.9185546842227991
  - 0.918170410716181
  train_roc_auc_micro:
  - 0.9384309199570736
  - 0.9352298358870653
  - 0.9403986136868931
  - 0.9324215128929931
  - 0.936146210966406
  train_roc_auc_micro_oob:
  - 0.9272211403249083
  - 0.9224838609317882
  - 0.9301169250782851
  - 0.9269401822992765
  - 0.9242525929021128
  train_roc_auc_samples:
  - 0.924671129903688
  - 0.9211972979268577
  - 0.9271942110177404
  - 0.9222280578898225
  - 0.9213475177304964
  train_roc_auc_samples_oob:
  - 0.9119450317124737
  - 0.9070055904961565
  - 0.9122140522875816
  - 0.9143265639589169
  - 0.9073167848699764
  train_roc_auc_weighted:
  - 0.9327510318601449
  - 0.9281568703912282
  - 0.9361411059254388
  - 0.9241793595235712
  - 0.9283006826950316
  train_roc_auc_weighted_oob:
  - 0.9207448316683586
  - 0.9147736944298459
  - 0.9260542535571771
  - 0.9179956146495942
  - 0.9175089966230761
start: 2023-12-22 03:40:51.826316
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
