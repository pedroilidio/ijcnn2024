active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0CAZmZmZmb2P4CZmZmZmfm/ADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:35:56.759126
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - rf
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    - - xt
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: false
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba_weak__3
  params: {}
hash: d048e140eb440e84a224e6fc5540be5e64451e26f2a739b4622b766fc46fe220
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d048e14_20231221T083541987469_proba_weak__3_VirusGO.yml
results:
  fit_time:
  - 9.85536003112793
  - 9.86244010925293
  - 9.925757646560669
  - 9.986074686050415
  - 10.009426832199097
  score_time:
  - 1.0811679363250732
  - 1.0768942832946777
  - 1.1106185913085938
  - 1.0947933197021484
  - 1.1705236434936523
  test_average_precision_macro:
  - 0.865492847907985
  - 0.8831973018851843
  - 0.904220159453387
  - 0.9730187566633001
  - 0.8951269760393178
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7697388032938031
  - 0.7858994319821169
  - 0.78055336744977
  - 0.831952074935028
  - 0.7500145393513765
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8320512820512821
  - 0.9008333333333333
  - 0.8806201550387597
  - 0.8380952380952381
  - 0.7887596899224806
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8780715464732493
  - 0.8868537091093435
  - 0.9074709610337017
  - 0.9733778556202262
  - 0.8770636759681915
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8162393162393163
  - 0.8333333333333334
  - 0.8643410852713177
  - 0.8373015873015873
  - 0.8255813953488372
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8162393162393162
  - 0.8333333333333334
  - 0.8643410852713178
  - 0.8373015873015873
  - 0.8255813953488372
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8162393162393163
  - 0.8333333333333334
  - 0.8643410852713178
  - 0.8373015873015874
  - 0.8255813953488373
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7350427350427351
  - 0.7549019607843138
  - 0.8037209302325582
  - 0.762390670553936
  - 0.7441860465116278
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7045180088268171
  - 0.728532048269118
  - 0.7708227081935287
  - 0.7358322726156182
  - 0.7181930809333598
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6895306859205776
  - 0.7142857142857143
  - 0.7610921501706485
  - 0.7201365187713311
  - 0.7029702970297029
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7063492063492064
  - 0.7315476190476191
  - 0.7774086378737542
  - 0.7329931972789117
  - 0.7142857142857143
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.592253707797585
  - 0.6156226050952182
  - 0.6801262542928197
  - 0.6328625979768207
  - 0.6042070490868557
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.832051282051282
  - 0.9008333333333333
  - 0.8806201550387596
  - 0.8380952380952381
  - 0.7887596899224806
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12744029309062488
  - 0.13991467889247075
  - 0.18181368882046942
  - 0.09958262927548561
  - 0.09884015942606293
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3563946948999621
  - 0.4156857130424065
  - 0.5021798673181833
  - 0.3623915100588261
  - 0.3037070778971251
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.19095419475640918
  - 0.2674341649025257
  - 0.35499793172249655
  - 0.20077275076270654
  - 0.15964909451319423
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.25488058618124976
  - 0.29066800089067807
  - 0.37944974479446714
  - 0.1951006614376861
  - 0.19768031885212586
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8788543887582367
  - 0.931299590073043
  - 0.9155031405431109
  - 0.8813635171272849
  - 0.8425239331501408
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.9487179487179487
  - -1.675
  - -1.6046511627906976
  - -1.6904761904761905
  - -1.813953488372093
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18376068376068377
  - -0.16666666666666666
  - -0.13565891472868216
  - -0.1626984126984127
  - -0.1744186046511628
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18376068376068377
  - -0.16666666666666666
  - -0.13565891472868216
  - -0.1626984126984127
  - -0.1744186046511628
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18376068376068372
  - -0.16666666666666666
  - -0.13565891472868216
  - -0.1626984126984127
  - -0.1744186046511628
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26495726495726496
  - -0.24509803921568626
  - -0.19627906976744186
  - -0.23760932944606417
  - -0.2558139534883721
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.11631054131054132
  - -0.06618055555555555
  - -0.07616279069767443
  - -0.09880952380952382
  - -0.12500000000000003
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8162393162393163
  - 0.8333333333333334
  - 0.8643410852713177
  - 0.8373015873015873
  - 0.8255813953488372
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8162393162393162
  - 0.8333333333333334
  - 0.8643410852713178
  - 0.8373015873015873
  - 0.8255813953488372
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8162393162393163
  - 0.8333333333333334
  - 0.8643410852713178
  - 0.8373015873015874
  - 0.8255813953488373
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7350427350427351
  - 0.7549019607843138
  - 0.8037209302325582
  - 0.762390670553936
  - 0.7441860465116278
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8162393162393163
  - 0.8333333333333334
  - 0.8643410852713177
  - 0.8373015873015873
  - 0.8255813953488372
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8162393162393162
  - 0.8333333333333334
  - 0.8643410852713178
  - 0.8373015873015873
  - 0.8255813953488372
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8162393162393163
  - 0.8333333333333334
  - 0.8643410852713178
  - 0.8373015873015874
  - 0.8255813953488373
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7350427350427351
  - 0.7549019607843138
  - 0.8037209302325582
  - 0.762390670553936
  - 0.7441860465116278
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9209530971479502
  - 0.9402759401960168
  - 0.964798893916541
  - 0.9919028340080972
  - 0.947392204745146
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8978356369870353
  - 0.9198049590206453
  - 0.9274038461538462
  - 0.9373680506685433
  - 0.91342237378043
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8836894586894589
  - 0.9338194444444443
  - 0.9238372093023255
  - 0.9011904761904762
  - 0.875
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9201449898141075
  - 0.9298031465550647
  - 0.9486564102564102
  - 0.9889696769396017
  - 0.9322104910340204
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9325387595603832
  - 0.9387383738596456
  - 0.9032518505972124
  - 0.9183916524351018
  - 0.9429478186307997
  train_average_precision_macro_oob:
  - 0.8955358039035343
  - 0.9171306306930677
  - 0.8907364647899048
  - 0.8702081002737506
  - 0.9210249714705284
  train_average_precision_micro:
  - 0.7994724330155216
  - 0.8037684237510172
  - 0.7642679711320246
  - 0.8371734502536631
  - 0.8406809351270859
  train_average_precision_micro_oob:
  - 0.7746434711769903
  - 0.7835703282604553
  - 0.767539210137518
  - 0.8092616844471874
  - 0.8197921835414389
  train_average_precision_samples:
  - 0.8640873015873015
  - 0.8774451097804391
  - 0.8615176151761518
  - 0.8572727272727272
  - 0.890650406504065
  train_average_precision_samples_oob:
  - 0.8377976190476191
  - 0.8573852295409182
  - 0.8442411924119241
  - 0.8330134680134679
  - 0.8717479674796746
  train_average_precision_weighted:
  - 0.923702374830029
  - 0.9350498369244653
  - 0.878276570619263
  - 0.926108726711054
  - 0.9483902166839693
  train_average_precision_weighted_oob:
  - 0.8914619760875112
  - 0.9158957137982803
  - 0.8899284664079604
  - 0.8926281774439253
  - 0.9355707859764236
  train_f1_macro:
  - 0.8452380952380953
  - 0.8562874251497007
  - 0.8709349593495935
  - 0.8323232323232324
  - 0.8445121951219511
  train_f1_macro_oob:
  - 0.8353174603174605
  - 0.8483033932135728
  - 0.8638211382113821
  - 0.8292929292929293
  - 0.8333333333333334
  train_f1_micro:
  - 0.8452380952380952
  - 0.8562874251497006
  - 0.8709349593495935
  - 0.8323232323232324
  - 0.8445121951219512
  train_f1_micro_oob:
  - 0.8353174603174603
  - 0.8483033932135728
  - 0.8638211382113821
  - 0.8292929292929293
  - 0.8333333333333334
  train_f1_samples:
  - 0.8452380952380952
  - 0.8562874251497006
  - 0.8709349593495934
  - 0.8323232323232322
  - 0.8445121951219512
  train_f1_samples_oob:
  - 0.8353174603174602
  - 0.8483033932135726
  - 0.8638211382113821
  - 0.8292929292929292
  - 0.8333333333333333
  train_f1_weighted:
  - 0.777215114901682
  - 0.8033783179908839
  - 0.8355167833856557
  - 0.7526496492013733
  - 0.777878898191967
  train_f1_weighted_oob:
  - 0.7570184790334044
  - 0.7871123424792207
  - 0.8212388312001933
  - 0.7465591879384983
  - 0.7546110908870283
  train_jaccard_macro:
  - 0.7425704408492516
  - 0.7561311895459247
  - 0.7758833869626557
  - 0.7304853649532009
  - 0.7410788443296182
  train_jaccard_macro_oob:
  - 0.7306527077355195
  - 0.7457762726191689
  - 0.7657224353413931
  - 0.7262550296029805
  - 0.7278778140053003
  train_jaccard_micro:
  - 0.7319587628865979
  - 0.7486910994764397
  - 0.7713771377137714
  - 0.71280276816609
  - 0.7308707124010554
  train_jaccard_micro_oob:
  - 0.717206132879046
  - 0.7365684575389948
  - 0.7602862254025045
  - 0.7083692838654012
  - 0.7142857142857143
  train_jaccard_samples:
  - 0.7490079365079365
  - 0.7631879098944968
  - 0.7893437862950059
  - 0.7278499278499279
  - 0.7478222996515679
  train_jaccard_samples_oob:
  - 0.7328514739229025
  - 0.7499287140005704
  - 0.7784552845528455
  - 0.7235209235209236
  - 0.7286585365853658
  train_jaccard_weighted:
  - 0.6426936780883212
  - 0.6765271283360716
  - 0.7204932481071068
  - 0.6212581628752611
  - 0.6431945159684175
  train_jaccard_weighted_oob:
  - 0.6184242164584958
  - 0.6554198937215017
  - 0.7001111797938775
  - 0.6127558139940299
  - 0.6157228867309239
  train_label_ranking_average_precision_score:
  - 0.8640873015873014
  - 0.8774451097804391
  - 0.861517615176152
  - 0.8572727272727274
  - 0.890650406504065
  train_label_ranking_average_precision_score_oob:
  - 0.8377976190476187
  - 0.8573852295409179
  - 0.8442411924119241
  - 0.8330134680134679
  - 0.8717479674796746
  train_matthews_corrcoef_macro:
  - 0.15441509346116147
  - 0.17695329386222983
  - 0.21009795016102206
  - 0.1049642527895799
  - 0.15807685197343604
  train_matthews_corrcoef_macro_oob:
  - 0.13099080664056847
  - 0.16349411785422527
  - 0.1962271728182221
  - 0.09913721616969497
  - 0.13787292233045054
  train_matthews_corrcoef_micro:
  - 0.4298349325527827
  - 0.4853062625019586
  - 0.5595854897145772
  - 0.3841455776175554
  - 0.44239140682584543
  train_matthews_corrcoef_micro_oob:
  - 0.37488007261642864
  - 0.44949251216906017
  - 0.530075387410184
  - 0.36733564770631205
  - 0.3880381776039915
  train_matthews_corrcoef_samples:
  - 0.27300542300040087
  - 0.3230643355962425
  - 0.4059254202185165
  - 0.21945146215556569
  - 0.28714694992867734
  train_matthews_corrcoef_samples_oob:
  - 0.2204312829287719
  - 0.27218190088905064
  - 0.37382230397420346
  - 0.20572472843394535
  - 0.21479993124533983
  train_matthews_corrcoef_weighted:
  - 0.3162141786375193
  - 0.35971107147424003
  - 0.42374322506051476
  - 0.21096263614851526
  - 0.32333579322601425
  train_matthews_corrcoef_weighted_oob:
  - 0.2686564430647184
  - 0.33226521006594145
  - 0.39590446859686007
  - 0.1992511536809633
  - 0.2810239526767643
  train_ndgc:
  - 0.9005943903474638
  - 0.9099699725038403
  - 0.8989900734629332
  - 0.8970724500906925
  - 0.9213401627836445
  train_ndgc_oob:
  - 0.8806213277903758
  - 0.8957343449628805
  - 0.8860515095612306
  - 0.8783280831451951
  - 0.9080066246072651
  train_neg_coverage_error:
  - -1.630952380952381
  - -1.598802395209581
  - -1.7073170731707317
  - -1.7454545454545454
  - -1.6219512195121952
  train_neg_coverage_error_oob:
  - -1.7321428571428572
  - -1.7005988023952097
  - -1.7621951219512195
  - -1.878787878787879
  - -1.6951219512195121
  train_neg_hamming_loss_macro:
  - -0.15476190476190477
  - -0.1437125748502994
  - -0.1290650406504065
  - -0.16767676767676767
  - -0.15548780487804878
  train_neg_hamming_loss_macro_oob:
  - -0.16468253968253968
  - -0.15169660678642713
  - -0.13617886178861788
  - -0.1707070707070707
  - -0.1666666666666667
  train_neg_hamming_loss_micro:
  - -0.15476190476190477
  - -0.1437125748502994
  - -0.1290650406504065
  - -0.16767676767676767
  - -0.15548780487804878
  train_neg_hamming_loss_micro_oob:
  - -0.16468253968253968
  - -0.15169660678642716
  - -0.13617886178861788
  - -0.1707070707070707
  - -0.16666666666666666
  train_neg_hamming_loss_samples:
  - -0.15476190476190477
  - -0.1437125748502994
  - -0.1290650406504065
  - -0.16767676767676767
  - -0.15548780487804878
  train_neg_hamming_loss_samples_oob:
  - -0.16468253968253968
  - -0.15169660678642713
  - -0.13617886178861788
  - -0.1707070707070707
  - -0.16666666666666663
  train_neg_hamming_loss_weighted:
  - -0.22278488509831793
  - -0.19662168200911606
  - -0.16448321661434437
  - -0.2473503507986267
  - -0.22212110180803304
  train_neg_hamming_loss_weighted_oob:
  - -0.2429815209665956
  - -0.21288765752077932
  - -0.1787611687998068
  - -0.25344081206150176
  - -0.24538890911297176
  train_neg_label_ranking_loss:
  - -0.08273809523809524
  - -0.07566533599467733
  - -0.08983739837398375
  - -0.09377104377104377
  - -0.07162940379403794
  train_neg_label_ranking_loss_oob:
  - -0.102744708994709
  - -0.09303060545575516
  - -0.101880081300813
  - -0.12269360269360272
  - -0.08458672086720868
  train_precision_macro:
  - 0.8452380952380953
  - 0.8562874251497007
  - 0.8709349593495935
  - 0.8323232323232324
  - 0.8445121951219511
  train_precision_macro_oob:
  - 0.8353174603174605
  - 0.8483033932135728
  - 0.8638211382113821
  - 0.8292929292929293
  - 0.8333333333333334
  train_precision_micro:
  - 0.8452380952380952
  - 0.8562874251497006
  - 0.8709349593495935
  - 0.8323232323232324
  - 0.8445121951219512
  train_precision_micro_oob:
  - 0.8353174603174603
  - 0.8483033932135728
  - 0.8638211382113821
  - 0.8292929292929293
  - 0.8333333333333334
  train_precision_samples:
  - 0.8452380952380952
  - 0.8562874251497006
  - 0.8709349593495934
  - 0.8323232323232322
  - 0.8445121951219512
  train_precision_samples_oob:
  - 0.8353174603174602
  - 0.8483033932135726
  - 0.8638211382113821
  - 0.8292929292929292
  - 0.8333333333333333
  train_precision_weighted:
  - 0.777215114901682
  - 0.8033783179908839
  - 0.8355167833856557
  - 0.7526496492013733
  - 0.777878898191967
  train_precision_weighted_oob:
  - 0.7570184790334044
  - 0.7871123424792207
  - 0.8212388312001933
  - 0.7465591879384983
  - 0.7546110908870283
  train_recall_macro:
  - 0.8452380952380953
  - 0.8562874251497007
  - 0.8709349593495935
  - 0.8323232323232324
  - 0.8445121951219511
  train_recall_macro_oob:
  - 0.8353174603174605
  - 0.8483033932135728
  - 0.8638211382113821
  - 0.8292929292929293
  - 0.8333333333333334
  train_recall_micro:
  - 0.8452380952380952
  - 0.8562874251497006
  - 0.8709349593495935
  - 0.8323232323232324
  - 0.8445121951219512
  train_recall_micro_oob:
  - 0.8353174603174603
  - 0.8483033932135728
  - 0.8638211382113821
  - 0.8292929292929293
  - 0.8333333333333334
  train_recall_samples:
  - 0.8452380952380952
  - 0.8562874251497006
  - 0.8709349593495934
  - 0.8323232323232322
  - 0.8445121951219512
  train_recall_samples_oob:
  - 0.8353174603174602
  - 0.8483033932135726
  - 0.8638211382113821
  - 0.8292929292929292
  - 0.8333333333333333
  train_recall_weighted:
  - 0.777215114901682
  - 0.8033783179908839
  - 0.8355167833856557
  - 0.7526496492013733
  - 0.777878898191967
  train_recall_weighted_oob:
  - 0.7570184790334044
  - 0.7871123424792207
  - 0.8212388312001933
  - 0.7465591879384983
  - 0.7546110908870283
  train_roc_auc_macro:
  - 0.971786707267631
  - 0.9662934203284997
  - 0.9592863397042284
  - 0.969147579501782
  - 0.9743137957175456
  train_roc_auc_macro_oob:
  - 0.9652499839144081
  - 0.953228781528708
  - 0.9513380889600951
  - 0.9521002588570179
  - 0.969961890622728
  train_roc_auc_micro:
  - 0.9307027440246105
  - 0.926851386016236
  - 0.923536375376668
  - 0.9368243814197457
  - 0.9379761473602614
  train_roc_auc_micro_oob:
  - 0.9214275586133767
  - 0.9155719529692362
  - 0.9155250563419512
  - 0.9210508196618699
  - 0.9261864369086877
  train_roc_auc_samples:
  - 0.9172619047619046
  - 0.9243346640053226
  - 0.9101626016260161
  - 0.9062289562289562
  - 0.928370596205962
  train_roc_auc_samples_oob:
  - 0.897255291005291
  - 0.9069693945442447
  - 0.898119918699187
  - 0.8773063973063974
  - 0.9154132791327915
  train_roc_auc_weighted:
  - 0.9612480111288989
  - 0.9592984820162118
  - 0.9441306654055321
  - 0.9668318552859199
  - 0.9758583583558649
  train_roc_auc_weighted_oob:
  - 0.9514632207517078
  - 0.946803982729989
  - 0.9370457116666453
  - 0.9497873868175969
  - 0.9690951403983398
start: 2023-12-21 08:35:41.987469
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
