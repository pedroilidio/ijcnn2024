active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/zMzMzMzM/L80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEEAAAAAAAADwPwAAAAAAAAjAAAAAAAAAAMAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:10:16.267795
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__6
  params: {}
hash: bf0c8ddd3076e86757eed4115f20cf2594d378d9a5a14bcf1ccde535efc605f5
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bf0c8dd_20231221T220927527048_embedding_proba__6_CHD_49.yml
results:
  fit_time:
  - 28.497806787490845
  - 27.700929164886475
  - 27.765366077423096
  - 28.738868236541748
  - 30.726346731185913
  score_time:
  - 5.344917297363281
  - 5.515579462051392
  - 5.660881519317627
  - 5.840784072875977
  - 5.80547022819519
  test_average_precision_macro:
  - 0.5412124348736813
  - 0.4635040126784617
  - 0.5657474997148629
  - 0.5164165357057713
  - 0.5269470300945623
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7083088761032993
  - 0.6325095970181989
  - 0.6752870799112972
  - 0.6547970846816479
  - 0.6893026938019966
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8198468328141225
  - 0.769431818181818
  - 0.790095029239766
  - 0.7978367748279254
  - 0.7846471471471469
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6674083115176155
  - 0.5836135152194577
  - 0.6582893787162486
  - 0.6226825706511246
  - 0.6618750329095516
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.721183800623053
  - 0.6803030303030303
  - 0.7280701754385964
  - 0.696165191740413
  - 0.7132132132132133
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.721183800623053
  - 0.6803030303030303
  - 0.7280701754385965
  - 0.696165191740413
  - 0.7132132132132132
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.721183800623053
  - 0.6803030303030304
  - 0.7280701754385965
  - 0.696165191740413
  - 0.7132132132132133
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6774393830468596
  - 0.6312918660287081
  - 0.678149366471735
  - 0.6517944936086528
  - 0.6685633001422474
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5817311671176305
  - 0.5355003886438543
  - 0.5887980042896224
  - 0.554567025553942
  - 0.5733983527051879
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5639464068209501
  - 0.5154994259471871
  - 0.5724137931034483
  - 0.5339366515837104
  - 0.5542590431738623
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6070841930655014
  - 0.5636127508854782
  - 0.6126642363484467
  - 0.5753668160747806
  - 0.5955812955812957
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5172471584177272
  - 0.46468749457519276
  - 0.5168906920620885
  - 0.4912871464077982
  - 0.5065920402528626
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8291926272066458
  - 0.7694318181818185
  - 0.7900950292397659
  - 0.7978367748279253
  - 0.8026651651651651
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.17786438569175902
  - 0.0829095118345916
  - 0.20667910213269744
  - 0.12776603262208974
  - 0.16280623743008749
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4350953542482963
  - 0.35048721837134833
  - 0.4417141204392506
  - 0.3859529985376266
  - 0.4218732349860291
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4503341621721251
  - 0.3792014194074483
  - 0.4413475003266835
  - 0.40748548441584687
  - 0.44519666588167267
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.18036389694505897
  - 0.08797170645922973
  - 0.21528328471974503
  - 0.12049089618365379
  - 0.1812659764214585
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.87940751036653
  - 0.8464363110674512
  - 0.8590049219722393
  - 0.8677301362585342
  - 0.8543924347201958
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.532710280373832
  - -3.8
  - -3.5964912280701755
  - -3.601769911504425
  - -3.5945945945945947
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.278816199376947
  - -0.31969696969696976
  - -0.2719298245614035
  - -0.30383480825958703
  - -0.28678678678678676
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.278816199376947
  - -0.3196969696969697
  - -0.2719298245614035
  - -0.30383480825958703
  - -0.28678678678678676
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.278816199376947
  - -0.3196969696969697
  - -0.2719298245614035
  - -0.30383480825958703
  - -0.28678678678678676
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32256061695314026
  - -0.36870813397129193
  - -0.3218506335282651
  - -0.3482055063913471
  - -0.3314366998577525
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17045690550363446
  - -0.24164141414141413
  - -0.2027046783625731
  - -0.20088495575221238
  - -0.1993243243243243
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.721183800623053
  - 0.6803030303030303
  - 0.7280701754385964
  - 0.696165191740413
  - 0.7132132132132133
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.721183800623053
  - 0.6803030303030303
  - 0.7280701754385965
  - 0.696165191740413
  - 0.7132132132132132
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.721183800623053
  - 0.6803030303030304
  - 0.7280701754385965
  - 0.696165191740413
  - 0.7132132132132133
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6774393830468596
  - 0.6312918660287081
  - 0.678149366471735
  - 0.6517944936086528
  - 0.6685633001422474
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.721183800623053
  - 0.6803030303030303
  - 0.7280701754385964
  - 0.696165191740413
  - 0.7132132132132133
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.721183800623053
  - 0.6803030303030303
  - 0.7280701754385965
  - 0.696165191740413
  - 0.7132132132132132
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.721183800623053
  - 0.6803030303030304
  - 0.7280701754385965
  - 0.696165191740413
  - 0.7132132132132133
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6774393830468596
  - 0.6312918660287081
  - 0.678149366471735
  - 0.6517944936086528
  - 0.6685633001422474
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5854965219884124
  - 0.48183207766350217
  - 0.6387483948470347
  - 0.5660782810915787
  - 0.5782058412376749
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7948750687514732
  - 0.7386573099415203
  - 0.7920524691358024
  - 0.7680733618233618
  - 0.7820232997191141
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.758358585858586
  - 0.7972953216374269
  - 0.7991150442477876
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6105625431987305
  - 0.5269033892218661
  - 0.6256982822838404
  - 0.5650624552877956
  - 0.6179486768357686
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9985728913957228
  - 0.9961860280208832
  - 0.9989135586543373
  - 0.9980494021674877
  - 0.9982442936379115
  train_average_precision_macro_oob:
  - 0.8624416150840114
  - 0.865925060590046
  - 0.877899397116371
  - 0.8429461015498569
  - 0.8810765373681583
  train_average_precision_micro:
  - 0.9953238990892677
  - 0.9948885215785525
  - 0.9957824892521996
  - 0.9949728983821715
  - 0.9953129703210958
  train_average_precision_micro_oob:
  - 0.9817904136455424
  - 0.9777183080890294
  - 0.9822126406398526
  - 0.9799379129880395
  - 0.9793992003027944
  train_average_precision_samples:
  - 0.9871279761904762
  - 0.9863014981273408
  - 0.9833648274124465
  - 0.9837481146304677
  - 0.9896990740740741
  train_average_precision_samples_oob:
  - 0.9660311259920634
  - 0.9606210986267166
  - 0.963536155202822
  - 0.9657491201608848
  - 0.9639201701701701
  train_average_precision_weighted:
  - 0.9985917341667929
  - 0.9978358314504384
  - 0.9989058629106796
  - 0.998041069533877
  - 0.9982138627514507
  train_average_precision_weighted_oob:
  - 0.9797158742188897
  - 0.9777397557685403
  - 0.9833554226784983
  - 0.9778411679539831
  - 0.9793892633293968
  train_f1_macro:
  - 0.9709821428571428
  - 0.9647940074906366
  - 0.970899470899471
  - 0.967948717948718
  - 0.9654654654654654
  train_f1_macro_oob:
  - 0.9508928571428572
  - 0.9456928838951311
  - 0.95427059712774
  - 0.9457013574660634
  - 0.9508258258258259
  train_f1_micro:
  - 0.9709821428571429
  - 0.9647940074906367
  - 0.9708994708994709
  - 0.967948717948718
  - 0.9654654654654654
  train_f1_micro_oob:
  - 0.9508928571428571
  - 0.9456928838951311
  - 0.95427059712774
  - 0.9457013574660633
  - 0.9508258258258259
  train_f1_samples:
  - 0.9709821428571429
  - 0.9647940074906367
  - 0.9708994708994709
  - 0.9679487179487181
  - 0.9654654654654655
  train_f1_samples_oob:
  - 0.9508928571428571
  - 0.9456928838951312
  - 0.9542705971277401
  - 0.9457013574660633
  - 0.9508258258258259
  train_f1_weighted:
  - 0.9695446896035903
  - 0.9612491795891577
  - 0.9697247197247199
  - 0.9644218903268676
  - 0.9634337912454738
  train_f1_weighted_oob:
  - 0.9467966997008226
  - 0.9394688635717993
  - 0.9486604665176095
  - 0.9377531405246338
  - 0.944569460480533
  train_jaccard_macro:
  - 0.9438502515078527
  - 0.9323197880279581
  - 0.9437924590554525
  - 0.9381369258989111
  - 0.9336286710342367
  train_jaccard_macro_oob:
  - 0.9070842754291079
  - 0.8973626549277598
  - 0.9128943144029229
  - 0.8976645507130404
  - 0.9069403666941723
  train_jaccard_micro:
  - 0.9436008676789588
  - 0.9319826338639653
  - 0.9434447300771208
  - 0.937888198757764
  - 0.9332365747460087
  train_jaccard_micro_oob:
  - 0.9063829787234042
  - 0.8969804618117229
  - 0.912540657752078
  - 0.8969957081545065
  - 0.9062611806797853
  train_jaccard_samples:
  - 0.9510522959183673
  - 0.941359015516319
  - 0.9514631249325126
  - 0.9464555052790348
  - 0.9420849420849421
  train_jaccard_samples_oob:
  - 0.9185799319727891
  - 0.9118780096308186
  - 0.9246517654680919
  - 0.9106334841628959
  - 0.9198841698841699
  train_jaccard_weighted:
  - 0.9412070960527262
  - 0.925782646509459
  - 0.9416579602515177
  - 0.9315320220928107
  - 0.9299444828719312
  train_jaccard_weighted_oob:
  - 0.8996151587950593
  - 0.8860401987815006
  - 0.9025770523906819
  - 0.883131772481382
  - 0.8955799781091477
  train_label_ranking_average_precision_score:
  - 0.9915922619047619
  - 0.9930430711610486
  - 0.9901675485008818
  - 0.9905354449472097
  - 0.9919513263263264
  train_label_ranking_average_precision_score_oob:
  - 0.970495411706349
  - 0.9673626716604241
  - 0.9703388762912567
  - 0.9725364504776265
  - 0.9661724224224224
  train_matthews_corrcoef_macro:
  - 0.7801228466061466
  - 0.7651441997547576
  - 0.7794486127262986
  - 0.7705393903521424
  - 0.7688111108734824
  train_matthews_corrcoef_macro_oob:
  - 0.7369064762515535
  - 0.7225014135484659
  - 0.7412712523189953
  - 0.7189367902157945
  - 0.7341703042105654
  train_matthews_corrcoef_micro:
  - 0.940747267790191
  - 0.9282425089206123
  - 0.9407705089513076
  - 0.9348631160437555
  - 0.9297012428407917
  train_matthews_corrcoef_micro_oob:
  - 0.8997133533423444
  - 0.8893868026204372
  - 0.9070414156546628
  - 0.8894604428044174
  - 0.899866161557503
  train_matthews_corrcoef_samples:
  - 0.9349377145687511
  - 0.9265829135299546
  - 0.9340696140679251
  - 0.9287473097353925
  - 0.9301728763218777
  train_matthews_corrcoef_samples_oob:
  - 0.8929561372537395
  - 0.8829291415897353
  - 0.8993493689133631
  - 0.8851058346981328
  - 0.8993148192669391
  train_matthews_corrcoef_weighted:
  - 0.9214655592130435
  - 0.9005834564816215
  - 0.920734972146834
  - 0.9089641137243363
  - 0.906919098508926
  train_matthews_corrcoef_weighted_oob:
  - 0.8719603429998538
  - 0.8509321733969991
  - 0.8704950172750856
  - 0.8446498629902649
  - 0.8606721677939969
  train_ndgc:
  - 0.9902744761927978
  - 0.9895692893047433
  - 0.9867648258021454
  - 0.9872614346546257
  - 0.9932328867983711
  train_ndgc_oob:
  - 0.977133155529714
  - 0.9738801701678794
  - 0.9745261687090419
  - 0.9766120945683002
  - 0.9762435222064477
  train_neg_coverage_error:
  - -2.625
  - -2.6382022471910114
  - -2.6462585034013606
  - -2.6561085972850678
  - -2.641891891891892
  train_neg_coverage_error_oob:
  - -2.736607142857143
  - -2.7865168539325844
  - -2.764172335600907
  - -2.771493212669683
  - -2.7815315315315314
  train_neg_hamming_loss_macro:
  - -0.029017857142857147
  - -0.0352059925093633
  - -0.029100529100529102
  - -0.032051282051282055
  - -0.03453453453453453
  train_neg_hamming_loss_macro_oob:
  - -0.04910714285714285
  - -0.054307116104868915
  - -0.04572940287226002
  - -0.054298642533936646
  - -0.04917417417417417
  train_neg_hamming_loss_micro:
  - -0.029017857142857144
  - -0.03520599250936329
  - -0.0291005291005291
  - -0.03205128205128205
  - -0.03453453453453453
  train_neg_hamming_loss_micro_oob:
  - -0.049107142857142856
  - -0.054307116104868915
  - -0.04572940287226002
  - -0.05429864253393665
  - -0.049174174174174176
  train_neg_hamming_loss_samples:
  - -0.029017857142857144
  - -0.03520599250936329
  - -0.0291005291005291
  - -0.03205128205128205
  - -0.03453453453453453
  train_neg_hamming_loss_samples_oob:
  - -0.049107142857142856
  - -0.05430711610486891
  - -0.04572940287226001
  - -0.05429864253393665
  - -0.04917417417417417
  train_neg_hamming_loss_weighted:
  - -0.030455310396409866
  - -0.03875082041084216
  - -0.030275280275280272
  - -0.0355781096731323
  - -0.036566208754526104
  train_neg_hamming_loss_weighted_oob:
  - -0.05320330029917727
  - -0.060531136428200585
  - -0.05133953348239063
  - -0.06224685947536626
  - -0.05543053951946716
  train_neg_label_ranking_loss:
  - -0.009840029761904762
  - -0.008302122347066166
  - -0.008963214915595869
  - -0.009948466566113624
  - -0.008383383383383384
  train_neg_label_ranking_loss_oob:
  - -0.027926587301587306
  - -0.031978776529338324
  - -0.027979339884101787
  - -0.02899069884364002
  - -0.0315065065065065
  train_precision_macro:
  - 0.9709821428571428
  - 0.9647940074906366
  - 0.970899470899471
  - 0.967948717948718
  - 0.9654654654654654
  train_precision_macro_oob:
  - 0.9508928571428572
  - 0.9456928838951311
  - 0.95427059712774
  - 0.9457013574660634
  - 0.9508258258258259
  train_precision_micro:
  - 0.9709821428571429
  - 0.9647940074906367
  - 0.9708994708994709
  - 0.967948717948718
  - 0.9654654654654654
  train_precision_micro_oob:
  - 0.9508928571428571
  - 0.9456928838951311
  - 0.95427059712774
  - 0.9457013574660633
  - 0.9508258258258259
  train_precision_samples:
  - 0.9709821428571429
  - 0.9647940074906367
  - 0.9708994708994709
  - 0.9679487179487181
  - 0.9654654654654655
  train_precision_samples_oob:
  - 0.9508928571428571
  - 0.9456928838951312
  - 0.9542705971277401
  - 0.9457013574660633
  - 0.9508258258258259
  train_precision_weighted:
  - 0.9695446896035903
  - 0.9612491795891577
  - 0.9697247197247199
  - 0.9644218903268676
  - 0.9634337912454738
  train_precision_weighted_oob:
  - 0.9467966997008226
  - 0.9394688635717993
  - 0.9486604665176095
  - 0.9377531405246338
  - 0.944569460480533
  train_recall_macro:
  - 0.9709821428571428
  - 0.9647940074906366
  - 0.970899470899471
  - 0.967948717948718
  - 0.9654654654654654
  train_recall_macro_oob:
  - 0.9508928571428572
  - 0.9456928838951311
  - 0.95427059712774
  - 0.9457013574660634
  - 0.9508258258258259
  train_recall_micro:
  - 0.9709821428571429
  - 0.9647940074906367
  - 0.9708994708994709
  - 0.967948717948718
  - 0.9654654654654654
  train_recall_micro_oob:
  - 0.9508928571428571
  - 0.9456928838951311
  - 0.95427059712774
  - 0.9457013574660633
  - 0.9508258258258259
  train_recall_samples:
  - 0.9709821428571429
  - 0.9647940074906367
  - 0.9708994708994709
  - 0.9679487179487181
  - 0.9654654654654655
  train_recall_samples_oob:
  - 0.9508928571428571
  - 0.9456928838951312
  - 0.9542705971277401
  - 0.9457013574660633
  - 0.9508258258258259
  train_recall_weighted:
  - 0.9695446896035903
  - 0.9612491795891577
  - 0.9697247197247199
  - 0.9644218903268676
  - 0.9634337912454738
  train_recall_weighted_oob:
  - 0.9467966997008226
  - 0.9394688635717993
  - 0.9486604665176095
  - 0.9377531405246338
  - 0.944569460480533
  train_roc_auc_macro:
  - 0.9987900848595214
  - 0.9980521039513581
  - 0.9989943452738649
  - 0.9981199304315612
  - 0.9983278886384083
  train_roc_auc_macro_oob:
  - 0.9711429486041979
  - 0.9691993849152235
  - 0.9797110633782702
  - 0.9668203839332499
  - 0.9759546885864641
  train_roc_auc_micro:
  - 0.9959598377483968
  - 0.9956405158679956
  - 0.9963649865447468
  - 0.995484745691974
  - 0.9960362046185084
  train_roc_auc_micro_oob:
  - 0.9851482515171475
  - 0.982127002354482
  - 0.9845753447617629
  - 0.982344744115301
  - 0.9828649326809958
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9986014290712558
  - 0.9977712509209634
  - 0.9988019418457417
  - 0.9977277771376508
  - 0.9979619577293364
  train_roc_auc_weighted_oob:
  - 0.9882458376969334
  - 0.9825560733016885
  - 0.9881344485887762
  - 0.9833494716240809
  - 0.9841891294479644
start: 2023-12-21 22:09:27.527048
wrapper: null
