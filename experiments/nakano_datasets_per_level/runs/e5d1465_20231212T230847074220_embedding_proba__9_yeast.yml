active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMDMBAMzMzMzMDQDAzMzMzMyXA0MzMzMzMIEBAMzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T+AmZmZmZnZv8zMzMzMzCDAaGZmZmZmHkCAmZmZmZnZvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP6CZmZmZmfk/QDMzMzMz4z8wMzMzMzMLwA==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZAcBwZmZmZmYOQDgzMzMzMxNAyMzMzMzMFMAgMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ6T8AMzMzMzPzvwCYmZmZmcm/AJiZmZmZyb8AmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz87/QzMzMzMz8P6CZmZmZmek/mJmZmZmZCcDQzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0DgzMzMzMwmQIDMzMzMzATAkJmZmZmZMMDAmZmZmZkVQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 23:21:43.513860
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e5d1465a8c9e123d34b1fb094526bffa727eeb470e9f23bb905528b3c1014310
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e5d1465_20231212T230847074220_embedding_proba__9_yeast.yml
results:
  fit_time:
  - 637.5883829593658
  - 643.820522069931
  - 633.1703236103058
  - 621.9373886585236
  - 625.8244721889496
  score_time:
  - 27.19977617263794
  - 27.936052083969116
  - 30.501917362213135
  - 36.279292583465576
  - 34.09012532234192
  test_average_precision_macro:
  - 0.4695335581043615
  - 0.4939704401766587
  - 0.495913213714993
  - 0.4904542886718211
  - 0.4739732081787073
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6507563554788499
  - 0.7014860973297999
  - 0.6768072053056697
  - 0.6890058654040117
  - 0.6803134046266602
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7333485272175748
  - 0.7714821395997621
  - 0.7477258027203525
  - 0.7405443051657337
  - 0.7409954871703974
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6211355932841135
  - 0.6645540904126233
  - 0.6472168363519327
  - 0.6564997777925672
  - 0.6416664286963615
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7929907929907929
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571428
  - 0.7898983861326956
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.792990792990793
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571428
  - 0.7898983861326958
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.792990792990793
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571429
  - 0.7898983861326957
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7363223547434075
  - 0.7583582585576604
  - 0.7469505194449937
  - 0.7514064642507347
  - 0.7423046090545078
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6682320024414558
  - 0.6792258496390334
  - 0.6740443279054747
  - 0.6774979717868851
  - 0.6630336806930625
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.656988188976378
  - 0.6701630228737521
  - 0.6643835616438356
  - 0.6678579938050989
  - 0.6527537663620647
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6851341515630114
  - 0.7011782611507178
  - 0.6935404828314913
  - 0.6966965220926454
  - 0.6830170392787718
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5881717269769722
  - 0.6138612328651006
  - 0.6000503369319576
  - 0.6055267690712818
  - 0.5941017159404313
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7333485272175748
  - 0.771482139599762
  - 0.7477258027203524
  - 0.7405443051657329
  - 0.7409954871703972
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.25176690548148994
  - 0.27377362680874784
  - 0.259807336114818
  - 0.2750613986011351
  - 0.23608534779962947
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.505628147491498
  - 0.5284204824531992
  - 0.519299663871046
  - 0.5201878942178015
  - 0.50202326307554
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.505989501178986
  - 0.5415746201886495
  - 0.5264542507637173
  - 0.5233993090590459
  - 0.5088809448932792
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.25355597261450036
  - 0.31577016348591025
  - 0.26724797443470005
  - 0.31348107037902556
  - 0.260352575879377
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8368643840423294
  - 0.8654378202105867
  - 0.8462593762168519
  - 0.8378245420287415
  - 0.844236310251934
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.582120582120582
  - -7.440677966101695
  - -7.549382716049383
  - -7.23
  - -7.7364016736401675
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20700920700920702
  - -0.19748789346246975
  - -0.20164609053497942
  - -0.19914285714285712
  - -0.21010161386730422
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.207009207009207
  - -0.19748789346246973
  - -0.20164609053497942
  - -0.19914285714285715
  - -0.21010161386730425
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20700920700920697
  - -0.1974878934624697
  - -0.20164609053497942
  - -0.19914285714285712
  - -0.21010161386730422
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26367764525659265
  - -0.2416417414423396
  - -0.2530494805550065
  - -0.24859353574926543
  - -0.25769539094549215
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19886231562055737
  - -0.1771286660776673
  - -0.18682540596120842
  - -0.1863222606758321
  - -0.1962599630561376
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7929907929907929
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571428
  - 0.7898983861326956
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.792990792990793
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571428
  - 0.7898983861326958
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.792990792990793
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571429
  - 0.7898983861326957
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7363223547434075
  - 0.7583582585576604
  - 0.7469505194449937
  - 0.7514064642507347
  - 0.7423046090545078
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7929907929907929
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571428
  - 0.7898983861326956
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.792990792990793
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571428
  - 0.7898983861326958
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.792990792990793
  - 0.8025121065375302
  - 0.7983539094650206
  - 0.8008571428571429
  - 0.7898983861326957
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7363223547434075
  - 0.7583582585576604
  - 0.7469505194449937
  - 0.7514064642507347
  - 0.7423046090545078
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6487030152513996
  - 0.7053501153756524
  - 0.6848564894744412
  - 0.7112875801178097
  - 0.676717580357518
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7993965421051799
  - 0.824347227945469
  - 0.8170103944391403
  - 0.8263448718500834
  - 0.81011782805209
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8011636719054301
  - 0.8230361173498281
  - 0.8134446557671866
  - 0.81396683435612
  - 0.8044268911834662
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6541143131135373
  - 0.7028787156804052
  - 0.6781617941541292
  - 0.7077434136055223
  - 0.6766884329860408
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9934418190102636
  - 0.9944027940759327
  - 0.9919291911195113
  - 0.9925551704275047
  - 0.990659419713633
  train_average_precision_macro_oob:
  - 0.9632422125232398
  - 0.9713332671948428
  - 0.9608479680478036
  - 0.9603235591657588
  - 0.9655085898154697
  train_average_precision_micro:
  - 0.998280761123939
  - 0.9985583301408748
  - 0.9984166141325583
  - 0.9983338644945898
  - 0.9985577911511684
  train_average_precision_micro_oob:
  - 0.9933499204448744
  - 0.9942611847464886
  - 0.9933461672736073
  - 0.9940128179049554
  - 0.9943717760520607
  train_average_precision_samples:
  - 0.9981950673309575
  - 0.9978593076095524
  - 0.9982595513175061
  - 0.997671707789358
  - 0.9978697623422446
  train_average_precision_samples_oob:
  - 0.9921148914425276
  - 0.9929247634310983
  - 0.9917677082032462
  - 0.9928633604312214
  - 0.9927750583564975
  train_average_precision_weighted:
  - 0.9974082959720869
  - 0.9978036472836196
  - 0.9975797639280667
  - 0.9973913057825561
  - 0.9976245328628505
  train_average_precision_weighted_oob:
  - 0.9893927479655544
  - 0.9910727415569611
  - 0.9899897351165349
  - 0.9903576752141636
  - 0.9907811928939836
  train_f1_macro:
  - 0.9859799291617473
  - 0.9865956665442528
  - 0.9860545979137382
  - 0.9848721961398018
  - 0.987659323657261
  train_f1_macro_oob:
  - 0.9783057851239668
  - 0.9804994491369812
  - 0.979692239402234
  - 0.9788359788359787
  - 0.9803654313711043
  train_f1_micro:
  - 0.9859799291617474
  - 0.9865956665442527
  - 0.9860545979137383
  - 0.9848721961398018
  - 0.9876593236572607
  train_f1_micro_oob:
  - 0.9783057851239669
  - 0.9804994491369813
  - 0.9796922394022343
  - 0.9788359788359788
  - 0.9803654313711044
  train_f1_samples:
  - 0.9859799291617475
  - 0.9865956665442526
  - 0.9860545979137382
  - 0.9848721961398018
  - 0.9876593236572607
  train_f1_samples_oob:
  - 0.978305785123967
  - 0.9804994491369812
  - 0.9796922394022343
  - 0.978835978835979
  - 0.9803654313711044
  train_f1_weighted:
  - 0.9877124271725122
  - 0.988334923103302
  - 0.9876681324775665
  - 0.9866850818289417
  - 0.9893786730798823
  train_f1_weighted_oob:
  - 0.9806461550416856
  - 0.9827672905899931
  - 0.9825076382127151
  - 0.9814384402388093
  - 0.9832003627414672
  train_jaccard_macro:
  - 0.9724097339841167
  - 0.9736019611879935
  - 0.9725450525773613
  - 0.9702869853666666
  - 0.9756675720988601
  train_jaccard_macro_oob:
  - 0.9576623382744138
  - 0.9618451819430253
  - 0.9603185053546156
  - 0.9587177914391948
  - 0.9615853960302075
  train_jaccard_micro:
  - 0.9723475476640955
  - 0.9735459322341004
  - 0.972492794863376
  - 0.9701952723535457
  - 0.9756195189403588
  train_jaccard_micro_oob:
  - 0.9575328614762386
  - 0.9617448939159252
  - 0.960192872421419
  - 0.9585492227979274
  - 0.9614870479424835
  train_jaccard_samples:
  - 0.9749203262572247
  - 0.9761667210518357
  - 0.9750275010746574
  - 0.9730082747757425
  - 0.9779035878079144
  train_jaccard_samples_oob:
  - 0.9619361981054565
  - 0.9657461600975574
  - 0.9642397135292106
  - 0.9628161674758766
  - 0.9655846365400299
  train_jaccard_weighted:
  - 0.9757714534887644
  - 0.9769984560998614
  - 0.9757026764985952
  - 0.9738271280706959
  - 0.979041706806027
  train_jaccard_weighted_oob:
  - 0.9621583740106138
  - 0.9662356847194215
  - 0.965767277558216
  - 0.9637591063599944
  - 0.9670823229059654
  train_label_ranking_average_precision_score:
  - 0.9981950673309574
  - 0.9978593076095522
  - 0.998259551317506
  - 0.997671707789358
  - 0.9978697623422443
  train_label_ranking_average_precision_score_oob:
  - 0.9921148914425278
  - 0.9929247634310983
  - 0.9917677082032463
  - 0.9928633604312216
  - 0.9927750583564977
  train_matthews_corrcoef_macro:
  - 0.9280097125416409
  - 0.9384111663719524
  - 0.9229843589719148
  - 0.9179518255105072
  - 0.9382836852243978
  train_matthews_corrcoef_macro_oob:
  - 0.9009581368167741
  - 0.9075405748114408
  - 0.895641799200483
  - 0.896485351726675
  - 0.8942675660804612
  train_matthews_corrcoef_micro:
  - 0.9666637571630171
  - 0.9680739016747967
  - 0.9668706346906655
  - 0.9642502142829651
  - 0.9706551518348487
  train_matthews_corrcoef_micro_oob:
  - 0.948340603504311
  - 0.9534961773573786
  - 0.9516937873895913
  - 0.9499282724372577
  - 0.9532389169155584
  train_matthews_corrcoef_samples:
  - 0.9697032898455041
  - 0.9710500123983314
  - 0.9698415403267536
  - 0.9670369900461248
  - 0.9728632031254592
  train_matthews_corrcoef_samples_oob:
  - 0.9524700158197624
  - 0.9575714504949572
  - 0.956258009920205
  - 0.9537023266573385
  - 0.9562622585725584
  train_matthews_corrcoef_weighted:
  - 0.9642622183443779
  - 0.966596216860995
  - 0.9647581060304076
  - 0.9624820060212617
  - 0.9695509966076529
  train_matthews_corrcoef_weighted_oob:
  - 0.9447921303808492
  - 0.9507164669565666
  - 0.9494531681977009
  - 0.9478720646003703
  - 0.9509480470247843
  train_ndgc:
  - 0.9993440495972522
  - 0.9990469232206031
  - 0.9993213981548192
  - 0.9990077196565519
  - 0.9991119508961406
  train_ndgc_oob:
  - 0.9965513822416632
  - 0.9968036612039013
  - 0.9962467576796745
  - 0.9968183701324684
  - 0.9968351083763866
  train_neg_coverage_error:
  - -4.269111570247934
  - -4.258097686375321
  - -4.277058518902123
  - -4.321335419926969
  - -4.265085095410005
  train_neg_coverage_error_oob:
  - -4.408057851239669
  - -4.379434447300771
  - -4.417918177110305
  - -4.446531038080334
  - -4.3893759669932955
  train_neg_hamming_loss_macro:
  - -0.014020070838252657
  - -0.013404333455747335
  - -0.013945402086261745
  - -0.015127803860198227
  - -0.012340676342739262
  train_neg_hamming_loss_macro_oob:
  - -0.02169421487603306
  - -0.019500550863018735
  - -0.020307760597765782
  - -0.021164021164021166
  - -0.0196345686288956
  train_neg_hamming_loss_micro:
  - -0.014020070838252656
  - -0.013404333455747338
  - -0.013945402086261745
  - -0.015127803860198226
  - -0.012340676342739262
  train_neg_hamming_loss_micro_oob:
  - -0.02169421487603306
  - -0.019500550863018728
  - -0.020307760597765775
  - -0.021164021164021163
  - -0.0196345686288956
  train_neg_hamming_loss_samples:
  - -0.014020070838252654
  - -0.013404333455747337
  - -0.013945402086261743
  - -0.015127803860198226
  - -0.01234067634273926
  train_neg_hamming_loss_samples_oob:
  - -0.02169421487603306
  - -0.019500550863018728
  - -0.020307760597765772
  - -0.021164021164021163
  - -0.0196345686288956
  train_neg_hamming_loss_weighted:
  - -0.012287572827487792
  - -0.011665076896697971
  - -0.012331867522433492
  - -0.013314918171058307
  - -0.010621326920117899
  train_neg_hamming_loss_weighted_oob:
  - -0.019353844958314374
  - -0.01723270941000674
  - -0.017492361787284798
  - -0.01856155976119077
  - -0.016799637258532903
  train_neg_label_ranking_loss:
  - -0.001148635324402739
  - -0.0013395601827478434
  - -0.0011693881607693843
  - -0.001419231835060138
  - -0.001290109789520384
  train_neg_label_ranking_loss_oob:
  - -0.005851331187997362
  - -0.005330158579332285
  - -0.006033543675956933
  - -0.005257091071980409
  - -0.005300732895958711
  train_precision_macro:
  - 0.9859799291617473
  - 0.9865956665442528
  - 0.9860545979137382
  - 0.9848721961398018
  - 0.987659323657261
  train_precision_macro_oob:
  - 0.9783057851239668
  - 0.9804994491369812
  - 0.979692239402234
  - 0.9788359788359787
  - 0.9803654313711043
  train_precision_micro:
  - 0.9859799291617474
  - 0.9865956665442527
  - 0.9860545979137383
  - 0.9848721961398018
  - 0.9876593236572607
  train_precision_micro_oob:
  - 0.9783057851239669
  - 0.9804994491369813
  - 0.9796922394022343
  - 0.9788359788359788
  - 0.9803654313711044
  train_precision_samples:
  - 0.9859799291617475
  - 0.9865956665442526
  - 0.9860545979137382
  - 0.9848721961398018
  - 0.9876593236572607
  train_precision_samples_oob:
  - 0.978305785123967
  - 0.9804994491369812
  - 0.9796922394022343
  - 0.978835978835979
  - 0.9803654313711044
  train_precision_weighted:
  - 0.9877124271725122
  - 0.988334923103302
  - 0.9876681324775665
  - 0.9866850818289417
  - 0.9893786730798823
  train_precision_weighted_oob:
  - 0.9806461550416856
  - 0.9827672905899931
  - 0.9825076382127151
  - 0.9814384402388093
  - 0.9832003627414672
  train_recall_macro:
  - 0.9859799291617473
  - 0.9865956665442528
  - 0.9860545979137382
  - 0.9848721961398018
  - 0.987659323657261
  train_recall_macro_oob:
  - 0.9783057851239668
  - 0.9804994491369812
  - 0.979692239402234
  - 0.9788359788359787
  - 0.9803654313711043
  train_recall_micro:
  - 0.9859799291617474
  - 0.9865956665442527
  - 0.9860545979137383
  - 0.9848721961398018
  - 0.9876593236572607
  train_recall_micro_oob:
  - 0.9783057851239669
  - 0.9804994491369813
  - 0.9796922394022343
  - 0.9788359788359788
  - 0.9803654313711044
  train_recall_samples:
  - 0.9859799291617475
  - 0.9865956665442526
  - 0.9860545979137382
  - 0.9848721961398018
  - 0.9876593236572607
  train_recall_samples_oob:
  - 0.978305785123967
  - 0.9804994491369812
  - 0.9796922394022343
  - 0.978835978835979
  - 0.9803654313711044
  train_recall_weighted:
  - 0.9877124271725122
  - 0.988334923103302
  - 0.9876681324775665
  - 0.9866850818289417
  - 0.9893786730798823
  train_recall_weighted_oob:
  - 0.9806461550416856
  - 0.9827672905899931
  - 0.9825076382127151
  - 0.9814384402388093
  - 0.9832003627414672
  train_roc_auc_macro:
  - 0.9989705752365963
  - 0.9991100146572148
  - 0.9990236806609291
  - 0.9989456218643712
  - 0.999031642511187
  train_roc_auc_macro_oob:
  - 0.9913846083512995
  - 0.9940227893125319
  - 0.9925155319527036
  - 0.9909405581710982
  - 0.9933447715157128
  train_roc_auc_micro:
  - 0.9992444362367304
  - 0.9993658271756887
  - 0.9993036440355084
  - 0.9992473882592738
  - 0.9993635041386236
  train_roc_auc_micro_oob:
  - 0.996477625301305
  - 0.9968333971466252
  - 0.9965928510497473
  - 0.9967363387587405
  - 0.9969537089148279
  train_roc_auc_samples:
  - 0.9988513646755972
  - 0.9986604398172522
  - 0.9988306118392306
  - 0.9985807681649398
  - 0.9987098902104796
  train_roc_auc_samples_oob:
  - 0.9941564950078453
  - 0.9946698414206677
  - 0.993966456324043
  - 0.9947429089280195
  - 0.9947049974346814
  train_roc_auc_weighted:
  - 0.9992792981022727
  - 0.9993688702557993
  - 0.9993290671878827
  - 0.9992368188324
  - 0.9993648266457396
  train_roc_auc_weighted_oob:
  - 0.9960576901246277
  - 0.9965767954213212
  - 0.9957958774017127
  - 0.9964364261431012
  - 0.996755785777907
start: 2023-12-12 23:08:47.074220
wrapper: null
