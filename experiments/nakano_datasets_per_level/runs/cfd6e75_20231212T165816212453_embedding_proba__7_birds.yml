active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            MjMzMzMz87+cmZmZmZnpP5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8D8AAAAAAAAAAAAAAAAAAPA/AAAAAAAAAAAAAAAAAAAAwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T8yMzMzMzPzv87MzMzMzPw/nJmZmZmZ6T+ZmZmZmZkBwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJPzQzMzMzM/M/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:58:56.044499
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: cfd6e75b65dd991bbd2f7ce0e50167e42a638ce87f39e8e949edeb0de5860656
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cfd6e75_20231212T165816212453_embedding_proba__7_birds.yml
results:
  fit_time:
  - 16.297503232955933
  - 17.12645673751831
  - 16.844195127487183
  - 17.03794002532959
  - 19.640095472335815
  score_time:
  - 6.793431282043457
  - 6.77787971496582
  - 6.954905271530151
  - 7.16940975189209
  - 6.84416937828064
  test_average_precision_macro:
  - 0.4039704199476763
  - 0.49020796690296714
  - 0.5115997880605406
  - 0.5053837556855353
  - 0.39162127811924546
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.45010700526201425
  - 0.49068253427531683
  - 0.6214788420442454
  - 0.48953624661700207
  - 0.4242412484572814
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3393896121869098
  - 0.32323949234801946
  - 0.3396177860325147
  - 0.3239469577749871
  - 0.28995484013483863
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.49931954917196936
  - 0.5502318889897195
  - 0.6547774792954402
  - 0.5518059097811292
  - 0.47388543572692776
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9551203590371277
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290492
  - 0.9490004079967358
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9551203590371277
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290494
  - 0.949000407996736
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9551203590371278
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290494
  - 0.949000407996736
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9346115154742884
  - 0.9408033826638477
  - 0.9503625906476619
  - 0.9342874180083484
  - 0.9270638827590111
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9158626969713043
  - 0.918915657329328
  - 0.9323321708280887
  - 0.9132753368140069
  - 0.9046603911312314
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9140960562280359
  - 0.9178403755868545
  - 0.9314420803782506
  - 0.9118564742589703
  - 0.9029503105590062
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9186870875445193
  - 0.9233248270659797
  - 0.9357613401091662
  - 0.9177055109815474
  - 0.9099419005890189
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.879689939292883
  - 0.8891348339483387
  - 0.9058826689285523
  - 0.8780816920650845
  - 0.8656872703734545
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7657462013341968
  - 0.7650999574642986
  - 0.8434937550247626
  - 0.7890632368447548
  - 0.7318153052511179
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.20290076612249525
  - 0.20644555733233472
  - 0.25845170671932677
  - 0.17956148217641593
  - 0.16163485314449316
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.43271824207592907
  - 0.4615847648773481
  - 0.5467463130089464
  - 0.38437384407456093
  - 0.35436416381016866
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1536943099402451
  - 0.1885081632910856
  - 0.20503270044326094
  - 0.12390768267922973
  - 0.14429472487239325
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.34871570918067724
  - 0.3713463011311094
  - 0.4643844574593776
  - 0.3002400974629976
  - 0.2748684871885673
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.40788518134416696
  - 0.3931138097741329
  - 0.3895411770718103
  - 0.38388466267353244
  - 0.3695025760271572
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.4651162790697674
  - -3.294573643410853
  - -2.511627906976744
  - -3.007751937984496
  - -4.023255813953488
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.044879640962872294
  - -0.042839657282741736
  - -0.03549571603427173
  - -0.046103631170950635
  - -0.05099959200326397
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.044879640962872294
  - -0.042839657282741736
  - -0.03549571603427173
  - -0.046103631170950635
  - -0.050999592003263976
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.044879640962872294
  - -0.042839657282741736
  - -0.03549571603427173
  - -0.046103631170950635
  - -0.050999592003263976
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06538848452571158
  - -0.05919661733615222
  - -0.0496374093523381
  - -0.06571258199165177
  - -0.07293611724098908
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.10884994824803307
  - -0.10314121772740104
  - -0.06207630338957288
  - -0.08968434919187313
  - -0.12533337425608287
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9551203590371277
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290492
  - 0.9490004079967358
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9551203590371277
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290494
  - 0.949000407996736
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9551203590371278
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290494
  - 0.949000407996736
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9346115154742884
  - 0.9408033826638477
  - 0.9503625906476619
  - 0.9342874180083484
  - 0.9270638827590111
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9551203590371277
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290492
  - 0.9490004079967358
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9551203590371277
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290494
  - 0.949000407996736
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9551203590371278
  - 0.9571603427172583
  - 0.9645042839657283
  - 0.9538963688290494
  - 0.949000407996736
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9346115154742884
  - 0.9408033826638477
  - 0.9503625906476619
  - 0.9342874180083484
  - 0.9270638827590111
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8439597090310677
  - 0.8741094888140358
  - .nan
  - 0.8731291158992999
  - 0.831102473798563
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8644676230586996
  - 0.883946188926784
  - 0.9215589780556441
  - 0.8950485533423921
  - 0.8765574825404236
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8456311320044143
  - 0.8655512720772797
  - .nan
  - 0.8782889100559935
  - 0.857626525131011
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.921838653856283
  - 0.9308109990353949
  - 0.919955122719814
  - 0.9334289279638313
  - 0.9482466127248402
  train_average_precision_macro_oob:
  - 0.5952173016800065
  - 0.5974523927064318
  - 0.5977278508795952
  - 0.5677870241236083
  - 0.5498215054263194
  train_average_precision_micro:
  - 0.9305690609246433
  - 0.9279176769754616
  - 0.9306996982580429
  - 0.9368854607527509
  - 0.9264847013961373
  train_average_precision_micro_oob:
  - 0.7902366558486439
  - 0.7786178422267613
  - 0.7914450310831805
  - 0.7886858495313164
  - 0.771147175558167
  train_average_precision_samples:
  - 0.5126953365325457
  - 0.5134736064968624
  - 0.5297099944629013
  - 0.5255913928879045
  - 0.5157541989664083
  train_average_precision_samples_oob:
  - 0.44204414403312814
  - 0.4506459668352623
  - 0.4718899129509595
  - 0.45558423092222317
  - 0.447208038516178
  train_average_precision_weighted:
  - 0.9396803644698843
  - 0.943208067590339
  - 0.9385036336744024
  - 0.9474231441686228
  - 0.9506661074843962
  train_average_precision_weighted_oob:
  - 0.7618212452489974
  - 0.7528864305142434
  - 0.7484431039637987
  - 0.738485822682831
  - 0.7354252190862918
  train_f1_macro:
  - 0.9748062015503876
  - 0.9741942064463484
  - 0.9764381884944919
  - 0.9736842105263156
  - 0.9741942064463484
  train_f1_macro_oob:
  - 0.9688902488780088
  - 0.9682782537739697
  - 0.9697062423500612
  - 0.9688902488780089
  - 0.9681762545899633
  train_f1_micro:
  - 0.9748062015503876
  - 0.9741942064463485
  - 0.976438188494492
  - 0.9736842105263158
  - 0.9741942064463485
  train_f1_micro_oob:
  - 0.968890248878009
  - 0.9682782537739698
  - 0.9697062423500612
  - 0.968890248878009
  - 0.9681762545899633
  train_f1_samples:
  - 0.9748062015503877
  - 0.9741942064463485
  - 0.976438188494492
  - 0.9736842105263158
  - 0.9741942064463486
  train_f1_samples_oob:
  - 0.9688902488780091
  - 0.9682782537739698
  - 0.9697062423500613
  - 0.968890248878009
  - 0.9681762545899634
  train_f1_weighted:
  - 0.9730571983340005
  - 0.9725118061124478
  - 0.9765577007459411
  - 0.9730124563583644
  - 0.9721410043033002
  train_f1_weighted_oob:
  - 0.9637563549587206
  - 0.9630706287683032
  - 0.9674382038905953
  - 0.9655637907568495
  - 0.9632907501536893
  train_jaccard_macro:
  - 0.9510655937461195
  - 0.9498742764668903
  - 0.9541741350664703
  - 0.9490474644896271
  - 0.9499093676170718
  train_jaccard_macro_oob:
  - 0.9400726956309313
  - 0.938885344507783
  - 0.9415941491465988
  - 0.940149304136375
  - 0.9387175672275517
  train_jaccard_micro:
  - 0.9508506616257089
  - 0.9496867853236551
  - 0.9539611360239163
  - 0.9487179487179487
  - 0.9496867853236551
  train_jaccard_micro_oob:
  - 0.9396577307349886
  - 0.9385071675729115
  - 0.9411939411939412
  - 0.9396577307349886
  - 0.9383155397390273
  train_jaccard_samples:
  - 0.9537300274155683
  - 0.952751350716467
  - 0.9566260612772242
  - 0.9516263312016598
  - 0.9527836869343442
  train_jaccard_samples_oob:
  - 0.9433064576138389
  - 0.9422124429328677
  - 0.9447997416020673
  - 0.9431873260993585
  - 0.9420669208333516
  train_jaccard_weighted:
  - 0.9477170555093851
  - 0.9466521469474078
  - 0.9544117716459315
  - 0.9477946996668418
  - 0.9460041886288619
  train_jaccard_weighted_oob:
  - 0.9303784300712967
  - 0.9290427437523164
  - 0.9373355377951008
  - 0.9338807533988734
  - 0.9294681875281372
  train_label_ranking_average_precision_score:
  - 0.9758736311061891
  - 0.9727759320782573
  - 0.9735084440753046
  - 0.9790797649809277
  - 0.9750565245478034
  train_label_ranking_average_precision_score_oob:
  - 0.9052224386067715
  - 0.9099482924166572
  - 0.9156883625633621
  - 0.9090726030152464
  - 0.9065103640975729
  train_matthews_corrcoef_macro:
  - 0.4068608562762766
  - 0.4000776320314144
  - 0.4527625528094113
  - 0.36426199571967577
  - 0.3965626264804724
  train_matthews_corrcoef_macro_oob:
  - 0.3284767893338779
  - 0.31836833277234183
  - 0.34530190025866697
  - 0.2825586945827076
  - 0.28928540398849906
  train_matthews_corrcoef_micro:
  - 0.7168103569910205
  - 0.7080725381368255
  - 0.7418086337455996
  - 0.7025193387111929
  - 0.7052232311023419
  train_matthews_corrcoef_micro_oob:
  - 0.6353648155547498
  - 0.6259951682819005
  - 0.6530122897565936
  - 0.6358141783864502
  - 0.6207289681078858
  train_matthews_corrcoef_samples:
  - 0.33230750827313754
  - 0.3296400995805205
  - 0.36123212590084924
  - 0.33003077547432835
  - 0.3307384752007824
  train_matthews_corrcoef_samples_oob:
  - 0.2706331522653016
  - 0.2598830151951412
  - 0.2943575310402221
  - 0.276845146804418
  - 0.27081626454306895
  train_matthews_corrcoef_weighted:
  - 0.6447524386877445
  - 0.6370521866143317
  - 0.673416884430593
  - 0.6107969961895092
  - 0.6380468306700594
  train_matthews_corrcoef_weighted_oob:
  - 0.5477477981459823
  - 0.5331477754305606
  - 0.5633211270285878
  - 0.5066089360737351
  - 0.5167644303195205
  train_ndgc:
  - 0.5222014999721414
  - 0.5235524732163318
  - 0.5402967151897101
  - 0.533773671957726
  - 0.5250129631766508
  train_ndgc_oob:
  - 0.4744203153828873
  - 0.4812725177051943
  - 0.5029672877785211
  - 0.4883364794389543
  - 0.4797028464493831
  train_neg_coverage_error:
  - -1.1511627906976745
  - -1.1589147286821706
  - -1.193798449612403
  - -1.1472868217054264
  - -1.1375968992248062
  train_neg_coverage_error_oob:
  - -1.941860465116279
  - -1.9767441860465116
  - -1.9166666666666667
  - -2.056201550387597
  - -1.932170542635659
  train_neg_hamming_loss_macro:
  - -0.025193798449612403
  - -0.025805793553651573
  - -0.023561811505507953
  - -0.026315789473684216
  - -0.025805793553651573
  train_neg_hamming_loss_macro_oob:
  - -0.03110975112199102
  - -0.031721746226030204
  - -0.03029375764993881
  - -0.031109751121991033
  - -0.03182374541003672
  train_neg_hamming_loss_micro:
  - -0.025193798449612403
  - -0.02580579355365157
  - -0.023561811505507957
  - -0.02631578947368421
  - -0.02580579355365157
  train_neg_hamming_loss_micro_oob:
  - -0.031109751121991023
  - -0.03172174622603019
  - -0.0302937576499388
  - -0.031109751121991023
  - -0.03182374541003672
  train_neg_hamming_loss_samples:
  - -0.025193798449612403
  - -0.025805793553651566
  - -0.023561811505507957
  - -0.02631578947368421
  - -0.02580579355365157
  train_neg_hamming_loss_samples_oob:
  - -0.031109751121991026
  - -0.03172174622603019
  - -0.0302937576499388
  - -0.03110975112199102
  - -0.03182374541003672
  train_neg_hamming_loss_weighted:
  - -0.026942801665999674
  - -0.02748819388755235
  - -0.0234422992540588
  - -0.026987543641635598
  - -0.02785899569669981
  train_neg_hamming_loss_weighted_oob:
  - -0.03624364504127944
  - -0.03692937123169681
  - -0.032561796109404705
  - -0.03443620924315048
  - -0.03670924984631071
  train_neg_label_ranking_loss:
  - -0.004712821821234953
  - -0.005169044361930819
  - -0.00526234718693679
  - -0.004333842710210699
  - -0.00478194507777271
  train_neg_label_ranking_loss_oob:
  - -0.034979360458156625
  - -0.03458992099125479
  - -0.030405465455910052
  - -0.0381264695303683
  - -0.03292257471464038
  train_precision_macro:
  - 0.9748062015503876
  - 0.9741942064463484
  - 0.9764381884944919
  - 0.9736842105263156
  - 0.9741942064463484
  train_precision_macro_oob:
  - 0.9688902488780088
  - 0.9682782537739697
  - 0.9697062423500612
  - 0.9688902488780089
  - 0.9681762545899633
  train_precision_micro:
  - 0.9748062015503876
  - 0.9741942064463485
  - 0.976438188494492
  - 0.9736842105263158
  - 0.9741942064463485
  train_precision_micro_oob:
  - 0.968890248878009
  - 0.9682782537739698
  - 0.9697062423500612
  - 0.968890248878009
  - 0.9681762545899633
  train_precision_samples:
  - 0.9748062015503877
  - 0.9741942064463485
  - 0.976438188494492
  - 0.9736842105263158
  - 0.9741942064463486
  train_precision_samples_oob:
  - 0.9688902488780091
  - 0.9682782537739698
  - 0.9697062423500613
  - 0.968890248878009
  - 0.9681762545899634
  train_precision_weighted:
  - 0.9730571983340005
  - 0.9725118061124478
  - 0.9765577007459411
  - 0.9730124563583644
  - 0.9721410043033002
  train_precision_weighted_oob:
  - 0.9637563549587206
  - 0.9630706287683032
  - 0.9674382038905953
  - 0.9655637907568495
  - 0.9632907501536893
  train_recall_macro:
  - 0.9748062015503876
  - 0.9741942064463484
  - 0.9764381884944919
  - 0.9736842105263156
  - 0.9741942064463484
  train_recall_macro_oob:
  - 0.9688902488780088
  - 0.9682782537739697
  - 0.9697062423500612
  - 0.9688902488780089
  - 0.9681762545899633
  train_recall_micro:
  - 0.9748062015503876
  - 0.9741942064463485
  - 0.976438188494492
  - 0.9736842105263158
  - 0.9741942064463485
  train_recall_micro_oob:
  - 0.968890248878009
  - 0.9682782537739698
  - 0.9697062423500612
  - 0.968890248878009
  - 0.9681762545899633
  train_recall_samples:
  - 0.9748062015503877
  - 0.9741942064463485
  - 0.976438188494492
  - 0.9736842105263158
  - 0.9741942064463486
  train_recall_samples_oob:
  - 0.9688902488780091
  - 0.9682782537739698
  - 0.9697062423500613
  - 0.968890248878009
  - 0.9681762545899634
  train_recall_weighted:
  - 0.9730571983340005
  - 0.9725118061124478
  - 0.9765577007459411
  - 0.9730124563583644
  - 0.9721410043033002
  train_recall_weighted_oob:
  - 0.9637563549587206
  - 0.9630706287683032
  - 0.9674382038905953
  - 0.9655637907568495
  - 0.9632907501536893
  train_roc_auc_macro:
  - 0.996051899206859
  - 0.9963700747051686
  - 0.9958640190007916
  - 0.9963267928534827
  - 0.9969278711382712
  train_roc_auc_macro_oob:
  - 0.9555012472658632
  - 0.9506165177355391
  - 0.9561568117809184
  - 0.941204848405336
  - 0.9520384825732878
  train_roc_auc_micro:
  - 0.9959966732338091
  - 0.9956542593459429
  - 0.9956779147220267
  - 0.9959208015267176
  - 0.9956922792389435
  train_roc_auc_micro_oob:
  - 0.9693038451261371
  - 0.9692388597053911
  - 0.9697637135265564
  - 0.9656755889707819
  - 0.967503086092558
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9958256081613045
  - 0.9961159048029808
  - 0.9959790957143086
  - 0.9961940636207142
  - 0.9963181192603922
  train_roc_auc_weighted_oob:
  - 0.9690526649518046
  - 0.9693799497729987
  - 0.9686836534731845
  - 0.9633092053883973
  - 0.9679750306227044
start: 2023-12-12 16:58:16.212453
wrapper: null
