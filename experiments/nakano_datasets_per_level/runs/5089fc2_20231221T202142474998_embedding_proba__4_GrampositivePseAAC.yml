active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwCYmZmZmcm/gJmZmZmZAcAAzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:22:11.620767
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__4
  params: {}
hash: 5089fc2a442a66346b5d9420b9011fe3710aa374239f60b3eb8f19dd55b9a7d7
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5089fc2_20231221T202142474998_embedding_proba__4_GrampositivePseAAC.yml
results:
  fit_time:
  - 13.325903177261353
  - 13.830842018127441
  - 13.597216606140137
  - 12.797945022583008
  - 14.085426092147827
  score_time:
  - 3.8677003383636475
  - 4.082432508468628
  - 3.9848501682281494
  - 3.973980188369751
  - 4.4139063358306885
  test_average_precision_macro:
  - 0.3789504268714797
  - 0.41382734782570263
  - 0.32606322493846374
  - 0.3978713819931092
  - 0.4243773547886157
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.47639683781035075
  - 0.49182033365296196
  - 0.4247518388952466
  - 0.5141844402455679
  - 0.5069849474874613
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7179487179487178
  - 0.7419093851132686
  - 0.6506410256410255
  - 0.7295597484276729
  - 0.7148692810457515
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.46692548325088895
  - 0.49827853141974904
  - 0.41983512144841695
  - 0.5098380807509368
  - 0.5001509108006487
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7475961538461539
  - 0.7451456310679613
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7475961538461539
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7475961538461539
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6720695970695971
  - 0.6720295885344428
  - 0.6759157509157508
  - 0.6918832324670702
  - 0.6710880430603613
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6179965844675858
  - 0.6144794559009437
  - 0.624293914140585
  - 0.6303404148681881
  - 0.6221195471195471
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5969289827255279
  - 0.5938104448742747
  - 0.603082851637765
  - 0.6121673003802282
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5974358974358972
  - 0.596116504854369
  - 0.6089743589743588
  - 0.6163522012578615
  - 0.6
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5134611510617555
  - 0.512709182560107
  - 0.5160249581562434
  - 0.534193896082803
  - 0.5115218115218115
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7179487179487178
  - 0.7419093851132684
  - 0.6506410256410261
  - 0.7295597484276729
  - 0.7148692810457519
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.007326488049861277
  - 0.03252795284572709
  - 0.05472610598779436
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.039289871278763266
  - 0.12010795319944167
  - 0.16140004156875076
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.006472491909385114
  - 0.038461538461538464
  - 0.04402515723270441
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.011443276573116662
  - 0.05204472455316335
  - 0.08673571515046653
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7899096042253586
  - 0.8081856890460928
  - 0.7400075645533928
  - 0.7981430265176003
  - 0.7879859906786391
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7403846153846154
  - -1.7184466019417475
  - -1.8942307692307692
  - -1.7358490566037736
  - -1.7058823529411764
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25240384615384615
  - -0.25485436893203883
  - -0.24759615384615385
  - -0.24056603773584906
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25240384615384615
  - -0.25485436893203883
  - -0.24759615384615385
  - -0.24056603773584906
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25240384615384615
  - -0.25485436893203883
  - -0.24759615384615385
  - -0.24056603773584906
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.327930402930403
  - -0.32797041146555717
  - -0.3240842490842491
  - -0.3081167675329298
  - -0.3289119569396386
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24358974358974358
  - -0.23300970873786409
  - -0.2964743589743589
  - -0.24528301886792453
  - -0.23529411764705876
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7475961538461539
  - 0.7451456310679613
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7475961538461539
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7475961538461539
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6720695970695971
  - 0.6720295885344428
  - 0.6759157509157508
  - 0.6918832324670702
  - 0.6710880430603613
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7475961538461539
  - 0.7451456310679613
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7475961538461539
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7475961538461539
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7594339622641509
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6720695970695971
  - 0.6720295885344428
  - 0.6759157509157508
  - 0.6918832324670702
  - 0.6710880430603613
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6769540850614439
  - 0.6512457809028365
  - 0.6037403668249672
  - 0.64389847173546
  - 0.6833201052259102
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7626397182667279
  - 0.764386536373507
  - 0.7182973510947788
  - 0.7609469562121751
  - 0.7696719210560041
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7564102564102565
  - 0.7669902912621359
  - 0.7035256410256411
  - 0.7547169811320755
  - 0.7647058823529415
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6499301075268817
  - 0.6449363237788286
  - 0.5830548047995073
  - 0.6507645967351913
  - 0.6690626247464412
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7670018096349014
  - 0.7630641218928871
  - 0.7628149949671552
  - 0.7667276917126375
  - 0.7796939884709309
  train_average_precision_macro_oob:
  - 0.7230964533420156
  - 0.6714567445242795
  - 0.679840342073168
  - 0.6562448908389943
  - 0.7230163448135691
  train_average_precision_micro:
  - 0.8284060478514278
  - 0.8186103090713651
  - 0.8191953318949918
  - 0.8397145395783285
  - 0.8362539951032583
  train_average_precision_micro_oob:
  - 0.8063264393900085
  - 0.7934219069313279
  - 0.8012994343670286
  - 0.8159801842175739
  - 0.8087623137968983
  train_average_precision_samples:
  - 0.842570281124498
  - 0.8233173076923077
  - 0.8419678714859437
  - 0.8462469733656174
  - 0.8527178257394085
  train_average_precision_samples_oob:
  - 0.8343373493975904
  - 0.8078926282051283
  - 0.8373493975903614
  - 0.8272800645682002
  - 0.8371302957633893
  train_average_precision_weighted:
  - 0.821186814248904
  - 0.81123921435526
  - 0.8128710429467569
  - 0.8346247403546386
  - 0.8279815724745384
  train_average_precision_weighted_oob:
  - 0.8067551534080766
  - 0.7895473874386524
  - 0.7964458695083882
  - 0.8099312380679315
  - 0.8062170752373436
  train_f1_macro:
  - 0.8668674698795181
  - 0.869591346153846
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_f1_macro_oob:
  - 0.8367469879518072
  - 0.8305288461538463
  - 0.8481927710843373
  - 0.8371670702179176
  - 0.8333333333333333
  train_f1_micro:
  - 0.8668674698795181
  - 0.8695913461538461
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_f1_micro_oob:
  - 0.8367469879518072
  - 0.8305288461538461
  - 0.8481927710843373
  - 0.8371670702179177
  - 0.8333333333333334
  train_f1_samples:
  - 0.8668674698795181
  - 0.8695913461538461
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_f1_samples_oob:
  - 0.8367469879518072
  - 0.8305288461538461
  - 0.8481927710843373
  - 0.8371670702179177
  - 0.8333333333333334
  train_f1_weighted:
  - 0.8311465959531907
  - 0.8344681634155319
  - 0.8310774197267541
  - 0.8310020264659943
  - 0.8287507761012093
  train_f1_weighted_oob:
  - 0.7946734305643628
  - 0.7856781376518219
  - 0.8107050210411022
  - 0.7941075710859883
  - 0.79174285274868
  train_jaccard_macro:
  - 0.7710459320196834
  - 0.7750683982496334
  - 0.7677335385737171
  - 0.7698384291908879
  - 0.7674397590225915
  train_jaccard_macro_oob:
  - 0.7275079527615873
  - 0.7192920232435265
  - 0.7431363111060882
  - 0.7284137205009275
  - 0.7224639098491609
  train_jaccard_micro:
  - 0.7650186071238703
  - 0.7692716640085061
  - 0.7622080679405521
  - 0.7640149492792312
  - 0.7613516367476241
  train_jaccard_micro_oob:
  - 0.719316416364578
  - 0.710174717368962
  - 0.7364016736401674
  - 0.7199375325351379
  - 0.7142857142857143
  train_jaccard_samples:
  - 0.787309236947791
  - 0.7913461538461538
  - 0.7840963855421684
  - 0.785956416464891
  - 0.7838529176658672
  train_jaccard_samples_oob:
  - 0.7394377510040158
  - 0.7288461538461537
  - 0.7574297188755018
  - 0.7397901533494753
  - 0.734292565947242
  train_jaccard_weighted:
  - 0.7133797507685221
  - 0.7182235084248298
  - 0.7128047245053304
  - 0.7128777454468754
  - 0.7099877322840765
  train_jaccard_weighted_oob:
  - 0.6612193164083846
  - 0.6492804112898806
  - 0.68341627457571
  - 0.6607725612625276
  - 0.6572001341402023
  train_label_ranking_average_precision_score:
  - 0.8425702811244974
  - 0.8233173076923072
  - 0.8419678714859435
  - 0.8462469733656168
  - 0.852717825739408
  train_label_ranking_average_precision_score_oob:
  - 0.8343373493975899
  - 0.8078926282051275
  - 0.8373493975903612
  - 0.8272800645681997
  - 0.8371302957633888
  train_matthews_corrcoef_macro:
  - 0.46900020949498644
  - 0.47454871538907295
  - 0.4625111409179246
  - 0.46629727148255895
  - 0.4650174185055721
  train_matthews_corrcoef_macro_oob:
  - 0.38553726452537646
  - 0.36948541136231056
  - 0.41555310120001665
  - 0.3908963708562765
  - 0.37494561455869413
  train_matthews_corrcoef_micro:
  - 0.632533610186976
  - 0.6399510351910819
  - 0.6270563018871629
  - 0.6314119536054693
  - 0.6261928595692887
  train_matthews_corrcoef_micro_oob:
  - 0.5372938386694824
  - 0.5150847088791077
  - 0.5745811871875518
  - 0.5398491114334311
  - 0.5270177902649892
  train_matthews_corrcoef_samples:
  - 0.47266192900814274
  - 0.4811411070634116
  - 0.46441458025920207
  - 0.47048281132387043
  - 0.4655988022503099
  train_matthews_corrcoef_samples_oob:
  - 0.35319843438358944
  - 0.3248911070634116
  - 0.3979631338274199
  - 0.3552834159989561
  - 0.34191211095728924
  train_matthews_corrcoef_weighted:
  - 0.5999413141384239
  - 0.6071846432713521
  - 0.5940089481862888
  - 0.5986334076786358
  - 0.5930920852428703
  train_matthews_corrcoef_weighted_oob:
  - 0.5039480229016909
  - 0.4820045147806091
  - 0.5406567482483523
  - 0.5069658859558772
  - 0.4921848280352036
  train_ndgc:
  - 0.8828512876293056
  - 0.8685091169258704
  - 0.8823610088108814
  - 0.8855802360346454
  - 0.8903917047093046
  train_ndgc_oob:
  - 0.8767788091678356
  - 0.8569156116485934
  - 0.8788621627938361
  - 0.8715661401557017
  - 0.8786782646445755
  train_neg_coverage_error:
  - -1.4144578313253011
  - -1.4615384615384615
  - -1.4096385542168675
  - -1.4092009685230025
  - -1.3980815347721822
  train_neg_coverage_error_oob:
  - -1.4578313253012047
  - -1.5120192307692308
  - -1.455421686746988
  - -1.476997578692494
  - -1.4484412470023982
  train_neg_hamming_loss_macro:
  - -0.13313253012048193
  - -0.13040865384615385
  - -0.13493975903614458
  - -0.1337772397094431
  - -0.13549160671462832
  train_neg_hamming_loss_macro_oob:
  - -0.16325301204819276
  - -0.16947115384615385
  - -0.15180722891566267
  - -0.16283292978208233
  - -0.16666666666666666
  train_neg_hamming_loss_micro:
  - -0.13313253012048193
  - -0.13040865384615385
  - -0.13493975903614458
  - -0.1337772397094431
  - -0.1354916067146283
  train_neg_hamming_loss_micro_oob:
  - -0.16325301204819276
  - -0.16947115384615385
  - -0.15180722891566265
  - -0.16283292978208233
  - -0.16666666666666666
  train_neg_hamming_loss_samples:
  - -0.13313253012048193
  - -0.13040865384615385
  - -0.13493975903614458
  - -0.1337772397094431
  - -0.1354916067146283
  train_neg_hamming_loss_samples_oob:
  - -0.16325301204819276
  - -0.16947115384615385
  - -0.15180722891566265
  - -0.16283292978208233
  - -0.16666666666666666
  train_neg_hamming_loss_weighted:
  - -0.16885340404680926
  - -0.16553183658446816
  - -0.1689225802732461
  - -0.16899797353400572
  - -0.17124922389879071
  train_neg_hamming_loss_weighted_oob:
  - -0.20532656943563726
  - -0.21432186234817813
  - -0.1892949789588978
  - -0.20589242891401163
  - -0.20825714725132008
  train_neg_label_ranking_loss:
  - -0.1355421686746988
  - -0.15204326923076922
  - -0.13413654618473894
  - -0.13297013720742534
  - -0.12909672262190247
  train_neg_label_ranking_loss_oob:
  - -0.1493975903614458
  - -0.16887019230769232
  - -0.14879518072289155
  - -0.1549636803874092
  - -0.14588329336530775
  train_precision_macro:
  - 0.8668674698795181
  - 0.869591346153846
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_precision_macro_oob:
  - 0.8367469879518072
  - 0.8305288461538463
  - 0.8481927710843373
  - 0.8371670702179176
  - 0.8333333333333333
  train_precision_micro:
  - 0.8668674698795181
  - 0.8695913461538461
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_precision_micro_oob:
  - 0.8367469879518072
  - 0.8305288461538461
  - 0.8481927710843373
  - 0.8371670702179177
  - 0.8333333333333334
  train_precision_samples:
  - 0.8668674698795181
  - 0.8695913461538461
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_precision_samples_oob:
  - 0.8367469879518072
  - 0.8305288461538461
  - 0.8481927710843373
  - 0.8371670702179177
  - 0.8333333333333334
  train_precision_weighted:
  - 0.8311465959531907
  - 0.8344681634155319
  - 0.8310774197267541
  - 0.8310020264659943
  - 0.8287507761012093
  train_precision_weighted_oob:
  - 0.7946734305643628
  - 0.7856781376518219
  - 0.8107050210411022
  - 0.7941075710859883
  - 0.79174285274868
  train_recall_macro:
  - 0.8668674698795181
  - 0.869591346153846
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_recall_macro_oob:
  - 0.8367469879518072
  - 0.8305288461538463
  - 0.8481927710843373
  - 0.8371670702179176
  - 0.8333333333333333
  train_recall_micro:
  - 0.8668674698795181
  - 0.8695913461538461
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_recall_micro_oob:
  - 0.8367469879518072
  - 0.8305288461538461
  - 0.8481927710843373
  - 0.8371670702179177
  - 0.8333333333333334
  train_recall_samples:
  - 0.8668674698795181
  - 0.8695913461538461
  - 0.8650602409638555
  - 0.8662227602905569
  - 0.8645083932853717
  train_recall_samples_oob:
  - 0.8367469879518072
  - 0.8305288461538461
  - 0.8481927710843373
  - 0.8371670702179177
  - 0.8333333333333334
  train_recall_weighted:
  - 0.8311465959531907
  - 0.8344681634155319
  - 0.8310774197267541
  - 0.8310020264659943
  - 0.8287507761012093
  train_recall_weighted_oob:
  - 0.7946734305643628
  - 0.7856781376518219
  - 0.8107050210411022
  - 0.7941075710859883
  - 0.79174285274868
  train_roc_auc_macro:
  - 0.8771626328878249
  - 0.8751158513430715
  - 0.8529378722129086
  - 0.8825108155525185
  - 0.8827621555467808
  train_roc_auc_macro_oob:
  - 0.8661421041640728
  - 0.8536165734079819
  - 0.8443878903206944
  - 0.8362127302172591
  - 0.8592561189761427
  train_roc_auc_micro:
  - 0.9047165013984235
  - 0.9035862127228182
  - 0.8933422709166416
  - 0.9143700424275965
  - 0.9099920569461719
  train_roc_auc_micro_oob:
  - 0.8850075892409988
  - 0.8818573502192661
  - 0.8783467782323617
  - 0.8908999116496276
  - 0.8909668239404024
  train_roc_auc_samples:
  - 0.8644578313253012
  - 0.8479567307692307
  - 0.865863453815261
  - 0.8670298627925748
  - 0.8709032773780975
  train_roc_auc_samples_oob:
  - 0.8506024096385543
  - 0.8311298076923077
  - 0.8512048192771084
  - 0.8450363196125908
  - 0.8541167066346922
  train_roc_auc_weighted:
  - 0.8683463443020185
  - 0.8616214779267833
  - 0.8524440166588579
  - 0.886092697429644
  - 0.8731188256455166
  train_roc_auc_weighted_oob:
  - 0.8514124728095317
  - 0.8431703630313786
  - 0.8451544954139494
  - 0.8634740547389761
  - 0.8512450580206411
start: 2023-12-21 20:21:42.474998
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
