active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0CAmZmZmZn5v8DMzMzMzATAQDMzMzMzA0AAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:20:37.027970
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__9
  params: {}
hash: 8c1cf849297f58de19c6f0c5f4b41de1726aee25e6919ee53971099afe968525
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8c1cf84_20231221T090408077187_embedding_weak__9_VirusGO.yml
results:
  fit_time:
  - 959.593323469162
  - 958.613297700882
  - 972.9191644191742
  - 978.9183418750763
  - 976.7518429756165
  score_time:
  - 3.5144951343536377
  - 3.667532205581665
  - 3.4119975566864014
  - 3.527945041656494
  - 3.717740297317505
  test_average_precision_macro:
  - 0.9632304882737408
  - 0.9167280394293917
  - 0.9428463329722208
  - 0.9009177384784754
  - 0.9350778853960828
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9472647894592027
  - 0.8042462671671192
  - 0.8675973119053513
  - 0.848353717346996
  - 0.9354864364006988
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9504273504273504
  - 0.8837209302325582
  - 0.9287878787878788
  - 0.9269230769230771
  - 0.9690476190476192
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.973156862745098
  - 0.887000200435959
  - 0.9278112811680923
  - 0.8852882306032461
  - 0.9530664502666765
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7863247863247863
  - 0.810077519379845
  - 0.8106060606060607
  - 0.8034188034188033
  - 0.7936507936507936
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7863247863247863
  - 0.810077519379845
  - 0.8106060606060606
  - 0.8034188034188035
  - 0.7936507936507936
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7863247863247862
  - 0.8100775193798452
  - 0.8106060606060609
  - 0.8034188034188033
  - 0.7936507936507937
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6666666666666667
  - 0.7055813953488372
  - 0.6999999999999998
  - 0.6964102564102564
  - 0.6804029304029304
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6748989366970082
  - 0.7027913453316574
  - 0.7054930533233329
  - 0.6937413399243529
  - 0.6832132249965706
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.647887323943662
  - 0.6807817589576547
  - 0.6815286624203821
  - 0.6714285714285714
  - 0.6578947368421053
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6550671550671553
  - 0.6871539313399779
  - 0.6850649350649353
  - 0.6843711843711845
  - 0.663265306122449
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5214729762580018
  - 0.5627492004615285
  - 0.5549966784528019
  - 0.5488460847095832
  - 0.5351974480935424
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9504273504273504
  - 0.8837209302325582
  - 0.9287878787878786
  - 0.9269230769230768
  - 0.9690476190476192
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.03180433488375555
  - 0.0
  - 0.08438357225583942
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.12722723933189609
  - 0.0
  - 0.25298221281347033
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.023255813953488372
  - 0.0
  - 0.10256410256410256
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.06488084316286132
  - 0.0
  - 0.17448865002045813
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9679830859945937
  - 0.913945278849815
  - 0.9498587433856539
  - 0.950442356695209
  - 0.9793379902122226
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5384615384615385
  - -1.5348837209302326
  - -1.3636363636363635
  - -1.5897435897435896
  - -1.380952380952381
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2136752136752137
  - -0.18992248062015504
  - -0.18939393939393936
  - -0.19658119658119658
  - -0.20634920634920637
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21367521367521367
  - -0.18992248062015504
  - -0.1893939393939394
  - -0.19658119658119658
  - -0.20634920634920634
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21367521367521364
  - -0.18992248062015502
  - -0.18939393939393936
  - -0.19658119658119658
  - -0.20634920634920634
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33333333333333326
  - -0.29441860465116276
  - -0.3
  - -0.3035897435897436
  - -0.31959706959706957
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.037820512820512825
  - -0.07267441860465117
  - -0.038636363636363635
  - -0.04736467236467236
  - -0.02261904761904762
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7863247863247863
  - 0.810077519379845
  - 0.8106060606060607
  - 0.8034188034188033
  - 0.7936507936507936
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7863247863247863
  - 0.810077519379845
  - 0.8106060606060606
  - 0.8034188034188035
  - 0.7936507936507936
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7863247863247862
  - 0.8100775193798452
  - 0.8106060606060609
  - 0.8034188034188033
  - 0.7936507936507937
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6666666666666667
  - 0.7055813953488372
  - 0.6999999999999998
  - 0.6964102564102564
  - 0.6804029304029304
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7863247863247863
  - 0.810077519379845
  - 0.8106060606060607
  - 0.8034188034188033
  - 0.7936507936507936
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7863247863247863
  - 0.810077519379845
  - 0.8106060606060606
  - 0.8034188034188035
  - 0.7936507936507936
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7863247863247862
  - 0.8100775193798452
  - 0.8106060606060609
  - 0.8034188034188033
  - 0.7936507936507937
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6666666666666667
  - 0.7055813953488372
  - 0.6999999999999998
  - 0.6964102564102564
  - 0.6804029304029304
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9849347819936055
  - 0.9485922574157867
  - 0.9811940441842403
  - 0.961716533433019
  - 0.9737684659633835
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.975
  - 0.9445192307692307
  - 0.9693457943925234
  - 0.9589673913043477
  - 0.975625
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9621794871794871
  - 0.9273255813953488
  - 0.9613636363636363
  - 0.9526353276353274
  - 0.9773809523809524
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9826320346320345
  - 0.9417948717948719
  - 0.9704524524524524
  - 0.9473313923395444
  - 0.9772174426450742
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9442839875217864
  - 0.9629782603484519
  - 0.9498368428762615
  - 0.9468468882464025
  - 0.9516969638728261
  train_average_precision_macro_oob:
  - 0.900272926156583
  - 0.9068163533056662
  - 0.8685855299972106
  - 0.882238964092663
  - 0.8944254491690833
  train_average_precision_micro:
  - 0.9304770138785998
  - 0.9403869402137789
  - 0.9314663490297855
  - 0.9338530054168276
  - 0.9497272546914189
  train_average_precision_micro_oob:
  - 0.8548723295631853
  - 0.8637803618074205
  - 0.8553421042131268
  - 0.8523570454725019
  - 0.8754897127566942
  train_average_precision_samples:
  - 0.9486111111111112
  - 0.9559959349593495
  - 0.9528629856850716
  - 0.9615079365079365
  - 0.9653535353535352
  train_average_precision_samples_oob:
  - 0.920734126984127
  - 0.9076219512195123
  - 0.8882753919563736
  - 0.8990079365079363
  - 0.9119191919191918
  train_average_precision_weighted:
  - 0.9458494397499194
  - 0.9652490395268328
  - 0.9574681822693342
  - 0.9508984819135348
  - 0.9581528189507967
  train_average_precision_weighted_oob:
  - 0.8894877307590852
  - 0.9114597548203621
  - 0.8919621291624018
  - 0.8873169384833043
  - 0.900572568950518
  train_f1_macro:
  - 0.8065476190476191
  - 0.8048780487804877
  - 0.8026584867075665
  - 0.8214285714285715
  - 0.8020202020202021
  train_f1_macro_oob:
  - 0.8035714285714287
  - 0.8028455284552846
  - 0.7944785276073619
  - 0.8134920634920636
  - 0.797979797979798
  train_f1_micro:
  - 0.8065476190476191
  - 0.8048780487804879
  - 0.8026584867075665
  - 0.8214285714285714
  - 0.802020202020202
  train_f1_micro_oob:
  - 0.8035714285714286
  - 0.8028455284552846
  - 0.7944785276073619
  - 0.8134920634920635
  - 0.797979797979798
  train_f1_samples:
  - 0.8065476190476191
  - 0.8048780487804876
  - 0.8026584867075663
  - 0.8214285714285714
  - 0.8020202020202019
  train_f1_samples_oob:
  - 0.8035714285714286
  - 0.8028455284552843
  - 0.7944785276073619
  - 0.8134920634920635
  - 0.7979797979797978
  train_f1_weighted:
  - 0.699522630834512
  - 0.6991668679063028
  - 0.6959545647816315
  - 0.7316419141914192
  - 0.6907272727272726
  train_f1_weighted_oob:
  - 0.6935997171145686
  - 0.6949408355469693
  - 0.6794022960578266
  - 0.7154644035832156
  - 0.6826060606060607
  train_jaccard_macro:
  - 0.6986223725479485
  - 0.6958888050434093
  - 0.6929070931941673
  - 0.7145795275727851
  - 0.6936011539318386
  train_jaccard_macro_oob:
  - 0.6954325798844715
  - 0.69372909160051
  - 0.6845894337318071
  - 0.7057646578147502
  - 0.6894420492736416
  train_jaccard_micro:
  - 0.6758104738154613
  - 0.673469387755102
  - 0.6703672075149445
  - 0.696969696969697
  - 0.6694772344013491
  train_jaccard_micro_oob:
  - 0.6716417910447762
  - 0.6706281833616299
  - 0.6590330788804071
  - 0.68561872909699
  - 0.6638655462184874
  train_jaccard_samples:
  - 0.683390022675737
  - 0.6826364692218352
  - 0.6765994741454865
  - 0.7089002267573696
  - 0.6766233766233768
  train_jaccard_samples_oob:
  - 0.6782879818594105
  - 0.6791521486643439
  - 0.6652059596844874
  - 0.6952947845804989
  - 0.6696969696969697
  train_jaccard_weighted:
  - 0.5549724650760008
  - 0.5539023414858534
  - 0.5508694576468006
  - 0.5906654462072678
  - 0.5456216564584507
  train_jaccard_weighted_oob:
  - 0.5486244618546261
  - 0.5494118481887361
  - 0.5340431001192361
  - 0.5726900758728674
  - 0.5372618560954743
  train_label_ranking_average_precision_score:
  - 0.9486111111111112
  - 0.9559959349593495
  - 0.9528629856850718
  - 0.9615079365079365
  - 0.9653535353535355
  train_label_ranking_average_precision_score_oob:
  - 0.920734126984127
  - 0.9076219512195122
  - 0.8882753919563737
  - 0.8990079365079365
  - 0.9119191919191921
  train_matthews_corrcoef_macro:
  - 0.04266857285380698
  - 0.049215658012563085
  - 0.06595980235464982
  - 0.0985423976084507
  - 0.03177177247169604
  train_matthews_corrcoef_macro_oob:
  - 0.0319580378513933
  - 0.04373673413621453
  - 0.01509328235512795
  - 0.060192926542884606
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.1670412831578706
  - 0.19936467696686744
  - 0.18889242499523523
  - 0.29837657132258366
  - 0.12658728518611606
  train_matthews_corrcoef_micro_oob:
  - 0.12608254758048956
  - 0.17813439227381456
  - 0.06270582614856653
  - 0.23706239179641989
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.041666666666666664
  - 0.06097560975609756
  - 0.03943060567015787
  - 0.13095238095238096
  - 0.024242424242424242
  train_matthews_corrcoef_samples_oob:
  - 0.023809523809523808
  - 0.04878048780487805
  - 0.0038800952885501587
  - 0.08333333333333333
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.08491468459024952
  - 0.10232958596671532
  - 0.1339816870192416
  - 0.20115363923196367
  - 0.06386126266810904
  train_matthews_corrcoef_weighted_oob:
  - 0.06359965948643617
  - 0.09093776404559457
  - 0.03138207222353336
  - 0.12336570093442686
  - 0.0
  train_ndgc:
  - 0.9629952128573857
  - 0.9687217248866093
  - 0.9666155944098138
  - 0.9715253278541796
  - 0.9757612827174779
  train_ndgc_oob:
  - 0.9433743202227921
  - 0.9339908614311702
  - 0.9193711993501363
  - 0.926359882330355
  - 0.937653703570305
  train_neg_coverage_error:
  - -1.3630952380952381
  - -1.3658536585365855
  - -1.4171779141104295
  - -1.3154761904761905
  - -1.3393939393939394
  train_neg_coverage_error_oob:
  - -1.4880952380952381
  - -1.5426829268292683
  - -1.6503067484662577
  - -1.494047619047619
  - -1.5151515151515151
  train_neg_hamming_loss_macro:
  - -0.19345238095238093
  - -0.19512195121951223
  - -0.19734151329243355
  - -0.17857142857142852
  - -0.19797979797979795
  train_neg_hamming_loss_macro_oob:
  - -0.19642857142857148
  - -0.19715447154471546
  - -0.20552147239263807
  - -0.1865079365079365
  - -0.202020202020202
  train_neg_hamming_loss_micro:
  - -0.19345238095238096
  - -0.1951219512195122
  - -0.19734151329243355
  - -0.17857142857142858
  - -0.19797979797979798
  train_neg_hamming_loss_micro_oob:
  - -0.19642857142857142
  - -0.19715447154471544
  - -0.20552147239263804
  - -0.1865079365079365
  - -0.20202020202020202
  train_neg_hamming_loss_samples:
  - -0.19345238095238096
  - -0.1951219512195122
  - -0.19734151329243352
  - -0.17857142857142858
  - -0.19797979797979798
  train_neg_hamming_loss_samples_oob:
  - -0.19642857142857142
  - -0.1971544715447154
  - -0.20552147239263804
  - -0.1865079365079365
  - -0.202020202020202
  train_neg_hamming_loss_weighted:
  - -0.300477369165488
  - -0.30083313209369716
  - -0.30404543521836846
  - -0.2683580858085809
  - -0.30927272727272725
  train_neg_hamming_loss_weighted_oob:
  - -0.3064002828854314
  - -0.30505916445303066
  - -0.32059770394217335
  - -0.28453559641678455
  - -0.3173939393939394
  train_neg_label_ranking_loss:
  - -0.02976190476190476
  - -0.02423780487804878
  - -0.03159509202453988
  - -0.0224702380952381
  - -0.022037037037037036
  train_neg_label_ranking_loss_oob:
  - -0.050876322751322756
  - -0.05594512195121951
  - -0.07673824130879345
  - -0.05610119047619048
  - -0.053080808080808076
  train_precision_macro:
  - 0.8065476190476191
  - 0.8048780487804877
  - 0.8026584867075665
  - 0.8214285714285715
  - 0.8020202020202021
  train_precision_macro_oob:
  - 0.8035714285714287
  - 0.8028455284552846
  - 0.7944785276073619
  - 0.8134920634920636
  - 0.797979797979798
  train_precision_micro:
  - 0.8065476190476191
  - 0.8048780487804879
  - 0.8026584867075665
  - 0.8214285714285714
  - 0.802020202020202
  train_precision_micro_oob:
  - 0.8035714285714286
  - 0.8028455284552846
  - 0.7944785276073619
  - 0.8134920634920635
  - 0.797979797979798
  train_precision_samples:
  - 0.8065476190476191
  - 0.8048780487804876
  - 0.8026584867075663
  - 0.8214285714285714
  - 0.8020202020202019
  train_precision_samples_oob:
  - 0.8035714285714286
  - 0.8028455284552843
  - 0.7944785276073619
  - 0.8134920634920635
  - 0.7979797979797978
  train_precision_weighted:
  - 0.699522630834512
  - 0.6991668679063028
  - 0.6959545647816315
  - 0.7316419141914192
  - 0.6907272727272726
  train_precision_weighted_oob:
  - 0.6935997171145686
  - 0.6949408355469693
  - 0.6794022960578266
  - 0.7154644035832156
  - 0.6826060606060607
  train_recall_macro:
  - 0.8065476190476191
  - 0.8048780487804877
  - 0.8026584867075665
  - 0.8214285714285715
  - 0.8020202020202021
  train_recall_macro_oob:
  - 0.8035714285714287
  - 0.8028455284552846
  - 0.7944785276073619
  - 0.8134920634920636
  - 0.797979797979798
  train_recall_micro:
  - 0.8065476190476191
  - 0.8048780487804879
  - 0.8026584867075665
  - 0.8214285714285714
  - 0.802020202020202
  train_recall_micro_oob:
  - 0.8035714285714286
  - 0.8028455284552846
  - 0.7944785276073619
  - 0.8134920634920635
  - 0.797979797979798
  train_recall_samples:
  - 0.8065476190476191
  - 0.8048780487804876
  - 0.8026584867075663
  - 0.8214285714285714
  - 0.8020202020202019
  train_recall_samples_oob:
  - 0.8035714285714286
  - 0.8028455284552843
  - 0.7944785276073619
  - 0.8134920634920635
  - 0.7979797979797978
  train_recall_weighted:
  - 0.699522630834512
  - 0.6991668679063028
  - 0.6959545647816315
  - 0.7316419141914192
  - 0.6907272727272726
  train_recall_weighted_oob:
  - 0.6935997171145686
  - 0.6949408355469693
  - 0.6794022960578266
  - 0.7154644035832156
  - 0.6826060606060607
  train_roc_auc_macro:
  - 0.9761490190410362
  - 0.9890145900304114
  - 0.9865516693796654
  - 0.9798020151479724
  - 0.9797138731067973
  train_roc_auc_macro_oob:
  - 0.9677377649606838
  - 0.9742379343432092
  - 0.9627493730623878
  - 0.9603557211011489
  - 0.9630485650148933
  train_roc_auc_micro:
  - 0.9779254600398004
  - 0.9818249727786077
  - 0.9750688986424416
  - 0.9798509937842419
  - 0.9820917721518987
  train_roc_auc_micro_oob:
  - 0.9614401886838808
  - 0.9596237117317872
  - 0.9482111870980914
  - 0.9580620593076677
  - 0.9601962025316455
  train_roc_auc_samples:
  - 0.9702380952380952
  - 0.9757621951219513
  - 0.9684049079754601
  - 0.977529761904762
  - 0.9779629629629629
  train_roc_auc_samples_oob:
  - 0.9491236772486773
  - 0.9440548780487804
  - 0.9232617586912066
  - 0.9438988095238094
  - 0.9469191919191919
  train_roc_auc_weighted:
  - 0.97385979777819
  - 0.9848889263208627
  - 0.9830529077254743
  - 0.9762595307899953
  - 0.9784457265717355
  train_roc_auc_weighted_oob:
  - 0.9583382735617512
  - 0.9655541200905141
  - 0.9605563222580071
  - 0.9539517706403702
  - 0.9596560905124689
start: 2023-12-21 09:04:08.077187
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
