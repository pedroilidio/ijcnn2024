active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwAzMzMzM/O/ADMzMzMz878AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:07:20.934840
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - rf
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    - - xt
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: false
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba_weak__3
  params: {}
hash: a9eb026aa1da647028fffb1d8feb18dd92f85ba5e8b5487b7ef9dd7901a777db
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a9eb026_20231221T170702598830_proba_weak__3_Gram_positive.yml
results:
  fit_time:
  - 9.624950170516968
  - 9.909029483795166
  - 9.669192552566528
  - 9.768039464950562
  - 9.811779499053955
  score_time:
  - 1.681391954421997
  - 1.7605884075164795
  - 1.7628247737884521
  - 1.6283657550811768
  - 1.7051992416381836
  test_average_precision_macro:
  - 0.8541413778054836
  - 0.8340475350895336
  - 0.9037083686331662
  - 0.8553138278771919
  - 0.8704083260377147
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9585305369921913
  - 0.9402776765327628
  - 0.9422724959790113
  - 0.972833261563984
  - 0.9490621831231647
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9567307692307693
  - 0.9474110032362459
  - 0.9476190476190476
  - 0.9531746031746031
  - 0.9509803921568627
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9450991844230376
  - 0.9372522834815443
  - 0.9577050378498727
  - 0.9749672686448884
  - 0.9500294737896694
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8677884615384615
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156864
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8677884615384616
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156863
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8677884615384616
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156863
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8469702467343977
  - 0.8761202389843166
  - 0.9096598639455782
  - 0.820861678004535
  - 0.8418046830382638
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7741379808286453
  - 0.8143420690537627
  - 0.8595093221737755
  - 0.7647613657800414
  - 0.7748465130570177
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7664543524416136
  - 0.810989010989011
  - 0.8584070796460177
  - 0.7536534446764092
  - 0.7700650759219089
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7910256410256409
  - 0.8394822006472491
  - 0.8793650793650793
  - 0.7752380952380951
  - 0.7947712418300651
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7392456588850457
  - 0.7804178698681631
  - 0.8347995071926684
  - 0.7043953970948879
  - 0.7287384384341474
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9567307692307693
  - 0.947411003236246
  - 0.9476190476190476
  - 0.9531746031746032
  - 0.9509803921568627
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.41281864320360484
  - 0.5123984631019036
  - 0.5969658249063917
  - 0.4330205976760978
  - 0.4639902177090266
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6392438671066755
  - 0.7120017491444431
  - 0.7932160023656972
  - 0.6074404968548371
  - 0.6387902614011973
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49038461538461536
  - 0.6181229773462783
  - 0.7015873015873016
  - 0.4380952380952381
  - 0.4991243490443427
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5726544933034532
  - 0.6811268200533586
  - 0.7645108621693397
  - 0.5674449508957626
  - 0.6048744036404919
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.968201576960039
  - 0.9606473635153152
  - 0.960736714287151
  - 0.9649118922714858
  - 0.9632002475154843
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1634615384615385
  - -1.1650485436893203
  - -1.161904761904762
  - -1.1428571428571428
  - -1.1666666666666667
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.13221153846153846
  - -0.10436893203883495
  - -0.07619047619047618
  - -0.14047619047619048
  - -0.1299019607843137
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.13221153846153846
  - -0.10436893203883495
  - -0.0761904761904762
  - -0.14047619047619048
  - -0.12990196078431374
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.13221153846153846
  - -0.10436893203883495
  - -0.0761904761904762
  - -0.14047619047619048
  - -0.12990196078431374
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15302975326560234
  - -0.12387976101568335
  - -0.09034013605442177
  - -0.17913832199546487
  - -0.15819531696173614
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04647435897435897
  - -0.0517799352750809
  - -0.053968253968253964
  - -0.047619047619047616
  - -0.0522875816993464
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8677884615384615
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156864
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8677884615384616
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156863
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8677884615384616
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156863
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8469702467343977
  - 0.8761202389843166
  - 0.9096598639455782
  - 0.820861678004535
  - 0.8418046830382638
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8677884615384615
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156864
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8677884615384616
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156863
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8677884615384616
  - 0.8956310679611651
  - 0.9238095238095239
  - 0.8595238095238096
  - 0.8700980392156863
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8469702467343977
  - 0.8761202389843166
  - 0.9096598639455782
  - 0.820861678004535
  - 0.8418046830382638
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9805332737112457
  - 0.9688766319031394
  - 0.9892716708367738
  - 0.9906471171802054
  - 0.9849976303786555
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9737979306147291
  - 0.96747002997003
  - 0.9667120181405895
  - 0.9789871504157218
  - 0.9667356358427504
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.953525641025641
  - 0.948220064724919
  - 0.9460317460317461
  - 0.9523809523809523
  - 0.9477124183006537
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9887909609799829
  - 0.9745759111527795
  - 0.9910662751838298
  - 0.9954773576097106
  - 0.9895968083728305
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8613290149039048
  - 0.957908612626729
  - 0.9660401771398899
  - 0.9456301238974187
  - 0.9172633042624257
  train_average_precision_macro_oob:
  - 0.8542696727101221
  - 0.8950539488512803
  - 0.8831807464922466
  - 0.8819831075513014
  - 0.8460688261884488
  train_average_precision_micro:
  - 0.9547558744207664
  - 0.9678314863818267
  - 0.9585532715621928
  - 0.9647852794547895
  - 0.9547435212030139
  train_average_precision_micro_oob:
  - 0.9509016305130817
  - 0.9667682473013254
  - 0.9579313839421875
  - 0.9609052539126324
  - 0.9510425794136976
  train_average_precision_samples:
  - 0.9518072289156626
  - 0.9611378205128206
  - 0.9541062801932367
  - 0.9567230273752012
  - 0.951638689048761
  train_average_precision_samples_oob:
  - 0.9493975903614458
  - 0.9585336538461539
  - 0.9530998389694043
  - 0.9567230273752012
  - 0.9480415667466028
  train_average_precision_weighted:
  - 0.9509597102535922
  - 0.9832037319094858
  - 0.9792464636906834
  - 0.9793333165059278
  - 0.963295161694247
  train_average_precision_weighted_oob:
  - 0.945589703685995
  - 0.9732355790361442
  - 0.9675851916528457
  - 0.9663571155862426
  - 0.9505997613896198
  train_f1_macro:
  - 0.8771084337349397
  - 0.9212740384615385
  - 0.9221014492753623
  - 0.8574879227053139
  - 0.8884892086330936
  train_f1_macro_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309178
  - 0.8860911270983214
  train_f1_micro:
  - 0.8771084337349397
  - 0.9212740384615384
  - 0.9221014492753623
  - 0.857487922705314
  - 0.8884892086330936
  train_f1_micro_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309179
  - 0.8860911270983214
  train_f1_samples:
  - 0.8771084337349397
  - 0.9212740384615384
  - 0.9221014492753623
  - 0.857487922705314
  - 0.8884892086330936
  train_f1_samples_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309179
  - 0.8860911270983214
  train_f1_weighted:
  - 0.8548380572650313
  - 0.9086940058747934
  - 0.9063980768786262
  - 0.8270519843746389
  - 0.8641772296448555
  train_f1_weighted_oob:
  - 0.8466383519690273
  - 0.9118838351386084
  - 0.89484085708342
  - 0.8211057947900053
  - 0.8616820829051045
  train_jaccard_macro:
  - 0.786680242784454
  - 0.8554319981892702
  - 0.8570759377804524
  - 0.7587488746071742
  - 0.803115143221702
  train_jaccard_macro_oob:
  - 0.7766264950992237
  - 0.8572397628624386
  - 0.8429006176498601
  - 0.7520681693129885
  - 0.7993812874517862
  train_jaccard_micro:
  - 0.7811158798283262
  - 0.8540389972144847
  - 0.8554621848739495
  - 0.7505285412262156
  - 0.7993527508090615
  train_jaccard_micro_oob:
  - 0.7706666666666667
  - 0.8561070831009482
  - 0.8410227904391329
  - 0.7431578947368421
  - 0.7954790096878364
  train_jaccard_samples:
  - 0.8046586345381525
  - 0.8759615384615385
  - 0.8776167471819645
  - 0.7729468599033815
  - 0.8238209432454036
  train_jaccard_samples_oob:
  - 0.7937349397590361
  - 0.8772435897435896
  - 0.8640901771336553
  - 0.7652173913043477
  - 0.8199840127897681
  train_jaccard_weighted:
  - 0.7490200664433405
  - 0.8334013712642899
  - 0.829810142166643
  - 0.7098908552850013
  - 0.7623355229780212
  train_jaccard_weighted_oob:
  - 0.7364724820160354
  - 0.8384245272067407
  - 0.8104623502890459
  - 0.7016731628465418
  - 0.7584327713978862
  train_label_ranking_average_precision_score:
  - 0.9518072289156626
  - 0.9611378205128205
  - 0.9541062801932367
  - 0.9567230273752014
  - 0.951638689048761
  train_label_ranking_average_precision_score_oob:
  - 0.9493975903614458
  - 0.9585336538461539
  - 0.9530998389694043
  - 0.9567230273752014
  - 0.9480415667466028
  train_matthews_corrcoef_macro:
  - 0.45721475679886203
  - 0.5847369003370306
  - 0.5907389081597023
  - 0.4134604053887124
  - 0.5064643454112895
  train_matthews_corrcoef_macro_oob:
  - 0.4361409602430528
  - 0.585581988348698
  - 0.5727427875227028
  - 0.39406443154574755
  - 0.49898477182801626
  train_matthews_corrcoef_micro:
  - 0.6612802139201428
  - 0.7873444819262632
  - 0.7897561210765399
  - 0.6047266855321383
  - 0.6944304706735333
  train_matthews_corrcoef_micro_oob:
  - 0.6414327633163253
  - 0.7912692968349465
  - 0.766236143043401
  - 0.5896885617087736
  - 0.6874425135779936
  train_matthews_corrcoef_samples:
  - 0.5164658634538153
  - 0.6977019637881161
  - 0.7040773765017213
  - 0.438592633500458
  - 0.5675459632294165
  train_matthews_corrcoef_samples_oob:
  - 0.4889414062711397
  - 0.6993045278906802
  - 0.6702609513809483
  - 0.4192689620028735
  - 0.5579536370903277
  train_matthews_corrcoef_weighted:
  - 0.6174902713432653
  - 0.7591722512797889
  - 0.7613237119177908
  - 0.5560602084942132
  - 0.6611285761669277
  train_matthews_corrcoef_weighted_oob:
  - 0.5936081308167485
  - 0.7637005517440649
  - 0.7367926126701604
  - 0.5350528656097043
  - 0.6535645311573397
  train_ndgc:
  - 0.9638395617267456
  - 0.9708954779934913
  - 0.9657795800352136
  - 0.9676540432966051
  - 0.9639416687965224
  train_ndgc_oob:
  - 0.9621829594372577
  - 0.9689544589194921
  - 0.9649167197958358
  - 0.9676540432966051
  - 0.9612864871675402
  train_neg_coverage_error:
  - -1.1566265060240963
  - -1.1418269230769231
  - -1.1521739130434783
  - -1.1521739130434783
  - -1.1558752997601918
  train_neg_coverage_error_oob:
  - -1.1614457831325302
  - -1.1490384615384615
  - -1.1545893719806763
  - -1.1521739130434783
  - -1.1630695443645085
  train_neg_hamming_loss_macro:
  - -0.12289156626506023
  - -0.07872596153846154
  - -0.0778985507246377
  - -0.14251207729468598
  - -0.11151079136690648
  train_neg_hamming_loss_macro_oob:
  - -0.12951807228915663
  - -0.07752403846153846
  - -0.08635265700483091
  - -0.1473429951690821
  - -0.11390887290167867
  train_neg_hamming_loss_micro:
  - -0.12289156626506025
  - -0.07872596153846154
  - -0.07789855072463768
  - -0.14251207729468598
  - -0.11151079136690648
  train_neg_hamming_loss_micro_oob:
  - -0.12951807228915663
  - -0.07752403846153846
  - -0.08635265700483091
  - -0.1473429951690821
  - -0.11390887290167866
  train_neg_hamming_loss_samples:
  - -0.12289156626506025
  - -0.07872596153846154
  - -0.07789855072463768
  - -0.14251207729468598
  - -0.11151079136690648
  train_neg_hamming_loss_samples_oob:
  - -0.12951807228915663
  - -0.07752403846153846
  - -0.08635265700483091
  - -0.1473429951690821
  - -0.11390887290167866
  train_neg_hamming_loss_weighted:
  - -0.14516194273496863
  - -0.09130599412520653
  - -0.09360192312137393
  - -0.17294801562536113
  - -0.13582277035514448
  train_neg_hamming_loss_weighted_oob:
  - -0.1533616480309728
  - -0.08811616486139158
  - -0.10515914291657999
  - -0.17889420520999466
  - -0.13831791709489552
  train_neg_label_ranking_loss:
  - -0.05060240963855422
  - -0.04447115384615385
  - -0.04710144927536232
  - -0.04710144927536232
  - -0.049160671462829736
  train_neg_label_ranking_loss_oob:
  - -0.05200803212851404
  - -0.046875
  - -0.048510466988727866
  - -0.04710144927536232
  - -0.05155875299760192
  train_precision_macro:
  - 0.8771084337349397
  - 0.9212740384615385
  - 0.9221014492753623
  - 0.8574879227053139
  - 0.8884892086330936
  train_precision_macro_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309178
  - 0.8860911270983214
  train_precision_micro:
  - 0.8771084337349397
  - 0.9212740384615384
  - 0.9221014492753623
  - 0.857487922705314
  - 0.8884892086330936
  train_precision_micro_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309179
  - 0.8860911270983214
  train_precision_samples:
  - 0.8771084337349397
  - 0.9212740384615384
  - 0.9221014492753623
  - 0.857487922705314
  - 0.8884892086330936
  train_precision_samples_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309179
  - 0.8860911270983214
  train_precision_weighted:
  - 0.8548380572650313
  - 0.9086940058747934
  - 0.9063980768786262
  - 0.8270519843746389
  - 0.8641772296448555
  train_precision_weighted_oob:
  - 0.8466383519690273
  - 0.9118838351386084
  - 0.89484085708342
  - 0.8211057947900053
  - 0.8616820829051045
  train_recall_macro:
  - 0.8771084337349397
  - 0.9212740384615385
  - 0.9221014492753623
  - 0.8574879227053139
  - 0.8884892086330936
  train_recall_macro_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309178
  - 0.8860911270983214
  train_recall_micro:
  - 0.8771084337349397
  - 0.9212740384615384
  - 0.9221014492753623
  - 0.857487922705314
  - 0.8884892086330936
  train_recall_micro_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309179
  - 0.8860911270983214
  train_recall_samples:
  - 0.8771084337349397
  - 0.9212740384615384
  - 0.9221014492753623
  - 0.857487922705314
  - 0.8884892086330936
  train_recall_samples_oob:
  - 0.8704819277108434
  - 0.9224759615384616
  - 0.913647342995169
  - 0.8526570048309179
  - 0.8860911270983214
  train_recall_weighted:
  - 0.8548380572650313
  - 0.9086940058747934
  - 0.9063980768786262
  - 0.8270519843746389
  - 0.8641772296448555
  train_recall_weighted_oob:
  - 0.8466383519690273
  - 0.9118838351386084
  - 0.89484085708342
  - 0.8211057947900053
  - 0.8616820829051045
  train_roc_auc_macro:
  - 0.9844921879185347
  - 0.9942042919526373
  - 0.9926242475925977
  - 0.9932234971500351
  - 0.9858912631278535
  train_roc_auc_macro_oob:
  - 0.9797760780992457
  - 0.9918637319266843
  - 0.9815847673959074
  - 0.9870665440206023
  - 0.9781263060838883
  train_roc_auc_micro:
  - 0.9738545446828377
  - 0.9766013936413913
  - 0.9715624057941887
  - 0.9743953436241507
  - 0.9708867521367522
  train_roc_auc_micro_oob:
  - 0.970707906723696
  - 0.9741419137169202
  - 0.970831948427391
  - 0.9715971894783221
  - 0.9691163003663005
  train_roc_auc_samples:
  - 0.9493975903614458
  - 0.9555288461538461
  - 0.9528985507246377
  - 0.9528985507246377
  - 0.9508393285371702
  train_roc_auc_samples_oob:
  - 0.9479919678714859
  - 0.953125
  - 0.9514895330112721
  - 0.9528985507246377
  - 0.9484412470023981
  train_roc_auc_weighted:
  - 0.9879840573529531
  - 0.9955007455395412
  - 0.992253152153021
  - 0.9935699789177345
  - 0.9892572286358382
  train_roc_auc_weighted_oob:
  - 0.9835193216551417
  - 0.9946062462758865
  - 0.9901186670466265
  - 0.9898655612661337
  - 0.9861821360994762
start: 2023-12-21 17:07:02.598830
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
