active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACEAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAMAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:07:46.938424
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__2
  params: {}
hash: f7efcb6d2e9d2a14cb3d11377e0f63b1c6ce7de18c080c4b709ca892fb433968
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f7efcb6_20231221T220730202176_embedding_proba__2_CHD_49.yml
results:
  fit_time:
  - 5.744123697280884
  - 5.897967576980591
  - 6.428504705429077
  - 5.950650453567505
  - 6.52733302116394
  score_time:
  - 2.3564860820770264
  - 2.594141721725464
  - 2.4867584705352783
  - 2.5049808025360107
  - 2.51902437210083
  test_average_precision_macro:
  - 0.5784754928026582
  - 0.5306910668081263
  - 0.5320560698080373
  - 0.5267004369016547
  - 0.5081304807937294
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7330619583606003
  - 0.7124233563486244
  - 0.6841128305562763
  - 0.6935493472008689
  - 0.6687450044575537
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7965534979423867
  - 0.7842217217217218
  - 0.7945684523809523
  - 0.7809734513274337
  - 0.7899649649649649
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6931654117518008
  - 0.6660441387177846
  - 0.6438151702418697
  - 0.6580627418318287
  - 0.6270280121673597
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.726851851851852
  - 0.7162162162162162
  - 0.7023809523809524
  - 0.7035398230088497
  - 0.6861861861861863
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7268518518518519
  - 0.7162162162162162
  - 0.7023809523809523
  - 0.7035398230088495
  - 0.6861861861861862
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7268518518518517
  - 0.7162162162162162
  - 0.7023809523809523
  - 0.7035398230088497
  - 0.6861861861861862
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6880216484089724
  - 0.6782182879743855
  - 0.6626674107142858
  - 0.6565939995683142
  - 0.6366786366786367
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5891854126031341
  - 0.5749638935018426
  - 0.561910495676362
  - 0.5619580345082228
  - 0.5428338574178718
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5709090909090909
  - 0.5578947368421052
  - 0.5412844036697247
  - 0.5426621160409556
  - 0.5222857142857142
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6219737053070388
  - 0.5999687999687999
  - 0.5830859616573901
  - 0.5802398191778724
  - 0.5634608634608635
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.531240531548073
  - 0.5171347885151322
  - 0.504541497420605
  - 0.4940918749498329
  - 0.47110372328989525
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8058127572016457
  - 0.7932307307307309
  - 0.7945684523809524
  - 0.7809734513274332
  - 0.7989739739739737
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.19119546718786126
  - 0.13136251254580417
  - 0.14688568152852283
  - 0.11094915129808092
  - 0.0836004574982279
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.44839357491294624
  - 0.4243089359914205
  - 0.39576989682211233
  - 0.393651603460148
  - 0.3628515338822429
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4631247815937521
  - 0.4392543518626482
  - 0.41918540871193927
  - 0.4152362370853571
  - 0.3895781305854229
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.21195898802387564
  - 0.13284737137521627
  - 0.17122340138535755
  - 0.10614218577908914
  - 0.07097083719797515
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8622059012802142
  - 0.8548176323465174
  - 0.8677996780018865
  - 0.8557774652238278
  - 0.8593217816256609
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6296296296296298
  - -3.6666666666666665
  - -3.669642857142857
  - -3.6283185840707963
  - -3.6666666666666665
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.27314814814814814
  - -0.28378378378378377
  - -0.29761904761904767
  - -0.2964601769911504
  - -0.31381381381381385
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.27314814814814814
  - -0.28378378378378377
  - -0.2976190476190476
  - -0.29646017699115046
  - -0.3138138138138138
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2731481481481482
  - -0.28378378378378377
  - -0.29761904761904756
  - -0.29646017699115046
  - -0.3138138138138138
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31197835159102766
  - -0.32178171202561445
  - -0.3373325892857143
  - -0.34340600043168573
  - -0.36332136332136333
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19359567901234567
  - -0.20265265265265264
  - -0.20820932539682538
  - -0.20833333333333334
  - -0.2100850850850851
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.726851851851852
  - 0.7162162162162162
  - 0.7023809523809524
  - 0.7035398230088497
  - 0.6861861861861863
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7268518518518519
  - 0.7162162162162162
  - 0.7023809523809523
  - 0.7035398230088495
  - 0.6861861861861862
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7268518518518517
  - 0.7162162162162162
  - 0.7023809523809523
  - 0.7035398230088497
  - 0.6861861861861862
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6880216484089724
  - 0.6782182879743855
  - 0.6626674107142858
  - 0.6565939995683142
  - 0.6366786366786367
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.726851851851852
  - 0.7162162162162162
  - 0.7023809523809524
  - 0.7035398230088497
  - 0.6861861861861863
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7268518518518519
  - 0.7162162162162162
  - 0.7023809523809523
  - 0.7035398230088495
  - 0.6861861861861862
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7268518518518517
  - 0.7162162162162162
  - 0.7023809523809523
  - 0.7035398230088497
  - 0.6861861861861862
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6880216484089724
  - 0.6782182879743855
  - 0.6626674107142858
  - 0.6565939995683142
  - 0.6366786366786367
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6535512004284377
  - 0.559561763481435
  - 0.5880864071521184
  - 0.5616411011931748
  - 0.5377645681482922
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8018398854666461
  - 0.7908764123449753
  - 0.7745044849537036
  - 0.7798461908623469
  - 0.7735461906514537
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.7917906746031748
  - 0.7916666666666667
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6322211356928809
  - 0.6211952766261374
  - 0.5821645435549422
  - 0.5991928460053341
  - 0.5560904315477916
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9949917716430065
  - 0.9947536643797381
  - 0.9952147776063605
  - 0.993987813916798
  - 0.994565252703041
  train_average_precision_macro_oob:
  - 0.8938327328690784
  - 0.8887165536476944
  - 0.9175960048777089
  - 0.8598403951566702
  - 0.9279155983552378
  train_average_precision_micro:
  - 0.9871728320883734
  - 0.9861506323151219
  - 0.986955798656392
  - 0.9861987366675679
  - 0.987472648479994
  train_average_precision_micro_oob:
  - 0.9291307838934594
  - 0.9305425527932509
  - 0.9294644149742844
  - 0.9266847817102476
  - 0.9346536971142417
  train_average_precision_samples:
  - 0.9765100671140939
  - 0.9739645895895896
  - 0.9695761223977929
  - 0.9696266968325793
  - 0.9744963713713715
  train_average_precision_samples_oob:
  - 0.918304126273925
  - 0.9191378878878879
  - 0.9131333082518184
  - 0.9154443187531422
  - 0.9262105855855857
  train_average_precision_weighted:
  - 0.9949487723156287
  - 0.9949834794901068
  - 0.9952791618917503
  - 0.994289262499673
  - 0.9945977290608755
  train_average_precision_weighted_oob:
  - 0.939189242779615
  - 0.9414913157322458
  - 0.9432060081487241
  - 0.9323333160206365
  - 0.9428568858543119
  train_f1_macro:
  - 0.9519015659955258
  - 0.9455705705705705
  - 0.9503386004514672
  - 0.9472096530920061
  - 0.9478228228228228
  train_f1_macro_oob:
  - 0.8765846383296046
  - 0.8776276276276276
  - 0.8747178329571105
  - 0.8751885369532428
  - 0.8903903903903903
  train_f1_micro:
  - 0.9519015659955258
  - 0.9455705705705706
  - 0.9503386004514672
  - 0.947209653092006
  - 0.9478228228228228
  train_f1_micro_oob:
  - 0.8765846383296048
  - 0.8776276276276276
  - 0.8747178329571106
  - 0.8751885369532428
  - 0.8903903903903904
  train_f1_samples:
  - 0.9519015659955258
  - 0.9455705705705707
  - 0.9503386004514672
  - 0.9472096530920062
  - 0.9478228228228229
  train_f1_samples_oob:
  - 0.8765846383296049
  - 0.8776276276276277
  - 0.8747178329571106
  - 0.8751885369532428
  - 0.8903903903903905
  train_f1_weighted:
  - 0.9451901565995525
  - 0.9393878594751957
  - 0.9443479770793541
  - 0.9408761287518032
  - 0.9407771645991541
  train_f1_weighted_oob:
  - 0.8503749347177076
  - 0.8519532633069751
  - 0.8489972217398853
  - 0.8492698927068308
  - 0.8679012782415924
  train_jaccard_macro:
  - 0.9085306315712458
  - 0.8971683127266163
  - 0.9056691434476182
  - 0.9003328261544743
  - 0.9012988044961271
  train_jaccard_macro_oob:
  - 0.7843831950282821
  - 0.7856091168000429
  - 0.7809642348160555
  - 0.7816748565587931
  - 0.8058079392549257
  train_jaccard_micro:
  - 0.9082177161152615
  - 0.8967604129583482
  - 0.9053763440860215
  - 0.8997134670487106
  - 0.900820549411345
  train_jaccard_micro_oob:
  - 0.7802854298041819
  - 0.7819397993311037
  - 0.7773319959879639
  - 0.7780757626550453
  - 0.8024357239512855
  train_jaccard_samples:
  - 0.9214871630979012
  - 0.9113577863577863
  - 0.9174459851660753
  - 0.914458090928679
  - 0.9147361647361647
  train_jaccard_samples_oob:
  - 0.8108128262490677
  - 0.8127198627198626
  - 0.8078039342147694
  - 0.8090830737889562
  - 0.8287108537108536
  train_jaccard_weighted:
  - 0.8962755231336594
  - 0.8859391331584001
  - 0.8947171909209275
  - 0.8888442923469811
  - 0.8885127204775621
  train_jaccard_weighted_oob:
  - 0.7415564983134594
  - 0.7434266357553511
  - 0.7386606849265361
  - 0.7393320040411832
  - 0.7680711038868413
  train_label_ranking_average_precision_score:
  - 0.9809843400447428
  - 0.9784690940940941
  - 0.9763481314271383
  - 0.976414027149321
  - 0.979000875875876
  train_label_ranking_average_precision_score_oob:
  - 0.9227783992045729
  - 0.9236423923923915
  - 0.9199053172811634
  - 0.9222316490698835
  - 0.9307150900900897
  train_matthews_corrcoef_macro:
  - 0.7357991961954581
  - 0.7206517416538826
  - 0.7307232482986749
  - 0.7246819732338787
  - 0.7272485141470805
  train_matthews_corrcoef_macro_oob:
  - 0.5490542321333305
  - 0.5555354101626143
  - 0.5452711693277797
  - 0.5424846867546279
  - 0.586899656216754
  train_matthews_corrcoef_micro:
  - 0.9018030329019554
  - 0.8889407737107529
  - 0.8986148823488687
  - 0.8925878388608091
  - 0.8936627627867766
  train_matthews_corrcoef_micro_oob:
  - 0.7490091016245727
  - 0.7516661661483982
  - 0.7455372806260326
  - 0.7472754674491844
  - 0.7774925911422721
  train_matthews_corrcoef_samples:
  - 0.8996652320632034
  - 0.8888785537376667
  - 0.8906281541682154
  - 0.8846543732975753
  - 0.8889368953625911
  train_matthews_corrcoef_samples_oob:
  - 0.7526457636442475
  - 0.7484314336812371
  - 0.7407748664520846
  - 0.7440179017980612
  - 0.7782258136175889
  train_matthews_corrcoef_weighted:
  - 0.8630178271153214
  - 0.8482808047278869
  - 0.8605861482359348
  - 0.8520072453168318
  - 0.853784061573297
  train_matthews_corrcoef_weighted_oob:
  - 0.6157220398207881
  - 0.6262366532886009
  - 0.6162342612565903
  - 0.6077668480828938
  - 0.6667969889234772
  train_ndgc:
  - 0.9844777925596171
  - 0.983474616213866
  - 0.9788555486883809
  - 0.9793584935198361
  - 0.9826702494953188
  train_ndgc_oob:
  - 0.9470032287423872
  - 0.947970677043842
  - 0.9428691259833203
  - 0.9440642942645335
  - 0.9519944731433766
  train_neg_coverage_error:
  - -2.7114093959731544
  - -2.740990990990991
  - -2.7336343115124153
  - -2.751131221719457
  - -2.7117117117117115
  train_neg_coverage_error_oob:
  - -2.9910514541387023
  - -3.02027027027027
  - -3.038374717832957
  - -3.0361990950226243
  - -2.97972972972973
  train_neg_hamming_loss_macro:
  - -0.04809843400447427
  - -0.05442942942942943
  - -0.049661399548532735
  - -0.05279034690799397
  - -0.05217717717717718
  train_neg_hamming_loss_macro_oob:
  - -0.12341536167039523
  - -0.12237237237237236
  - -0.1252821670428894
  - -0.12481146304675717
  - -0.1096096096096096
  train_neg_hamming_loss_micro:
  - -0.04809843400447427
  - -0.05442942942942943
  - -0.04966139954853273
  - -0.05279034690799397
  - -0.052177177177177174
  train_neg_hamming_loss_micro_oob:
  - -0.12341536167039523
  - -0.12237237237237238
  - -0.1252821670428894
  - -0.12481146304675717
  - -0.10960960960960961
  train_neg_hamming_loss_samples:
  - -0.04809843400447427
  - -0.054429429429429424
  - -0.04966139954853273
  - -0.05279034690799397
  - -0.052177177177177174
  train_neg_hamming_loss_samples_oob:
  - -0.12341536167039523
  - -0.12237237237237236
  - -0.1252821670428894
  - -0.12481146304675717
  - -0.10960960960960962
  train_neg_hamming_loss_weighted:
  - -0.05480984340044742
  - -0.06061214052480427
  - -0.055652022920645944
  - -0.05912387124819695
  - -0.05922283540084587
  train_neg_hamming_loss_weighted_oob:
  - -0.14962506528229233
  - -0.1480467366930249
  - -0.1510027782601146
  - -0.15073010729316919
  - -0.13209872175840762
  train_neg_label_ranking_loss:
  - -0.020469798657718117
  - -0.02281031031031031
  - -0.02212816654125909
  - -0.023956762192056308
  - -0.02033283283283283
  train_neg_label_ranking_loss_oob:
  - -0.07259507829977628
  - -0.0731981981981982
  - -0.07572109355405067
  - -0.07500628456510809
  - -0.06573448448448448
  train_precision_macro:
  - 0.9519015659955258
  - 0.9455705705705705
  - 0.9503386004514672
  - 0.9472096530920061
  - 0.9478228228228228
  train_precision_macro_oob:
  - 0.8765846383296046
  - 0.8776276276276276
  - 0.8747178329571105
  - 0.8751885369532428
  - 0.8903903903903903
  train_precision_micro:
  - 0.9519015659955258
  - 0.9455705705705706
  - 0.9503386004514672
  - 0.947209653092006
  - 0.9478228228228228
  train_precision_micro_oob:
  - 0.8765846383296048
  - 0.8776276276276276
  - 0.8747178329571106
  - 0.8751885369532428
  - 0.8903903903903904
  train_precision_samples:
  - 0.9519015659955258
  - 0.9455705705705707
  - 0.9503386004514672
  - 0.9472096530920062
  - 0.9478228228228229
  train_precision_samples_oob:
  - 0.8765846383296049
  - 0.8776276276276277
  - 0.8747178329571106
  - 0.8751885369532428
  - 0.8903903903903905
  train_precision_weighted:
  - 0.9451901565995525
  - 0.9393878594751957
  - 0.9443479770793541
  - 0.9408761287518032
  - 0.9407771645991541
  train_precision_weighted_oob:
  - 0.8503749347177076
  - 0.8519532633069751
  - 0.8489972217398853
  - 0.8492698927068308
  - 0.8679012782415924
  train_recall_macro:
  - 0.9519015659955258
  - 0.9455705705705705
  - 0.9503386004514672
  - 0.9472096530920061
  - 0.9478228228228228
  train_recall_macro_oob:
  - 0.8765846383296046
  - 0.8776276276276276
  - 0.8747178329571105
  - 0.8751885369532428
  - 0.8903903903903903
  train_recall_micro:
  - 0.9519015659955258
  - 0.9455705705705706
  - 0.9503386004514672
  - 0.947209653092006
  - 0.9478228228228228
  train_recall_micro_oob:
  - 0.8765846383296048
  - 0.8776276276276276
  - 0.8747178329571106
  - 0.8751885369532428
  - 0.8903903903903904
  train_recall_samples:
  - 0.9519015659955258
  - 0.9455705705705707
  - 0.9503386004514672
  - 0.9472096530920062
  - 0.9478228228228229
  train_recall_samples_oob:
  - 0.8765846383296049
  - 0.8776276276276277
  - 0.8747178329571106
  - 0.8751885369532428
  - 0.8903903903903905
  train_recall_weighted:
  - 0.9451901565995525
  - 0.9393878594751957
  - 0.9443479770793541
  - 0.9408761287518032
  - 0.9407771645991541
  train_recall_weighted_oob:
  - 0.8503749347177076
  - 0.8519532633069751
  - 0.8489972217398853
  - 0.8492698927068308
  - 0.8679012782415924
  train_roc_auc_macro:
  - 0.9954672373354301
  - 0.9956499022885144
  - 0.9956942653523897
  - 0.9950689000563462
  - 0.9951181736454505
  train_roc_auc_macro_oob:
  - 0.9446840330848802
  - 0.9429506822170092
  - 0.9477160552795135
  - 0.9356140236420954
  - 0.9509625035958268
  train_roc_auc_micro:
  - 0.9881004433763838
  - 0.9871628944576845
  - 0.9883069786884185
  - 0.9873762326030201
  - 0.9887280499049221
  train_roc_auc_micro_oob:
  - 0.9461951855502909
  - 0.9444043570379271
  - 0.9462325983131796
  - 0.9426211884567796
  - 0.9492494947195609
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9948577345798201
  - 0.995306909298566
  - 0.9950110718664505
  - 0.9945847448025087
  - 0.9943654165094249
  train_roc_auc_weighted_oob:
  - 0.9422811420372748
  - 0.94069154458886
  - 0.9391569933314199
  - 0.9402906945393903
  - 0.9431146544575996
start: 2023-12-21 22:07:30.202176
wrapper: null
