active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZ2b+AmZmZmZkVwADNzMzMzAxAADQzMzMz4z8AmpmZmZn5Pw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:03:58.269816
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__2
  params: {}
hash: 627cf6d40fad63245a5a8c50e606c811e1a7debe8ba2254d5d327665c5526ddb
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/627cf6d_20231222T070327141120_embedding_proba__2_PlantGO.yml
results:
  fit_time:
  - 10.155946254730225
  - 8.72569751739502
  - 10.27222228050232
  - 10.34311580657959
  - 9.9582679271698
  score_time:
  - 4.06671404838562
  - 3.648592233657837
  - 4.058518648147583
  - 4.121725797653198
  - 4.180818796157837
  test_average_precision_macro:
  - 0.8226840735721197
  - 0.9097619569461964
  - 0.7763121805782046
  - 0.7784231830334561
  - 0.7870392138823826
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.854051429107525
  - 0.9177311017610393
  - 0.8596113802430284
  - 0.813484746410677
  - 0.8375374246963689
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9029761904761904
  - 0.9257877280265339
  - 0.8919828869047618
  - 0.8850061050061051
  - 0.8755076538581693
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8754419467677695
  - 0.93581353527607
  - 0.8729584199283001
  - 0.8311067503922704
  - 0.8551781734468075
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9570578231292517
  - 0.9618573797678275
  - 0.958767361111111
  - 0.9508547008547009
  - 0.9557560137457045
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9570578231292517
  - 0.9618573797678275
  - 0.9587673611111112
  - 0.9508547008547008
  - 0.9557560137457045
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9570578231292519
  - 0.9618573797678275
  - 0.958767361111111
  - 0.9508547008547008
  - 0.9557560137457044
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9432758952637659
  - 0.950319492584471
  - 0.9487390350877192
  - 0.9296806966618287
  - 0.9373137245321738
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9183835629610696
  - 0.9272031127133608
  - 0.9215496332550696
  - 0.9080761939252571
  - 0.9163409763629544
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9176518548715858
  - 0.9265175718849841
  - 0.9208003334722801
  - 0.9063136456211812
  - 0.9152612093788565
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9226283920161469
  - 0.931529167350063
  - 0.9262362637362638
  - 0.9122006198929276
  - 0.9207884898606548
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8934447059513343
  - 0.9061862657180298
  - 0.9034775433281406
  - 0.8708236754895395
  - 0.883300662933345
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9029761904761904
  - 0.9257877280265341
  - 0.891982886904762
  - 0.885006105006105
  - 0.8755076538581694
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3728584199686719
  - 0.4218392826411462
  - 0.34357242953185185
  - 0.3559442703937159
  - 0.4582904539847615
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.707418642134552
  - 0.7359643727133979
  - 0.7219802184311708
  - 0.6614375507315228
  - 0.6983948229884694
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6002606608863436
  - 0.6357597439838908
  - 0.624256699674361
  - 0.5564089468170508
  - 0.5934850941530337
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6345482802578377
  - 0.6764205937585425
  - 0.6474961799062475
  - 0.5932734157209064
  - 0.6482861603031771
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9278918418102576
  - 0.9450553699469165
  - 0.9210490435063391
  - 0.9158037249640377
  - 0.9082983904011324
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.346938775510204
  - -1.2388059701492538
  - -1.4895833333333333
  - -1.4666666666666666
  - -1.5824742268041236
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0429421768707483
  - -0.03814262023217247
  - -0.04123263888888889
  - -0.04914529914529914
  - -0.044243986254295535
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0429421768707483
  - -0.03814262023217247
  - -0.04123263888888889
  - -0.049145299145299144
  - -0.044243986254295535
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.042942176870748285
  - -0.03814262023217247
  - -0.04123263888888889
  - -0.04914529914529914
  - -0.04424398625429553
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05672410473623412
  - -0.04968050741552899
  - -0.0512609649122807
  - -0.07031930333817127
  - -0.06268627546782626
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02395640074211503
  - -0.016983265490728178
  - -0.03256260521885522
  - -0.03123543123543123
  - -0.04112083029608803
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9570578231292517
  - 0.9618573797678275
  - 0.958767361111111
  - 0.9508547008547009
  - 0.9557560137457045
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9570578231292517
  - 0.9618573797678275
  - 0.9587673611111112
  - 0.9508547008547008
  - 0.9557560137457045
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9570578231292519
  - 0.9618573797678275
  - 0.958767361111111
  - 0.9508547008547008
  - 0.9557560137457044
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9432758952637659
  - 0.950319492584471
  - 0.9487390350877192
  - 0.9296806966618287
  - 0.9373137245321738
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9570578231292517
  - 0.9618573797678275
  - 0.958767361111111
  - 0.9508547008547009
  - 0.9557560137457045
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9570578231292517
  - 0.9618573797678275
  - 0.9587673611111112
  - 0.9508547008547008
  - 0.9557560137457045
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9570578231292519
  - 0.9618573797678275
  - 0.958767361111111
  - 0.9508547008547008
  - 0.9557560137457044
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9432758952637659
  - 0.950319492584471
  - 0.9487390350877192
  - 0.9296806966618287
  - 0.9373137245321738
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.977218442294156
  - 0.9923770505923839
  - 0.9694934130962561
  - 0.9608451494464081
  - 0.9638586931119776
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9828006524422501
  - 0.9908873820818198
  - 0.9759852005801007
  - 0.971173881046957
  - 0.9722557405968834
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.976043599257885
  - 0.9830167345092717
  - 0.9674373947811447
  - 0.9687645687645688
  - 0.958879169703912
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9765488588637221
  - 0.9898671012177608
  - 0.9753207905901602
  - 0.9636365411510622
  - 0.9691722405662971
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9489379530933535
  - 0.9415622564318484
  - 0.959320450080024
  - 0.9614731312537845
  - 0.9552676281724541
  train_average_precision_macro_oob:
  - 0.7902991693809756
  - 0.7671938876096805
  - 0.830516810618311
  - 0.8115882019294252
  - 0.8151471888694567
  train_average_precision_micro:
  - 0.9525705226084225
  - 0.9478146889520028
  - 0.9565944448898656
  - 0.9618611185781192
  - 0.9570718855246394
  train_average_precision_micro_oob:
  - 0.8569434622577737
  - 0.8418406965757383
  - 0.8671286947823176
  - 0.8758662317318764
  - 0.8685625445520015
  train_average_precision_samples:
  - 0.9564151747655584
  - 0.9529172029172028
  - 0.9596055979643766
  - 0.966262239250745
  - 0.9596088435374148
  train_average_precision_samples_oob:
  - 0.9101505094791539
  - 0.8935552899838615
  - 0.9100014136273678
  - 0.9096926204205897
  - 0.907986111111111
  train_average_precision_weighted:
  - 0.9641546182070535
  - 0.9610731248917573
  - 0.970212614622587
  - 0.9752649708647768
  - 0.9691789161562276
  train_average_precision_weighted_oob:
  - 0.8661708226061532
  - 0.8512070212688096
  - 0.8823440716825858
  - 0.8908035845826211
  - 0.8773265798547721
  train_f1_macro:
  - 0.9684569479965899
  - 0.968146718146718
  - 0.9706318914334181
  - 0.9702000851426137
  - 0.9715136054421768
  train_f1_macro_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971161
  - 0.9584929757343552
  - 0.9584396258503401
  train_f1_micro:
  - 0.96845694799659
  - 0.9681467181467182
  - 0.9706318914334181
  - 0.9702000851426139
  - 0.9715136054421769
  train_f1_micro_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971162
  - 0.958492975734355
  - 0.9584396258503401
  train_f1_samples:
  - 0.9684569479965899
  - 0.9681467181467182
  - 0.9706318914334181
  - 0.9702000851426138
  - 0.971513605442177
  train_f1_samples_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971161
  - 0.958492975734355
  - 0.95843962585034
  train_f1_weighted:
  - 0.9634829330153847
  - 0.9630947806303258
  - 0.9637885815001292
  - 0.9667292358829151
  - 0.9669047417545218
  train_f1_weighted_oob:
  - 0.9451386929520378
  - 0.9411349399501056
  - 0.9423721268775678
  - 0.9465828572467425
  - 0.945260361253506
  train_jaccard_macro:
  - 0.9390094997036412
  - 0.9384107151018194
  - 0.9431828530156848
  - 0.9422190821187294
  - 0.9447478209940692
  train_jaccard_macro_oob:
  - 0.9195762764669076
  - 0.915790038297538
  - 0.9181871358491366
  - 0.9208992421149365
  - 0.9210603897286681
  train_jaccard_micro:
  - 0.9388429752066115
  - 0.9382600561272217
  - 0.9429395406324029
  - 0.9421248449772633
  - 0.944605208763952
  train_jaccard_micro_oob:
  - 0.9188222063183723
  - 0.9149722735674677
  - 0.917268015042179
  - 0.9202942979767014
  - 0.9201959383610573
  train_jaccard_samples:
  - 0.9432674742137658
  - 0.9425403425403425
  - 0.9470849760926097
  - 0.9462366496849256
  - 0.9486600134559319
  train_jaccard_samples_oob:
  - 0.9241280458671762
  - 0.9201663201663202
  - 0.9224505774124094
  - 0.9251512217029458
  - 0.9251962323390895
  train_jaccard_weighted:
  - 0.9297491614987085
  - 0.9289772620588553
  - 0.9304339855727487
  - 0.9357085537659391
  - 0.936112146527947
  train_jaccard_weighted_oob:
  - 0.8969184347107718
  - 0.8897364454616868
  - 0.8921371157968333
  - 0.8992237754836735
  - 0.8973104647410272
  train_label_ranking_average_precision_score:
  - 0.9564151747655582
  - 0.952917202917203
  - 0.9596055979643766
  - 0.9662622392507451
  - 0.959608843537415
  train_label_ranking_average_precision_score_oob:
  - 0.9101505094791542
  - 0.8935552899838615
  - 0.9100014136273681
  - 0.9096926204205898
  - 0.9079861111111113
  train_matthews_corrcoef_macro:
  - 0.5037229175159625
  - 0.49349058314466804
  - 0.5866949869297383
  - 0.5127938518927914
  - 0.5678615145358171
  train_matthews_corrcoef_macro_oob:
  - 0.3655617138349044
  - 0.35726332504511715
  - 0.4087514276260236
  - 0.38839299793323284
  - 0.4221065996352347
  train_matthews_corrcoef_micro:
  - 0.7915012395620472
  - 0.7909161363446306
  - 0.8068185244516072
  - 0.8037405638835602
  - 0.8131384352126745
  train_matthews_corrcoef_micro_oob:
  - 0.7109642113322352
  - 0.6967810657728164
  - 0.7039134671535017
  - 0.7163181159054812
  - 0.716333129429132
  train_matthews_corrcoef_samples:
  - 0.7028779779953621
  - 0.7009362528489489
  - 0.7269338140325902
  - 0.7173051811011181
  - 0.7328178525816891
  train_matthews_corrcoef_samples_oob:
  - 0.6083261056340953
  - 0.5819180481617736
  - 0.5953797776588803
  - 0.6013084588558892
  - 0.6093810474373801
  train_matthews_corrcoef_weighted:
  - 0.7474267813338029
  - 0.7448086505473114
  - 0.7751466037247113
  - 0.761846539112522
  - 0.7789252690999829
  train_matthews_corrcoef_weighted_oob:
  - 0.6402909305186271
  - 0.6233235380032984
  - 0.6458879639908204
  - 0.6521079769764839
  - 0.6615882772977811
  train_ndgc:
  - 0.9678618507506604
  - 0.9653394620096005
  - 0.9702612241450708
  - 0.9751354116136832
  - 0.9701709571985938
  train_ndgc_oob:
  - 0.9340095415463274
  - 0.9217752854008779
  - 0.9336244929657239
  - 0.9335250516839787
  - 0.9323344381434233
  train_neg_coverage_error:
  - -1.1726342710997442
  - -1.1943371943371943
  - -1.1666666666666667
  - -1.1519795657726692
  - -1.1645408163265305
  train_neg_coverage_error_oob:
  - -1.39386189258312
  - -1.462033462033462
  - -1.3549618320610688
  - -1.3908045977011494
  - -1.3698979591836735
  train_neg_hamming_loss_macro:
  - -0.03154305200341006
  - -0.03185328185328185
  - -0.029368108566581844
  - -0.02979991485738612
  - -0.028486394557823133
  train_neg_hamming_loss_macro_oob:
  - -0.04230605285592498
  - -0.044401544401544396
  - -0.0431509754028838
  - -0.04150702426564496
  - -0.041560374149659865
  train_neg_hamming_loss_micro:
  - -0.03154305200341006
  - -0.03185328185328185
  - -0.029368108566581848
  - -0.02979991485738612
  - -0.02848639455782313
  train_neg_hamming_loss_micro_oob:
  - -0.04230605285592498
  - -0.0444015444015444
  - -0.0431509754028838
  - -0.041507024265644954
  - -0.041560374149659865
  train_neg_hamming_loss_samples:
  - -0.03154305200341006
  - -0.03185328185328185
  - -0.029368108566581848
  - -0.02979991485738612
  - -0.028486394557823123
  train_neg_hamming_loss_samples_oob:
  - -0.042306052855924973
  - -0.0444015444015444
  - -0.0431509754028838
  - -0.041507024265644954
  - -0.04156037414965986
  train_neg_hamming_loss_weighted:
  - -0.036517066984615286
  - -0.03690521936967434
  - -0.036211418499870675
  - -0.033270764117084725
  - -0.03309525824547829
  train_neg_hamming_loss_weighted_oob:
  - -0.054861307047962306
  - -0.05886506004989418
  - -0.05762787312243215
  - -0.05341714275325761
  - -0.054739638746493846
  train_neg_label_ranking_loss:
  - -0.008504697443316368
  - -0.009624126290792958
  - -0.00806238808783338
  - -0.006745617090444676
  - -0.00796034322820037
  train_neg_label_ranking_loss_oob:
  - -0.0263089117948453
  - -0.031195047861714533
  - -0.024022026884622304
  - -0.02625703609100799
  - -0.024832723493437778
  train_precision_macro:
  - 0.9684569479965899
  - 0.968146718146718
  - 0.9706318914334181
  - 0.9702000851426137
  - 0.9715136054421768
  train_precision_macro_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971161
  - 0.9584929757343552
  - 0.9584396258503401
  train_precision_micro:
  - 0.96845694799659
  - 0.9681467181467182
  - 0.9706318914334181
  - 0.9702000851426139
  - 0.9715136054421769
  train_precision_micro_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971162
  - 0.958492975734355
  - 0.9584396258503401
  train_precision_samples:
  - 0.9684569479965899
  - 0.9681467181467182
  - 0.9706318914334181
  - 0.9702000851426138
  - 0.971513605442177
  train_precision_samples_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971161
  - 0.958492975734355
  - 0.95843962585034
  train_precision_weighted:
  - 0.9634829330153847
  - 0.9630947806303258
  - 0.9637885815001292
  - 0.9667292358829151
  - 0.9669047417545218
  train_precision_weighted_oob:
  - 0.9451386929520378
  - 0.9411349399501056
  - 0.9423721268775678
  - 0.9465828572467425
  - 0.945260361253506
  train_recall_macro:
  - 0.9684569479965899
  - 0.968146718146718
  - 0.9706318914334181
  - 0.9702000851426137
  - 0.9715136054421768
  train_recall_macro_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971161
  - 0.9584929757343552
  - 0.9584396258503401
  train_recall_micro:
  - 0.96845694799659
  - 0.9681467181467182
  - 0.9706318914334181
  - 0.9702000851426139
  - 0.9715136054421769
  train_recall_micro_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971162
  - 0.958492975734355
  - 0.9584396258503401
  train_recall_samples:
  - 0.9684569479965899
  - 0.9681467181467182
  - 0.9706318914334181
  - 0.9702000851426138
  - 0.971513605442177
  train_recall_samples_oob:
  - 0.9576939471440751
  - 0.9555984555984556
  - 0.9568490245971161
  - 0.958492975734355
  - 0.95843962585034
  train_recall_weighted:
  - 0.9634829330153847
  - 0.9630947806303258
  - 0.9637885815001292
  - 0.9667292358829151
  - 0.9669047417545218
  train_recall_weighted_oob:
  - 0.9451386929520378
  - 0.9411349399501056
  - 0.9423721268775678
  - 0.9465828572467425
  - 0.945260361253506
  train_roc_auc_macro:
  - 0.9960682340888886
  - 0.995706389893177
  - 0.9965708010289235
  - 0.9976315542719821
  - 0.996591278381854
  train_roc_auc_macro_oob:
  - 0.9744752596785983
  - 0.9684914845114257
  - 0.9794671493736585
  - 0.97683228175827
  - 0.9766452454083586
  train_roc_auc_micro:
  - 0.995636774289336
  - 0.9950520600464992
  - 0.9960318738680098
  - 0.9965153431003584
  - 0.9960109385480054
  train_roc_auc_micro_oob:
  - 0.9798062878060929
  - 0.9762675489582402
  - 0.9829443610165319
  - 0.9806738501221677
  - 0.9821422642119221
  train_roc_auc_samples:
  - 0.9914953025566837
  - 0.9903758737092071
  - 0.9919376119121665
  - 0.9932543829095553
  - 0.9920396567717996
  train_roc_auc_samples_oob:
  - 0.9736910882051547
  - 0.9688049521382853
  - 0.9759779731153777
  - 0.973742963908992
  - 0.9751672765065622
  train_roc_auc_weighted:
  - 0.9950206268551212
  - 0.9946645804282027
  - 0.9955495351405171
  - 0.9967276804625138
  - 0.9956988812201021
  train_roc_auc_weighted_oob:
  - 0.9764408043640972
  - 0.9734505102192492
  - 0.9792701181529518
  - 0.9804944720677612
  - 0.9783630703333623
start: 2023-12-22 07:03:27.141120
wrapper: null
