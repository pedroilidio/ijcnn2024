active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AmZmZmZn5v4CZmZmZmfm/gGZmZmZm9j9AMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:29:47.803421
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__1
  params: {}
hash: d118c10dd1bc98ca1f9575bd8816a6953b4eacef1d385f03aa81bac6c2846fa5
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d118c10_20231221T082940448073_embedding_proba__1_VirusGO.yml
results:
  fit_time:
  - 2.6125075817108154
  - 2.57498836517334
  - 2.7650675773620605
  - 2.6381731033325195
  - 2.6975412368774414
  score_time:
  - 1.1581223011016846
  - 1.1723408699035645
  - 1.1755616664886475
  - 1.0959703922271729
  - 1.0967516899108887
  test_average_precision_macro:
  - 0.9531498614880323
  - 0.9263807475030584
  - 0.9204123678040531
  - 0.9276093984241407
  - 0.902468879643822
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9071515983039976
  - 0.8362525334741636
  - 0.9230041055241731
  - 0.8699234066163403
  - 0.8684907076564364
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9384920634920635
  - 0.9341085271317829
  - 0.943798449612403
  - 0.9645833333333332
  - 0.9123931623931625
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9452574782458683
  - 0.8897214868110008
  - 0.9457146341512556
  - 0.9046842838963581
  - 0.9137780345281751
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8015873015873015
  - 0.8062015503875969
  - 0.8023255813953488
  - 0.7916666666666666
  - 0.782051282051282
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8015873015873016
  - 0.8062015503875969
  - 0.8023255813953488
  - 0.7916666666666666
  - 0.782051282051282
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8015873015873017
  - 0.8062015503875972
  - 0.802325581395349
  - 0.7916666666666667
  - 0.7820512820512819
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6895238095238095
  - 0.6976744186046511
  - 0.6830825353397173
  - 0.67
  - 0.6666666666666666
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6932567807005589
  - 0.6987423811132017
  - 0.6962148869229442
  - 0.6827880586654792
  - 0.6686187434602932
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6688741721854304
  - 0.6753246753246753
  - 0.6699029126213593
  - 0.6551724137931034
  - 0.6421052631578947
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6746031746031746
  - 0.6794019933554819
  - 0.674418604651163
  - 0.661904761904762
  - 0.6495726495726498
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5459858252691836
  - 0.5544893134558788
  - 0.5367952779192239
  - 0.5226173184056996
  - 0.5204551770645371
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9384920634920635
  - 0.934108527131783
  - 0.943798449612403
  - 0.9645833333333332
  - 0.9123931623931625
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9544337062936107
  - 0.9526379297597604
  - 0.9625909394894124
  - 0.9764698902907287
  - 0.9378435175857337
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3333333333333333
  - -1.3488372093023255
  - -1.4186046511627908
  - -1.375
  - -1.6666666666666667
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19841269841269837
  - -0.19379844961240308
  - -0.19767441860465115
  - -0.20833333333333334
  - -0.21794871794871798
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1984126984126984
  - -0.1937984496124031
  - -0.19767441860465115
  - -0.20833333333333334
  - -0.21794871794871795
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19841269841269835
  - -0.19379844961240308
  - -0.19767441860465113
  - -0.20833333333333331
  - -0.21794871794871795
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31047619047619046
  - -0.3023255813953488
  - -0.3169174646602827
  - -0.33
  - -0.3333333333333333
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02976190476190476
  - -0.03488372093023256
  - -0.03895348837209302
  - -0.019375
  - -0.06502849002849004
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8015873015873015
  - 0.8062015503875969
  - 0.8023255813953488
  - 0.7916666666666666
  - 0.782051282051282
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8015873015873016
  - 0.8062015503875969
  - 0.8023255813953488
  - 0.7916666666666666
  - 0.782051282051282
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8015873015873017
  - 0.8062015503875972
  - 0.802325581395349
  - 0.7916666666666667
  - 0.7820512820512819
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6895238095238095
  - 0.6976744186046511
  - 0.6830825353397173
  - 0.67
  - 0.6666666666666666
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8015873015873015
  - 0.8062015503875969
  - 0.8023255813953488
  - 0.7916666666666666
  - 0.782051282051282
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8015873015873016
  - 0.8062015503875969
  - 0.8023255813953488
  - 0.7916666666666666
  - 0.782051282051282
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8015873015873017
  - 0.8062015503875972
  - 0.802325581395349
  - 0.7916666666666667
  - 0.7820512820512819
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6895238095238095
  - 0.6976744186046511
  - 0.6830825353397173
  - 0.67
  - 0.6666666666666666
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9871736298545507
  - 0.9734196866549807
  - 0.9723216979099333
  - 0.9760052571753338
  - 0.9535992806213395
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9751485148514851
  - 0.97125
  - 0.9688358435161505
  - 0.9752631578947368
  - 0.9506053787635274
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9702380952380952
  - 0.9651162790697675
  - 0.961046511627907
  - 0.9806250000000001
  - 0.93497150997151
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9795912055780477
  - 0.9517671517671518
  - 0.9682537288419641
  - 0.9618840579710145
  - 0.9535220906544435
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9695395810109377
  - 0.952544797737726
  - 0.9580200237008915
  - 0.9591622429194827
  - 0.9722974473303396
  train_average_precision_macro_oob:
  - 0.9068006070357416
  - 0.8836373829798952
  - 0.9146191980870916
  - 0.8855406564847611
  - 0.9320385589113801
  train_average_precision_micro:
  - 0.9336779769835613
  - 0.9285227666051763
  - 0.9358569822062318
  - 0.9291406273358909
  - 0.9483789653263796
  train_average_precision_micro_oob:
  - 0.8717604724849375
  - 0.8654205393660557
  - 0.8742114533100278
  - 0.8686329573966427
  - 0.8911334828546867
  train_average_precision_samples:
  - 0.9638383838383838
  - 0.9580284552845527
  - 0.9498983739837398
  - 0.9700598802395209
  - 0.9801587301587301
  train_average_precision_samples_oob:
  - 0.914040404040404
  - 0.9200203252032519
  - 0.9270325203252034
  - 0.9317365269461079
  - 0.9372023809523808
  train_average_precision_weighted:
  - 0.9646544799505482
  - 0.9555244560673224
  - 0.9581666411943558
  - 0.9546749151598247
  - 0.9669632667619834
  train_average_precision_weighted_oob:
  - 0.9010162076759555
  - 0.8947567276394688
  - 0.9067224848781603
  - 0.8927563272447502
  - 0.920673803601197
  train_f1_macro:
  - 0.7959595959595961
  - 0.7947154471544716
  - 0.7957317073170732
  - 0.8023952095808383
  - 0.8025793650793651
  train_f1_macro_oob:
  - 0.796969696969697
  - 0.7947154471544716
  - 0.7957317073170732
  - 0.7984031936127743
  - 0.8025793650793651
  train_f1_micro:
  - 0.795959595959596
  - 0.7947154471544715
  - 0.7957317073170732
  - 0.8023952095808383
  - 0.8025793650793651
  train_f1_micro_oob:
  - 0.796969696969697
  - 0.7947154471544715
  - 0.7957317073170732
  - 0.7984031936127745
  - 0.8025793650793651
  train_f1_samples:
  - 0.7959595959595959
  - 0.7947154471544714
  - 0.795731707317073
  - 0.8023952095808381
  - 0.802579365079365
  train_f1_samples_oob:
  - 0.7969696969696968
  - 0.7947154471544714
  - 0.795731707317073
  - 0.7984031936127743
  - 0.802579365079365
  train_f1_weighted:
  - 0.6801080108010801
  - 0.6780367061096354
  - 0.681865064919306
  - 0.6929507321989683
  - 0.6896766169154229
  train_f1_weighted_oob:
  - 0.6821482148214821
  - 0.6780367061096354
  - 0.681865064919306
  - 0.6850062251734155
  - 0.6896766169154229
  train_jaccard_macro:
  - 0.6869248040524102
  - 0.6854594196140238
  - 0.6860879384484534
  - 0.6936400025967869
  - 0.6948319917346599
  train_jaccard_macro_oob:
  - 0.6879422674237289
  - 0.6854594196140238
  - 0.6860879384484534
  - 0.6895027549812784
  - 0.6948319917346599
  train_jaccard_micro:
  - 0.6610738255033557
  - 0.6593591905564924
  - 0.660759493670886
  - 0.67
  - 0.6702568351284176
  train_jaccard_micro_oob:
  - 0.6624685138539043
  - 0.6593591905564924
  - 0.660759493670886
  - 0.6644518272425249
  - 0.6702568351284176
  train_jaccard_samples:
  - 0.666810966810967
  - 0.6655052264808363
  - 0.6668118466898955
  - 0.6767892785856859
  - 0.6761621315192744
  train_jaccard_samples_oob:
  - 0.6685425685425687
  - 0.6655052264808363
  - 0.6668118466898955
  - 0.6699458226404335
  - 0.6761621315192744
  train_jaccard_weighted:
  - 0.5343784355847224
  - 0.5322174806920817
  - 0.5367635252075711
  - 0.5484228368821461
  - 0.544743644294212
  train_jaccard_weighted_oob:
  - 0.5364335101168908
  - 0.5322174806920817
  - 0.5367635252075711
  - 0.5401893044988074
  - 0.544743644294212
  train_label_ranking_average_precision_score:
  - 0.9638383838383836
  - 0.9580284552845527
  - 0.9498983739837397
  - 0.9700598802395209
  - 0.9801587301587301
  train_label_ranking_average_precision_score_oob:
  - 0.914040404040404
  - 0.9200203252032519
  - 0.9270325203252031
  - 0.9317365269461078
  - 0.9372023809523808
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.031896831320432785
  - 0.02246120176052838
  train_matthews_corrcoef_macro_oob:
  - 0.015543837106424938
  - 0.0
  - 0.0
  - 0.0
  - 0.02246120176052838
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.12598940757085872
  - 0.08934180987821305
  train_matthews_corrcoef_micro_oob:
  - 0.06280428536229397
  - 0.0
  - 0.0
  - 0.0
  - 0.08934180987821305
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.023952095808383235
  - 0.011904761904761904
  train_matthews_corrcoef_samples_oob:
  - 0.006060606060606061
  - 0.0
  - 0.0
  - 0.0
  - 0.011904761904761904
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.06347785242977216
  - 0.04492240352105677
  train_matthews_corrcoef_weighted_oob:
  - 0.031395472967432544
  - 0.0
  - 0.0
  - 0.0
  - 0.04492240352105677
  train_ndgc:
  - 0.974291869507432
  - 0.9698892833115108
  - 0.9640701187533091
  - 0.9784842561862499
  - 0.9858632148793163
  train_ndgc_oob:
  - 0.9381370100866193
  - 0.9435276023304405
  - 0.9481976840397477
  - 0.9516304970408557
  - 0.9551831763597753
  train_neg_coverage_error:
  - -1.3393939393939394
  - -1.3780487804878048
  - -1.3719512195121952
  - -1.2874251497005988
  - -1.244047619047619
  train_neg_coverage_error_oob:
  - -1.503030303030303
  - -1.5182926829268293
  - -1.4695121951219512
  - -1.4550898203592815
  - -1.3869047619047619
  train_neg_hamming_loss_macro:
  - -0.20404040404040402
  - -0.20528455284552846
  - -0.20426829268292682
  - -0.19760479041916168
  - -0.19742063492063489
  train_neg_hamming_loss_macro_oob:
  - -0.203030303030303
  - -0.20528455284552846
  - -0.20426829268292682
  - -0.20159680638722555
  - -0.19742063492063489
  train_neg_hamming_loss_micro:
  - -0.20404040404040405
  - -0.20528455284552846
  - -0.20426829268292682
  - -0.19760479041916168
  - -0.1974206349206349
  train_neg_hamming_loss_micro_oob:
  - -0.20303030303030303
  - -0.20528455284552846
  - -0.20426829268292682
  - -0.20159680638722555
  - -0.1974206349206349
  train_neg_hamming_loss_samples:
  - -0.20404040404040408
  - -0.2052845528455285
  - -0.20426829268292687
  - -0.19760479041916168
  - -0.1974206349206349
  train_neg_hamming_loss_samples_oob:
  - -0.20303030303030303
  - -0.2052845528455285
  - -0.20426829268292687
  - -0.20159680638722557
  - -0.19742063492063494
  train_neg_hamming_loss_weighted:
  - -0.31989198919891987
  - -0.3219632938903647
  - -0.3181349350806941
  - -0.3070492678010316
  - -0.31032338308457713
  train_neg_hamming_loss_weighted_oob:
  - -0.31785178517851786
  - -0.3219632938903647
  - -0.3181349350806941
  - -0.3149937748265844
  - -0.31032338308457713
  train_neg_label_ranking_loss:
  - -0.021666666666666667
  - -0.027506775067750677
  - -0.026371951219512198
  - -0.014520958083832334
  - -0.008630952380952382
  train_neg_label_ranking_loss_oob:
  - -0.05257575757575758
  - -0.050660569105691056
  - -0.04297086720867208
  - -0.043562874251497005
  - -0.034374999999999996
  train_precision_macro:
  - 0.7959595959595961
  - 0.7947154471544716
  - 0.7957317073170732
  - 0.8023952095808383
  - 0.8025793650793651
  train_precision_macro_oob:
  - 0.796969696969697
  - 0.7947154471544716
  - 0.7957317073170732
  - 0.7984031936127743
  - 0.8025793650793651
  train_precision_micro:
  - 0.795959595959596
  - 0.7947154471544715
  - 0.7957317073170732
  - 0.8023952095808383
  - 0.8025793650793651
  train_precision_micro_oob:
  - 0.796969696969697
  - 0.7947154471544715
  - 0.7957317073170732
  - 0.7984031936127745
  - 0.8025793650793651
  train_precision_samples:
  - 0.7959595959595959
  - 0.7947154471544714
  - 0.795731707317073
  - 0.8023952095808381
  - 0.802579365079365
  train_precision_samples_oob:
  - 0.7969696969696968
  - 0.7947154471544714
  - 0.795731707317073
  - 0.7984031936127743
  - 0.802579365079365
  train_precision_weighted:
  - 0.6801080108010801
  - 0.6780367061096354
  - 0.681865064919306
  - 0.6929507321989683
  - 0.6896766169154229
  train_precision_weighted_oob:
  - 0.6821482148214821
  - 0.6780367061096354
  - 0.681865064919306
  - 0.6850062251734155
  - 0.6896766169154229
  train_recall_macro:
  - 0.7959595959595961
  - 0.7947154471544716
  - 0.7957317073170732
  - 0.8023952095808383
  - 0.8025793650793651
  train_recall_macro_oob:
  - 0.796969696969697
  - 0.7947154471544716
  - 0.7957317073170732
  - 0.7984031936127743
  - 0.8025793650793651
  train_recall_micro:
  - 0.795959595959596
  - 0.7947154471544715
  - 0.7957317073170732
  - 0.8023952095808383
  - 0.8025793650793651
  train_recall_micro_oob:
  - 0.796969696969697
  - 0.7947154471544715
  - 0.7957317073170732
  - 0.7984031936127745
  - 0.8025793650793651
  train_recall_samples:
  - 0.7959595959595959
  - 0.7947154471544714
  - 0.795731707317073
  - 0.8023952095808381
  - 0.802579365079365
  train_recall_samples_oob:
  - 0.7969696969696968
  - 0.7947154471544714
  - 0.795731707317073
  - 0.7984031936127743
  - 0.802579365079365
  train_recall_weighted:
  - 0.6801080108010801
  - 0.6780367061096354
  - 0.681865064919306
  - 0.6929507321989683
  - 0.6896766169154229
  train_recall_weighted_oob:
  - 0.6821482148214821
  - 0.6780367061096354
  - 0.681865064919306
  - 0.6850062251734155
  - 0.6896766169154229
  train_roc_auc_macro:
  - 0.985353553123196
  - 0.9774391084244534
  - 0.9817907731295467
  - 0.9823377565382577
  - 0.9898266840305648
  train_roc_auc_macro_oob:
  - 0.964888560326786
  - 0.9642624488816701
  - 0.9658598305065599
  - 0.9604616032454341
  - 0.9770287444638383
  train_roc_auc_micro:
  - 0.9802168668643514
  - 0.9767541971588465
  - 0.9801058564139711
  - 0.9813242574257426
  - 0.987848859790268
  train_roc_auc_micro_oob:
  - 0.9609300397044781
  - 0.9603390645969968
  - 0.9658412916261604
  - 0.9617574257425743
  - 0.971869278144593
  train_roc_auc_samples:
  - 0.9783333333333334
  - 0.9724932249322494
  - 0.9736280487804879
  - 0.9854790419161676
  - 0.9913690476190476
  train_roc_auc_samples_oob:
  - 0.9474242424242424
  - 0.9493394308943089
  - 0.957029132791328
  - 0.9564371257485031
  - 0.9656250000000002
  train_roc_auc_weighted:
  - 0.979875614869756
  - 0.9764899706243225
  - 0.9787756943806915
  - 0.9756885158315036
  - 0.9848055147214795
  train_roc_auc_weighted_oob:
  - 0.9544863754967996
  - 0.9567591493833553
  - 0.9613476668435661
  - 0.9522775880504339
  - 0.9668912257932825
start: 2023-12-21 08:29:40.448073
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
