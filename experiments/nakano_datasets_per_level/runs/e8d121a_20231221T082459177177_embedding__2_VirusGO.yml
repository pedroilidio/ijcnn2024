active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          oJmZmZmZGUCAmZmZmZn5v8DMzMzMzATAgJmZmZmZ+b8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:25:08.358600
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__2
  params: {}
hash: e8d121a9d0648413d3b8f6882800805515a37119432e1f4667a62452931e0040
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e8d121a_20231221T082459177177_embedding__2_VirusGO.yml
results:
  fit_time:
  - 3.7589972019195557
  - 3.9127838611602783
  - 4.207679271697998
  - 3.9865951538085938
  - 4.032895088195801
  score_time:
  - 1.184535026550293
  - 1.2181665897369385
  - 1.3084509372711182
  - 1.2938368320465088
  - 1.278977870941162
  test_average_precision_macro:
  - 0.9864289971110365
  - 0.8535241992213823
  - 0.9634360605904951
  - 0.9275014731741847
  - 0.9296020776004434
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9298605295969414
  - 0.8349379276090221
  - 0.9277155618188102
  - 0.9286062246962876
  - 0.8776634098510981
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9495238095238095
  - 0.9031007751937984
  - 0.9003787878787878
  - 0.9205426356589146
  - 0.9186507936507935
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9857355814120519
  - 0.8578150522271534
  - 0.9600762302712766
  - 0.9430077671800987
  - 0.9364262483639646
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7619047619047619
  - 0.8023255813953488
  - 0.8106060606060607
  - 0.8062015503875969
  - 0.7976190476190476
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7619047619047619
  - 0.8023255813953488
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7976190476190477
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.761904761904762
  - 0.802325581395349
  - 0.8106060606060607
  - 0.8062015503875972
  - 0.7976190476190478
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.64
  - 0.687642498860009
  - 0.6999999999999998
  - 0.6976744186046511
  - 0.6755368814192344
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6445008356773062
  - 0.6948261698199413
  - 0.7054930533233329
  - 0.6987423811132017
  - 0.6906128021635897
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6153846153846154
  - 0.6699029126213593
  - 0.6815286624203821
  - 0.6753246753246753
  - 0.6633663366336634
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6251700680272111
  - 0.674418604651163
  - 0.6850649350649352
  - 0.6794019933554818
  - 0.6695011337868482
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49309649015531365
  - 0.543820552675591
  - 0.5549966784528019
  - 0.5544893134558788
  - 0.5287367422504983
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9495238095238095
  - 0.9031007751937985
  - 0.9003787878787879
  - 0.9205426356589148
  - 0.9186507936507937
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9686360366741796
  - 0.9289242122899622
  - 0.9285316141048551
  - 0.9431764417720809
  - 0.9425683311134089
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7142857142857142
  - -1.5348837209302326
  - -1.4545454545454546
  - -1.372093023255814
  - -1.5
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2380952380952381
  - -0.19767441860465115
  - -0.18939393939393936
  - -0.19379844961240308
  - -0.2023809523809524
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23809523809523808
  - -0.19767441860465115
  - -0.1893939393939394
  - -0.1937984496124031
  - -0.20238095238095238
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2380952380952381
  - -0.19767441860465113
  - -0.18939393939393936
  - -0.19379844961240308
  - -0.20238095238095233
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.35999999999999993
  - -0.3123575011399909
  - -0.3
  - -0.3023255813953488
  - -0.32446311858076554
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.041428571428571426
  - -0.06860465116279069
  - -0.056818181818181816
  - -0.03953488372093023
  - -0.049669312169312176
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7619047619047619
  - 0.8023255813953488
  - 0.8106060606060607
  - 0.8062015503875969
  - 0.7976190476190476
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7619047619047619
  - 0.8023255813953488
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7976190476190477
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.761904761904762
  - 0.802325581395349
  - 0.8106060606060607
  - 0.8062015503875972
  - 0.7976190476190478
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.64
  - 0.687642498860009
  - 0.6999999999999998
  - 0.6976744186046511
  - 0.6755368814192344
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7619047619047619
  - 0.8023255813953488
  - 0.8106060606060607
  - 0.8062015503875969
  - 0.7976190476190476
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7619047619047619
  - 0.8023255813953488
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7976190476190477
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.761904761904762
  - 0.802325581395349
  - 0.8106060606060607
  - 0.8062015503875972
  - 0.7976190476190478
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.64
  - 0.687642498860009
  - 0.6999999999999998
  - 0.6976744186046511
  - 0.6755368814192344
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9942806989802148
  - 0.9388682573976692
  - 0.9877972948438636
  - 0.9855658826247061
  - 0.9738394105205436
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.97175
  - 0.9481860377001042
  - 0.9771028037383178
  - 0.9774038461538462
  - 0.9585406301824212
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9585714285714285
  - 0.9313953488372092
  - 0.9431818181818182
  - 0.9604651162790697
  - 0.9503306878306879
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9907583474816073
  - 0.9237966926202219
  - 0.9799814814814815
  - 0.9831670131670132
  - 0.9678231117008206
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9681923097219697
  - 0.9765015861360423
  - 0.9586163619313252
  - 0.9655898532883725
  - 0.9574530948133271
  train_average_precision_macro_oob:
  - 0.9196412775266155
  - 0.9248130611096664
  - 0.8989951199091113
  - 0.9055794633486473
  - 0.9160184048359894
  train_average_precision_micro:
  - 0.9369800053289402
  - 0.9484490292025644
  - 0.9444990627551365
  - 0.9267591991093158
  - 0.9404323755472674
  train_average_precision_micro_oob:
  - 0.882776349741421
  - 0.8741245072102183
  - 0.8778709066564415
  - 0.8416866118140264
  - 0.8847678454896583
  train_average_precision_samples:
  - 0.9464147286821706
  - 0.9643292682926828
  - 0.9554192229038856
  - 0.9620934959349593
  - 0.9623232323232321
  train_average_precision_samples_oob:
  - 0.9056201550387596
  - 0.9149390243902438
  - 0.9244717109747785
  - 0.8902947154471544
  - 0.9219191919191919
  train_average_precision_weighted:
  - 0.9681264249558053
  - 0.9747901724012361
  - 0.9631330192763868
  - 0.9623700757419494
  - 0.9633364107133188
  train_average_precision_weighted_oob:
  - 0.9278733425503785
  - 0.918345652870753
  - 0.9076274921418369
  - 0.9036542485653818
  - 0.9245920045443462
  train_f1_macro:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7934560327198364
  - 0.7947154471544716
  - 0.796969696969697
  train_f1_macro_oob:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7944785276073619
  - 0.7947154471544716
  - 0.796969696969697
  train_f1_micro:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7934560327198364
  - 0.7947154471544715
  - 0.796969696969697
  train_f1_micro_oob:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7944785276073619
  - 0.7947154471544715
  - 0.796969696969697
  train_f1_samples:
  - 0.8042635658914727
  - 0.795731707317073
  - 0.7934560327198363
  - 0.7947154471544714
  - 0.7969696969696968
  train_f1_samples_oob:
  - 0.8042635658914727
  - 0.795731707317073
  - 0.7944785276073619
  - 0.7947154471544714
  - 0.7969696969696968
  train_f1_weighted:
  - 0.690651623301865
  - 0.6806516199490353
  - 0.677276316588714
  - 0.6780367061096354
  - 0.6837931554349465
  train_f1_weighted_oob:
  - 0.690651623301865
  - 0.6806516199490353
  - 0.6794022960578266
  - 0.6780367061096354
  - 0.6837931554349465
  train_jaccard_macro:
  - 0.6973922352934805
  - 0.6864620729771923
  - 0.6835843032498379
  - 0.6854594196140238
  - 0.6875720642335219
  train_jaccard_macro_oob:
  - 0.6973922352934805
  - 0.6864620729771923
  - 0.6845894337318071
  - 0.6854594196140238
  - 0.6875720642335219
  train_jaccard_micro:
  - 0.6726094003241491
  - 0.660759493670886
  - 0.6576271186440678
  - 0.6593591905564924
  - 0.6624685138539043
  train_jaccard_micro_oob:
  - 0.6726094003241491
  - 0.660759493670886
  - 0.6590330788804071
  - 0.6593591905564924
  - 0.6624685138539043
  train_jaccard_samples:
  - 0.67718715393134
  - 0.6668118466898955
  - 0.6638913234005259
  - 0.6655052264808364
  - 0.6681096681096682
  train_jaccard_samples_oob:
  - 0.67718715393134
  - 0.6668118466898955
  - 0.6652059596844874
  - 0.6655052264808364
  - 0.6681096681096682
  train_jaccard_weighted:
  - 0.5459961048372673
  - 0.5349319412459842
  - 0.531953224859696
  - 0.5322174806920817
  - 0.5388241612378774
  train_jaccard_weighted_oob:
  - 0.5459961048372673
  - 0.5349319412459842
  - 0.5340431001192361
  - 0.5322174806920817
  - 0.5388241612378774
  train_label_ranking_average_precision_score:
  - 0.9464147286821707
  - 0.9643292682926828
  - 0.9554192229038856
  - 0.9620934959349593
  - 0.9623232323232325
  train_label_ranking_average_precision_score_oob:
  - 0.9056201550387596
  - 0.914939024390244
  - 0.9244717109747785
  - 0.8902947154471545
  - 0.9219191919191921
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.01509328235512795
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.06270582614856653
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0038800952885501587
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.03138207222353336
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9609014575065773
  - 0.9752315046656043
  - 0.9689636777015167
  - 0.9726414096584658
  - 0.9735244933451837
  train_ndgc_oob:
  - 0.9320148653662164
  - 0.9398202826504531
  - 0.9475095076472003
  - 0.9207748645832792
  - 0.9454037591939124
  train_neg_coverage_error:
  - -1.3372093023255813
  - -1.3475609756097562
  - -1.4110429447852761
  - -1.353658536585366
  - -1.3515151515151516
  train_neg_coverage_error_oob:
  - -1.494186046511628
  - -1.5182926829268293
  - -1.539877300613497
  - -1.603658536585366
  - -1.5333333333333334
  train_neg_hamming_loss_macro:
  - -0.19573643410852712
  - -0.20426829268292682
  - -0.20654396728016364
  - -0.20528455284552846
  - -0.203030303030303
  train_neg_hamming_loss_macro_oob:
  - -0.19573643410852712
  - -0.20426829268292682
  - -0.20552147239263807
  - -0.20528455284552846
  - -0.203030303030303
  train_neg_hamming_loss_micro:
  - -0.19573643410852712
  - -0.20426829268292682
  - -0.2065439672801636
  - -0.20528455284552846
  - -0.20303030303030303
  train_neg_hamming_loss_micro_oob:
  - -0.19573643410852712
  - -0.20426829268292682
  - -0.20552147239263804
  - -0.20528455284552846
  - -0.20303030303030303
  train_neg_hamming_loss_samples:
  - -0.19573643410852715
  - -0.20426829268292682
  - -0.20654396728016358
  - -0.2052845528455285
  - -0.20303030303030303
  train_neg_hamming_loss_samples_oob:
  - -0.19573643410852715
  - -0.20426829268292682
  - -0.20552147239263804
  - -0.2052845528455285
  - -0.20303030303030303
  train_neg_hamming_loss_weighted:
  - -0.3093483766981349
  - -0.31934838005096466
  - -0.32272368341128593
  - -0.3219632938903647
  - -0.3162068445650535
  train_neg_hamming_loss_weighted_oob:
  - -0.3093483766981349
  - -0.31934838005096466
  - -0.32059770394217335
  - -0.3219632938903647
  - -0.3162068445650535
  train_neg_label_ranking_loss:
  - -0.031104651162790695
  - -0.02027439024390244
  - -0.029294478527607363
  - -0.022865853658536585
  - -0.02324915824915825
  train_neg_label_ranking_loss_oob:
  - -0.05864018087855298
  - -0.05074525745257453
  - -0.05182344921608726
  - -0.06919037940379405
  - -0.05415824915824915
  train_precision_macro:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7934560327198364
  - 0.7947154471544716
  - 0.796969696969697
  train_precision_macro_oob:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7944785276073619
  - 0.7947154471544716
  - 0.796969696969697
  train_precision_micro:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7934560327198364
  - 0.7947154471544715
  - 0.796969696969697
  train_precision_micro_oob:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7944785276073619
  - 0.7947154471544715
  - 0.796969696969697
  train_precision_samples:
  - 0.8042635658914727
  - 0.795731707317073
  - 0.7934560327198363
  - 0.7947154471544714
  - 0.7969696969696968
  train_precision_samples_oob:
  - 0.8042635658914727
  - 0.795731707317073
  - 0.7944785276073619
  - 0.7947154471544714
  - 0.7969696969696968
  train_precision_weighted:
  - 0.690651623301865
  - 0.6806516199490353
  - 0.677276316588714
  - 0.6780367061096354
  - 0.6837931554349465
  train_precision_weighted_oob:
  - 0.690651623301865
  - 0.6806516199490353
  - 0.6794022960578266
  - 0.6780367061096354
  - 0.6837931554349465
  train_recall_macro:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7934560327198364
  - 0.7947154471544716
  - 0.796969696969697
  train_recall_macro_oob:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7944785276073619
  - 0.7947154471544716
  - 0.796969696969697
  train_recall_micro:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7934560327198364
  - 0.7947154471544715
  - 0.796969696969697
  train_recall_micro_oob:
  - 0.8042635658914729
  - 0.7957317073170732
  - 0.7944785276073619
  - 0.7947154471544715
  - 0.796969696969697
  train_recall_samples:
  - 0.8042635658914727
  - 0.795731707317073
  - 0.7934560327198363
  - 0.7947154471544714
  - 0.7969696969696968
  train_recall_samples_oob:
  - 0.8042635658914727
  - 0.795731707317073
  - 0.7944785276073619
  - 0.7947154471544714
  - 0.7969696969696968
  train_recall_weighted:
  - 0.690651623301865
  - 0.6806516199490353
  - 0.677276316588714
  - 0.6780367061096354
  - 0.6837931554349465
  train_recall_weighted_oob:
  - 0.690651623301865
  - 0.6806516199490353
  - 0.6794022960578266
  - 0.6780367061096354
  - 0.6837931554349465
  train_roc_auc_macro:
  - 0.9861092732447739
  - 0.9917138701974283
  - 0.9824136678456593
  - 0.9849805045386745
  - 0.9810943661241046
  train_roc_auc_macro_oob:
  - 0.9648112856400024
  - 0.976811799233618
  - 0.9640978138066262
  - 0.9643134852953638
  - 0.9692528028688457
  train_roc_auc_micro:
  - 0.9804306334247882
  - 0.9837752489150671
  - 0.9795632591609676
  - 0.9779538375832468
  - 0.9795729842548979
  train_roc_auc_micro_oob:
  - 0.959238935941787
  - 0.9636301252358894
  - 0.959247728896601
  - 0.9500645716745588
  - 0.9610061227449571
  train_roc_auc_samples:
  - 0.9688953488372093
  - 0.9797256097560977
  - 0.9707055214723926
  - 0.9771341463414634
  - 0.9767508417508418
  train_roc_auc_samples_oob:
  - 0.9413598191214471
  - 0.9492547425474253
  - 0.9481765507839127
  - 0.930809620596206
  - 0.9458417508417507
  train_roc_auc_weighted:
  - 0.983888708014792
  - 0.9877421241363932
  - 0.9815691051045837
  - 0.980098199736686
  - 0.9807091568270262
  train_roc_auc_weighted_oob:
  - 0.9633325416469003
  - 0.9666535995033532
  - 0.9595471292665131
  - 0.9530008247566462
  - 0.9641450040367571
start: 2023-12-21 08:24:59.177177
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
