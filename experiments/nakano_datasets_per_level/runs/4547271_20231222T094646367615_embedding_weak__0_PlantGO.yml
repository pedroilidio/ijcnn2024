active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzMBECAmZmZmZkZwADNzMzMzAxAAM3MzMzMBEAAMzMzMzMDwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:47:01.772646
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__0
  params: {}
hash: 454727177e2ee1dfdc29e65d5894084f4d72997190c63bfcf235d197f9492081
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4547271_20231222T094646367615_embedding_weak__0_PlantGO.yml
results:
  fit_time:
  - 1.6255466938018799
  - 1.5929412841796875
  - 1.6338164806365967
  - 1.6831843852996826
  - 1.5899617671966553
  score_time:
  - 1.7727572917938232
  - 1.833275556564331
  - 1.8599278926849365
  - 1.9012436866760254
  - 1.8274853229522705
  test_average_precision_macro:
  - 0.7473771686040455
  - 0.7741541047068728
  - 0.7876858952224394
  - 0.7697111437820242
  - 0.6913398116641719
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7705802491384863
  - 0.7505678564979306
  - 0.7464965963495821
  - 0.7667797901403498
  - 0.6877750561294234
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8373632700057569
  - 0.8323432343234323
  - 0.8538380456349207
  - 0.8168434904186199
  - 0.8036936828603495
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8123320356381221
  - 0.8392740187026397
  - 0.8194534087550647
  - 0.8437025843885568
  - 0.7531235868825812
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9097582037996546
  - 0.9108910891089108
  - 0.9088541666666665
  - 0.908894645941278
  - 0.9120370370370371
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9097582037996546
  - 0.9108910891089109
  - 0.9088541666666666
  - 0.9088946459412781
  - 0.9120370370370371
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9097582037996544
  - 0.9108910891089109
  - 0.9088541666666666
  - 0.9088946459412779
  - 0.912037037037037
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.830403847584104
  - 0.8372295562889621
  - 0.8296626984126982
  - 0.8325025170051322
  - 0.8359914938862307
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8446785312551616
  - 0.8457709823068978
  - 0.8432077054270285
  - 0.8429049457080312
  - 0.8479069779569236
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8344554455445544
  - 0.8363636363636363
  - 0.8329355608591885
  - 0.8330035615354174
  - 0.8382978723404255
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8352217730456072
  - 0.8371885540202372
  - 0.8337912087912088
  - 0.8339463645163127
  - 0.8388278388278387
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.721169959871033
  - 0.7307923096670358
  - 0.720235460457745
  - 0.724322965593366
  - 0.7290575137528674
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8373632700057569
  - 0.8323432343234322
  - 0.8538380456349205
  - 0.8168434904186199
  - 0.8036936828603494
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8802322065628408
  - 0.8752885677702071
  - 0.8923509930723034
  - 0.8641787423462673
  - 0.8529690119835793
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6580310880829014
  - -1.7178217821782178
  - -1.6875
  - -1.7461139896373057
  - -1.7626262626262625
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0902417962003454
  - -0.08910891089108912
  - -0.09114583333333333
  - -0.09110535405872193
  - -0.08796296296296297
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09024179620034542
  - -0.0891089108910891
  - -0.09114583333333333
  - -0.09110535405872193
  - -0.08796296296296297
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09024179620034543
  - -0.0891089108910891
  - -0.09114583333333333
  - -0.09110535405872193
  - -0.08796296296296297
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.16959615241589604
  - -0.16277044371103774
  - -0.17033730158730162
  - -0.16749748299486777
  - -0.1640085061137693
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.049576071596796986
  - -0.055568890222355574
  - -0.04945549242424243
  - -0.05695818286491861
  - -0.0626951331496786
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9097582037996546
  - 0.9108910891089108
  - 0.9088541666666665
  - 0.908894645941278
  - 0.9120370370370371
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9097582037996546
  - 0.9108910891089109
  - 0.9088541666666666
  - 0.9088946459412781
  - 0.9120370370370371
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9097582037996544
  - 0.9108910891089109
  - 0.9088541666666666
  - 0.9088946459412779
  - 0.912037037037037
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.830403847584104
  - 0.8372295562889621
  - 0.8296626984126982
  - 0.8325025170051322
  - 0.8359914938862307
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9097582037996546
  - 0.9108910891089108
  - 0.9088541666666665
  - 0.908894645941278
  - 0.9120370370370371
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9097582037996546
  - 0.9108910891089109
  - 0.9088541666666666
  - 0.9088946459412781
  - 0.9120370370370371
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9097582037996544
  - 0.9108910891089109
  - 0.9088541666666666
  - 0.9088946459412779
  - 0.912037037037037
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.830403847584104
  - 0.8372295562889621
  - 0.8296626984126982
  - 0.8325025170051322
  - 0.8359914938862307
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9669790257669347
  - 0.9739931105288475
  - 0.9697245692899825
  - 0.968199538953101
  - 0.9532618350003838
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.958463812808978
  - 0.9563896437198068
  - 0.9551439486969574
  - 0.9563733381364614
  - 0.9484702022287334
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.950423928403203
  - 0.9444311097776443
  - 0.9505445075757576
  - 0.9430418171350813
  - 0.9373048668503213
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9625028114666512
  - 0.9718818616871543
  - 0.9664405971800804
  - 0.968416928030233
  - 0.9526753321339173
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8018209903177379
  - 0.8286807507339221
  - 0.8530866889721768
  - 0.8336828646236646
  - 0.8086058188881494
  train_average_precision_macro_oob:
  - 0.6775892496404726
  - 0.6928378442762452
  - 0.7332344461915893
  - 0.7267499724201724
  - 0.7001372828272866
  train_average_precision_micro:
  - 0.7846399398169549
  - 0.7838923500078506
  - 0.7941748993898462
  - 0.8078101524507658
  - 0.7979769873582704
  train_average_precision_micro_oob:
  - 0.7275232094998099
  - 0.7174052863465268
  - 0.7344282293413466
  - 0.7511951003033529
  - 0.7416561569074879
  train_average_precision_samples:
  - 0.8668527403240779
  - 0.8539462649320896
  - 0.8625676521668888
  - 0.8726837529066828
  - 0.8583323158323158
  train_average_precision_samples_oob:
  - 0.8213260447973822
  - 0.8153616429389625
  - 0.8233940183367664
  - 0.831573652815691
  - 0.8180957468457467
  train_average_precision_weighted:
  - 0.8585197219820667
  - 0.8592429214492775
  - 0.8769209646204236
  - 0.8839721440374583
  - 0.8585998538784868
  train_average_precision_weighted_oob:
  - 0.7751225877228457
  - 0.7722626646313664
  - 0.7980192305823953
  - 0.8087326262574495
  - 0.7900644689048567
  train_f1_macro:
  - 0.9101910828025477
  - 0.909901202749141
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_f1_macro_oob:
  - 0.9101910828025477
  - 0.909901202749141
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_f1_micro:
  - 0.9101910828025478
  - 0.9099012027491409
  - 0.9104113655640373
  - 0.9104033970276009
  - 0.9096153846153846
  train_f1_micro_oob:
  - 0.9101910828025478
  - 0.9099012027491409
  - 0.9104113655640373
  - 0.9104033970276009
  - 0.9096153846153846
  train_f1_samples:
  - 0.9101910828025477
  - 0.9099012027491408
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_f1_samples_oob:
  - 0.9101910828025477
  - 0.9099012027491408
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_f1_weighted:
  - 0.8339461836141603
  - 0.8322085079193443
  - 0.8341283105229084
  - 0.8334319437316994
  - 0.8325604655391892
  train_f1_weighted_oob:
  - 0.8339461836141603
  - 0.8322085079193443
  - 0.8341283105229084
  - 0.8334319437316994
  - 0.8325604655391892
  train_jaccard_macro:
  - 0.8449680627591197
  - 0.8446881082348114
  - 0.8453273631975772
  - 0.8454041617821603
  - 0.8441508465987089
  train_jaccard_macro_oob:
  - 0.8449680627591197
  - 0.8446881082348114
  - 0.8453273631975772
  - 0.8454041617821603
  - 0.8441508465987089
  train_jaccard_micro:
  - 0.8351841028638223
  - 0.8346960890552655
  - 0.835555123090396
  - 0.8355416991426344
  - 0.8342151675485009
  train_jaccard_micro_oob:
  - 0.8351841028638223
  - 0.8346960890552655
  - 0.835555123090396
  - 0.8355416991426344
  - 0.8342151675485009
  train_jaccard_samples:
  - 0.835973962343389
  - 0.8354707148521582
  - 0.8363224561697843
  - 0.836287534121929
  - 0.8350633981403212
  train_jaccard_samples_oob:
  - 0.835973962343389
  - 0.8354707148521582
  - 0.8363224561697843
  - 0.836287534121929
  - 0.8350633981403212
  train_jaccard_weighted:
  - 0.726242138072214
  - 0.7237953946572525
  - 0.7264761068881085
  - 0.7254653981185436
  - 0.7242885057164123
  train_jaccard_weighted_oob:
  - 0.726242138072214
  - 0.7237953946572525
  - 0.7264761068881085
  - 0.7254653981185436
  - 0.7242885057164123
  train_label_ranking_average_precision_score:
  - 0.8668527403240784
  - 0.85394626493209
  - 0.8625676521668892
  - 0.8726837529066835
  - 0.8583323158323162
  train_label_ranking_average_precision_score_oob:
  - 0.8213260447973828
  - 0.8153616429389627
  - 0.8233940183367668
  - 0.8315736528156913
  - 0.8180957468457474
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9014600499004785
  - 0.8918148722370467
  - 0.8981485464634988
  - 0.9061986000361479
  - 0.8955433671150728
  train_ndgc_oob:
  - 0.8670982957455028
  - 0.862892377689622
  - 0.8687274294725758
  - 0.8752596094404566
  - 0.865295597207203
  train_neg_coverage_error:
  - -1.5872611464968154
  - -1.5811855670103092
  - -1.525445292620865
  - -1.4968152866242037
  - -1.5692307692307692
  train_neg_coverage_error_oob:
  - -1.7859872611464969
  - -1.7719072164948453
  - -1.727735368956743
  - -1.6828025477707007
  - -1.7794871794871794
  train_neg_hamming_loss_macro:
  - -0.08980891719745222
  - -0.09009879725085912
  - -0.08958863443596267
  - -0.08959660297239914
  - -0.0903846153846154
  train_neg_hamming_loss_macro_oob:
  - -0.08980891719745222
  - -0.09009879725085912
  - -0.08958863443596267
  - -0.08959660297239914
  - -0.0903846153846154
  train_neg_hamming_loss_micro:
  - -0.08980891719745222
  - -0.0900987972508591
  - -0.08958863443596268
  - -0.08959660297239914
  - -0.09038461538461538
  train_neg_hamming_loss_micro_oob:
  - -0.08980891719745222
  - -0.0900987972508591
  - -0.08958863443596268
  - -0.08959660297239914
  - -0.09038461538461538
  train_neg_hamming_loss_samples:
  - -0.08980891719745222
  - -0.09009879725085909
  - -0.08958863443596267
  - -0.08959660297239914
  - -0.09038461538461538
  train_neg_hamming_loss_samples_oob:
  - -0.08980891719745222
  - -0.09009879725085909
  - -0.08958863443596267
  - -0.08959660297239914
  - -0.09038461538461538
  train_neg_hamming_loss_weighted:
  - -0.1660538163858397
  - -0.1677914920806557
  - -0.16587168947709172
  - -0.1665680562683008
  - -0.16743953446081106
  train_neg_hamming_loss_weighted_oob:
  - -0.1660538163858397
  - -0.1677914920806557
  - -0.16587168947709172
  - -0.1665680562683008
  - -0.16743953446081106
  train_neg_label_ranking_loss:
  - -0.043311672993201655
  - -0.04349313582561005
  - -0.039156192972986864
  - -0.03603358425014475
  - -0.041492057325390665
  train_neg_label_ranking_loss_oob:
  - -0.061013746809925155
  - -0.05975367940574126
  - -0.056884579467276666
  - -0.052422312294923765
  - -0.05965898299231633
  train_precision_macro:
  - 0.9101910828025477
  - 0.909901202749141
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_precision_macro_oob:
  - 0.9101910828025477
  - 0.909901202749141
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_precision_micro:
  - 0.9101910828025478
  - 0.9099012027491409
  - 0.9104113655640373
  - 0.9104033970276009
  - 0.9096153846153846
  train_precision_micro_oob:
  - 0.9101910828025478
  - 0.9099012027491409
  - 0.9104113655640373
  - 0.9104033970276009
  - 0.9096153846153846
  train_precision_samples:
  - 0.9101910828025477
  - 0.9099012027491408
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_precision_samples_oob:
  - 0.9101910828025477
  - 0.9099012027491408
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_precision_weighted:
  - 0.8339461836141603
  - 0.8322085079193443
  - 0.8341283105229084
  - 0.8334319437316994
  - 0.8325604655391892
  train_precision_weighted_oob:
  - 0.8339461836141603
  - 0.8322085079193443
  - 0.8341283105229084
  - 0.8334319437316994
  - 0.8325604655391892
  train_recall_macro:
  - 0.9101910828025477
  - 0.909901202749141
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_recall_macro_oob:
  - 0.9101910828025477
  - 0.909901202749141
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_recall_micro:
  - 0.9101910828025478
  - 0.9099012027491409
  - 0.9104113655640373
  - 0.9104033970276009
  - 0.9096153846153846
  train_recall_micro_oob:
  - 0.9101910828025478
  - 0.9099012027491409
  - 0.9104113655640373
  - 0.9104033970276009
  - 0.9096153846153846
  train_recall_samples:
  - 0.9101910828025477
  - 0.9099012027491408
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_recall_samples_oob:
  - 0.9101910828025477
  - 0.9099012027491408
  - 0.9104113655640372
  - 0.9104033970276008
  - 0.9096153846153845
  train_recall_weighted:
  - 0.8339461836141603
  - 0.8322085079193443
  - 0.8341283105229084
  - 0.8334319437316994
  - 0.8325604655391892
  train_recall_weighted_oob:
  - 0.8339461836141603
  - 0.8322085079193443
  - 0.8341283105229084
  - 0.8334319437316994
  - 0.8325604655391892
  train_roc_auc_macro:
  - 0.9754714139213622
  - 0.975378090150082
  - 0.9823062033916767
  - 0.9792523368081659
  - 0.9774411923669685
  train_roc_auc_macro_oob:
  - 0.9612940446091255
  - 0.9611426334237366
  - 0.9663307156465284
  - 0.9682108855262835
  - 0.9638921488749265
  train_roc_auc_micro:
  - 0.9639456468811918
  - 0.9641432007187665
  - 0.9681029463141959
  - 0.9707951375380208
  - 0.9675493457861922
  train_roc_auc_micro_oob:
  - 0.9507156718232758
  - 0.9487464000842895
  - 0.9541804971461607
  - 0.9586837454463465
  - 0.9545950183011044
  train_roc_auc_samples:
  - 0.9566883270067983
  - 0.9565068641743899
  - 0.9608438070270131
  - 0.9639664157498553
  - 0.9585079426746094
  train_roc_auc_samples_oob:
  - 0.9389862531900749
  - 0.9402463205942586
  - 0.9431154205327233
  - 0.9475776877050764
  - 0.9403410170076837
  train_roc_auc_weighted:
  - 0.9743984788656195
  - 0.9714925816470122
  - 0.9772965702738104
  - 0.9793632424055339
  - 0.9734035377854483
  train_roc_auc_weighted_oob:
  - 0.9616263480880297
  - 0.95724077486954
  - 0.9648113662206865
  - 0.9674725984939255
  - 0.9616700806656008
start: 2023-12-22 09:46:46.367615
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
