active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+YmZmZmZkJwDAzMzMzM/O/oJmZmZmZ6T9oZmZmZmYGQA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT8wMzMzMzPzP6CZmZmZmem/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzM/L9AMzMzMzPzPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMBMA0MzMzMzMDQDQzMzMzMwNAmJmZmZmZ+b8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+amZmZmZkBQMzMzMzMzPy/ZmZmZmZmBsCamZmZmZkBQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMz87/gzMzMzMz8P+DMzMzMzPw/AJmZmZmZyb+QmZmZmZkBwA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 14:57:57.469729
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__8
  params: {}
hash: 3adff8af35c1e816d6fcb0858a8244d02a40dab88b96dd90e275df1d8bb4a60b
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3adff8a_20231221T145653165111_embedding_proba__8_flags.yml
results:
  fit_time:
  - 49.18648958206177
  - 49.85831809043884
  - 49.19969916343689
  - 50.33052325248718
  - 50.325753927230835
  score_time:
  - 4.926954746246338
  - 5.140732765197754
  - 4.836744070053101
  - 5.182511329650879
  - 5.233370542526245
  test_average_precision_macro:
  - 0.7038577099567093
  - 0.6826784051816229
  - 0.7512522156850364
  - 0.6667666836181844
  - 0.5799779129833134
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.740554200322033
  - 0.7594144013903825
  - 0.792058100529584
  - 0.7442630409480564
  - 0.5975117190142138
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8043591269841268
  - 0.7504365079365077
  - 0.8308794508794509
  - 0.8028581603581605
  - 0.7317189314750291
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7468027377135036
  - 0.7787531837419471
  - 0.7968676369668639
  - 0.7290504445541695
  - 0.6525911879989689
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.625
  - 0.5945945945945946
  - 0.5907335907335908
  - 0.6227106227106226
  - 0.5993031358885018
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.625
  - 0.5945945945945946
  - 0.5907335907335908
  - 0.6227106227106227
  - 0.5993031358885017
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6249999999999999
  - 0.5945945945945947
  - 0.5907335907335908
  - 0.6227106227106227
  - 0.5993031358885016
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5681481481481482
  - 0.504788252819749
  - 0.528957528957529
  - 0.5842760180995475
  - 0.5112348761282888
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.46925865127028404
  - 0.4495085309521312
  - 0.43597826714658483
  - 0.4623864492885456
  - 0.4559254075054554
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.45454545454545453
  - 0.4230769230769231
  - 0.4191780821917808
  - 0.4521276595744681
  - 0.42786069651741293
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.46758838383838375
  - 0.4356034356034356
  - 0.4402853902853903
  - 0.48797342258880716
  - 0.4375092387287509
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4060667625270957
  - 0.3484455243009204
  - 0.37003505221099003
  - 0.42131550086695596
  - 0.3594673812591911
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.804359126984127
  - 0.7504365079365077
  - 0.8308794508794509
  - 0.8028581603581604
  - 0.731718931475029
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16043314186846708
  - 0.14947269202785277
  - 0.13142537553243128
  - 0.18286627026752522
  - 0.030367077928292623
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3152641443777315
  - 0.2724646559406713
  - 0.2869820106974262
  - 0.32742141146070824
  - 0.16701196888331452
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.23839907619222486
  - 0.12799084086599688
  - 0.2217316795401424
  - 0.33323467000573076
  - 0.09513877361132098
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.17119604447197742
  - 0.19600002539674902
  - 0.15706446135293922
  - 0.2089298269609954
  - 0.01935106849804326
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8847224470363791
  - 0.8485816626443108
  - 0.9010600866466324
  - 0.8870693468054355
  - 0.8345916153464584
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.85
  - -5.216216216216216
  - -4.918918918918919
  - -5.0256410256410255
  - -4.926829268292683
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.375
  - -0.40540540540540543
  - -0.4092664092664093
  - -0.37728937728937734
  - -0.40069686411149835
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.375
  - -0.40540540540540543
  - -0.4092664092664093
  - -0.3772893772893773
  - -0.40069686411149824
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3749999999999999
  - -0.4054054054054054
  - -0.4092664092664092
  - -0.3772893772893773
  - -0.40069686411149824
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4318518518518519
  - -0.49521174718025107
  - -0.47104247104247104
  - -0.41572398190045246
  - -0.48876512387171117
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22791666666666668
  - -0.3112612612612613
  - -0.2
  - -0.2824786324786325
  - -0.2739837398373984
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.625
  - 0.5945945945945946
  - 0.5907335907335908
  - 0.6227106227106226
  - 0.5993031358885018
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.625
  - 0.5945945945945946
  - 0.5907335907335908
  - 0.6227106227106227
  - 0.5993031358885017
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6249999999999999
  - 0.5945945945945947
  - 0.5907335907335908
  - 0.6227106227106227
  - 0.5993031358885016
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5681481481481482
  - 0.504788252819749
  - 0.528957528957529
  - 0.5842760180995475
  - 0.5112348761282888
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.625
  - 0.5945945945945946
  - 0.5907335907335908
  - 0.6227106227106226
  - 0.5993031358885018
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.625
  - 0.5945945945945946
  - 0.5907335907335908
  - 0.6227106227106227
  - 0.5993031358885017
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6249999999999999
  - 0.5945945945945947
  - 0.5907335907335908
  - 0.6227106227106227
  - 0.5993031358885016
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5681481481481482
  - 0.504788252819749
  - 0.528957528957529
  - 0.5842760180995475
  - 0.5112348761282888
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.683023573743923
  - 0.6977377494568148
  - 0.7164932930610333
  - 0.696854465191116
  - 0.6331895224433388
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7773690932311622
  - 0.7717131949415414
  - 0.7960973863229501
  - 0.7742593387720053
  - 0.6918307086614173
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7720833333333333
  - 0.6887387387387388
  - .nan
  - 0.7175213675213676
  - 0.7260162601626016
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6594865765236136
  - 0.6753297338579981
  - 0.6927200790845839
  - 0.6816027127696956
  - 0.5767237547823684
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8275881689674401
  - 0.8451289587949836
  - 0.8304603859048202
  - 0.8136817065171936
  - 0.8577156674110477
  train_average_precision_macro_oob:
  - 0.7512515221029431
  - 0.7891980975848233
  - 0.7522399468265987
  - 0.733460974078134
  - 0.7802674755872212
  train_average_precision_micro:
  - 0.8650900941419633
  - 0.8895136795120102
  - 0.866315246115705
  - 0.8839266974620832
  - 0.8822776103172363
  train_average_precision_micro_oob:
  - 0.8453007794920835
  - 0.8756978936420619
  - 0.8509440167645135
  - 0.8697627975352604
  - 0.863419260433629
  train_average_precision_samples:
  - 0.8860564831993403
  - 0.884886007481549
  - 0.9020329087048833
  - 0.8979395801331284
  - 0.9044766054569974
  train_average_precision_samples_oob:
  - 0.870379303236446
  - 0.8795968557274289
  - 0.8917748458194319
  - 0.8840304659498209
  - 0.881004253553273
  train_average_precision_weighted:
  - 0.8717291919407392
  - 0.8851486461449505
  - 0.8695148378765719
  - 0.8758281721616817
  - 0.8884269167126672
  train_average_precision_weighted_oob:
  - 0.8340649924388972
  - 0.8572565743222882
  - 0.8373814252635863
  - 0.8446330047997123
  - 0.8497376127040838
  train_f1_macro:
  - 0.712430426716141
  - 0.7197452229299363
  - 0.7151956323930847
  - 0.7059907834101383
  - 0.6872082166199813
  train_f1_macro_oob:
  - 0.6873840445269017
  - 0.6933575978161965
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_f1_micro:
  - 0.712430426716141
  - 0.7197452229299363
  - 0.7151956323930846
  - 0.7059907834101382
  - 0.6872082166199813
  train_f1_micro_oob:
  - 0.6873840445269017
  - 0.6933575978161965
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_f1_samples:
  - 0.7124304267161411
  - 0.7197452229299363
  - 0.7151956323930845
  - 0.7059907834101382
  - 0.6872082166199813
  train_f1_samples_oob:
  - 0.6873840445269017
  - 0.6933575978161964
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_f1_weighted:
  - 0.6713764247225049
  - 0.684731368527115
  - 0.677973915680922
  - 0.6622049190458534
  - 0.6511945644547837
  train_f1_weighted_oob:
  - 0.6472647811079933
  - 0.6579221994314296
  - 0.6418804974218987
  - 0.6472994685452973
  - 0.6278325517275335
  train_jaccard_macro:
  - 0.5613028958208163
  - 0.5685579353735916
  - 0.5643423180594308
  - 0.5544342267318991
  - 0.5300065241562625
  train_jaccard_macro_oob:
  - 0.5315677657976284
  - 0.5373328851427036
  - 0.5264519382598486
  - 0.5373704392445058
  - 0.5076888815737417
  train_jaccard_micro:
  - 0.553314121037464
  - 0.5621890547263682
  - 0.556657223796034
  - 0.5455840455840456
  - 0.5234708392603129
  train_jaccard_micro_oob:
  - 0.5236749116607774
  - 0.5306406685236769
  - 0.5179558011049724
  - 0.528169014084507
  - 0.5
  train_jaccard_samples:
  - 0.5777056277056277
  - 0.5831853567522358
  - 0.5825355465482854
  - 0.5722916510013284
  - 0.5483637277754925
  train_jaccard_samples_oob:
  - 0.5508821986094714
  - 0.5548124557678697
  - 0.5439072251174162
  - 0.5568413665187859
  - 0.5269205377048514
  train_jaccard_weighted:
  - 0.5105834784005034
  - 0.5256519487893512
  - 0.5180558959248648
  - 0.5004909903164555
  - 0.48687731397916506
  train_jaccard_weighted_oob:
  - 0.48269842359596726
  - 0.4945535191294996
  - 0.476864859172505
  - 0.4835296126530648
  - 0.4618144509804789
  train_label_ranking_average_precision_score:
  - 0.8860564831993404
  - 0.8848860074815493
  - 0.902032908704883
  - 0.8979395801331286
  - 0.9044766054569978
  train_label_ranking_average_precision_score_oob:
  - 0.870379303236446
  - 0.8795968557274295
  - 0.8917748458194314
  - 0.8840304659498205
  - 0.881004253553273
  train_matthews_corrcoef_macro:
  - 0.3876636939207608
  - 0.40016579368952077
  - 0.34677848148784157
  - 0.3599381601066682
  - 0.3163606603035545
  train_matthews_corrcoef_macro_oob:
  - 0.3252869837104732
  - 0.34030450780857363
  - 0.29010226049850746
  - 0.3115258523737549
  - 0.27963990516316195
  train_matthews_corrcoef_micro:
  - 0.5047295022257469
  - 0.518697613655256
  - 0.5079892726400784
  - 0.4982332100228415
  - 0.47544786547997625
  train_matthews_corrcoef_micro_oob:
  - 0.4582344068030077
  - 0.4736647352866728
  - 0.44766079609502574
  - 0.47391622870533906
  - 0.43639388628959797
  train_matthews_corrcoef_samples:
  - 0.4724527272853121
  - 0.47545686638058804
  - 0.483821862269104
  - 0.46688560061252404
  - 0.4259916540750611
  train_matthews_corrcoef_samples_oob:
  - 0.42857739350052626
  - 0.4381749435165249
  - 0.4302617343666909
  - 0.44894890272472127
  - 0.37979350550791346
  train_matthews_corrcoef_weighted:
  - 0.4271653837610855
  - 0.44627348280614737
  - 0.41295366711124576
  - 0.41751606801707897
  - 0.38294651357595333
  train_matthews_corrcoef_weighted_oob:
  - 0.37579247915037595
  - 0.39289485004854846
  - 0.35351768708789066
  - 0.3812909641726465
  - 0.3422572592625901
  train_ndgc:
  - 0.9403807094654495
  - 0.9422149461072566
  - 0.9527038510825315
  - 0.9479023633178434
  - 0.9528018083572896
  train_ndgc_oob:
  - 0.9315598836294601
  - 0.9379204824661238
  - 0.9464860918977724
  - 0.9407476831100435
  - 0.9386845495108977
  train_neg_coverage_error:
  - -4.409090909090909
  - -4.54140127388535
  - -4.369426751592357
  - -4.374193548387097
  - -4.444444444444445
  train_neg_coverage_error_oob:
  - -4.538961038961039
  - -4.611464968152866
  - -4.439490445859873
  - -4.516129032258065
  - -4.65359477124183
  train_neg_hamming_loss_macro:
  - -0.28756957328385896
  - -0.2802547770700637
  - -0.28480436760691535
  - -0.29400921658986173
  - -0.3127917833800186
  train_neg_hamming_loss_macro_oob:
  - -0.31261595547309834
  - -0.3066424021838035
  - -0.31756141947224753
  - -0.3087557603686636
  - -0.33333333333333337
  train_neg_hamming_loss_micro:
  - -0.287569573283859
  - -0.2802547770700637
  - -0.28480436760691535
  - -0.29400921658986173
  - -0.3127917833800187
  train_neg_hamming_loss_micro_oob:
  - -0.31261595547309834
  - -0.30664240218380345
  - -0.3175614194722475
  - -0.3087557603686636
  - -0.3333333333333333
  train_neg_hamming_loss_samples:
  - -0.28756957328385896
  - -0.2802547770700636
  - -0.28480436760691535
  - -0.29400921658986173
  - -0.3127917833800186
  train_neg_hamming_loss_samples_oob:
  - -0.3126159554730983
  - -0.30664240218380334
  - -0.3175614194722474
  - -0.30875576036866353
  - -0.33333333333333326
  train_neg_hamming_loss_weighted:
  - -0.32862357527749503
  - -0.315268631472885
  - -0.322026084319078
  - -0.3377950809541466
  - -0.34880543554521615
  train_neg_hamming_loss_weighted_oob:
  - -0.35273521889200665
  - -0.3420778005685703
  - -0.3581195025781013
  - -0.35270053145470276
  - -0.37216744827246656
  train_neg_label_ranking_loss:
  - -0.14015151515151517
  - -0.14341825902335456
  - -0.13768577494692144
  - -0.13333333333333333
  - -0.13093681917211328
  train_neg_label_ranking_loss_oob:
  - -0.16028138528138527
  - -0.15159235668789808
  - -0.15212314225053078
  - -0.15838709677419355
  - -0.15980392156862744
  train_precision_macro:
  - 0.712430426716141
  - 0.7197452229299363
  - 0.7151956323930847
  - 0.7059907834101383
  - 0.6872082166199813
  train_precision_macro_oob:
  - 0.6873840445269017
  - 0.6933575978161965
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_precision_micro:
  - 0.712430426716141
  - 0.7197452229299363
  - 0.7151956323930846
  - 0.7059907834101382
  - 0.6872082166199813
  train_precision_micro_oob:
  - 0.6873840445269017
  - 0.6933575978161965
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_precision_samples:
  - 0.7124304267161411
  - 0.7197452229299363
  - 0.7151956323930845
  - 0.7059907834101382
  - 0.6872082166199813
  train_precision_samples_oob:
  - 0.6873840445269017
  - 0.6933575978161964
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_precision_weighted:
  - 0.6713764247225049
  - 0.684731368527115
  - 0.677973915680922
  - 0.6622049190458534
  - 0.6511945644547837
  train_precision_weighted_oob:
  - 0.6472647811079933
  - 0.6579221994314296
  - 0.6418804974218987
  - 0.6472994685452973
  - 0.6278325517275335
  train_recall_macro:
  - 0.712430426716141
  - 0.7197452229299363
  - 0.7151956323930847
  - 0.7059907834101383
  - 0.6872082166199813
  train_recall_macro_oob:
  - 0.6873840445269017
  - 0.6933575978161965
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_recall_micro:
  - 0.712430426716141
  - 0.7197452229299363
  - 0.7151956323930846
  - 0.7059907834101382
  - 0.6872082166199813
  train_recall_micro_oob:
  - 0.6873840445269017
  - 0.6933575978161965
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_recall_samples:
  - 0.7124304267161411
  - 0.7197452229299363
  - 0.7151956323930845
  - 0.7059907834101382
  - 0.6872082166199813
  train_recall_samples_oob:
  - 0.6873840445269017
  - 0.6933575978161964
  - 0.6824385805277525
  - 0.6912442396313364
  - 0.6666666666666666
  train_recall_weighted:
  - 0.6713764247225049
  - 0.684731368527115
  - 0.677973915680922
  - 0.6622049190458534
  - 0.6511945644547837
  train_recall_weighted_oob:
  - 0.6472647811079933
  - 0.6579221994314296
  - 0.6418804974218987
  - 0.6472994685452973
  - 0.6278325517275335
  train_roc_auc_macro:
  - 0.8040537203473868
  - 0.8215854267834123
  - 0.8116310701975895
  - 0.8151255537293066
  - 0.8226451365343335
  train_roc_auc_macro_oob:
  - 0.7724882859481603
  - 0.8005638322329257
  - 0.7903422434673867
  - 0.772130069666619
  - 0.7962353624861996
  train_roc_auc_micro:
  - 0.8441458667080082
  - 0.8674322299143259
  - 0.8546175543388087
  - 0.8652419645712964
  - 0.8557194671130641
  train_roc_auc_micro_oob:
  - 0.8284498647787366
  - 0.8555741227023156
  - 0.845282893645263
  - 0.8482813063568867
  - 0.8397468089558486
  train_roc_auc_samples:
  - .nan
  - .nan
  - 0.8623142250530786
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - 0.8478768577494693
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8036000867841009
  - 0.8187471145900106
  - 0.7951783771166151
  - 0.8087919084344862
  - 0.8055789820135829
  train_roc_auc_weighted_oob:
  - 0.7828996686567681
  - 0.8047516191007885
  - 0.7861102681531861
  - 0.7903400001545455
  - 0.7855982420917595
start: 2023-12-21 14:56:53.165111
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
