active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0CAZmZmZmb2P0AzMzMzMwNAYGZmZmZmEsCAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:26:30.433701
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__6
  params: {}
hash: fd9ca9ddccefb9c7ff997b84d41e0f50f75bba06a74842674744c0dfbd85c8aa
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fd9ca9d_20231221T082603694260_embedding__6_VirusGO.yml
results:
  fit_time:
  - 17.287198066711426
  - 17.731064558029175
  - 17.823188304901123
  - 17.924690008163452
  - 17.70573139190674
  score_time:
  - 2.5489401817321777
  - 2.5850791931152344
  - 2.6454060077667236
  - 2.6523659229278564
  - 2.687748670578003
  test_average_precision_macro:
  - 0.9316027470433544
  - 0.9369428874072837
  - 0.8705912760989755
  - 0.9435782395329836
  - 0.9018115889376817
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9249839296631996
  - 0.8981241819842871
  - 0.8616622466685421
  - 0.8400558959243729
  - 0.8221662649186169
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9025641025641027
  - 0.9354166666666668
  - 0.9119658119658118
  - 0.9583333333333333
  - 0.9321705426356588
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.944033096031935
  - 0.9374619353674133
  - 0.882357520199483
  - 0.9135939460436363
  - 0.8836539747662039
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7863247863247863
  - 0.8041666666666666
  - 0.782051282051282
  - 0.8152173913043478
  - 0.8062015503875969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7863247863247863
  - 0.8041666666666667
  - 0.782051282051282
  - 0.8152173913043478
  - 0.8062015503875969
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7863247863247862
  - 0.8041666666666666
  - 0.7820512820512819
  - 0.8152173913043481
  - 0.8062015503875972
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6666666666666667
  - 0.701530612244898
  - 0.6505781799899447
  - 0.7153010033444817
  - 0.6930232558139535
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6748989366970082
  - 0.6942077048865759
  - 0.6724728910243251
  - 0.7089811151687293
  - 0.7001310982162047
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.647887323943662
  - 0.6724738675958188
  - 0.6421052631578947
  - 0.6880733944954128
  - 0.6753246753246753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6550671550671553
  - 0.6803571428571429
  - 0.6507936507936509
  - 0.6925465838509318
  - 0.6794019933554818
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5214729762580018
  - 0.5582268120445864
  - 0.5027714411825078
  - 0.5731746765610125
  - 0.5473235332043843
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9025641025641025
  - 0.9354166666666666
  - 0.9119658119658118
  - 0.9583333333333333
  - 0.932170542635659
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0468292905790847
  - 0.0
  - 0.0324501740844612
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.18098607550490678
  - 0.0
  - 0.12515724375494877
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.05
  - 0.0
  - 0.021739130434782608
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.09174718154269657
  - 0.0
  - 0.06365226455028929
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.928188791207618
  - 0.9547431341300152
  - 0.9371719939136373
  - 0.971950359596441
  - 0.9516494303688269
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5897435897435896
  - -1.425
  - -1.641025641025641
  - -1.2826086956521738
  - -1.372093023255814
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2136752136752137
  - -0.1958333333333334
  - -0.21794871794871798
  - -0.1847826086956522
  - -0.19379844961240308
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21367521367521367
  - -0.19583333333333333
  - -0.21794871794871795
  - -0.18478260869565216
  - -0.1937984496124031
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2136752136752137
  - -0.19583333333333333
  - -0.21794871794871795
  - -0.18478260869565213
  - -0.19379844961240308
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33333333333333326
  - -0.29846938775510207
  - -0.34942182001005523
  - -0.2846989966555184
  - -0.3069767441860465
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05961538461538462
  - -0.034375
  - -0.05897435897435897
  - -0.024999999999999998
  - -0.0377906976744186
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7863247863247863
  - 0.8041666666666666
  - 0.782051282051282
  - 0.8152173913043478
  - 0.8062015503875969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7863247863247863
  - 0.8041666666666667
  - 0.782051282051282
  - 0.8152173913043478
  - 0.8062015503875969
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7863247863247862
  - 0.8041666666666666
  - 0.7820512820512819
  - 0.8152173913043481
  - 0.8062015503875972
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6666666666666667
  - 0.701530612244898
  - 0.6505781799899447
  - 0.7153010033444817
  - 0.6930232558139535
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7863247863247863
  - 0.8041666666666666
  - 0.782051282051282
  - 0.8152173913043478
  - 0.8062015503875969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7863247863247863
  - 0.8041666666666667
  - 0.782051282051282
  - 0.8152173913043478
  - 0.8062015503875969
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7863247863247862
  - 0.8041666666666666
  - 0.7820512820512819
  - 0.8152173913043481
  - 0.8062015503875972
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6666666666666667
  - 0.701530612244898
  - 0.6505781799899447
  - 0.7153010033444817
  - 0.6930232558139535
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9779036867272161
  - 0.9828081708226769
  - 0.9480444324194325
  - 0.9821923906609505
  - 0.9665032679738562
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9724999999999999
  - 0.9746233571962817
  - 0.9531768991749705
  - 0.9737293956043956
  - 0.9609615384615385
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9403846153846153
  - 0.965625
  - 0.9410256410256411
  - 0.9749999999999999
  - 0.9622093023255814
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9705108225108225
  - 0.9760567270386415
  - 0.9432216068245478
  - 0.9687503036309402
  - 0.9533333333333333
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9501125716320798
  - 0.9640715790932216
  - 0.949057482980406
  - 0.9575764663332175
  - 0.9594054495668307
  train_average_precision_macro_oob:
  - 0.9053935639985728
  - 0.9072763437878723
  - 0.8853589237942671
  - 0.8589533547281416
  - 0.8864219813505122
  train_average_precision_micro:
  - 0.9385221809098249
  - 0.9375890523565844
  - 0.9365040030181563
  - 0.9332126462110794
  - 0.9336059264311901
  train_average_precision_micro_oob:
  - 0.8628950550738205
  - 0.8394121183127483
  - 0.8675903254719165
  - 0.8437061285503171
  - 0.8553722900139602
  train_average_precision_samples:
  - 0.9575396825396826
  - 0.9592814371257484
  - 0.9497023809523808
  - 0.9549689440993789
  - 0.953760162601626
  train_average_precision_samples_oob:
  - 0.9284722222222224
  - 0.9144710578842313
  - 0.9224206349206348
  - 0.8976535541752932
  - 0.9135162601626016
  train_average_precision_weighted:
  - 0.9547818068409815
  - 0.9594596221472986
  - 0.9555679579171366
  - 0.9587849334045612
  - 0.9570953760988352
  train_average_precision_weighted_oob:
  - 0.8982679582025099
  - 0.8924175591567164
  - 0.8854610531621218
  - 0.8755042198557906
  - 0.8839204084022382
  train_f1_macro:
  - 0.7996031746031748
  - 0.8023952095808383
  - 0.8005952380952381
  - 0.8002070393374742
  - 0.7987804878048781
  train_f1_macro_oob:
  - 0.8005952380952381
  - 0.7974051896207585
  - 0.8005952380952381
  - 0.7929606625258799
  - 0.7957317073170732
  train_f1_micro:
  - 0.7996031746031746
  - 0.8023952095808383
  - 0.8005952380952381
  - 0.8002070393374742
  - 0.7987804878048781
  train_f1_micro_oob:
  - 0.8005952380952381
  - 0.7974051896207585
  - 0.8005952380952381
  - 0.7929606625258799
  - 0.7957317073170732
  train_f1_samples:
  - 0.7996031746031745
  - 0.8023952095808381
  - 0.8005952380952381
  - 0.8002070393374741
  - 0.7987804878048781
  train_f1_samples_oob:
  - 0.8005952380952381
  - 0.7974051896207582
  - 0.8005952380952381
  - 0.7929606625258798
  - 0.7957317073170732
  train_f1_weighted:
  - 0.6857024988213107
  - 0.6914250317099792
  - 0.689439706230751
  - 0.6894720496894411
  - 0.6875150929727118
  train_f1_weighted_oob:
  - 0.6876768033946251
  - 0.6813958290315919
  - 0.689439706230751
  - 0.6747204968944098
  - 0.6813571601062545
  train_jaccard_macro:
  - 0.6913062098006546
  - 0.6940025266992511
  - 0.6919402381599952
  - 0.6907481880006512
  - 0.6891660671362523
  train_jaccard_macro_oob:
  - 0.6923245767764685
  - 0.6888529738161182
  - 0.6919402381599952
  - 0.6834612711858535
  - 0.6860879384484534
  train_jaccard_micro:
  - 0.6661157024793388
  - 0.67
  - 0.6674937965260546
  - 0.6669542709232097
  - 0.6649746192893401
  train_jaccard_micro_oob:
  - 0.6674937965260546
  - 0.6630705394190871
  - 0.6674937965260546
  - 0.6569468267581475
  - 0.660759493670886
  train_jaccard_samples:
  - 0.6714852607709751
  - 0.677502138579983
  - 0.6724773242630386
  - 0.6743566992014198
  - 0.6716027874564461
  train_jaccard_samples_oob:
  - 0.6731859410430839
  - 0.6689478186484175
  - 0.6724773242630386
  - 0.6632653061224492
  - 0.667247386759582
  train_jaccard_weighted:
  - 0.540412576836337
  - 0.5461592995692995
  - 0.5448967160931585
  - 0.5437137849965025
  - 0.5423406186424996
  train_jaccard_weighted_oob:
  - 0.5424392279466199
  - 0.5358094592918698
  - 0.5448967160931585
  - 0.5288820601723276
  - 0.5361247222208425
  train_label_ranking_average_precision_score:
  - 0.9575396825396825
  - 0.9592814371257484
  - 0.9497023809523812
  - 0.9549689440993789
  - 0.9537601626016261
  train_label_ranking_average_precision_score_oob:
  - 0.9284722222222221
  - 0.9144710578842316
  - 0.9224206349206351
  - 0.8976535541752935
  - 0.9135162601626016
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.03532965410202558
  - 0.0
  - 0.05802908702473725
  - 0.04374160400157975
  train_matthews_corrcoef_macro_oob:
  - 0.01583484437882243
  - 0.0
  - 0.0
  - 0.0
  - 0.015127593789984205
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.14049562276353011
  - 0.0
  - 0.16720108964824973
  - 0.12570271259575144
  train_matthews_corrcoef_micro_oob:
  - 0.0629472991683745
  - 0.0
  - 0.0
  - 0.0
  - 0.06275537555014994
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.029940119760479042
  - 0.0
  - 0.036629606186962906
  - 0.01990799429309361
  train_matthews_corrcoef_samples_oob:
  - 0.005952380952380952
  - 0.0
  - 0.0
  - 0.0
  - 0.006097560975609756
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.07100738361392332
  - 0.0
  - 0.11822957948807332
  - 0.08896236230495179
  train_matthews_corrcoef_weighted_oob:
  - 0.031512908120230776
  - 0.0
  - 0.0
  - 0.0
  - 0.03145341283066023
  train_ndgc:
  - 0.9697735488345914
  - 0.9700900964974782
  - 0.9642937723428924
  - 0.9686709869741388
  - 0.9672049426026227
  train_ndgc_oob:
  - 0.9491876117281844
  - 0.9391419338345878
  - 0.9448811370824932
  - 0.9262933670894559
  - 0.9391992656901255
  train_neg_coverage_error:
  - -1.3392857142857142
  - -1.341317365269461
  - -1.3869047619047619
  - -1.3788819875776397
  - -1.420731707317073
  train_neg_coverage_error_oob:
  - -1.4523809523809523
  - -1.5209580838323353
  - -1.4702380952380953
  - -1.6024844720496894
  - -1.5670731707317074
  train_neg_hamming_loss_macro:
  - -0.20039682539682543
  - -0.19760479041916168
  - -0.19940476190476195
  - -0.19979296066252586
  - -0.201219512195122
  train_neg_hamming_loss_macro_oob:
  - -0.19940476190476195
  - -0.20259481037924154
  - -0.19940476190476195
  - -0.20703933747412007
  - -0.20426829268292682
  train_neg_hamming_loss_micro:
  - -0.2003968253968254
  - -0.19760479041916168
  - -0.19940476190476192
  - -0.1997929606625259
  - -0.20121951219512196
  train_neg_hamming_loss_micro_oob:
  - -0.19940476190476192
  - -0.2025948103792415
  - -0.19940476190476192
  - -0.2070393374741201
  - -0.20426829268292682
  train_neg_hamming_loss_samples:
  - -0.20039682539682538
  - -0.19760479041916168
  - -0.19940476190476192
  - -0.19979296066252586
  - -0.20121951219512196
  train_neg_hamming_loss_samples_oob:
  - -0.19940476190476192
  - -0.20259481037924157
  - -0.19940476190476192
  - -0.20703933747412007
  - -0.20426829268292682
  train_neg_hamming_loss_weighted:
  - -0.3142975011786893
  - -0.3085749682900209
  - -0.310560293769249
  - -0.310527950310559
  - -0.3124849070272881
  train_neg_hamming_loss_weighted_oob:
  - -0.31232319660537483
  - -0.318604170968408
  - -0.310560293769249
  - -0.32527950310559006
  - -0.3186428398937454
  train_neg_label_ranking_loss:
  - -0.025
  - -0.02455089820359281
  - -0.03392857142857143
  - -0.02375776397515528
  - -0.03299457994579946
  train_neg_label_ranking_loss_oob:
  - -0.0449404761904762
  - -0.05387558216899535
  - -0.04857804232804233
  - -0.06697722567287785
  - -0.05797764227642276
  train_precision_macro:
  - 0.7996031746031748
  - 0.8023952095808383
  - 0.8005952380952381
  - 0.8002070393374742
  - 0.7987804878048781
  train_precision_macro_oob:
  - 0.8005952380952381
  - 0.7974051896207585
  - 0.8005952380952381
  - 0.7929606625258799
  - 0.7957317073170732
  train_precision_micro:
  - 0.7996031746031746
  - 0.8023952095808383
  - 0.8005952380952381
  - 0.8002070393374742
  - 0.7987804878048781
  train_precision_micro_oob:
  - 0.8005952380952381
  - 0.7974051896207585
  - 0.8005952380952381
  - 0.7929606625258799
  - 0.7957317073170732
  train_precision_samples:
  - 0.7996031746031745
  - 0.8023952095808381
  - 0.8005952380952381
  - 0.8002070393374741
  - 0.7987804878048781
  train_precision_samples_oob:
  - 0.8005952380952381
  - 0.7974051896207582
  - 0.8005952380952381
  - 0.7929606625258798
  - 0.7957317073170732
  train_precision_weighted:
  - 0.6857024988213107
  - 0.6914250317099792
  - 0.689439706230751
  - 0.6894720496894411
  - 0.6875150929727118
  train_precision_weighted_oob:
  - 0.6876768033946251
  - 0.6813958290315919
  - 0.689439706230751
  - 0.6747204968944098
  - 0.6813571601062545
  train_recall_macro:
  - 0.7996031746031748
  - 0.8023952095808383
  - 0.8005952380952381
  - 0.8002070393374742
  - 0.7987804878048781
  train_recall_macro_oob:
  - 0.8005952380952381
  - 0.7974051896207585
  - 0.8005952380952381
  - 0.7929606625258799
  - 0.7957317073170732
  train_recall_micro:
  - 0.7996031746031746
  - 0.8023952095808383
  - 0.8005952380952381
  - 0.8002070393374742
  - 0.7987804878048781
  train_recall_micro_oob:
  - 0.8005952380952381
  - 0.7974051896207585
  - 0.8005952380952381
  - 0.7929606625258799
  - 0.7957317073170732
  train_recall_samples:
  - 0.7996031746031745
  - 0.8023952095808381
  - 0.8005952380952381
  - 0.8002070393374741
  - 0.7987804878048781
  train_recall_samples_oob:
  - 0.8005952380952381
  - 0.7974051896207582
  - 0.8005952380952381
  - 0.7929606625258798
  - 0.7957317073170732
  train_recall_weighted:
  - 0.6857024988213107
  - 0.6914250317099792
  - 0.689439706230751
  - 0.6894720496894411
  - 0.6875150929727118
  train_recall_weighted_oob:
  - 0.6876768033946251
  - 0.6813958290315919
  - 0.689439706230751
  - 0.6747204968944098
  - 0.6813571601062545
  train_roc_auc_macro:
  - 0.9796845342165342
  - 0.9852806623249393
  - 0.9848443837152311
  - 0.9864333968871085
  - 0.9845806561007088
  train_roc_auc_macro_oob:
  - 0.9676855983818706
  - 0.9620534472078471
  - 0.965160340357149
  - 0.9577844543575119
  - 0.9655108863226793
  train_roc_auc_micro:
  - 0.9804682701520773
  - 0.9818184060124417
  - 0.9792672326101832
  - 0.9805221932114883
  - 0.9785425793218708
  train_roc_auc_micro_oob:
  - 0.9631353954253986
  - 0.9555108910769003
  - 0.9657104810519892
  - 0.9498302872062663
  - 0.9588323921906258
  train_roc_auc_samples:
  - 0.9750000000000001
  - 0.9754491017964071
  - 0.9660714285714287
  - 0.9762422360248448
  - 0.9670054200542006
  train_roc_auc_samples_oob:
  - 0.9550595238095237
  - 0.9461244178310048
  - 0.9514219576719576
  - 0.933022774327122
  - 0.9420223577235772
  train_roc_auc_weighted:
  - 0.9779206767858973
  - 0.9789878696093455
  - 0.9805151940084014
  - 0.9816983985843959
  - 0.9796909923904188
  train_roc_auc_weighted_oob:
  - 0.9601254949002064
  - 0.9523525024271323
  - 0.9595701485571443
  - 0.9537180981022492
  - 0.9540776269832637
start: 2023-12-21 08:26:03.694260
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
