active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/ZmZmZmZm9r80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0CAMzMzMzMDQEBmZmZmZhrAAJyZmZmZ2T8AZ2ZmZmb2Pw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:09:47.309656
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 3a014d16424b34fb4f27021318db873a856077935863ab16c551c38679929ff8
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3a014d1_20231212T150929141537_embedding__0_Gram_negative.yml
results:
  fit_time:
  - 1.4315717220306396
  - 1.4509828090667725
  - 1.4446828365325928
  - 1.4744930267333984
  - 1.4571304321289062
  score_time:
  - 2.1931986808776855
  - 2.177649736404419
  - 2.2642805576324463
  - 2.146880865097046
  - 2.1544106006622314
  test_average_precision_macro:
  - 0.9731539113638501
  - 0.9645187126757557
  - 0.8879655629599748
  - 0.946640331147672
  - 0.9577958031720855
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9155027586376534
  - 0.926750358523336
  - 0.9186360543631165
  - 0.9159152969106853
  - 0.9027150290644583
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9168478260869566
  - 0.9316425120772946
  - 0.9233667502088555
  - 0.9208718739294279
  - 0.9000601684717208
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9719452255660149
  - 0.9774863116854103
  - 0.9844587295682222
  - 0.9673118992686371
  - 0.9625264427225898
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.9478417266187051
  - 0.9372743682310469
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.947841726618705
  - 0.9372743682310469
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.947841726618705
  - 0.9372743682310469
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.931913735964782
  - 0.9392959229727696
  - 0.9436081671756182
  - 0.9468960913743232
  - 0.9182123739574257
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8924864151437775
  - 0.9001154976098992
  - 0.9037683192219468
  - 0.9039659766646766
  - 0.8853085330333286
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.889602053915276
  - 0.8969072164948454
  - 0.9007919966652772
  - 0.9008547008547009
  - 0.8819532908704883
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8987117552334943
  - 0.9053140096618357
  - 0.9092397660818711
  - 0.9085531574740207
  - 0.8915363016446047
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8740937088922026
  - 0.887575389839465
  - 0.8951756602790233
  - 0.901546201825339
  - 0.8500811733014092
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9168478260869565
  - 0.9316425120772946
  - 0.9233667502088555
  - 0.9208718739294277
  - 0.9000601684717208
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.24175241811337672
  - 0.22515293887160714
  - 0.23035500829257327
  - 0.23139757546165612
  - 0.20616098728525437
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7231389626633187
  - 0.7413337621848893
  - 0.7473996222738659
  - 0.7527142539146561
  - 0.6951753296411215
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6003689847177947
  - 0.6147762562551073
  - 0.6273596870651408
  - 0.6269671273713725
  - 0.5673879068540029
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5980653362828697
  - 0.6054153255861006
  - 0.6090781424774612
  - 0.616827324267564
  - 0.5550543876362339
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9402805028252338
  - 0.9501958868679825
  - 0.9444581518442433
  - 0.9428884596336264
  - 0.9260709903502465
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3079710144927537
  - -1.2391304347826086
  - -1.2385964912280703
  - -1.29136690647482
  - -1.3176895306859207
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.058423913043478264
  - -0.05434782608695651
  - -0.052192982456140354
  - -0.052158273381294966
  - -0.06272563176895307
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.058423913043478264
  - -0.05434782608695652
  - -0.052192982456140354
  - -0.052158273381294966
  - -0.06272563176895307
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.058423913043478264
  - -0.05434782608695652
  - -0.052192982456140354
  - -0.052158273381294966
  - -0.06272563176895307
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06808626403521788
  - -0.060704077027230324
  - -0.05639183282438177
  - -0.05310390862567678
  - -0.08178762604257438
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.030538302277432705
  - -0.025276052449965492
  - -0.02694235588972431
  - -0.03040424803014731
  - -0.03790613718411552
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.9478417266187051
  - 0.9372743682310469
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.947841726618705
  - 0.9372743682310469
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.947841726618705
  - 0.9372743682310469
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.931913735964782
  - 0.9392959229727696
  - 0.9436081671756182
  - 0.9468960913743232
  - 0.9182123739574257
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.9478417266187051
  - 0.9372743682310469
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.947841726618705
  - 0.9372743682310469
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9415760869565217
  - 0.9456521739130435
  - 0.9478070175438597
  - 0.947841726618705
  - 0.9372743682310469
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.931913735964782
  - 0.9392959229727696
  - 0.9436081671756182
  - 0.9468960913743232
  - 0.9182123739574257
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.987529424197911
  - 0.993003583607072
  - 0.9948764107210031
  - 0.9871219106068558
  - 0.9895761056809607
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.978461757812848
  - 0.9829577111781476
  - 0.9827427768550183
  - 0.9771654551175726
  - 0.9795475704515343
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9694616977225674
  - 0.9747239475500344
  - 0.9730576441102758
  - 0.9695957519698527
  - 0.9620938628158845
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9817223819334888
  - 0.9914688330295216
  - 0.9934513863172392
  - 0.9844393844675667
  - 0.9836687087500972
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9623714819397593
  - 0.9750910090255552
  - 0.9577114252443681
  - 0.9544730932896414
  - 0.9714586197552536
  train_average_precision_macro_oob:
  - 0.8580034149873585
  - 0.9066084641022574
  - 0.8967909817225392
  - 0.8377287217813323
  - 0.901104295728747
  train_average_precision_micro:
  - 0.9152173089876204
  - 0.9250704234667659
  - 0.921963590553003
  - 0.9288566488918053
  - 0.9238036956620851
  train_average_precision_micro_oob:
  - 0.904507121641607
  - 0.9122724205560355
  - 0.9115434122719006
  - 0.9176428993025479
  - 0.9120507103249245
  train_average_precision_samples:
  - 0.9145545314900153
  - 0.9359916367980884
  - 0.9285993891684948
  - 0.9322283491493545
  - 0.9172944693572497
  train_average_precision_samples_oob:
  - 0.8998303891449052
  - 0.917626728110599
  - 0.9118273325590398
  - 0.918870223134137
  - 0.908821268417681
  train_average_precision_weighted:
  - 0.9750952593267093
  - 0.9774931074615342
  - 0.973007471000106
  - 0.9773380787972552
  - 0.9773121866577227
  train_average_precision_weighted_oob:
  - 0.9649803658641825
  - 0.9674541874516244
  - 0.9627914719281248
  - 0.9653743848448814
  - 0.9675174722909246
  train_f1_macro:
  - 0.9446684587813621
  - 0.9436603942652331
  - 0.9453477868112015
  - 0.9458034111310591
  - 0.9455156950672645
  train_f1_macro_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_f1_micro:
  - 0.944668458781362
  - 0.943660394265233
  - 0.9453477868112015
  - 0.9458034111310593
  - 0.9455156950672646
  train_f1_micro_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_f1_samples:
  - 0.944668458781362
  - 0.943660394265233
  - 0.9453477868112015
  - 0.9458034111310593
  - 0.9455156950672646
  train_f1_samples_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_f1_weighted:
  - 0.9371912338933114
  - 0.936174149935656
  - 0.9397471418107705
  - 0.9398756366494323
  - 0.9402518287195502
  train_f1_weighted_oob:
  - 0.932773355276337
  - 0.9323426793573573
  - 0.9328699334571448
  - 0.9352663332845332
  - 0.9340661031159382
  train_jaccard_macro:
  - 0.8981613656064167
  - 0.8963545379601929
  - 0.8994253586079439
  - 0.9001936450028399
  - 0.8996557579101373
  train_jaccard_macro_oob:
  - 0.8951273624029692
  - 0.8939044513032659
  - 0.8948754271849886
  - 0.8971064867406615
  - 0.8951913119723185
  train_jaccard_micro:
  - 0.8951390362980259
  - 0.8933305057788146
  - 0.8963597430406852
  - 0.8971793507184672
  - 0.8966617052944929
  train_jaccard_micro_oob:
  - 0.8921267351912684
  - 0.8909244943344277
  - 0.8919034394360179
  - 0.8941551540913921
  - 0.8922358930844294
  train_jaccard_samples:
  - 0.9038231780167264
  - 0.9018717642373556
  - 0.9048479373682625
  - 0.9058846997805705
  - 0.905052316890882
  train_jaccard_samples_oob:
  - 0.9009956192751892
  - 0.8996017522899243
  - 0.9008330824048981
  - 0.9029323758228606
  - 0.9009068261086198
  train_jaccard_weighted:
  - 0.883534271770781
  - 0.8818609846829566
  - 0.8882554810565919
  - 0.8883620404274601
  - 0.8891274519114918
  train_jaccard_weighted_oob:
  - 0.8755543653710716
  - 0.8748735846671759
  - 0.8756318345697138
  - 0.8798979450221895
  - 0.8778953045565365
  train_label_ranking_average_precision_score:
  - 0.9145545314900158
  - 0.9359916367980886
  - 0.9285993891684954
  - 0.9322283491493547
  - 0.9172944693572498
  train_label_ranking_average_precision_score_oob:
  - 0.8998303891449058
  - 0.9176267281105994
  - 0.9118273325590401
  - 0.9188702231341374
  - 0.9088212684176811
  train_matthews_corrcoef_macro:
  - 0.2232813446961699
  - 0.2214970770448777
  - 0.22575468090889778
  - 0.23827029504096936
  - 0.2258808230095653
  train_matthews_corrcoef_macro_oob:
  - 0.2311185996430528
  - 0.23016962215316616
  - 0.22026840417398247
  - 0.23453340226647923
  - 0.2201735704637518
  train_matthews_corrcoef_micro:
  - 0.734202218418693
  - 0.7300216575292694
  - 0.7401987523041493
  - 0.7412174238744699
  - 0.7399219102502684
  train_matthews_corrcoef_micro_oob:
  - 0.7251389090427176
  - 0.72278404116347
  - 0.726815702462799
  - 0.7322261560594551
  - 0.7266810038334693
  train_matthews_corrcoef_samples:
  - 0.6124857444219581
  - 0.6023196634817324
  - 0.6188949109935512
  - 0.6234061568503839
  - 0.6158214429864454
  train_matthews_corrcoef_samples_oob:
  - 0.6011998827489025
  - 0.5929539246965415
  - 0.6049150035500329
  - 0.611170016262407
  - 0.5993258981965839
  train_matthews_corrcoef_weighted:
  - 0.5968455897220104
  - 0.5923607675089061
  - 0.6031615300806206
  - 0.6113184003427466
  - 0.6027239332607132
  train_matthews_corrcoef_weighted_oob:
  - 0.5946849863592002
  - 0.5918983896859509
  - 0.5881231715287417
  - 0.6011959579781045
  - 0.5885503658847632
  train_ndgc:
  - 0.9375660304820124
  - 0.9537357588377571
  - 0.9482792662779408
  - 0.9504579980612966
  - 0.9399490837952444
  train_ndgc_oob:
  - 0.9266319024268778
  - 0.94006580780454
  - 0.9358602240725221
  - 0.9408447028894839
  - 0.9337849288720764
  train_neg_coverage_error:
  - -1.2724014336917562
  - -1.2347670250896057
  - -1.2538392050587173
  - -1.2342908438061042
  - -1.2663677130044844
  train_neg_coverage_error_oob:
  - -1.32168458781362
  - -1.3010752688172043
  - -1.2999096657633242
  - -1.279174147217235
  - -1.3040358744394618
  train_neg_hamming_loss_macro:
  - -0.055331541218637995
  - -0.056339605734767026
  - -0.05465221318879855
  - -0.05419658886894076
  - -0.05448430493273543
  train_neg_hamming_loss_macro_oob:
  - -0.057011648745519714
  - -0.0576836917562724
  - -0.05713640469738031
  - -0.05587971274685817
  - -0.05695067264573991
  train_neg_hamming_loss_micro:
  - -0.055331541218637995
  - -0.056339605734767026
  - -0.05465221318879855
  - -0.05419658886894076
  - -0.05448430493273543
  train_neg_hamming_loss_micro_oob:
  - -0.057011648745519714
  - -0.0576836917562724
  - -0.05713640469738031
  - -0.05587971274685817
  - -0.056950672645739914
  train_neg_hamming_loss_samples:
  - -0.055331541218637995
  - -0.056339605734767026
  - -0.05465221318879855
  - -0.05419658886894076
  - -0.05448430493273543
  train_neg_hamming_loss_samples_oob:
  - -0.057011648745519714
  - -0.0576836917562724
  - -0.05713640469738031
  - -0.05587971274685817
  - -0.056950672645739914
  train_neg_hamming_loss_weighted:
  - -0.0628087661066886
  - -0.06382585006434413
  - -0.060252858189229645
  - -0.06012436335056749
  - -0.05974817128044982
  train_neg_hamming_loss_weighted_oob:
  - -0.067226644723663
  - -0.06765732064264281
  - -0.06713006654285518
  - -0.06473366671546682
  - -0.06593389688406188
  train_neg_label_ranking_loss:
  - -0.03066862945895204
  - -0.024193548387096774
  - -0.02617542048436357
  - -0.025017098401299478
  - -0.028913089899636982
  train_neg_label_ranking_loss_oob:
  - -0.037165045229561364
  - -0.03306878306878307
  - -0.03243429259689422
  - -0.030627511327690864
  - -0.03335468716634636
  train_precision_macro:
  - 0.9446684587813621
  - 0.9436603942652331
  - 0.9453477868112015
  - 0.9458034111310591
  - 0.9455156950672645
  train_precision_macro_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_precision_micro:
  - 0.944668458781362
  - 0.943660394265233
  - 0.9453477868112015
  - 0.9458034111310593
  - 0.9455156950672646
  train_precision_micro_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_precision_samples:
  - 0.944668458781362
  - 0.943660394265233
  - 0.9453477868112015
  - 0.9458034111310593
  - 0.9455156950672646
  train_precision_samples_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_precision_weighted:
  - 0.9371912338933114
  - 0.936174149935656
  - 0.9397471418107705
  - 0.9398756366494323
  - 0.9402518287195502
  train_precision_weighted_oob:
  - 0.932773355276337
  - 0.9323426793573573
  - 0.9328699334571448
  - 0.9352663332845332
  - 0.9340661031159382
  train_recall_macro:
  - 0.9446684587813621
  - 0.9436603942652331
  - 0.9453477868112015
  - 0.9458034111310591
  - 0.9455156950672645
  train_recall_macro_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_recall_micro:
  - 0.944668458781362
  - 0.943660394265233
  - 0.9453477868112015
  - 0.9458034111310593
  - 0.9455156950672646
  train_recall_micro_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_recall_samples:
  - 0.944668458781362
  - 0.943660394265233
  - 0.9453477868112015
  - 0.9458034111310593
  - 0.9455156950672646
  train_recall_samples_oob:
  - 0.9429883512544803
  - 0.9423163082437276
  - 0.9428635953026197
  - 0.9441202872531418
  - 0.9430493273542601
  train_recall_weighted:
  - 0.9371912338933114
  - 0.936174149935656
  - 0.9397471418107705
  - 0.9398756366494323
  - 0.9402518287195502
  train_recall_weighted_oob:
  - 0.932773355276337
  - 0.9323426793573573
  - 0.9328699334571448
  - 0.9352663332845332
  - 0.9340661031159382
  train_roc_auc_macro:
  - 0.9924433054251904
  - 0.9931581635283907
  - 0.991900711222155
  - 0.9924977033005677
  - 0.9917479444127337
  train_roc_auc_macro_oob:
  - 0.9826085919717336
  - 0.9886706058123791
  - 0.9878741921945688
  - 0.9842424205797559
  - 0.9880423356591703
  train_roc_auc_micro:
  - 0.9813621764437842
  - 0.982403393055626
  - 0.9824602974038441
  - 0.984538941004991
  - 0.9827558155122504
  train_roc_auc_micro_oob:
  - 0.977389669344386
  - 0.97821849342951
  - 0.9789711789223577
  - 0.9809393751201488
  - 0.9784825272498099
  train_roc_auc_samples:
  - 0.969331370541048
  - 0.9758064516129032
  - 0.9738245795156363
  - 0.9749829015987006
  - 0.9710869101003629
  train_roc_auc_samples_oob:
  - 0.9628349547704388
  - 0.9669312169312171
  - 0.9675657074031058
  - 0.9693724886723091
  - 0.9666453128336536
  train_roc_auc_weighted:
  - 0.9894038709863171
  - 0.9895692406213075
  - 0.9880141065247781
  - 0.9893434095305327
  - 0.9886988576928492
  train_roc_auc_weighted_oob:
  - 0.9861938767006588
  - 0.9860451006398168
  - 0.9843999493551436
  - 0.9858707776919299
  - 0.9854603661638386
start: 2023-12-12 15:09:29.141537
wrapper: null
