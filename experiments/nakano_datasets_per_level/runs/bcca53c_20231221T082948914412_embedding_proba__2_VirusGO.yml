active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMAAmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T9AMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:29:59.158975
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: bcca53c79a424bd87c04721bf134679a515453f60ab93efc04b85f7670600fb6
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bcca53c_20231221T082948914412_embedding_proba__2_VirusGO.yml
results:
  fit_time:
  - 4.45054292678833
  - 4.279943227767944
  - 4.194494009017944
  - 4.244207143783569
  - 4.306333541870117
  score_time:
  - 1.7603261470794678
  - 1.5878167152404785
  - 1.7171223163604736
  - 1.6081678867340088
  - 1.6943533420562744
  test_average_precision_macro:
  - 0.9158724444803811
  - 0.9335224107107319
  - 0.9094423470920239
  - 0.905136666498759
  - 0.9177383788889486
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8878517905110235
  - 0.9545801900876164
  - 0.8907100250353925
  - 0.8998874955217604
  - 0.8845256162883998
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9231060606060605
  - 0.9674796747967479
  - 0.9722222222222221
  - 0.9613821138211384
  - 0.9145299145299145
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8945090384406578
  - 0.9445722426463639
  - 0.9153580057308887
  - 0.9111144139321888
  - 0.9224426510022486
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8143939393939394
  - 0.7926829268292682
  - 0.8015873015873015
  - 0.8008130081300813
  - 0.7863247863247863
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8143939393939394
  - 0.7926829268292683
  - 0.8015873015873016
  - 0.8008130081300813
  - 0.7863247863247863
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8143939393939396
  - 0.7926829268292684
  - 0.8015873015873017
  - 0.8008130081300814
  - 0.7863247863247863
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7077272727272726
  - 0.6829268292682926
  - 0.6984126984126985
  - 0.6897560975609757
  - 0.6502564102564102
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.709500339297832
  - 0.6812234548100626
  - 0.6912592020080649
  - 0.6917030437424351
  - 0.6787530842610402
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6869009584664537
  - 0.6565656565656566
  - 0.6688741721854304
  - 0.6677966101694915
  - 0.647887323943662
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6915584415584417
  - 0.6643437862950059
  - 0.6734693877551022
  - 0.675377468060395
  - 0.6538461538461541
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.56317154184078
  - 0.5376280415044036
  - 0.5539403324713063
  - 0.546106739072933
  - 0.5034355656583318
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9231060606060605
  - 0.9674796747967481
  - 0.9722222222222221
  - 0.9613821138211384
  - 0.9145299145299145
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.032031106631923656
  - 0.0
  - 0.03156475079494043
  - 0.03294039229342062
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12756866487721477
  - 0.0
  - 0.12530721563100888
  - 0.12649110640673517
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.022727272727272728
  - 0.0
  - 0.015058465048420854
  - 0.024390243902439025
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06534345752912425
  - 0.0
  - 0.06312950158988086
  - 0.0632455532033676
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.945866837867216
  - 0.9763188852471713
  - 0.9834543136522795
  - 0.9725445295930936
  - 0.9383169418779781
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3636363636363635
  - -1.3658536585365855
  - -1.3571428571428572
  - -1.4146341463414633
  - -1.5128205128205128
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18560606060606058
  - -0.2073170731707317
  - -0.19841269841269846
  - -0.19918699186991873
  - -0.2136752136752137
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1856060606060606
  - -0.2073170731707317
  - -0.1984126984126984
  - -0.1991869918699187
  - -0.21367521367521367
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18560606060606058
  - -0.20731707317073167
  - -0.19841269841269837
  - -0.19918699186991867
  - -0.2136752136752137
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29227272727272724
  - -0.3170731707317073
  - -0.30158730158730157
  - -0.3102439024390244
  - -0.34974358974358977
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03977272727272727
  - -0.022222222222222223
  - -0.019642857142857142
  - -0.03502710027100271
  - -0.043589743589743594
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8143939393939394
  - 0.7926829268292682
  - 0.8015873015873015
  - 0.8008130081300813
  - 0.7863247863247863
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8143939393939394
  - 0.7926829268292683
  - 0.8015873015873016
  - 0.8008130081300813
  - 0.7863247863247863
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8143939393939396
  - 0.7926829268292684
  - 0.8015873015873017
  - 0.8008130081300814
  - 0.7863247863247863
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7077272727272726
  - 0.6829268292682926
  - 0.6984126984126985
  - 0.6897560975609757
  - 0.6502564102564102
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8143939393939394
  - 0.7926829268292682
  - 0.8015873015873015
  - 0.8008130081300813
  - 0.7863247863247863
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8143939393939394
  - 0.7926829268292683
  - 0.8015873015873016
  - 0.8008130081300813
  - 0.7863247863247863
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8143939393939396
  - 0.7926829268292684
  - 0.8015873015873017
  - 0.8008130081300814
  - 0.7863247863247863
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7077272727272726
  - 0.6829268292682926
  - 0.6984126984126985
  - 0.6897560975609757
  - 0.6502564102564102
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9766390690410298
  - 0.9782976253564488
  - 0.9742930856553147
  - 0.9608504700352527
  - 0.9686024578181441
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9745794392523364
  - 0.9834087481146304
  - 0.9740513120671154
  - 0.9681632653061224
  - 0.9683695652173914
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9602272727272727
  - 0.9777777777777777
  - 0.9803571428571428
  - 0.9649728997289974
  - 0.9564102564102563
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9627047047047046
  - 0.9708246308592328
  - 0.9687100103199174
  - 0.963634312573443
  - 0.9578961038961039
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9648282882582118
  - 0.9490747232944475
  - 0.9644126734275781
  - 0.9698204118393297
  - 0.9542596806978282
  train_average_precision_macro_oob:
  - 0.9294065241646711
  - 0.8762355935173195
  - 0.8916238311060356
  - 0.9265574956569531
  - 0.9263975199275108
  train_average_precision_micro:
  - 0.961438261867492
  - 0.9447290411973361
  - 0.9405609758175282
  - 0.9564115384794172
  - 0.9572471611706377
  train_average_precision_micro_oob:
  - 0.9297015184148292
  - 0.8906380799582284
  - 0.8783178721454106
  - 0.9086201581070066
  - 0.9218976354332578
  train_average_precision_samples:
  - 0.9674846625766871
  - 0.9683734939759037
  - 0.9615151515151515
  - 0.9799196787148594
  - 0.9753968253968255
  train_average_precision_samples_oob:
  - 0.943047034764826
  - 0.9372489959839356
  - 0.9425252525252524
  - 0.9565261044176707
  - 0.9531084656084655
  train_average_precision_weighted:
  - 0.9743307384408947
  - 0.9548119151013841
  - 0.9595513361082335
  - 0.9657612497976399
  - 0.9629991807247644
  train_average_precision_weighted_oob:
  - 0.945473412187601
  - 0.8987687220557007
  - 0.8911045715674568
  - 0.9251410722454356
  - 0.9335538921944727
  train_f1_macro:
  - 0.8077709611451942
  - 0.8022088353413656
  - 0.8080808080808081
  - 0.8082329317269076
  - 0.8065476190476191
  train_f1_macro_oob:
  - 0.7975460122699386
  - 0.7991967871485944
  - 0.797979797979798
  - 0.8022088353413656
  - 0.8025793650793651
  train_f1_micro:
  - 0.8077709611451943
  - 0.8022088353413654
  - 0.8080808080808081
  - 0.8082329317269076
  - 0.8065476190476191
  train_f1_micro_oob:
  - 0.7975460122699386
  - 0.7991967871485943
  - 0.797979797979798
  - 0.8022088353413654
  - 0.8025793650793651
  train_f1_samples:
  - 0.8077709611451942
  - 0.8022088353413652
  - 0.808080808080808
  - 0.8082329317269074
  - 0.8065476190476191
  train_f1_samples_oob:
  - 0.7975460122699386
  - 0.7991967871485941
  - 0.7979797979797978
  - 0.8022088353413652
  - 0.802579365079365
  train_f1_weighted:
  - 0.7063111219097369
  - 0.6899538452316731
  - 0.7027589326096788
  - 0.7044912322557557
  - 0.7032355021216408
  train_f1_weighted_oob:
  - 0.6855068942477072
  - 0.6839297488461309
  - 0.6820141715664103
  - 0.6922044614099965
  - 0.695456152758133
  train_jaccard_macro:
  - 0.6982607834560005
  - 0.6940520322605742
  - 0.6997957701014265
  - 0.6997350120206587
  - 0.6977760942723431
  train_jaccard_macro_oob:
  - 0.6877114410101064
  - 0.6909275028222366
  - 0.6894681400003927
  - 0.693512190008363
  - 0.6934892510100651
  train_jaccard_micro:
  - 0.6775300171526587
  - 0.6697401508801342
  - 0.6779661016949152
  - 0.6781802864363943
  - 0.6758104738154613
  train_jaccard_micro_oob:
  - 0.6632653061224489
  - 0.6655518394648829
  - 0.6638655462184874
  - 0.6697401508801342
  - 0.6702568351284176
  train_jaccard_samples:
  - 0.6858019281332166
  - 0.6762765347102697
  - 0.6857142857142857
  - 0.6868904188181296
  - 0.6828231292517007
  train_jaccard_samples_oob:
  - 0.6704645048203332
  - 0.6711130235226622
  - 0.6701298701298702
  - 0.676993689041882
  - 0.6768707482993198
  train_jaccard_weighted:
  - 0.5617101070093315
  - 0.5448920522687694
  - 0.5577970063490304
  - 0.5594958486981929
  - 0.5591954774611996
  train_jaccard_weighted_oob:
  - 0.540256203712683
  - 0.5386429933920942
  - 0.5365926011352377
  - 0.5468048277918426
  - 0.5507836974546383
  train_label_ranking_average_precision_score:
  - 0.9674846625766871
  - 0.9683734939759034
  - 0.9615151515151513
  - 0.9799196787148594
  - 0.9753968253968255
  train_label_ranking_average_precision_score_oob:
  - 0.943047034764826
  - 0.9372489959839356
  - 0.9425252525252527
  - 0.9565261044176705
  - 0.9531084656084655
  train_matthews_corrcoef_macro:
  - 0.08287871255956235
  - 0.0318347492876492
  - 0.07334988083672085
  - 0.07356993039901884
  - 0.04266857285380698
  train_matthews_corrcoef_macro_oob:
  - 0.0424112005905356
  - 0.015772007446912796
  - 0.018569805147140416
  - 0.04682376173132683
  - 0.03774789062869407
  train_matthews_corrcoef_micro:
  - 0.23620042613169517
  - 0.12628730494196197
  - 0.2100126570377342
  - 0.20951387718568165
  - 0.1670412831578706
  train_matthews_corrcoef_micro_oob:
  - 0.12560464289957413
  - 0.06304838917438285
  - 0.06354453503489686
  - 0.14082596679178247
  - 0.10913635193251277
  train_matthews_corrcoef_samples:
  - 0.07236032633252795
  - 0.024096385542168676
  - 0.05775649774627093
  - 0.0640509369399619
  - 0.03729113728611519
  train_matthews_corrcoef_samples_oob:
  - 0.022285003264010284
  - 0.006024096385542169
  - 0.008681548678991974
  - 0.030120481927710843
  - 0.017857142857142856
  train_matthews_corrcoef_weighted:
  - 0.1682833230724141
  - 0.06366949857529841
  - 0.1500774147689162
  - 0.14963107563237388
  - 0.08491468459024952
  train_matthews_corrcoef_weighted_oob:
  - 0.08574743425637432
  - 0.03154401489382559
  - 0.037393033034922064
  - 0.09503167592721092
  - 0.07642380488976967
  train_ndgc:
  - 0.9777885005852098
  - 0.9776434809350014
  - 0.9734196009215159
  - 0.9859337497120269
  - 0.9823284708131178
  train_ndgc_oob:
  - 0.9606620604562158
  - 0.9548267786909777
  - 0.9601289638597931
  - 0.9702046133884747
  - 0.9664755469352142
  train_neg_coverage_error:
  - -1.3680981595092025
  - -1.2951807228915662
  - -1.3757575757575757
  - -1.2771084337349397
  - -1.3035714285714286
  train_neg_coverage_error_oob:
  - -1.478527607361963
  - -1.391566265060241
  - -1.4606060606060607
  - -1.3734939759036144
  - -1.3630952380952381
  train_neg_hamming_loss_macro:
  - -0.19222903885480577
  - -0.19779116465863456
  - -0.1919191919191919
  - -0.1917670682730924
  - -0.19345238095238093
  train_neg_hamming_loss_macro_oob:
  - -0.20245398773006137
  - -0.20080321285140565
  - -0.20202020202020202
  - -0.19779116465863456
  - -0.19742063492063489
  train_neg_hamming_loss_micro:
  - -0.19222903885480572
  - -0.19779116465863453
  - -0.1919191919191919
  - -0.19176706827309237
  - -0.19345238095238096
  train_neg_hamming_loss_micro_oob:
  - -0.20245398773006135
  - -0.20080321285140562
  - -0.20202020202020202
  - -0.19779116465863453
  - -0.1974206349206349
  train_neg_hamming_loss_samples:
  - -0.1922290388548057
  - -0.19779116465863458
  - -0.1919191919191919
  - -0.19176706827309237
  - -0.19345238095238096
  train_neg_hamming_loss_samples_oob:
  - -0.20245398773006135
  - -0.20080321285140568
  - -0.20202020202020204
  - -0.1977911646586345
  - -0.1974206349206349
  train_neg_hamming_loss_weighted:
  - -0.293688878090263
  - -0.31004615476832703
  - -0.29724106739032113
  - -0.2955087677442443
  - -0.2967644978783593
  train_neg_hamming_loss_weighted_oob:
  - -0.314493105752293
  - -0.3160702511538692
  - -0.31798582843358963
  - -0.3077955385900036
  - -0.30454384724186706
  train_neg_label_ranking_loss:
  - -0.021625766871165644
  - -0.015361445783132529
  - -0.026582491582491583
  - -0.010843373493975903
  - -0.018369708994708994
  train_neg_label_ranking_loss_oob:
  - -0.03992842535787321
  - -0.034036144578313256
  - -0.04134680134680134
  - -0.02663989290495315
  - -0.030109126984126985
  train_precision_macro:
  - 0.8077709611451942
  - 0.8022088353413656
  - 0.8080808080808081
  - 0.8082329317269076
  - 0.8065476190476191
  train_precision_macro_oob:
  - 0.7975460122699386
  - 0.7991967871485944
  - 0.797979797979798
  - 0.8022088353413656
  - 0.8025793650793651
  train_precision_micro:
  - 0.8077709611451943
  - 0.8022088353413654
  - 0.8080808080808081
  - 0.8082329317269076
  - 0.8065476190476191
  train_precision_micro_oob:
  - 0.7975460122699386
  - 0.7991967871485943
  - 0.797979797979798
  - 0.8022088353413654
  - 0.8025793650793651
  train_precision_samples:
  - 0.8077709611451942
  - 0.8022088353413652
  - 0.808080808080808
  - 0.8082329317269074
  - 0.8065476190476191
  train_precision_samples_oob:
  - 0.7975460122699386
  - 0.7991967871485941
  - 0.7979797979797978
  - 0.8022088353413652
  - 0.802579365079365
  train_precision_weighted:
  - 0.7063111219097369
  - 0.6899538452316731
  - 0.7027589326096788
  - 0.7044912322557557
  - 0.7032355021216408
  train_precision_weighted_oob:
  - 0.6855068942477072
  - 0.6839297488461309
  - 0.6820141715664103
  - 0.6922044614099965
  - 0.695456152758133
  train_recall_macro:
  - 0.8077709611451942
  - 0.8022088353413656
  - 0.8080808080808081
  - 0.8082329317269076
  - 0.8065476190476191
  train_recall_macro_oob:
  - 0.7975460122699386
  - 0.7991967871485944
  - 0.797979797979798
  - 0.8022088353413656
  - 0.8025793650793651
  train_recall_micro:
  - 0.8077709611451943
  - 0.8022088353413654
  - 0.8080808080808081
  - 0.8082329317269076
  - 0.8065476190476191
  train_recall_micro_oob:
  - 0.7975460122699386
  - 0.7991967871485943
  - 0.797979797979798
  - 0.8022088353413654
  - 0.8025793650793651
  train_recall_samples:
  - 0.8077709611451942
  - 0.8022088353413652
  - 0.808080808080808
  - 0.8082329317269074
  - 0.8065476190476191
  train_recall_samples_oob:
  - 0.7975460122699386
  - 0.7991967871485941
  - 0.7979797979797978
  - 0.8022088353413652
  - 0.802579365079365
  train_recall_weighted:
  - 0.7063111219097369
  - 0.6899538452316731
  - 0.7027589326096788
  - 0.7044912322557557
  - 0.7032355021216408
  train_recall_weighted_oob:
  - 0.6855068942477072
  - 0.6839297488461309
  - 0.6820141715664103
  - 0.6922044614099965
  - 0.695456152758133
  train_roc_auc_macro:
  - 0.9859145152290627
  - 0.9841027907795632
  - 0.9861557438536613
  - 0.988533988642352
  - 0.9755510114002138
  train_roc_auc_macro_oob:
  - 0.9738697120815764
  - 0.9621249587201081
  - 0.9641416653483751
  - 0.9756816478555637
  - 0.970586206054612
  train_roc_auc_micro:
  - 0.9842681433091763
  - 0.9849870146124722
  - 0.982464105328869
  - 0.989170012719156
  - 0.983115495172346
  train_roc_auc_micro_oob:
  - 0.9730721139124221
  - 0.9691604868738071
  - 0.9654894097320748
  - 0.9749794248946305
  - 0.9752905191263543
  train_roc_auc_samples:
  - 0.9783742331288343
  - 0.9846385542168674
  - 0.9734175084175084
  - 0.989156626506024
  - 0.981630291005291
  train_roc_auc_samples_oob:
  - 0.9600715746421269
  - 0.9659638554216867
  - 0.9586531986531986
  - 0.9733601070950468
  - 0.969890873015873
  train_roc_auc_weighted:
  - 0.9879152174059482
  - 0.980306426920233
  - 0.9790699086354469
  - 0.9838689387619125
  - 0.9778335002986844
  train_roc_auc_weighted_oob:
  - 0.9745144967424499
  - 0.9601196757913177
  - 0.956906445950298
  - 0.9681374937212793
  - 0.9678004656152863
start: 2023-12-21 08:29:48.914412
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
