active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8BAMzMzMzPjP0AzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r9wZmZmZmYWQCAzMzMzMwPA4MzMzMzMDECQmZmZmZkVwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:39:59.013223
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__9
  params: {}
hash: 1803d8d0749cf8c6a8085de013066e9e451caf4a2dd166b53ac28ea798bbe20a
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1803d8d_20231222T033759017811_embedding__9_emotions.yml
results:
  fit_time:
  - 93.9239559173584
  - 95.22635245323181
  - 92.40569043159485
  - 95.46652674674988
  - 92.96551275253296
  score_time:
  - 7.077631950378418
  - 7.105542898178101
  - 7.806699752807617
  - 7.249346017837524
  - 6.782774209976196
  test_average_precision_macro:
  - 0.6839588488882673
  - 0.7497149291593722
  - 0.6946390230764247
  - 0.7169192774891732
  - 0.6952517361365053
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6975745870957507
  - 0.7628115419978155
  - 0.6984456907303298
  - 0.7525333809567126
  - 0.6928990144056805
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7589583333333334
  - 0.8192232055063914
  - 0.7815886134067952
  - 0.8279710144927537
  - 0.7803539426523297
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6874441637223292
  - 0.7608908905506748
  - 0.6942399012539983
  - 0.726520616219082
  - 0.6984643605752849
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.688888888888889
  - 0.6755162241887905
  - 0.6955922865013774
  - 0.6826086956521739
  - 0.7043010752688174
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6888888888888889
  - 0.6755162241887905
  - 0.6955922865013774
  - 0.6826086956521739
  - 0.7043010752688172
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6888888888888888
  - 0.6755162241887905
  - 0.6955922865013775
  - 0.6826086956521739
  - 0.7043010752688172
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6765625000000001
  - 0.660913786889841
  - 0.6840432294977751
  - 0.6683901292596944
  - 0.6912756598240469
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5286335211083101
  - 0.5139814737121566
  - 0.5362524554107614
  - 0.5222458907007373
  - 0.5469002905754636
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5254237288135594
  - 0.5100222717149221
  - 0.5332629355860612
  - 0.5181518151815182
  - 0.5435684647302904
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5349206349206348
  - 0.5214917825537295
  - 0.5446674537583629
  - 0.5283643892339545
  - 0.5564516129032256
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5151065392947175
  - 0.49829591720629157
  - 0.5234421600533357
  - 0.5067995060633722
  - 0.5323008355084322
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7589583333333334
  - 0.819223205506391
  - 0.7815886134067952
  - 0.8279710144927537
  - 0.7803539426523295
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.02680281337094487
  - 0.0
  - 0.045914430418278314
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.055267221169926085
  - 0.0
  - 0.09594640307213617
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.005596951610917486
  - 0.0
  - 0.014888040517976606
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.02110266754092492
  - 0.0
  - 0.0372279165553608
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8356264123374246
  - 0.878647915570873
  - 0.8510902672716535
  - 0.8887037849341577
  - 0.8442044043072692
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.841666666666667
  - -2.7610619469026547
  - -2.8512396694214877
  - -2.869565217391304
  - -2.7096774193548385
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3111111111111111
  - -0.32448377581120946
  - -0.3044077134986226
  - -0.3173913043478261
  - -0.2956989247311828
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3111111111111111
  - -0.32448377581120946
  - -0.3044077134986226
  - -0.3173913043478261
  - -0.2956989247311828
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.31111111111111106
  - -0.3244837758112094
  - -0.3044077134986226
  - -0.3173913043478261
  - -0.2956989247311828
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3234375
  - -0.339086213110159
  - -0.31595677050222504
  - -0.3316098707403055
  - -0.30872434017595307
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.18085648148148145
  - -0.13756145526057031
  - -0.18037190082644627
  - -0.1542270531400966
  - -0.17054211469534047
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.688888888888889
  - 0.6755162241887905
  - 0.6955922865013774
  - 0.6826086956521739
  - 0.7043010752688174
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6888888888888889
  - 0.6755162241887905
  - 0.6955922865013774
  - 0.6826086956521739
  - 0.7043010752688172
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6888888888888888
  - 0.6755162241887905
  - 0.6955922865013775
  - 0.6826086956521739
  - 0.7043010752688172
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6765625000000001
  - 0.660913786889841
  - 0.6840432294977751
  - 0.6683901292596944
  - 0.6912756598240469
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.688888888888889
  - 0.6755162241887905
  - 0.6955922865013774
  - 0.6826086956521739
  - 0.7043010752688174
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6888888888888889
  - 0.6755162241887905
  - 0.6955922865013774
  - 0.6826086956521739
  - 0.7043010752688172
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6888888888888888
  - 0.6755162241887905
  - 0.6955922865013775
  - 0.6826086956521739
  - 0.7043010752688172
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6765625000000001
  - 0.660913786889841
  - 0.6840432294977751
  - 0.6683901292596944
  - 0.6912756598240469
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8174820248123155
  - 0.8605775692155516
  - 0.8381052642942208
  - 0.831317828377301
  - 0.8282419328848157
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8384936635944701
  - 0.8742140855668981
  - 0.848806057076296
  - 0.8523234773234774
  - 0.8437543372657876
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8191435185185185
  - 0.8624385447394297
  - 0.8196280991735537
  - 0.8457729468599035
  - 0.8294578853046595
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8169314965412237
  - 0.8637927833855435
  - 0.8378884470679147
  - 0.8358979771704814
  - 0.8284530349529062
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.894358569102616
  - 0.8845679343921112
  - 0.8913715916202679
  - 0.8776503216442361
  - 0.8913582835377153
  train_average_precision_macro_oob:
  - 0.7571939821468585
  - 0.7277029305304731
  - 0.7490040782470592
  - 0.7344760450542193
  - 0.7436959717466513
  train_average_precision_micro:
  - 0.897252964755695
  - 0.8900810908997876
  - 0.8953129515172755
  - 0.8842296202383498
  - 0.8950491995805894
  train_average_precision_micro_oob:
  - 0.7622033803297412
  - 0.7378407081545695
  - 0.755932914500083
  - 0.7532581377555242
  - 0.7495777627364456
  train_average_precision_samples:
  - 0.9021494009866103
  - 0.8979282407407407
  - 0.9047434086629002
  - 0.8906671315667131
  - 0.9099976308931533
  train_average_precision_samples_oob:
  - 0.8148872445384073
  - 0.7969155092592592
  - 0.8159016007532957
  - 0.8023651789865179
  - 0.8245854063018242
  train_average_precision_weighted:
  - 0.8949124621926823
  - 0.886371058337002
  - 0.8926739944883276
  - 0.8804357859199115
  - 0.893264591231686
  train_average_precision_weighted_oob:
  - 0.7627897790850245
  - 0.7342498958327922
  - 0.7537917680080645
  - 0.7407214159789253
  - 0.7502729059748756
  train_f1_macro:
  - 0.7219873150105709
  - 0.7180555555555556
  - 0.7228107344632769
  - 0.7283821478382149
  - 0.7121535181236673
  train_f1_macro_oob:
  - 0.6906272022551092
  - 0.6920138888888889
  - 0.6867937853107344
  - 0.6949093444909344
  - 0.6851457000710731
  train_f1_micro:
  - 0.7219873150105708
  - 0.7180555555555556
  - 0.7228107344632768
  - 0.7283821478382148
  - 0.7121535181236673
  train_f1_micro_oob:
  - 0.6906272022551092
  - 0.6920138888888889
  - 0.6867937853107344
  - 0.6949093444909344
  - 0.6851457000710732
  train_f1_samples:
  - 0.7219873150105708
  - 0.7180555555555554
  - 0.7228107344632767
  - 0.7283821478382149
  - 0.7121535181236673
  train_f1_samples_oob:
  - 0.6906272022551092
  - 0.6920138888888888
  - 0.6867937853107344
  - 0.6949093444909343
  - 0.6851457000710731
  train_f1_weighted:
  - 0.7161303129155386
  - 0.709695603156708
  - 0.714226682972503
  - 0.7183972911963883
  - 0.7045371597610404
  train_f1_weighted_oob:
  - 0.6776472501506702
  - 0.6795354190154078
  - 0.6736308829992547
  - 0.6815030648771687
  - 0.672674273420542
  train_jaccard_macro:
  - 0.565817497881992
  - 0.5618872346210775
  - 0.5678981799925493
  - 0.5755463560617948
  - 0.5545326245860185
  train_jaccard_macro_oob:
  - 0.5308271891819024
  - 0.5322997994238268
  - 0.5264128836909155
  - 0.5362421943671826
  - 0.5242683924755726
  train_jaccard_micro:
  - 0.564929693961952
  - 0.5601300108342362
  - 0.5659386231683716
  - 0.5727995612832465
  - 0.5529801324503312
  train_jaccard_micro_oob:
  - 0.527448869752422
  - 0.529068224050969
  - 0.5229900510890024
  - 0.5324605931071333
  - 0.5210810810810811
  train_jaccard_samples:
  - 0.5806402899426154
  - 0.5758928571428572
  - 0.5817191283292978
  - 0.5885136481370792
  - 0.5685856432125088
  train_jaccard_samples_oob:
  - 0.5394140742977952
  - 0.5401289682539683
  - 0.5340496368038741
  - 0.5439828651125722
  - 0.5318306427048431
  train_jaccard_weighted:
  - 0.5588221133276237
  - 0.5520366924264901
  - 0.5577536294810642
  - 0.5635774811700304
  - 0.5455855754215939
  train_jaccard_weighted_oob:
  - 0.5166313072793586
  - 0.5185756230658158
  - 0.5120616836384752
  - 0.5213610059522543
  - 0.5106708392180811
  train_label_ranking_average_precision_score:
  - 0.9021494009866096
  - 0.8979282407407397
  - 0.9047434086628994
  - 0.8906671315667127
  - 0.9099976308931526
  train_label_ranking_average_precision_score_oob:
  - 0.8148872445384064
  - 0.796915509259258
  - 0.8159016007532949
  - 0.8023651789865168
  - 0.8245854063018229
  train_matthews_corrcoef_macro:
  - 0.21628390595563693
  - 0.20016746909624905
  - 0.23771548093395545
  - 0.25877502923669043
  - 0.19125947363427798
  train_matthews_corrcoef_macro_oob:
  - 0.03704819414232275
  - 0.0
  - 0.0
  - 0.05453171926513051
  - 0.012060739368480997
  train_matthews_corrcoef_micro:
  - 0.27668463735164445
  - 0.2451071828071767
  - 0.28623105761447337
  - 0.2944378580156598
  - 0.24866285366684973
  train_matthews_corrcoef_micro_oob:
  - 0.06843293202879162
  - 0.0
  - 0.0
  - 0.09280602816976664
  - 0.03927615797517418
  train_matthews_corrcoef_samples:
  - 0.12613911861602473
  - 0.10917252660079227
  - 0.14270318409678556
  - 0.1423973830124905
  - 0.11633094161694338
  train_matthews_corrcoef_samples_oob:
  - 0.008799741353421523
  - 0.0
  - 0.0
  - 0.013391809712906445
  - 0.003085743273987117
  train_matthews_corrcoef_weighted:
  - 0.23401668706602013
  - 0.21011473457349528
  - 0.2474268981202268
  - 0.26166772513262027
  - 0.2041148443879601
  train_matthews_corrcoef_weighted_oob:
  - 0.03700165407732362
  - 0.0
  - 0.0
  - 0.045198458622625746
  - 0.017194702748307367
  train_ndgc:
  - 0.9360050923722799
  - 0.9333596672930595
  - 0.9375818654729142
  - 0.9299482371463077
  - 0.9427531663638069
  train_ndgc_oob:
  - 0.8747894570466661
  - 0.8632337546650669
  - 0.8755598571034775
  - 0.8670046710222694
  - 0.883578122256466
  train_neg_coverage_error:
  - -2.3530655391120505
  - -2.3854166666666665
  - -2.330508474576271
  - -2.4497907949790796
  - -2.3816631130063968
  train_neg_coverage_error_oob:
  - -2.7315010570824523
  - -2.8
  - -2.7521186440677967
  - -2.790794979079498
  - -2.746268656716418
  train_neg_hamming_loss_macro:
  - -0.27801268498942916
  - -0.28194444444444444
  - -0.2771892655367232
  - -0.2716178521617852
  - -0.2878464818763326
  train_neg_hamming_loss_macro_oob:
  - -0.30937279774489074
  - -0.30798611111111107
  - -0.3132062146892655
  - -0.3050906555090655
  - -0.31485429992892683
  train_neg_hamming_loss_micro:
  - -0.27801268498942916
  - -0.28194444444444444
  - -0.2771892655367232
  - -0.2716178521617852
  - -0.2878464818763326
  train_neg_hamming_loss_micro_oob:
  - -0.3093727977448908
  - -0.3079861111111111
  - -0.3132062146892655
  - -0.30509065550906556
  - -0.3148542999289268
  train_neg_hamming_loss_samples:
  - -0.27801268498942916
  - -0.2819444444444444
  - -0.27718926553672313
  - -0.27161785216178524
  - -0.2878464818763326
  train_neg_hamming_loss_samples_oob:
  - -0.30937279774489074
  - -0.30798611111111107
  - -0.3132062146892655
  - -0.3050906555090655
  - -0.3148542999289268
  train_neg_hamming_loss_weighted:
  - -0.28386968708446136
  - -0.290304396843292
  - -0.285773317027497
  - -0.2816027088036117
  - -0.2954628402389596
  train_neg_hamming_loss_weighted_oob:
  - -0.3223527498493299
  - -0.32046458098459224
  - -0.3263691170007452
  - -0.31849693512283117
  - -0.32732572657945785
  train_neg_label_ranking_loss:
  - -0.07842964529011041
  - -0.0872974537037037
  - -0.07361699623352165
  - -0.09269525801952581
  - -0.07632077706704571
  train_neg_label_ranking_loss_oob:
  - -0.14954193093727977
  - -0.16464699074074074
  - -0.1535604990583804
  - -0.1614016736401674
  - -0.14711561241411988
  train_precision_macro:
  - 0.7219873150105709
  - 0.7180555555555556
  - 0.7228107344632769
  - 0.7283821478382149
  - 0.7121535181236673
  train_precision_macro_oob:
  - 0.6906272022551092
  - 0.6920138888888889
  - 0.6867937853107344
  - 0.6949093444909344
  - 0.6851457000710731
  train_precision_micro:
  - 0.7219873150105708
  - 0.7180555555555556
  - 0.7228107344632768
  - 0.7283821478382148
  - 0.7121535181236673
  train_precision_micro_oob:
  - 0.6906272022551092
  - 0.6920138888888889
  - 0.6867937853107344
  - 0.6949093444909344
  - 0.6851457000710732
  train_precision_samples:
  - 0.7219873150105708
  - 0.7180555555555554
  - 0.7228107344632767
  - 0.7283821478382149
  - 0.7121535181236673
  train_precision_samples_oob:
  - 0.6906272022551092
  - 0.6920138888888888
  - 0.6867937853107344
  - 0.6949093444909343
  - 0.6851457000710731
  train_precision_weighted:
  - 0.7161303129155386
  - 0.709695603156708
  - 0.714226682972503
  - 0.7183972911963883
  - 0.7045371597610404
  train_precision_weighted_oob:
  - 0.6776472501506702
  - 0.6795354190154078
  - 0.6736308829992547
  - 0.6815030648771687
  - 0.672674273420542
  train_recall_macro:
  - 0.7219873150105709
  - 0.7180555555555556
  - 0.7228107344632769
  - 0.7283821478382149
  - 0.7121535181236673
  train_recall_macro_oob:
  - 0.6906272022551092
  - 0.6920138888888889
  - 0.6867937853107344
  - 0.6949093444909344
  - 0.6851457000710731
  train_recall_micro:
  - 0.7219873150105708
  - 0.7180555555555556
  - 0.7228107344632768
  - 0.7283821478382148
  - 0.7121535181236673
  train_recall_micro_oob:
  - 0.6906272022551092
  - 0.6920138888888889
  - 0.6867937853107344
  - 0.6949093444909344
  - 0.6851457000710732
  train_recall_samples:
  - 0.7219873150105708
  - 0.7180555555555554
  - 0.7228107344632767
  - 0.7283821478382149
  - 0.7121535181236673
  train_recall_samples_oob:
  - 0.6906272022551092
  - 0.6920138888888888
  - 0.6867937853107344
  - 0.6949093444909343
  - 0.6851457000710731
  train_recall_weighted:
  - 0.7161303129155386
  - 0.709695603156708
  - 0.714226682972503
  - 0.7183972911963883
  - 0.7045371597610404
  train_recall_weighted_oob:
  - 0.6776472501506702
  - 0.6795354190154078
  - 0.6736308829992547
  - 0.6815030648771687
  - 0.672674273420542
  train_roc_auc_macro:
  - 0.9277078713156167
  - 0.9213648965437055
  - 0.9242852735745744
  - 0.9195325369497381
  - 0.929206449905962
  train_roc_auc_macro_oob:
  - 0.8596410392412501
  - 0.8444388919254262
  - 0.8487854409944795
  - 0.8446051818170175
  - 0.8466984789695705
  train_roc_auc_micro:
  - 0.9356135691029422
  - 0.9287432733846931
  - 0.9337647771437181
  - 0.9256149590103254
  - 0.9338076394151161
  train_roc_auc_micro_oob:
  - 0.8727010842129153
  - 0.8562171659432591
  - 0.8653761994881797
  - 0.8596174828535829
  - 0.8600551486065504
  train_roc_auc_samples:
  - 0.9215703547098896
  - 0.9127025462962963
  - 0.9263830037664783
  - 0.9073047419804743
  - 0.9236792229329542
  train_roc_auc_samples_oob:
  - 0.8504580690627201
  - 0.8353530092592593
  - 0.8464395009416196
  - 0.8385983263598327
  - 0.8528843875858801
  train_roc_auc_weighted:
  - 0.9265660395870919
  - 0.9211170597507812
  - 0.9239265405247401
  - 0.9195918957437512
  - 0.9287438173463529
  train_roc_auc_weighted_oob:
  - 0.8608979342181585
  - 0.8458342671537968
  - 0.850083069730274
  - 0.8460721113520162
  - 0.8488857832308944
start: 2023-12-22 03:37:59.017811
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
