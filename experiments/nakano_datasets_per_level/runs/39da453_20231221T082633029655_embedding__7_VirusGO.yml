active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0DAzMzMzMwMwICZmZmZmfm/AJqZmZmZ2T+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:27:09.652842
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__7
  params: {}
hash: 39da4538a9fdd30625fec6444414520ccde1c725a124250f0757f51577de2566
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/39da453_20231221T082633029655_embedding__7_VirusGO.yml
results:
  fit_time:
  - 26.66373038291931
  - 26.28053307533264
  - 26.595948934555054
  - 26.67525005340576
  - 26.880146026611328
  score_time:
  - 2.8122079372406006
  - 2.9194438457489014
  - 3.0699031352996826
  - 3.1318764686584473
  - 2.9836294651031494
  test_average_precision_macro:
  - 0.8523947549070957
  - 0.9701498957007972
  - 0.9050635590543546
  - 0.973338779956427
  - 0.9569891622982287
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7392416775692492
  - 0.9112292346829477
  - 0.8516352541651985
  - 0.9408087983942413
  - 0.9319151720053731
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.862719298245614
  - 0.9470370370370369
  - 0.9166666666666666
  - 0.9447154471544715
  - 0.9550000000000001
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8134802202217399
  - 0.9676107157713422
  - 0.8755866352488986
  - 0.9835277777777778
  - 0.953068838540201
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7807017543859649
  - 0.8111111111111112
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7916666666666669
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7807017543859649
  - 0.8111111111111111
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7916666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7807017543859649
  - 0.8111111111111114
  - 0.8062015503875972
  - 0.8008130081300814
  - 0.7916666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6515789473684211
  - 0.7111111111111111
  - 0.7054263565891472
  - 0.691219512195122
  - 0.6589999999999999
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6702007868674537
  - 0.7037263403328704
  - 0.6969410051956032
  - 0.691415272395111
  - 0.6849221166831296
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6402877697841727
  - 0.6822429906542056
  - 0.6753246753246753
  - 0.6677966101694915
  - 0.6551724137931034
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6466165413533836
  - 0.6857142857142858
  - 0.6805094130675527
  - 0.6742160278745646
  - 0.6630952380952382
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5038844118844118
  - 0.5685076100024509
  - 0.5617028976113424
  - 0.5470087896406146
  - 0.5123738399209777
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.862719298245614
  - 0.9470370370370369
  - 0.9166666666666666
  - 0.9447154471544715
  - 0.9550000000000001
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.03180433488375555
  - 0.03131121455425748
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.12567055209189143
  - 0.12649110640673517
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.014708268186829672
  - 0.024390243902439025
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0636086697675111
  - 0.06387487769068526
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9007002306274031
  - 0.963472919089213
  - 0.9381685669672969
  - 0.963736581973953
  - 0.9677190484167223
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7894736842105263
  - -1.3111111111111111
  - -1.3953488372093024
  - -1.4634146341463414
  - -1.4
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2192982456140351
  - -0.18888888888888888
  - -0.19379844961240308
  - -0.19918699186991873
  - -0.20833333333333337
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21929824561403508
  - -0.18888888888888888
  - -0.1937984496124031
  - -0.1991869918699187
  - -0.20833333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2192982456140351
  - -0.18888888888888886
  - -0.19379844961240308
  - -0.19918699186991867
  - -0.20833333333333331
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34842105263157896
  - -0.2888888888888889
  - -0.2945736434108527
  - -0.30878048780487805
  - -0.34099999999999997
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0868421052631579
  - -0.029999999999999995
  - -0.044186046511627906
  - -0.035975609756097565
  - -0.025555555555555554
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7807017543859649
  - 0.8111111111111112
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7916666666666669
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7807017543859649
  - 0.8111111111111111
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7916666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7807017543859649
  - 0.8111111111111114
  - 0.8062015503875972
  - 0.8008130081300814
  - 0.7916666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6515789473684211
  - 0.7111111111111111
  - 0.7054263565891472
  - 0.691219512195122
  - 0.6589999999999999
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7807017543859649
  - 0.8111111111111112
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7916666666666669
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7807017543859649
  - 0.8111111111111111
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7916666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7807017543859649
  - 0.8111111111111114
  - 0.8062015503875972
  - 0.8008130081300814
  - 0.7916666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6515789473684211
  - 0.7111111111111111
  - 0.7054263565891472
  - 0.691219512195122
  - 0.6589999999999999
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9386416060396136
  - 0.9918571086971374
  - 0.9618915942445355
  - 0.994987634693517
  - 0.9783224939075321
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9414606741573034
  - 0.9734533082639448
  - 0.9712039405134033
  - 0.9786734693877551
  - 0.9752631578947368
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9131578947368422
  - 0.97
  - 0.9558139534883722
  - 0.9640243902439026
  - 0.9744444444444443
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9076263584612732
  - 0.9875999180159869
  - 0.936232612703201
  - 0.9950450450450451
  - 0.9678107158541941
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.958358772390122
  - 0.9648957972754689
  - 0.9400570247441481
  - 0.9680503801055617
  - 0.9399442770566688
  train_average_precision_macro_oob:
  - 0.9019136068613868
  - 0.9082369634698312
  - 0.8748820211393963
  - 0.9030451596795229
  - 0.8942474921217674
  train_average_precision_micro:
  - 0.9439808025888099
  - 0.9409447614771859
  - 0.930355521070383
  - 0.9289452689819278
  - 0.9268423520136619
  train_average_precision_micro_oob:
  - 0.8621422959687948
  - 0.8534211096743561
  - 0.8508132854864424
  - 0.8458683376645096
  - 0.8537746518240866
  train_average_precision_samples:
  - 0.9600591715976331
  - 0.9520576131687244
  - 0.9584349593495936
  - 0.9553212851405624
  - 0.9565868263473054
  train_average_precision_samples_oob:
  - 0.9035502958579881
  - 0.8986454046639232
  - 0.9193597560975608
  - 0.9107429718875503
  - 0.9285429141716567
  train_average_precision_weighted:
  - 0.9587437762574212
  - 0.9627963895188477
  - 0.9485531712921079
  - 0.9604582678893555
  - 0.9379158657165318
  train_average_precision_weighted_oob:
  - 0.9048464027408364
  - 0.9037093745481166
  - 0.8809669910963939
  - 0.8884224038702195
  - 0.8869277226941576
  train_f1_macro:
  - 0.8057199211045365
  - 0.7993827160493826
  - 0.7987804878048781
  - 0.8022088353413653
  - 0.7984031936127743
  train_f1_macro_oob:
  - 0.8037475345167654
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7971887550200804
  - 0.7984031936127743
  train_f1_micro:
  - 0.8057199211045365
  - 0.7993827160493827
  - 0.7987804878048781
  - 0.8022088353413654
  - 0.7984031936127745
  train_f1_micro_oob:
  - 0.8037475345167653
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7971887550200804
  - 0.7984031936127745
  train_f1_samples:
  - 0.8057199211045364
  - 0.7993827160493825
  - 0.7987804878048781
  - 0.8022088353413652
  - 0.7984031936127743
  train_f1_samples_oob:
  - 0.8037475345167652
  - 0.7942386831275717
  - 0.7957317073170732
  - 0.7971887550200802
  - 0.7984031936127743
  train_f1_weighted:
  - 0.6988985880836605
  - 0.6865978748234138
  - 0.6841402742385633
  - 0.6919062388166528
  - 0.6875555819054959
  train_f1_weighted_oob:
  - 0.6949147577479642
  - 0.6761255451139364
  - 0.6780427132629535
  - 0.6819157819396398
  - 0.6875555819054959
  train_jaccard_macro:
  - 0.6974062795871306
  - 0.690186795711123
  - 0.6900796485935805
  - 0.6936185787118894
  - 0.6890112671839032
  train_jaccard_macro_oob:
  - 0.6953833571225169
  - 0.6850049129682839
  - 0.6869658033744721
  - 0.6884106375428006
  - 0.6890112671839032
  train_jaccard_micro:
  - 0.6746490503715937
  - 0.6658097686375322
  - 0.6649746192893401
  - 0.6697401508801342
  - 0.6644518272425249
  train_jaccard_micro_oob:
  - 0.6718878812860676
  - 0.658703071672355
  - 0.660759493670886
  - 0.662771285475793
  - 0.6644518272425249
  train_jaccard_samples:
  - 0.6817413355874895
  - 0.6732804232804234
  - 0.6704413472706157
  - 0.6772805507745268
  - 0.6696606786427146
  train_jaccard_samples_oob:
  - 0.6783601014370245
  - 0.6653439153439153
  - 0.6665214866434379
  - 0.6686746987951807
  - 0.6696606786427146
  train_jaccard_weighted:
  - 0.5545619894076814
  - 0.5408747555877428
  - 0.5386936082467711
  - 0.5467158285017041
  - 0.5426272786224211
  train_jaccard_weighted_oob:
  - 0.5504760866078674
  - 0.5303297374448112
  - 0.5324659178085545
  - 0.5363515099374782
  - 0.5426272786224211
  train_label_ranking_average_precision_score:
  - 0.9600591715976331
  - 0.9520576131687244
  - 0.9584349593495936
  - 0.9553212851405621
  - 0.9565868263473055
  train_label_ranking_average_precision_score_oob:
  - 0.9035502958579881
  - 0.8986454046639235
  - 0.919359756097561
  - 0.9107429718875499
  - 0.9285429141716567
  train_matthews_corrcoef_macro:
  - 0.04920167648973406
  - 0.05293960312195861
  - 0.027374418643721064
  - 0.03570269581110391
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.02697309534795776
  - 0.01564084502464915
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.1411372817869124
  - 0.15435340782227724
  - 0.10914628945461968
  - 0.14082596679178247
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.10921627986219702
  - 0.0628520641883113
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.029585798816568046
  - 0.03249945101276143
  - 0.011569308512811143
  - 0.030120481927710843
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.01775147928994083
  - 0.006172839506172839
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.10017882465296656
  - 0.10779225085425054
  - 0.054748837287442134
  - 0.07105189958447412
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.055281492445814415
  - 0.0312816900492983
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9709204007752436
  - 0.9662508436059852
  - 0.9703126009462378
  - 0.9678925429373053
  - 0.9692500044081743
  train_ndgc_oob:
  - 0.930763716428925
  - 0.9265233126011693
  - 0.9425533779060162
  - 0.9361203916955951
  - 0.9494354981458094
  train_neg_coverage_error:
  - -1.301775147928994
  - -1.4197530864197532
  - -1.3902439024390243
  - -1.355421686746988
  - -1.3712574850299402
  train_neg_coverage_error_oob:
  - -1.4792899408284024
  - -1.5679012345679013
  - -1.5304878048780488
  - -1.536144578313253
  - -1.473053892215569
  train_neg_hamming_loss_macro:
  - -0.1942800788954635
  - -0.2006172839506173
  - -0.201219512195122
  - -0.19779116465863456
  - -0.20159680638722555
  train_neg_hamming_loss_macro_oob:
  - -0.19625246548323472
  - -0.20576131687242796
  - -0.20426829268292682
  - -0.20281124497991973
  - -0.20159680638722555
  train_neg_hamming_loss_micro:
  - -0.1942800788954635
  - -0.2006172839506173
  - -0.20121951219512196
  - -0.19779116465863453
  - -0.20159680638722555
  train_neg_hamming_loss_micro_oob:
  - -0.19625246548323472
  - -0.205761316872428
  - -0.20426829268292682
  - -0.20281124497991967
  - -0.20159680638722555
  train_neg_hamming_loss_samples:
  - -0.19428007889546353
  - -0.2006172839506173
  - -0.20121951219512196
  - -0.19779116465863456
  - -0.20159680638722557
  train_neg_hamming_loss_samples_oob:
  - -0.19625246548323474
  - -0.20576131687242796
  - -0.20426829268292682
  - -0.2028112449799197
  - -0.20159680638722557
  train_neg_hamming_loss_weighted:
  - -0.30110141191633955
  - -0.3134021251765862
  - -0.3158597257614367
  - -0.30809376118334725
  - -0.312444418094504
  train_neg_hamming_loss_weighted_oob:
  - -0.30508524225203587
  - -0.3238744548860635
  - -0.3219572867370465
  - -0.31808421806036025
  - -0.312444418094504
  train_neg_label_ranking_loss:
  - -0.020184089414858646
  - -0.03093278463648834
  - -0.029573170731707316
  - -0.026054216867469882
  - -0.028592814371257488
  train_neg_label_ranking_loss_oob:
  - -0.05167652859960553
  - -0.06424897119341563
  - -0.05486111111111112
  - -0.05819946452476573
  - -0.04640718562874251
  train_precision_macro:
  - 0.8057199211045365
  - 0.7993827160493826
  - 0.7987804878048781
  - 0.8022088353413653
  - 0.7984031936127743
  train_precision_macro_oob:
  - 0.8037475345167654
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7971887550200804
  - 0.7984031936127743
  train_precision_micro:
  - 0.8057199211045365
  - 0.7993827160493827
  - 0.7987804878048781
  - 0.8022088353413654
  - 0.7984031936127745
  train_precision_micro_oob:
  - 0.8037475345167653
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7971887550200804
  - 0.7984031936127745
  train_precision_samples:
  - 0.8057199211045364
  - 0.7993827160493825
  - 0.7987804878048781
  - 0.8022088353413652
  - 0.7984031936127743
  train_precision_samples_oob:
  - 0.8037475345167652
  - 0.7942386831275717
  - 0.7957317073170732
  - 0.7971887550200802
  - 0.7984031936127743
  train_precision_weighted:
  - 0.6988985880836605
  - 0.6865978748234138
  - 0.6841402742385633
  - 0.6919062388166528
  - 0.6875555819054959
  train_precision_weighted_oob:
  - 0.6949147577479642
  - 0.6761255451139364
  - 0.6780427132629535
  - 0.6819157819396398
  - 0.6875555819054959
  train_recall_macro:
  - 0.8057199211045365
  - 0.7993827160493826
  - 0.7987804878048781
  - 0.8022088353413653
  - 0.7984031936127743
  train_recall_macro_oob:
  - 0.8037475345167654
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7971887550200804
  - 0.7984031936127743
  train_recall_micro:
  - 0.8057199211045365
  - 0.7993827160493827
  - 0.7987804878048781
  - 0.8022088353413654
  - 0.7984031936127745
  train_recall_micro_oob:
  - 0.8037475345167653
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7971887550200804
  - 0.7984031936127745
  train_recall_samples:
  - 0.8057199211045364
  - 0.7993827160493825
  - 0.7987804878048781
  - 0.8022088353413652
  - 0.7984031936127743
  train_recall_samples_oob:
  - 0.8037475345167652
  - 0.7942386831275717
  - 0.7957317073170732
  - 0.7971887550200802
  - 0.7984031936127743
  train_recall_weighted:
  - 0.6988985880836605
  - 0.6865978748234138
  - 0.6841402742385633
  - 0.6919062388166528
  - 0.6875555819054959
  train_recall_weighted_oob:
  - 0.6949147577479642
  - 0.6761255451139364
  - 0.6780427132629535
  - 0.6819157819396398
  - 0.6875555819054959
  train_roc_auc_macro:
  - 0.9836719506636543
  - 0.9869091769821959
  - 0.9746046296227272
  - 0.9872790327805382
  - 0.9729674798819276
  train_roc_auc_macro_oob:
  - 0.9679851798853668
  - 0.9663065405234864
  - 0.9554877837948735
  - 0.9632402729256366
  - 0.9608268397988846
  train_roc_auc_micro:
  - 0.9836030093157098
  - 0.980851256041453
  - 0.9762839696790633
  - 0.9779596977329974
  - 0.9775
  train_roc_auc_micro_oob:
  - 0.9607801297371116
  - 0.9550238431706578
  - 0.95735879987038
  - 0.9555577724019254
  - 0.9628341584158415
  train_roc_auc_samples:
  - 0.9798159105851414
  - 0.9690672153635116
  - 0.9704268292682927
  - 0.9739457831325302
  - 0.9714071856287425
  train_roc_auc_samples_oob:
  - 0.9483234714003944
  - 0.9357510288065843
  - 0.945138888888889
  - 0.9418005354752343
  - 0.9535928143712575
  train_roc_auc_weighted:
  - 0.9813582109521376
  - 0.9811297192100483
  - 0.9742168093686168
  - 0.9785495420045602
  - 0.9692839010891223
  train_roc_auc_weighted_oob:
  - 0.9629938336112182
  - 0.9611893502796737
  - 0.9510664640652615
  - 0.9520566094379223
  - 0.955735809896708
start: 2023-12-21 08:26:33.029655
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
