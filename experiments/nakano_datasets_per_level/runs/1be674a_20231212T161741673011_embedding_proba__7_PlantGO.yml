active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZGcCAZmZmZmYaQICZmZmZmRHAgGZmZmZmEkAAmJmZmZnZvw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:19:07.692765
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 1be674a34b34d69949e076294417d063e04ce3219bd6f7e3fa973356078528e7
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1be674a_20231212T161741673011_embedding_proba__7_PlantGO.yml
results:
  fit_time:
  - 37.6829297542572
  - 44.347179651260376
  - 36.84165930747986
  - 39.621012687683105
  - 39.37691259384155
  score_time:
  - 10.28603219985962
  - 9.983248233795166
  - 9.988829135894775
  - 10.149061918258667
  - 10.524471521377563
  test_average_precision_macro:
  - 0.8225495259333125
  - 0.7926133091146873
  - 0.8409640106923751
  - 0.7215437102874341
  - 0.8164944142775951
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.850592355314453
  - 0.8476205320673905
  - 0.8907690841816539
  - 0.8351592554287162
  - 0.8421967472108329
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.901009743831526
  - 0.8920991853531535
  - 0.9199166666666666
  - 0.8873909249563701
  - 0.9058005344995141
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8730520486304524
  - 0.8599590259963458
  - 0.9069821327683741
  - 0.8365348633256667
  - 0.8709622417630746
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9603960396039604
  - 0.9563492063492065
  - 0.9649999999999999
  - 0.9559336823734729
  - 0.961734693877551
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9603960396039604
  - 0.9563492063492064
  - 0.965
  - 0.955933682373473
  - 0.9617346938775511
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9603960396039604
  - 0.9563492063492064
  - 0.9649999999999999
  - 0.9559336823734729
  - 0.9617346938775511
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9452409863627873
  - 0.936282253817799
  - 0.9565876777251185
  - 0.9395911244078783
  - 0.9418947673856272
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9246409482973323
  - 0.9175005371244399
  - 0.9327406962762465
  - 0.916883732065865
  - 0.9275693376379808
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9238095238095239
  - 0.9163498098859315
  - 0.9323671497584541
  - 0.9155871291266193
  - 0.9262899262899262
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9290610379719291
  - 0.9228327228327228
  - 0.937032967032967
  - 0.9222829526494448
  - 0.9323615160349854
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8971690208000953
  - 0.8813199084327966
  - 0.9172694522927061
  - 0.8877092626429953
  - 0.8918800671591698
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.901009743831526
  - 0.8920991853531538
  - 0.9199166666666667
  - 0.8873909249563698
  - 0.9058005344995143
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.43743278947191055
  - 0.43241452106931927
  - 0.4730206517826565
  - 0.41072992590920254
  - 0.5231700823197002
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7265780982984882
  - 0.7133831096465971
  - 0.7618757261716768
  - 0.7081786004042736
  - 0.7480355387573949
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6394749727316247
  - 0.6434563667070038
  - 0.673142449731668
  - 0.6495855816225715
  - 0.7013427382470468
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6705129514886491
  - 0.6518837323053253
  - 0.7126472542394955
  - 0.6457571358472292
  - 0.7093436106776048
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9268385110745613
  - 0.920904204594476
  - 0.9404643249710642
  - 0.9173677625915164
  - 0.9306791804637627
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3465346534653466
  - -1.439153439153439
  - -1.34
  - -1.4816753926701571
  - -1.4438775510204083
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.039603960396039604
  - -0.04365079365079364
  - -0.03500000000000001
  - -0.04406631762652705
  - -0.038265306122448974
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.039603960396039604
  - -0.04365079365079365
  - -0.035
  - -0.04406631762652705
  - -0.03826530612244898
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.039603960396039604
  - -0.04365079365079365
  - -0.034999999999999996
  - -0.044066317626527046
  - -0.03826530612244898
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.054759013637212785
  - -0.06371774618220115
  - -0.04341232227488151
  - -0.06040887559212168
  - -0.05810523261437276
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.026035103510351033
  - -0.02669285447063225
  - -0.024886363636363637
  - -0.03188957639219419
  - -0.030936920222634508
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9603960396039604
  - 0.9563492063492065
  - 0.9649999999999999
  - 0.9559336823734729
  - 0.961734693877551
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9603960396039604
  - 0.9563492063492064
  - 0.965
  - 0.955933682373473
  - 0.9617346938775511
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9603960396039604
  - 0.9563492063492064
  - 0.9649999999999999
  - 0.9559336823734729
  - 0.9617346938775511
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9452409863627873
  - 0.936282253817799
  - 0.9565876777251185
  - 0.9395911244078783
  - 0.9418947673856272
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9603960396039604
  - 0.9563492063492065
  - 0.9649999999999999
  - 0.9559336823734729
  - 0.961734693877551
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9603960396039604
  - 0.9563492063492064
  - 0.965
  - 0.955933682373473
  - 0.9617346938775511
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9603960396039604
  - 0.9563492063492064
  - 0.9649999999999999
  - 0.9559336823734729
  - 0.9617346938775511
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9452409863627873
  - 0.936282253817799
  - 0.9565876777251185
  - 0.9395911244078783
  - 0.9418947673856272
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9719570624656079
  - 0.9701211646496284
  - 0.972994359711873
  - 0.9644224721373874
  - 0.964462719059159
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.978754392848613
  - 0.9781810809004969
  - 0.9797901614925122
  - 0.9735991034261928
  - 0.9732551781844423
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.973964896489649
  - 0.9733071455293678
  - 0.9751136363636362
  - 0.9681104236078057
  - 0.9690630797773655
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9747117156357882
  - 0.9710042882736969
  - 0.9798630479987689
  - 0.9684202471334054
  - 0.9655772530642945
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9650865894308306
  - 0.9791233775433276
  - 0.9665860646972307
  - 0.9735934049763076
  - 0.9676901595166173
  train_average_precision_macro_oob:
  - 0.8549185392401205
  - 0.8795432151476644
  - 0.8453131010990846
  - 0.872599976845276
  - 0.8754145182488942
  train_average_precision_micro:
  - 0.9745116296969901
  - 0.9826645928783087
  - 0.9724191803034316
  - 0.9764451793734972
  - 0.9762166877793335
  train_average_precision_micro_oob:
  - 0.9174890459273055
  - 0.9322429348067021
  - 0.9132485714089061
  - 0.9232930578860761
  - 0.9241144326488997
  train_average_precision_samples:
  - 0.9693943298969072
  - 0.9713772708069286
  - 0.968508997429306
  - 0.9702456586192291
  - 0.9703751065643648
  train_average_precision_samples_oob:
  - 0.9369349793963196
  - 0.9448619364018602
  - 0.9306097144786091
  - 0.9400193622557028
  - 0.9418570063071342
  train_average_precision_weighted:
  - 0.9778337609069355
  - 0.9872114418625129
  - 0.9775664900408624
  - 0.98170255246555
  - 0.9792824693073406
  train_average_precision_weighted_oob:
  - 0.9178618912450729
  - 0.9345804515996462
  - 0.9127568439645857
  - 0.9264989402319368
  - 0.930181357734584
  train_f1_macro:
  - 0.9771262886597939
  - 0.9778200253485424
  - 0.9761139674378749
  - 0.9767047861075815
  - 0.9798593350383632
  train_f1_macro_oob:
  - 0.9670317869415807
  - 0.9664131812420785
  - 0.965509854327335
  - 0.9660101651842439
  - 0.9683503836317137
  train_f1_micro:
  - 0.9771262886597938
  - 0.9778200253485425
  - 0.9761139674378749
  - 0.9767047861075815
  - 0.9798593350383632
  train_f1_micro_oob:
  - 0.9670317869415808
  - 0.9664131812420785
  - 0.965509854327335
  - 0.966010165184244
  - 0.9683503836317136
  train_f1_samples:
  - 0.9771262886597938
  - 0.9778200253485425
  - 0.9761139674378748
  - 0.9767047861075815
  - 0.9798593350383632
  train_f1_samples_oob:
  - 0.9670317869415808
  - 0.9664131812420785
  - 0.965509854327335
  - 0.966010165184244
  - 0.9683503836317134
  train_f1_weighted:
  - 0.9758624695796796
  - 0.9769955970422696
  - 0.9740341622095785
  - 0.974952444681699
  - 0.9784608671410042
  train_f1_weighted_oob:
  - 0.9614288684252362
  - 0.9582184539791807
  - 0.9584181093824243
  - 0.9585783779313249
  - 0.9615837989842547
  train_jaccard_macro:
  - 0.9553411313970951
  - 0.9566558377974719
  - 0.9533973490828433
  - 0.9545473816472261
  - 0.9605726699176138
  train_jaccard_macro_oob:
  - 0.9363605039986909
  - 0.9352642337044564
  - 0.9336275609306027
  - 0.9345598290098035
  - 0.9387844073538849
  train_jaccard_micro:
  - 0.955275590551181
  - 0.9566026038437694
  - 0.9533423998326185
  - 0.9544701986754967
  - 0.9605139454716389
  train_jaccard_micro_oob:
  - 0.9361680008316873
  - 0.935009196811772
  - 0.9333195278525575
  - 0.9342549923195085
  - 0.938642702200186
  train_jaccard_samples:
  - 0.9588138665458253
  - 0.9597765985598685
  - 0.9569083872425775
  - 0.9579652875713868
  - 0.9635929288103201
  train_jaccard_samples_oob:
  - 0.9407329783618444
  - 0.9394420535104946
  - 0.9380321478007854
  - 0.9388245807559658
  - 0.9431269497765663
  train_jaccard_weighted:
  - 0.9529350037359235
  - 0.9550878638558008
  - 0.9494433136780261
  - 0.9512157044094325
  - 0.9578951176969773
  train_jaccard_weighted_oob:
  - 0.9259657259732635
  - 0.9201467593455528
  - 0.9205430334682977
  - 0.920820098053118
  - 0.9262160836849846
  train_label_ranking_average_precision_score:
  - 0.9693943298969072
  - 0.9713772708069286
  - 0.9685089974293057
  - 0.9702456586192291
  - 0.9703751065643648
  train_label_ranking_average_precision_score_oob:
  - 0.9369349793963198
  - 0.9448619364018602
  - 0.9306097144786095
  - 0.9400193622557029
  - 0.9418570063071345
  train_matthews_corrcoef_macro:
  - 0.6362229199186451
  - 0.6318433412985526
  - 0.5963862779600407
  - 0.64209224599614
  - 0.7215483145183041
  train_matthews_corrcoef_macro_oob:
  - 0.4450394223199144
  - 0.4534285571336305
  - 0.43737081138225903
  - 0.46155850475390414
  - 0.4706847940522742
  train_matthews_corrcoef_micro:
  - 0.8535695725389927
  - 0.8560975335477222
  - 0.8464400131447288
  - 0.8489566426474898
  - 0.871144171749335
  train_matthews_corrcoef_micro_oob:
  - 0.7830215948094711
  - 0.7749155116285295
  - 0.7716676067828693
  - 0.7727960701126831
  - 0.7911921497771214
  train_matthews_corrcoef_samples:
  - 0.7946024466312861
  - 0.7931483523532846
  - 0.7760361215061624
  - 0.7819851555976874
  - 0.8141108953497002
  train_matthews_corrcoef_samples_oob:
  - 0.697387787382845
  - 0.6852731829257829
  - 0.6813103011963868
  - 0.6761183281409384
  - 0.7067915787798752
  train_matthews_corrcoef_weighted:
  - 0.827270331846381
  - 0.8296346592544062
  - 0.8139755734630499
  - 0.8237437633053971
  - 0.8564264010937171
  train_matthews_corrcoef_weighted_oob:
  - 0.7240098472608125
  - 0.7188728364827499
  - 0.7115626633034637
  - 0.7179275602731516
  - 0.736322175551539
  train_ndgc:
  - 0.9774578714938505
  - 0.9788977659513609
  - 0.9767978599905969
  - 0.9780538464302837
  - 0.9781953133921795
  train_ndgc_oob:
  - 0.9542155329430615
  - 0.9598124701305634
  - 0.9491437724616331
  - 0.9560617292850918
  - 0.957646799931583
  train_neg_coverage_error:
  - -1.1546391752577319
  - -1.1305449936628644
  - -1.154241645244216
  - -1.135959339263024
  - -1.143222506393862
  train_neg_coverage_error_oob:
  - -1.306701030927835
  - -1.258555133079848
  - -1.352185089974293
  - -1.2744599745870393
  - -1.289002557544757
  train_neg_hamming_loss_macro:
  - -0.022873711340206184
  - -0.022179974651457542
  - -0.02388603256212511
  - -0.023295213892418468
  - -0.020140664961636832
  train_neg_hamming_loss_macro_oob:
  - -0.032968213058419245
  - -0.03358681875792142
  - -0.03449014567266496
  - -0.033989834815756036
  - -0.03164961636828644
  train_neg_hamming_loss_micro:
  - -0.022873711340206184
  - -0.022179974651457542
  - -0.02388603256212511
  - -0.023295213892418468
  - -0.02014066496163683
  train_neg_hamming_loss_micro_oob:
  - -0.032968213058419245
  - -0.03358681875792142
  - -0.03449014567266495
  - -0.033989834815756036
  - -0.03164961636828645
  train_neg_hamming_loss_samples:
  - -0.022873711340206184
  - -0.022179974651457542
  - -0.023886032562125105
  - -0.023295213892418464
  - -0.02014066496163683
  train_neg_hamming_loss_samples_oob:
  - -0.032968213058419245
  - -0.03358681875792142
  - -0.03449014567266495
  - -0.033989834815756036
  - -0.03164961636828645
  train_neg_hamming_loss_weighted:
  - -0.02413753042032016
  - -0.023004402957730406
  - -0.025965837790421418
  - -0.025047555318301096
  - -0.02153913285899565
  train_neg_hamming_loss_weighted_oob:
  - -0.03857113157476367
  - -0.041781546020819446
  - -0.04158189061757575
  - -0.04142162206867515
  - -0.03841620101574526
  train_neg_label_ranking_loss:
  - -0.0061035613870665415
  - -0.005490263855282867
  - -0.006199743796144824
  - -0.005591706989419823
  - -0.0057030234140208564
  train_neg_label_ranking_loss_oob:
  - -0.017555277864556216
  - -0.015543265353151285
  - -0.022143240459435835
  - -0.016679501495257532
  - -0.016978824907213655
  train_precision_macro:
  - 0.9771262886597939
  - 0.9778200253485424
  - 0.9761139674378749
  - 0.9767047861075815
  - 0.9798593350383632
  train_precision_macro_oob:
  - 0.9670317869415807
  - 0.9664131812420785
  - 0.965509854327335
  - 0.9660101651842439
  - 0.9683503836317137
  train_precision_micro:
  - 0.9771262886597938
  - 0.9778200253485425
  - 0.9761139674378749
  - 0.9767047861075815
  - 0.9798593350383632
  train_precision_micro_oob:
  - 0.9670317869415808
  - 0.9664131812420785
  - 0.965509854327335
  - 0.966010165184244
  - 0.9683503836317136
  train_precision_samples:
  - 0.9771262886597938
  - 0.9778200253485425
  - 0.9761139674378748
  - 0.9767047861075815
  - 0.9798593350383632
  train_precision_samples_oob:
  - 0.9670317869415808
  - 0.9664131812420785
  - 0.965509854327335
  - 0.966010165184244
  - 0.9683503836317134
  train_precision_weighted:
  - 0.9758624695796796
  - 0.9769955970422696
  - 0.9740341622095785
  - 0.974952444681699
  - 0.9784608671410042
  train_precision_weighted_oob:
  - 0.9614288684252362
  - 0.9582184539791807
  - 0.9584181093824243
  - 0.9585783779313249
  - 0.9615837989842547
  train_recall_macro:
  - 0.9771262886597939
  - 0.9778200253485424
  - 0.9761139674378749
  - 0.9767047861075815
  - 0.9798593350383632
  train_recall_macro_oob:
  - 0.9670317869415807
  - 0.9664131812420785
  - 0.965509854327335
  - 0.9660101651842439
  - 0.9683503836317137
  train_recall_micro:
  - 0.9771262886597938
  - 0.9778200253485425
  - 0.9761139674378749
  - 0.9767047861075815
  - 0.9798593350383632
  train_recall_micro_oob:
  - 0.9670317869415808
  - 0.9664131812420785
  - 0.965509854327335
  - 0.966010165184244
  - 0.9683503836317136
  train_recall_samples:
  - 0.9771262886597938
  - 0.9778200253485425
  - 0.9761139674378748
  - 0.9767047861075815
  - 0.9798593350383632
  train_recall_samples_oob:
  - 0.9670317869415808
  - 0.9664131812420785
  - 0.965509854327335
  - 0.966010165184244
  - 0.9683503836317134
  train_recall_weighted:
  - 0.9758624695796796
  - 0.9769955970422696
  - 0.9740341622095785
  - 0.974952444681699
  - 0.9784608671410042
  train_recall_weighted_oob:
  - 0.9614288684252362
  - 0.9582184539791807
  - 0.9584181093824243
  - 0.9585783779313249
  - 0.9615837989842547
  train_roc_auc_macro:
  - 0.9973721450596923
  - 0.9987122504177725
  - 0.9975933381695179
  - 0.99779531965242
  - 0.9978747738448446
  train_roc_auc_macro_oob:
  - 0.9824051472109132
  - 0.9884764482106151
  - 0.980965532817724
  - 0.986320800241605
  - 0.9833769631584267
  train_roc_auc_micro:
  - 0.9975318540145086
  - 0.9984242283190743
  - 0.9973815612352189
  - 0.9978048913077135
  - 0.9978619571128895
  train_roc_auc_micro_oob:
  - 0.9872945318541545
  - 0.9901136968143569
  - 0.9859736959011325
  - 0.9890230802948741
  - 0.9882551583293562
  train_roc_auc_samples:
  - 0.9938964386129334
  - 0.9945097361447173
  - 0.9938002562038551
  - 0.9944082930105801
  - 0.9942969765859792
  train_roc_auc_samples_oob:
  - 0.9824447221354438
  - 0.9844567346468487
  - 0.9778567595405642
  - 0.9833204985047425
  - 0.9830211750927864
  train_roc_auc_weighted:
  - 0.9972274888885164
  - 0.9983201359908018
  - 0.9970949507616342
  - 0.9975264416269698
  - 0.9975541404016971
  train_roc_auc_weighted_oob:
  - 0.9863824396900768
  - 0.9899922253081641
  - 0.9854283311115063
  - 0.9889129389909818
  - 0.9877194389893227
start: 2023-12-12 16:17:41.673011
wrapper: null
