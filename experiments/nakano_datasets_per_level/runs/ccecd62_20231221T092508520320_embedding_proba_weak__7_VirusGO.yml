active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMCAZmZmZmb2P4BmZmZmZvY/ADMzMzMz47+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:29:08.181953
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__7
  params: {}
hash: ccecd6254d739e94947a2fdb84ffcbce82fe97cdaa67023335c4d784ede60ce1
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ccecd62_20231221T092508520320_embedding_proba_weak__7_VirusGO.yml
results:
  fit_time:
  - 220.25171327590942
  - 220.29034209251404
  - 226.86929655075073
  - 226.69846177101135
  - 224.86640334129333
  score_time:
  - 4.418568134307861
  - 4.372744798660278
  - 4.6177239418029785
  - 4.612460136413574
  - 4.689866542816162
  test_average_precision_macro:
  - 0.9360548899671713
  - 0.9614435540297991
  - 0.8987091798256555
  - 0.8642147913308404
  - 0.9037178721123028
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8235630742424501
  - 0.9227632911343653
  - 0.8437010286883752
  - 0.8759355453813183
  - 0.8990841884921852
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8996296296296297
  - 0.9483333333333335
  - 0.9112500000000001
  - 0.9246031746031745
  - 0.8933333333333333
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9007862505225779
  - 0.9675633118744572
  - 0.8985798409614286
  - 0.8876357095568836
  - 0.9188976424332462
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8592592592592593
  - 0.8875000000000001
  - 0.8375
  - 0.884920634920635
  - 0.8666666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8592592592592593
  - 0.8875
  - 0.8375
  - 0.8849206349206349
  - 0.8666666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8592592592592594
  - 0.8875
  - 0.8375
  - 0.884920634920635
  - 0.8666666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8074074074074074
  - 0.875
  - 0.7525510204081632
  - 0.8650793650793651
  - 0.8175
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7604397881753505
  - 0.7998014593759275
  - 0.7369919464299103
  - 0.7961783822098346
  - 0.7714735404859724
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7532467532467533
  - 0.797752808988764
  - 0.7204301075268817
  - 0.7935943060498221
  - 0.7647058823529411
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7666666666666667
  - 0.8208333333333334
  - 0.7351190476190477
  - 0.8157596371882088
  - 0.7815476190476192
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6819345056874111
  - 0.7787120865969427
  - 0.6186205928019939
  - 0.7637786928748457
  - 0.6953950907737149
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8996296296296297
  - 0.9483333333333333
  - 0.9112500000000001
  - 0.9246031746031745
  - 0.8933333333333333
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16896404195738723
  - 0.251494160976731
  - 0.13878244348241334
  - 0.23644326873148402
  - 0.1992575080137227
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4591489771253148
  - 0.6382328552688165
  - 0.4031843462806977
  - 0.608417885521727
  - 0.5506325201518739
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2999414799133562
  - 0.5740569415042096
  - 0.23452847075210476
  - 0.463899338904361
  - 0.4102372813917084
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3379280839147745
  - 0.502988321953462
  - 0.2822524866900708
  - 0.47288653746296805
  - 0.41968197403665825
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9291249886597108
  - 0.9674560695828782
  - 0.9359677016666389
  - 0.946175213236331
  - 0.9222961620156646
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4444444444444444
  - -1.575
  - -1.525
  - -1.5
  - -1.6
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.14074074074074075
  - -0.11249999999999999
  - -0.1625
  - -0.11507936507936507
  - -0.13333333333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.14074074074074075
  - -0.1125
  - -0.1625
  - -0.11507936507936507
  - -0.13333333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.14074074074074075
  - -0.1125
  - -0.1625
  - -0.11507936507936507
  - -0.1333333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19259259259259257
  - -0.125
  - -0.24744897959183676
  - -0.13492063492063494
  - -0.1825
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05333333333333333
  - -0.04243055555555556
  - -0.055625
  - -0.052976190476190475
  - -0.064375
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8592592592592593
  - 0.8875000000000001
  - 0.8375
  - 0.884920634920635
  - 0.8666666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8592592592592593
  - 0.8875
  - 0.8375
  - 0.8849206349206349
  - 0.8666666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8592592592592594
  - 0.8875
  - 0.8375
  - 0.884920634920635
  - 0.8666666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8074074074074074
  - 0.875
  - 0.7525510204081632
  - 0.8650793650793651
  - 0.8175
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8592592592592593
  - 0.8875000000000001
  - 0.8375
  - 0.884920634920635
  - 0.8666666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8592592592592593
  - 0.8875
  - 0.8375
  - 0.8849206349206349
  - 0.8666666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8592592592592594
  - 0.8875
  - 0.8375
  - 0.884920634920635
  - 0.8666666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8074074074074074
  - 0.875
  - 0.7525510204081632
  - 0.8650793650793651
  - 0.8175
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9710066953610713
  - 0.9899041797219547
  - 0.9616941473559121
  - 0.9354359638592279
  - 0.96374685688944
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9624854508013251
  - 0.9720406681190994
  - 0.9621754460946682
  - 0.9535655058043118
  - 0.9638947368421052
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9466666666666665
  - 0.9575694444444445
  - 0.9443750000000002
  - 0.9470238095238095
  - 0.9356249999999999
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9451219512195123
  - 0.9863920535276034
  - 0.9507014927182994
  - 0.9437063246351173
  - 0.9539260895399002
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9491834235021391
  - 0.9694335361809993
  - 0.9170679114457109
  - 0.9627140382796728
  - 0.9562639235651226
  train_average_precision_macro_oob:
  - 0.9096726387232543
  - 0.9103642054826243
  - 0.8903235859343216
  - 0.9248031705652638
  - 0.9339000301623921
  train_average_precision_micro:
  - 0.9218671437442195
  - 0.9325302613221946
  - 0.89989918774942
  - 0.9363021950510814
  - 0.9406313543132195
  train_average_precision_micro_oob:
  - 0.8866213789333983
  - 0.8826952889787063
  - 0.872274903309216
  - 0.8873272761274386
  - 0.9115668333296162
  train_average_precision_samples:
  - 0.9515432098765431
  - 0.9652694610778443
  - 0.9407185628742516
  - 0.9550505050505049
  - 0.9539920159680638
  train_average_precision_samples_oob:
  - 0.9378600823045268
  - 0.9109780439121756
  - 0.9255821689953426
  - 0.9147474747474748
  - 0.9459081836327343
  train_average_precision_weighted:
  - 0.9459125923926572
  - 0.9639031045284759
  - 0.9269246609712024
  - 0.9691096165068309
  - 0.9596034007059376
  train_average_precision_weighted_oob:
  - 0.9174047765296395
  - 0.9292841049330051
  - 0.9085010226692463
  - 0.940784513316521
  - 0.9438151170651765
  train_f1_macro:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.8722554890219562
  - 0.8939393939393939
  - 0.8812375249500998
  train_f1_macro_oob:
  - 0.8703703703703702
  - 0.8872255489021956
  - 0.8662674650698604
  - 0.8929292929292929
  - 0.8822355289421159
  train_f1_micro:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.872255489021956
  - 0.8939393939393939
  - 0.8812375249500998
  train_f1_micro_oob:
  - 0.8703703703703703
  - 0.8872255489021956
  - 0.8662674650698603
  - 0.8929292929292929
  - 0.8822355289421158
  train_f1_samples:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.872255489021956
  - 0.8939393939393939
  - 0.8812375249500995
  train_f1_samples_oob:
  - 0.8703703703703703
  - 0.8872255489021957
  - 0.8662674650698602
  - 0.8929292929292928
  - 0.8822355289421157
  train_f1_weighted:
  - 0.8439592162643572
  - 0.8679357702505437
  - 0.8366124893071
  - 0.8786371174430876
  - 0.8549534594177981
  train_f1_weighted_oob:
  - 0.8312450095202998
  - 0.8639437542824798
  - 0.8244299578183535
  - 0.8763455450022614
  - 0.8569988735400484
  train_jaccard_macro:
  - 0.7845978293554893
  - 0.8032041252668513
  - 0.777590761852986
  - 0.8104299882904584
  - 0.7906137285312443
  train_jaccard_macro_oob:
  - 0.7759527953252731
  - 0.8002761499530143
  - 0.7693604505381667
  - 0.8087281981760309
  - 0.7921159593890453
  train_jaccard_micro:
  - 0.7802197802197802
  - 0.8005390835579514
  - 0.7734513274336283
  - 0.8082191780821918
  - 0.7876895628902766
  train_jaccard_micro_oob:
  - 0.7704918032786885
  - 0.7973094170403587
  - 0.7640845070422535
  - 0.8065693430656934
  - 0.7892857142857143
  train_jaccard_samples:
  - 0.7977660199882423
  - 0.8189335614485315
  - 0.7918448816652409
  - 0.8256854256854257
  - 0.8042486455660107
  train_jaccard_samples_oob:
  - 0.7880658436213992
  - 0.8159395494724836
  - 0.7820074137439406
  - 0.823953823953824
  - 0.8052466495580267
  train_jaccard_weighted:
  - 0.7332188288255425
  - 0.767961486061109
  - 0.7213460113141735
  - 0.7844718703926182
  - 0.7479481740849361
  train_jaccard_weighted_oob:
  - 0.7154402570001259
  - 0.7621055354334353
  - 0.7046036530690339
  - 0.7806341835945463
  - 0.7510270036647851
  train_label_ranking_average_precision_score:
  - 0.9515432098765431
  - 0.9652694610778443
  - 0.9407185628742516
  - 0.9550505050505051
  - 0.9539920159680638
  train_label_ranking_average_precision_score_oob:
  - 0.9378600823045266
  - 0.9109780439121756
  - 0.9255821689953428
  - 0.914747474747475
  - 0.9459081836327345
  train_matthews_corrcoef_macro:
  - 0.22090222049318586
  - 0.23829904260438192
  - 0.20984929205888556
  - 0.25119573758122954
  - 0.2289133314509567
  train_matthews_corrcoef_macro_oob:
  - 0.21051754116863727
  - 0.23429115141883064
  - 0.19833113016485884
  - 0.2496469126949299
  - 0.2314640543816385
  train_matthews_corrcoef_micro:
  - 0.585849365473943
  - 0.6225910566703964
  - 0.558323493222137
  - 0.646700849608741
  - 0.5951070496290926
  train_matthews_corrcoef_micro_oob:
  - 0.5620765374497688
  - 0.6147949842230613
  - 0.5331610976131141
  - 0.6429168906616662
  - 0.5999231093074744
  train_matthews_corrcoef_samples:
  - 0.41690934187532735
  - 0.522538135952933
  - 0.4080198406215751
  - 0.5004349631262831
  - 0.4644631042316788
  train_matthews_corrcoef_samples_oob:
  - 0.3792712764672964
  - 0.5127629531263841
  - 0.3768821160706769
  - 0.4909042822393311
  - 0.46635668366890526
  train_matthews_corrcoef_weighted:
  - 0.4505693528722849
  - 0.48796924258051244
  - 0.42480949674312224
  - 0.5141865426470567
  - 0.46237057579311075
  train_matthews_corrcoef_weighted_oob:
  - 0.4292275965281389
  - 0.47995346020940993
  - 0.4013791973614416
  - 0.5105945690916336
  - 0.46759829506688433
  train_ndgc:
  - 0.9651641712180555
  - 0.9749963051306719
  - 0.957100451145622
  - 0.9674507362536667
  - 0.9677100259912016
  train_ndgc_oob:
  - 0.9565540721026266
  - 0.9356958410976777
  - 0.9463684375817393
  - 0.9387023784093604
  - 0.9629210155243229
  train_neg_coverage_error:
  - -1.4012345679012346
  - -1.2994011976047903
  - -1.4191616766467066
  - -1.3454545454545455
  - -1.3712574850299402
  train_neg_coverage_error_oob:
  - -1.4876543209876543
  - -1.4790419161676647
  - -1.4610778443113772
  - -1.503030303030303
  - -1.4311377245508983
  train_neg_hamming_loss_macro:
  - -0.12345679012345678
  - -0.11077844311377245
  - -0.12774451097804393
  - -0.10606060606060604
  - -0.11876247504990022
  train_neg_hamming_loss_macro_oob:
  - -0.12962962962962962
  - -0.11277445109780439
  - -0.13373253493013973
  - -0.10707070707070705
  - -0.11776447105788422
  train_neg_hamming_loss_micro:
  - -0.12345679012345678
  - -0.11077844311377245
  - -0.1277445109780439
  - -0.10606060606060606
  - -0.1187624750499002
  train_neg_hamming_loss_micro_oob:
  - -0.12962962962962962
  - -0.11277445109780439
  - -0.13373253493013973
  - -0.10707070707070707
  - -0.11776447105788423
  train_neg_hamming_loss_samples:
  - -0.12345679012345678
  - -0.11077844311377245
  - -0.12774451097804387
  - -0.10606060606060606
  - -0.11876247504990017
  train_neg_hamming_loss_samples_oob:
  - -0.12962962962962962
  - -0.11277445109780436
  - -0.1337325349301397
  - -0.10707070707070705
  - -0.11776447105788422
  train_neg_hamming_loss_weighted:
  - -0.15604078373564276
  - -0.1320642297494563
  - -0.16338751069289992
  - -0.12136288255691241
  - -0.14504654058220193
  train_neg_hamming_loss_weighted_oob:
  - -0.16875499047970027
  - -0.13605624571752017
  - -0.17557004218164654
  - -0.12365445499773856
  - -0.1430011264599514
  train_neg_label_ranking_loss:
  - -0.029475308641975312
  - -0.01781437125748503
  - -0.03712574850299402
  - -0.02415824915824916
  - -0.0281437125748503
  train_neg_label_ranking_loss_oob:
  - -0.042661179698216735
  - -0.050748502994011985
  - -0.04534264803725882
  - -0.05255892255892256
  - -0.036443779108449766
  train_precision_macro:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.8722554890219562
  - 0.8939393939393939
  - 0.8812375249500998
  train_precision_macro_oob:
  - 0.8703703703703702
  - 0.8872255489021956
  - 0.8662674650698604
  - 0.8929292929292929
  - 0.8822355289421159
  train_precision_micro:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.872255489021956
  - 0.8939393939393939
  - 0.8812375249500998
  train_precision_micro_oob:
  - 0.8703703703703703
  - 0.8872255489021956
  - 0.8662674650698603
  - 0.8929292929292929
  - 0.8822355289421158
  train_precision_samples:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.872255489021956
  - 0.8939393939393939
  - 0.8812375249500995
  train_precision_samples_oob:
  - 0.8703703703703703
  - 0.8872255489021957
  - 0.8662674650698602
  - 0.8929292929292928
  - 0.8822355289421157
  train_precision_weighted:
  - 0.8439592162643572
  - 0.8679357702505437
  - 0.8366124893071
  - 0.8786371174430876
  - 0.8549534594177981
  train_precision_weighted_oob:
  - 0.8312450095202998
  - 0.8639437542824798
  - 0.8244299578183535
  - 0.8763455450022614
  - 0.8569988735400484
  train_recall_macro:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.8722554890219562
  - 0.8939393939393939
  - 0.8812375249500998
  train_recall_macro_oob:
  - 0.8703703703703702
  - 0.8872255489021956
  - 0.8662674650698604
  - 0.8929292929292929
  - 0.8822355289421159
  train_recall_micro:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.872255489021956
  - 0.8939393939393939
  - 0.8812375249500998
  train_recall_micro_oob:
  - 0.8703703703703703
  - 0.8872255489021956
  - 0.8662674650698603
  - 0.8929292929292929
  - 0.8822355289421158
  train_recall_samples:
  - 0.8765432098765432
  - 0.8892215568862275
  - 0.872255489021956
  - 0.8939393939393939
  - 0.8812375249500995
  train_recall_samples_oob:
  - 0.8703703703703703
  - 0.8872255489021957
  - 0.8662674650698602
  - 0.8929292929292928
  - 0.8822355289421157
  train_recall_weighted:
  - 0.8439592162643572
  - 0.8679357702505437
  - 0.8366124893071
  - 0.8786371174430876
  - 0.8549534594177981
  train_recall_weighted_oob:
  - 0.8312450095202998
  - 0.8639437542824798
  - 0.8244299578183535
  - 0.8763455450022614
  - 0.8569988735400484
  train_roc_auc_macro:
  - 0.9782678507264619
  - 0.9835954351963673
  - 0.9725619100571111
  - 0.9848285255675755
  - 0.9853404268485928
  train_roc_auc_macro_oob:
  - 0.9620110666621989
  - 0.9647896232974449
  - 0.9645585386060276
  - 0.9738112562846496
  - 0.9768928264850886
  train_roc_auc_micro:
  - 0.9775506385065593
  - 0.9808355227607282
  - 0.9734736154182876
  - 0.9803737964171537
  - 0.9811633663366337
  train_roc_auc_micro_oob:
  - 0.9616960592627009
  - 0.958186595114316
  - 0.9631744113639586
  - 0.9614349040601807
  - 0.970575495049505
  train_roc_auc_samples:
  - 0.9705246913580249
  - 0.982185628742515
  - 0.9628742514970059
  - 0.9758417508417508
  - 0.9718562874251497
  train_roc_auc_samples_oob:
  - 0.9573388203017833
  - 0.9492514970059881
  - 0.9546573519627414
  - 0.9474410774410774
  - 0.9635562208915502
  train_roc_auc_weighted:
  - 0.9725583316194323
  - 0.9803075098339991
  - 0.9684571844058679
  - 0.985000432625827
  - 0.9820636886975629
  train_roc_auc_weighted_oob:
  - 0.9566287124188173
  - 0.964494764500452
  - 0.96056972379728
  - 0.9710840844749794
  - 0.9743684455619505
start: 2023-12-21 09:25:08.520320
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
