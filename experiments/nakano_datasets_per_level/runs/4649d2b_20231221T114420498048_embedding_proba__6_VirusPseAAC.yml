active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j9gZmZmZmYSwEAzMzMzMwNAoJmZmZmZEUDAzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:44:53.084342
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: 4649d2b3b999cc07bcc24b0b4f12fba1f2be3d5485f4fea9c951d5f9d68a9408
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4649d2b_20231221T114420498048_embedding_proba__6_VirusPseAAC.yml
results:
  fit_time:
  - 20.58090376853943
  - 20.392560958862305
  - 20.18546152114868
  - 20.6712965965271
  - 20.594456911087036
  score_time:
  - 4.068920612335205
  - 4.316742658615112
  - 4.187132358551025
  - 4.210569620132446
  - 4.415771245956421
  test_average_precision_macro:
  - 0.29992259721475756
  - 0.4396552656314688
  - 0.4609768740635538
  - 0.44733942055933623
  - 0.3235527154381061
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43334720811772
  - 0.40632274311835465
  - 0.5237842941153102
  - 0.5402306880751494
  - 0.37859194462141255
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6516666666666666
  - 0.6594202898550724
  - 0.6435897435897436
  - 0.7296546546546547
  - 0.6337037037037037
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4175238860036524
  - 0.44971893891225373
  - 0.524585579407406
  - 0.5286573270998044
  - 0.37417437580786356
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7916666666666666
  - 0.8188405797101449
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111112
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7916666666666666
  - 0.8188405797101449
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111111
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7916666666666666
  - 0.8188405797101453
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111112
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.67
  - 0.7156862745098039
  - 0.6666666666666667
  - 0.6432432432432432
  - 0.710239651416122
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6827880586654792
  - 0.7144220594220595
  - 0.6748989366970082
  - 0.6632805735287549
  - 0.7038522500304353
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6551724137931034
  - 0.6932515337423313
  - 0.647887323943662
  - 0.6323529411764706
  - 0.6822429906542056
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6607142857142858
  - 0.6972049689440994
  - 0.6538461538461541
  - 0.6415701415701417
  - 0.6867724867724869
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5226173184056996
  - 0.5741142952907659
  - 0.5214729762580018
  - 0.495034253532328
  - 0.5678410292506366
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6516666666666666
  - 0.6594202898550724
  - 0.6435897435897434
  - 0.7296546546546547
  - 0.6337037037037037
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.030987408390150947
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.1266600992762247
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.021739130434782608
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.06562039423796671
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7400949613767355
  - 0.7472890165440743
  - 0.7396663905241239
  - 0.8001883380076776
  - 0.7266181701466681
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.45
  - -2.217391304347826
  - -2.5128205128205128
  - -2.1621621621621623
  - -2.3555555555555556
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20833333333333334
  - -0.18115942028985507
  - -0.2136752136752137
  - -0.22522522522522523
  - -0.18888888888888888
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20833333333333334
  - -0.18115942028985507
  - -0.21367521367521367
  - -0.22522522522522523
  - -0.18888888888888888
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20833333333333331
  - -0.18115942028985504
  - -0.2136752136752137
  - -0.22522522522522523
  - -0.18888888888888888
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33
  - -0.28431372549019607
  - -0.33333333333333326
  - -0.3567567567567568
  - -0.28976034858387806
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24125000000000002
  - -0.2184782608695652
  - -0.23205128205128203
  - -0.1735735735735736
  - -0.24080246913580244
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7916666666666666
  - 0.8188405797101449
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111112
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7916666666666666
  - 0.8188405797101449
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111111
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7916666666666666
  - 0.8188405797101453
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111112
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.67
  - 0.7156862745098039
  - 0.6666666666666667
  - 0.6432432432432432
  - 0.710239651416122
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7916666666666666
  - 0.8188405797101449
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111112
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7916666666666666
  - 0.8188405797101449
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111111
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7916666666666666
  - 0.8188405797101453
  - 0.7863247863247863
  - 0.7747747747747747
  - 0.8111111111111112
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.67
  - 0.7156862745098039
  - 0.6666666666666667
  - 0.6432432432432432
  - 0.710239651416122
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5468008062317525
  - 0.6680941916996684
  - 0.6777678365913659
  - 0.704639532580709
  - 0.6175980186559268
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7490526315789474
  - 0.7802178649237472
  - 0.7932608695652175
  - 0.8168604651162791
  - 0.754678126958546
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.75875
  - 0.7815217391304347
  - 0.767948717948718
  - 0.8264264264264265
  - 0.7591975308641976
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5274169791561096
  - 0.6256608390482629
  - 0.6292083772083772
  - 0.6327171717171717
  - 0.5484258628500827
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7260079175491061
  - 0.7279536051642345
  - 0.7130277696681118
  - 0.7176828406859336
  - 0.7427487554799516
  train_average_precision_macro_oob:
  - 0.5982424593404289
  - 0.57515140612161
  - 0.561043234465445
  - 0.6364659784393295
  - 0.5945873030920069
  train_average_precision_micro:
  - 0.7680142885673691
  - 0.7750440983823401
  - 0.7516004623102966
  - 0.7823724708401314
  - 0.7680040938563282
  train_average_precision_micro_oob:
  - 0.6997402292119312
  - 0.6984560299852695
  - 0.6818017443803714
  - 0.7083216224135487
  - 0.701705755197125
  train_average_precision_samples:
  - 0.8144710578842315
  - 0.8283126293995858
  - 0.8250992063492064
  - 0.835392156862745
  - 0.8114711934156378
  train_average_precision_samples_oob:
  - 0.7567198935462408
  - 0.7805210489993097
  - 0.7584656084656084
  - 0.7838235294117647
  - 0.7602194787379973
  train_average_precision_weighted:
  - 0.7475614052708573
  - 0.7612747797363079
  - 0.7431727985983068
  - 0.7616836307240871
  - 0.7566516526481981
  train_average_precision_weighted_oob:
  - 0.6922442225822879
  - 0.7115212193165669
  - 0.6832391806345085
  - 0.7234222032183957
  - 0.6937354918011001
  train_f1_macro:
  - 0.8622754491017964
  - 0.8581780538302278
  - 0.8660714285714287
  - 0.861764705882353
  - 0.8569958847736624
  train_f1_macro_oob:
  - 0.8413173652694611
  - 0.839544513457557
  - 0.8501984126984127
  - 0.8500000000000001
  - 0.838477366255144
  train_f1_micro:
  - 0.8622754491017964
  - 0.8581780538302277
  - 0.8660714285714286
  - 0.861764705882353
  - 0.8569958847736625
  train_f1_micro_oob:
  - 0.8413173652694611
  - 0.839544513457557
  - 0.8501984126984127
  - 0.85
  - 0.838477366255144
  train_f1_samples:
  - 0.8622754491017964
  - 0.8581780538302277
  - 0.8660714285714286
  - 0.861764705882353
  - 0.8569958847736624
  train_f1_samples_oob:
  - 0.8413173652694611
  - 0.8395445134575569
  - 0.8501984126984126
  - 0.85
  - 0.8384773662551441
  train_f1_weighted:
  - 0.8151419932412403
  - 0.8092456969809338
  - 0.8209865629420086
  - 0.8122015142690739
  - 0.8045881702598121
  train_f1_weighted_oob:
  - 0.7725440208691527
  - 0.7715459967244523
  - 0.7888672795851014
  - 0.7885264997087945
  - 0.7667526564707327
  train_jaccard_macro:
  - 0.7638264168534036
  - 0.7580605470187712
  - 0.7694517465070162
  - 0.7635074777981212
  - 0.756788176160654
  train_jaccard_macro_oob:
  - 0.7369911485965362
  - 0.7343060074572745
  - 0.7485318298760634
  - 0.748191881856752
  - 0.7333927773724822
  train_jaccard_micro:
  - 0.7578947368421053
  - 0.7515865820489573
  - 0.7637795275590551
  - 0.7571059431524548
  - 0.7497749774977498
  train_jaccard_micro_oob:
  - 0.7260981912144703
  - 0.7234611953612846
  - 0.7394305435720449
  - 0.7391304347826086
  - 0.7218777679362267
  train_jaccard_samples:
  - 0.7721699458226405
  - 0.7664892043774032
  - 0.7774943310657596
  - 0.7696078431372549
  - 0.7635214579659025
  train_jaccard_samples_oob:
  - 0.7418021100655832
  - 0.7380952380952381
  - 0.7535430839002268
  - 0.7519607843137256
  - 0.7369194591416813
  train_jaccard_weighted:
  - 0.6916062577783197
  - 0.6831972568940522
  - 0.6994243991576166
  - 0.6879150978269025
  - 0.6772325278144508
  train_jaccard_weighted_oob:
  - 0.6370542128363347
  - 0.635130104199432
  - 0.6570928003643925
  - 0.6570968798506301
  - 0.6294363896570787
  train_label_ranking_average_precision_score:
  - 0.8144710578842312
  - 0.828312629399586
  - 0.8250992063492061
  - 0.835392156862745
  - 0.8114711934156378
  train_label_ranking_average_precision_score_oob:
  - 0.7567198935462406
  - 0.7805210489993097
  - 0.7584656084656082
  - 0.7838235294117647
  - 0.7602194787379972
  train_matthews_corrcoef_macro:
  - 0.19447934068839667
  - 0.1941186402298182
  - 0.20050685114613528
  - 0.18841925937606066
  - 0.18946558209919248
  train_matthews_corrcoef_macro_oob:
  - 0.15333078403096545
  - 0.15880739502047755
  - 0.16969064883714893
  - 0.16471885277486645
  - 0.15438245773560058
  train_matthews_corrcoef_micro:
  - 0.5198258550192928
  - 0.5196601413181174
  - 0.5330088570794581
  - 0.5060963203645408
  - 0.5112158481807814
  train_matthews_corrcoef_micro_oob:
  - 0.42139971056170816
  - 0.436232171512701
  - 0.4611274284076293
  - 0.45037445990093733
  - 0.4264631500167186
  train_matthews_corrcoef_samples:
  - 0.3371352757124037
  - 0.3400546872016856
  - 0.3361837839108528
  - 0.3246129386859186
  - 0.3244845809138196
  train_matthews_corrcoef_samples_oob:
  - 0.24757233647665258
  - 0.2583014098093354
  - 0.27463877014168475
  - 0.2669968610847301
  - 0.2511858011623647
  train_matthews_corrcoef_weighted:
  - 0.39587249416462356
  - 0.394071130907178
  - 0.40788006927897863
  - 0.3830667161674834
  - 0.3873404131469021
  train_matthews_corrcoef_weighted_oob:
  - 0.312305606694724
  - 0.32265702519893913
  - 0.34555985950085455
  - 0.3353851810208297
  - 0.31566299226717465
  train_ndgc:
  - 0.8641910987842576
  - 0.8732786674973232
  - 0.8713494580019795
  - 0.8783029793613997
  - 0.861698223515834
  train_ndgc_oob:
  - 0.8213504571802475
  - 0.8389342538786794
  - 0.8225320816621601
  - 0.8409170796137305
  - 0.8226743547854113
  train_neg_coverage_error:
  - -1.8383233532934131
  - -1.8385093167701863
  - -1.8154761904761905
  - -1.7529411764705882
  - -1.876543209876543
  train_neg_coverage_error_oob:
  - -2.0419161676646707
  - -2.062111801242236
  - -2.0595238095238093
  - -1.9705882352941178
  - -2.0864197530864197
  train_neg_hamming_loss_macro:
  - -0.1377245508982036
  - -0.14182194616977226
  - -0.13392857142857142
  - -0.13823529411764704
  - -0.14300411522633744
  train_neg_hamming_loss_macro_oob:
  - -0.15868263473053892
  - -0.16045548654244304
  - -0.1498015873015873
  - -0.15
  - -0.16152263374485595
  train_neg_hamming_loss_micro:
  - -0.1377245508982036
  - -0.14182194616977226
  - -0.13392857142857142
  - -0.13823529411764707
  - -0.14300411522633744
  train_neg_hamming_loss_micro_oob:
  - -0.15868263473053892
  - -0.16045548654244307
  - -0.1498015873015873
  - -0.15
  - -0.16152263374485595
  train_neg_hamming_loss_samples:
  - -0.1377245508982036
  - -0.14182194616977226
  - -0.13392857142857142
  - -0.13823529411764707
  - -0.14300411522633744
  train_neg_hamming_loss_samples_oob:
  - -0.15868263473053892
  - -0.16045548654244307
  - -0.1498015873015873
  - -0.15
  - -0.16152263374485598
  train_neg_hamming_loss_weighted:
  - -0.1848580067587597
  - -0.1907543030190662
  - -0.1790134370579915
  - -0.187798485730926
  - -0.19541182974018795
  train_neg_hamming_loss_weighted_oob:
  - -0.2274559791308472
  - -0.22845400327554777
  - -0.21113272041489864
  - -0.21147350029120557
  - -0.23324734352926724
  train_neg_label_ranking_loss:
  - -0.11856287425149699
  - -0.11520013802622497
  - -0.11635251322751324
  - -0.10911764705882351
  - -0.12222222222222223
  train_neg_label_ranking_loss_oob:
  - -0.1593313373253493
  - -0.15688405797101448
  - -0.16403769841269844
  - -0.14977124183006538
  - -0.16764403292181068
  train_precision_macro:
  - 0.8622754491017964
  - 0.8581780538302278
  - 0.8660714285714287
  - 0.861764705882353
  - 0.8569958847736624
  train_precision_macro_oob:
  - 0.8413173652694611
  - 0.839544513457557
  - 0.8501984126984127
  - 0.8500000000000001
  - 0.838477366255144
  train_precision_micro:
  - 0.8622754491017964
  - 0.8581780538302277
  - 0.8660714285714286
  - 0.861764705882353
  - 0.8569958847736625
  train_precision_micro_oob:
  - 0.8413173652694611
  - 0.839544513457557
  - 0.8501984126984127
  - 0.85
  - 0.838477366255144
  train_precision_samples:
  - 0.8622754491017964
  - 0.8581780538302277
  - 0.8660714285714286
  - 0.861764705882353
  - 0.8569958847736624
  train_precision_samples_oob:
  - 0.8413173652694611
  - 0.8395445134575569
  - 0.8501984126984126
  - 0.85
  - 0.8384773662551441
  train_precision_weighted:
  - 0.8151419932412403
  - 0.8092456969809338
  - 0.8209865629420086
  - 0.8122015142690739
  - 0.8045881702598121
  train_precision_weighted_oob:
  - 0.7725440208691527
  - 0.7715459967244523
  - 0.7888672795851014
  - 0.7885264997087945
  - 0.7667526564707327
  train_recall_macro:
  - 0.8622754491017964
  - 0.8581780538302278
  - 0.8660714285714287
  - 0.861764705882353
  - 0.8569958847736624
  train_recall_macro_oob:
  - 0.8413173652694611
  - 0.839544513457557
  - 0.8501984126984127
  - 0.8500000000000001
  - 0.838477366255144
  train_recall_micro:
  - 0.8622754491017964
  - 0.8581780538302277
  - 0.8660714285714286
  - 0.861764705882353
  - 0.8569958847736625
  train_recall_micro_oob:
  - 0.8413173652694611
  - 0.839544513457557
  - 0.8501984126984127
  - 0.85
  - 0.838477366255144
  train_recall_samples:
  - 0.8622754491017964
  - 0.8581780538302277
  - 0.8660714285714286
  - 0.861764705882353
  - 0.8569958847736624
  train_recall_samples_oob:
  - 0.8413173652694611
  - 0.8395445134575569
  - 0.8501984126984126
  - 0.85
  - 0.8384773662551441
  train_recall_weighted:
  - 0.8151419932412403
  - 0.8092456969809338
  - 0.8209865629420086
  - 0.8122015142690739
  - 0.8045881702598121
  train_recall_weighted_oob:
  - 0.7725440208691527
  - 0.7715459967244523
  - 0.7888672795851014
  - 0.7885264997087945
  - 0.7667526564707327
  train_roc_auc_macro:
  - 0.8359809644416388
  - 0.8380941219526533
  - 0.8258296210134559
  - 0.8527215412348087
  - 0.8419201968520748
  train_roc_auc_macro_oob:
  - 0.8048889305054067
  - 0.7755598131837932
  - 0.7889917780647822
  - 0.8315367550229289
  - 0.813757365305687
  train_roc_auc_micro:
  - 0.8910643564356435
  - 0.8915943160016908
  - 0.8816917671916075
  - 0.9001730857682345
  - 0.8905924334230275
  train_roc_auc_micro_oob:
  - 0.863335396039604
  - 0.8569895619939519
  - 0.8507235338918507
  - 0.8722857004526858
  - 0.8613224409728272
  train_roc_auc_samples:
  - 0.881437125748503
  - 0.884799861973775
  - 0.8836474867724868
  - 0.8908823529411765
  - 0.8777777777777777
  train_roc_auc_samples_oob:
  - 0.8406686626746506
  - 0.8431159420289855
  - 0.8359623015873016
  - 0.8502287581699347
  - 0.8323559670781893
  train_roc_auc_weighted:
  - 0.7808608281877575
  - 0.791654208031058
  - 0.7826304923678562
  - 0.8128417992429332
  - 0.7849273923539124
  train_roc_auc_weighted_oob:
  - 0.771718987677796
  - 0.7752016352055411
  - 0.7643562924491991
  - 0.8107304028618957
  - 0.7768088548558679
start: 2023-12-21 11:44:20.498048
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
