active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T8AzczMzMwEQAAzMzMzMwPAAJiZmZmZ2b8AZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:37:32.087336
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 2af68b900c37adf7ee1b43c353249ee2592c83b17e9a5eab1c8ced6eed32359b
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2af68b9_20231212T163709548448_embedding_proba_weak__1_PlantGO.yml
results:
  fit_time:
  - 5.2695701122283936
  - 5.2757604122161865
  - 5.474465608596802
  - 6.199719667434692
  - 5.500045537948608
  score_time:
  - 2.636786937713623
  - 2.5663530826568604
  - 2.8572545051574707
  - 3.014153003692627
  - 2.9748141765594482
  test_average_precision_macro:
  - 0.8258017080820858
  - 0.7534472016229387
  - 0.7055872431907724
  - 0.7761501551243932
  - 0.7948854822241799
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8201707468255394
  - 0.8097215082414689
  - 0.7807757726940704
  - 0.7857042213228926
  - 0.8287195018217922
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8899402716413025
  - 0.9041594703511802
  - 0.8645262145262145
  - 0.8797335600907028
  - 0.9113004592700025
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.873783357210587
  - 0.8604955289785315
  - 0.829139769798322
  - 0.8415426576342352
  - 0.8778448390164063
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9531786941580757
  - 0.9550949913644214
  - 0.9473905723905723
  - 0.9540816326530611
  - 0.9572758037225042
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9531786941580757
  - 0.9550949913644214
  - 0.9473905723905723
  - 0.9540816326530612
  - 0.9572758037225042
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9531786941580755
  - 0.9550949913644213
  - 0.9473905723905724
  - 0.9540816326530612
  - 0.9572758037225043
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9310688581987941
  - 0.9430299724818405
  - 0.9283017086755405
  - 0.9412660798916723
  - 0.9387705535180821
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9120267368412197
  - 0.9147750904774358
  - 0.9016051260767264
  - 0.9135850351203508
  - 0.919318650082566
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9105457529749692
  - 0.9140495867768595
  - 0.9000399840063974
  - 0.9121951219512195
  - 0.918052738336714
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9159850458819531
  - 0.9195353868928997
  - 0.9052947052947051
  - 0.9174478582641847
  - 0.9232219557092652
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.873133057601485
  - 0.8929059828483857
  - 0.8679471275339047
  - 0.8906976817339791
  - 0.8860097715493465
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8899402716413027
  - 0.9041594703511802
  - 0.8645262145262145
  - 0.8797335600907031
  - 0.9113004592700022
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.504488368650962
  - 0.5013868668073099
  - 0.4031514200771557
  - 0.5328866522320016
  - 0.5707068200584657
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6844923433736481
  - 0.700356154332266
  - 0.6365626639916369
  - 0.6901804127839171
  - 0.7125194589563382
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5830723982716011
  - 0.6296233863102928
  - 0.5380352295888403
  - 0.6130520260802452
  - 0.6493568835791899
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6427661605681799
  - 0.6874533054922375
  - 0.6055504469448404
  - 0.6736435338012442
  - 0.694061944619698
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9184961157266275
  - 0.9301657793745078
  - 0.9004528984190114
  - 0.9125272903808636
  - 0.9348277038804088
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3917525773195876
  - -1.4404145077720207
  - -1.4545454545454546
  - -1.4591836734693877
  - -1.3350253807106598
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0468213058419244
  - -0.04490500863557858
  - -0.05260942760942763
  - -0.04591836734693878
  - -0.04272419627749577
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0468213058419244
  - -0.044905008635578586
  - -0.05260942760942761
  - -0.04591836734693878
  - -0.04272419627749577
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04682130584192439
  - -0.04490500863557858
  - -0.0526094276094276
  - -0.04591836734693878
  - -0.042724196277495755
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06893114180120599
  - -0.05697002751815951
  - -0.07169829132445955
  - -0.05873392010832768
  - -0.06122944648191777
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02688135652053178
  - -0.028732925105982104
  - -0.03220844811753903
  - -0.03045076616505188
  - -0.02324856005059051
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9531786941580757
  - 0.9550949913644214
  - 0.9473905723905723
  - 0.9540816326530611
  - 0.9572758037225042
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9531786941580757
  - 0.9550949913644214
  - 0.9473905723905723
  - 0.9540816326530612
  - 0.9572758037225042
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9531786941580755
  - 0.9550949913644213
  - 0.9473905723905724
  - 0.9540816326530612
  - 0.9572758037225043
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9310688581987941
  - 0.9430299724818405
  - 0.9283017086755405
  - 0.9412660798916723
  - 0.9387705535180821
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9531786941580757
  - 0.9550949913644214
  - 0.9473905723905723
  - 0.9540816326530611
  - 0.9572758037225042
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9531786941580757
  - 0.9550949913644214
  - 0.9473905723905723
  - 0.9540816326530612
  - 0.9572758037225042
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9531786941580755
  - 0.9550949913644213
  - 0.9473905723905724
  - 0.9540816326530612
  - 0.9572758037225043
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9310688581987941
  - 0.9430299724818405
  - 0.9283017086755405
  - 0.9412660798916723
  - 0.9387705535180821
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9821374945316429
  - 0.9629170947330595
  - 0.9751076792825195
  - 0.9696758238023523
  - 0.9768519617450641
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9819568784106716
  - 0.9739328690194227
  - 0.9768548937899315
  - 0.9746364700908243
  - 0.9812941973156895
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9731186434794682
  - 0.9712670748940179
  - 0.967791551882461
  - 0.9695492338349481
  - 0.9767514399494095
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9768049115412489
  - 0.9732925584984763
  - 0.9731570936730245
  - 0.9720099927220797
  - 0.9796706208840658
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7714331198201339
  - 0.801827646925461
  - 0.794073228153219
  - 0.7645892988643112
  - 0.7700148616571721
  train_average_precision_macro_oob:
  - 0.7353854368260047
  - 0.7640258589463271
  - 0.758013095401585
  - 0.7308586953930402
  - 0.7376447413472235
  train_average_precision_micro:
  - 0.8601855479187213
  - 0.8433738168936692
  - 0.847368329391952
  - 0.8409146192775317
  - 0.8531381740646506
  train_average_precision_micro_oob:
  - 0.8205813489229744
  - 0.8082517489317338
  - 0.8093775996926458
  - 0.8063132062881099
  - 0.8141898834997576
  train_average_precision_samples:
  - 0.9321215986394558
  - 0.9281811748053787
  - 0.9341096866096866
  - 0.927117078715544
  - 0.9326148812064305
  train_average_precision_samples_oob:
  - 0.9003856899902819
  - 0.8963072490142554
  - 0.9039295889295891
  - 0.8942911947387651
  - 0.8941522874621465
  train_average_precision_weighted:
  - 0.8811273920421072
  - 0.8869293647436748
  - 0.8803890936990068
  - 0.8806423612669517
  - 0.879571552857268
  train_average_precision_weighted_oob:
  - 0.8437240380071105
  - 0.8497102196500833
  - 0.8489915239176716
  - 0.8480634999756538
  - 0.8448959471990395
  train_f1_macro:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931622
  - 0.9611040068201193
  - 0.9637217242851045
  train_f1_macro_oob:
  - 0.9542942176870747
  - 0.9532908704883227
  - 0.954594017094017
  - 0.9540707587382777
  - 0.9537985488689714
  train_f1_micro:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931624
  - 0.9611040068201193
  - 0.9637217242851046
  train_f1_micro_oob:
  - 0.9542942176870748
  - 0.9532908704883227
  - 0.9545940170940171
  - 0.954070758738278
  - 0.9537985488689714
  train_f1_samples:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931625
  - 0.9611040068201192
  - 0.9637217242851045
  train_f1_samples_oob:
  - 0.9542942176870748
  - 0.9532908704883226
  - 0.954594017094017
  - 0.9540707587382778
  - 0.9537985488689713
  train_f1_weighted:
  - 0.9550015735831698
  - 0.9526132718977279
  - 0.9521784200737827
  - 0.9540626780281452
  - 0.9547058841335138
  train_f1_weighted_oob:
  - 0.9384971070278646
  - 0.9369818253000257
  - 0.9368730753986403
  - 0.940694658246567
  - 0.9381422859097418
  train_jaccard_macro:
  - 0.9293515776016422
  - 0.9279628624761717
  - 0.9280017933604209
  - 0.9255184759102545
  - 0.9305653839716649
  train_jaccard_macro_oob:
  - 0.9137327661121498
  - 0.9119790586333529
  - 0.914180255865286
  - 0.9130317324162663
  - 0.9129318117117573
  train_jaccard_micro:
  - 0.9288569964120964
  - 0.9273657289002557
  - 0.9275123558484349
  - 0.92512052518207
  - 0.9299835255354201
  train_jaccard_micro_oob:
  - 0.9125838585078268
  - 0.9107505070993914
  - 0.9131323454266734
  - 0.9121752419765665
  - 0.9116777154513004
  train_jaccard_samples:
  - 0.9336678627494955
  - 0.9320501154896059
  - 0.9323189630881937
  - 0.9301705966667603
  - 0.9347990038130883
  train_jaccard_samples_oob:
  - 0.9177001569858714
  - 0.915861972422482
  - 0.9181121442659904
  - 0.9173266631067142
  - 0.9166805025959956
  train_jaccard_weighted:
  - 0.9144957692184239
  - 0.9102177714489662
  - 0.9092066178755854
  - 0.9126061978282535
  - 0.9139633034486853
  train_jaccard_weighted_oob:
  - 0.8855467476241209
  - 0.8828878916156276
  - 0.882370637256995
  - 0.88900697434207
  - 0.8849848738798173
  train_label_ranking_average_precision_score:
  - 0.9321215986394558
  - 0.9281811748053785
  - 0.9341096866096869
  - 0.927117078715544
  - 0.9326148812064307
  train_label_ranking_average_precision_score_oob:
  - 0.900385689990282
  - 0.8963072490142555
  - 0.9039295889295892
  - 0.8942911947387651
  - 0.8941522874621468
  train_matthews_corrcoef_macro:
  - 0.5982881345305849
  - 0.6216364060539675
  - 0.6011694575809413
  - 0.583896158491993
  - 0.635064772781977
  train_matthews_corrcoef_macro_oob:
  - 0.5019135544600394
  - 0.522897294849118
  - 0.532899690801971
  - 0.47537531905365005
  - 0.5066565970231149
  train_matthews_corrcoef_micro:
  - 0.75779521796551
  - 0.7559060207572087
  - 0.7539306311429689
  - 0.7476805076050496
  - 0.7656839044566736
  train_matthews_corrcoef_micro_oob:
  - 0.6874210933018913
  - 0.6843864317726429
  - 0.6933406529169992
  - 0.6905763750391719
  - 0.6877738432978114
  train_matthews_corrcoef_samples:
  - 0.7003474731119654
  - 0.7088669790669792
  - 0.6936928449626684
  - 0.6937139798086759
  - 0.7162639974459988
  train_matthews_corrcoef_samples_oob:
  - 0.5949098586216924
  - 0.6023652974213605
  - 0.6093529923750748
  - 0.6072167779800092
  - 0.6003252465977416
  train_matthews_corrcoef_weighted:
  - 0.7462713487776864
  - 0.7524240466080157
  - 0.7437367460694092
  - 0.7433903183737469
  - 0.7599840650354831
  train_matthews_corrcoef_weighted_oob:
  - 0.6630533874177785
  - 0.6660654889801119
  - 0.6738490020516876
  - 0.6645416544399408
  - 0.6657061079374691
  train_ndgc:
  - 0.9503800522157285
  - 0.9473967785482205
  - 0.951635838170877
  - 0.9464712085480587
  - 0.9507482609716794
  train_ndgc_oob:
  - 0.9271628422302839
  - 0.9240640619775271
  - 0.9293442065414277
  - 0.9225486831471483
  - 0.922687142510272
  train_neg_coverage_error:
  - -1.2410714285714286
  - -1.2535031847133757
  - -1.2397435897435898
  - -1.2570332480818414
  - -1.2471190781049937
  train_neg_coverage_error_oob:
  - -1.375
  - -1.3643312101910827
  - -1.3987179487179486
  - -1.4015345268542199
  - -1.412291933418694
  train_neg_hamming_loss_macro:
  - -0.03688350340136055
  - -0.03768577494692144
  - -0.037606837606837605
  - -0.03889599317988065
  - -0.03627827571489543
  train_neg_hamming_loss_macro_oob:
  - -0.045705782312925165
  - -0.04670912951167728
  - -0.045405982905982904
  - -0.04592924126172208
  - -0.0462014511310286
  train_neg_hamming_loss_micro:
  - -0.03688350340136055
  - -0.03768577494692144
  - -0.037606837606837605
  - -0.03889599317988065
  - -0.03627827571489543
  train_neg_hamming_loss_micro_oob:
  - -0.04570578231292517
  - -0.04670912951167728
  - -0.045405982905982904
  - -0.04592924126172208
  - -0.046201451131028595
  train_neg_hamming_loss_samples:
  - -0.03688350340136054
  - -0.03768577494692144
  - -0.0376068376068376
  - -0.03889599317988064
  - -0.036278275714895426
  train_neg_hamming_loss_samples_oob:
  - -0.045705782312925165
  - -0.046709129511677286
  - -0.045405982905982904
  - -0.04592924126172208
  - -0.04620145113102859
  train_neg_hamming_loss_weighted:
  - -0.04499842641683007
  - -0.04738672810227221
  - -0.047821579926217266
  - -0.04593732197185488
  - -0.04529411586648625
  train_neg_hamming_loss_weighted_oob:
  - -0.06150289297213547
  - -0.0630181746999744
  - -0.0631269246013598
  - -0.0593053417534333
  - -0.06185771409025829
  train_neg_label_ranking_loss:
  - -0.014355287569573284
  - -0.015272684380964635
  - -0.014071915738582406
  - -0.015649246084028692
  - -0.014117918407291007
  train_neg_label_ranking_loss_oob:
  - -0.02503822235965093
  - -0.024402624975873383
  - -0.026860053526720197
  - -0.02737326375433792
  - -0.027152446358592326
  train_precision_macro:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931622
  - 0.9611040068201193
  - 0.9637217242851045
  train_precision_macro_oob:
  - 0.9542942176870747
  - 0.9532908704883227
  - 0.954594017094017
  - 0.9540707587382777
  - 0.9537985488689714
  train_precision_micro:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931624
  - 0.9611040068201193
  - 0.9637217242851046
  train_precision_micro_oob:
  - 0.9542942176870748
  - 0.9532908704883227
  - 0.9545940170940171
  - 0.954070758738278
  - 0.9537985488689714
  train_precision_samples:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931625
  - 0.9611040068201192
  - 0.9637217242851045
  train_precision_samples_oob:
  - 0.9542942176870748
  - 0.9532908704883226
  - 0.954594017094017
  - 0.9540707587382778
  - 0.9537985488689713
  train_precision_weighted:
  - 0.9550015735831698
  - 0.9526132718977279
  - 0.9521784200737827
  - 0.9540626780281452
  - 0.9547058841335138
  train_precision_weighted_oob:
  - 0.9384971070278646
  - 0.9369818253000257
  - 0.9368730753986403
  - 0.940694658246567
  - 0.9381422859097418
  train_recall_macro:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931622
  - 0.9611040068201193
  - 0.9637217242851045
  train_recall_macro_oob:
  - 0.9542942176870747
  - 0.9532908704883227
  - 0.954594017094017
  - 0.9540707587382777
  - 0.9537985488689714
  train_recall_micro:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931624
  - 0.9611040068201193
  - 0.9637217242851046
  train_recall_micro_oob:
  - 0.9542942176870748
  - 0.9532908704883227
  - 0.9545940170940171
  - 0.954070758738278
  - 0.9537985488689714
  train_recall_samples:
  - 0.9631164965986394
  - 0.9623142250530785
  - 0.9623931623931625
  - 0.9611040068201192
  - 0.9637217242851045
  train_recall_samples_oob:
  - 0.9542942176870748
  - 0.9532908704883226
  - 0.954594017094017
  - 0.9540707587382778
  - 0.9537985488689713
  train_recall_weighted:
  - 0.9550015735831698
  - 0.9526132718977279
  - 0.9521784200737827
  - 0.9540626780281452
  - 0.9547058841335138
  train_recall_weighted_oob:
  - 0.9384971070278646
  - 0.9369818253000257
  - 0.9368730753986403
  - 0.940694658246567
  - 0.9381422859097418
  train_roc_auc_macro:
  - 0.9875875086980958
  - 0.9882345398439111
  - 0.9871619478841586
  - 0.9870503822192673
  - 0.9866952036236823
  train_roc_auc_macro_oob:
  - 0.9742964044070215
  - 0.9784735711541289
  - 0.9715127035673504
  - 0.9738096434874247
  - 0.9734238725320115
  train_roc_auc_micro:
  - 0.9890766236005593
  - 0.9884425038918585
  - 0.9883849195454408
  - 0.9878698791302706
  - 0.9884288026778332
  train_roc_auc_micro_oob:
  - 0.9794326963094998
  - 0.9812170612015765
  - 0.9776271240379099
  - 0.9788251828584749
  - 0.9788479017595463
  train_roc_auc_samples:
  - 0.9856447124304267
  - 0.9847273156190354
  - 0.9859280842614176
  - 0.9843507539159714
  - 0.9858820815927091
  train_roc_auc_samples_oob:
  - 0.9749617776403489
  - 0.9755973750241265
  - 0.9731399464732798
  - 0.9726267362456621
  - 0.9728475536414076
  train_roc_auc_weighted:
  - 0.9877443530691123
  - 0.9867642415587137
  - 0.9860597282069302
  - 0.9875982217735606
  - 0.9868214809471046
  train_roc_auc_weighted_oob:
  - 0.9756944780570911
  - 0.9766036035828033
  - 0.9741101567339115
  - 0.9764177131387458
  - 0.9743617618596321
start: 2023-12-12 16:37:09.548448
wrapper: null
