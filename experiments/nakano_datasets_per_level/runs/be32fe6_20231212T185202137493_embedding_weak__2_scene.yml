active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMAAMjMzMzPjv4AzMzMzMwNAAGdmZmZm9j8AMjMzMzPjvw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:54:00.417995
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: be32fe675992627cb16fd2f98f21ab0976f57357e7a956c7c109e90e3ebed5b3
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/be32fe6_20231212T185202137493_embedding_weak__2_scene.yml
results:
  fit_time:
  - 65.5767593383789
  - 63.33498692512512
  - 78.3556866645813
  - 67.25358414649963
  - 69.55463171005249
  score_time:
  - 8.282975196838379
  - 8.254163980484009
  - 7.114333391189575
  - 7.676070928573608
  - 7.71319317817688
  test_average_precision_macro:
  - 0.8290991792213666
  - 0.8446308412234421
  - 0.8153642356220919
  - 0.8338665785991144
  - 0.8393345235781089
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8394681471837534
  - 0.853058573552008
  - 0.8191628417154166
  - 0.8422921792790357
  - 0.8374943974186255
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8750860881542699
  - 0.8755532503457815
  - 0.85946416144746
  - 0.8732291666666666
  - 0.8639349930843706
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8177666709380096
  - 0.835257700584789
  - 0.804732499340539
  - 0.821535000740907
  - 0.8296461644540187
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9049586776859505
  - 0.9062932226832642
  - 0.8997912317327766
  - 0.9017361111111111
  - 0.8983402489626556
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9049586776859504
  - 0.9062932226832642
  - 0.8997912317327766
  - 0.9017361111111111
  - 0.8983402489626556
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9049586776859505
  - 0.9062932226832643
  - 0.8997912317327766
  - 0.9017361111111112
  - 0.8983402489626556
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8992499880571347
  - 0.9010128654783021
  - 0.8946871100737755
  - 0.8955834945196647
  - 0.8928534020867744
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8303588610244769
  - 0.8324845453403117
  - 0.8210842429381061
  - 0.8260405480364841
  - 0.8190313140799654
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8264150943396227
  - 0.8286436926968068
  - 0.8178368121442126
  - 0.8210559595320898
  - 0.815442561205273
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8439590712317984
  - 0.8442501481920568
  - 0.8347748285117803
  - 0.8367063492063491
  - 0.8313080418889547
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.82118631211037
  - 0.8240177127255965
  - 0.8129019258485406
  - 0.8162721607306079
  - 0.8103211717298322
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8750860881542698
  - 0.8755532503457814
  - 0.8594641614474597
  - 0.8732291666666666
  - 0.8639349930843704
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6463075613107295
  - 0.6485919306027339
  - 0.6263837221816456
  - 0.6251444886915334
  - 0.6138196636664371
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6435010396015352
  - 0.6496623835837988
  - 0.6235660464241256
  - 0.6315544499778568
  - 0.6132527782526882
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5361883995993579
  - 0.524583217096833
  - 0.5034766981350529
  - 0.5016620707056751
  - 0.4820184292005325
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6269776372817311
  - 0.630671669067313
  - 0.6103785009086009
  - 0.6036123629305723
  - 0.5949847437414012
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9079075018632253
  - 0.9085613994111232
  - 0.8965133503944008
  - 0.9067899816247649
  - 0.8997563236595514
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.421487603305785
  - -1.4273858921161826
  - -1.5052192066805845
  - -1.4625
  - -1.441908713692946
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09504132231404959
  - -0.09370677731673582
  - -0.1002087682672234
  - -0.09826388888888889
  - -0.10165975103734438
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09504132231404959
  - -0.09370677731673582
  - -0.10020876826722339
  - -0.09826388888888889
  - -0.1016597510373444
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09504132231404959
  - -0.09370677731673584
  - -0.10020876826722337
  - -0.09826388888888889
  - -0.1016597510373444
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10075001194286534
  - -0.09898713452169795
  - -0.10531288992622444
  - -0.10441650548033526
  - -0.10714659791322564
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0684400826446281
  - -0.06846473029045644
  - -0.08293319415448851
  - -0.07442708333333334
  - -0.07214730290456431
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9049586776859505
  - 0.9062932226832642
  - 0.8997912317327766
  - 0.9017361111111111
  - 0.8983402489626556
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9049586776859504
  - 0.9062932226832642
  - 0.8997912317327766
  - 0.9017361111111111
  - 0.8983402489626556
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9049586776859505
  - 0.9062932226832643
  - 0.8997912317327766
  - 0.9017361111111112
  - 0.8983402489626556
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8992499880571347
  - 0.9010128654783021
  - 0.8946871100737755
  - 0.8955834945196647
  - 0.8928534020867744
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9049586776859505
  - 0.9062932226832642
  - 0.8997912317327766
  - 0.9017361111111111
  - 0.8983402489626556
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9049586776859504
  - 0.9062932226832642
  - 0.8997912317327766
  - 0.9017361111111111
  - 0.8983402489626556
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9049586776859505
  - 0.9062932226832643
  - 0.8997912317327766
  - 0.9017361111111112
  - 0.8983402489626556
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8992499880571347
  - 0.9010128654783021
  - 0.8946871100737755
  - 0.8955834945196647
  - 0.8928534020867744
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.94298042544975
  - 0.9481889737841719
  - 0.9341809901015362
  - 0.9413494250640674
  - 0.9445327685412598
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9513723779401606
  - 0.9539814720553802
  - 0.9416339985671719
  - 0.9462408455304252
  - 0.9496460823996961
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9315599173553719
  - 0.9315352697095436
  - 0.9170668058455115
  - 0.9255729166666666
  - 0.9278526970954356
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9380286780893501
  - 0.9441680036392076
  - 0.9283923775565744
  - 0.9354037594078339
  - 0.9400804601057068
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9798636821356949
  - 0.9765279118078886
  - 0.9800419365908496
  - 0.9757100858182656
  - 0.97959447948075
  train_average_precision_macro_oob:
  - 0.8559661748534303
  - 0.851024376031163
  - 0.8589842395640171
  - 0.8514338969968183
  - 0.8492265082947371
  train_average_precision_micro:
  - 0.9772464480513602
  - 0.9720821265886113
  - 0.9758720821903728
  - 0.9698126264880119
  - 0.9763978175404893
  train_average_precision_micro_oob:
  - 0.8626335378334471
  - 0.8556223345626263
  - 0.865126215361289
  - 0.8550510246162673
  - 0.8587173632940318
  train_average_precision_samples:
  - 0.9775957704974865
  - 0.9756277056277057
  - 0.9785615491009682
  - 0.9731447846393357
  - 0.9766233766233766
  train_average_precision_samples_oob:
  - 0.8805858901022708
  - 0.8842987012987014
  - 0.8861600968188104
  - 0.876690883930116
  - 0.8835238095238095
  train_average_precision_weighted:
  - 0.9800278156994114
  - 0.976729310482481
  - 0.9801278125199774
  - 0.9761063151558337
  - 0.9794128871202582
  train_average_precision_weighted_oob:
  - 0.8470072455950554
  - 0.8419345589634698
  - 0.850484064795945
  - 0.8426399697283756
  - 0.8396485042940599
  train_f1_macro:
  - 0.952851447391229
  - 0.9531601731601732
  - 0.9539246196403873
  - 0.9514789828749352
  - 0.9531601731601732
  train_f1_macro_oob:
  - 0.9034494713121859
  - 0.9019913419913421
  - 0.9023167358229599
  - 0.9030444559764746
  - 0.9008658008658008
  train_f1_micro:
  - 0.952851447391229
  - 0.9531601731601732
  - 0.9539246196403873
  - 0.9514789828749352
  - 0.9531601731601732
  train_f1_micro_oob:
  - 0.9034494713121858
  - 0.901991341991342
  - 0.9023167358229599
  - 0.9030444559764746
  - 0.9008658008658008
  train_f1_samples:
  - 0.9528514473912291
  - 0.9531601731601732
  - 0.9539246196403872
  - 0.9514789828749352
  - 0.9531601731601732
  train_f1_samples_oob:
  - 0.9034494713121859
  - 0.9019913419913421
  - 0.90231673582296
  - 0.9030444559764746
  - 0.900865800865801
  train_f1_weighted:
  - 0.9511502628546574
  - 0.9513398980130122
  - 0.9521532420523768
  - 0.9497813821506255
  - 0.9513859087772131
  train_f1_weighted_oob:
  - 0.8979349687056214
  - 0.8965241528297623
  - 0.8969281965055339
  - 0.8976982893002724
  - 0.895427316644708
  train_jaccard_macro:
  - 0.9104020116201862
  - 0.9109908327892158
  - 0.9123437340157777
  - 0.9078609734840498
  - 0.9109724117039736
  train_jaccard_macro_oob:
  - 0.8277426215861977
  - 0.8250567898811169
  - 0.8256259506977758
  - 0.8267203662182946
  - 0.8233873997343499
  train_jaccard_micro:
  - 0.9099486839927164
  - 0.9105119510379621
  - 0.9119081067680357
  - 0.9074486513239297
  - 0.9105119510379621
  train_jaccard_micro_oob:
  - 0.8239013594688587
  - 0.8214792619460652
  - 0.8220192156245077
  - 0.823227942915714
  - 0.8196140212682158
  train_jaccard_samples:
  - 0.9221083129039447
  - 0.9229560915275201
  - 0.9241009681881052
  - 0.9201448093508291
  - 0.9228571428571428
  train_jaccard_samples_oob:
  - 0.8388306960849862
  - 0.8372789115646257
  - 0.8372233748271092
  - 0.8385351026762546
  - 0.8348794063079776
  train_jaccard_weighted:
  - 0.9073121956469677
  - 0.9076957405194721
  - 0.9091372813406426
  - 0.9047959042015281
  - 0.9077564524127174
  train_jaccard_weighted_oob:
  - 0.818930370871518
  - 0.8163386296920574
  - 0.8170099928164712
  - 0.8181800113215661
  - 0.8146840224518584
  train_label_ranking_average_precision_score:
  - 0.9775957704974865
  - 0.9756277056277054
  - 0.9785615491009678
  - 0.9731447846393355
  - 0.9766233766233765
  train_label_ranking_average_precision_score_oob:
  - 0.880585890102271
  - 0.8842987012987013
  - 0.8861600968188105
  - 0.8766908839301156
  - 0.8835238095238098
  train_matthews_corrcoef_macro:
  - 0.836373268360597
  - 0.8378632548722763
  - 0.8404124816823813
  - 0.8312387722773993
  - 0.8377813849606138
  train_matthews_corrcoef_macro_oob:
  - 0.6372256477078383
  - 0.633118154502824
  - 0.6327369082263704
  - 0.6381745878194244
  - 0.627068069791346
  train_matthews_corrcoef_micro:
  - 0.8334262844970628
  - 0.8344768880507699
  - 0.8371371586342904
  - 0.8280510368506845
  - 0.8346813311291792
  train_matthews_corrcoef_micro_oob:
  - 0.6386588347751961
  - 0.6317733023385237
  - 0.6329346225252074
  - 0.6362369334784033
  - 0.6277823074864345
  train_matthews_corrcoef_samples:
  - 0.7828755492361318
  - 0.7896950361925885
  - 0.790751147032433
  - 0.7827997117068167
  - 0.7886827331806142
  train_matthews_corrcoef_samples_oob:
  - 0.5010297528843874
  - 0.5010826035854155
  - 0.4954974589407973
  - 0.5012455836367107
  - 0.48893655743991715
  train_matthews_corrcoef_weighted:
  - 0.8323433315642155
  - 0.833508577340653
  - 0.8361773782179549
  - 0.827317646203386
  - 0.833515917809728
  train_matthews_corrcoef_weighted_oob:
  - 0.618650600656218
  - 0.6149629640959751
  - 0.614759210064087
  - 0.6206266973305138
  - 0.6090768457092205
  train_ndgc:
  - 0.9836032168519604
  - 0.982085977608757
  - 0.9843226939524894
  - 0.9802712328565526
  - 0.9828833610046146
  train_ndgc_oob:
  - 0.9119981866685267
  - 0.9147876703058055
  - 0.9162255859685501
  - 0.9089266825867376
  - 0.9140779759003975
  train_neg_coverage_error:
  - -1.1232449297971918
  - -1.1283116883116884
  - -1.1224066390041494
  - -1.1328489880643486
  - -1.1267532467532468
  train_neg_coverage_error_oob:
  - -1.423816952678107
  - -1.4155844155844155
  - -1.404564315352697
  - -1.4322781525687598
  - -1.4228571428571428
  train_neg_hamming_loss_macro:
  - -0.047148552608771016
  - -0.04683982683982684
  - -0.04607538035961273
  - -0.04852101712506487
  - -0.04683982683982684
  train_neg_hamming_loss_macro_oob:
  - -0.09655052868781418
  - -0.09800865800865803
  - -0.09768326417704011
  - -0.09695554402352534
  - -0.09913419913419914
  train_neg_hamming_loss_micro:
  - -0.047148552608771016
  - -0.04683982683982684
  - -0.04607538035961273
  - -0.04852101712506487
  - -0.04683982683982684
  train_neg_hamming_loss_micro_oob:
  - -0.09655052868781418
  - -0.098008658008658
  - -0.09768326417704011
  - -0.09695554402352534
  - -0.09913419913419913
  train_neg_hamming_loss_samples:
  - -0.04714855260877101
  - -0.046839826839826834
  - -0.046075380359612714
  - -0.04852101712506487
  - -0.046839826839826834
  train_neg_hamming_loss_samples_oob:
  - -0.09655052868781416
  - -0.098008658008658
  - -0.0976832641770401
  - -0.09695554402352533
  - -0.09913419913419913
  train_neg_hamming_loss_weighted:
  - -0.04884973714534254
  - -0.048660101986987864
  - -0.047846757947623136
  - -0.05021861784937451
  - -0.04861409122278688
  train_neg_hamming_loss_weighted_oob:
  - -0.10206503129437859
  - -0.1034758471702379
  - -0.10307180349446618
  - -0.10230171069972767
  - -0.10457268335529206
  train_neg_label_ranking_loss:
  - -0.009581383255330214
  - -0.010714285714285714
  - -0.009660269709543569
  - -0.01180591593149974
  - -0.01007792207792208
  train_neg_label_ranking_loss_oob:
  - -0.06787571502860115
  - -0.06623376623376623
  - -0.06408195020746889
  - -0.0701219512195122
  - -0.06776623376623378
  train_precision_macro:
  - 0.952851447391229
  - 0.9531601731601732
  - 0.9539246196403873
  - 0.9514789828749352
  - 0.9531601731601732
  train_precision_macro_oob:
  - 0.9034494713121859
  - 0.9019913419913421
  - 0.9023167358229599
  - 0.9030444559764746
  - 0.9008658008658008
  train_precision_micro:
  - 0.952851447391229
  - 0.9531601731601732
  - 0.9539246196403873
  - 0.9514789828749352
  - 0.9531601731601732
  train_precision_micro_oob:
  - 0.9034494713121858
  - 0.901991341991342
  - 0.9023167358229599
  - 0.9030444559764746
  - 0.9008658008658008
  train_precision_samples:
  - 0.9528514473912291
  - 0.9531601731601732
  - 0.9539246196403872
  - 0.9514789828749352
  - 0.9531601731601732
  train_precision_samples_oob:
  - 0.9034494713121859
  - 0.9019913419913421
  - 0.90231673582296
  - 0.9030444559764746
  - 0.900865800865801
  train_precision_weighted:
  - 0.9511502628546574
  - 0.9513398980130122
  - 0.9521532420523768
  - 0.9497813821506255
  - 0.9513859087772131
  train_precision_weighted_oob:
  - 0.8979349687056214
  - 0.8965241528297623
  - 0.8969281965055339
  - 0.8976982893002724
  - 0.895427316644708
  train_recall_macro:
  - 0.952851447391229
  - 0.9531601731601732
  - 0.9539246196403873
  - 0.9514789828749352
  - 0.9531601731601732
  train_recall_macro_oob:
  - 0.9034494713121859
  - 0.9019913419913421
  - 0.9023167358229599
  - 0.9030444559764746
  - 0.9008658008658008
  train_recall_micro:
  - 0.952851447391229
  - 0.9531601731601732
  - 0.9539246196403873
  - 0.9514789828749352
  - 0.9531601731601732
  train_recall_micro_oob:
  - 0.9034494713121858
  - 0.901991341991342
  - 0.9023167358229599
  - 0.9030444559764746
  - 0.9008658008658008
  train_recall_samples:
  - 0.9528514473912291
  - 0.9531601731601732
  - 0.9539246196403872
  - 0.9514789828749352
  - 0.9531601731601732
  train_recall_samples_oob:
  - 0.9034494713121859
  - 0.9019913419913421
  - 0.90231673582296
  - 0.9030444559764746
  - 0.900865800865801
  train_recall_weighted:
  - 0.9511502628546574
  - 0.9513398980130122
  - 0.9521532420523768
  - 0.9497813821506255
  - 0.9513859087772131
  train_recall_weighted_oob:
  - 0.8979349687056214
  - 0.8965241528297623
  - 0.8969281965055339
  - 0.8976982893002724
  - 0.895427316644708
  train_roc_auc_macro:
  - 0.996330032063795
  - 0.9956975528106734
  - 0.9962964030754199
  - 0.995578849306684
  - 0.9963643274965489
  train_roc_auc_macro_oob:
  - 0.9503145613139433
  - 0.948833592168516
  - 0.9512434999484611
  - 0.9487347624909739
  - 0.9490079856392436
  train_roc_auc_micro:
  - 0.9960607899616704
  - 0.9951679288906151
  - 0.9959068258169601
  - 0.9947974878972732
  - 0.9959581065655638
  train_roc_auc_micro_oob:
  - 0.9558611430888778
  - 0.9541020816393639
  - 0.9569493535579762
  - 0.9544121116502778
  - 0.9548961964165598
  train_roc_auc_samples:
  - 0.9904186167446698
  - 0.9892857142857143
  - 0.9903397302904564
  - 0.9881940840685003
  - 0.989922077922078
  train_roc_auc_samples_oob:
  - 0.9321242849713988
  - 0.9337662337662338
  - 0.9359180497925311
  - 0.9298780487804879
  - 0.9322337662337662
  train_roc_auc_weighted:
  - 0.9963324730384093
  - 0.995690957681484
  - 0.996266779488789
  - 0.9956261665344585
  - 0.9963117752870546
  train_roc_auc_weighted_oob:
  - 0.9462780916995406
  - 0.9447397472262957
  - 0.9473643059873427
  - 0.9447574375359693
  - 0.9449312788712019
start: 2023-12-12 18:52:02.137493
wrapper: null
