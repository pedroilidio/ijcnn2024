active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMCAzMzMzMwMwIAzMzMzMwtAwJmZmZmZEUAAmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:26:33.849311
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: 7bf5ae2092d7d613844fca0cc9dc18d69c81bef3421073aefeaa7c0ec6da65a1
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7bf5ae2_20231222T162349802448_embedding_weak__2_scene.yml
results:
  fit_time:
  - 84.94547724723816
  - 105.57981586456299
  - 110.34494018554688
  - 109.48354864120483
  - 107.47752094268799
  score_time:
  - 10.599059343338013
  - 8.187674045562744
  - 7.495608329772949
  - 8.3126962184906
  - 7.318307638168335
  test_average_precision_macro:
  - 0.8334708191676302
  - 0.8293788494196154
  - 0.826704631740208
  - 0.839341820180993
  - 0.8531460224048755
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.841980029977219
  - 0.8378091134035321
  - 0.8407050172814513
  - 0.844999726968651
  - 0.8639970337291799
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8695936639118457
  - 0.8693127147766323
  - 0.872768479776848
  - 0.8816037735849056
  - 0.8874741200828157
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.821919577085504
  - 0.8184086817807803
  - 0.8156166528899408
  - 0.8304161359292928
  - 0.841964366897532
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334732
  - 0.9026915113871636
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334731
  - 0.9026915113871635
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334731
  - 0.9026915113871636
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8909019251898914
  - 0.8946619075156036
  - 0.8975219118991932
  - 0.8926592235060862
  - 0.8973269456080377
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8149418010891223
  - 0.8227746453674595
  - 0.8261038447364957
  - 0.8177704055487056
  - 0.8260460521529934
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8116032439176544
  - 0.81875
  - 0.8226882745471878
  - 0.8142630744849445
  - 0.8226415094339623
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8278728846910665
  - 0.8349533627884141
  - 0.8390117553297467
  - 0.8318358790056902
  - 0.8383121364487822
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8067967604718725
  - 0.8136365314370629
  - 0.8177752145927626
  - 0.8098154053561805
  - 0.8174529550097321
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8695936639118454
  - 0.8693127147766322
  - 0.8727684797768477
  - 0.8816037735849054
  - 0.8874741200828157
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.60469760240704
  - 0.6197867196758031
  - 0.6387804001071625
  - 0.6151069492648271
  - 0.6342708305545379
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6045077779273558
  - 0.6213132082953048
  - 0.6370244846023785
  - 0.6149782547135062
  - 0.6326315611703636
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4710136471373725
  - 0.4922351475793919
  - 0.518609122457793
  - 0.4992699036573846
  - 0.5015900037486322
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5872333869779193
  - 0.6004852781953868
  - 0.6222156026529923
  - 0.5990684492595233
  - 0.6168443056887143
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9035567733149767
  - 0.903787322198536
  - 0.9061947297277935
  - 0.9133888305912237
  - 0.9170631902466785
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4359504132231404
  - -1.4144329896907217
  - -1.4476987447698744
  - -1.4465408805031446
  - -1.391304347826087
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10399449035812673
  - -0.09965635738831614
  - -0.09728033472803348
  - -0.1023759608665269
  - -0.09730848861283643
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10399449035812672
  - -0.09965635738831616
  - -0.09728033472803348
  - -0.10237596086652691
  - -0.09730848861283643
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10399449035812672
  - -0.09965635738831617
  - -0.09728033472803348
  - -0.10237596086652691
  - -0.09730848861283643
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10909807481010844
  - -0.1053380924843965
  - -0.10247808810080687
  - -0.10734077649391383
  - -0.10267305439196238
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0715909090909091
  - -0.06778350515463917
  - -0.0717573221757322
  - -0.06954926624737946
  - -0.062474120082815734
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334732
  - 0.9026915113871636
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334731
  - 0.9026915113871635
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334731
  - 0.9026915113871636
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8909019251898914
  - 0.8946619075156036
  - 0.8975219118991932
  - 0.8926592235060862
  - 0.8973269456080377
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334732
  - 0.9026915113871636
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334731
  - 0.9026915113871635
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8960055096418733
  - 0.9003436426116839
  - 0.9027196652719666
  - 0.8976240391334731
  - 0.9026915113871636
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8909019251898914
  - 0.8946619075156036
  - 0.8975219118991932
  - 0.8926592235060862
  - 0.8973269456080377
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9419726242952725
  - 0.9410375194681754
  - 0.9439074793681913
  - 0.9444208581848518
  - 0.9497846149344994
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9510007553632813
  - 0.9482460529219249
  - 0.9506074619878615
  - 0.949798271179048
  - 0.9588385761427762
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.928409090909091
  - 0.9322164948453608
  - 0.9282426778242678
  - 0.9304507337526206
  - 0.9375258799171844
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9369603147255351
  - 0.9356184176234134
  - 0.9384486576444522
  - 0.9403007895119815
  - 0.9444563383285439
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9938077072592028
  - 0.9941098089203209
  - 0.9945859059184917
  - 0.9948772135201053
  - 0.9946698684282964
  train_average_precision_macro_oob:
  - 0.8580659972731949
  - 0.8552093397772161
  - 0.8557680498106671
  - 0.8609977733501873
  - 0.8572117158886007
  train_average_precision_micro:
  - 0.9935110766010472
  - 0.9936117623030454
  - 0.9939280419751424
  - 0.9946131874953053
  - 0.9943164075066959
  train_average_precision_micro_oob:
  - 0.862580968243837
  - 0.8628731745325416
  - 0.8621482933270764
  - 0.8658190681961196
  - 0.8618910023411281
  train_average_precision_samples:
  - 0.9878661813139191
  - 0.9898109608047172
  - 0.9895455330914119
  - 0.9887305699481865
  - 0.9892584892584894
  train_average_precision_samples_oob:
  - 0.8823236262783845
  - 0.8854231703087062
  - 0.881886124071194
  - 0.8836701208981
  - 0.882835239085239
  train_average_precision_weighted:
  - 0.9937079573693183
  - 0.9940022363926505
  - 0.9945660346750165
  - 0.9948077447001233
  - 0.9946329945090682
  train_average_precision_weighted_oob:
  - 0.8493767493835627
  - 0.8459809779115365
  - 0.8466501795315956
  - 0.8518772468411615
  - 0.8486451224691519
  train_f1_macro:
  - 0.9568382735309412
  - 0.9556018036767254
  - 0.956367720753413
  - 0.9568221070811744
  - 0.9541753291753291
  train_f1_macro_oob:
  - 0.8974692321026175
  - 0.898976760319112
  - 0.8964057369967168
  - 0.8986183074265975
  - 0.8946638946638946
  train_f1_micro:
  - 0.9568382735309412
  - 0.9556018036767256
  - 0.9563677207534128
  - 0.9568221070811744
  - 0.9541753291753292
  train_f1_micro_oob:
  - 0.8974692321026174
  - 0.898976760319112
  - 0.8964057369967168
  - 0.8986183074265975
  - 0.8946638946638946
  train_f1_samples:
  - 0.9568382735309412
  - 0.9556018036767256
  - 0.9563677207534129
  - 0.9568221070811744
  - 0.9541753291753291
  train_f1_samples_oob:
  - 0.8974692321026175
  - 0.8989767603191121
  - 0.8964057369967168
  - 0.8986183074265977
  - 0.8946638946638947
  train_f1_weighted:
  - 0.9550715620105926
  - 0.9536407312659887
  - 0.9546021079061019
  - 0.9552055134141547
  - 0.9523723634405123
  train_f1_weighted_oob:
  - 0.8922665909540544
  - 0.8938366607156875
  - 0.8909330056462844
  - 0.8931976349616971
  - 0.8892062211298556
  train_jaccard_macro:
  - 0.9176973463281798
  - 0.9155309995464719
  - 0.9168543420157178
  - 0.91759799651686
  - 0.912824074767042
  train_jaccard_macro_oob:
  - 0.8173694764689222
  - 0.819961400473051
  - 0.8161159679937575
  - 0.8196061728056637
  - 0.8131919756107148
  train_jaccard_micro:
  - 0.9172482552342971
  - 0.9149784124875456
  - 0.9163838066065072
  - 0.9172185430463576
  - 0.9123664375051769
  train_jaccard_micro_oob:
  - 0.8140083326782486
  - 0.8164920847444278
  - 0.8122602364362327
  - 0.8159008938372275
  - 0.8094043887147335
  train_jaccard_samples:
  - 0.9272589951217095
  - 0.925325801496457
  - 0.9265718729171295
  - 0.9272267456205279
  - 0.9229160479160479
  train_jaccard_samples_oob:
  - 0.8288264863927889
  - 0.8316238045686536
  - 0.8265323755214891
  - 0.8303355539106834
  - 0.8239159489159487
  train_jaccard_weighted:
  - 0.9144830493856388
  - 0.9119767754722082
  - 0.9136392815662839
  - 0.9146605308718223
  - 0.9095601288560045
  train_jaccard_weighted_oob:
  - 0.8090982750645754
  - 0.811718893633825
  - 0.807420419301962
  - 0.8109524156621167
  - 0.8045369059430388
  train_label_ranking_average_precision_score:
  - 0.987866181313919
  - 0.9898109608047172
  - 0.9895455330914116
  - 0.9887305699481863
  - 0.989258489258489
  train_label_ranking_average_precision_score_oob:
  - 0.8823236262783842
  - 0.8854231703087061
  - 0.8818861240711938
  - 0.8836701208981002
  - 0.882835239085239
  train_matthews_corrcoef_macro:
  - 0.8519135835858416
  - 0.8480124599566378
  - 0.8499886913498371
  - 0.8512201029513292
  - 0.842467116540182
  train_matthews_corrcoef_macro_oob:
  - 0.6126864257090509
  - 0.6191248784524896
  - 0.6047294798302999
  - 0.6155892158539975
  - 0.5979544698209072
  train_matthews_corrcoef_micro:
  - 0.8490469741558133
  - 0.8446728964616937
  - 0.8470923785224356
  - 0.8487356186920616
  - 0.8394837691630525
  train_matthews_corrcoef_micro_oob:
  - 0.6129047399673443
  - 0.6200281068419389
  - 0.6080415515332271
  - 0.6175215761850746
  - 0.60147008452903
  train_matthews_corrcoef_samples:
  - 0.787425651679917
  - 0.7835078755011003
  - 0.7876791718727828
  - 0.7871603772955856
  - 0.7747671433017225
  train_matthews_corrcoef_samples_oob:
  - 0.464564130617623
  - 0.47686892045485046
  - 0.452717424631219
  - 0.46578073739776626
  - 0.44654013971703277
  train_matthews_corrcoef_weighted:
  - 0.8476411605155619
  - 0.8430966444320291
  - 0.845654902870446
  - 0.8474837990737164
  - 0.8380915290877857
  train_matthews_corrcoef_weighted_oob:
  - 0.5958843112697007
  - 0.6025559083175999
  - 0.5861719379579229
  - 0.5976421162655807
  - 0.5793639229423726
  train_ndgc:
  - 0.9911496508397953
  - 0.992596552288877
  - 0.9924363721524209
  - 0.9917611114368586
  - 0.9922376824263399
  train_ndgc_oob:
  - 0.9134024487861243
  - 0.9155879595648344
  - 0.9129319712448304
  - 0.9140567843825281
  - 0.9137347633914296
  train_neg_coverage_error:
  - -1.1024440977639105
  - -1.0998959417273673
  - -1.0979782270606533
  - -1.0984455958549222
  - -1.1008316008316008
  train_neg_coverage_error_oob:
  - -1.4175767030681228
  - -1.4110301768990634
  - -1.4209434940383618
  - -1.4031088082901555
  - -1.4215176715176716
  train_neg_hamming_loss_macro:
  - -0.04316172646905877
  - -0.04439819632327436
  - -0.04363227924658717
  - -0.04317789291882556
  - -0.04582467082467082
  train_neg_hamming_loss_macro_oob:
  - -0.10253076789738257
  - -0.10102323968088796
  - -0.10359426300328323
  - -0.10138169257340242
  - -0.10533610533610534
  train_neg_hamming_loss_micro:
  - -0.04316172646905876
  - -0.044398196323274366
  - -0.04363227924658718
  - -0.04317789291882556
  - -0.04582467082467082
  train_neg_hamming_loss_micro_oob:
  - -0.10253076789738257
  - -0.10102323968088796
  - -0.10359426300328323
  - -0.10138169257340242
  - -0.10533610533610534
  train_neg_hamming_loss_samples:
  - -0.04316172646905876
  - -0.044398196323274366
  - -0.04363227924658717
  - -0.04317789291882556
  - -0.04582467082467082
  train_neg_hamming_loss_samples_oob:
  - -0.10253076789738257
  - -0.10102323968088796
  - -0.10359426300328321
  - -0.10138169257340242
  - -0.10533610533610531
  train_neg_hamming_loss_weighted:
  - -0.04492843798940728
  - -0.04635926873401136
  - -0.04539789209389819
  - -0.04479448658584533
  - -0.0476276365594877
  train_neg_hamming_loss_weighted_oob:
  - -0.10773340904594557
  - -0.10616333928431258
  - -0.10906699435371552
  - -0.1068023650383029
  - -0.11079377887014427
  train_neg_label_ranking_loss:
  - -0.00546021840873635
  - -0.004578563995837669
  - -0.00489891135303266
  - -0.00516839378238342
  - -0.004833679833679834
  train_neg_label_ranking_loss_oob:
  - -0.06651066042641707
  - -0.06491935483870968
  - -0.06778123379989633
  - -0.06474093264248705
  - -0.06706081081081082
  train_precision_macro:
  - 0.9568382735309412
  - 0.9556018036767254
  - 0.956367720753413
  - 0.9568221070811744
  - 0.9541753291753291
  train_precision_macro_oob:
  - 0.8974692321026175
  - 0.898976760319112
  - 0.8964057369967168
  - 0.8986183074265975
  - 0.8946638946638946
  train_precision_micro:
  - 0.9568382735309412
  - 0.9556018036767256
  - 0.9563677207534128
  - 0.9568221070811744
  - 0.9541753291753292
  train_precision_micro_oob:
  - 0.8974692321026174
  - 0.898976760319112
  - 0.8964057369967168
  - 0.8986183074265975
  - 0.8946638946638946
  train_precision_samples:
  - 0.9568382735309412
  - 0.9556018036767256
  - 0.9563677207534129
  - 0.9568221070811744
  - 0.9541753291753291
  train_precision_samples_oob:
  - 0.8974692321026175
  - 0.8989767603191121
  - 0.8964057369967168
  - 0.8986183074265977
  - 0.8946638946638947
  train_precision_weighted:
  - 0.9550715620105926
  - 0.9536407312659887
  - 0.9546021079061019
  - 0.9552055134141547
  - 0.9523723634405123
  train_precision_weighted_oob:
  - 0.8922665909540544
  - 0.8938366607156875
  - 0.8909330056462844
  - 0.8931976349616971
  - 0.8892062211298556
  train_recall_macro:
  - 0.9568382735309412
  - 0.9556018036767254
  - 0.956367720753413
  - 0.9568221070811744
  - 0.9541753291753291
  train_recall_macro_oob:
  - 0.8974692321026175
  - 0.898976760319112
  - 0.8964057369967168
  - 0.8986183074265975
  - 0.8946638946638946
  train_recall_micro:
  - 0.9568382735309412
  - 0.9556018036767256
  - 0.9563677207534128
  - 0.9568221070811744
  - 0.9541753291753292
  train_recall_micro_oob:
  - 0.8974692321026174
  - 0.898976760319112
  - 0.8964057369967168
  - 0.8986183074265975
  - 0.8946638946638946
  train_recall_samples:
  - 0.9568382735309412
  - 0.9556018036767256
  - 0.9563677207534129
  - 0.9568221070811744
  - 0.9541753291753291
  train_recall_samples_oob:
  - 0.8974692321026175
  - 0.8989767603191121
  - 0.8964057369967168
  - 0.8986183074265977
  - 0.8946638946638947
  train_recall_weighted:
  - 0.9550715620105926
  - 0.9536407312659887
  - 0.9546021079061019
  - 0.9552055134141547
  - 0.9523723634405123
  train_recall_weighted_oob:
  - 0.8922665909540544
  - 0.8938366607156875
  - 0.8909330056462844
  - 0.8931976349616971
  - 0.8892062211298556
  train_roc_auc_macro:
  - 0.9984667367977339
  - 0.9985768735045135
  - 0.9986764029325083
  - 0.9987853267387109
  - 0.9987109686823968
  train_roc_auc_macro_oob:
  - 0.9504398274999423
  - 0.9511621168555225
  - 0.9487433123723709
  - 0.951786307323923
  - 0.9509629795600535
  train_roc_auc_micro:
  - 0.9984920143703723
  - 0.9985503449087738
  - 0.9986095771336113
  - 0.998765033024517
  - 0.9986788513946931
  train_roc_auc_micro_oob:
  - 0.9558244526896207
  - 0.9570049937787254
  - 0.9552677917764245
  - 0.9573460233448498
  - 0.9558515643033038
  train_roc_auc_samples:
  - 0.9945397815912637
  - 0.9954214360041622
  - 0.9951010886469673
  - 0.9948316062176167
  - 0.9951663201663201
  train_roc_auc_samples_oob:
  - 0.933489339573583
  - 0.9350806451612903
  - 0.9322187662001037
  - 0.9352590673575131
  - 0.9329391891891893
  train_roc_auc_weighted:
  - 0.9984184175560482
  - 0.9985335737201558
  - 0.9986458168711735
  - 0.9987471099248881
  - 0.9986800641786453
  train_roc_auc_weighted_oob:
  - 0.9464088152165497
  - 0.947026886219159
  - 0.9446234424899369
  - 0.9477274552487606
  - 0.9469877114776739
start: 2023-12-22 16:23:49.802448
wrapper: null
