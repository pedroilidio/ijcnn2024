active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2PwCamZmZmdk/YGZmZmZmEsBAMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:07:25.871788
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__5
  params: {}
hash: 31be19d00c0b8bacc447da665c704502a35df6ed02350c71159281f3f3800432
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/31be19d_20231221T100701458868_embedding_proba__5_VirusPseAAC.yml
results:
  fit_time:
  - 13.826288223266602
  - 13.979740858078003
  - 13.80120325088501
  - 14.146942138671875
  - 13.694413423538208
  score_time:
  - 3.388978958129883
  - 3.65529727935791
  - 3.4117183685302734
  - 3.7401211261749268
  - 3.6554582118988037
  test_average_precision_macro:
  - 0.45012826409224727
  - 0.4286637739713956
  - 0.36510134293876223
  - 0.2974473848904147
  - 0.4700017522452895
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4685452397487373
  - 0.45063968160042045
  - 0.4008629986860619
  - 0.3831922815572761
  - 0.46513733600021995
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7154761904761904
  - 0.63125
  - 0.6283875338753387
  - 0.6255434782608694
  - 0.6573830409356725
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4745566640837312
  - 0.46744663830097166
  - 0.4127929615305014
  - 0.38392286463875624
  - 0.4758604053734242
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8055555555555555
  - 0.7708333333333334
  - 0.7804878048780487
  - 0.8115942028985507
  - 0.7850877192982456
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8055555555555556
  - 0.7708333333333334
  - 0.7804878048780488
  - 0.8115942028985508
  - 0.7850877192982456
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8055555555555556
  - 0.7708333333333333
  - 0.7804878048780488
  - 0.8115942028985508
  - 0.7850877192982456
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.685617103984451
  - 0.644
  - 0.6510318949343339
  - 0.7101449275362319
  - 0.6436842105263159
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7017501658023201
  - 0.6591862679132784
  - 0.6716991405418106
  - 0.7052952177328318
  - 0.6793246948285708
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6744186046511628
  - 0.6271186440677966
  - 0.64
  - 0.6829268292682927
  - 0.6462093862815884
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6916099773242631
  - 0.6398809523809523
  - 0.6596980255516842
  - 0.69824016563147
  - 0.6660401002506267
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5427437160976136
  - 0.5003126936772808
  - 0.5082372534449978
  - 0.5684631694649238
  - 0.4991097102725009
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7154761904761904
  - 0.63125
  - 0.6283875338753386
  - 0.6255434782608695
  - 0.6573830409356723
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03852651868243351
  - -0.004866309687281531
  - 0.04564581073221311
  - 0.052811103602441706
  - 0.07985836115082133
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2387767785356717
  - 0.1609336285645035
  - 0.1306745613109708
  - 0.26306590273602093
  - 0.2448315212886834
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.18127605624090157
  - 0.09986832980505138
  - 0.09268292682926829
  - 0.20676002083084555
  - 0.20732909016276888
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0801980592981269
  - -0.009927271762054324
  - 0.02130175878353529
  - 0.10562220720488341
  - 0.07873268621088372
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7881781758018478
  - 0.7262853651955229
  - 0.7280260356203923
  - 0.7233455303177788
  - 0.7441329998092904
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.119047619047619
  - -2.65
  - -2.5365853658536586
  - -2.3043478260869565
  - -2.473684210526316
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19444444444444442
  - -0.22916666666666666
  - -0.21951219512195122
  - -0.18840579710144925
  - -0.21491228070175436
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19444444444444445
  - -0.22916666666666666
  - -0.21951219512195122
  - -0.18840579710144928
  - -0.2149122807017544
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19444444444444442
  - -0.22916666666666666
  - -0.21951219512195122
  - -0.18840579710144925
  - -0.21491228070175436
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31438289601554903
  - -0.3559999999999999
  - -0.34896810506566606
  - -0.28985507246376807
  - -0.3563157894736842
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19166666666666668
  - -0.2725
  - -0.25589430894308945
  - -0.2375
  - -0.23706140350877197
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8055555555555555
  - 0.7708333333333334
  - 0.7804878048780487
  - 0.8115942028985507
  - 0.7850877192982456
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8055555555555556
  - 0.7708333333333334
  - 0.7804878048780488
  - 0.8115942028985508
  - 0.7850877192982456
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8055555555555556
  - 0.7708333333333333
  - 0.7804878048780488
  - 0.8115942028985508
  - 0.7850877192982456
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.685617103984451
  - 0.644
  - 0.6510318949343339
  - 0.7101449275362319
  - 0.6436842105263159
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8055555555555555
  - 0.7708333333333334
  - 0.7804878048780487
  - 0.8115942028985507
  - 0.7850877192982456
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8055555555555556
  - 0.7708333333333334
  - 0.7804878048780488
  - 0.8115942028985508
  - 0.7850877192982456
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8055555555555556
  - 0.7708333333333333
  - 0.7804878048780488
  - 0.8115942028985508
  - 0.7850877192982456
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.685617103984451
  - 0.644
  - 0.6510318949343339
  - 0.7101449275362319
  - 0.6436842105263159
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6597804150900125
  - 0.6086744952991251
  - 0.5686895370399206
  - 0.5932903585033403
  - 0.6094085550887022
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7890821353171811
  - 0.7528421052631579
  - 0.7410785091197462
  - 0.7585185185185186
  - 0.7822471910112359
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8083333333333332
  - 0.7275
  - 0.7441056910569106
  - 0.7625
  - 0.7629385964912281
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6305513784461153
  - 0.5802510228139518
  - 0.5518181707562978
  - 0.612173098481415
  - 0.5849814425770307
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9493083585592589
  - 0.9630267501391624
  - 0.9279271842087743
  - 0.9863071953446365
  - 0.9617967493952323
  train_average_precision_macro_oob:
  - 0.7179125258257154
  - 0.7594695856966455
  - 0.7780801988692551
  - 0.8258927353150444
  - 0.7502811030761478
  train_average_precision_micro:
  - 0.9868119395799955
  - 0.9916813531901824
  - 0.9935596609273767
  - 0.992488906708669
  - 0.9873221717614018
  train_average_precision_micro_oob:
  - 0.8990777699826972
  - 0.9200160783433399
  - 0.9300887819136139
  - 0.9182361600527217
  - 0.896211563065004
  train_average_precision_samples:
  - 0.9797979797979798
  - 0.9900199600798404
  - 0.9919678714859439
  - 0.9917184265010354
  - 0.9802761341222879
  train_average_precision_samples_oob:
  - 0.8993939393939394
  - 0.9228542914171657
  - 0.9248326639892904
  - 0.9375776397515527
  - 0.9118343195266272
  train_average_precision_weighted:
  - 0.9847974784733455
  - 0.989597987675666
  - 0.9818940852984861
  - 0.995706640532384
  - 0.9896235546077358
  train_average_precision_weighted_oob:
  - 0.8834451741676955
  - 0.9084818105181259
  - 0.9187399046108992
  - 0.925690403556099
  - 0.8916501284394618
  train_f1_macro:
  - 0.9525252525252524
  - 0.9491017964071857
  - 0.9578313253012047
  - 0.9544513457556936
  - 0.9506903353057199
  train_f1_macro_oob:
  - 0.9292929292929294
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966874
  - 0.9309664694280079
  train_f1_micro:
  - 0.9525252525252526
  - 0.9491017964071856
  - 0.9578313253012049
  - 0.9544513457556936
  - 0.9506903353057199
  train_f1_micro_oob:
  - 0.9292929292929293
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966874
  - 0.9309664694280079
  train_f1_samples:
  - 0.9525252525252527
  - 0.9491017964071856
  - 0.9578313253012049
  - 0.9544513457556937
  - 0.95069033530572
  train_f1_samples_oob:
  - 0.9292929292929292
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966875
  - 0.930966469428008
  train_f1_weighted:
  - 0.9730407523510972
  - 0.9673326614098534
  - 0.976234939759036
  - 0.9743518432681314
  - 0.9640283554982716
  train_f1_weighted_oob:
  - 0.948350500074638
  - 0.9422541056500859
  - 0.9525
  - 0.9420598869008994
  - 0.9410041595875562
  train_jaccard_macro:
  - 0.911698278825094
  - 0.9050862890108533
  - 0.9215112384064215
  - 0.9155151449173795
  - 0.9079004579514688
  train_jaccard_macro_oob:
  - 0.870943013944158
  - 0.8682294176150585
  - 0.8828702791623089
  - 0.865671230320063
  - 0.8719324486273639
  train_jaccard_micro:
  - 0.9093539054966249
  - 0.9031339031339032
  - 0.9190751445086706
  - 0.9128712871287129
  - 0.9060150375939849
  train_jaccard_micro_oob:
  - 0.8679245283018868
  - 0.8659217877094972
  - 0.8810198300283286
  - 0.863066538090646
  - 0.8708487084870848
  train_jaccard_samples:
  - 0.9219336219336219
  - 0.9161676646706587
  - 0.9294320137693631
  - 0.9236912156166815
  - 0.9182868413637645
  train_jaccard_samples_oob:
  - 0.8847041847041845
  - 0.8833761049329911
  - 0.8952954675846242
  - 0.8803608399881692
  - 0.8878557340095801
  train_jaccard_weighted:
  - 0.9492643501390962
  - 0.9382722181462521
  - 0.9552598743125367
  - 0.9518605110387333
  - 0.9317459633581445
  train_jaccard_weighted_oob:
  - 0.9048334183019139
  - 0.8928862486407476
  - 0.9109778212763309
  - 0.8928661727497189
  - 0.889460112983355
  train_label_ranking_average_precision_score:
  - 0.9797979797979798
  - 0.9900199600798404
  - 0.9919678714859439
  - 0.9917184265010351
  - 0.9802761341222879
  train_label_ranking_average_precision_score_oob:
  - 0.8993939393939394
  - 0.9228542914171657
  - 0.9248326639892904
  - 0.9375776397515527
  - 0.9118343195266273
  train_matthews_corrcoef_macro:
  - 0.47493838775123404
  - 0.45805608270544357
  - 0.5258791984651684
  - 0.48205482066207933
  - 0.4741867541828526
  train_matthews_corrcoef_macro_oob:
  - 0.3754376067633965
  - 0.3697946572473738
  - 0.4127408944479885
  - 0.37103788312966274
  - 0.40373709044295386
  train_matthews_corrcoef_micro:
  - 0.8515666035394241
  - 0.8382875233323085
  - 0.866259619238729
  - 0.8594255371667077
  - 0.8412241562621963
  train_matthews_corrcoef_micro_oob:
  - 0.7745965236281417
  - 0.7678141481772115
  - 0.7962168638387644
  - 0.768709166327732
  - 0.7745953687659175
  train_matthews_corrcoef_samples:
  - 0.7936610390743595
  - 0.7710407882176937
  - 0.7966382336608554
  - 0.792926572847552
  - 0.7822735174430201
  train_matthews_corrcoef_samples_oob:
  - 0.6805403659587997
  - 0.6768978849562995
  - 0.6877245642178818
  - 0.659856701300132
  - 0.695114806625655
  train_matthews_corrcoef_weighted:
  - 0.780204138364227
  - 0.7664305073703078
  - 0.8104222273137797
  - 0.7890926351676321
  - 0.7637587825556581
  train_matthews_corrcoef_weighted_oob:
  - 0.6882321784122211
  - 0.6802490122195431
  - 0.7185523197512772
  - 0.6817082447355057
  - 0.6925967583812911
  train_ndgc:
  - 0.9849922364502172
  - 0.992889281735704
  - 0.9938984153052981
  - 0.9941034195199977
  - 0.9853474497886735
  train_ndgc_oob:
  - 0.9269819538952272
  - 0.9445447108119248
  - 0.9455263169360977
  - 0.9551184112726033
  - 0.9370566651651744
  train_neg_coverage_error:
  - -1.2787878787878788
  - -1.2335329341317365
  - -1.2409638554216869
  - -1.2732919254658386
  - -1.242603550295858
  train_neg_coverage_error_oob:
  - -1.6242424242424243
  - -1.467065868263473
  - -1.4819277108433735
  - -1.4906832298136645
  - -1.5266272189349113
  train_neg_hamming_loss_macro:
  - -0.047474747474747475
  - -0.05089820359281438
  - -0.042168674698795185
  - -0.04554865424430641
  - -0.04930966469428008
  train_neg_hamming_loss_macro_oob:
  - -0.0707070707070707
  - -0.07185628742514971
  - -0.06325301204819278
  - -0.07349896480331262
  - -0.06903353057199212
  train_neg_hamming_loss_micro:
  - -0.047474747474747475
  - -0.05089820359281437
  - -0.04216867469879518
  - -0.045548654244306416
  - -0.04930966469428008
  train_neg_hamming_loss_micro_oob:
  - -0.0707070707070707
  - -0.0718562874251497
  - -0.06325301204819277
  - -0.07349896480331262
  - -0.06903353057199212
  train_neg_hamming_loss_samples:
  - -0.04747474747474747
  - -0.05089820359281437
  - -0.04216867469879518
  - -0.045548654244306416
  - -0.049309664694280074
  train_neg_hamming_loss_samples_oob:
  - -0.07070707070707072
  - -0.0718562874251497
  - -0.06325301204819277
  - -0.07349896480331262
  - -0.0690335305719921
  train_neg_hamming_loss_weighted:
  - -0.026959247648902826
  - -0.03266733859014644
  - -0.023765060240963858
  - -0.025648156731868602
  - -0.03597164450172828
  train_neg_hamming_loss_weighted_oob:
  - -0.05164949992536199
  - -0.05774589434991403
  - -0.0475
  - -0.057940113099100764
  - -0.058995840412443615
  train_neg_label_ranking_loss:
  - -0.009696969696969697
  - -0.004341317365269461
  - -0.007228915662650602
  - -0.004503105590062112
  - -0.009467455621301775
  train_neg_label_ranking_loss_oob:
  - -0.0734006734006734
  - -0.04677312042581504
  - -0.05140562248995985
  - -0.04392684610075914
  - -0.059007232084155155
  train_precision_macro:
  - 0.9525252525252524
  - 0.9491017964071857
  - 0.9578313253012047
  - 0.9544513457556936
  - 0.9506903353057199
  train_precision_macro_oob:
  - 0.9292929292929294
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966874
  - 0.9309664694280079
  train_precision_micro:
  - 0.9525252525252526
  - 0.9491017964071856
  - 0.9578313253012049
  - 0.9544513457556936
  - 0.9506903353057199
  train_precision_micro_oob:
  - 0.9292929292929293
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966874
  - 0.9309664694280079
  train_precision_samples:
  - 0.9525252525252527
  - 0.9491017964071856
  - 0.9578313253012049
  - 0.9544513457556937
  - 0.95069033530572
  train_precision_samples_oob:
  - 0.9292929292929292
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966875
  - 0.930966469428008
  train_precision_weighted:
  - 0.9730407523510972
  - 0.9673326614098534
  - 0.976234939759036
  - 0.9743518432681314
  - 0.9640283554982716
  train_precision_weighted_oob:
  - 0.948350500074638
  - 0.9422541056500859
  - 0.9525
  - 0.9420598869008994
  - 0.9410041595875562
  train_recall_macro:
  - 0.9525252525252524
  - 0.9491017964071857
  - 0.9578313253012047
  - 0.9544513457556936
  - 0.9506903353057199
  train_recall_macro_oob:
  - 0.9292929292929294
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966874
  - 0.9309664694280079
  train_recall_micro:
  - 0.9525252525252526
  - 0.9491017964071856
  - 0.9578313253012049
  - 0.9544513457556936
  - 0.9506903353057199
  train_recall_micro_oob:
  - 0.9292929292929293
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966874
  - 0.9309664694280079
  train_recall_samples:
  - 0.9525252525252527
  - 0.9491017964071856
  - 0.9578313253012049
  - 0.9544513457556937
  - 0.95069033530572
  train_recall_samples_oob:
  - 0.9292929292929292
  - 0.9281437125748503
  - 0.9367469879518072
  - 0.9265010351966875
  - 0.930966469428008
  train_recall_weighted:
  - 0.9730407523510972
  - 0.9673326614098534
  - 0.976234939759036
  - 0.9743518432681314
  - 0.9640283554982716
  train_recall_weighted_oob:
  - 0.948350500074638
  - 0.9422541056500859
  - 0.9525
  - 0.9420598869008994
  - 0.9410041595875562
  train_roc_auc_macro:
  - 0.9966714409234743
  - 0.9971369864113325
  - 0.9965995022785
  - 0.9988714874197173
  - 0.9976963016782329
  train_roc_auc_macro_oob:
  - 0.9582802029887661
  - 0.9643165991028483
  - 0.96400577154006
  - 0.9622413627637764
  - 0.9566690680883011
  train_roc_auc_micro:
  - 0.9959627193119722
  - 0.9972957920792079
  - 0.9979396984924623
  - 0.997398627776152
  - 0.9962932253816514
  train_roc_auc_micro_oob:
  - 0.9532989903668605
  - 0.965358910891089
  - 0.9683793969849246
  - 0.9633531687965402
  - 0.9556833146368825
  train_roc_auc_samples:
  - 0.9903030303030304
  - 0.9956586826347306
  - 0.9927710843373495
  - 0.9954968944099379
  - 0.9905325443786983
  train_roc_auc_samples_oob:
  - 0.9265993265993265
  - 0.9532268795741848
  - 0.9485943775100402
  - 0.9560731538992409
  - 0.9409927679158449
  train_roc_auc_weighted:
  - 0.9987450038103393
  - 0.9989058370644608
  - 0.998783365549828
  - 0.9994449031961867
  - 0.9987132667515117
  train_roc_auc_weighted_oob:
  - 0.9789594576738171
  - 0.980493023449187
  - 0.9813223999010725
  - 0.9785748282146254
  - 0.9720603036092985
start: 2023-12-21 10:07:01.458868
wrapper: null
