active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/MzMzMzMz87+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAADwPwAAAAAAAPC/AAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T8yMzMzMzPzv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/aGZmZmZm9j+YmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:57:40.094940
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 7661c29ac93e74308beb23b4624a79172bae19efe17c0b830d8f1905f82f0564
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7661c29_20231212T165707948574_embedding_proba__5_birds.yml
results:
  fit_time:
  - 12.810669660568237
  - 12.755764484405518
  - 13.776127576828003
  - 14.911993265151978
  - 13.846951961517334
  score_time:
  - 5.447725057601929
  - 5.432311296463013
  - 5.4499218463897705
  - 5.65045428276062
  - 5.768615961074829
  test_average_precision_macro:
  - 0.5155469906677926
  - 0.5133992379360109
  - 0.4810730167078989
  - 0.44798063641079366
  - 0.42347805687910794
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5532630758567811
  - 0.5082128335837202
  - 0.5771921401381541
  - 0.46227950425336206
  - 0.4765664247763054
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3255088433485006
  - 0.3461939175948464
  - 0.2980006753752164
  - 0.3344004640903266
  - 0.3434743364210928
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5945100512633507
  - 0.5695105357707305
  - 0.6047297294875338
  - 0.5226674776806033
  - 0.5025317418506272
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9575683394532843
  - 0.9543043655650756
  - 0.9620563035495716
  - 0.9530803753569972
  - 0.9547123623011015
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9575683394532843
  - 0.9543043655650755
  - 0.9620563035495716
  - 0.9530803753569972
  - 0.9547123623011016
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9575683394532843
  - 0.9543043655650755
  - 0.9620563035495716
  - 0.9530803753569971
  - 0.9547123623011017
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9411207763773004
  - 0.9352450894678558
  - 0.9480743201673436
  - 0.9325995621042665
  - 0.9313399778516057
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9196374179460751
  - 0.9138448581621648
  - 0.9279104485604419
  - 0.9118277763752324
  - 0.9153285406243099
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9185909980430529
  - 0.9126024190401872
  - 0.9268867924528302
  - 0.9103663289166017
  - 0.9133489461358314
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9230159459684232
  - 0.9172843559092296
  - 0.9325383693937789
  - 0.9161735074272992
  - 0.9181416942792069
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8896427822602916
  - 0.8795960384755481
  - 0.9020275235201441
  - 0.8753376659502536
  - 0.8742342199440272
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7673693084647795
  - 0.7803024447266295
  - 0.8251324583209528
  - 0.8072686811445903
  - 0.7465751116148915
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.20486039797162156
  - 0.15588559806542304
  - 0.2416555116182504
  - 0.1666069133451406
  - 0.19458723251510873
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.45182707758994484
  - 0.40409044610393635
  - 0.5115921530265821
  - 0.389153497805055
  - 0.433459638836622
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14267863835206498
  - 0.13990153591136567
  - 0.1740026289168409
  - 0.14313638059288236
  - 0.17783416032580565
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3615638822102429
  - 0.2988147010988228
  - 0.39222007622573957
  - 0.3018652376088754
  - 0.3296850998652565
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.39294827949831057
  - 0.40954172600633976
  - 0.3522489006185538
  - 0.3927675550977947
  - 0.41740054764721324
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.1627906976744184
  - -3.3488372093023258
  - -2.705426356589147
  - -3.108527131782946
  - -3.4263565891472867
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04243166054671563
  - -0.04569563443492452
  - -0.037943696450428395
  - -0.04691962464300286
  - -0.04528763769889841
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04243166054671563
  - -0.04569563443492452
  - -0.037943696450428395
  - -0.04691962464300286
  - -0.04528763769889841
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04243166054671562
  - -0.045695634434924526
  - -0.037943696450428395
  - -0.04691962464300285
  - -0.04528763769889841
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.058879223622699574
  - -0.06475491053214433
  - -0.051925679832656585
  - -0.06740043789573348
  - -0.06866002214839424
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09609145983974986
  - -0.09911415470580998
  - -0.07427247981283548
  - -0.08742716724932868
  - -0.10575315397476819
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9575683394532843
  - 0.9543043655650756
  - 0.9620563035495716
  - 0.9530803753569972
  - 0.9547123623011015
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9575683394532843
  - 0.9543043655650755
  - 0.9620563035495716
  - 0.9530803753569972
  - 0.9547123623011016
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9575683394532843
  - 0.9543043655650755
  - 0.9620563035495716
  - 0.9530803753569971
  - 0.9547123623011017
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9411207763773004
  - 0.9352450894678558
  - 0.9480743201673436
  - 0.9325995621042665
  - 0.9313399778516057
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9575683394532843
  - 0.9543043655650756
  - 0.9620563035495716
  - 0.9530803753569972
  - 0.9547123623011015
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9575683394532843
  - 0.9543043655650755
  - 0.9620563035495716
  - 0.9530803753569972
  - 0.9547123623011016
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9575683394532843
  - 0.9543043655650755
  - 0.9620563035495716
  - 0.9530803753569971
  - 0.9547123623011017
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9411207763773004
  - 0.9352450894678558
  - 0.9480743201673436
  - 0.9325995621042665
  - 0.9313399778516057
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8989585641533753
  - 0.8539306895544942
  - 0.8878650307191222
  - 0.8777442078090527
  - 0.8066539303920438
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9085976572782312
  - 0.8755992656360485
  - 0.9223570575183477
  - 0.8980899578836538
  - 0.8808864265927978
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8964559877153946
  - 0.8545067171944968
  - 0.9094785195807261
  - 0.8847699179869791
  - 0.8498245005358992
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9386061264647519
  - 0.9309213296158684
  - 0.9443677382687533
  - 0.9391972207600991
  - 0.9268926925266074
  train_average_precision_macro_oob:
  - 0.5912540136741984
  - 0.6083584478865796
  - 0.5745671861945097
  - 0.6140218132991456
  - 0.5987394573517207
  train_average_precision_micro:
  - 0.9312047887110968
  - 0.9285983228078446
  - 0.9234408899645116
  - 0.9387221138274425
  - 0.9241248803049356
  train_average_precision_micro_oob:
  - 0.7738644780822763
  - 0.7771866562079361
  - 0.7594487640049767
  - 0.7898798746000819
  - 0.7656359552530717
  train_average_precision_samples:
  - 0.5161248769533653
  - 0.5109922942045035
  - 0.5300368370862556
  - 0.5271806170788729
  - 0.5036171865386981
  train_average_precision_samples_oob:
  - 0.4528220180665461
  - 0.4440472062770285
  - 0.4679267539852355
  - 0.4598949373573177
  - 0.4362233085984796
  train_average_precision_weighted:
  - 0.9458837821398196
  - 0.9457441632400113
  - 0.9477027960968878
  - 0.9511382160343638
  - 0.938815970553715
  train_average_precision_weighted_oob:
  - 0.7452461941273769
  - 0.767017685217681
  - 0.7322113395171785
  - 0.7660852216378045
  - 0.7472835118425538
  train_f1_macro:
  - 0.9730722154222764
  - 0.9740922072623418
  - 0.9715422276621785
  - 0.9728682170542634
  - 0.9734802121583026
  train_f1_macro_oob:
  - 0.9651162790697675
  - 0.9634842921256629
  - 0.9645042839657281
  - 0.9670542635658913
  - 0.9663402692778458
  train_f1_micro:
  - 0.9730722154222766
  - 0.9740922072623419
  - 0.9715422276621787
  - 0.9728682170542635
  - 0.9734802121583027
  train_f1_micro_oob:
  - 0.9651162790697675
  - 0.963484292125663
  - 0.9645042839657283
  - 0.9670542635658915
  - 0.9663402692778458
  train_f1_samples:
  - 0.9730722154222766
  - 0.9740922072623419
  - 0.9715422276621787
  - 0.9728682170542635
  - 0.9734802121583028
  train_f1_samples_oob:
  - 0.9651162790697675
  - 0.963484292125663
  - 0.9645042839657284
  - 0.9670542635658916
  - 0.9663402692778458
  train_f1_weighted:
  - 0.9702076570767931
  - 0.972101950631612
  - 0.9679792107117688
  - 0.9703558776883514
  - 0.971614664702644
  train_f1_weighted_oob:
  - 0.9570975439844666
  - 0.9545931348480113
  - 0.9575405214940099
  - 0.9608919916403575
  - 0.9600388340847208
  train_jaccard_macro:
  - 0.9477632648393538
  - 0.9497230884956988
  - 0.9450002443124874
  - 0.9474886592385533
  - 0.9485571981120823
  train_jaccard_macro_oob:
  - 0.9331475850770462
  - 0.9301497191603283
  - 0.9320111395598171
  - 0.9366884180013618
  - 0.9353369177472606
  train_jaccard_micro:
  - 0.9475566150178785
  - 0.9494929409425333
  - 0.9446593275810771
  - 0.9471698113207547
  - 0.9483306836248012
  train_jaccard_micro_oob:
  - 0.9325842696629213
  - 0.9295414288525881
  - 0.9314420803782506
  - 0.9362101313320825
  - 0.9348727057430433
  train_jaccard_samples:
  - 0.9506216651565489
  - 0.9524678023919684
  - 0.9476433772945402
  - 0.9500524528835955
  - 0.951474918183715
  train_jaccard_samples_oob:
  - 0.9370344897771592
  - 0.9337730183534025
  - 0.9352629647624593
  - 0.9398176478055144
  - 0.9388822502068206
  train_jaccard_weighted:
  - 0.9423030109873946
  - 0.9459346364073921
  - 0.9382537572829173
  - 0.942720730507733
  - 0.9449998681116737
  train_jaccard_weighted_oob:
  - 0.9182706201608607
  - 0.9135585755253075
  - 0.9189792950171498
  - 0.925083226096629
  - 0.9234923552127527
  train_label_ranking_average_precision_score:
  - 0.9754272025347606
  - 0.9722326042820226
  - 0.9680213332102866
  - 0.978731004675772
  - 0.9726094346007135
  train_label_ranking_average_precision_score_oob:
  - 0.9121243436479415
  - 0.9052875163545475
  - 0.9059112501092664
  - 0.9114453249542168
  - 0.9052155566604947
  train_matthews_corrcoef_macro:
  - 0.3861254945335439
  - 0.40128596538497513
  - 0.3829976936422209
  - 0.3686865300945221
  - 0.3852804672210873
  train_matthews_corrcoef_macro_oob:
  - 0.25718242619308046
  - 0.23841779641142538
  - 0.25956384881491706
  - 0.28712117879415866
  - 0.27921448372058405
  train_matthews_corrcoef_micro:
  - 0.6936709200399754
  - 0.7060464361837154
  - 0.6764182127247615
  - 0.6908871543763802
  - 0.6980755601139526
  train_matthews_corrcoef_micro_oob:
  - 0.5789363668478642
  - 0.5508189662239865
  - 0.5745897754929961
  - 0.6075949219742919
  - 0.5964759193975492
  train_matthews_corrcoef_samples:
  - 0.31142142202393835
  - 0.3263878233934119
  - 0.3072699827435415
  - 0.3066604554761083
  - 0.3135440376133106
  train_matthews_corrcoef_samples_oob:
  - 0.23656571636975587
  - 0.21505944674366695
  - 0.2414569030850957
  - 0.24679178025221116
  - 0.23571579622492836
  train_matthews_corrcoef_weighted:
  - 0.6152214151527217
  - 0.6364222305920468
  - 0.5940122695248312
  - 0.6005673532836745
  - 0.6221533519346799
  train_matthews_corrcoef_weighted_oob:
  - 0.4661569678178969
  - 0.4337373342965267
  - 0.4543739034567655
  - 0.4994027225219891
  - 0.4872943388668303
  train_ndgc:
  - 0.5259367286893704
  - 0.5209357623259342
  - 0.5418984213320516
  - 0.5357998648430652
  - 0.5141035071373194
  train_ndgc_oob:
  - 0.483409174669498
  - 0.47577282192864795
  - 0.5004970074089797
  - 0.4910938185870846
  - 0.46806866752207577
  train_neg_coverage_error:
  - -1.1627906976744187
  - -1.1434108527131783
  - -1.187984496124031
  - -1.1395348837209303
  - -1.1666666666666667
  train_neg_coverage_error_oob:
  - -1.9186046511627908
  - -1.930232558139535
  - -1.945736434108527
  - -1.8875968992248062
  - -1.8914728682170543
  train_neg_hamming_loss_macro:
  - -0.026927784577723386
  - -0.0259077927376581
  - -0.0284577723378213
  - -0.027131782945736437
  - -0.026519787841697274
  train_neg_hamming_loss_macro_oob:
  - -0.03488372093023256
  - -0.03651570787433701
  - -0.03549571603427173
  - -0.03294573643410853
  - -0.033659730722154224
  train_neg_hamming_loss_micro:
  - -0.02692778457772338
  - -0.0259077927376581
  - -0.028457772337821298
  - -0.027131782945736434
  - -0.026519787841697267
  train_neg_hamming_loss_micro_oob:
  - -0.03488372093023256
  - -0.03651570787433701
  - -0.03549571603427173
  - -0.03294573643410853
  - -0.033659730722154224
  train_neg_hamming_loss_samples:
  - -0.026927784577723376
  - -0.025907792737658097
  - -0.028457772337821294
  - -0.027131782945736434
  - -0.026519787841697267
  train_neg_hamming_loss_samples_oob:
  - -0.03488372093023256
  - -0.036515707874337
  - -0.03549571603427172
  - -0.03294573643410853
  - -0.033659730722154224
  train_neg_hamming_loss_weighted:
  - -0.0297923429232069
  - -0.027898049368388165
  - -0.03202078928823115
  - -0.029644122311648657
  - -0.028385335297356012
  train_neg_hamming_loss_weighted_oob:
  - -0.042902456015533524
  - -0.04540686515198857
  - -0.042459478505990134
  - -0.03910800835964249
  - -0.0399611659152792
  train_neg_label_ranking_loss:
  - -0.00486573579938833
  - -0.005172233622131023
  - -0.005937791783380018
  - -0.004053006861659392
  - -0.005352415514009222
  train_neg_label_ranking_loss_oob:
  - -0.0320692048932473
  - -0.03531001523050086
  - -0.03403915506771184
  - -0.030683042447748332
  - -0.03188959195286145
  train_precision_macro:
  - 0.9730722154222764
  - 0.9740922072623418
  - 0.9715422276621785
  - 0.9728682170542634
  - 0.9734802121583026
  train_precision_macro_oob:
  - 0.9651162790697675
  - 0.9634842921256629
  - 0.9645042839657281
  - 0.9670542635658913
  - 0.9663402692778458
  train_precision_micro:
  - 0.9730722154222766
  - 0.9740922072623419
  - 0.9715422276621787
  - 0.9728682170542635
  - 0.9734802121583027
  train_precision_micro_oob:
  - 0.9651162790697675
  - 0.963484292125663
  - 0.9645042839657283
  - 0.9670542635658915
  - 0.9663402692778458
  train_precision_samples:
  - 0.9730722154222766
  - 0.9740922072623419
  - 0.9715422276621787
  - 0.9728682170542635
  - 0.9734802121583028
  train_precision_samples_oob:
  - 0.9651162790697675
  - 0.963484292125663
  - 0.9645042839657284
  - 0.9670542635658916
  - 0.9663402692778458
  train_precision_weighted:
  - 0.9702076570767931
  - 0.972101950631612
  - 0.9679792107117688
  - 0.9703558776883514
  - 0.971614664702644
  train_precision_weighted_oob:
  - 0.9570975439844666
  - 0.9545931348480113
  - 0.9575405214940099
  - 0.9608919916403575
  - 0.9600388340847208
  train_recall_macro:
  - 0.9730722154222764
  - 0.9740922072623418
  - 0.9715422276621785
  - 0.9728682170542634
  - 0.9734802121583026
  train_recall_macro_oob:
  - 0.9651162790697675
  - 0.9634842921256629
  - 0.9645042839657281
  - 0.9670542635658913
  - 0.9663402692778458
  train_recall_micro:
  - 0.9730722154222766
  - 0.9740922072623419
  - 0.9715422276621787
  - 0.9728682170542635
  - 0.9734802121583027
  train_recall_micro_oob:
  - 0.9651162790697675
  - 0.963484292125663
  - 0.9645042839657283
  - 0.9670542635658915
  - 0.9663402692778458
  train_recall_samples:
  - 0.9730722154222766
  - 0.9740922072623419
  - 0.9715422276621787
  - 0.9728682170542635
  - 0.9734802121583028
  train_recall_samples_oob:
  - 0.9651162790697675
  - 0.963484292125663
  - 0.9645042839657284
  - 0.9670542635658916
  - 0.9663402692778458
  train_recall_weighted:
  - 0.9702076570767931
  - 0.972101950631612
  - 0.9679792107117688
  - 0.9703558776883514
  - 0.971614664702644
  train_recall_weighted_oob:
  - 0.9570975439844666
  - 0.9545931348480113
  - 0.9575405214940099
  - 0.9608919916403575
  - 0.9600388340847208
  train_roc_auc_macro:
  - 0.996628865795613
  - 0.9966631711132512
  - 0.9968211441562596
  - 0.9968364851275496
  - 0.9960728882923522
  train_roc_auc_macro_oob:
  - 0.9525263956045947
  - 0.9579847759719579
  - 0.9466038629040002
  - 0.9574193182944943
  - 0.9568920390078305
  train_roc_auc_micro:
  - 0.9960069740951878
  - 0.9958971913863143
  - 0.9955036294379762
  - 0.9961367649485585
  - 0.9955353552187011
  train_roc_auc_micro_oob:
  - 0.9677193666288764
  - 0.9705940915668809
  - 0.965586900701713
  - 0.9684859567326738
  - 0.9678402081860574
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9961426612756862
  - 0.9964867384266993
  - 0.9962195032887092
  - 0.9965786594086783
  - 0.9956235396155955
  train_roc_auc_weighted_oob:
  - 0.9681926439886724
  - 0.9741911231379135
  - 0.9662767393008161
  - 0.9689371245038396
  - 0.9679983377420305
start: 2023-12-12 16:57:07.948574
wrapper: null
