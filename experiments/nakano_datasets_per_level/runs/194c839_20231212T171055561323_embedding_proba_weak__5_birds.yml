active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T8yMzMzMzPzv5yZmZmZmek/MjMzMzMz87+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAADwPwAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b8wMzMzMzPjv6CZmZmZmdk/aGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:11:31.293959
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 194c8398460e58b79b4237347eef93104f569c56b9d858c9b03ae875374cb429
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/194c839_20231212T171055561323_embedding_proba_weak__5_birds.yml
results:
  fit_time:
  - 17.357418060302734
  - 17.396063804626465
  - 18.126375198364258
  - 17.821657180786133
  - 18.88019061088562
  score_time:
  - 5.1893041133880615
  - 5.233499765396118
  - 5.56013298034668
  - 5.399980783462524
  - 5.331402540206909
  test_average_precision_macro:
  - 0.30227248875806423
  - 0.27547254409451116
  - 0.3449705081674388
  - 0.3830059425753662
  - 0.3657618107739126
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.2657723451471816
  - 0.23655671504178397
  - 0.2688237177366459
  - 0.2743842556414264
  - 0.2591544438621799
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2679500996947957
  - 0.23228925925169355
  - 0.2613657745017094
  - 0.2755822703501622
  - 0.278304710209005
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4273226350815089
  - 0.39133910501815133
  - 0.4352317788791197
  - 0.4326251329079458
  - 0.4570427115968283
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9008567931456549
  - 0.8943288453692372
  - 0.8984088127294982
  - 0.8988168094655244
  - 0.8992248062015505
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9008567931456548
  - 0.8943288453692371
  - 0.8984088127294981
  - 0.8988168094655242
  - 0.8992248062015504
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9008567931456549
  - 0.8943288453692371
  - 0.8984088127294981
  - 0.8988168094655242
  - 0.8992248062015504
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8949910554561716
  - 0.8897825960249461
  - 0.8902616279069767
  - 0.8871597598647782
  - 0.8980322003577818
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8204189526973117
  - 0.8105555734250816
  - 0.8164593129487584
  - 0.8178310185749136
  - 0.8179238034112345
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8195991091314031
  - 0.8088560885608856
  - 0.8155555555555556
  - 0.8162282326787699
  - 0.8169014084507042
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8384336738296968
  - 0.8302218838978367
  - 0.8354341119075032
  - 0.8357869176731838
  - 0.8415050241316179
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8106389746646001
  - 0.8028268863021059
  - 0.8030357571234352
  - 0.7986648708161965
  - 0.8159405724275292
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7175625027955708
  - 0.7129094142904533
  - 0.734233991555973
  - 0.6864349835284569
  - 0.7434209892787725
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.24782272529262023
  - 0.2483312618642174
  - 0.3086140131786344
  - 0.25083283047827826
  - 0.32387693752301056
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2732926583652832
  - 0.2967427530462831
  - 0.30521360984464424
  - 0.2846515265528474
  - 0.3473415873848609
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1012029648068932
  - 0.11857746977050183
  - 0.12674615730556585
  - 0.1211669241369202
  - 0.16424468500967418
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3239614106931349
  - 0.3460730658748752
  - 0.3473173060529134
  - 0.3079165809417268
  - 0.40648817044803953
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.35296104314251947
  - 0.3127769091625466
  - 0.3400182938852439
  - 0.363025461028626
  - 0.35474478881317023
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.9689922480620154
  - -3.7674418604651163
  - -3.6666666666666665
  - -4.023255813953488
  - -3.62015503875969
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09914320685434516
  - -0.10567115463076296
  - -0.10159118727050183
  - -0.10118319053447573
  - -0.10077519379844961
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09914320685434516
  - -0.10567115463076296
  - -0.10159118727050184
  - -0.10118319053447572
  - -0.10077519379844961
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09914320685434516
  - -0.10567115463076296
  - -0.10159118727050183
  - -0.1011831905344757
  - -0.10077519379844961
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10500894454382827
  - -0.11021740397505392
  - -0.10973837209302326
  - -0.11284024013522179
  - -0.10196779964221826
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13191847798550946
  - -0.1253564733386895
  - -0.11981892240100173
  - -0.13780570268258366
  - -0.11341217365499172
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9008567931456549
  - 0.8943288453692372
  - 0.8984088127294982
  - 0.8988168094655244
  - 0.8992248062015505
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9008567931456548
  - 0.8943288453692371
  - 0.8984088127294981
  - 0.8988168094655242
  - 0.8992248062015504
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9008567931456549
  - 0.8943288453692371
  - 0.8984088127294981
  - 0.8988168094655242
  - 0.8992248062015504
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8949910554561716
  - 0.8897825960249461
  - 0.8902616279069767
  - 0.8871597598647782
  - 0.8980322003577818
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9008567931456549
  - 0.8943288453692372
  - 0.8984088127294982
  - 0.8988168094655244
  - 0.8992248062015505
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9008567931456548
  - 0.8943288453692371
  - 0.8984088127294981
  - 0.8988168094655242
  - 0.8992248062015504
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9008567931456549
  - 0.8943288453692371
  - 0.8984088127294981
  - 0.8988168094655242
  - 0.8992248062015504
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8949910554561716
  - 0.8897825960249461
  - 0.8902616279069767
  - 0.8871597598647782
  - 0.8980322003577818
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8290268836332818
  - 0.8445321200272646
  - 0.876006948242336
  - 0.8645308290298929
  - 0.8720320281693358
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8545338547708217
  - 0.8673392930125139
  - 0.8738212306284976
  - 0.8693357639136668
  - 0.8851307460312199
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8509560015939155
  - 0.8623791369174801
  - 0.8715086962074116
  - 0.8685206027289127
  - 0.8848889690623609
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.38008473807565757
  - 0.36503730894362396
  - 0.3873673516897149
  - 0.4274771968766351
  - 0.39515509506167046
  train_average_precision_macro_oob:
  - 0.34094989496732514
  - 0.3152541447492687
  - 0.34102544411042607
  - 0.3870705154207624
  - 0.3458866508099147
  train_average_precision_micro:
  - 0.32571764386538166
  - 0.327602833695239
  - 0.35666011922495827
  - 0.360044218832415
  - 0.3519600210646394
  train_average_precision_micro_oob:
  - 0.30131966999301724
  - 0.29208943626281875
  - 0.31839609460264445
  - 0.32716927716755295
  - 0.31819860124717203
  train_average_precision_samples:
  - 0.3707247380454745
  - 0.33677465873202306
  - 0.3794950337489097
  - 0.33704406560995703
  - 0.3653515071635226
  train_average_precision_samples_oob:
  - 0.3233108158361506
  - 0.28750298801194896
  - 0.3311669429427337
  - 0.3029115633874796
  - 0.32684267685032675
  train_average_precision_weighted:
  - 0.490419589669438
  - 0.4996864791297297
  - 0.5261906948422083
  - 0.5421394136275658
  - 0.5202667412496332
  train_average_precision_weighted_oob:
  - 0.45130738605195836
  - 0.4419924686695274
  - 0.4751544300725979
  - 0.4885002833331898
  - 0.4780264148331287
  train_f1_macro:
  - 0.9087107303141575
  - 0.910546715626275
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385558
  train_f1_macro_oob:
  - 0.9088127294981639
  - 0.9091187270501835
  - 0.9193186454508362
  - 0.9177886576907387
  - 0.9161566707466342
  train_f1_micro:
  - 0.9087107303141575
  - 0.910546715626275
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385557
  train_f1_micro_oob:
  - 0.908812729498164
  - 0.9091187270501836
  - 0.9193186454508364
  - 0.9177886576907385
  - 0.916156670746634
  train_f1_samples:
  - 0.9087107303141576
  - 0.9105467156262749
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385557
  train_f1_samples_oob:
  - 0.9088127294981639
  - 0.9091187270501836
  - 0.9193186454508364
  - 0.9177886576907385
  - 0.9161566707466341
  train_f1_weighted:
  - 0.914506775548849
  - 0.9153424392566472
  - 0.9230738055236244
  - 0.919155172670327
  - 0.9245073672998404
  train_f1_weighted_oob:
  - 0.9110154447008698
  - 0.9115483045425463
  - 0.9214342559023787
  - 0.9147324019104585
  - 0.9228430676371383
  train_jaccard_macro:
  - 0.8334084792257123
  - 0.8370046195705259
  - 0.8511617778338999
  - 0.8487567826884322
  - 0.8437894196848346
  train_jaccard_macro_oob:
  - 0.8336435085048212
  - 0.8345499134387202
  - 0.8509327542605241
  - 0.8488055809388767
  - 0.8457671254266317
  train_jaccard_micro:
  - 0.8326946443592859
  - 0.83578316637019
  - 0.850858976779309
  - 0.8480678605089538
  - 0.8432036097010717
  train_jaccard_micro_oob:
  - 0.8328659562535053
  - 0.8333800841514727
  - 0.8506842850401133
  - 0.8480678605089538
  - 0.8452851496329757
  train_jaccard_samples:
  - 0.8540606072779314
  - 0.8522532206337398
  - 0.8668994757195424
  - 0.863158667849985
  - 0.8600028261007365
  train_jaccard_samples_oob:
  - 0.8537063365312987
  - 0.8502367898239149
  - 0.8665160860248492
  - 0.8630532023746172
  - 0.861533516509081
  train_jaccard_weighted:
  - 0.8431044880040092
  - 0.8449059543125768
  - 0.8575071261069427
  - 0.8511112860378746
  - 0.8602099479329708
  train_jaccard_weighted_oob:
  - 0.8373039757071811
  - 0.8383955876231467
  - 0.8545983866744032
  - 0.843619341357107
  - 0.8572799760607089
  train_label_ranking_average_precision_score:
  - 0.8280890791307455
  - 0.7863870618327975
  - 0.8310454213458082
  - 0.8040983291758481
  - 0.8188398792565454
  train_label_ranking_average_precision_score_oob:
  - 0.7806751569214218
  - 0.7371153911127235
  - 0.7827173305396329
  - 0.7699658269533705
  - 0.7803310489433496
  train_matthews_corrcoef_macro:
  - 0.4054405170440864
  - 0.3843221527722765
  - 0.4089655398972353
  - 0.414395891244385
  - 0.41390210811752154
  train_matthews_corrcoef_macro_oob:
  - 0.38791160529213725
  - 0.35637252552915766
  - 0.37892225587035816
  - 0.396515488544413
  - 0.4029918344805655
  train_matthews_corrcoef_micro:
  - 0.43784973798197924
  - 0.4127591187504003
  - 0.4515854003673237
  - 0.45116694798143336
  - 0.4584379417789798
  train_matthews_corrcoef_micro_oob:
  - 0.4114762706216921
  - 0.37837233363031403
  - 0.42449318794077306
  - 0.42131474611578823
  - 0.44111920174512537
  train_matthews_corrcoef_samples:
  - 0.22097699683369085
  - 0.19542508802658615
  - 0.2285636755014319
  - 0.2092407619701326
  - 0.2281521113115011
  train_matthews_corrcoef_samples_oob:
  - 0.20080866140371523
  - 0.1702230132235095
  - 0.20667507258969595
  - 0.18330765932281576
  - 0.21093304581135805
  train_matthews_corrcoef_weighted:
  - 0.5075904301566976
  - 0.4898274676616496
  - 0.5189997350446486
  - 0.5163618625191696
  - 0.5355949017905466
  train_matthews_corrcoef_weighted_oob:
  - 0.47409050212389986
  - 0.44793839231807225
  - 0.4873583121348089
  - 0.4784644759423043
  - 0.5142381457180493
  train_ndgc:
  - 0.42732875693806416
  - 0.4010615944826174
  - 0.43475545079137856
  - 0.3968415465687735
  - 0.42293679484737173
  train_ndgc_oob:
  - 0.39287339922617476
  - 0.36457063414975444
  - 0.3992912367578454
  - 0.37235809137112225
  - 0.395234081418085
  train_neg_coverage_error:
  - -2.2170542635658914
  - -2.11046511627907
  - -2.106589147286822
  - -2.050387596899225
  - -2.0910852713178296
  train_neg_coverage_error_oob:
  - -3.0813953488372094
  - -3.106589147286822
  - -2.9205426356589146
  - -2.891472868217054
  - -2.9127906976744184
  train_neg_hamming_loss_macro:
  - -0.09128926968584251
  - -0.08945328437372499
  - -0.08057935536515708
  - -0.08221134230926153
  - -0.0850673194614443
  train_neg_hamming_loss_macro_oob:
  - -0.09118727050183599
  - -0.09088127294981639
  - -0.0806813545491636
  - -0.08221134230926153
  - -0.08384332925336598
  train_neg_hamming_loss_micro:
  - -0.09128926968584251
  - -0.089453284373725
  - -0.08057935536515708
  - -0.08221134230926153
  - -0.0850673194614443
  train_neg_hamming_loss_micro_oob:
  - -0.09118727050183599
  - -0.0908812729498164
  - -0.0806813545491636
  - -0.08221134230926153
  - -0.08384332925336598
  train_neg_hamming_loss_samples:
  - -0.0912892696858425
  - -0.089453284373725
  - -0.08057935536515708
  - -0.08221134230926153
  - -0.0850673194614443
  train_neg_hamming_loss_samples_oob:
  - -0.09118727050183599
  - -0.09088127294981639
  - -0.0806813545491636
  - -0.08221134230926153
  - -0.08384332925336598
  train_neg_hamming_loss_weighted:
  - -0.08549322445115097
  - -0.08465756074335282
  - -0.07692619447637576
  - -0.08084482732967312
  - -0.07549263270015978
  train_neg_hamming_loss_weighted_oob:
  - -0.08898455529913013
  - -0.0884516954574536
  - -0.07856574409762136
  - -0.08526759808954157
  - -0.0771569323628617
  train_neg_label_ranking_loss:
  - -0.05062120455417309
  - -0.0491649601601722
  - -0.04443345515506938
  - -0.046620990127317075
  - -0.04575152437242041
  train_neg_label_ranking_loss_oob:
  - -0.08693061178953791
  - -0.09102238912857928
  - -0.07921154771787467
  - -0.07875380449337357
  - -0.07939389580121456
  train_precision_macro:
  - 0.9087107303141575
  - 0.910546715626275
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385558
  train_precision_macro_oob:
  - 0.9088127294981639
  - 0.9091187270501835
  - 0.9193186454508362
  - 0.9177886576907387
  - 0.9161566707466342
  train_precision_micro:
  - 0.9087107303141575
  - 0.910546715626275
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385557
  train_precision_micro_oob:
  - 0.908812729498164
  - 0.9091187270501836
  - 0.9193186454508364
  - 0.9177886576907385
  - 0.916156670746634
  train_precision_samples:
  - 0.9087107303141576
  - 0.9105467156262749
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385557
  train_precision_samples_oob:
  - 0.9088127294981639
  - 0.9091187270501836
  - 0.9193186454508364
  - 0.9177886576907385
  - 0.9161566707466341
  train_precision_weighted:
  - 0.914506775548849
  - 0.9153424392566472
  - 0.9230738055236244
  - 0.919155172670327
  - 0.9245073672998404
  train_precision_weighted_oob:
  - 0.9110154447008698
  - 0.9115483045425463
  - 0.9214342559023787
  - 0.9147324019104585
  - 0.9228430676371383
  train_recall_macro:
  - 0.9087107303141575
  - 0.910546715626275
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385558
  train_recall_macro_oob:
  - 0.9088127294981639
  - 0.9091187270501835
  - 0.9193186454508362
  - 0.9177886576907387
  - 0.9161566707466342
  train_recall_micro:
  - 0.9087107303141575
  - 0.910546715626275
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385557
  train_recall_micro_oob:
  - 0.908812729498164
  - 0.9091187270501836
  - 0.9193186454508364
  - 0.9177886576907385
  - 0.916156670746634
  train_recall_samples:
  - 0.9087107303141576
  - 0.9105467156262749
  - 0.919420644634843
  - 0.9177886576907385
  - 0.9149326805385557
  train_recall_samples_oob:
  - 0.9088127294981639
  - 0.9091187270501836
  - 0.9193186454508364
  - 0.9177886576907385
  - 0.9161566707466341
  train_recall_weighted:
  - 0.914506775548849
  - 0.9153424392566472
  - 0.9230738055236244
  - 0.919155172670327
  - 0.9245073672998404
  train_recall_weighted_oob:
  - 0.9110154447008698
  - 0.9115483045425463
  - 0.9214342559023787
  - 0.9147324019104585
  - 0.9228430676371383
  train_roc_auc_macro:
  - 0.9439860345741382
  - 0.9478445440233803
  - 0.9496163191460577
  - 0.9532802745134833
  - 0.9489580212545148
  train_roc_auc_macro_oob:
  - 0.9085284188165306
  - 0.8980653511193538
  - 0.9092934417556366
  - 0.9089203286409506
  - 0.9079401278662113
  train_roc_auc_micro:
  - 0.940587161095025
  - 0.9428356748957861
  - 0.9482012930543409
  - 0.9491639827038176
  - 0.9462386277638852
  train_roc_auc_micro_oob:
  - 0.9117657401618847
  - 0.9080007766037975
  - 0.9175991367616431
  - 0.9177229009005172
  - 0.9172680104961833
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9487847249719689
  - 0.9531969545902428
  - 0.9563948891043189
  - 0.9562647321891288
  - 0.9560781926618964
  train_roc_auc_weighted_oob:
  - 0.914288542185848
  - 0.9107768779582358
  - 0.9196043682862873
  - 0.9168301616856079
  - 0.9217513212197816
start: 2023-12-12 17:10:55.561323
wrapper: null
