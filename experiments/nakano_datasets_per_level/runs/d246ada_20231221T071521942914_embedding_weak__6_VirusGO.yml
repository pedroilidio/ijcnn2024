active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMBAMzMzMzMDQAAzMzMzM+O/QDMzMzMzA0AAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:16:59.369281
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__6
  params: {}
hash: d246adad361c9209a06075d0bce9d7d68897eba625124f81b1a857031e33f27c
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d246ada_20231221T071521942914_embedding_weak__6_VirusGO.yml
results:
  fit_time:
  - 87.20782136917114
  - 88.44351172447205
  - 88.57302713394165
  - 87.36390662193298
  - 87.63810324668884
  score_time:
  - 2.864649534225464
  - 2.635822296142578
  - 2.8066587448120117
  - 2.786386489868164
  - 2.792257308959961
  test_average_precision_macro:
  - 0.9866827823188231
  - 0.9860381256285492
  - 0.9022662411293302
  - 0.9432942614717968
  - 0.9112139929270106
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9004232590567145
  - 0.9158038556389362
  - 0.9189748753587674
  - 0.9029837152286608
  - 0.877691396299982
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9351851851851851
  - 0.9380341880341879
  - 0.9392857142857142
  - 0.9324786324786325
  - 0.9015873015873016
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9722784448269379
  - 0.9709958402271677
  - 0.9466041021671827
  - 0.9419583751202888
  - 0.9144937010289802
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9407407407407408
  - 0.9316239316239318
  - 0.9404761904761906
  - 0.9273504273504275
  - 0.9007936507936508
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9407407407407408
  - 0.9316239316239316
  - 0.9404761904761905
  - 0.9273504273504274
  - 0.9007936507936508
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9407407407407408
  - 0.9316239316239316
  - 0.9404761904761907
  - 0.9273504273504275
  - 0.9007936507936508
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.945124716553288
  - 0.9123931623931624
  - 0.9404761904761905
  - 0.9324457593688363
  - 0.8968253968253969
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.889418811002662
  - 0.8743771071054111
  - 0.8881862099253404
  - 0.8653944845096291
  - 0.8215752076066599
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8881118881118881
  - 0.872
  - 0.8876404494382022
  - 0.8645418326693227
  - 0.8194945848375451
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9031746031746033
  - 0.8882783882783883
  - 0.9058956916099772
  - 0.8827838827838829
  - 0.8384353741496599
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8971375151657823
  - 0.8409629042020562
  - 0.8880206749771967
  - 0.8740175026334982
  - 0.8145723436684964
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9351851851851852
  - 0.9380341880341879
  - 0.9392857142857142
  - 0.9324786324786323
  - 0.9015873015873016
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4763289408863098
  - 0.5277258663465635
  - 0.5454414532262498
  - 0.4270836840157218
  - 0.3036527254602445
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7915046386734395
  - 0.7806739889996244
  - 0.8113599090122662
  - 0.7811577525831477
  - 0.6731345652682689
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7488303688022451
  - 0.7315339007214027
  - 0.7801169300968416
  - 0.7283198301868609
  - 0.5865935454600298
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7400571217016453
  - 0.7115422176763135
  - 0.7559541928116934
  - 0.6973107797984834
  - 0.5680897646459793
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.953354096213864
  - 0.9549763319573569
  - 0.9581340456805365
  - 0.9534063110675124
  - 0.9276481515295242
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2666666666666666
  - -1.4102564102564104
  - -1.4523809523809523
  - -1.5897435897435896
  - -1.5
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05925925925925926
  - -0.06837606837606837
  - -0.059523809523809514
  - -0.07264957264957266
  - -0.0992063492063492
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05925925925925926
  - -0.06837606837606838
  - -0.05952380952380952
  - -0.07264957264957266
  - -0.0992063492063492
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.059259259259259255
  - -0.06837606837606837
  - -0.059523809523809514
  - -0.07264957264957264
  - -0.09920634920634921
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05487528344671201
  - -0.08760683760683761
  - -0.05952380952380953
  - -0.06755424063116369
  - -0.10317460317460315
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03222222222222223
  - -0.035256410256410256
  - -0.036243386243386244
  - -0.04294871794871795
  - -0.05535714285714286
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9407407407407408
  - 0.9316239316239318
  - 0.9404761904761906
  - 0.9273504273504275
  - 0.9007936507936508
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9407407407407408
  - 0.9316239316239316
  - 0.9404761904761905
  - 0.9273504273504274
  - 0.9007936507936508
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9407407407407408
  - 0.9316239316239316
  - 0.9404761904761907
  - 0.9273504273504275
  - 0.9007936507936508
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.945124716553288
  - 0.9123931623931624
  - 0.9404761904761905
  - 0.9324457593688363
  - 0.8968253968253969
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9407407407407408
  - 0.9316239316239318
  - 0.9404761904761906
  - 0.9273504273504275
  - 0.9007936507936508
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9407407407407408
  - 0.9316239316239316
  - 0.9404761904761905
  - 0.9273504273504274
  - 0.9007936507936508
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9407407407407408
  - 0.9316239316239316
  - 0.9404761904761907
  - 0.9273504273504275
  - 0.9007936507936508
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.945124716553288
  - 0.9123931623931624
  - 0.9404761904761905
  - 0.9324457593688363
  - 0.8968253968253969
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9929971988795518
  - 0.9914857494381152
  - 0.9610161296487406
  - 0.9806919274443784
  - 0.947905793896506
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9756210176378243
  - 0.9779345878136201
  - 0.9646153846153845
  - 0.974112426035503
  - 0.9556140864305921
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9677777777777777
  - 0.9647435897435898
  - 0.9637566137566138
  - 0.9570512820512821
  - 0.9446428571428571
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9854227405247813
  - 0.9822751976284585
  - 0.9759851551956815
  - 0.9752814893439894
  - 0.9450154798761611
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9694451083524341
  - 0.9740497650147883
  - 0.9627040721707644
  - 0.9747581359646595
  - 0.9802591876326737
  train_average_precision_macro_oob:
  - 0.9172889626562691
  - 0.9351656444159694
  - 0.9325698186414826
  - 0.9190967865103055
  - 0.9480517727336942
  train_average_precision_micro:
  - 0.9091304096228916
  - 0.9291767381171941
  - 0.9115536747702355
  - 0.9277678553466372
  - 0.9211702593272384
  train_average_precision_micro_oob:
  - 0.884791360210363
  - 0.9087005908845921
  - 0.8857600002918397
  - 0.8982884257610524
  - 0.9049616812431507
  train_average_precision_samples:
  - 0.9593621399176956
  - 0.9647817460317459
  - 0.9474747474747474
  - 0.9578373015873015
  - 0.9606060606060606
  train_average_precision_samples_oob:
  - 0.9246913580246914
  - 0.9349206349206349
  - 0.9287878787878788
  - 0.9319444444444445
  - 0.9461616161616162
  train_average_precision_weighted:
  - 0.9549987370899485
  - 0.969833749986555
  - 0.9451378110310196
  - 0.9676445475271411
  - 0.9609189841549785
  train_average_precision_weighted_oob:
  - 0.9282448959523262
  - 0.9467984474518789
  - 0.9247778676527544
  - 0.9292963547126195
  - 0.9494387529048746
  train_f1_macro:
  - 0.9320987654320986
  - 0.941468253968254
  - 0.9424242424242424
  - 0.9404761904761906
  - 0.9434343434343435
  train_f1_macro_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929294
  - 0.9355158730158731
  - 0.9313131313131314
  train_f1_micro:
  - 0.9320987654320988
  - 0.941468253968254
  - 0.9424242424242424
  - 0.9404761904761905
  - 0.9434343434343434
  train_f1_micro_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929293
  - 0.935515873015873
  - 0.9313131313131313
  train_f1_samples:
  - 0.9320987654320988
  - 0.9414682539682541
  - 0.9424242424242424
  - 0.9404761904761905
  - 0.9434343434343435
  train_f1_samples_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929294
  - 0.9355158730158731
  - 0.9313131313131314
  train_f1_weighted:
  - 0.9341969227026699
  - 0.9417892156862745
  - 0.9368484848484848
  - 0.9374404761904762
  - 0.9472335293230815
  train_f1_weighted_oob:
  - 0.9169251353159399
  - 0.9281629318394023
  - 0.9284848484848486
  - 0.9313095238095238
  - 0.9317654153475049
  train_jaccard_macro:
  - 0.8732879463898812
  - 0.8895979948883094
  - 0.8913415125091122
  - 0.8883505812636753
  - 0.8936327608320239
  train_jaccard_macro_oob:
  - 0.8422300170321142
  - 0.8622438098845797
  - 0.8685825813926727
  - 0.8794401089619402
  - 0.8721752392373568
  train_jaccard_micro:
  - 0.8728323699421965
  - 0.8894095595126523
  - 0.8911174785100286
  - 0.8876404494382022
  - 0.892925430210325
  train_jaccard_micro_oob:
  - 0.8409090909090909
  - 0.8614958448753463
  - 0.8679245283018868
  - 0.8788443616029823
  - 0.8714555765595463
  train_jaccard_samples:
  - 0.8899176954732512
  - 0.9054705215419503
  - 0.9063492063492062
  - 0.9022108843537414
  - 0.9073593073593074
  train_jaccard_samples_oob:
  - 0.8599353321575545
  - 0.8798185941043085
  - 0.8848484848484849
  - 0.8955498866213153
  - 0.8886002886002886
  train_jaccard_weighted:
  - 0.876714575011768
  - 0.8901240200563385
  - 0.88131829866894
  - 0.8826329981076876
  - 0.9002368100583473
  train_jaccard_weighted_oob:
  - 0.8474649457518957
  - 0.8665835105456086
  - 0.8669276478780984
  - 0.8717007402850123
  - 0.8727496203346712
  train_label_ranking_average_precision_score:
  - 0.9593621399176953
  - 0.9647817460317459
  - 0.9474747474747474
  - 0.9578373015873014
  - 0.9606060606060606
  train_label_ranking_average_precision_score_oob:
  - 0.9246913580246916
  - 0.9349206349206349
  - 0.9287878787878788
  - 0.9319444444444445
  - 0.946161616161616
  train_matthews_corrcoef_macro:
  - 0.49606610783606886
  - 0.592905694858824
  - 0.6165336525719964
  - 0.5304918550557474
  - 0.5348912504096038
  train_matthews_corrcoef_macro_oob:
  - 0.35150904816610606
  - 0.4334109392323357
  - 0.5217419043801439
  - 0.5089505637826934
  - 0.4882950582871866
  train_matthews_corrcoef_micro:
  - 0.7860458440059019
  - 0.8117955385441936
  - 0.816052023795556
  - 0.8056495948082375
  - 0.8191263711329123
  train_matthews_corrcoef_micro_oob:
  - 0.7230927966213379
  - 0.7572751583098153
  - 0.7699237169486388
  - 0.7881972984700353
  - 0.7780276706979729
  train_matthews_corrcoef_samples:
  - 0.7348911311409119
  - 0.7788320640541107
  - 0.7920132446846206
  - 0.7685340220448734
  - 0.7850978991344949
  train_matthews_corrcoef_samples_oob:
  - 0.6394287171651875
  - 0.6912598934614482
  - 0.7099623440066097
  - 0.7437760562409016
  - 0.7282425122854997
  train_matthews_corrcoef_weighted:
  - 0.7286957441515042
  - 0.780628575416786
  - 0.7863318106521012
  - 0.7478379184828132
  - 0.7681954291481907
  train_matthews_corrcoef_weighted_oob:
  - 0.6310689604566377
  - 0.688174035740746
  - 0.7291106745473528
  - 0.728159114159239
  - 0.7210990343832012
  train_ndgc:
  - 0.9712636425830908
  - 0.9744716414527188
  - 0.9616512613836169
  - 0.9696000955973086
  - 0.9716629270110436
  train_ndgc_oob:
  - 0.9472236023165269
  - 0.9541765300390271
  - 0.9494739685471814
  - 0.9519702410725097
  - 0.9624946395691029
  train_neg_coverage_error:
  - -1.3703703703703705
  - -1.2976190476190477
  - -1.3333333333333333
  - -1.2916666666666667
  - -1.3151515151515152
  train_neg_coverage_error_oob:
  - -1.5740740740740742
  - -1.4166666666666667
  - -1.4606060606060607
  - -1.4464285714285714
  - -1.4
  train_neg_hamming_loss_macro:
  - -0.06790123456790123
  - -0.058531746031746025
  - -0.05757575757575758
  - -0.059523809523809514
  - -0.05656565656565657
  train_neg_hamming_loss_macro_oob:
  - -0.08641975308641975
  - -0.0744047619047619
  - -0.07070707070707072
  - -0.06448412698412698
  - -0.06868686868686869
  train_neg_hamming_loss_micro:
  - -0.06790123456790123
  - -0.05853174603174603
  - -0.05757575757575758
  - -0.05952380952380952
  - -0.05656565656565657
  train_neg_hamming_loss_micro_oob:
  - -0.08641975308641975
  - -0.0744047619047619
  - -0.0707070707070707
  - -0.06448412698412699
  - -0.06868686868686869
  train_neg_hamming_loss_samples:
  - -0.06790123456790123
  - -0.058531746031746025
  - -0.05757575757575758
  - -0.05952380952380952
  - -0.056565656565656555
  train_neg_hamming_loss_samples_oob:
  - -0.08641975308641975
  - -0.0744047619047619
  - -0.07070707070707069
  - -0.06448412698412698
  - -0.06868686868686869
  train_neg_hamming_loss_weighted:
  - -0.06580307729733016
  - -0.05821078431372549
  - -0.06315151515151515
  - -0.0625595238095238
  - -0.052766470676918434
  train_neg_hamming_loss_weighted_oob:
  - -0.08307486468406008
  - -0.07183706816059757
  - -0.07151515151515152
  - -0.06869047619047619
  - -0.0682345846524951
  train_neg_label_ranking_loss:
  - -0.020901920438957475
  - -0.016071428571428573
  - -0.023333333333333334
  - -0.019196428571428576
  - -0.01863636363636364
  train_neg_label_ranking_loss_oob:
  - -0.055161179698216725
  - -0.035251322751322756
  - -0.043333333333333335
  - -0.04470899470899471
  - -0.030976430976430974
  train_precision_macro:
  - 0.9320987654320986
  - 0.941468253968254
  - 0.9424242424242424
  - 0.9404761904761906
  - 0.9434343434343435
  train_precision_macro_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929294
  - 0.9355158730158731
  - 0.9313131313131314
  train_precision_micro:
  - 0.9320987654320988
  - 0.941468253968254
  - 0.9424242424242424
  - 0.9404761904761905
  - 0.9434343434343434
  train_precision_micro_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929293
  - 0.935515873015873
  - 0.9313131313131313
  train_precision_samples:
  - 0.9320987654320988
  - 0.9414682539682541
  - 0.9424242424242424
  - 0.9404761904761905
  - 0.9434343434343435
  train_precision_samples_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929294
  - 0.9355158730158731
  - 0.9313131313131314
  train_precision_weighted:
  - 0.9341969227026699
  - 0.9417892156862745
  - 0.9368484848484848
  - 0.9374404761904762
  - 0.9472335293230815
  train_precision_weighted_oob:
  - 0.9169251353159399
  - 0.9281629318394023
  - 0.9284848484848486
  - 0.9313095238095238
  - 0.9317654153475049
  train_recall_macro:
  - 0.9320987654320986
  - 0.941468253968254
  - 0.9424242424242424
  - 0.9404761904761906
  - 0.9434343434343435
  train_recall_macro_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929294
  - 0.9355158730158731
  - 0.9313131313131314
  train_recall_micro:
  - 0.9320987654320988
  - 0.941468253968254
  - 0.9424242424242424
  - 0.9404761904761905
  - 0.9434343434343434
  train_recall_micro_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929293
  - 0.935515873015873
  - 0.9313131313131313
  train_recall_samples:
  - 0.9320987654320988
  - 0.9414682539682541
  - 0.9424242424242424
  - 0.9404761904761905
  - 0.9434343434343435
  train_recall_samples_oob:
  - 0.9135802469135802
  - 0.9255952380952381
  - 0.9292929292929294
  - 0.9355158730158731
  - 0.9313131313131314
  train_recall_weighted:
  - 0.9341969227026699
  - 0.9417892156862745
  - 0.9368484848484848
  - 0.9374404761904762
  - 0.9472335293230815
  train_recall_weighted_oob:
  - 0.9169251353159399
  - 0.9281629318394023
  - 0.9284848484848486
  - 0.9313095238095238
  - 0.9317654153475049
  train_roc_auc_macro:
  - 0.9875638714598199
  - 0.9916256304476317
  - 0.9866719494242742
  - 0.990808149262154
  - 0.9917162053393686
  train_roc_auc_macro_oob:
  - 0.9688084189946323
  - 0.977734877823858
  - 0.9706107770363451
  - 0.9679001164445586
  - 0.9846090527324777
  train_roc_auc_micro:
  - 0.9767979654980238
  - 0.9839802214418105
  - 0.981996835443038
  - 0.9821813118811882
  - 0.9837536020783283
  train_roc_auc_micro_oob:
  - 0.9589640438929709
  - 0.9715027802165642
  - 0.9674556962025317
  - 0.9664170792079209
  - 0.9723309939529223
  train_roc_auc_samples:
  - 0.9790980795610427
  - 0.9839285714285715
  - 0.9766666666666667
  - 0.9808035714285717
  - 0.9813636363636364
  train_roc_auc_samples_oob:
  - 0.9448388203017833
  - 0.9647486772486773
  - 0.9566666666666668
  - 0.9552910052910052
  - 0.969023569023569
  train_roc_auc_weighted:
  - 0.9785318224832605
  - 0.9869732292879825
  - 0.9766261669133397
  - 0.9844954835318594
  - 0.9833614173797152
  train_roc_auc_weighted_oob:
  - 0.9661931308181183
  - 0.9774528069906574
  - 0.964910696784991
  - 0.9668805257564305
  - 0.9802216513502819
start: 2023-12-21 07:15:21.942914
wrapper: null
