active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAADwPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:30:30.145626
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: 54761464c6404839d8aefab7204b530c1ae52b75ad6c8ac30fe4633939995aa5
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5476146_20231221T223017707057_embedding_weak__1_CHD_49.yml
results:
  fit_time:
  - 3.9916000366210938
  - 4.509103775024414
  - 4.033648490905762
  - 4.492296457290649
  - 4.53991961479187
  score_time:
  - 1.4466063976287842
  - 1.379988193511963
  - 1.448746681213379
  - 1.4028656482696533
  - 1.3820514678955078
  test_average_precision_macro:
  - 0.5339958300560541
  - 0.5422839834897768
  - 0.5236631184875703
  - 0.5413044473305079
  - 0.5150008050454943
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6737819422182842
  - 0.7007407238721738
  - 0.6645631937328328
  - 0.6725637109169401
  - 0.6858030100194819
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7841269841269841
  - 0.7882196969696971
  - 0.7662412412412414
  - 0.7833583583583583
  - 0.7797047047047048
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6550419197089081
  - 0.668160807883117
  - 0.6299423616544195
  - 0.6436319736558204
  - 0.637609713910543
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6964285714285715
  - 0.6954545454545454
  - 0.7042042042042042
  - 0.6996996996996997
  - 0.6936936936936937
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6964285714285714
  - 0.6954545454545454
  - 0.7042042042042042
  - 0.6996996996996997
  - 0.6936936936936937
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6964285714285714
  - 0.6954545454545454
  - 0.7042042042042043
  - 0.6996996996996996
  - 0.6936936936936937
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6538700846192135
  - 0.6531738437001596
  - 0.6641641641641641
  - 0.6555471555471556
  - 0.6490896490896491
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5550097978149257
  - 0.5545468345399243
  - 0.5623182228274801
  - 0.5589319498291715
  - 0.5531002559606679
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5342465753424658
  - 0.5331010452961672
  - 0.5434530706836617
  - 0.5381062355658198
  - 0.5310344827586206
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5702458256029684
  - 0.5714718614718616
  - 0.5818571818571818
  - 0.5686400686400687
  - 0.5661557661557662
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49243356755305073
  - 0.49259701780960363
  - 0.5042228267282453
  - 0.49449526301677676
  - 0.4882118321741628
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7841269841269839
  - 0.8064015151515153
  - 0.7662412412412415
  - 0.7923673673673676
  - 0.7797047047047049
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.049503535316447154
  - 0.03434947733332413
  - 0.05802262740320541
  - 0.06584016581816349
  - 0.040323481967832225
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.39411700902555685
  - 0.3937680550280658
  - 0.41218934822354114
  - 0.39973084467554565
  - 0.3860330958765461
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.41006069462244904
  - 0.39880353731163876
  - 0.4184530264106038
  - 0.41241844864747973
  - 0.395161364560337
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0465081710034321
  - 0.0354308356738199
  - 0.05892477831769838
  - 0.05608682374492658
  - 0.03235343500291725
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8595286527370531
  - 0.8562245491782793
  - 0.845932108138599
  - 0.8605219408245585
  - 0.8547667251332142
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7142857142857144
  - -3.727272727272727
  - -3.90990990990991
  - -3.7567567567567566
  - -3.8378378378378377
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.30357142857142855
  - -0.30454545454545456
  - -0.2957957957957958
  - -0.3003003003003003
  - -0.30630630630630634
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.30357142857142855
  - -0.30454545454545456
  - -0.2957957957957958
  - -0.3003003003003003
  - -0.3063063063063063
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.30357142857142855
  - -0.30454545454545456
  - -0.29579579579579574
  - -0.3003003003003003
  - -0.3063063063063063
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34612991538078647
  - -0.3468261562998405
  - -0.33583583583583587
  - -0.3444528444528445
  - -0.3509103509103509
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21589781746031747
  - -0.20017676767676768
  - -0.23068068068068068
  - -0.20185185185185184
  - -0.21914414414414418
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6964285714285715
  - 0.6954545454545454
  - 0.7042042042042042
  - 0.6996996996996997
  - 0.6936936936936937
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6964285714285714
  - 0.6954545454545454
  - 0.7042042042042042
  - 0.6996996996996997
  - 0.6936936936936937
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6964285714285714
  - 0.6954545454545454
  - 0.7042042042042043
  - 0.6996996996996996
  - 0.6936936936936937
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6538700846192135
  - 0.6531738437001596
  - 0.6641641641641641
  - 0.6555471555471556
  - 0.6490896490896491
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6964285714285715
  - 0.6954545454545454
  - 0.7042042042042042
  - 0.6996996996996997
  - 0.6936936936936937
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6964285714285714
  - 0.6954545454545454
  - 0.7042042042042042
  - 0.6996996996996997
  - 0.6936936936936937
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6964285714285714
  - 0.6954545454545454
  - 0.7042042042042043
  - 0.6996996996996996
  - 0.6936936936936937
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6538700846192135
  - 0.6531738437001596
  - 0.6641641641641641
  - 0.6555471555471556
  - 0.6490896490896491
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5916114407137353
  - 0.5869594637798701
  - 0.5888627716093537
  - 0.6296151966648081
  - 0.5722784251396021
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7831395085750488
  - 0.7922994152046784
  - 0.7807998971193415
  - 0.787937062937063
  - 0.7805576002944424
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7841021825396827
  - .nan
  - 0.7693193193193194
  - .nan
  - 0.780855855855856
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6076233622563829
  - 0.6212642237107686
  - 0.5723672259346954
  - 0.5828789026929093
  - 0.569322906137848
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8937581884453439
  - 0.8953636761821361
  - 0.9113418649863804
  - 0.9043839734035427
  - 0.9036659821259203
  train_average_precision_macro_oob:
  - 0.5319344874071416
  - 0.5416335488628529
  - 0.5494265886821027
  - 0.5416405046145716
  - 0.5451760586154953
  train_average_precision_micro:
  - 0.7771565467801593
  - 0.7746206163578552
  - 0.7828999474672131
  - 0.7764936446136055
  - 0.7763540358998983
  train_average_precision_micro_oob:
  - 0.7015487983732287
  - 0.7078298959073474
  - 0.7054987482559747
  - 0.7004344531417426
  - 0.7077091335397432
  train_average_precision_samples:
  - 0.8208301981439678
  - 0.8267353308364545
  - 0.8269863613613614
  - 0.8289414414414414
  - 0.8347347347347348
  train_average_precision_samples_oob:
  - 0.7824021820917982
  - 0.7868164794007491
  - 0.7857513763763764
  - 0.7821227477477477
  - 0.7915759509509509
  train_average_precision_weighted:
  - 0.8547251038119839
  - 0.8567988979241361
  - 0.8758778900755447
  - 0.8661212212041715
  - 0.8636517680608536
  train_average_precision_weighted_oob:
  - 0.659044632200809
  - 0.6692828592478022
  - 0.6802386615414839
  - 0.6680131965768704
  - 0.6729025947380389
  train_f1_macro:
  - 0.8212942061700529
  - 0.8048689138576779
  - 0.8284534534534536
  - 0.8228228228228227
  - 0.8340840840840841
  train_f1_macro_oob:
  - 0.6975169300225733
  - 0.69812734082397
  - 0.7027027027027026
  - 0.7053303303303303
  - 0.7098348348348349
  train_f1_micro:
  - 0.8212942061700527
  - 0.8048689138576779
  - 0.8284534534534534
  - 0.8228228228228228
  - 0.8340840840840841
  train_f1_micro_oob:
  - 0.6975169300225733
  - 0.69812734082397
  - 0.7027027027027027
  - 0.7053303303303303
  - 0.7098348348348348
  train_f1_samples:
  - 0.8212942061700528
  - 0.8048689138576779
  - 0.8284534534534536
  - 0.8228228228228229
  - 0.8340840840840842
  train_f1_samples_oob:
  - 0.6975169300225732
  - 0.69812734082397
  - 0.7027027027027027
  - 0.7053303303303302
  - 0.7098348348348349
  train_f1_weighted:
  - 0.7689552179956035
  - 0.7540315233682395
  - 0.7785626535626536
  - 0.7732713079571719
  - 0.7855899092810088
  train_f1_weighted_oob:
  - 0.655211095448855
  - 0.6555567528383767
  - 0.6599020349020349
  - 0.6630406584595067
  - 0.668816722481644
  train_jaccard_macro:
  - 0.7151019321422364
  - 0.6902742244362057
  - 0.7233184340082545
  - 0.7152117864322426
  - 0.7315248802338569
  train_jaccard_macro_oob:
  - 0.5559869293711905
  - 0.55662524220013
  - 0.5613592443285336
  - 0.5639970113040281
  - 0.5682405211704671
  train_jaccard_micro:
  - 0.6967762527928503
  - 0.6734565966781573
  - 0.7071451457866068
  - 0.6989795918367347
  - 0.7153895685769478
  train_jaccard_micro_oob:
  - 0.5355285961871751
  - 0.5362485615650172
  - 0.5416666666666666
  - 0.5447955929254856
  - 0.5501891184172243
  train_jaccard_samples:
  - 0.7329248629474362
  - 0.7102728731942215
  - 0.740079365079365
  - 0.7348670098670099
  - 0.7464402714402714
  train_jaccard_samples_oob:
  - 0.569956905397086
  - 0.5704791089060752
  - 0.5778655278655279
  - 0.5817041067041065
  - 0.5873152373152373
  train_jaccard_weighted:
  - 0.6381279901048489
  - 0.6159144636143333
  - 0.6499512393081792
  - 0.6424067455243965
  - 0.6602029072308483
  train_jaccard_weighted_oob:
  - 0.49417192002556376
  - 0.49445434368353247
  - 0.4984762873119708
  - 0.5020995396043801
  - 0.5076326152032097
  train_label_ranking_average_precision_score:
  - 0.827602207173312
  - 0.8289825218476898
  - 0.833743118118117
  - 0.8334459459459446
  - 0.8414914914914904
  train_label_ranking_average_precision_score_oob:
  - 0.7891741911211427
  - 0.7890636704119841
  - 0.7925081331331323
  - 0.786627252252251
  - 0.7983327077077066
  train_matthews_corrcoef_macro:
  - 0.3701293602900478
  - 0.35088843132050007
  - 0.37513970206332936
  - 0.37713909670789314
  - 0.3986848679750574
  train_matthews_corrcoef_macro_oob:
  - 0.06090398052590274
  - 0.06067681013014845
  - 0.06769580575763516
  - 0.08071475961214404
  - 0.08589726726452525
  train_matthews_corrcoef_micro:
  - 0.6631248198148586
  - 0.6281530664421554
  - 0.6692469976261632
  - 0.6606226180497642
  - 0.6795639201358569
  train_matthews_corrcoef_micro_oob:
  - 0.4001538374277602
  - 0.4006712355719858
  - 0.40560258378705144
  - 0.411160415686415
  - 0.4200669493896879
  train_matthews_corrcoef_samples:
  - 0.6751125820986966
  - 0.6369248227200791
  - 0.6702776635191212
  - 0.6658932220028256
  - 0.6839140847247024
  train_matthews_corrcoef_samples_oob:
  - 0.40665124074606307
  - 0.4101739333737098
  - 0.4144001944090166
  - 0.4196113840976905
  - 0.42857862651078565
  train_matthews_corrcoef_weighted:
  - 0.3329422618367499
  - 0.32313652115533736
  - 0.34375821319126376
  - 0.3490266408080044
  - 0.37325016778986403
  train_matthews_corrcoef_weighted_oob:
  - 0.056759121232767475
  - 0.05632166034417503
  - 0.06465867678985658
  - 0.07509190727663739
  - 0.08190979328755948
  train_ndgc:
  - 0.8791574942077601
  - 0.8861822686634517
  - 0.8849594020009928
  - 0.8852274995569609
  - 0.8899974401436647
  train_ndgc_oob:
  - 0.8561774842328217
  - 0.8617792901943345
  - 0.8594643296140216
  - 0.8564646759185712
  - 0.8636504782875152
  train_neg_coverage_error:
  - -3.379232505643341
  - -3.3955056179775283
  - -3.3333333333333335
  - -3.310810810810811
  - -3.277027027027027
  train_neg_coverage_error_oob:
  - -3.7900677200902932
  - -3.791011235955056
  - -3.75
  - -3.774774774774775
  - -3.725225225225225
  train_neg_hamming_loss_macro:
  - -0.17870579382994733
  - -0.1951310861423221
  - -0.17154654654654652
  - -0.17717717717717718
  - -0.16591591591591592
  train_neg_hamming_loss_macro_oob:
  - -0.30248306997742663
  - -0.30187265917602996
  - -0.2972972972972973
  - -0.2946696696696697
  - -0.29016516516516516
  train_neg_hamming_loss_micro:
  - -0.17870579382994733
  - -0.1951310861423221
  - -0.17154654654654655
  - -0.17717717717717718
  - -0.16591591591591592
  train_neg_hamming_loss_micro_oob:
  - -0.30248306997742663
  - -0.30187265917602996
  - -0.2972972972972973
  - -0.2946696696696697
  - -0.29016516516516516
  train_neg_hamming_loss_samples:
  - -0.17870579382994733
  - -0.19513108614232205
  - -0.17154654654654652
  - -0.17717717717717715
  - -0.1659159159159159
  train_neg_hamming_loss_samples_oob:
  - -0.30248306997742663
  - -0.3018726591760299
  - -0.2972972972972973
  - -0.2946696696696696
  - -0.29016516516516516
  train_neg_hamming_loss_weighted:
  - -0.23104478200439635
  - -0.2459684766317604
  - -0.22143734643734644
  - -0.22672869204282814
  - -0.21441009071899125
  train_neg_hamming_loss_weighted_oob:
  - -0.34478890455114497
  - -0.34444324716162333
  - -0.34009796509796514
  - -0.3369593415404934
  - -0.3311832775183561
  train_neg_label_ranking_loss:
  - -0.14599949836970152
  - -0.14667915106117355
  - -0.1444632132132132
  - -0.14065315315315313
  - -0.13067442442442442
  train_neg_label_ranking_loss_oob:
  - -0.2110233258088789
  - -0.20981897627965043
  - -0.20763263263263265
  - -0.21219344344344343
  - -0.20123873873873876
  train_precision_macro:
  - 0.8212942061700529
  - 0.8048689138576779
  - 0.8284534534534536
  - 0.8228228228228227
  - 0.8340840840840841
  train_precision_macro_oob:
  - 0.6975169300225733
  - 0.69812734082397
  - 0.7027027027027026
  - 0.7053303303303303
  - 0.7098348348348349
  train_precision_micro:
  - 0.8212942061700527
  - 0.8048689138576779
  - 0.8284534534534534
  - 0.8228228228228228
  - 0.8340840840840841
  train_precision_micro_oob:
  - 0.6975169300225733
  - 0.69812734082397
  - 0.7027027027027027
  - 0.7053303303303303
  - 0.7098348348348348
  train_precision_samples:
  - 0.8212942061700528
  - 0.8048689138576779
  - 0.8284534534534536
  - 0.8228228228228229
  - 0.8340840840840842
  train_precision_samples_oob:
  - 0.6975169300225732
  - 0.69812734082397
  - 0.7027027027027027
  - 0.7053303303303302
  - 0.7098348348348349
  train_precision_weighted:
  - 0.7689552179956035
  - 0.7540315233682395
  - 0.7785626535626536
  - 0.7732713079571719
  - 0.7855899092810088
  train_precision_weighted_oob:
  - 0.655211095448855
  - 0.6555567528383767
  - 0.6599020349020349
  - 0.6630406584595067
  - 0.668816722481644
  train_recall_macro:
  - 0.8212942061700529
  - 0.8048689138576779
  - 0.8284534534534536
  - 0.8228228228228227
  - 0.8340840840840841
  train_recall_macro_oob:
  - 0.6975169300225733
  - 0.69812734082397
  - 0.7027027027027026
  - 0.7053303303303303
  - 0.7098348348348349
  train_recall_micro:
  - 0.8212942061700527
  - 0.8048689138576779
  - 0.8284534534534534
  - 0.8228228228228228
  - 0.8340840840840841
  train_recall_micro_oob:
  - 0.6975169300225733
  - 0.69812734082397
  - 0.7027027027027027
  - 0.7053303303303303
  - 0.7098348348348348
  train_recall_samples:
  - 0.8212942061700528
  - 0.8048689138576779
  - 0.8284534534534536
  - 0.8228228228228229
  - 0.8340840840840842
  train_recall_samples_oob:
  - 0.6975169300225732
  - 0.69812734082397
  - 0.7027027027027027
  - 0.7053303303303302
  - 0.7098348348348349
  train_recall_weighted:
  - 0.7689552179956035
  - 0.7540315233682395
  - 0.7785626535626536
  - 0.7732713079571719
  - 0.7855899092810088
  train_recall_weighted_oob:
  - 0.655211095448855
  - 0.6555567528383767
  - 0.6599020349020349
  - 0.6630406584595067
  - 0.668816722481644
  train_roc_auc_macro:
  - 0.8765736212601496
  - 0.8770096034012091
  - 0.8885985711196257
  - 0.8871151457992932
  - 0.8828213851111194
  train_roc_auc_macro_oob:
  - 0.5930253445704738
  - 0.6241806103085449
  - 0.5970018868211414
  - 0.5938972948397094
  - 0.6304046376973944
  train_roc_auc_micro:
  - 0.8682472429627364
  - 0.8662433216687342
  - 0.8726085181266103
  - 0.8710189764708318
  - 0.8765624029965027
  train_roc_auc_micro_oob:
  - 0.789728611134361
  - 0.7930299774283422
  - 0.7917498619801251
  - 0.7907845815312239
  - 0.796723207490337
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8133041534661103
  - 0.815220066218193
  - 0.8277039885193469
  - 0.8264783285582783
  - 0.8187407028603886
  train_roc_auc_weighted_oob:
  - 0.6244897057837103
  - 0.6492906037548889
  - 0.6365760511540648
  - 0.6309843530839485
  - 0.648522759320685
start: 2023-12-21 22:30:17.707057
wrapper: null
