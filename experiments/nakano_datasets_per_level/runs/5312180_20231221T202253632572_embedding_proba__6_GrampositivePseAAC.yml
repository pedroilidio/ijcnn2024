active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmpmZmZnpPwCYmZmZmcm/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:23:42.436921
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: 53121805eb4255acd14f9c2cd65d0acd65ed3b94e4692558ecb63990e3c20fdb
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5312180_20231221T202253632572_embedding_proba__6_GrampositivePseAAC.yml
results:
  fit_time:
  - 28.430843591690063
  - 30.721627473831177
  - 28.88687753677368
  - 28.212945222854614
  - 27.674513578414917
  score_time:
  - 5.373143911361694
  - 5.617405414581299
  - 5.631093502044678
  - 5.530991077423096
  - 5.33036208152771
  test_average_precision_macro:
  - 0.3651344165815415
  - 0.36034876280746436
  - 0.37325219956135053
  - 0.365561773240978
  - 0.40572826258350503
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.48368656051956815
  - 0.48871279640257187
  - 0.4769816471240676
  - 0.46154873122449813
  - 0.44409663218315865
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7208737864077669
  - 0.7176375404530744
  - 0.7083333333333333
  - 0.6995192307692307
  - 0.696031746031746
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.47606812497487233
  - 0.47607175913593497
  - 0.46674624903738016
  - 0.46095806724527566
  - 0.4415239705616829
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6682385575589459
  - 0.6695294996265869
  - 0.6784798534798535
  - 0.6798261834319527
  - 0.6884353741496599
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6192776291560012
  - 0.6190201012897639
  - 0.6234579088387457
  - 0.6231637653395525
  - 0.6277787050528949
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5968992248062015
  - 0.5968992248062015
  - 0.603082851637765
  - 0.603082851637765
  - 0.6091954022988506
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6
  - 0.5974110032362459
  - 0.6064102564102563
  - 0.6038461538461537
  - 0.6114285714285712
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5082025373596575
  - 0.5092665218136275
  - 0.5207429168899689
  - 0.5218376922649786
  - 0.5305518464550871
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.720873786407767
  - 0.7176375404530745
  - 0.7083333333333334
  - 0.6995192307692306
  - 0.6960317460317462
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.04110608130555033
  - 0.0
  - 0.05601264391509164
  - 0.03458692240008599
  - 0.05251050315105037
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.08093412274372713
  - 0.0
  - 0.11286957481914676
  - 0.08502303018977037
  - 0.14691063206231753
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.016181229773462785
  - 0.0
  - 0.02564102564102564
  - 0.009615384615384616
  - 0.02857142857142857
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.05656885596431581
  - 0.0
  - 0.076512902002636
  - 0.046559318615500375
  - 0.08401680504168058
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7926490833462143
  - 0.7898452868843042
  - 0.7833289215685626
  - 0.7766092337493806
  - 0.7737489647204738
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7766990291262137
  - -1.766990291262136
  - -1.7788461538461537
  - -1.7403846153846154
  - -1.7714285714285714
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.24759615384615385
  - -0.24759615384615385
  - -0.24285714285714288
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.24759615384615385
  - -0.24759615384615385
  - -0.24285714285714285
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.24759615384615385
  - -0.24759615384615385
  - -0.24285714285714285
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33176144244105404
  - -0.330470500373413
  - -0.32152014652014654
  - -0.32017381656804733
  - -0.31156462585034017
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2508090614886731
  - -0.2516181229773463
  - -0.2548076923076923
  - -0.2467948717948718
  - -0.2571428571428572
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6682385575589459
  - 0.6695294996265869
  - 0.6784798534798535
  - 0.6798261834319527
  - 0.6884353741496599
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7475728155339806
  - 0.7475728155339806
  - 0.7524038461538461
  - 0.7524038461538461
  - 0.7571428571428571
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6682385575589459
  - 0.6695294996265869
  - 0.6784798534798535
  - 0.6798261834319527
  - 0.6884353741496599
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5739490941395473
  - 0.5487854460915275
  - 0.6306024385560676
  - 0.6061434715278831
  - 0.68983792806157
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7548317046688382
  - 0.7425074925074925
  - 0.7521665901087123
  - 0.7552083333333334
  - 0.7470597127739984
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7491909385113269
  - 0.7483818770226537
  - 0.7451923076923077
  - 0.7532051282051282
  - 0.7428571428571428
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6168106859389406
  - 0.6161904634921349
  - 0.6235115207373272
  - 0.6302197138610184
  - 0.626116017968569
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7860113356288569
  - 0.8166140578193728
  - 0.7408477870108636
  - 0.7748180803636115
  - 0.7605373332580109
  train_average_precision_macro_oob:
  - 0.6970270971700872
  - 0.7283339694900772
  - 0.6537086524359744
  - 0.6582009607577859
  - 0.6652053546381
  train_average_precision_micro:
  - 0.8234274597959446
  - 0.8365046131651375
  - 0.8145587297794213
  - 0.8316045557894698
  - 0.8311528125961628
  train_average_precision_micro_oob:
  - 0.7952837347748137
  - 0.8026904734546144
  - 0.7960335066557971
  - 0.8048265300586581
  - 0.8052079075289258
  train_average_precision_samples:
  - 0.8479567307692307
  - 0.8427483974358974
  - 0.8319277108433735
  - 0.8477911646586346
  - 0.8383655394524959
  train_average_precision_samples_oob:
  - 0.8199118589743589
  - 0.8247195512820513
  - 0.8259036144578312
  - 0.826706827309237
  - 0.8238727858293076
  train_average_precision_weighted:
  - 0.8167544709806714
  - 0.8370208629787574
  - 0.8032484002952434
  - 0.8227236530288875
  - 0.8226243354431214
  train_average_precision_weighted_oob:
  - 0.7933528641924545
  - 0.8092562852491529
  - 0.7867650608863802
  - 0.7955127599039189
  - 0.7968938459619779
  train_f1_macro:
  - 0.8683894230769231
  - 0.8671875000000001
  - 0.8686746987951807
  - 0.8692771084337348
  - 0.8677536231884058
  train_f1_macro_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280192
  train_f1_micro:
  - 0.8683894230769231
  - 0.8671875
  - 0.8686746987951808
  - 0.869277108433735
  - 0.8677536231884058
  train_f1_micro_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280193
  train_f1_samples:
  - 0.8683894230769231
  - 0.8671875
  - 0.8686746987951808
  - 0.869277108433735
  - 0.8677536231884058
  train_f1_samples_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280193
  train_f1_weighted:
  - 0.8347729573058521
  - 0.8329355608591885
  - 0.8340923502622932
  - 0.8345745751502429
  - 0.8321429396944271
  train_f1_weighted_oob:
  - 0.8130290761869708
  - 0.7905613181567835
  - 0.812486308871851
  - 0.8147281249101417
  - 0.8104731525784157
  train_jaccard_macro:
  - 0.772811959928229
  - 0.7710994762915173
  - 0.7735126252311813
  - 0.7744702144138846
  - 0.7723628761044007
  train_jaccard_macro_oob:
  - 0.7474339233164333
  - 0.7211120095107535
  - 0.7489872251005855
  - 0.7527181509994618
  - 0.7478269151930408
  train_jaccard_micro:
  - 0.7673924588422729
  - 0.7655172413793103
  - 0.7678381256656017
  - 0.768779968034097
  - 0.7664
  train_jaccard_micro_oob:
  - 0.7405857740585774
  - 0.7128152341739578
  - 0.7418677859391396
  - 0.7455310199789695
  - 0.7404098791382029
  train_jaccard_samples:
  - 0.7894230769230769
  - 0.7875000000000001
  - 0.7898795180722891
  - 0.791164658634538
  - 0.7884057971014492
  train_jaccard_samples_oob:
  - 0.7615384615384614
  - 0.732051282051282
  - 0.7632128514056222
  - 0.7673895582329315
  - 0.7616747181964572
  train_jaccard_weighted:
  - 0.7183914076540502
  - 0.715774299344241
  - 0.7174562493616997
  - 0.7182320864029776
  - 0.7148285518035965
  train_jaccard_weighted_oob:
  - 0.6871920908827953
  - 0.6555700885908852
  - 0.6863680667566532
  - 0.6899929787020919
  - 0.6837551089046698
  train_label_ranking_average_precision_score:
  - 0.8479567307692301
  - 0.8427483974358971
  - 0.8319277108433731
  - 0.8477911646586344
  - 0.8383655394524955
  train_label_ranking_average_precision_score_oob:
  - 0.8199118589743585
  - 0.824719551282051
  - 0.8259036144578308
  - 0.8267068273092367
  - 0.823872785829307
  train_matthews_corrcoef_macro:
  - 0.47126581671093626
  - 0.46913162897629584
  - 0.4721511616536499
  - 0.47443573944686723
  - 0.4716006230791391
  train_matthews_corrcoef_macro_oob:
  - 0.42462296804250355
  - 0.3715153674066631
  - 0.42989545671744567
  - 0.43747729746053443
  - 0.4293649948509989
  train_matthews_corrcoef_micro:
  - 0.6363244431649256
  - 0.6334951206961531
  - 0.637986115066489
  - 0.6405835796239259
  - 0.6360173218654083
  train_matthews_corrcoef_micro_oob:
  - 0.5823982243756064
  - 0.5224553714257714
  - 0.5860510047879756
  - 0.5945589718020617
  - 0.5839921505944433
  train_matthews_corrcoef_samples:
  - 0.47633341475571933
  - 0.47291358367204056
  - 0.4788724115845033
  - 0.48369168869293705
  - 0.47659275622405434
  train_matthews_corrcoef_samples_oob:
  - 0.4066218762941809
  - 0.33450649167879626
  - 0.4124209651527211
  - 0.4244691579238054
  - 0.4099807990520987
  train_matthews_corrcoef_weighted:
  - 0.6033676017060181
  - 0.6003533344919518
  - 0.6054561770615938
  - 0.6078726142032245
  - 0.6031976520537574
  train_matthews_corrcoef_weighted_oob:
  - 0.548905817800958
  - 0.48767856825899014
  - 0.5536140750317605
  - 0.5618113931908824
  - 0.5513961609834519
  train_ndgc:
  - 0.886726534257411
  - 0.8829277861544018
  - 0.8749958035179515
  - 0.8866591893422016
  - 0.8800436757310467
  train_ndgc_oob:
  - 0.8658519588418673
  - 0.8695227403052114
  - 0.8702076163024883
  - 0.8710361286738445
  - 0.8691368296910381
  train_neg_coverage_error:
  - -1.3990384615384615
  - -1.4182692307692308
  - -1.436144578313253
  - -1.4
  - -1.4371980676328502
  train_neg_coverage_error_oob:
  - -1.4879807692307692
  - -1.4855769230769231
  - -1.4795180722891565
  - -1.4650602409638553
  - -1.4855072463768115
  train_neg_hamming_loss_macro:
  - -0.13161057692307693
  - -0.1328125
  - -0.13132530120481928
  - -0.13072289156626504
  - -0.1322463768115942
  train_neg_hamming_loss_macro_oob:
  - -0.14903846153846154
  - -0.16766826923076925
  - -0.14819277108433734
  - -0.14578313253012049
  - -0.14915458937198067
  train_neg_hamming_loss_micro:
  - -0.13161057692307693
  - -0.1328125
  - -0.13132530120481928
  - -0.13072289156626507
  - -0.1322463768115942
  train_neg_hamming_loss_micro_oob:
  - -0.14903846153846154
  - -0.16766826923076922
  - -0.14819277108433734
  - -0.14578313253012049
  - -0.14915458937198067
  train_neg_hamming_loss_samples:
  - -0.13161057692307693
  - -0.1328125
  - -0.13132530120481928
  - -0.13072289156626507
  - -0.1322463768115942
  train_neg_hamming_loss_samples_oob:
  - -0.14903846153846154
  - -0.16766826923076922
  - -0.14819277108433734
  - -0.14578313253012049
  - -0.14915458937198067
  train_neg_hamming_loss_weighted:
  - -0.16522704269414798
  - -0.16706443914081145
  - -0.1659076497377068
  - -0.16542542484975703
  - -0.16785706030557287
  train_neg_hamming_loss_weighted_oob:
  - -0.18697092381302904
  - -0.20943868184321643
  - -0.18751369112814895
  - -0.18527187508985823
  - -0.18952684742158427
  train_neg_label_ranking_loss:
  - -0.13141025641025642
  - -0.13681891025641027
  - -0.1427710843373494
  - -0.13012048192771083
  - -0.14150563607085345
  train_neg_label_ranking_loss_oob:
  - -0.16065705128205127
  - -0.15885416666666666
  - -0.1572289156626506
  - -0.15140562248995984
  - -0.15760869565217392
  train_precision_macro:
  - 0.8683894230769231
  - 0.8671875000000001
  - 0.8686746987951807
  - 0.8692771084337348
  - 0.8677536231884058
  train_precision_macro_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280192
  train_precision_micro:
  - 0.8683894230769231
  - 0.8671875
  - 0.8686746987951808
  - 0.869277108433735
  - 0.8677536231884058
  train_precision_micro_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280193
  train_precision_samples:
  - 0.8683894230769231
  - 0.8671875
  - 0.8686746987951808
  - 0.869277108433735
  - 0.8677536231884058
  train_precision_samples_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280193
  train_precision_weighted:
  - 0.8347729573058521
  - 0.8329355608591885
  - 0.8340923502622932
  - 0.8345745751502429
  - 0.8321429396944271
  train_precision_weighted_oob:
  - 0.8130290761869708
  - 0.7905613181567835
  - 0.812486308871851
  - 0.8147281249101417
  - 0.8104731525784157
  train_recall_macro:
  - 0.8683894230769231
  - 0.8671875000000001
  - 0.8686746987951807
  - 0.8692771084337348
  - 0.8677536231884058
  train_recall_macro_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280192
  train_recall_micro:
  - 0.8683894230769231
  - 0.8671875
  - 0.8686746987951808
  - 0.869277108433735
  - 0.8677536231884058
  train_recall_micro_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280193
  train_recall_samples:
  - 0.8683894230769231
  - 0.8671875
  - 0.8686746987951808
  - 0.869277108433735
  - 0.8677536231884058
  train_recall_samples_oob:
  - 0.8509615384615384
  - 0.8323317307692307
  - 0.8518072289156626
  - 0.8542168674698796
  - 0.8508454106280193
  train_recall_weighted:
  - 0.8347729573058521
  - 0.8329355608591885
  - 0.8340923502622932
  - 0.8345745751502429
  - 0.8321429396944271
  train_recall_weighted_oob:
  - 0.8130290761869708
  - 0.7905613181567835
  - 0.812486308871851
  - 0.8147281249101417
  - 0.8104731525784157
  train_roc_auc_macro:
  - 0.8769153930839357
  - 0.8990682237237508
  - 0.8529081607715487
  - 0.8818790416330409
  - 0.8613206579399155
  train_roc_auc_macro_oob:
  - 0.8542340327913835
  - 0.870004948416802
  - 0.8421478322662271
  - 0.8307122647136908
  - 0.8487648484454944
  train_roc_auc_micro:
  - 0.9018370748116461
  - 0.91261849306534
  - 0.895549699897526
  - 0.9085251519772914
  - 0.9032646419985931
  train_roc_auc_micro_oob:
  - 0.875765127834909
  - 0.8850542983389406
  - 0.8754266540307731
  - 0.8819375397852605
  - 0.8835751443522891
  train_roc_auc_samples:
  - 0.8685897435897437
  - 0.8631810897435896
  - 0.8572289156626506
  - 0.8698795180722891
  - 0.8584943639291466
  train_roc_auc_samples_oob:
  - 0.8393429487179488
  - 0.8411458333333334
  - 0.8427710843373494
  - 0.8485943775100402
  - 0.842391304347826
  train_roc_auc_weighted:
  - 0.8640244504023645
  - 0.8794531335245825
  - 0.8506723840758431
  - 0.8705826179984002
  - 0.8669611094512314
  train_roc_auc_weighted_oob:
  - 0.8411169273412183
  - 0.8527272807153247
  - 0.8349521233968176
  - 0.842815475618567
  - 0.8475906341316904
start: 2023-12-21 20:22:53.632572
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
