active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmHkAAmJmZmZnZvwBmZmZmZva/AJiZmZmZ2b+AmZmZmZkVwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:50:18.575076
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__4
  params: {}
hash: cf9bb4f26313b8a533e315262c25515aaff7bec203e34e9bb502b048dfd59b6d
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cf9bb4f_20231222T094903215764_embedding_weak__4_PlantGO.yml
results:
  fit_time:
  - 39.56672286987305
  - 39.34597158432007
  - 40.698968172073364
  - 39.996318101882935
  - 43.35711312294006
  score_time:
  - 6.023367166519165
  - 6.0088951587677
  - 6.1276280879974365
  - 6.273016929626465
  - 6.575513601303101
  test_average_precision_macro:
  - 0.7915961798112335
  - 0.6904273974497052
  - 0.7143175493461755
  - 0.7268536212272895
  - 0.7076861887245803
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7919524619446834
  - 0.7143256057364394
  - 0.6965793634640908
  - 0.7030615581173392
  - 0.7678885931579189
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8552009456264775
  - 0.7880851149983803
  - 0.7873620175650632
  - 0.7945922416585682
  - 0.8356275979410308
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8345217049383477
  - 0.7760692099147107
  - 0.7956201518007561
  - 0.7933134531357076
  - 0.8160750167360752
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9086879432624114
  - 0.9149659863945577
  - 0.9141285956006769
  - 0.9136904761904763
  - 0.9174958540630183
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9086879432624113
  - 0.9149659863945578
  - 0.9141285956006768
  - 0.9136904761904762
  - 0.9174958540630183
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9086879432624112
  - 0.9149659863945578
  - 0.9141285956006768
  - 0.913690476190476
  - 0.917495854063018
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8295826513911622
  - 0.8487764774156107
  - 0.852508558611734
  - 0.8433187560738582
  - 0.8518073141401995
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8428128312334183
  - 0.8510570314121783
  - 0.8491143131604022
  - 0.849595760587898
  - 0.8550968599432661
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8326563769293257
  - 0.8432601880877743
  - 0.8418387222438645
  - 0.8410958904109589
  - 0.847567981616239
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8337619826981528
  - 0.8446961202063241
  - 0.8436771350476931
  - 0.8424310383494055
  - 0.848865562298398
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7197543410729321
  - 0.7447016300319357
  - 0.7499114128904834
  - 0.7376440125808538
  - 0.7489892805180657
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8552009456264776
  - 0.7880851149983802
  - 0.7873620175650631
  - 0.7945922416585683
  - 0.8356275979410305
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.013100126809841283
  - 0.031732128523189095
  - 0.03249227033303851
  - 0.024075999610950027
  - 0.03297102865800355
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0934698080125178
  - 0.21835479922440382
  - 0.22484807434268203
  - 0.17379110993961422
  - 0.22837775308524558
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.010638297872340425
  - 0.05612244897959184
  - 0.06552838024919244
  - 0.040352504638218926
  - 0.05970149253731343
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.04307926316313192
  - 0.10286623653962722
  - 0.10337075771068995
  - 0.0784189701613801
  - 0.10875751633161361
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8939266457016626
  - 0.8408964940447584
  - 0.8412369824648531
  - 0.8469265244829662
  - 0.8763809131170299
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6063829787234043
  - -2.0510204081632653
  - -1.9949238578680204
  - -1.8826530612244898
  - -1.7611940298507462
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09131205673758865
  - -0.08503401360544217
  - -0.08587140439932317
  - -0.08630952380952382
  - -0.08250414593698176
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09131205673758866
  - -0.08503401360544217
  - -0.08587140439932318
  - -0.08630952380952381
  - -0.08250414593698176
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09131205673758866
  - -0.08503401360544216
  - -0.08587140439932321
  - -0.08630952380952384
  - -0.08250414593698177
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.17041734860883798
  - -0.1512235225843892
  - -0.14749144138826584
  - -0.15668124392614186
  - -0.14819268585980055
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04156189555125725
  - -0.08522727272727272
  - -0.07877676938590644
  - -0.07193619872191301
  - -0.0627711610298675
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9086879432624114
  - 0.9149659863945577
  - 0.9141285956006769
  - 0.9136904761904763
  - 0.9174958540630183
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9086879432624113
  - 0.9149659863945578
  - 0.9141285956006768
  - 0.9136904761904762
  - 0.9174958540630183
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9086879432624112
  - 0.9149659863945578
  - 0.9141285956006768
  - 0.913690476190476
  - 0.917495854063018
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8295826513911622
  - 0.8487764774156107
  - 0.852508558611734
  - 0.8433187560738582
  - 0.8518073141401995
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9086879432624114
  - 0.9149659863945577
  - 0.9141285956006769
  - 0.9136904761904763
  - 0.9174958540630183
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9086879432624113
  - 0.9149659863945578
  - 0.9141285956006768
  - 0.9136904761904762
  - 0.9174958540630183
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9086879432624112
  - 0.9149659863945578
  - 0.9141285956006768
  - 0.913690476190476
  - 0.917495854063018
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8295826513911622
  - 0.8487764774156107
  - 0.852508558611734
  - 0.8433187560738582
  - 0.8518073141401995
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9715448664824979
  - 0.9475495031295709
  - 0.9676619747318732
  - 0.9567633512427866
  - 0.9593679409748624
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9685481144831731
  - 0.9378551458657536
  - 0.9370545521443181
  - 0.9406473700591347
  - 0.9481730622229017
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9584381044487428
  - 0.9147727272727274
  - 0.9212232306140937
  - 0.928063801278087
  - 0.9372288389701324
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9707975607125758
  - 0.9575656878162674
  - 0.9634825637925976
  - 0.9572749301729585
  - 0.9702311756921892
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8509321259694032
  - 0.8566097005993155
  - 0.8496368703486133
  - 0.8456342089972417
  - 0.8349000533699297
  train_average_precision_macro_oob:
  - 0.6532125005892849
  - 0.6261587972849548
  - 0.6164161929012291
  - 0.6161957743684043
  - 0.5985597507494742
  train_average_precision_micro:
  - 0.8852939633438373
  - 0.8623596395655306
  - 0.8684099703907916
  - 0.8714885570868248
  - 0.8622969463648462
  train_average_precision_micro_oob:
  - 0.7485031388175896
  - 0.7093292566933318
  - 0.7178476532534962
  - 0.7237289138583067
  - 0.7175002208301329
  train_average_precision_samples:
  - 0.907302591922845
  - 0.8981462875005075
  - 0.888341758540222
  - 0.891343513690061
  - 0.8927397713111999
  train_average_precision_samples_oob:
  - 0.8125221473322739
  - 0.7853303310784128
  - 0.7790256691665143
  - 0.7897948243856171
  - 0.7856161124018266
  train_average_precision_weighted:
  - 0.9058941769372539
  - 0.8985726010593247
  - 0.9054244299968776
  - 0.9078455785502932
  - 0.8905820883942334
  train_average_precision_weighted_oob:
  - 0.7789176478998227
  - 0.7504441275547776
  - 0.7593841362378048
  - 0.7759001109100603
  - 0.7470012888931225
  train_f1_macro:
  - 0.914240506329114
  - 0.9146419437340153
  - 0.9161331626120357
  - 0.9160272804774084
  - 0.9136636636636637
  train_f1_macro_oob:
  - 0.9117088607594938
  - 0.9144288150042627
  - 0.9153862569355526
  - 0.9152813299232737
  - 0.9126984126984127
  train_f1_micro:
  - 0.9142405063291139
  - 0.9146419437340153
  - 0.9161331626120358
  - 0.9160272804774083
  - 0.9136636636636637
  train_f1_micro_oob:
  - 0.9117088607594936
  - 0.9144288150042625
  - 0.9153862569355528
  - 0.9152813299232737
  - 0.9126984126984127
  train_f1_samples:
  - 0.9142405063291139
  - 0.9146419437340153
  - 0.9161331626120357
  - 0.9160272804774082
  - 0.9136636636636635
  train_f1_samples_oob:
  - 0.9117088607594935
  - 0.9144288150042624
  - 0.9153862569355525
  - 0.9152813299232735
  - 0.9126984126984125
  train_f1_weighted:
  - 0.8454993797916699
  - 0.8480791141925552
  - 0.8507987317846474
  - 0.8525825148685662
  - 0.8462460429285071
  train_f1_weighted_oob:
  - 0.838245184044954
  - 0.8472200336965613
  - 0.8488491555392965
  - 0.8504835121596876
  - 0.8431169829274092
  train_jaccard_macro:
  - 0.8502704897137231
  - 0.8505671505064466
  - 0.8528036095104857
  - 0.8523940793863294
  - 0.8491063914191006
  train_jaccard_macro_oob:
  - 0.8469441961054622
  - 0.8503115315824922
  - 0.8517582578578832
  - 0.8513643705073105
  - 0.8478689332251207
  train_jaccard_micro:
  - 0.8420285631011367
  - 0.8427098674521355
  - 0.8452451269935026
  - 0.8450648839952811
  - 0.8410504492052523
  train_jaccard_micro_oob:
  - 0.8377435300959581
  - 0.8423480907038382
  - 0.8439744220363994
  - 0.8437960506926024
  - 0.8394160583941606
  train_jaccard_samples:
  - 0.8433273056057866
  - 0.844282060650347
  - 0.846930534254478
  - 0.8468171214974284
  - 0.842578528292814
  train_jaccard_samples_oob:
  - 0.8386534984003338
  - 0.8439448020010679
  - 0.8455516314671244
  - 0.8454680869003118
  - 0.840853097995955
  train_jaccard_weighted:
  - 0.7408985946360082
  - 0.743783253861465
  - 0.747386677251316
  - 0.7498044220707696
  - 0.7413165128472622
  train_jaccard_weighted_oob:
  - 0.7315561857199027
  - 0.7427024419328652
  - 0.7447098698063463
  - 0.7469471199504716
  - 0.7373050369956873
  train_label_ranking_average_precision_score:
  - 0.9073025919228451
  - 0.8981462875005073
  - 0.8883417585402222
  - 0.8913435136900613
  - 0.8927397713111999
  train_label_ranking_average_precision_score_oob:
  - 0.8125221473322741
  - 0.7853303310784131
  - 0.7790256691665144
  - 0.7897948243856167
  - 0.7856161124018258
  train_matthews_corrcoef_macro:
  - 0.042061181139434724
  - 0.030776269833437855
  - 0.04586441255236534
  - 0.04527232936856105
  - 0.029466870810716233
  train_matthews_corrcoef_macro_oob:
  - 0.014768457653722235
  - 0.03621719278022587
  - 0.0323000573278203
  - 0.0334219372753229
  - 0.025140675009694417
  train_matthews_corrcoef_micro:
  - 0.1915378698496211
  - 0.21513239881589832
  - 0.241970235762943
  - 0.24814818770641117
  - 0.20500697108620475
  train_matthews_corrcoef_micro_oob:
  - 0.10374428353975476
  - 0.20978912727775756
  - 0.22558841689133105
  - 0.23199823824142943
  - 0.17925896948277664
  train_matthews_corrcoef_samples:
  - 0.043037974683544304
  - 0.05731225296442688
  - 0.07147014317308811
  - 0.07405254591955358
  - 0.05136305136305136
  train_matthews_corrcoef_samples_oob:
  - 0.012658227848101266
  - 0.05707974889560568
  - 0.06250727505529043
  - 0.06626365961404325
  - 0.04212004212004212
  train_matthews_corrcoef_weighted:
  - 0.1106030919924634
  - 0.10020520083209386
  - 0.13139576747536014
  - 0.13210217868970625
  - 0.09552293665653983
  train_matthews_corrcoef_weighted_oob:
  - 0.04791466544560649
  - 0.10706625619770992
  - 0.10566733040101213
  - 0.10869051317465957
  - 0.08149868107408048
  train_ndgc:
  - 0.9316017976561355
  - 0.9241306545786473
  - 0.9163179082308573
  - 0.9187348975839651
  - 0.9203254282938134
  train_ndgc_oob:
  - 0.8600952076880354
  - 0.8391805677383908
  - 0.8336375429979069
  - 0.8419699456313252
  - 0.8395102737005159
  train_neg_coverage_error:
  - -1.440506329113924
  - -1.5166240409207161
  - -1.6133162612035852
  - -1.6112531969309463
  - -1.5714285714285714
  train_neg_coverage_error_oob:
  - -1.869620253164557
  - -2.112531969309463
  - -2.1895006402048653
  - -2.1445012787723785
  - -2.12998712998713
  train_neg_hamming_loss_macro:
  - -0.08575949367088609
  - -0.08535805626598465
  - -0.08386683738796415
  - -0.08397271952259165
  - -0.08633633633633635
  train_neg_hamming_loss_macro_oob:
  - -0.08829113924050634
  - -0.08557118499573742
  - -0.0846137430644473
  - -0.08471867007672634
  - -0.08730158730158728
  train_neg_hamming_loss_micro:
  - -0.08575949367088608
  - -0.08535805626598465
  - -0.08386683738796415
  - -0.08397271952259165
  - -0.08633633633633633
  train_neg_hamming_loss_micro_oob:
  - -0.08829113924050633
  - -0.08557118499573743
  - -0.08461374306444729
  - -0.08471867007672634
  - -0.0873015873015873
  train_neg_hamming_loss_samples:
  - -0.08575949367088608
  - -0.08535805626598465
  - -0.08386683738796415
  - -0.08397271952259165
  - -0.08633633633633633
  train_neg_hamming_loss_samples_oob:
  - -0.08829113924050633
  - -0.08557118499573743
  - -0.0846137430644473
  - -0.08471867007672634
  - -0.0873015873015873
  train_neg_hamming_loss_weighted:
  - -0.15450062020833025
  - -0.15192088580744476
  - -0.14920126821535273
  - -0.1474174851314336
  - -0.15375395707149264
  train_neg_hamming_loss_weighted_oob:
  - -0.16175481595504612
  - -0.15277996630343874
  - -0.15115084446070362
  - -0.14951648784031238
  - -0.1568830170725905
  train_neg_label_ranking_loss:
  - -0.030996462515449855
  - -0.037702472293265135
  - -0.046510560146923785
  - -0.04597380454157948
  - -0.04124947458280792
  train_neg_label_ranking_loss_oob:
  - -0.06906682862379064
  - -0.08989489954963102
  - -0.09795996671796928
  - -0.09334995306862315
  - -0.09025345692012358
  train_precision_macro:
  - 0.914240506329114
  - 0.9146419437340153
  - 0.9161331626120357
  - 0.9160272804774084
  - 0.9136636636636637
  train_precision_macro_oob:
  - 0.9117088607594938
  - 0.9144288150042627
  - 0.9153862569355526
  - 0.9152813299232737
  - 0.9126984126984127
  train_precision_micro:
  - 0.9142405063291139
  - 0.9146419437340153
  - 0.9161331626120358
  - 0.9160272804774083
  - 0.9136636636636637
  train_precision_micro_oob:
  - 0.9117088607594936
  - 0.9144288150042625
  - 0.9153862569355528
  - 0.9152813299232737
  - 0.9126984126984127
  train_precision_samples:
  - 0.9142405063291139
  - 0.9146419437340153
  - 0.9161331626120357
  - 0.9160272804774082
  - 0.9136636636636635
  train_precision_samples_oob:
  - 0.9117088607594935
  - 0.9144288150042624
  - 0.9153862569355525
  - 0.9152813299232735
  - 0.9126984126984125
  train_precision_weighted:
  - 0.8454993797916699
  - 0.8480791141925552
  - 0.8507987317846474
  - 0.8525825148685662
  - 0.8462460429285071
  train_precision_weighted_oob:
  - 0.838245184044954
  - 0.8472200336965613
  - 0.8488491555392965
  - 0.8504835121596876
  - 0.8431169829274092
  train_recall_macro:
  - 0.914240506329114
  - 0.9146419437340153
  - 0.9161331626120357
  - 0.9160272804774084
  - 0.9136636636636637
  train_recall_macro_oob:
  - 0.9117088607594938
  - 0.9144288150042627
  - 0.9153862569355526
  - 0.9152813299232737
  - 0.9126984126984127
  train_recall_micro:
  - 0.9142405063291139
  - 0.9146419437340153
  - 0.9161331626120358
  - 0.9160272804774083
  - 0.9136636636636637
  train_recall_micro_oob:
  - 0.9117088607594936
  - 0.9144288150042625
  - 0.9153862569355528
  - 0.9152813299232737
  - 0.9126984126984127
  train_recall_samples:
  - 0.9142405063291139
  - 0.9146419437340153
  - 0.9161331626120357
  - 0.9160272804774082
  - 0.9136636636636635
  train_recall_samples_oob:
  - 0.9117088607594935
  - 0.9144288150042624
  - 0.9153862569355525
  - 0.9152813299232735
  - 0.9126984126984125
  train_recall_weighted:
  - 0.8454993797916699
  - 0.8480791141925552
  - 0.8507987317846474
  - 0.8525825148685662
  - 0.8462460429285071
  train_recall_weighted_oob:
  - 0.838245184044954
  - 0.8472200336965613
  - 0.8488491555392965
  - 0.8504835121596876
  - 0.8431169829274092
  train_roc_auc_macro:
  - 0.9770837205681927
  - 0.9747477246664554
  - 0.9777754790492762
  - 0.97695438305837
  - 0.9752737897641132
  train_roc_auc_macro_oob:
  - 0.9511945248487416
  - 0.9334302522974617
  - 0.9369717884415344
  - 0.9452582276416317
  - 0.9391407300423492
  train_roc_auc_micro:
  - 0.9752802561106848
  - 0.9687352936279786
  - 0.9674729449914049
  - 0.9677134013031748
  - 0.9684767057140302
  train_roc_auc_micro_oob:
  - 0.9475924389417013
  - 0.9296019845277868
  - 0.9273046290715068
  - 0.9310955442172393
  - 0.9318888044353035
  train_roc_auc_samples:
  - 0.96900353748455
  - 0.9622975277067348
  - 0.9534894398530762
  - 0.9540261954584205
  - 0.9587505254171921
  train_roc_auc_samples_oob:
  - 0.9309331713762093
  - 0.910105100450369
  - 0.9020400332820308
  - 0.9066500469313769
  - 0.9097465430798766
  train_roc_auc_weighted:
  - 0.9781432372781813
  - 0.9770516177906279
  - 0.9798582632439923
  - 0.9806744067200633
  - 0.9750275576838199
  train_roc_auc_weighted_oob:
  - 0.9578924791560257
  - 0.9495578547997512
  - 0.951531039091138
  - 0.9585196124234197
  - 0.9517318997571568
start: 2023-12-22 09:49:03.215764
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
