active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AmZmZmZn5v0AzMzMzMwNAADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:59:53.896239
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__4
  params: {}
hash: df6306c2f2bde85f80e3c0ce4bab2d0a9745ba4754007b673fd67b0803f03979
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/df6306c_20231221T065932793702_proba_weak__4_VirusGO.yml
results:
  fit_time:
  - 15.275079727172852
  - 15.281029462814331
  - 15.709765911102295
  - 15.501593351364136
  - 15.462473392486572
  score_time:
  - 1.3156359195709229
  - 1.3222637176513672
  - 1.3370134830474854
  - 1.3779752254486084
  - 1.3675508499145508
  test_average_precision_macro:
  - 0.9132597373814203
  - 0.9637230285303308
  - 0.8853731772366747
  - 0.9488822283593272
  - 0.9120949754802584
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8812692295462365
  - 0.8240130668695247
  - 0.8011584153756228
  - 0.8779889923968969
  - 0.8041032660813772
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9174999999999999
  - 0.8949612403100775
  - 0.8786324786324786
  - 0.8968253968253967
  - 0.8604651162790697
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9273348008932925
  - 0.9425664067733034
  - 0.8815183022000359
  - 0.9543319082641335
  - 0.9026117841677614
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9250000000000002
  - 0.9069767441860465
  - 0.8931623931623932
  - 0.9047619047619048
  - 0.9186046511627907
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.925
  - 0.9069767441860465
  - 0.8931623931623932
  - 0.9047619047619048
  - 0.9186046511627907
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.925
  - 0.9069767441860465
  - 0.8931623931623934
  - 0.9047619047619049
  - 0.9186046511627909
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9401960784313724
  - 0.893953488372093
  - 0.8717948717948718
  - 0.8958916900093371
  - 0.9116279069767442
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8624807893100576
  - 0.8317793106926845
  - 0.8089841919652766
  - 0.828974784773679
  - 0.8510773247524931
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8604651162790697
  - 0.8297872340425532
  - 0.806949806949807
  - 0.8260869565217391
  - 0.8494623655913979
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8833333333333332
  - 0.8471760797342193
  - 0.8260073260073262
  - 0.8492063492063492
  - 0.8698781838316723
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8892373899547501
  - 0.808865478493138
  - 0.7749044366075611
  - 0.813053531834465
  - 0.8400706996335383
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9174999999999999
  - 0.8949612403100775
  - 0.8786324786324786
  - 0.896825396825397
  - 0.8604651162790697
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3919740003981323
  - 0.3205106279289503
  - 0.32929346384859853
  - 0.26949986143807364
  - 0.38522672777246986
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7654489066438335
  - 0.6816541454006185
  - 0.65747024486558
  - 0.682800053696289
  - 0.725632887295846
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.70125
  - 0.5844144680961559
  - 0.5631353246197021
  - 0.5940162690012027
  - 0.6764708281690869
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6850402296585215
  - 0.5838562597526822
  - 0.5488922011490331
  - 0.553892002149008
  - 0.6337525347538754
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.940541398348407
  - 0.9248619022317356
  - 0.913621866892963
  - 0.9227388741729076
  - 0.897775213733499
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.575
  - -1.5348837209302326
  - -1.7692307692307692
  - -1.5238095238095237
  - -1.558139534883721
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07500000000000001
  - -0.09302325581395349
  - -0.10683760683760683
  - -0.09523809523809523
  - -0.08139534883720931
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.075
  - -0.09302325581395349
  - -0.10683760683760683
  - -0.09523809523809523
  - -0.08139534883720931
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.075
  - -0.09302325581395347
  - -0.10683760683760682
  - -0.09523809523809523
  - -0.0813953488372093
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.059803921568627454
  - -0.10604651162790697
  - -0.12820512820512822
  - -0.10410830999066291
  - -0.08837209302325581
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05493055555555556
  - -0.06569767441860465
  - -0.08525641025641026
  - -0.0630952380952381
  - -0.07642118863049097
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9250000000000002
  - 0.9069767441860465
  - 0.8931623931623932
  - 0.9047619047619048
  - 0.9186046511627907
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.925
  - 0.9069767441860465
  - 0.8931623931623932
  - 0.9047619047619048
  - 0.9186046511627907
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.925
  - 0.9069767441860465
  - 0.8931623931623934
  - 0.9047619047619049
  - 0.9186046511627909
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9401960784313724
  - 0.893953488372093
  - 0.8717948717948718
  - 0.8958916900093371
  - 0.9116279069767442
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9250000000000002
  - 0.9069767441860465
  - 0.8931623931623932
  - 0.9047619047619048
  - 0.9186046511627907
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.925
  - 0.9069767441860465
  - 0.8931623931623932
  - 0.9047619047619048
  - 0.9186046511627907
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.925
  - 0.9069767441860465
  - 0.8931623931623934
  - 0.9047619047619049
  - 0.9186046511627909
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9401960784313724
  - 0.893953488372093
  - 0.8717948717948718
  - 0.8958916900093371
  - 0.9116279069767442
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9642723360754052
  - 0.9828102181043358
  - 0.9450227342437487
  - 0.9792591588292238
  - 0.957044148220619
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9475049278970847
  - 0.953076923076923
  - 0.9318478260869566
  - 0.9546385718466491
  - 0.9324038461538462
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9450694444444444
  - 0.9343023255813953
  - 0.9147435897435897
  - 0.9369047619047619
  - 0.923578811369509
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9574259216202949
  - 0.9673931623931624
  - 0.9311786184829666
  - 0.9769175389454027
  - 0.9412889812889813
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9426479318302962
  - 0.9269467890139992
  - 0.9533055590929127
  - 0.9339867920865826
  - 0.9210905913949275
  train_average_precision_macro_oob:
  - 0.9215781203219754
  - 0.8969955362909676
  - 0.9153445276642787
  - 0.9228088702136986
  - 0.9023520532267838
  train_average_precision_micro:
  - 0.8426083067079198
  - 0.8620464615423707
  - 0.8704098488365946
  - 0.8436923791271368
  - 0.8476732159015905
  train_average_precision_micro_oob:
  - 0.8239468573821002
  - 0.8392942199981667
  - 0.8449999611261076
  - 0.8117043046434521
  - 0.8298741949168703
  train_average_precision_samples:
  - 0.9271457085828342
  - 0.9123983739837398
  - 0.9148809523809524
  - 0.8888888888888888
  - 0.9059959349593495
  train_average_precision_samples_oob:
  - 0.8902195608782435
  - 0.8681910569105691
  - 0.8804563492063492
  - 0.8627272727272727
  - 0.8721544715447155
  train_average_precision_weighted:
  - 0.9261700973546406
  - 0.9296601122765973
  - 0.9431465308889767
  - 0.9257600504444301
  - 0.9184212241357808
  train_average_precision_weighted_oob:
  - 0.9134821297377796
  - 0.9101822956856127
  - 0.9152397363767719
  - 0.916823099782394
  - 0.904919531238582
  train_f1_macro:
  - 0.9231536926147705
  - 0.9126016260162602
  - 0.9226190476190478
  - 0.9111111111111111
  - 0.9288617886178862
  train_f1_macro_oob:
  - 0.9191616766467067
  - 0.9065040650406503
  - 0.9196428571428572
  - 0.9090909090909092
  - 0.9227642276422765
  train_f1_micro:
  - 0.9231536926147704
  - 0.9126016260162602
  - 0.9226190476190477
  - 0.9111111111111111
  - 0.9288617886178862
  train_f1_micro_oob:
  - 0.9191616766467066
  - 0.9065040650406504
  - 0.9196428571428571
  - 0.9090909090909091
  - 0.9227642276422764
  train_f1_samples:
  - 0.9231536926147704
  - 0.9126016260162602
  - 0.9226190476190477
  - 0.911111111111111
  - 0.928861788617886
  train_f1_samples_oob:
  - 0.9191616766467064
  - 0.9065040650406505
  - 0.9196428571428571
  - 0.9090909090909091
  - 0.9227642276422763
  train_f1_weighted:
  - 0.9155718413918432
  - 0.9142417290509539
  - 0.9252121640735502
  - 0.9157545605306799
  - 0.9298176768896401
  train_f1_weighted_oob:
  - 0.9088092471772872
  - 0.9057292924414392
  - 0.9191419141914192
  - 0.9116538519523593
  - 0.9213052402801256
  train_jaccard_macro:
  - 0.8581794690577417
  - 0.8404993838549094
  - 0.8574841273250134
  - 0.8389349943736096
  - 0.8679141848310206
  train_jaccard_macro_oob:
  - 0.851486250674336
  - 0.8306469034539209
  - 0.8522276719856698
  - 0.835419721011451
  - 0.8573243162137154
  train_jaccard_micro:
  - 0.8572752548656163
  - 0.8392523364485981
  - 0.856353591160221
  - 0.8367346938775511
  - 0.8671726755218216
  train_jaccard_micro_oob:
  - 0.850415512465374
  - 0.828996282527881
  - 0.8512396694214877
  - 0.8333333333333334
  - 0.8566037735849057
  train_jaccard_samples:
  - 0.8745366410037068
  - 0.8585946573751453
  - 0.8730158730158731
  - 0.8539682539682542
  - 0.8842915214866434
  train_jaccard_samples_oob:
  - 0.86883376104933
  - 0.8500290360046457
  - 0.8694727891156462
  - 0.8509379509379511
  - 0.8738385598141695
  train_jaccard_weighted:
  - 0.8446991016328697
  - 0.8428126149445605
  - 0.8616877095018255
  - 0.846497862718159
  - 0.869115229112016
  train_jaccard_weighted_oob:
  - 0.8334996625944172
  - 0.8287284116882866
  - 0.8509645202042766
  - 0.8393582341358405
  - 0.854367099810567
  train_label_ranking_average_precision_score:
  - 0.9271457085828342
  - 0.9123983739837398
  - 0.9148809523809525
  - 0.8888888888888888
  - 0.9059959349593495
  train_label_ranking_average_precision_score_oob:
  - 0.8902195608782436
  - 0.8681910569105692
  - 0.8804563492063493
  - 0.8627272727272726
  - 0.8721544715447153
  train_matthews_corrcoef_macro:
  - 0.4019329051365947
  - 0.341103479742037
  - 0.3779146664242079
  - 0.28545283442467073
  - 0.4163897930143137
  train_matthews_corrcoef_macro_oob:
  - 0.39123269810175604
  - 0.3064142314153515
  - 0.3717424727714846
  - 0.2814455325083057
  - 0.39606793228969117
  train_matthews_corrcoef_micro:
  - 0.747242928912158
  - 0.7149861574078682
  - 0.7446205999600195
  - 0.7068706617031624
  - 0.7721317390454565
  train_matthews_corrcoef_micro_oob:
  - 0.7332336617920335
  - 0.6933098765279369
  - 0.7340420169391292
  - 0.6995071932110369
  - 0.7510944818925168
  train_matthews_corrcoef_samples:
  - 0.6850236984435475
  - 0.6314885221558352
  - 0.6579108851049068
  - 0.5929191642516564
  - 0.7128579135680363
  train_matthews_corrcoef_samples_oob:
  - 0.6685645170180954
  - 0.6051780888383514
  - 0.6507169774636145
  - 0.5845406458756948
  - 0.6831867259740378
  train_matthews_corrcoef_weighted:
  - 0.6566258464237577
  - 0.6185747798893584
  - 0.6583007504619199
  - 0.579867661406805
  - 0.6885404226549922
  train_matthews_corrcoef_weighted_oob:
  - 0.6405758150831072
  - 0.5838797782378199
  - 0.6457110293525288
  - 0.5717319986390318
  - 0.6646497386596563
  train_ndgc:
  - 0.9463155783403865
  - 0.9369537501355096
  - 0.9380606062927613
  - 0.9189617415280871
  - 0.9316349287487946
  train_ndgc_oob:
  - 0.9200916164537679
  - 0.903620810085507
  - 0.9125607812872975
  - 0.9004731836455896
  - 0.9071179980875521
  train_neg_coverage_error:
  - -1.3952095808383234
  - -1.5304878048780488
  - -1.4761904761904763
  - -1.5575757575757576
  - -1.4878048780487805
  train_neg_coverage_error_oob:
  - -1.5808383233532934
  - -1.6646341463414633
  - -1.630952380952381
  - -1.690909090909091
  - -1.646341463414634
  train_neg_hamming_loss_macro:
  - -0.07684630738522953
  - -0.08739837398373984
  - -0.07738095238095237
  - -0.08888888888888886
  - -0.07113821138211383
  train_neg_hamming_loss_macro_oob:
  - -0.08083832335329343
  - -0.0934959349593496
  - -0.08035714285714286
  - -0.0909090909090909
  - -0.0772357723577236
  train_neg_hamming_loss_micro:
  - -0.07684630738522955
  - -0.08739837398373984
  - -0.07738095238095238
  - -0.08888888888888889
  - -0.07113821138211382
  train_neg_hamming_loss_micro_oob:
  - -0.08083832335329341
  - -0.09349593495934959
  - -0.08035714285714286
  - -0.09090909090909091
  - -0.07723577235772358
  train_neg_hamming_loss_samples:
  - -0.07684630738522953
  - -0.08739837398373983
  - -0.07738095238095237
  - -0.08888888888888888
  - -0.0711382113821138
  train_neg_hamming_loss_samples_oob:
  - -0.08083832335329341
  - -0.09349593495934959
  - -0.08035714285714286
  - -0.09090909090909091
  - -0.07723577235772357
  train_neg_hamming_loss_weighted:
  - -0.08442815860815682
  - -0.08575827094904613
  - -0.07478783592644977
  - -0.08424543946932007
  - -0.07018232311035981
  train_neg_hamming_loss_weighted_oob:
  - -0.09119075282271279
  - -0.09427070755856075
  - -0.08085808580858085
  - -0.08834614804764059
  - -0.07869475971987443
  train_neg_label_ranking_loss:
  - -0.0377245508982036
  - -0.05433604336043361
  - -0.05095899470899471
  - -0.06454545454545453
  - -0.048932926829268295
  train_neg_label_ranking_loss_oob:
  - -0.07095808383233534
  - -0.08092818428184281
  - -0.08019179894179894
  - -0.0874074074074074
  - -0.07765921409214092
  train_precision_macro:
  - 0.9231536926147705
  - 0.9126016260162602
  - 0.9226190476190478
  - 0.9111111111111111
  - 0.9288617886178862
  train_precision_macro_oob:
  - 0.9191616766467067
  - 0.9065040650406503
  - 0.9196428571428572
  - 0.9090909090909092
  - 0.9227642276422765
  train_precision_micro:
  - 0.9231536926147704
  - 0.9126016260162602
  - 0.9226190476190477
  - 0.9111111111111111
  - 0.9288617886178862
  train_precision_micro_oob:
  - 0.9191616766467066
  - 0.9065040650406504
  - 0.9196428571428571
  - 0.9090909090909091
  - 0.9227642276422764
  train_precision_samples:
  - 0.9231536926147704
  - 0.9126016260162602
  - 0.9226190476190477
  - 0.911111111111111
  - 0.928861788617886
  train_precision_samples_oob:
  - 0.9191616766467064
  - 0.9065040650406505
  - 0.9196428571428571
  - 0.9090909090909091
  - 0.9227642276422763
  train_precision_weighted:
  - 0.9155718413918432
  - 0.9142417290509539
  - 0.9252121640735502
  - 0.9157545605306799
  - 0.9298176768896401
  train_precision_weighted_oob:
  - 0.9088092471772872
  - 0.9057292924414392
  - 0.9191419141914192
  - 0.9116538519523593
  - 0.9213052402801256
  train_recall_macro:
  - 0.9231536926147705
  - 0.9126016260162602
  - 0.9226190476190478
  - 0.9111111111111111
  - 0.9288617886178862
  train_recall_macro_oob:
  - 0.9191616766467067
  - 0.9065040650406503
  - 0.9196428571428572
  - 0.9090909090909092
  - 0.9227642276422765
  train_recall_micro:
  - 0.9231536926147704
  - 0.9126016260162602
  - 0.9226190476190477
  - 0.9111111111111111
  - 0.9288617886178862
  train_recall_micro_oob:
  - 0.9191616766467066
  - 0.9065040650406504
  - 0.9196428571428571
  - 0.9090909090909091
  - 0.9227642276422764
  train_recall_samples:
  - 0.9231536926147704
  - 0.9126016260162602
  - 0.9226190476190477
  - 0.911111111111111
  - 0.928861788617886
  train_recall_samples_oob:
  - 0.9191616766467064
  - 0.9065040650406505
  - 0.9196428571428571
  - 0.9090909090909091
  - 0.9227642276422763
  train_recall_weighted:
  - 0.9155718413918432
  - 0.9142417290509539
  - 0.9252121640735502
  - 0.9157545605306799
  - 0.9298176768896401
  train_recall_weighted_oob:
  - 0.9088092471772872
  - 0.9057292924414392
  - 0.9191419141914192
  - 0.9116538519523593
  - 0.9213052402801256
  train_roc_auc_macro:
  - 0.9788616929257997
  - 0.9780507690445139
  - 0.9842028078208168
  - 0.976364922644987
  - 0.9733918016928239
  train_roc_auc_macro_oob:
  - 0.9682162921969796
  - 0.9578333987884462
  - 0.9720757802310799
  - 0.9623268918011472
  - 0.9598023642251485
  train_roc_auc_micro:
  - 0.957832560046211
  - 0.9545972500063306
  - 0.9577887379308649
  - 0.9505955646356304
  - 0.9548473069813376
  train_roc_auc_micro_oob:
  - 0.9468947397842249
  - 0.9392962953584361
  - 0.9463245952386802
  - 0.9347495727950866
  - 0.941562634524322
  train_roc_auc_samples:
  - 0.9622754491017963
  - 0.9456639566395665
  - 0.9490410052910052
  - 0.9354545454545455
  - 0.9510670731707318
  train_roc_auc_samples_oob:
  - 0.9290419161676645
  - 0.9190718157181571
  - 0.919808201058201
  - 0.9125925925925926
  - 0.9223407859078591
  train_roc_auc_weighted:
  - 0.9673225230270965
  - 0.9712146811307706
  - 0.9734509360790502
  - 0.9641257808679248
  - 0.9672955794768298
  train_roc_auc_weighted_oob:
  - 0.9561983971879997
  - 0.9561222437707121
  - 0.9607683203930695
  - 0.9485665945264586
  - 0.9558717788443156
start: 2023-12-21 06:59:32.793702
wrapper: null
