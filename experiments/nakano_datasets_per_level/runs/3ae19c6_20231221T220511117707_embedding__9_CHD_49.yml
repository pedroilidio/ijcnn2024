active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAUwAAAAAAAAPA/AAAAAAAAAMAAAAAAAAAUQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:07:02.254123
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__9
  params: {}
hash: 3ae19c648313e2e71359abe5c4fd364ffc89f08c3d717ecd4164e2112220871d
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3ae19c6_20231221T220511117707_embedding__9_CHD_49.yml
results:
  fit_time:
  - 85.29043436050415
  - 85.69795083999634
  - 85.54112720489502
  - 88.58170747756958
  - 90.11520266532898
  score_time:
  - 5.749938726425171
  - 6.867748498916626
  - 6.289378881454468
  - 6.553200006484985
  - 6.378009080886841
  test_average_precision_macro:
  - 0.5514445170384632
  - 0.5200023140710881
  - 0.5927311839036229
  - 0.5343774727878543
  - 0.547889335789956
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7136623430835073
  - 0.6493991950222623
  - 0.6977864340458034
  - 0.7023480735594222
  - 0.7166115505826528
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7974494949494949
  - 0.7677083333333333
  - 0.7865277777777778
  - 0.771202064896755
  - 0.8134958071278825
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6706883791074594
  - 0.6284784385488272
  - 0.6644741662456601
  - 0.664126510142504
  - 0.6757927729199258
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.703030303030303
  - 0.7011494252873564
  - 0.7015151515151515
  - 0.7123893805309733
  - 0.7327044025157233
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.703030303030303
  - 0.7011494252873564
  - 0.7015151515151515
  - 0.7123893805309734
  - 0.7327044025157232
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7030303030303032
  - 0.7011494252873562
  - 0.7015151515151515
  - 0.7123893805309734
  - 0.7327044025157233
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6649889902485059
  - 0.6530021702435496
  - 0.6570972886762361
  - 0.6734574729596853
  - 0.6941602444857826
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5616381584579697
  - 0.5595424486831334
  - 0.5611984685049195
  - 0.5695882672895701
  - 0.5957045549746388
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5420560747663551
  - 0.5398230088495575
  - 0.5402567094515752
  - 0.5532646048109966
  - 0.5781637717121588
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5764108618654074
  - 0.5779593969249142
  - 0.576969696969697
  - 0.5880779986974677
  - 0.6162174303683738
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5059393329545151
  - 0.4898241669154231
  - 0.49690866015413726
  - 0.5120514227668047
  - 0.5369014615740474
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7974494949494949
  - 0.7677083333333335
  - 0.8047095959595959
  - 0.7712020648967554
  - 0.8229297693920337
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06933815532930611
  - 0.08934231798062169
  - 0.0824641212700823
  - 0.10048539735812005
  - 0.14218557902660486
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3987086681664161
  - 0.38336392551854664
  - 0.3854919074449662
  - 0.4140051675790636
  - 0.4564607593091331
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4122768104204341
  - 0.3996812339309572
  - 0.406239560125856
  - 0.4176322486018263
  - 0.4690526353465484
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0704432083545344
  - 0.09320265811215686
  - 0.07993422341555519
  - 0.10960270152911063
  - 0.14127803113661597
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.873560223912853
  - 0.844305342141155
  - 0.8554779858577972
  - 0.8498060177170834
  - 0.8811453435204046
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8
  - -3.6982758620689653
  - -3.6818181818181817
  - -3.849557522123894
  - -3.7547169811320753
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.296969696969697
  - -0.2988505747126437
  - -0.2984848484848485
  - -0.28761061946902655
  - -0.2672955974842767
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.296969696969697
  - -0.2988505747126437
  - -0.29848484848484846
  - -0.28761061946902655
  - -0.2672955974842767
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29696969696969694
  - -0.29885057471264365
  - -0.29848484848484846
  - -0.28761061946902655
  - -0.2672955974842767
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3350110097514942
  - -0.34699782975645044
  - -0.342902711323764
  - -0.3265425270403146
  - -0.30583975551421744
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20613636363636365
  - -0.22143199233716473
  - -0.1988131313131313
  - -0.22851524090462144
  - -0.18592767295597484
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.703030303030303
  - 0.7011494252873564
  - 0.7015151515151515
  - 0.7123893805309733
  - 0.7327044025157233
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.703030303030303
  - 0.7011494252873564
  - 0.7015151515151515
  - 0.7123893805309734
  - 0.7327044025157232
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7030303030303032
  - 0.7011494252873562
  - 0.7015151515151515
  - 0.7123893805309734
  - 0.7327044025157233
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6649889902485059
  - 0.6530021702435496
  - 0.6570972886762361
  - 0.6734574729596853
  - 0.6941602444857826
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.703030303030303
  - 0.7011494252873564
  - 0.7015151515151515
  - 0.7123893805309733
  - 0.7327044025157233
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.703030303030303
  - 0.7011494252873564
  - 0.7015151515151515
  - 0.7123893805309734
  - 0.7327044025157232
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7030303030303032
  - 0.7011494252873562
  - 0.7015151515151515
  - 0.7123893805309734
  - 0.7327044025157233
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6649889902485059
  - 0.6530021702435496
  - 0.6570972886762361
  - 0.6734574729596853
  - 0.6941602444857826
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6149876556824087
  - 0.5752198897987068
  - 0.6020444219734092
  - 0.5658515021078948
  - 0.5605291470825705
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.787948031598877
  - 0.7845898004434589
  - 0.7955555555555556
  - 0.7860398860398861
  - 0.7973351472471191
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7938636363636364
  - 0.7785680076628352
  - .nan
  - 0.7714847590953786
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6186825836402445
  - 0.5951673093012194
  - 0.6007630176015821
  - 0.6174383396717111
  - 0.5574087156788692
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9996093053436677
  - 0.9997984092024184
  - 0.9993568935500475
  - 0.999769392491188
  - 0.9991977092839145
  train_average_precision_macro_oob:
  - 0.699792989608631
  - 0.6797398552441788
  - 0.6899609427589063
  - 0.6753414034439805
  - 0.7079325435796004
  train_average_precision_micro:
  - 0.9636297579105292
  - 0.9645384405880879
  - 0.9618181868998115
  - 0.9603560037358819
  - 0.9664670208166506
  train_average_precision_micro_oob:
  - 0.7752647739455083
  - 0.7650717087708347
  - 0.7652745885230106
  - 0.7537404849216585
  - 0.7823830199852438
  train_average_precision_samples:
  - 0.9334113607990012
  - 0.9361902050113894
  - 0.9346629213483145
  - 0.9261940673705379
  - 0.9366771838653798
  train_average_precision_samples_oob:
  - 0.8194756554307115
  - 0.8172171602126044
  - 0.8222159800249688
  - 0.815164655605832
  - 0.8268714427121999
  train_average_precision_weighted:
  - 0.9996353805171576
  - 0.9998171117051519
  - 0.9994329324208272
  - 0.9997554920070962
  - 0.9992320850038805
  train_average_precision_weighted_oob:
  - 0.8302121765029339
  - 0.8075275734735555
  - 0.8194098730660718
  - 0.8010314388719335
  - 0.8348462213083298
  train_f1_macro:
  - 0.9277153558052436
  - 0.9301442672741079
  - 0.9254681647940074
  - 0.9272247360482654
  - 0.9213066072754269
  train_f1_macro_oob:
  - 0.7670411985018726
  - 0.7596810933940775
  - 0.7677902621722846
  - 0.7552790346907994
  - 0.7873051224944322
  train_f1_micro:
  - 0.9277153558052434
  - 0.9301442672741078
  - 0.9254681647940075
  - 0.9272247360482655
  - 0.9213066072754269
  train_f1_micro_oob:
  - 0.7670411985018727
  - 0.7596810933940774
  - 0.7677902621722846
  - 0.7552790346907994
  - 0.7873051224944321
  train_f1_samples:
  - 0.9277153558052436
  - 0.9301442672741079
  - 0.9254681647940076
  - 0.9272247360482655
  - 0.9213066072754269
  train_f1_samples_oob:
  - 0.7670411985018727
  - 0.7596810933940774
  - 0.7677902621722845
  - 0.7552790346907995
  - 0.7873051224944321
  train_f1_weighted:
  - 0.9002467388205688
  - 0.904952156058311
  - 0.8979261973100321
  - 0.9005948802328891
  - 0.8924885343349138
  train_f1_weighted_oob:
  - 0.7348294946277782
  - 0.7302174146382188
  - 0.7377055925080572
  - 0.7206179001993482
  - 0.7542991393961029
  train_jaccard_macro:
  - 0.8740464521953281
  - 0.8775996494390704
  - 0.8700843496087342
  - 0.873014044456407
  - 0.863280623676488
  train_jaccard_macro_oob:
  - 0.6348205060914566
  - 0.6252222979572516
  - 0.6350060161676666
  - 0.6198099976499157
  - 0.6591389751603615
  train_jaccard_micro:
  - 0.8651763884037723
  - 0.8694109297374024
  - 0.8612757058208435
  - 0.8643233743409491
  - 0.8540949759119064
  train_jaccard_micro_oob:
  - 0.6221142162818954
  - 0.6124885215794307
  - 0.6231003039513677
  - 0.6067858224780369
  - 0.6492194674012856
  train_jaccard_samples:
  - 0.8828464419475655
  - 0.8856708970604186
  - 0.8799357945425361
  - 0.8828377504848092
  - 0.8719906670908897
  train_jaccard_samples_oob:
  - 0.6523595505617977
  - 0.6429113786744765
  - 0.6536650615302302
  - 0.6415114297467238
  - 0.6827765404602821
  train_jaccard_weighted:
  - 0.8309617100833664
  - 0.8380142843441025
  - 0.8269174806726598
  - 0.8312537433101967
  - 0.8183254719622632
  train_jaccard_weighted_oob:
  - 0.5838551756207488
  - 0.5781542448504874
  - 0.5869866024376437
  - 0.5659642323709183
  - 0.6076511117190245
  train_label_ranking_average_precision_score:
  - 0.9401529338327087
  - 0.9430239179954439
  - 0.9369101123595501
  - 0.9329813976872797
  - 0.941131526849789
  train_label_ranking_average_precision_score_oob:
  - 0.8262172284644186
  - 0.8240508731966585
  - 0.824463171036204
  - 0.8219519859225732
  - 0.8313257856966089
  train_matthews_corrcoef_macro:
  - 0.6217805672204013
  - 0.6101489270691255
  - 0.6040273042034564
  - 0.6059578122483139
  - 0.598358205570685
  train_matthews_corrcoef_macro_oob:
  - 0.26265336890006974
  - 0.23629936232715779
  - 0.26115604071488385
  - 0.23458892802674922
  - 0.31612697731806816
  train_matthews_corrcoef_micro:
  - 0.854865752330017
  - 0.8598366582137756
  - 0.8505139393873667
  - 0.8538130803592328
  - 0.8420579202060953
  train_matthews_corrcoef_micro_oob:
  - 0.5198662075317502
  - 0.5076608001524476
  - 0.5220410377489086
  - 0.4974653856909086
  - 0.5618285246212257
  train_matthews_corrcoef_samples:
  - 0.8478006718115081
  - 0.8553014670481222
  - 0.848393080038749
  - 0.8471894386719628
  - 0.8386831669500191
  train_matthews_corrcoef_samples_oob:
  - 0.5139204207890069
  - 0.5091784869782089
  - 0.5205901907626072
  - 0.4980488089616801
  - 0.5602093599845824
  train_matthews_corrcoef_weighted:
  - 0.6594254614779609
  - 0.6371479833099084
  - 0.6293653216284788
  - 0.6338189354961455
  - 0.6217124724156132
  train_matthews_corrcoef_weighted_oob:
  - 0.28633859814420387
  - 0.26105745669164593
  - 0.28703046008277366
  - 0.25135401557666087
  - 0.3347374281527097
  train_ndgc:
  - 0.9549170880024956
  - 0.9563696583237591
  - 0.9567154724084594
  - 0.9492288090874028
  - 0.9576911324348355
  train_ndgc_oob:
  - 0.8773852646699846
  - 0.8784022249297452
  - 0.883042699703237
  - 0.8766729876403502
  - 0.8821837089738808
  train_neg_coverage_error:
  - -2.853932584269663
  - -2.8861047835990887
  - -2.8696629213483145
  - -2.8959276018099547
  - -2.8396436525612474
  train_neg_coverage_error_oob:
  - -3.3955056179775283
  - -3.5444191343963554
  - -3.4853932584269662
  - -3.497737556561086
  - -3.354120267260579
  train_neg_hamming_loss_macro:
  - -0.07228464419475655
  - -0.06985573272589218
  - -0.0745318352059925
  - -0.07277526395173455
  - -0.07869339272457312
  train_neg_hamming_loss_macro_oob:
  - -0.23295880149812734
  - -0.2403189066059226
  - -0.23220973782771534
  - -0.24472096530920062
  - -0.21269487750556793
  train_neg_hamming_loss_micro:
  - -0.07228464419475655
  - -0.06985573272589218
  - -0.0745318352059925
  - -0.07277526395173455
  - -0.07869339272457312
  train_neg_hamming_loss_micro_oob:
  - -0.23295880149812734
  - -0.24031890660592256
  - -0.23220973782771537
  - -0.2447209653092006
  - -0.21269487750556793
  train_neg_hamming_loss_samples:
  - -0.07228464419475655
  - -0.06985573272589217
  - -0.07453183520599249
  - -0.07277526395173453
  - -0.07869339272457311
  train_neg_hamming_loss_samples_oob:
  - -0.2329588014981273
  - -0.24031890660592256
  - -0.23220973782771534
  - -0.2447209653092006
  - -0.21269487750556793
  train_neg_hamming_loss_weighted:
  - -0.09975326117943122
  - -0.09504784394168883
  - -0.10207380268996796
  - -0.09940511976711071
  - -0.10751146566508618
  train_neg_hamming_loss_weighted_oob:
  - -0.2651705053722217
  - -0.2697825853617813
  - -0.2622944074919428
  - -0.2793820998006518
  - -0.24570086060389718
  train_neg_label_ranking_loss:
  - -0.04657303370786517
  - -0.044014173626929894
  - -0.04892009987515606
  - -0.05133861236802413
  - -0.04578693392724573
  train_neg_label_ranking_loss_oob:
  - -0.14939450686641698
  - -0.16271197165274612
  - -0.15777153558052437
  - -0.162166918049271
  - -0.14317000742390498
  train_precision_macro:
  - 0.9277153558052436
  - 0.9301442672741079
  - 0.9254681647940074
  - 0.9272247360482654
  - 0.9213066072754269
  train_precision_macro_oob:
  - 0.7670411985018726
  - 0.7596810933940775
  - 0.7677902621722846
  - 0.7552790346907994
  - 0.7873051224944322
  train_precision_micro:
  - 0.9277153558052434
  - 0.9301442672741078
  - 0.9254681647940075
  - 0.9272247360482655
  - 0.9213066072754269
  train_precision_micro_oob:
  - 0.7670411985018727
  - 0.7596810933940774
  - 0.7677902621722846
  - 0.7552790346907994
  - 0.7873051224944321
  train_precision_samples:
  - 0.9277153558052436
  - 0.9301442672741079
  - 0.9254681647940076
  - 0.9272247360482655
  - 0.9213066072754269
  train_precision_samples_oob:
  - 0.7670411985018727
  - 0.7596810933940774
  - 0.7677902621722845
  - 0.7552790346907995
  - 0.7873051224944321
  train_precision_weighted:
  - 0.9002467388205688
  - 0.904952156058311
  - 0.8979261973100321
  - 0.9005948802328891
  - 0.8924885343349138
  train_precision_weighted_oob:
  - 0.7348294946277782
  - 0.7302174146382188
  - 0.7377055925080572
  - 0.7206179001993482
  - 0.7542991393961029
  train_recall_macro:
  - 0.9277153558052436
  - 0.9301442672741079
  - 0.9254681647940074
  - 0.9272247360482654
  - 0.9213066072754269
  train_recall_macro_oob:
  - 0.7670411985018726
  - 0.7596810933940775
  - 0.7677902621722846
  - 0.7552790346907994
  - 0.7873051224944322
  train_recall_micro:
  - 0.9277153558052434
  - 0.9301442672741078
  - 0.9254681647940075
  - 0.9272247360482655
  - 0.9213066072754269
  train_recall_micro_oob:
  - 0.7670411985018727
  - 0.7596810933940774
  - 0.7677902621722846
  - 0.7552790346907994
  - 0.7873051224944321
  train_recall_samples:
  - 0.9277153558052436
  - 0.9301442672741079
  - 0.9254681647940076
  - 0.9272247360482655
  - 0.9213066072754269
  train_recall_samples_oob:
  - 0.7670411985018727
  - 0.7596810933940774
  - 0.7677902621722845
  - 0.7552790346907995
  - 0.7873051224944321
  train_recall_weighted:
  - 0.9002467388205688
  - 0.904952156058311
  - 0.8979261973100321
  - 0.9005948802328891
  - 0.8924885343349138
  train_recall_weighted_oob:
  - 0.7348294946277782
  - 0.7302174146382188
  - 0.7377055925080572
  - 0.7206179001993482
  - 0.7542991393961029
  train_roc_auc_macro:
  - 0.9996912990910357
  - 0.9998554716134397
  - 0.9995481284262443
  - 0.9997731557654351
  - 0.9993216968312844
  train_roc_auc_macro_oob:
  - 0.7640159958645943
  - 0.7269563651763599
  - 0.742350946839912
  - 0.7230121028373273
  - 0.7812565864868399
  train_roc_auc_micro:
  - 0.9714486000317414
  - 0.9710663786147236
  - 0.9695045054585859
  - 0.9687334797165699
  - 0.9724130722872558
  train_roc_auc_micro_oob:
  - 0.8568955075769426
  - 0.8440185826343147
  - 0.8480669261386437
  - 0.8418052438277901
  - 0.8626014757652658
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9996616651171868
  - 0.9998544674522819
  - 0.9995916664765742
  - 0.999725149995472
  - 0.9992339842869036
  train_roc_auc_weighted_oob:
  - 0.8001863940359745
  - 0.7687723593697103
  - 0.7752020137860649
  - 0.7499214831038215
  - 0.8077051184615526
start: 2023-12-21 22:05:11.117707
wrapper: null
