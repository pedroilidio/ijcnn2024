active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8L8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA8D8AAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5yZmZmZmek/nJmZmZmZ6T+ZmZmZmZkBwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:09:12.008755
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 05be2e41a8e26fc40477c7f7d7765bb1847caa6ddd7fc45926b38e2ccb755f1b
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/05be2e4_20231212T170818328826_embedding_weak__9_birds.yml
results:
  fit_time:
  - 30.09791898727417
  - 30.36238384246826
  - 29.06152582168579
  - 28.255825996398926
  - 32.240046977996826
  score_time:
  - 6.865001201629639
  - 6.76129150390625
  - 6.949341773986816
  - 7.127310514450073
  - 7.300512075424194
  test_average_precision_macro:
  - 0.3760548566295614
  - 0.2677468507059722
  - 0.2965963416962987
  - 0.27468581522113533
  - 0.3028415615350478
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.25023784028479257
  - 0.1970178985078738
  - 0.22465985578874498
  - 0.1808412695551471
  - 0.2259986941575504
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2571672864889919
  - 0.23998751982678113
  - 0.22396102951278507
  - 0.209675786629671
  - 0.23279073962213495
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4210054971092378
  - 0.3674716452901447
  - 0.38787514222880054
  - 0.35810389987674685
  - 0.3987045028239345
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9143206854345166
  - 0.9114647082823338
  - 0.9069767441860466
  - 0.893920848633211
  - 0.908200734394125
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9143206854345165
  - 0.9114647082823337
  - 0.9069767441860465
  - 0.893920848633211
  - 0.9082007343941249
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9143206854345165
  - 0.9114647082823337
  - 0.9069767441860465
  - 0.8939208486332109
  - 0.9082007343941249
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9047872655186697
  - 0.8973018448410551
  - 0.8954362650813081
  - 0.8855377906976744
  - 0.8968933962814012
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8440277061533303
  - 0.8397208284163706
  - 0.8311987592079604
  - 0.8111613848969427
  - 0.8332958453018522
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8421645997745209
  - 0.8373313343328336
  - 0.8297872340425532
  - 0.8081888601991885
  - 0.8318385650224215
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8585459655125984
  - 0.854110805397139
  - 0.8489582966933826
  - 0.8283809649544561
  - 0.8505260590936358
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.827548922808501
  - 0.8153199619518103
  - 0.8117467896164929
  - 0.7963795314543326
  - 0.8143635835751203
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.714531627574263
  - 0.6663441089740679
  - 0.6813253705980564
  - 0.6670401277149426
  - 0.7134108946608948
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2814430982351565
  - 0.182804970473058
  - 0.1915371785455991
  - 0.22655178182050742
  - 0.23353837795656932
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3144103702852344
  - 0.1930217209330031
  - 0.24806883320721942
  - 0.23732767458705348
  - 0.24615893175312936
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.12421976014446527
  - 0.0738827127287126
  - 0.09848457521444774
  - 0.09470238359824137
  - 0.08892353548725017
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.340570857997142
  - 0.22141853500990932
  - 0.27018018606719046
  - 0.2910014290659827
  - 0.28855883092557505
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.33617998578774966
  - 0.3297255266966252
  - 0.3132960229215866
  - 0.3004054198954419
  - 0.3191636945708528
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.689922480620155
  - -4.046511627906977
  - -3.9302325581395348
  - -4.224806201550388
  - -3.852713178294574
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08567931456548346
  - -0.08853529171766623
  - -0.09302325581395347
  - -0.10607915136678907
  - -0.09179926560587515
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08567931456548347
  - -0.08853529171766626
  - -0.09302325581395349
  - -0.10607915136678907
  - -0.09179926560587515
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08567931456548347
  - -0.08853529171766626
  - -0.09302325581395349
  - -0.10607915136678908
  - -0.09179926560587515
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09521273448133025
  - -0.10269815515894477
  - -0.10456373491869207
  - -0.11446220930232556
  - -0.10310660371859885
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.12305369176094211
  - -0.14414804681562546
  - -0.13432005877286313
  - -0.15158015402543445
  - -0.11931592752386184
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9143206854345166
  - 0.9114647082823338
  - 0.9069767441860466
  - 0.893920848633211
  - 0.908200734394125
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9143206854345165
  - 0.9114647082823337
  - 0.9069767441860465
  - 0.893920848633211
  - 0.9082007343941249
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9143206854345165
  - 0.9114647082823337
  - 0.9069767441860465
  - 0.8939208486332109
  - 0.9082007343941249
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9047872655186697
  - 0.8973018448410551
  - 0.8954362650813081
  - 0.8855377906976744
  - 0.8968933962814012
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9143206854345166
  - 0.9114647082823338
  - 0.9069767441860466
  - 0.893920848633211
  - 0.908200734394125
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9143206854345165
  - 0.9114647082823337
  - 0.9069767441860465
  - 0.893920848633211
  - 0.9082007343941249
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9143206854345165
  - 0.9114647082823337
  - 0.9069767441860465
  - 0.8939208486332109
  - 0.9082007343941249
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9047872655186697
  - 0.8973018448410551
  - 0.8954362650813081
  - 0.8855377906976744
  - 0.8968933962814012
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8657160410447365
  - 0.8206944963193987
  - 0.8320644105355164
  - 0.8276948500272058
  - 0.8636442135893545
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8679652540142142
  - 0.8342313829964814
  - 0.8507885330236722
  - 0.8400875753336203
  - 0.8633577040098088
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8652745723786401
  - 0.8264162036963275
  - 0.8502813476854006
  - 0.8433695904329024
  - 0.8661184870060104
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.3578465215666763
  - 0.3610271613858502
  - 0.34022466107476584
  - 0.3312003296151397
  - 0.34551393137974273
  train_average_precision_macro_oob:
  - 0.28482203829665254
  - 0.2957049640039586
  - 0.28785731431449174
  - 0.2754398967289804
  - 0.28613068472774245
  train_average_precision_micro:
  - 0.3222099354453055
  - 0.2881872378290194
  - 0.270880114689361
  - 0.26557748358587135
  - 0.29270182004383105
  train_average_precision_micro_oob:
  - 0.2620909361082514
  - 0.23718424206503497
  - 0.2280048169817578
  - 0.22304663517955053
  - 0.2441016492960535
  train_average_precision_samples:
  - 0.31253627132987594
  - 0.32413818022345153
  - 0.30391969222637827
  - 0.28016661435750584
  - 0.32636776579363785
  train_average_precision_samples_oob:
  - 0.25595525955489323
  - 0.2561789117555746
  - 0.23973717514067192
  - 0.2291795417663798
  - 0.26033460426650024
  train_average_precision_weighted:
  - 0.46415474588025774
  - 0.4694306552863634
  - 0.4487129011746371
  - 0.44089226184908453
  - 0.46723566344068335
  train_average_precision_weighted_oob:
  - 0.36698398505635704
  - 0.3838569690781224
  - 0.38201983225957575
  - 0.3717519009607384
  - 0.38836524985359844
  train_f1_macro:
  - 0.9107507139942882
  - 0.9061607507139943
  - 0.9021827825377396
  - 0.8945328437372502
  - 0.9016727866177071
  train_f1_macro_oob:
  - 0.9168706650346797
  - 0.9109547123623013
  - 0.9080987352101183
  - 0.89953080375357
  - 0.9066707466340268
  train_f1_micro:
  - 0.9107507139942881
  - 0.9061607507139943
  - 0.9021827825377396
  - 0.8945328437372501
  - 0.9016727866177071
  train_f1_micro_oob:
  - 0.9168706650346797
  - 0.9109547123623011
  - 0.9080987352101183
  - 0.89953080375357
  - 0.9066707466340269
  train_f1_samples:
  - 0.910750713994288
  - 0.9061607507139943
  - 0.9021827825377398
  - 0.8945328437372501
  - 0.9016727866177071
  train_f1_samples_oob:
  - 0.9168706650346798
  - 0.9109547123623011
  - 0.9080987352101184
  - 0.89953080375357
  - 0.906670746634027
  train_f1_weighted:
  - 0.9046978522833387
  - 0.9039497969730529
  - 0.9011404722581798
  - 0.8949546084239691
  - 0.8997864869288339
  train_f1_weighted_oob:
  - 0.9033231061111359
  - 0.9042524916943522
  - 0.9001063845615914
  - 0.8939708786512217
  - 0.9014492106711898
  train_jaccard_macro:
  - 0.8367744718394677
  - 0.829604956550068
  - 0.822612927200051
  - 0.8098867294732217
  - 0.8212801926520773
  train_jaccard_macro_oob:
  - 0.8475174622353349
  - 0.8378509853176477
  - 0.83263637750342
  - 0.8184424043528574
  - 0.8297052159102588
  train_jaccard_micro:
  - 0.8361269781814776
  - 0.8284222305110034
  - 0.8217968967759918
  - 0.8091898874331057
  - 0.8209509658246656
  train_jaccard_micro_oob:
  - 0.846501553818627
  - 0.836470918797415
  - 0.8316674451191032
  - 0.8174066178515155
  - 0.829275118947663
  train_jaccard_samples:
  - 0.8516789086722144
  - 0.8504042151177099
  - 0.8436485630056286
  - 0.8295389830700167
  - 0.8399063215432067
  train_jaccard_samples_oob:
  - 0.8606589143298405
  - 0.8571400928410796
  - 0.8518974511185673
  - 0.836827953933276
  - 0.8474741061846347
  train_jaccard_weighted:
  - 0.8264498333717815
  - 0.8253617320389527
  - 0.820536167662986
  - 0.8103019073276254
  - 0.8181622431287972
  train_jaccard_weighted_oob:
  - 0.82460311638772
  - 0.8260414547274553
  - 0.8189806850019254
  - 0.8089108854811681
  - 0.8209786260875455
  train_label_ranking_average_precision_score:
  - 0.7679626279190231
  - 0.7873164747970944
  - 0.759346048815525
  - 0.7355929709466525
  - 0.7759801688944122
  train_label_ranking_average_precision_score_oob:
  - 0.71138161614404
  - 0.7193572063292178
  - 0.6951635317298195
  - 0.6846058983555272
  - 0.7099470073672751
  train_matthews_corrcoef_macro:
  - 0.29461451698159297
  - 0.32187204282921555
  - 0.3235431592509188
  - 0.30726081098023034
  - 0.31474822403961195
  train_matthews_corrcoef_macro_oob:
  - 0.249097570708886
  - 0.2924776455430194
  - 0.27704421163207554
  - 0.2787052104866522
  - 0.28202741277353965
  train_matthews_corrcoef_micro:
  - 0.3241207282967738
  - 0.33502417794149014
  - 0.3392217401457364
  - 0.3256246813308029
  - 0.32011906289815156
  train_matthews_corrcoef_micro_oob:
  - 0.2925875382926863
  - 0.3042705016432322
  - 0.2851681885003793
  - 0.2905778691417203
  - 0.29881997276304983
  train_matthews_corrcoef_samples:
  - 0.13699611994943633
  - 0.14518609466133714
  - 0.15229715374258687
  - 0.14827371315637997
  - 0.14714994949778115
  train_matthews_corrcoef_samples_oob:
  - 0.11475277558829289
  - 0.11736342731894073
  - 0.11243905706094821
  - 0.12715150033630407
  - 0.13133319971619678
  train_matthews_corrcoef_weighted:
  - 0.366361809185261
  - 0.38864594866723695
  - 0.39655354886834054
  - 0.38067053760835623
  - 0.3763279572912902
  train_matthews_corrcoef_weighted_oob:
  - 0.3038141804390018
  - 0.35141080958561755
  - 0.327995514190054
  - 0.33639760521986317
  - 0.3491848785909521
  train_ndgc:
  - 0.3810917928394095
  - 0.3871607500609684
  - 0.3738535435825648
  - 0.35635395075657017
  - 0.3932097986826661
  train_ndgc_oob:
  - 0.3374372669776065
  - 0.3365874551109501
  - 0.3254947719418603
  - 0.31741116997521257
  - 0.3445128887728775
  train_neg_coverage_error:
  - -2.383720930232558
  - -2.354651162790698
  - -2.5251937984496124
  - -2.5329457364341086
  - -2.3352713178294575
  train_neg_coverage_error_oob:
  - -3.808139534883721
  - -3.6763565891472867
  - -3.891472868217054
  - -3.761627906976744
  - -3.755813953488372
  train_neg_hamming_loss_macro:
  - -0.08924928600571196
  - -0.09383924928600572
  - -0.0978172174622603
  - -0.1054671562627499
  - -0.09832721338229294
  train_neg_hamming_loss_macro_oob:
  - -0.08312933496532027
  - -0.0890452876376989
  - -0.09190126478988167
  - -0.10046919624643003
  - -0.09332925336597306
  train_neg_hamming_loss_micro:
  - -0.08924928600571196
  - -0.09383924928600572
  - -0.0978172174622603
  - -0.1054671562627499
  - -0.09832721338229294
  train_neg_hamming_loss_micro_oob:
  - -0.08312933496532028
  - -0.0890452876376989
  - -0.09190126478988168
  - -0.10046919624643003
  - -0.09332925336597307
  train_neg_hamming_loss_samples:
  - -0.08924928600571194
  - -0.0938392492860057
  - -0.09781721746226028
  - -0.1054671562627499
  - -0.09832721338229294
  train_neg_hamming_loss_samples_oob:
  - -0.08312933496532027
  - -0.0890452876376989
  - -0.09190126478988167
  - -0.10046919624643003
  - -0.09332925336597307
  train_neg_hamming_loss_weighted:
  - -0.0953021477166615
  - -0.09605020302694722
  - -0.09885952774182029
  - -0.10504539157603089
  - -0.10021351307116608
  train_neg_hamming_loss_weighted_oob:
  - -0.0966768938888642
  - -0.09574750830564784
  - -0.09989361543840855
  - -0.10602912134877826
  - -0.09855078932881015
  train_neg_label_ranking_loss:
  - -0.0638911003180839
  - -0.06144627399757359
  - -0.07043825480897983
  - -0.07156839082283678
  - -0.060356975477529516
  train_neg_label_ranking_loss_oob:
  - -0.12427770651094863
  - -0.11894601161872025
  - -0.12840120072079714
  - -0.12370200241694769
  - -0.11961238952945517
  train_precision_macro:
  - 0.9107507139942882
  - 0.9061607507139943
  - 0.9021827825377396
  - 0.8945328437372502
  - 0.9016727866177071
  train_precision_macro_oob:
  - 0.9168706650346797
  - 0.9109547123623013
  - 0.9080987352101183
  - 0.89953080375357
  - 0.9066707466340268
  train_precision_micro:
  - 0.9107507139942881
  - 0.9061607507139943
  - 0.9021827825377396
  - 0.8945328437372501
  - 0.9016727866177071
  train_precision_micro_oob:
  - 0.9168706650346797
  - 0.9109547123623011
  - 0.9080987352101183
  - 0.89953080375357
  - 0.9066707466340269
  train_precision_samples:
  - 0.910750713994288
  - 0.9061607507139943
  - 0.9021827825377398
  - 0.8945328437372501
  - 0.9016727866177071
  train_precision_samples_oob:
  - 0.9168706650346798
  - 0.9109547123623011
  - 0.9080987352101184
  - 0.89953080375357
  - 0.906670746634027
  train_precision_weighted:
  - 0.9046978522833387
  - 0.9039497969730529
  - 0.9011404722581798
  - 0.8949546084239691
  - 0.8997864869288339
  train_precision_weighted_oob:
  - 0.9033231061111359
  - 0.9042524916943522
  - 0.9001063845615914
  - 0.8939708786512217
  - 0.9014492106711898
  train_recall_macro:
  - 0.9107507139942882
  - 0.9061607507139943
  - 0.9021827825377396
  - 0.8945328437372502
  - 0.9016727866177071
  train_recall_macro_oob:
  - 0.9168706650346797
  - 0.9109547123623013
  - 0.9080987352101183
  - 0.89953080375357
  - 0.9066707466340268
  train_recall_micro:
  - 0.9107507139942881
  - 0.9061607507139943
  - 0.9021827825377396
  - 0.8945328437372501
  - 0.9016727866177071
  train_recall_micro_oob:
  - 0.9168706650346797
  - 0.9109547123623011
  - 0.9080987352101183
  - 0.89953080375357
  - 0.9066707466340269
  train_recall_samples:
  - 0.910750713994288
  - 0.9061607507139943
  - 0.9021827825377398
  - 0.8945328437372501
  - 0.9016727866177071
  train_recall_samples_oob:
  - 0.9168706650346798
  - 0.9109547123623011
  - 0.9080987352101184
  - 0.89953080375357
  - 0.906670746634027
  train_recall_weighted:
  - 0.9046978522833387
  - 0.9039497969730529
  - 0.9011404722581798
  - 0.8949546084239691
  - 0.8997864869288339
  train_recall_weighted_oob:
  - 0.9033231061111359
  - 0.9042524916943522
  - 0.9001063845615914
  - 0.8939708786512217
  - 0.9014492106711898
  train_roc_auc_macro:
  - 0.9372841537496105
  - 0.933756637371355
  - 0.9308530938648214
  - 0.927386787952797
  - 0.9346828896243756
  train_roc_auc_macro_oob:
  - 0.8570323486371796
  - 0.864434532060181
  - 0.8685249891131172
  - 0.8670536406478456
  - 0.8666980067728156
  train_roc_auc_micro:
  - 0.932602288068533
  - 0.9297625462513921
  - 0.9246967244315709
  - 0.9223144902246371
  - 0.9283072290937782
  train_roc_auc_micro_oob:
  - 0.8660206103754808
  - 0.8699449345424127
  - 0.86836379545877
  - 0.8695005643178966
  - 0.8697564511770324
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9393634658467913
  - 0.9408752259599112
  - 0.9355825926290886
  - 0.9335124471756399
  - 0.941869279328141
  train_roc_auc_weighted_oob:
  - 0.8584874888605536
  - 0.872016471048144
  - 0.8690047109781583
  - 0.8709770494818803
  - 0.8713233533142449
start: 2023-12-12 17:08:18.328826
wrapper: null
