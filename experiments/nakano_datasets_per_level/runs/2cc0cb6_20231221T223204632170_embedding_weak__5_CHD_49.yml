active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT80MzMzMzPzP8zMzMzMzPy/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAADwvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:33:09.240094
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__5
  params: {}
hash: 2cc0cb6703be86d5bb02f2e2185f16d6e73ad1d62087f78554683f2502f9d998
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2cc0cb6_20231221T223204632170_embedding_weak__5_CHD_49.yml
results:
  fit_time:
  - 47.96884322166443
  - 48.70480799674988
  - 49.16539001464844
  - 48.63376235961914
  - 49.5115692615509
  score_time:
  - 3.664726972579956
  - 3.8461761474609375
  - 4.144261360168457
  - 3.9002137184143066
  - 3.9392240047454834
  test_average_precision_macro:
  - 0.5669751155583501
  - 0.49371022393826997
  - 0.5061407574502848
  - 0.545102197014466
  - 0.5319911981867297
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6953135574116894
  - 0.682147637773536
  - 0.6659370286609356
  - 0.6969743578068903
  - 0.665247099641703
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7922247023809524
  - 0.7658110119047619
  - 0.7793668668668668
  - 0.7675925925925924
  - 0.7588047910295616
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6434116232052252
  - 0.6243323369855527
  - 0.6073564789189888
  - 0.6694811529428049
  - 0.6580805974753058
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996997
  - 0.6880733944954129
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996997
  - 0.6880733944954128
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996995
  - 0.6880733944954128
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.643074912891986
  - 0.6382055444555443
  - 0.6482706482706483
  - 0.6557676557676558
  - 0.6477639612569128
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5474100919346628
  - 0.5461885965431356
  - 0.5468883593051609
  - 0.5608760561988103
  - 0.5473634577093135
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5238095238095238
  - 0.522083805209513
  - 0.5257731958762887
  - 0.5381062355658198
  - 0.5244755244755245
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.562082560296846
  - 0.5513296227581942
  - 0.5629382629382629
  - 0.5713466713466714
  - 0.5622622026291751
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4829560792361502
  - 0.47635909033476814
  - 0.48904839426483504
  - 0.4972572883883608
  - 0.4877763767077437
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7922247023809526
  - 0.7658110119047615
  - 0.7793668668668673
  - 0.7766016016016017
  - 0.7771534148827727
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.04419748828528253
  - 0.03540201691530189
  - 0.05645790520168059
  - 0.06294905828613083
  - 0.014343808681121202
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3965648853122976
  - 0.3917676203527715
  - 0.393502969895092
  - 0.4163685056158422
  - 0.3890881779662404
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3958025047481181
  - 0.3977922754244227
  - 0.4072040184154067
  - 0.4333952695911391
  - 0.3940601734688606
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03387072811678476
  - 0.02910713312645489
  - 0.045049809126481544
  - 0.055280165655581
  - 0.012771575945761622
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8649479251790027
  - 0.8454325070813257
  - 0.8586318255581898
  - 0.8430657440456663
  - 0.8322540898262425
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8125
  - -3.8035714285714284
  - -3.900900900900901
  - -3.810810810810811
  - -3.908256880733945
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.31250000000000006
  - -0.3139880952380953
  - -0.3108108108108108
  - -0.3003003003003003
  - -0.3119266055045872
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3125
  - -0.31398809523809523
  - -0.3108108108108108
  - -0.3003003003003003
  - -0.3119266055045872
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3125
  - -0.31398809523809523
  - -0.3108108108108108
  - -0.30030030030030025
  - -0.3119266055045871
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.35692508710801396
  - -0.36179445554445555
  - -0.3517293517293517
  - -0.3442323442323442
  - -0.3522360387430873
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21535218253968252
  - -0.2308779761904762
  - -0.22247247247247243
  - -0.2135135135135135
  - -0.21768603465851175
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996997
  - 0.6880733944954129
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996997
  - 0.6880733944954128
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996995
  - 0.6880733944954128
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.643074912891986
  - 0.6382055444555443
  - 0.6482706482706483
  - 0.6557676557676558
  - 0.6477639612569128
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996997
  - 0.6880733944954129
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996997
  - 0.6880733944954128
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6875
  - 0.6860119047619048
  - 0.6891891891891891
  - 0.6996996996996995
  - 0.6880733944954128
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.643074912891986
  - 0.6382055444555443
  - 0.6482706482706483
  - 0.6557676557676558
  - 0.6477639612569128
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6004960256854514
  - 0.5463411932300174
  - 0.5846769245090263
  - 0.6124733820552204
  - 0.5835694292998367
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7829766052762569
  - 0.7748106815464328
  - 0.7709974236290025
  - 0.786704085388296
  - 0.7781142895119103
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7846478174603175
  - 0.7691220238095238
  - 0.7775275275275275
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6124125389064923
  - 0.5764073087877095
  - 0.5699566652474255
  - 0.6283397620072049
  - 0.607104183674958
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8680748983756619
  - 0.8651136273531668
  - 0.878186219123588
  - 0.8651025988456854
  - 0.8635893698964164
  train_average_precision_macro_oob:
  - 0.6249477075047892
  - 0.6341801015882704
  - 0.643377931720677
  - 0.6250030174025591
  - 0.6346107258933052
  train_average_precision_micro:
  - 0.7500031792100899
  - 0.7496853075734201
  - 0.7551213934229609
  - 0.7359713975793192
  - 0.7129231159291715
  train_average_precision_micro_oob:
  - 0.7071648211661768
  - 0.7162142705801751
  - 0.7160126359805143
  - 0.7018644729037942
  - 0.6821239881490287
  train_average_precision_samples:
  - 0.8045993227990971
  - 0.8188550288437421
  - 0.8122434934934933
  - 0.8052552552552552
  - 0.7979540358744395
  train_average_precision_samples_oob:
  - 0.7875846501128667
  - 0.7875125407574617
  - 0.7899461961961961
  - 0.7881662912912912
  - 0.7733028151469855
  train_average_precision_weighted:
  - 0.8239742665172979
  - 0.8185886294151388
  - 0.837580816786115
  - 0.8191683908270804
  - 0.8186136199166453
  train_average_precision_weighted_oob:
  - 0.7373667760928043
  - 0.7450135223723738
  - 0.7613907716409564
  - 0.734988276837865
  - 0.7405915217458383
  train_f1_macro:
  - 0.7881866064710309
  - 0.7878103837471784
  - 0.7901651651651651
  - 0.7897897897897898
  - 0.7828849028400597
  train_f1_macro_oob:
  - 0.7200902934537247
  - 0.719714070729872
  - 0.718093093093093
  - 0.7068318318318317
  - 0.7126307922272047
  train_f1_micro:
  - 0.7881866064710309
  - 0.7878103837471784
  - 0.7901651651651652
  - 0.7897897897897898
  - 0.7828849028400597
  train_f1_micro_oob:
  - 0.7200902934537246
  - 0.719714070729872
  - 0.7180930930930931
  - 0.7068318318318318
  - 0.7126307922272048
  train_f1_samples:
  - 0.7881866064710308
  - 0.7878103837471784
  - 0.7901651651651651
  - 0.7897897897897898
  - 0.7828849028400598
  train_f1_samples_oob:
  - 0.7200902934537246
  - 0.719714070729872
  - 0.7180930930930931
  - 0.7068318318318317
  - 0.7126307922272047
  train_f1_weighted:
  - 0.7316234092678934
  - 0.7298208707093867
  - 0.7315555083879691
  - 0.7296747008788895
  - 0.7226917578866979
  train_f1_weighted_oob:
  - 0.6723392510374876
  - 0.672339553811668
  - 0.6694240051569894
  - 0.6599629734446488
  - 0.6650028394070534
  train_jaccard_macro:
  - 0.6848478433715774
  - 0.6867647458904228
  - 0.6889770442612416
  - 0.6905035809331418
  - 0.6807028286416568
  train_jaccard_macro_oob:
  - 0.5848877689352151
  - 0.5842640034179224
  - 0.5827249923160674
  - 0.5687915454674559
  - 0.5758557574093124
  train_jaccard_micro:
  - 0.6504191244954983
  - 0.6499068901303539
  - 0.6531182128451753
  - 0.652605459057072
  - 0.6432299662265889
  train_jaccard_micro_oob:
  - 0.562610229276896
  - 0.562151043197179
  - 0.5601756954612006
  - 0.546589259796807
  - 0.5535558780841799
  train_jaccard_samples:
  - 0.6834471773523692
  - 0.6843598839084165
  - 0.6868189618189617
  - 0.6843843843843843
  - 0.6743443402636228
  train_jaccard_samples_oob:
  - 0.5956055231450265
  - 0.5972814243694604
  - 0.5945848445848446
  - 0.5799461799461799
  - 0.5876807796090306
  train_jaccard_weighted:
  - 0.6027451965251388
  - 0.6031021191909376
  - 0.6036118020570334
  - 0.6035674304002857
  - 0.5942730065215754
  train_jaccard_weighted_oob:
  - 0.5168486851261573
  - 0.5169518816804256
  - 0.5129899923543496
  - 0.5017974042082276
  - 0.5080281037061597
  train_label_ranking_average_precision_score:
  - 0.8113713318284422
  - 0.8256270378730873
  - 0.8190002502502499
  - 0.8097597597597593
  - 0.800196188340807
  train_label_ranking_average_precision_score_oob:
  - 0.7943566591422117
  - 0.7942845497868066
  - 0.7967029529529525
  - 0.7926707957957951
  - 0.7755449676133528
  train_matthews_corrcoef_macro:
  - 0.3309840024978414
  - 0.32048049803672474
  - 0.32473843104413896
  - 0.3181816470130826
  - 0.2900805873728147
  train_matthews_corrcoef_macro_oob:
  - 0.14267974872780276
  - 0.14564659296524243
  - 0.1366061583845611
  - 0.11018721600585503
  - 0.128057833962803
  train_matthews_corrcoef_micro:
  - 0.6175674695761924
  - 0.6197385378971235
  - 0.6234243081809873
  - 0.6256766268385693
  - 0.6113299506064439
  train_matthews_corrcoef_micro_oob:
  - 0.4557497252855944
  - 0.45436802289041595
  - 0.45041919643272954
  - 0.4241799389365465
  - 0.43823504077693265
  train_matthews_corrcoef_samples:
  - 0.6318068245748724
  - 0.6370228475566483
  - 0.6364696075439689
  - 0.6453888964989989
  - 0.6306106205052668
  train_matthews_corrcoef_samples_oob:
  - 0.4723272697464727
  - 0.4667229531776793
  - 0.4574229872186021
  - 0.4346677698690789
  - 0.44782220791619204
  train_matthews_corrcoef_weighted:
  - 0.29630780665695544
  - 0.27622061416391275
  - 0.28689082331340005
  - 0.2713966003216718
  - 0.23702854982298716
  train_matthews_corrcoef_weighted_oob:
  - 0.11845167610080475
  - 0.11861135215982958
  - 0.11271391320521067
  - 0.08833340449784051
  - 0.10574930595279497
  train_ndgc:
  - 0.8691899161474039
  - 0.8805957467724023
  - 0.8741700417544187
  - 0.8706720721077537
  - 0.8644598723695367
  train_ndgc_oob:
  - 0.8592397329999738
  - 0.859005099961424
  - 0.8599549752980612
  - 0.8600480125401228
  - 0.8472753705859719
  train_neg_coverage_error:
  - -3.5169300225733635
  - -3.514672686230248
  - -3.5
  - -3.545045045045045
  - -3.5358744394618835
  train_neg_coverage_error_oob:
  - -3.688487584650113
  - -3.724604966139955
  - -3.7004504504504503
  - -3.6914414414414414
  - -3.7062780269058297
  train_neg_hamming_loss_macro:
  - -0.21181339352896913
  - -0.21218961625282165
  - -0.2098348348348348
  - -0.21021021021021022
  - -0.21711509715994018
  train_neg_hamming_loss_macro_oob:
  - -0.2799097065462754
  - -0.2802859292701279
  - -0.2819069069069069
  - -0.2931681681681682
  - -0.28736920777279523
  train_neg_hamming_loss_micro:
  - -0.21181339352896916
  - -0.21218961625282168
  - -0.20983483483483484
  - -0.21021021021021022
  - -0.2171150971599402
  train_neg_hamming_loss_micro_oob:
  - -0.2799097065462754
  - -0.2802859292701279
  - -0.2819069069069069
  - -0.29316816816816815
  - -0.28736920777279523
  train_neg_hamming_loss_samples:
  - -0.21181339352896913
  - -0.21218961625282168
  - -0.2098348348348348
  - -0.21021021021021022
  - -0.2171150971599402
  train_neg_hamming_loss_samples_oob:
  - -0.2799097065462754
  - -0.2802859292701279
  - -0.2819069069069069
  - -0.29316816816816815
  - -0.2873692077727952
  train_neg_hamming_loss_weighted:
  - -0.2683765907321064
  - -0.27017912929061333
  - -0.2684444916120309
  - -0.27032529912111064
  - -0.27730824211330213
  train_neg_hamming_loss_weighted_oob:
  - -0.3276607489625124
  - -0.32766044618833196
  - -0.3305759948430106
  - -0.3400370265553512
  - -0.3349971605929465
  train_neg_label_ranking_loss:
  - -0.16476047153248058
  - -0.15761223977928268
  - -0.15903403403403404
  - -0.16692942942942945
  - -0.17519307424015945
  train_neg_label_ranking_loss_oob:
  - -0.1922686230248307
  - -0.19435665914221217
  - -0.1935247747747748
  - -0.19366241241241242
  - -0.2066268061783757
  train_precision_macro:
  - 0.7881866064710309
  - 0.7878103837471784
  - 0.7901651651651651
  - 0.7897897897897898
  - 0.7828849028400597
  train_precision_macro_oob:
  - 0.7200902934537247
  - 0.719714070729872
  - 0.718093093093093
  - 0.7068318318318317
  - 0.7126307922272047
  train_precision_micro:
  - 0.7881866064710309
  - 0.7878103837471784
  - 0.7901651651651652
  - 0.7897897897897898
  - 0.7828849028400597
  train_precision_micro_oob:
  - 0.7200902934537246
  - 0.719714070729872
  - 0.7180930930930931
  - 0.7068318318318318
  - 0.7126307922272048
  train_precision_samples:
  - 0.7881866064710308
  - 0.7878103837471784
  - 0.7901651651651651
  - 0.7897897897897898
  - 0.7828849028400598
  train_precision_samples_oob:
  - 0.7200902934537246
  - 0.719714070729872
  - 0.7180930930930931
  - 0.7068318318318317
  - 0.7126307922272047
  train_precision_weighted:
  - 0.7316234092678934
  - 0.7298208707093867
  - 0.7315555083879691
  - 0.7296747008788895
  - 0.7226917578866979
  train_precision_weighted_oob:
  - 0.6723392510374876
  - 0.672339553811668
  - 0.6694240051569894
  - 0.6599629734446488
  - 0.6650028394070534
  train_recall_macro:
  - 0.7881866064710309
  - 0.7878103837471784
  - 0.7901651651651651
  - 0.7897897897897898
  - 0.7828849028400597
  train_recall_macro_oob:
  - 0.7200902934537247
  - 0.719714070729872
  - 0.718093093093093
  - 0.7068318318318317
  - 0.7126307922272047
  train_recall_micro:
  - 0.7881866064710309
  - 0.7878103837471784
  - 0.7901651651651652
  - 0.7897897897897898
  - 0.7828849028400597
  train_recall_micro_oob:
  - 0.7200902934537246
  - 0.719714070729872
  - 0.7180930930930931
  - 0.7068318318318318
  - 0.7126307922272048
  train_recall_samples:
  - 0.7881866064710308
  - 0.7878103837471784
  - 0.7901651651651651
  - 0.7897897897897898
  - 0.7828849028400598
  train_recall_samples_oob:
  - 0.7200902934537246
  - 0.719714070729872
  - 0.7180930930930931
  - 0.7068318318318317
  - 0.7126307922272047
  train_recall_weighted:
  - 0.7316234092678934
  - 0.7298208707093867
  - 0.7315555083879691
  - 0.7296747008788895
  - 0.7226917578866979
  train_recall_weighted_oob:
  - 0.6723392510374876
  - 0.672339553811668
  - 0.6694240051569894
  - 0.6599629734446488
  - 0.6650028394070534
  train_roc_auc_macro:
  - 0.8417232666310625
  - 0.8342783903097226
  - 0.8514810971786911
  - 0.8380174690045212
  - 0.8400923014644919
  train_roc_auc_macro_oob:
  - 0.6428148390110962
  - 0.6758360002953004
  - 0.6706014244769268
  - 0.6911735922179942
  - 0.7006230522301848
  train_roc_auc_micro:
  - 0.8476496275366042
  - 0.8470208085173182
  - 0.8496210109287733
  - 0.8431357163715459
  - 0.8345699788076977
  train_roc_auc_micro_oob:
  - 0.8079451161260343
  - 0.8110716363334165
  - 0.8116148969779746
  - 0.808513659242091
  - 0.8009150054620805
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7728251178232558
  - 0.7585515705578877
  - 0.7867046967479426
  - 0.7664540030642099
  - 0.7703189595219785
  train_roc_auc_weighted_oob:
  - 0.6837755918041087
  - 0.6913727996647737
  - 0.7056041016553274
  - 0.6843460645545245
  - 0.6837885615200955
start: 2023-12-21 22:32:04.632170
wrapper: null
