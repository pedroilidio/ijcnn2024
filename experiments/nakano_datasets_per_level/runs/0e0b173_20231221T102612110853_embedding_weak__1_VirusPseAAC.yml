active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:26:19.998793
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: 0e0b173a1837597bc77035821934079f0f8f6299a5cb195be030b5c902fab461
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0e0b173_20231221T102612110853_embedding_weak__1_VirusPseAAC.yml
results:
  fit_time:
  - 3.558835506439209
  - 3.726179838180542
  - 3.7737584114074707
  - 3.666952610015869
  - 3.6390647888183594
  score_time:
  - 0.9750657081604004
  - 0.9494378566741943
  - 0.9845297336578369
  - 0.9447095394134521
  - 0.9909610748291016
  test_average_precision_macro:
  - 0.2506643828155471
  - 0.45822244479400026
  - 0.46159044339700195
  - 0.4476842070368697
  - 0.40464012906598135
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4456950495226466
  - 0.4582722109503455
  - 0.5003433246092643
  - 0.45611979572132916
  - 0.4092481062504446
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7109722222222222
  - 0.6845528455284553
  - 0.656910569105691
  - 0.6747967479674797
  - 0.6746212121212122
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.3967969136997864
  - 0.4727674908116432
  - 0.5137021135417988
  - 0.4628005047088838
  - 0.43612635969352526
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7916666666666666
  - 0.8048780487804877
  - 0.8089430894308943
  - 0.8008130081300813
  - 0.8030303030303031
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7916666666666666
  - 0.8048780487804879
  - 0.8089430894308943
  - 0.8008130081300813
  - 0.803030303030303
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7916666666666667
  - 0.804878048780488
  - 0.8089430894308944
  - 0.8008130081300814
  - 0.8030303030303032
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6676470588235294
  - 0.7013439522150324
  - 0.7010999521759924
  - 0.691219512195122
  - 0.696969696969697
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6829320969220402
  - 0.6955491703584101
  - 0.701340155945419
  - 0.691415272395111
  - 0.6947820674163384
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6551724137931034
  - 0.673469387755102
  - 0.6791808873720137
  - 0.6677966101694915
  - 0.6708860759493671
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6690476190476191
  - 0.6811846689895472
  - 0.6922183507549362
  - 0.6777003484320557
  - 0.6812770562770564
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.520095454260427
  - 0.5578265425114115
  - 0.554433059773617
  - 0.5470087896406146
  - 0.5539323544137745
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7109722222222222
  - 0.6845528455284552
  - 0.656910569105691
  - 0.6747967479674796
  - 0.6746212121212122
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02658012387753198
  - 0.032448829709298875
  - 0.08750861114354885
  - 0.033452208398529165
  - 0.03456246829611151
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1655293360911508
  - 0.14455138019539915
  - 0.2513937812522601
  - 0.15657710159274268
  - 0.13804169488873558
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09581138830084189
  - 0.054450134927650634
  - 0.0975609756097561
  - 0.07396233004960186
  - 0.06701552950114803
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.05361234871183917
  - 0.06650669722065262
  - 0.1800364879589167
  - 0.0682425051329995
  - 0.06912493659222302
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7861099477702871
  - 0.7653104999290679
  - 0.7470333556862608
  - 0.7588874807540484
  - 0.7555357994567341
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.225
  - -2.2439024390243905
  - -2.317073170731707
  - -2.341463414634146
  - -2.2954545454545454
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20833333333333334
  - -0.19512195121951223
  - -0.1910569105691057
  - -0.19918699186991873
  - -0.19696969696969693
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20833333333333334
  - -0.1951219512195122
  - -0.1910569105691057
  - -0.1991869918699187
  - -0.19696969696969696
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20833333333333331
  - -0.1951219512195122
  - -0.19105691056910568
  - -0.19918699186991867
  - -0.1969696969696969
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3323529411764706
  - -0.2986560477849677
  - -0.2989000478240077
  - -0.30878048780487805
  - -0.303030303030303
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20118055555555556
  - -0.20670731707317078
  - -0.2094173441734417
  - -0.21890243902439024
  - -0.2278409090909091
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7916666666666666
  - 0.8048780487804877
  - 0.8089430894308943
  - 0.8008130081300813
  - 0.8030303030303031
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7916666666666666
  - 0.8048780487804879
  - 0.8089430894308943
  - 0.8008130081300813
  - 0.803030303030303
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7916666666666667
  - 0.804878048780488
  - 0.8089430894308944
  - 0.8008130081300814
  - 0.8030303030303032
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6676470588235294
  - 0.7013439522150324
  - 0.7010999521759924
  - 0.691219512195122
  - 0.696969696969697
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7916666666666666
  - 0.8048780487804877
  - 0.8089430894308943
  - 0.8008130081300813
  - 0.8030303030303031
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7916666666666666
  - 0.8048780487804879
  - 0.8089430894308943
  - 0.8008130081300813
  - 0.803030303030303
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7916666666666667
  - 0.804878048780488
  - 0.8089430894308944
  - 0.8008130081300814
  - 0.8030303030303032
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6676470588235294
  - 0.7013439522150324
  - 0.7010999521759924
  - 0.691219512195122
  - 0.696969696969697
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.4601096574402201
  - 0.698339234515705
  - 0.6757576630338779
  - 0.6529468544174427
  - 0.6617784976853605
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7684407096171801
  - 0.803584377913602
  - 0.7971845148315736
  - 0.7902040816326531
  - 0.7824726134585289
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7988194444444445
  - 0.7932926829268294
  - 0.7905826558265583
  - 0.7810975609756099
  - 0.772159090909091
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5275962788750512
  - 0.6517062970124194
  - 0.5963305038150833
  - 0.6173024453024454
  - 0.6257098835530208
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.924481339227685
  - 0.9544901814892622
  - 0.977730676517683
  - 0.93226029767332
  - 0.9064410229932056
  train_average_precision_macro_oob:
  - 0.39117996185752935
  - 0.3214485952325992
  - 0.35989063347277556
  - 0.36443721830685255
  - 0.36141455009562207
  train_average_precision_micro:
  - 0.9111315867889108
  - 0.8895899658842952
  - 0.9045710418072954
  - 0.8795717229098711
  - 0.8966303832601514
  train_average_precision_micro_oob:
  - 0.5242716545200514
  - 0.4563475314256746
  - 0.5007997454774124
  - 0.5242448070598461
  - 0.5198974217868619
  train_average_precision_samples:
  - 0.8902195608782435
  - 0.8845381526104417
  - 0.8937751004016065
  - 0.8760040160642569
  - 0.8962167689161554
  train_average_precision_samples_oob:
  - 0.7199600798403194
  - 0.686178045515395
  - 0.7000334672021419
  - 0.7198125836680053
  - 0.7139400136332651
  train_average_precision_weighted:
  - 0.9744452951837083
  - 0.9915557602351285
  - 0.9947299322102935
  - 0.968437650105027
  - 0.9671559397794035
  train_average_precision_weighted_oob:
  - 0.49989466206293287
  - 0.41896532659678754
  - 0.4683102663113933
  - 0.49967463029862874
  - 0.48349585614836543
  train_f1_macro:
  - 0.9261477045908184
  - 0.9267068273092369
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_f1_macro_oob:
  - 0.8133732534930139
  - 0.7991967871485944
  - 0.8002008032128515
  - 0.8072289156626505
  - 0.8087934560327198
  train_f1_micro:
  - 0.9261477045908184
  - 0.9267068273092369
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_f1_micro_oob:
  - 0.8133732534930139
  - 0.7991967871485943
  - 0.8002008032128514
  - 0.8072289156626506
  - 0.8087934560327198
  train_f1_samples:
  - 0.9261477045908183
  - 0.9267068273092368
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_f1_samples_oob:
  - 0.8133732534930138
  - 0.7991967871485941
  - 0.8002008032128513
  - 0.8072289156626504
  - 0.8087934560327197
  train_f1_weighted:
  - 0.9451842583489736
  - 0.9457237818268147
  - 0.9446142780075526
  - 0.9416676607419778
  - 0.9460977321979063
  train_f1_weighted_oob:
  - 0.715643340185301
  - 0.6854709478307318
  - 0.6895941976862675
  - 0.7023440295836813
  - 0.7052467722736012
  train_jaccard_macro:
  - 0.866351779140429
  - 0.8674456355530616
  - 0.8651758506389718
  - 0.8637272743843303
  - 0.8668452611440721
  train_jaccard_macro_oob:
  - 0.7053730556617056
  - 0.6905189338505499
  - 0.6912031667953619
  - 0.6986935414139707
  - 0.7001519541254516
  train_jaccard_micro:
  - 0.862453531598513
  - 0.8634237605238541
  - 0.8616822429906542
  - 0.8599439775910365
  - 0.8628571428571429
  train_jaccard_micro_oob:
  - 0.6854499579478553
  - 0.6655518394648829
  - 0.6669456066945607
  - 0.6767676767676768
  - 0.6789699570815451
  train_jaccard_samples:
  - 0.8759623609923011
  - 0.879661503155479
  - 0.8767928858290304
  - 0.876075731497418
  - 0.878615249780894
  train_jaccard_samples_oob:
  - 0.6976047904191617
  - 0.6764199655765922
  - 0.6741250717154333
  - 0.6904761904761906
  - 0.6913526146654981
  train_jaccard_weighted:
  - 0.9004164135297108
  - 0.9010172410360938
  - 0.8985089464677624
  - 0.8935319067271044
  - 0.9017188497804327
  train_jaccard_weighted_oob:
  - 0.5727609608742582
  - 0.5399813352043059
  - 0.5450700733614973
  - 0.557267731149596
  - 0.5602779935381179
  train_label_ranking_average_precision_score:
  - 0.8902195608782436
  - 0.8845381526104418
  - 0.8937751004016065
  - 0.8760040160642569
  - 0.8962167689161554
  train_label_ranking_average_precision_score_oob:
  - 0.7199600798403191
  - 0.6861780455153951
  - 0.7000334672021419
  - 0.7198125836680053
  - 0.7139400136332652
  train_matthews_corrcoef_macro:
  - 0.31519595360107483
  - 0.31705330262372744
  - 0.3149537349029233
  - 0.31293858950041553
  - 0.31661212669452166
  train_matthews_corrcoef_macro_oob:
  - 0.06523487384908785
  - 0.02615541200920998
  - 0.02874047677078231
  - 0.05389895398449714
  - 0.06528016211814576
  train_matthews_corrcoef_micro:
  - 0.7605294979623005
  - 0.7657752131261621
  - 0.7602869006319398
  - 0.7567705021287426
  - 0.7657965678046159
  train_matthews_corrcoef_micro_oob:
  - 0.23647779907234992
  - 0.13392858890974835
  - 0.10497722235933568
  - 0.2100162303499813
  - 0.23653562443815668
  train_matthews_corrcoef_samples:
  - 0.6338108991915544
  - 0.6612454881774454
  - 0.6351035465315404
  - 0.6528242741610578
  - 0.6676916599681163
  train_matthews_corrcoef_samples_oob:
  - 0.12003622691108709
  - 0.061445783132530116
  - 0.03171633171124911
  - 0.11554902909689271
  - 0.11927574716381602
  train_matthews_corrcoef_weighted:
  - 0.6403421559583685
  - 0.6466035832103143
  - 0.6393718298070433
  - 0.6370821110542252
  - 0.6477791895616267
  train_matthews_corrcoef_weighted_oob:
  - 0.13142648842583526
  - 0.05267721971825708
  - 0.05729622085399048
  - 0.10951980010323602
  - 0.1330804585574905
  train_ndgc:
  - 0.9205790519110004
  - 0.916143769550264
  - 0.9234780714491226
  - 0.9091799826106349
  - 0.925202655097556
  train_ndgc_oob:
  - 0.7917221816386074
  - 0.7664337602342882
  - 0.7763172081571798
  - 0.7919190105868892
  - 0.7881061310562578
  train_neg_coverage_error:
  - -1.5209580838323353
  - -1.5843373493975903
  - -1.572289156626506
  - -1.5963855421686748
  - -1.5705521472392638
  train_neg_coverage_error_oob:
  - -2.197604790419162
  - -2.319277108433735
  - -2.2590361445783134
  - -2.216867469879518
  - -2.214723926380368
  train_neg_hamming_loss_macro:
  - -0.07385229540918163
  - -0.07329317269076306
  - -0.07429718875502007
  - -0.0753012048192771
  - -0.0736196319018405
  train_neg_hamming_loss_macro_oob:
  - -0.18662674650698605
  - -0.20080321285140565
  - -0.1997991967871486
  - -0.19277108433734938
  - -0.1912065439672802
  train_neg_hamming_loss_micro:
  - -0.07385229540918163
  - -0.07329317269076305
  - -0.07429718875502007
  - -0.07530120481927711
  - -0.0736196319018405
  train_neg_hamming_loss_micro_oob:
  - -0.18662674650698602
  - -0.20080321285140562
  - -0.19979919678714858
  - -0.1927710843373494
  - -0.19120654396728015
  train_neg_hamming_loss_samples:
  - -0.07385229540918165
  - -0.07329317269076305
  - -0.07429718875502009
  - -0.07530120481927711
  - -0.07361963190184048
  train_neg_hamming_loss_samples_oob:
  - -0.18662674650698602
  - -0.20080321285140568
  - -0.19979919678714864
  - -0.1927710843373494
  - -0.19120654396728018
  train_neg_hamming_loss_weighted:
  - -0.054815741651026303
  - -0.05427621817318535
  - -0.0553857219924474
  - -0.058332339258022184
  - -0.053902267802093826
  train_neg_hamming_loss_weighted_oob:
  - -0.28435665981469893
  - -0.3145290521692682
  - -0.31040580231373255
  - -0.2976559704163187
  - -0.29475322772639867
  train_neg_label_ranking_loss:
  - -0.058982035928143724
  - -0.06949464524765729
  - -0.06663319946452476
  - -0.07439759036144579
  - -0.06349693251533742
  train_neg_label_ranking_loss_oob:
  - -0.19512641383898868
  - -0.219929718875502
  - -0.21059236947791166
  - -0.19906291834002676
  - -0.19560327198364008
  train_precision_macro:
  - 0.9261477045908184
  - 0.9267068273092369
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_precision_macro_oob:
  - 0.8133732534930139
  - 0.7991967871485944
  - 0.8002008032128515
  - 0.8072289156626505
  - 0.8087934560327198
  train_precision_micro:
  - 0.9261477045908184
  - 0.9267068273092369
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_precision_micro_oob:
  - 0.8133732534930139
  - 0.7991967871485943
  - 0.8002008032128514
  - 0.8072289156626506
  - 0.8087934560327198
  train_precision_samples:
  - 0.9261477045908183
  - 0.9267068273092368
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_precision_samples_oob:
  - 0.8133732534930138
  - 0.7991967871485941
  - 0.8002008032128513
  - 0.8072289156626504
  - 0.8087934560327197
  train_precision_weighted:
  - 0.9451842583489736
  - 0.9457237818268147
  - 0.9446142780075526
  - 0.9416676607419778
  - 0.9460977321979063
  train_precision_weighted_oob:
  - 0.715643340185301
  - 0.6854709478307318
  - 0.6895941976862675
  - 0.7023440295836813
  - 0.7052467722736012
  train_recall_macro:
  - 0.9261477045908184
  - 0.9267068273092369
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_recall_macro_oob:
  - 0.8133732534930139
  - 0.7991967871485944
  - 0.8002008032128515
  - 0.8072289156626505
  - 0.8087934560327198
  train_recall_micro:
  - 0.9261477045908184
  - 0.9267068273092369
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_recall_micro_oob:
  - 0.8133732534930139
  - 0.7991967871485943
  - 0.8002008032128514
  - 0.8072289156626506
  - 0.8087934560327198
  train_recall_samples:
  - 0.9261477045908183
  - 0.9267068273092368
  - 0.9257028112449799
  - 0.9246987951807228
  - 0.9263803680981595
  train_recall_samples_oob:
  - 0.8133732534930138
  - 0.7991967871485941
  - 0.8002008032128513
  - 0.8072289156626504
  - 0.8087934560327197
  train_recall_weighted:
  - 0.9451842583489736
  - 0.9457237818268147
  - 0.9446142780075526
  - 0.9416676607419778
  - 0.9460977321979063
  train_recall_weighted_oob:
  - 0.715643340185301
  - 0.6854709478307318
  - 0.6895941976862675
  - 0.7023440295836813
  - 0.7052467722736012
  train_roc_auc_macro:
  - 0.9954699406821145
  - 0.9989409722222221
  - 0.9988237496256365
  - 0.994171626984127
  - 0.9940479120871659
  train_roc_auc_macro_oob:
  - 0.7050931954992055
  - 0.6084535420882982
  - 0.6432893543211761
  - 0.6302561972035088
  - 0.6471450519277178
  train_roc_auc_micro:
  - 0.9649132614083142
  - 0.9534473440635114
  - 0.9598485559623268
  - 0.9545290171334514
  - 0.9570999570999571
  train_roc_auc_micro_oob:
  - 0.810206147787902
  - 0.7799837245851944
  - 0.7969586032103633
  - 0.7980148140758659
  - 0.8018978466739661
  train_roc_auc_samples:
  - 0.9410179640718561
  - 0.9305053547523426
  - 0.9333668005354753
  - 0.9256024096385541
  - 0.9365030674846624
  train_roc_auc_samples_oob:
  - 0.8048735861610113
  - 0.780070281124498
  - 0.7894076305220883
  - 0.8009370816599733
  - 0.80439672801636
  train_roc_auc_weighted:
  - 0.9982582740272149
  - 0.9997814039408867
  - 0.9996795894740136
  - 0.9947504125412541
  - 0.9967121905960471
  train_roc_auc_weighted_oob:
  - 0.6978091883116332
  - 0.5949382217358715
  - 0.6569654793777518
  - 0.6647886366874096
  - 0.6583812408690971
start: 2023-12-21 10:26:12.110853
wrapper: null
