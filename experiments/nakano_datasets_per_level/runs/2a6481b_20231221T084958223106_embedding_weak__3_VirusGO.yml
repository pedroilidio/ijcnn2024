active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCAmZmZmZn5v4BmZmZmZvY/oJmZmZmZFUDAzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:50:16.876193
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__3
  params: {}
hash: 2a6481b95d69355eeaf3b96bd86f4d11e634d9df37c30bedd36f661bd688d79f
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2a6481b_20231221T084958223106_embedding_weak__3_VirusGO.yml
results:
  fit_time:
  - 12.536554098129272
  - 12.300552129745483
  - 12.147477149963379
  - 12.329463243484497
  - 12.713134765625
  score_time:
  - 1.6529350280761719
  - 1.6466915607452393
  - 1.6113221645355225
  - 1.6705293655395508
  - 1.5805222988128662
  test_average_precision_macro:
  - 0.9348417300666183
  - 0.8829800159345665
  - 0.9572567365319141
  - 0.9307704169046979
  - 0.9186406040690324
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8936335534425695
  - 0.8262964193060188
  - 0.8574081456996465
  - 0.903375180894918
  - 0.8719119868522753
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9450757575757575
  - 0.9116279069767442
  - 0.8895833333333332
  - 0.9523148148148147
  - 0.9268939393939394
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9417563434090478
  - 0.8815909660242516
  - 0.9310418377632
  - 0.9214266447767743
  - 0.90971310681063
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8219696969696969
  - 0.7984496124031008
  - 0.7916666666666666
  - 0.7777777777777777
  - 0.8143939393939394
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.821969696969697
  - 0.7984496124031008
  - 0.7916666666666666
  - 0.7777777777777778
  - 0.8143939393939394
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8219696969696971
  - 0.7984496124031009
  - 0.7916666666666667
  - 0.7777777777777778
  - 0.8143939393939396
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7223707664884135
  - 0.6878354203935599
  - 0.675
  - 0.6536281179138324
  - 0.7122727272727272
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7179294580717784
  - 0.6889758296838869
  - 0.6812122532946332
  - 0.6651033037528662
  - 0.7081666270689791
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6977491961414791
  - 0.6645161290322581
  - 0.6551724137931034
  - 0.6363636363636364
  - 0.6869009584664537
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7061688311688313
  - 0.6705426356589148
  - 0.6607142857142858
  - 0.6461640211640213
  - 0.6926406926406927
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5791291879665074
  - 0.5431583834914843
  - 0.5301811841857609
  - 0.5050908386788417
  - 0.5702135424091233
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9450757575757575
  - 0.9116279069767441
  - 0.8895833333333332
  - 0.9523148148148147
  - 0.9268939393939394
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06334307917217433
  - 0.0
  - 0.0
  - 0.031497039417435604
  - 0.032031106631923656
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2534825312820558
  - 0.0
  - 0.0
  - 0.1259044167780246
  - 0.12756866487721477
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09090909090909091
  - 0.0
  - 0.0
  - 0.027777777777777776
  - 0.022727272727272728
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.13413828530578092
  - 0.0
  - 0.0
  - 0.061708485389261596
  - 0.06534345752912425
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9622874157956306
  - 0.9348689036534209
  - 0.9236038998969176
  - 0.9672752535953985
  - 0.9449861107375193
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3409090909090908
  - -1.4883720930232558
  - -1.65
  - -1.5277777777777777
  - -1.3863636363636365
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.178030303030303
  - -0.20155038759689922
  - -0.20833333333333337
  - -0.22222222222222224
  - -0.18560606060606058
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17803030303030304
  - -0.20155038759689922
  - -0.20833333333333334
  - -0.2222222222222222
  - -0.1856060606060606
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.178030303030303
  - -0.20155038759689917
  - -0.20833333333333331
  - -0.2222222222222222
  - -0.18560606060606058
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.27762923351158647
  - -0.31216457960644006
  - -0.325
  - -0.34637188208616776
  - -0.2877272727272727
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.030681818181818185
  - -0.05406976744186047
  - -0.066875
  - -0.027700617283950617
  - -0.05
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8219696969696969
  - 0.7984496124031008
  - 0.7916666666666666
  - 0.7777777777777777
  - 0.8143939393939394
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.821969696969697
  - 0.7984496124031008
  - 0.7916666666666666
  - 0.7777777777777778
  - 0.8143939393939394
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8219696969696971
  - 0.7984496124031009
  - 0.7916666666666667
  - 0.7777777777777778
  - 0.8143939393939396
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7223707664884135
  - 0.6878354203935599
  - 0.675
  - 0.6536281179138324
  - 0.7122727272727272
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8219696969696969
  - 0.7984496124031008
  - 0.7916666666666666
  - 0.7777777777777777
  - 0.8143939393939394
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.821969696969697
  - 0.7984496124031008
  - 0.7916666666666666
  - 0.7777777777777778
  - 0.8143939393939394
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8219696969696971
  - 0.7984496124031009
  - 0.7916666666666667
  - 0.7777777777777778
  - 0.8143939393939396
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7223707664884135
  - 0.6878354203935599
  - 0.675
  - 0.6536281179138324
  - 0.7122727272727272
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9830929487179487
  - 0.9557558236970003
  - 0.9831065880458464
  - 0.9783868067417529
  - 0.9516648033482399
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9706342630949093
  - 0.955470500373413
  - 0.9612631578947368
  - 0.9749480630575584
  - 0.963177570093458
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.969318181818182
  - 0.9459302325581395
  - 0.9331249999999999
  - 0.9722993827160494
  - 0.95
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9762066365007541
  - 0.942465483234714
  - 0.9684214265416312
  - 0.9656498851809326
  - 0.9540058479532163
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9710053061899745
  - 0.9538536295329969
  - 0.9607167033606848
  - 0.9600575499951675
  - 0.955322361261504
  train_average_precision_macro_oob:
  - 0.9092791506988848
  - 0.9036180378873776
  - 0.8742774466931783
  - 0.9034954855607181
  - 0.8855354512897743
  train_average_precision_micro:
  - 0.9349583216904601
  - 0.9174189308727191
  - 0.9334345186075684
  - 0.940578023535241
  - 0.9150415407719876
  train_average_precision_micro_oob:
  - 0.8560719717265606
  - 0.8607500569842796
  - 0.8578018825253071
  - 0.8659446197038767
  - 0.830399031394542
  train_average_precision_samples:
  - 0.958486707566462
  - 0.9538617886178862
  - 0.9677644710578843
  - 0.9646198830409356
  - 0.9498977505112474
  train_average_precision_samples_oob:
  - 0.9077709611451943
  - 0.9198678861788617
  - 0.907684630738523
  - 0.9248538011695905
  - 0.897955010224949
  train_average_precision_weighted:
  - 0.9653042066341512
  - 0.9451526216282283
  - 0.963145724116285
  - 0.9588329178609309
  - 0.9456167609846401
  train_average_precision_weighted_oob:
  - 0.9028876784034331
  - 0.9034184411648587
  - 0.8936306049418304
  - 0.8974427775545418
  - 0.8763469991248206
  train_f1_macro:
  - 0.8047034764826176
  - 0.8038617886178862
  - 0.7984031936127743
  - 0.8060428849902533
  - 0.8057259713701431
  train_f1_macro_oob:
  - 0.8016359918200409
  - 0.8018292682926829
  - 0.7984031936127743
  - 0.8021442495126706
  - 0.8057259713701431
  train_f1_micro:
  - 0.8047034764826176
  - 0.8038617886178862
  - 0.7984031936127745
  - 0.8060428849902534
  - 0.8057259713701431
  train_f1_micro_oob:
  - 0.8016359918200409
  - 0.801829268292683
  - 0.7984031936127745
  - 0.8021442495126706
  - 0.8057259713701431
  train_f1_samples:
  - 0.8047034764826173
  - 0.803861788617886
  - 0.7984031936127743
  - 0.8060428849902533
  - 0.805725971370143
  train_f1_samples_oob:
  - 0.8016359918200406
  - 0.8018292682926828
  - 0.7984031936127743
  - 0.8021442495126704
  - 0.805725971370143
  train_f1_weighted:
  - 0.7009736593108079
  - 0.6949695121951219
  - 0.6838204778561688
  - 0.6978365453864546
  - 0.7012087711838669
  train_f1_weighted_oob:
  - 0.6946555565729634
  - 0.6908841463414634
  - 0.6838204778561688
  - 0.6900008642295393
  - 0.7012087711838669
  train_jaccard_macro:
  - 0.6951387761777014
  - 0.6953638391330229
  - 0.6898652790837426
  - 0.6982582033841025
  - 0.6964347370130318
  train_jaccard_macro_oob:
  - 0.691875512914438
  - 0.6932041256901237
  - 0.6898652790837426
  - 0.6941987357441132
  - 0.6964347370130318
  train_jaccard_micro:
  - 0.6732249786142002
  - 0.6720475785896347
  - 0.6644518272425249
  - 0.6751020408163265
  - 0.6746575342465754
  train_jaccard_micro_oob:
  - 0.6689419795221843
  - 0.6692111959287532
  - 0.6644518272425249
  - 0.6696501220504475
  - 0.6746575342465754
  train_jaccard_samples:
  - 0.6827344434706399
  - 0.6804587688734031
  - 0.6702309666381524
  - 0.6814257866889446
  - 0.684633362547473
  train_jaccard_samples_oob:
  - 0.6774758983347942
  - 0.6761033681765389
  - 0.6702309666381524
  - 0.6747424115845169
  - 0.684633362547473
  train_jaccard_weighted:
  - 0.5564127441934964
  - 0.5500599114655275
  - 0.5383910413766827
  - 0.5537357631707165
  - 0.5556824248355987
  train_jaccard_weighted_oob:
  - 0.5496913959796109
  - 0.5457188874452998
  - 0.5383910413766827
  - 0.5455768331356641
  - 0.5556824248355987
  train_label_ranking_average_precision_score:
  - 0.958486707566462
  - 0.9538617886178862
  - 0.9677644710578841
  - 0.9646198830409358
  - 0.9498977505112475
  train_label_ranking_average_precision_score_oob:
  - 0.9077709611451943
  - 0.9198678861788617
  - 0.907684630738523
  - 0.9248538011695907
  - 0.897955010224949
  train_matthews_corrcoef_macro:
  - 0.04973274326524201
  - 0.04531790933830451
  - 0.0
  - 0.03174568230293483
  - 0.07528663247795093
  train_matthews_corrcoef_macro_oob:
  - 0.041207365699618075
  - 0.03556179347014064
  - 0.0
  - 0.0
  - 0.07528663247795093
  train_matthews_corrcoef_micro:
  - 0.19983649416127128
  - 0.1636949083649044
  - 0.0
  - 0.12596690137938688
  - 0.21845260891225232
  train_matthews_corrcoef_micro_oob:
  - 0.1669367236837077
  - 0.14149356525719836
  - 0.0
  - 0.0
  - 0.21845260891225232
  train_matthews_corrcoef_samples:
  - 0.06134969325153374
  - 0.0475609756097561
  - 0.0
  - 0.023391812865497075
  - 0.0736196319018405
  train_matthews_corrcoef_samples_oob:
  - 0.04294478527607362
  - 0.028246680073376072
  - 0.0
  - 0.0
  - 0.0736196319018405
  train_matthews_corrcoef_weighted:
  - 0.102434605531394
  - 0.09126740583989462
  - 0.0
  - 0.06380412994875571
  - 0.15371688446032597
  train_matthews_corrcoef_weighted_oob:
  - 0.08487487263503425
  - 0.07147920487498269
  - 0.0
  - 0.0
  - 0.15371688446032597
  train_ndgc:
  - 0.9711125736557914
  - 0.9672283946054668
  - 0.9770586311908812
  - 0.973747695643072
  - 0.9640016860750531
  train_ndgc_oob:
  - 0.9347550881560249
  - 0.9427899248184833
  - 0.9337077550212656
  - 0.9455919595341427
  - 0.9269744119815351
  train_neg_coverage_error:
  - -1.3803680981595092
  - -1.3902439024390243
  - -1.3053892215568863
  - -1.304093567251462
  - -1.3803680981595092
  train_neg_coverage_error_oob:
  - -1.5644171779141105
  - -1.5
  - -1.5508982035928143
  - -1.4444444444444444
  - -1.6012269938650308
  train_neg_hamming_loss_macro:
  - -0.19529652351738244
  - -0.19613821138211382
  - -0.20159680638722555
  - -0.19395711500974658
  - -0.19427402862985688
  train_neg_hamming_loss_macro_oob:
  - -0.19836400817995914
  - -0.19817073170731705
  - -0.20159680638722555
  - -0.19785575048732942
  - -0.19427402862985688
  train_neg_hamming_loss_micro:
  - -0.19529652351738241
  - -0.19613821138211382
  - -0.20159680638722555
  - -0.19395711500974658
  - -0.19427402862985685
  train_neg_hamming_loss_micro_oob:
  - -0.1983640081799591
  - -0.19817073170731708
  - -0.20159680638722555
  - -0.19785575048732942
  - -0.19427402862985685
  train_neg_hamming_loss_samples:
  - -0.1952965235173824
  - -0.19613821138211382
  - -0.20159680638722557
  - -0.1939571150097466
  - -0.19427402862985685
  train_neg_hamming_loss_samples_oob:
  - -0.19836400817995908
  - -0.19817073170731708
  - -0.20159680638722557
  - -0.19785575048732945
  - -0.19427402862985685
  train_neg_hamming_loss_weighted:
  - -0.2990263406891921
  - -0.30503048780487807
  - -0.31617952214383116
  - -0.3021634546135453
  - -0.2987912288161331
  train_neg_hamming_loss_weighted_oob:
  - -0.3053444434270366
  - -0.3091158536585366
  - -0.31617952214383116
  - -0.3099991357704606
  - -0.2987912288161331
  train_neg_label_ranking_loss:
  - -0.024386503067484664
  - -0.030335365853658536
  - -0.017215568862275453
  - -0.02324561403508772
  - -0.02653374233128834
  train_neg_label_ranking_loss_oob:
  - -0.05795841854124063
  - -0.052201897018970184
  - -0.0615103127079175
  - -0.04824561403508772
  - -0.06547375596455351
  train_precision_macro:
  - 0.8047034764826176
  - 0.8038617886178862
  - 0.7984031936127743
  - 0.8060428849902533
  - 0.8057259713701431
  train_precision_macro_oob:
  - 0.8016359918200409
  - 0.8018292682926829
  - 0.7984031936127743
  - 0.8021442495126706
  - 0.8057259713701431
  train_precision_micro:
  - 0.8047034764826176
  - 0.8038617886178862
  - 0.7984031936127745
  - 0.8060428849902534
  - 0.8057259713701431
  train_precision_micro_oob:
  - 0.8016359918200409
  - 0.801829268292683
  - 0.7984031936127745
  - 0.8021442495126706
  - 0.8057259713701431
  train_precision_samples:
  - 0.8047034764826173
  - 0.803861788617886
  - 0.7984031936127743
  - 0.8060428849902533
  - 0.805725971370143
  train_precision_samples_oob:
  - 0.8016359918200406
  - 0.8018292682926828
  - 0.7984031936127743
  - 0.8021442495126704
  - 0.805725971370143
  train_precision_weighted:
  - 0.7009736593108079
  - 0.6949695121951219
  - 0.6838204778561688
  - 0.6978365453864546
  - 0.7012087711838669
  train_precision_weighted_oob:
  - 0.6946555565729634
  - 0.6908841463414634
  - 0.6838204778561688
  - 0.6900008642295393
  - 0.7012087711838669
  train_recall_macro:
  - 0.8047034764826176
  - 0.8038617886178862
  - 0.7984031936127743
  - 0.8060428849902533
  - 0.8057259713701431
  train_recall_macro_oob:
  - 0.8016359918200409
  - 0.8018292682926829
  - 0.7984031936127743
  - 0.8021442495126706
  - 0.8057259713701431
  train_recall_micro:
  - 0.8047034764826176
  - 0.8038617886178862
  - 0.7984031936127745
  - 0.8060428849902534
  - 0.8057259713701431
  train_recall_micro_oob:
  - 0.8016359918200409
  - 0.801829268292683
  - 0.7984031936127745
  - 0.8021442495126706
  - 0.8057259713701431
  train_recall_samples:
  - 0.8047034764826173
  - 0.803861788617886
  - 0.7984031936127743
  - 0.8060428849902533
  - 0.805725971370143
  train_recall_samples_oob:
  - 0.8016359918200406
  - 0.8018292682926828
  - 0.7984031936127743
  - 0.8021442495126704
  - 0.805725971370143
  train_recall_weighted:
  - 0.7009736593108079
  - 0.6949695121951219
  - 0.6838204778561688
  - 0.6978365453864546
  - 0.7012087711838669
  train_recall_weighted_oob:
  - 0.6946555565729634
  - 0.6908841463414634
  - 0.6838204778561688
  - 0.6900008642295393
  - 0.7012087711838669
  train_roc_auc_macro:
  - 0.9892502088756414
  - 0.9823611791628846
  - 0.986727215685329
  - 0.9833676587514267
  - 0.9825210860347632
  train_roc_auc_macro_oob:
  - 0.9707494408311179
  - 0.9652550104594364
  - 0.9507275710632624
  - 0.9669599656271645
  - 0.9658290876801158
  train_roc_auc_micro:
  - 0.9805381074037791
  - 0.9757174744897958
  - 0.9797741336633664
  - 0.9818967013629099
  - 0.9776908747575788
  train_roc_auc_micro_oob:
  - 0.9564916729095834
  - 0.9560204081632653
  - 0.9510519801980197
  - 0.963350471960687
  - 0.9541377462488516
  train_roc_auc_samples:
  - 0.9756134969325155
  - 0.9696646341463415
  - 0.9827844311377245
  - 0.9767543859649123
  - 0.9734662576687118
  train_roc_auc_samples_oob:
  - 0.9420415814587594
  - 0.9477981029810298
  - 0.9384896872920824
  - 0.9517543859649122
  - 0.9345262440354465
  train_roc_auc_weighted:
  - 0.9823444407975926
  - 0.9768197288562241
  - 0.9825897736829639
  - 0.9789621842649756
  - 0.97276552348822
  train_roc_auc_weighted_oob:
  - 0.9573147737270113
  - 0.9589298001733835
  - 0.9501435816903385
  - 0.9607521965688521
  - 0.9528697957145171
start: 2023-12-21 08:49:58.223106
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
