active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/YGZmZmZm9r9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzC8DAmZmZmZn5PwCZmZmZmdm/wJmZmZmZ+T+AMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:14:20.903061
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__5
  params: {}
hash: 7ac2bc66a018d2e13a2b00e67dac2df013b951ca0409b4a0f269aff98b36d3ba
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7ac2bc6_20231222T021309082538_embedding_weak__5_emotions.yml
results:
  fit_time:
  - 52.04734563827515
  - 51.93467354774475
  - 54.703476667404175
  - 54.48113775253296
  - 54.72647666931152
  score_time:
  - 4.075497150421143
  - 4.2043352127075195
  - 4.458683490753174
  - 4.365906715393066
  - 4.652451992034912
  test_average_precision_macro:
  - 0.6814825247669054
  - 0.7173103470025465
  - 0.705129650099296
  - 0.7162532757968821
  - 0.7673178925294165
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6171905027134476
  - 0.6935126751768751
  - 0.5998612653471452
  - 0.6607940519562203
  - 0.6749699084713408
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7560564663023679
  - 0.7784425451092117
  - 0.719140989729225
  - 0.7647910731244064
  - 0.7889595103578154
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6732864150351152
  - 0.7231980749356507
  - 0.6955258694730608
  - 0.7154836867207581
  - 0.7590769893613467
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7868852459016393
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492878
  - 0.8107344632768362
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7868852459016393
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492878
  - 0.8107344632768362
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7868852459016392
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492879
  - 0.8107344632768362
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7747199762628886
  - 0.7885577885577886
  - 0.753906992661318
  - 0.7780830280830281
  - 0.7974961479198767
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.654678878926671
  - 0.6630365731628346
  - 0.6379590599786961
  - 0.6534657824033124
  - 0.6893803311034722
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6486486486486487
  - 0.6595744680851063
  - 0.6282782212086659
  - 0.6498237367802585
  - 0.6817102137767221
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6833333333333332
  - 0.6917785917785916
  - 0.657142857142857
  - 0.6848188848188849
  - 0.7139628732849072
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6381985892057254
  - 0.6542038791448662
  - 0.6160141919769759
  - 0.6407928607010814
  - 0.6717932850005948
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7560564663023674
  - 0.7784425451092113
  - 0.7191409897292247
  - 0.7647910731244066
  - 0.7889595103578155
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4777000740830597
  - 0.49445477013085687
  - 0.46384562482153363
  - 0.5043504209823751
  - 0.5613649234070126
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4833182877326727
  - 0.5113692520740689
  - 0.4514815526331838
  - 0.49311692600190227
  - 0.5463363075288344
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4709540936937693
  - 0.5132680392634721
  - 0.4419153395045402
  - 0.49538692715513166
  - 0.5336343846645223
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4744895526698966
  - 0.5006979383252506
  - 0.45145176767543016
  - 0.5030811461358121
  - 0.5532555729222167
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8279748122425064
  - 0.8482503353265582
  - 0.8030239713669312
  - 0.8367389006984591
  - 0.8539065554909984
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7540983606557377
  - -2.8461538461538463
  - -3.0168067226890756
  - -2.8803418803418803
  - -2.7288135593220337
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21311475409836067
  - -0.20512820512820515
  - -0.2282913165266106
  - -0.21225071225071224
  - -0.18926553672316385
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21311475409836064
  - -0.20512820512820512
  - -0.22829131652661064
  - -0.21225071225071226
  - -0.18926553672316385
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2131147540983607
  - -0.20512820512820512
  - -0.22829131652661064
  - -0.21225071225071224
  - -0.18926553672316382
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.22528002373711145
  - -0.21144221144221145
  - -0.24609300733868208
  - -0.22191697191697188
  - -0.20250385208012325
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17725409836065573
  - -0.16953941120607788
  - -0.21727357609710554
  - -0.18511396011396009
  - -0.1589689265536723
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7868852459016393
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492878
  - 0.8107344632768362
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7868852459016393
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492878
  - 0.8107344632768362
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7868852459016392
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492879
  - 0.8107344632768362
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7747199762628886
  - 0.7885577885577886
  - 0.753906992661318
  - 0.7780830280830281
  - 0.7974961479198767
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7868852459016393
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492878
  - 0.8107344632768362
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7868852459016393
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492878
  - 0.8107344632768362
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7868852459016392
  - 0.7948717948717948
  - 0.7717086834733894
  - 0.7877492877492879
  - 0.8107344632768362
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7747199762628886
  - 0.7885577885577886
  - 0.753906992661318
  - 0.7780830280830281
  - 0.7974961479198767
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.836203141673411
  - 0.8547231088451159
  - 0.8307340930085473
  - 0.8420323646507503
  - 0.8741056004378432
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8406726231061444
  - 0.8520364114114114
  - 0.8187383550705349
  - 0.8340462492528391
  - 0.8584668405365127
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8227459016393442
  - 0.8304605887939221
  - 0.7827264239028944
  - 0.8148860398860399
  - 0.8410310734463277
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8317578262647037
  - 0.8565667140314924
  - 0.8233183843407191
  - 0.8411784135723414
  - 0.8715641977489744
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9065581942824466
  - 0.8798874709383404
  - 0.9246108287987654
  - 0.9113049934197086
  - 0.9079136022043784
  train_average_precision_macro_oob:
  - 0.7414918718393441
  - 0.7370731480652412
  - 0.7547660083950637
  - 0.7403465094767392
  - 0.7213099410422107
  train_average_precision_micro:
  - 0.7584375315012626
  - 0.7371451022276747
  - 0.7527408671282029
  - 0.7400818934993043
  - 0.7411757796222497
  train_average_precision_micro_oob:
  - 0.6635614996975486
  - 0.6544093795758484
  - 0.6554240169503162
  - 0.6404612724012532
  - 0.6423069568079837
  train_average_precision_samples:
  - 0.8509790044821892
  - 0.8335667600373483
  - 0.8392522269104548
  - 0.8440242763772177
  - 0.8388538011695907
  train_average_precision_samples_oob:
  - 0.7748112762443973
  - 0.7790441176470588
  - 0.764510079699953
  - 0.7634862278244631
  - 0.7525730994152046
  train_average_precision_weighted:
  - 0.8878576371729696
  - 0.8582729498864505
  - 0.9073289931861673
  - 0.8896781795719921
  - 0.8872382959172533
  train_average_precision_weighted_oob:
  - 0.7356120101683503
  - 0.7284479102391936
  - 0.7491383338989962
  - 0.7314433107623334
  - 0.7166462205250198
  train_f1_macro:
  - 0.8598726114649682
  - 0.8620448179271708
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157895
  train_f1_macro_oob:
  - 0.7929936305732483
  - 0.8000700280112044
  - 0.7841068917018285
  - 0.78781512605042
  - 0.7817543859649123
  train_f1_micro:
  - 0.8598726114649682
  - 0.8620448179271709
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157894
  train_f1_micro_oob:
  - 0.7929936305732485
  - 0.8000700280112045
  - 0.7841068917018285
  - 0.7878151260504201
  - 0.7817543859649123
  train_f1_samples:
  - 0.8598726114649682
  - 0.8620448179271708
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157894
  train_f1_samples_oob:
  - 0.7929936305732485
  - 0.8000700280112044
  - 0.7841068917018285
  - 0.7878151260504201
  - 0.7817543859649123
  train_f1_weighted:
  - 0.8458220533921206
  - 0.848625680520515
  - 0.8461651896355705
  - 0.8457997452374614
  - 0.8479848269321952
  train_f1_weighted_oob:
  - 0.7820918815540348
  - 0.789228332416488
  - 0.7685389998049652
  - 0.7745066352332788
  - 0.7697889995258417
  train_jaccard_macro:
  - 0.761220972730441
  - 0.7639678805354926
  - 0.7701839849685759
  - 0.7666439528942316
  - 0.7704981893948707
  train_jaccard_macro_oob:
  - 0.6619570315706124
  - 0.6716463253622892
  - 0.6532664737012301
  - 0.6568405339821279
  - 0.647594673801878
  train_jaccard_micro:
  - 0.7541899441340782
  - 0.7575384615384615
  - 0.7593566347046087
  - 0.7575384615384615
  - 0.7608897126969416
  train_jaccard_micro_oob:
  - 0.6569920844327177
  - 0.6667639334695069
  - 0.6448814343551186
  - 0.6499133448873483
  - 0.6417050691244239
  train_jaccard_samples:
  - 0.7829744211909817
  - 0.7846538615446178
  - 0.7869097850110507
  - 0.7843637454981992
  - 0.7872581453634084
  train_jaccard_samples_oob:
  - 0.6888080072793448
  - 0.6993997599039615
  - 0.677195097448262
  - 0.6804021608643457
  - 0.6730726817042606
  train_jaccard_weighted:
  - 0.7412893988205351
  - 0.7445310544600398
  - 0.7466140362044856
  - 0.743976586014563
  - 0.7478799402593442
  train_jaccard_weighted_oob:
  - 0.6475850041587968
  - 0.6569979140322688
  - 0.6333980808515646
  - 0.6396883652314354
  - 0.6320149919018431
  train_label_ranking_average_precision_score:
  - 0.8509790044821887
  - 0.8335667600373475
  - 0.8392522269104539
  - 0.8440242763772167
  - 0.8388538011695899
  train_label_ranking_average_precision_score_oob:
  - 0.7748112762443965
  - 0.779044117647058
  - 0.7645100796999524
  - 0.7634862278244615
  - 0.7525730994152036
  train_matthews_corrcoef_macro:
  - 0.696025025571349
  - 0.7007082878737769
  - 0.710037306540479
  - 0.7040417285851719
  - 0.710427900847844
  train_matthews_corrcoef_macro_oob:
  - 0.5099363959254009
  - 0.5279976357328788
  - 0.48977932778022465
  - 0.4870991834065847
  - 0.46353520307486423
  train_matthews_corrcoef_micro:
  - 0.6695743074396624
  - 0.6743073085738851
  - 0.6778122473368792
  - 0.67337373873009
  - 0.6796511148151111
  train_matthews_corrcoef_micro_oob:
  - 0.4989546952381899
  - 0.5162640154373933
  - 0.4807074845873296
  - 0.48144514654673704
  - 0.4700396484269339
  train_matthews_corrcoef_samples:
  - 0.6610959492375448
  - 0.671821871594089
  - 0.6665046593191982
  - 0.6633238311522667
  - 0.6742341940416527
  train_matthews_corrcoef_samples_oob:
  - 0.4894433334321916
  - 0.5091318486290823
  - 0.4693618296983867
  - 0.47203818579347856
  - 0.4573503546115436
  train_matthews_corrcoef_weighted:
  - 0.6802841534763552
  - 0.6856306122608284
  - 0.6899864299889232
  - 0.6852459686102836
  - 0.6915380038376158
  train_matthews_corrcoef_weighted_oob:
  - 0.5066458342082184
  - 0.5238907208469684
  - 0.4807417396899383
  - 0.4825567470982979
  - 0.46187921215727806
  train_ndgc:
  - 0.8924869683734283
  - 0.878432337174022
  - 0.8840387288958105
  - 0.8872258288813277
  - 0.8830121274775315
  train_ndgc_oob:
  - 0.843283803733209
  - 0.8464482606561168
  - 0.8358609708290529
  - 0.8355938981825733
  - 0.8275896670554439
  train_neg_coverage_error:
  - -2.2823779193205946
  - -2.2857142857142856
  - -2.29957805907173
  - -2.2668067226890756
  - -2.2842105263157895
  train_neg_coverage_error_oob:
  - -2.8259023354564756
  - -2.783613445378151
  - -2.8164556962025316
  - -2.823529411764706
  - -2.8757894736842107
  train_neg_hamming_loss_macro:
  - -0.14012738853503184
  - -0.13795518207282914
  - -0.13677918424753865
  - -0.13795518207282914
  - -0.13578947368421054
  train_neg_hamming_loss_macro_oob:
  - -0.20700636942675157
  - -0.1999299719887955
  - -0.21589310829817163
  - -0.21218487394957983
  - -0.21824561403508771
  train_neg_hamming_loss_micro:
  - -0.14012738853503184
  - -0.13795518207282914
  - -0.13677918424753868
  - -0.13795518207282914
  - -0.13578947368421052
  train_neg_hamming_loss_micro_oob:
  - -0.2070063694267516
  - -0.19992997198879553
  - -0.2158931082981716
  - -0.21218487394957983
  - -0.21824561403508771
  train_neg_hamming_loss_samples:
  - -0.14012738853503184
  - -0.13795518207282914
  - -0.13677918424753865
  - -0.13795518207282914
  - -0.13578947368421052
  train_neg_hamming_loss_samples_oob:
  - -0.20700636942675157
  - -0.19992997198879553
  - -0.21589310829817157
  - -0.21218487394957983
  - -0.2182456140350877
  train_neg_hamming_loss_weighted:
  - -0.15417794660787934
  - -0.1513743194794848
  - -0.1538348103644295
  - -0.15420025476253849
  - -0.15201517306780465
  train_neg_hamming_loss_weighted_oob:
  - -0.2179081184459652
  - -0.21077166758351198
  - -0.23146100019503474
  - -0.2254933647667212
  - -0.23021100047415835
  train_neg_label_ranking_loss:
  - -0.08375796178343949
  - -0.09275793650793651
  - -0.09014299109235817
  - -0.08604108309990664
  - -0.08777192982456139
  train_neg_label_ranking_loss_oob:
  - -0.17479358339230952
  - -0.169625350140056
  - -0.17545710267229256
  - -0.17739845938375348
  - -0.18390643274853805
  train_precision_macro:
  - 0.8598726114649682
  - 0.8620448179271708
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157895
  train_precision_macro_oob:
  - 0.7929936305732483
  - 0.8000700280112044
  - 0.7841068917018285
  - 0.78781512605042
  - 0.7817543859649123
  train_precision_micro:
  - 0.8598726114649682
  - 0.8620448179271709
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157894
  train_precision_micro_oob:
  - 0.7929936305732485
  - 0.8000700280112045
  - 0.7841068917018285
  - 0.7878151260504201
  - 0.7817543859649123
  train_precision_samples:
  - 0.8598726114649682
  - 0.8620448179271708
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157894
  train_precision_samples_oob:
  - 0.7929936305732485
  - 0.8000700280112044
  - 0.7841068917018285
  - 0.7878151260504201
  - 0.7817543859649123
  train_precision_weighted:
  - 0.8458220533921206
  - 0.848625680520515
  - 0.8461651896355705
  - 0.8457997452374614
  - 0.8479848269321952
  train_precision_weighted_oob:
  - 0.7820918815540348
  - 0.789228332416488
  - 0.7685389998049652
  - 0.7745066352332788
  - 0.7697889995258417
  train_recall_macro:
  - 0.8598726114649682
  - 0.8620448179271708
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157895
  train_recall_macro_oob:
  - 0.7929936305732483
  - 0.8000700280112044
  - 0.7841068917018285
  - 0.78781512605042
  - 0.7817543859649123
  train_recall_micro:
  - 0.8598726114649682
  - 0.8620448179271709
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157894
  train_recall_micro_oob:
  - 0.7929936305732485
  - 0.8000700280112045
  - 0.7841068917018285
  - 0.7878151260504201
  - 0.7817543859649123
  train_recall_samples:
  - 0.8598726114649682
  - 0.8620448179271708
  - 0.8632208157524613
  - 0.8620448179271709
  - 0.8642105263157894
  train_recall_samples_oob:
  - 0.7929936305732485
  - 0.8000700280112044
  - 0.7841068917018285
  - 0.7878151260504201
  - 0.7817543859649123
  train_recall_weighted:
  - 0.8458220533921206
  - 0.848625680520515
  - 0.8461651896355705
  - 0.8457997452374614
  - 0.8479848269321952
  train_recall_weighted_oob:
  - 0.7820918815540348
  - 0.789228332416488
  - 0.7685389998049652
  - 0.7745066352332788
  - 0.7697889995258417
  train_roc_auc_macro:
  - 0.960239226795153
  - 0.9498106026167145
  - 0.9644932578325095
  - 0.96133274655788
  - 0.959570466819495
  train_roc_auc_macro_oob:
  - 0.8627984076826326
  - 0.8583059992884845
  - 0.869229056515897
  - 0.8643618103007581
  - 0.852706923554909
  train_roc_auc_micro:
  - 0.9319364634892986
  - 0.9265597964959722
  - 0.9278126852469007
  - 0.9289521628592146
  - 0.9277419621456319
  train_roc_auc_micro_oob:
  - 0.8496237847354458
  - 0.8505694904378316
  - 0.8470976041256808
  - 0.8458171183904988
  - 0.8399948113250866
  train_roc_auc_samples:
  - 0.9162420382165606
  - 0.9072420634920634
  - 0.9098570089076419
  - 0.9139589169000935
  - 0.9122280701754385
  train_roc_auc_samples_oob:
  - 0.8252064166076905
  - 0.8303746498599439
  - 0.8245428973277076
  - 0.8226015406162465
  - 0.816093567251462
  train_roc_auc_weighted:
  - 0.9500693440434682
  - 0.9378632038850234
  - 0.9548685761597708
  - 0.9500515849851774
  - 0.9484755910287955
  train_roc_auc_weighted_oob:
  - 0.8594511070269353
  - 0.8533364410415184
  - 0.8662244531592816
  - 0.8596613323289902
  - 0.8499348886157634
start: 2023-12-22 02:13:09.082538
wrapper: null
