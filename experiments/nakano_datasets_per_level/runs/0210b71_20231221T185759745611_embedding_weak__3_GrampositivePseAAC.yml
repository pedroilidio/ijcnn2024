active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwCYmZmZmcm/AJiZmZmZyb8AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:58:26.437332
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__3
  params: {}
hash: 0210b71687f34d32a57fc8b4c887eb71ad52386b57038225c5e278674cfb673a
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0210b71_20231221T185759745611_embedding_weak__3_GrampositivePseAAC.yml
results:
  fit_time:
  - 15.569488525390625
  - 13.954161405563354
  - 13.891753911972046
  - 15.160094261169434
  - 14.398494243621826
  score_time:
  - 2.8176779747009277
  - 2.788764715194702
  - 2.5246429443359375
  - 3.023789882659912
  - 2.930011034011841
  test_average_precision_macro:
  - 0.3868153652383709
  - 0.39332333412007936
  - 0.4373050955970473
  - 0.5490529797176219
  - 0.42731866315750394
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4778792425923261
  - 0.5176352203611521
  - 0.5507362245892242
  - 0.5796250209207878
  - 0.497559537184554
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7031746031746031
  - 0.6915064102564101
  - 0.7307692307692307
  - 0.7475961538461539
  - 0.716503267973856
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.45465645945300415
  - 0.49562231905318516
  - 0.5700692463242115
  - 0.5949900142473035
  - 0.47390039454695104
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7690476190476191
  - 0.7716346153846153
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7690476190476191
  - 0.7716346153846154
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7690476190476191
  - 0.7716346153846154
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7016780045351475
  - 0.7088827838827839
  - 0.7130952380952381
  - 0.7186575443786982
  - 0.6749622926093514
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.643403745914426
  - 0.6447188337132654
  - 0.6508752294655693
  - 0.6568711214169345
  - 0.6291042360685779
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6247582205029013
  - 0.6281800391389433
  - 0.6345776031434185
  - 0.6410256410256411
  - 0.6062992125984252
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.648253968253968
  - 0.658974358974359
  - 0.6641025641025641
  - 0.6692307692307692
  - 0.6313725490196077
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.548522420922449
  - 0.5544917562168353
  - 0.5599747576022528
  - 0.5641903536043552
  - 0.5180236787159301
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.703174603174603
  - 0.6915064102564105
  - 0.7307692307692306
  - 0.7475961538461537
  - 0.7165032679738562
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12129860333619578
  - 0.13559772985106833
  - 0.14474480382334343
  - 0.1504861513492569
  - 0.09133776192171603
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.25534411542847546
  - 0.28920272114283235
  - 0.3068484137206291
  - 0.31455733714066225
  - 0.22324364858296664
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1650793650793651
  - 0.21153846153846154
  - 0.22029503463964384
  - 0.22115384615384615
  - 0.14857549547430637
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.16465455322003777
  - 0.19145106970040865
  - 0.20656995643050052
  - 0.21903372529678683
  - 0.12648745760974306
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7786458055116471
  - 0.7702488918288221
  - 0.7997530562857994
  - 0.8120967574444327
  - 0.7895955274431872
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7904761904761906
  - -1.8076923076923077
  - -1.6826923076923077
  - -1.6442307692307692
  - -1.7941176470588236
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23095238095238096
  - -0.22836538461538464
  - -0.22355769230769235
  - -0.21875
  - -0.2450980392156863
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23095238095238096
  - -0.2283653846153846
  - -0.22355769230769232
  - -0.21875
  - -0.24509803921568626
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23095238095238096
  - -0.2283653846153846
  - -0.22355769230769232
  - -0.21875
  - -0.24509803921568626
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2983219954648526
  - -0.29111721611721614
  - -0.2869047619047619
  - -0.2813424556213018
  - -0.3250377073906486
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2634920634920635
  - -0.2676282051282051
  - -0.22435897435897434
  - -0.21474358974358973
  - -0.25571895424836605
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7690476190476191
  - 0.7716346153846153
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7690476190476191
  - 0.7716346153846154
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7690476190476191
  - 0.7716346153846154
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7016780045351475
  - 0.7088827838827839
  - 0.7130952380952381
  - 0.7186575443786982
  - 0.6749622926093514
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7690476190476191
  - 0.7716346153846153
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7690476190476191
  - 0.7716346153846154
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7690476190476191
  - 0.7716346153846154
  - 0.7764423076923077
  - 0.78125
  - 0.7549019607843137
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7016780045351475
  - 0.7088827838827839
  - 0.7130952380952381
  - 0.7186575443786982
  - 0.6749622926093514
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7047070181386056
  - 0.6558455021146052
  - 0.5879477903977159
  - 0.7851472289261492
  - 0.7083551864801865
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7608767951625095
  - 0.7622109937222478
  - 0.7801255550451692
  - 0.8031003451676529
  - 0.7603428643724697
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7365079365079364
  - 0.7323717948717949
  - 0.7756410256410257
  - 0.7852564102564104
  - 0.7442810457516338
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6599154408350675
  - 0.6550587751274912
  - 0.6891777310269596
  - 0.746438107163544
  - 0.6370248341402186
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9997852414522564
  - 0.9995556454126935
  - 0.9989660962900779
  - 0.9988807243044409
  - 0.999521777322242
  train_average_precision_macro_oob:
  - 0.5674651036436826
  - 0.5701331406291781
  - 0.5863622398386867
  - 0.5801084925686214
  - 0.5780410365663533
  train_average_precision_micro:
  - 0.9793193544589909
  - 0.9800829735530807
  - 0.9819275758836161
  - 0.9754997830210499
  - 0.9796057385939426
  train_average_precision_micro_oob:
  - 0.688517065366657
  - 0.6941170750864454
  - 0.6754337978111892
  - 0.6937008440151124
  - 0.6850352305746338
  train_average_precision_samples:
  - 0.9770531400966184
  - 0.9775100401606426
  - 0.9773092369477913
  - 0.9720883534136546
  - 0.9746203037569945
  train_average_precision_samples_oob:
  - 0.7685185185185186
  - 0.7791164658634537
  - 0.7566265060240964
  - 0.7652610441767068
  - 0.7855715427657874
  train_average_precision_weighted:
  - 0.9997524926697434
  - 0.9994575309664334
  - 0.9988069882508727
  - 0.998439591506565
  - 0.9993654133440729
  train_average_precision_weighted_oob:
  - 0.7221935112609971
  - 0.7194914567159604
  - 0.7240438460407731
  - 0.7377892250838295
  - 0.7313787874709655
  train_f1_macro:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433736
  - 0.9325301204819276
  - 0.9394484412470023
  train_f1_macro_oob:
  - 0.7952898550724637
  - 0.8030120481927712
  - 0.8012048192771084
  - 0.7993975903614459
  - 0.7973621103117506
  train_f1_micro:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433734
  - 0.9325301204819277
  - 0.9394484412470024
  train_f1_micro_oob:
  - 0.7952898550724637
  - 0.803012048192771
  - 0.8012048192771084
  - 0.7993975903614458
  - 0.7973621103117506
  train_f1_samples:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433734
  - 0.9325301204819277
  - 0.9394484412470024
  train_f1_samples_oob:
  - 0.7952898550724637
  - 0.803012048192771
  - 0.8012048192771084
  - 0.7993975903614458
  - 0.7973621103117506
  train_f1_weighted:
  - 0.9450107482144096
  - 0.9417305585980283
  - 0.9306681270536693
  - 0.9345084394858671
  - 0.9384397016992612
  train_f1_weighted_oob:
  - 0.7412454060051314
  - 0.7528275782556061
  - 0.7510578197959301
  - 0.7497368950743308
  - 0.7467992193357486
  train_jaccard_macro:
  - 0.8931927414739038
  - 0.8883170002312035
  - 0.8755457241352751
  - 0.8776536804004705
  - 0.8874145472891083
  train_jaccard_macro_oob:
  - 0.6730304947621792
  - 0.6825477248381484
  - 0.6801560836933772
  - 0.677520628761527
  - 0.6749996971866763
  train_jaccard_micro:
  - 0.8893325727324587
  - 0.8842224744608399
  - 0.8725324309080654
  - 0.873589164785553
  - 0.8858111927642736
  train_jaccard_micro_oob:
  - 0.6601503759398496
  - 0.6708605938600906
  - 0.6683417085427136
  - 0.6658304064224787
  - 0.6630109670987039
  train_jaccard_samples:
  - 0.9062801932367149
  - 0.9016867469879518
  - 0.8914056224899598
  - 0.8926907630522087
  - 0.9034372501998401
  train_jaccard_samples_oob:
  - 0.6766505636070852
  - 0.6889959839357428
  - 0.6864257028112447
  - 0.6838554216867468
  - 0.6824940047961628
  train_jaccard_weighted:
  - 0.8999747285116976
  - 0.8941482975053415
  - 0.8733326427514033
  - 0.8814268190060495
  - 0.8856897608738206
  train_jaccard_weighted_oob:
  - 0.5916449239136037
  - 0.6058653291564349
  - 0.6034870099722376
  - 0.6019089719253887
  - 0.598249545625829
  train_label_ranking_average_precision_score:
  - 0.9770531400966183
  - 0.9775100401606424
  - 0.9773092369477909
  - 0.9720883534136545
  - 0.9746203037569942
  train_label_ranking_average_precision_score_oob:
  - 0.7685185185185183
  - 0.7791164658634534
  - 0.7566265060240962
  - 0.7652610441767068
  - 0.7855715427657872
  train_matthews_corrcoef_macro:
  - 0.6152384669769497
  - 0.6059565309962693
  - 0.5964678257348384
  - 0.5941212779486231
  - 0.6206356656502061
  train_matthews_corrcoef_macro_oob:
  - 0.20055877045410603
  - 0.21735417510603267
  - 0.21318526990659034
  - 0.2083395134853634
  - 0.2008621548229686
  train_matthews_corrcoef_micro:
  - 0.8438865494601544
  - 0.8358273229195685
  - 0.8178109648764467
  - 0.8192210088293043
  - 0.8379553603219783
  train_matthews_corrcoef_micro_oob:
  - 0.3741355315264352
  - 0.4041701356002629
  - 0.39725971675448024
  - 0.39156711239959796
  - 0.3765060467339433
  train_matthews_corrcoef_samples:
  - 0.7712787465622186
  - 0.7583904838736598
  - 0.7329028928635645
  - 0.7388981552050407
  - 0.7615763795424212
  train_matthews_corrcoef_samples_oob:
  - 0.20708224832746105
  - 0.23710534331141095
  - 0.23030686811852924
  - 0.22548759101009552
  - 0.2246203037569944
  train_matthews_corrcoef_weighted:
  - 0.8251945531042396
  - 0.8153218451249998
  - 0.7959071402594302
  - 0.7976577107744989
  - 0.8171226654253072
  train_matthews_corrcoef_weighted_oob:
  - 0.29302986119771
  - 0.31885648878429695
  - 0.31294924170117944
  - 0.30759669897022857
  - 0.29542432214826303
  train_ndgc:
  - 0.9827660223520177
  - 0.9831416388857557
  - 0.983068939687979
  - 0.9791017974852442
  - 0.9808506856271313
  train_ndgc_oob:
  - 0.8280795550259287
  - 0.8358590264513264
  - 0.8192850688262112
  - 0.8255444905324112
  - 0.8404624568762468
  train_neg_coverage_error:
  - -1.0942028985507246
  - -1.0867469879518072
  - -1.0795180722891566
  - -1.1036144578313254
  - -1.0935251798561152
  train_neg_coverage_error_oob:
  - -1.603864734299517
  - -1.5734939759036144
  - -1.6265060240963856
  - -1.621686746987952
  - -1.5563549160671464
  train_neg_hamming_loss_macro:
  - -0.05857487922705314
  - -0.061445783132530116
  - -0.06807228915662651
  - -0.06746987951807229
  - -0.0605515587529976
  train_neg_hamming_loss_macro_oob:
  - -0.2047101449275362
  - -0.1969879518072289
  - -0.19879518072289157
  - -0.2006024096385542
  - -0.2026378896882494
  train_neg_hamming_loss_micro:
  - -0.058574879227053143
  - -0.06144578313253012
  - -0.06807228915662651
  - -0.06746987951807229
  - -0.0605515587529976
  train_neg_hamming_loss_micro_oob:
  - -0.20471014492753623
  - -0.19698795180722892
  - -0.19879518072289157
  - -0.20060240963855422
  - -0.2026378896882494
  train_neg_hamming_loss_samples:
  - -0.058574879227053143
  - -0.06144578313253012
  - -0.06807228915662651
  - -0.06746987951807229
  - -0.0605515587529976
  train_neg_hamming_loss_samples_oob:
  - -0.20471014492753623
  - -0.19698795180722892
  - -0.19879518072289157
  - -0.20060240963855422
  - -0.2026378896882494
  train_neg_hamming_loss_weighted:
  - -0.054989251785590464
  - -0.05826944140197151
  - -0.06933187294633078
  - -0.06549156051413291
  - -0.061560298300738885
  train_neg_hamming_loss_weighted_oob:
  - -0.25875459399486855
  - -0.24717242174439386
  - -0.24894218020406989
  - -0.2502631049256693
  - -0.25320078066425145
  train_neg_label_ranking_loss:
  - -0.02797906602254428
  - -0.026305220883534135
  - -0.023895582329317263
  - -0.03112449799196787
  - -0.029576338928856912
  train_neg_label_ranking_loss_oob:
  - -0.1972624798711755
  - -0.18815261044176707
  - -0.20562248995983934
  - -0.20321285140562248
  - -0.18365307753796958
  train_precision_macro:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433736
  - 0.9325301204819276
  - 0.9394484412470023
  train_precision_macro_oob:
  - 0.7952898550724637
  - 0.8030120481927712
  - 0.8012048192771084
  - 0.7993975903614459
  - 0.7973621103117506
  train_precision_micro:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433734
  - 0.9325301204819277
  - 0.9394484412470024
  train_precision_micro_oob:
  - 0.7952898550724637
  - 0.803012048192771
  - 0.8012048192771084
  - 0.7993975903614458
  - 0.7973621103117506
  train_precision_samples:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433734
  - 0.9325301204819277
  - 0.9394484412470024
  train_precision_samples_oob:
  - 0.7952898550724637
  - 0.803012048192771
  - 0.8012048192771084
  - 0.7993975903614458
  - 0.7973621103117506
  train_precision_weighted:
  - 0.9450107482144096
  - 0.9417305585980283
  - 0.9306681270536693
  - 0.9345084394858671
  - 0.9384397016992612
  train_precision_weighted_oob:
  - 0.7412454060051314
  - 0.7528275782556061
  - 0.7510578197959301
  - 0.7497368950743308
  - 0.7467992193357486
  train_recall_macro:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433736
  - 0.9325301204819276
  - 0.9394484412470023
  train_recall_macro_oob:
  - 0.7952898550724637
  - 0.8030120481927712
  - 0.8012048192771084
  - 0.7993975903614459
  - 0.7973621103117506
  train_recall_micro:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433734
  - 0.9325301204819277
  - 0.9394484412470024
  train_recall_micro_oob:
  - 0.7952898550724637
  - 0.803012048192771
  - 0.8012048192771084
  - 0.7993975903614458
  - 0.7973621103117506
  train_recall_samples:
  - 0.9414251207729468
  - 0.9385542168674699
  - 0.9319277108433734
  - 0.9325301204819277
  - 0.9394484412470024
  train_recall_samples_oob:
  - 0.7952898550724637
  - 0.803012048192771
  - 0.8012048192771084
  - 0.7993975903614458
  - 0.7973621103117506
  train_recall_weighted:
  - 0.9450107482144096
  - 0.9417305585980283
  - 0.9306681270536693
  - 0.9345084394858671
  - 0.9384397016992612
  train_recall_weighted_oob:
  - 0.7412454060051314
  - 0.7528275782556061
  - 0.7510578197959301
  - 0.7497368950743308
  - 0.7467992193357486
  train_roc_auc_macro:
  - 0.9999090537536275
  - 0.9998033664632118
  - 0.9995359893603104
  - 0.9994028715259538
  - 0.9997606231561513
  train_roc_auc_macro_oob:
  - 0.7794947430717132
  - 0.8039573013803551
  - 0.8141306164211171
  - 0.78502647332106
  - 0.75708622536099
  train_roc_auc_micro:
  - 0.9836072226387675
  - 0.9852645447611122
  - 0.9877743876599713
  - 0.9831531658009265
  - 0.9852043926310499
  train_roc_auc_micro_oob:
  - 0.8477170308647223
  - 0.8528727396004284
  - 0.845751566003282
  - 0.847461147469417
  - 0.8526229097836742
  train_roc_auc_samples:
  - 0.9720209339774558
  - 0.973694779116466
  - 0.9761044176706828
  - 0.9688755020080321
  - 0.9704236610711431
  train_roc_auc_samples_oob:
  - 0.8027375201288246
  - 0.811847389558233
  - 0.7943775100401606
  - 0.7967871485943776
  - 0.8163469224620304
  train_roc_auc_weighted:
  - 0.9998911364995777
  - 0.9997542359033456
  - 0.9994531533215889
  - 0.999135861514153
  - 0.9996823543551794
  train_roc_auc_weighted_oob:
  - 0.8220667920232757
  - 0.8313973636785368
  - 0.8270061338518101
  - 0.8367302926020169
  - 0.8226569495083561
start: 2023-12-21 18:57:59.745611
wrapper: null
