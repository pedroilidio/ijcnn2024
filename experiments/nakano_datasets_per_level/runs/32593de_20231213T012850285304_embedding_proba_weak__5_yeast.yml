active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wMzMzMzMDMCAmZmZmZn5v6CZmZmZmRVAoJmZmZmZFUBgZmZmZmYWwA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzC0BAMzMzMzMLQAAzMzMzM+O/MDMzMzMzIcBAMzMzMzMDQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMDMCgmZmZmZkRQKCZmZmZmR1AoJmZmZmZEUAwMzMzMzMpwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8DQzMzMzMwMQGhmZmZmZhJAmJmZmZmZGcBAMzMzMzPjPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb9kZmZmZmYmwHBmZmZmZgZAODMzMzMzG0DgzMzMzMz8Pw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AJiZmZmZ6b8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZmBkCAZmZmZmYGQACYmZmZmcm/wMzMzMzMEMAAMzMzMzPzvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJvzAzMzMzM/O/MDMzMzMz879oZmZmZmYGQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZNMAgMzMzMzMnwODMzMzMzCRAcGZmZmZmNUAAnJmZmZnZPw==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:35:09.064599
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 32593de6af65f5da0f69b26f3eccc9020c22d72045214f74228f55e853e92dff
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/32593de_20231213T012850285304_embedding_proba_weak__5_yeast.yml
results:
  fit_time:
  - 259.2404170036316
  - 286.69344997406006
  - 288.20599913597107
  - 298.5362231731415
  - 293.872967004776
  score_time:
  - 23.127899885177612
  - 18.522430658340454
  - 17.607558250427246
  - 15.49729299545288
  - 17.21041178703308
  test_average_precision_macro:
  - 0.47007386543850016
  - 0.47713348346739826
  - 0.4923588682484743
  - 0.5203472507328724
  - 0.5111753833466819
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6540247511091344
  - 0.6550244387620098
  - 0.7004708903035468
  - 0.7075895408321478
  - 0.697651732059672
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.730838943563575
  - 0.7298108624802949
  - 0.7529521601408871
  - 0.7779032398488145
  - 0.7575768478716939
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6240242275777692
  - 0.6245063945856762
  - 0.6679540494329038
  - 0.6810506925539128
  - 0.6661181134043718
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7872732426303857
  - 0.7884559884559884
  - 0.791754756871036
  - 0.7960729746444032
  - 0.7938479739721974
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7872732426303855
  - 0.7884559884559884
  - 0.7917547568710359
  - 0.7960729746444032
  - 0.7938479739721975
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7872732426303856
  - 0.7884559884559885
  - 0.7917547568710359
  - 0.7960729746444032
  - 0.7938479739721976
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7374106562703053
  - 0.7360532535911141
  - 0.7450317124735728
  - 0.7599152755022214
  - 0.7539711029796973
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6570695484936503
  - 0.6602554731965277
  - 0.6629256802990902
  - 0.6669482751301007
  - 0.6656620163183397
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6491761131237583
  - 0.6507860886136255
  - 0.6552930883639545
  - 0.6612302555541286
  - 0.6581657675331045
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6808859602559405
  - 0.6798988220686563
  - 0.6844395568946121
  - 0.6908484746597671
  - 0.6854468186275966
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5882668916197002
  - 0.5863740057407972
  - 0.5978873311346534
  - 0.6161009061970083
  - 0.6088002667820047
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7308389435635744
  - 0.7298108624802949
  - 0.7529521601408873
  - 0.7779032398488146
  - 0.7575768478716933
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2462906392931712
  - 0.24572368108952009
  - 0.2461455174122574
  - 0.26568352446011356
  - 0.27439897810141295
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4867450464199575
  - 0.49694284560797325
  - 0.500204852795313
  - 0.5203034720120621
  - 0.5132828838236514
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.48580532902762164
  - 0.5044811204270514
  - 0.5108233798635493
  - 0.5283820299018395
  - 0.5148073722480578
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2634121226611432
  - 0.24363137022812054
  - 0.2715021833069703
  - 0.2855764270858721
  - 0.29816498004894365
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8305244600130923
  - 0.8324297249299923
  - 0.8503427287848914
  - 0.8678458575159202
  - 0.8514101770564694
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.323412698412699
  - -7.474747474747475
  - -7.431289640591967
  - -7.287878787878788
  - -7.2939958592132506
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21272675736961452
  - -0.2115440115440115
  - -0.20824524312896406
  - -0.20392702535559679
  - -0.20615202602780244
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21272675736961452
  - -0.21154401154401153
  - -0.20824524312896406
  - -0.20392702535559679
  - -0.20615202602780242
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2127267573696145
  - -0.21154401154401153
  - -0.20824524312896406
  - -0.2039270253555968
  - -0.2061520260278024
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26258934372969456
  - -0.26394674640888616
  - -0.2549682875264271
  - -0.2400847244977786
  - -0.24602889702030273
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.196082842107502
  - -0.19237464315386393
  - -0.18540809336641412
  - -0.16693219856485164
  - -0.17351721038500098
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7872732426303857
  - 0.7884559884559884
  - 0.791754756871036
  - 0.7960729746444032
  - 0.7938479739721974
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7872732426303855
  - 0.7884559884559884
  - 0.7917547568710359
  - 0.7960729746444032
  - 0.7938479739721975
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7872732426303856
  - 0.7884559884559885
  - 0.7917547568710359
  - 0.7960729746444032
  - 0.7938479739721976
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7374106562703053
  - 0.7360532535911141
  - 0.7450317124735728
  - 0.7599152755022214
  - 0.7539711029796973
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7872732426303857
  - 0.7884559884559884
  - 0.791754756871036
  - 0.7960729746444032
  - 0.7938479739721974
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7872732426303855
  - 0.7884559884559884
  - 0.7917547568710359
  - 0.7960729746444032
  - 0.7938479739721975
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7872732426303856
  - 0.7884559884559885
  - 0.7917547568710359
  - 0.7960729746444032
  - 0.7938479739721976
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7374106562703053
  - 0.7360532535911141
  - 0.7450317124735728
  - 0.7599152755022214
  - 0.7539711029796973
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6785445371860168
  - 0.6884833621724943
  - 0.6889747818714943
  - 0.7056576490037119
  - 0.7052402088017107
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.813232260195742
  - 0.8171350790720745
  - 0.8218695825680987
  - 0.8346543108198978
  - 0.8291763898442677
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.803958493871334
  - 0.8076464006171797
  - 0.8146447607562075
  - 0.8330918514591984
  - 0.826482789614999
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6819117884357928
  - 0.6758444946165112
  - 0.6979368626473722
  - 0.7025508409222306
  - 0.7008179922010884
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9046673822820523
  - 0.8986888430889962
  - 0.9063982338221751
  - 0.9052005992058401
  - 0.9046300662459598
  train_average_precision_macro_oob:
  - 0.8927955527077953
  - 0.8870639274935769
  - 0.8986919180842248
  - 0.8947295216718099
  - 0.890239803295091
  train_average_precision_micro:
  - 0.9756075923243416
  - 0.9813248020565966
  - 0.9797670596696544
  - 0.9696800920446154
  - 0.9732240822731855
  train_average_precision_micro_oob:
  - 0.9700094194747745
  - 0.9755236073734257
  - 0.9737922538770586
  - 0.9648614707924839
  - 0.9679343522614154
  train_average_precision_samples:
  - 0.9909181171289272
  - 0.9911418997761814
  - 0.9912213367428591
  - 0.9920115364986575
  - 0.9910419216807715
  train_average_precision_samples_oob:
  - 0.9835739474087213
  - 0.9838972039137261
  - 0.984095963172793
  - 0.9863490974146041
  - 0.9852485945304
  train_average_precision_weighted:
  - 0.9802950369850743
  - 0.9772462869098231
  - 0.9791319077404446
  - 0.9803316762213733
  - 0.979494707727476
  train_average_precision_weighted_oob:
  - 0.973430173168952
  - 0.9701387178462149
  - 0.9721961690704195
  - 0.9743132543104205
  - 0.9723893118847671
  train_f1_macro:
  - 0.9693450825181091
  - 0.9694143005797533
  - 0.9710464432686655
  - 0.9714285714285715
  - 0.9694932781799379
  train_f1_macro_oob:
  - 0.9613546411769098
  - 0.9619815668202766
  - 0.9611625514403291
  - 0.963244428206065
  - 0.9606293396365787
  train_f1_micro:
  - 0.9693450825181091
  - 0.9694143005797532
  - 0.9710464432686655
  - 0.9714285714285714
  - 0.9694932781799379
  train_f1_micro_oob:
  - 0.9613546411769098
  - 0.9619815668202765
  - 0.9611625514403292
  - 0.963244428206065
  - 0.9606293396365785
  train_f1_samples:
  - 0.9693450825181092
  - 0.9694143005797533
  - 0.9710464432686655
  - 0.9714285714285715
  - 0.9694932781799379
  train_f1_samples_oob:
  - 0.9613546411769099
  - 0.9619815668202766
  - 0.9611625514403292
  - 0.9632444282060652
  - 0.9606293396365787
  train_f1_weighted:
  - 0.9784738582866859
  - 0.9775685465139464
  - 0.9795107611840584
  - 0.9798986602563541
  - 0.9792381667630184
  train_f1_weighted_oob:
  - 0.9707203516606528
  - 0.9694724725612025
  - 0.9694667722161328
  - 0.9713827983562745
  - 0.9701589763591834
  train_jaccard_macro:
  - 0.9413967683331224
  - 0.9413537052358906
  - 0.9446041678210637
  - 0.9452887943925613
  - 0.9417308143384648
  train_jaccard_macro_oob:
  - 0.926336054911956
  - 0.9273833530026447
  - 0.9260648636011843
  - 0.9298212606235665
  - 0.9250594698509421
  train_jaccard_micro:
  - 0.940513712277651
  - 0.9406440445710577
  - 0.9437223253820882
  - 0.9444444444444444
  - 0.9407927747114903
  train_jaccard_micro_oob:
  - 0.9255850738756876
  - 0.9267480577136515
  - 0.9252290170834365
  - 0.9290950098674936
  - 0.9242413474522067
  train_jaccard_samples:
  - 0.9451463840458644
  - 0.9458276283841759
  - 0.9481569692709948
  - 0.9489133733988951
  - 0.9455885643504306
  train_jaccard_samples_oob:
  - 0.9318822871267527
  - 0.9335369217150321
  - 0.9316551257713396
  - 0.9351113152220102
  - 0.9307323744098775
  train_jaccard_weighted:
  - 0.9580920276265723
  - 0.9564253679287006
  - 0.9600897920419502
  - 0.9607815218726674
  - 0.9595620915612743
  train_jaccard_weighted_oob:
  - 0.9435487145536733
  - 0.9411671137388614
  - 0.9412361610826673
  - 0.944730511226976
  - 0.9424751392421761
  train_label_ranking_average_precision_score:
  - 0.9909181171289277
  - 0.9911418997761817
  - 0.9912213367428596
  - 0.9920115364986579
  - 0.991041921680772
  train_label_ranking_average_precision_score_oob:
  - 0.9835739474087222
  - 0.9838972039137265
  - 0.9840959631727931
  - 0.9863490974146044
  - 0.9852485945304003
  train_matthews_corrcoef_macro:
  - 0.8650698990574023
  - 0.8666983286487995
  - 0.8754657898270589
  - 0.8695723932038373
  - 0.8628623754287487
  train_matthews_corrcoef_macro_oob:
  - 0.8346635081269617
  - 0.8375226882915939
  - 0.8389947533995387
  - 0.8385769352540301
  - 0.8321623685465724
  train_matthews_corrcoef_micro:
  - 0.9280407321392377
  - 0.927943909756138
  - 0.9314280944671812
  - 0.9321240537632955
  - 0.9277928182778004
  train_matthews_corrcoef_micro_oob:
  - 0.9088677506301124
  - 0.910063372868912
  - 0.9074950015747104
  - 0.9122066401090232
  - 0.9063885773036305
  train_matthews_corrcoef_samples:
  - 0.9316635140074222
  - 0.9322603857891939
  - 0.934322402001315
  - 0.9370616081639108
  - 0.9320646624764548
  train_matthews_corrcoef_samples_oob:
  - 0.9134177480711076
  - 0.9150730241589591
  - 0.9124777669802935
  - 0.9172272844635251
  - 0.912734818930276
  train_matthews_corrcoef_weighted:
  - 0.9399454954010866
  - 0.9385523409150304
  - 0.9438444017877338
  - 0.9436384061663479
  - 0.940194726049511
  train_matthews_corrcoef_weighted_oob:
  - 0.918657748246743
  - 0.9163427181420594
  - 0.9169557412981391
  - 0.921002953159869
  - 0.9162216098803213
  train_ndgc:
  - 0.9954805696308527
  - 0.9957279924813847
  - 0.9956026986647148
  - 0.9960864946599431
  - 0.9954112524364324
  train_ndgc_oob:
  - 0.9919073803908306
  - 0.9921555321918085
  - 0.9920423701518557
  - 0.9934466976637422
  - 0.9927354262403812
  train_neg_coverage_error:
  - -4.39832723470988
  - -4.376170655567117
  - -4.325102880658436
  - -4.28849104859335
  - -4.343846949327818
  train_neg_coverage_error_oob:
  - -4.556194458964977
  - -4.521331945889698
  - -4.475823045267489
  - -4.423017902813299
  - -4.485522233712513
  train_neg_hamming_loss_macro:
  - -0.030654917481890816
  - -0.03058569942024677
  - -0.02895355673133451
  - -0.028571428571428574
  - -0.03050672182006205
  train_neg_hamming_loss_macro_oob:
  - -0.038645358823090135
  - -0.0380184331797235
  - -0.038837448559670786
  - -0.03675557179393497
  - -0.039370660363421475
  train_neg_hamming_loss_micro:
  - -0.030654917481890823
  - -0.030585699420246765
  - -0.02895355673133451
  - -0.02857142857142857
  - -0.030506721820062047
  train_neg_hamming_loss_micro_oob:
  - -0.038645358823090135
  - -0.038018433179723504
  - -0.03883744855967078
  - -0.03675557179393497
  - -0.03937066036342148
  train_neg_hamming_loss_samples:
  - -0.03065491748189082
  - -0.030585699420246762
  - -0.028953556731334505
  - -0.028571428571428567
  - -0.030506721820062047
  train_neg_hamming_loss_samples_oob:
  - -0.03864535882309013
  - -0.038018433179723504
  - -0.03883744855967078
  - -0.03675557179393497
  - -0.039370660363421475
  train_neg_hamming_loss_weighted:
  - -0.021526141713314118
  - -0.02243145348605373
  - -0.02048923881594148
  - -0.02010133974364581
  - -0.020761833236981723
  train_neg_hamming_loss_weighted_oob:
  - -0.029279648339347267
  - -0.030527527438797504
  - -0.03053322778386717
  - -0.028617201643725398
  - -0.029841023640816713
  train_neg_label_ranking_loss:
  - -0.004742369289453151
  - -0.004594626484956498
  - -0.004043173231334607
  - -0.003942624480622289
  - -0.004454645049636924
  train_neg_label_ranking_loss_oob:
  - -0.010281373262106592
  - -0.00982049700460582
  - -0.009249541039664496
  - -0.008347878018137427
  - -0.009313460295880151
  train_precision_macro:
  - 0.9693450825181091
  - 0.9694143005797533
  - 0.9710464432686655
  - 0.9714285714285715
  - 0.9694932781799379
  train_precision_macro_oob:
  - 0.9613546411769098
  - 0.9619815668202766
  - 0.9611625514403291
  - 0.963244428206065
  - 0.9606293396365787
  train_precision_micro:
  - 0.9693450825181091
  - 0.9694143005797532
  - 0.9710464432686655
  - 0.9714285714285714
  - 0.9694932781799379
  train_precision_micro_oob:
  - 0.9613546411769098
  - 0.9619815668202765
  - 0.9611625514403292
  - 0.963244428206065
  - 0.9606293396365785
  train_precision_samples:
  - 0.9693450825181092
  - 0.9694143005797533
  - 0.9710464432686655
  - 0.9714285714285715
  - 0.9694932781799379
  train_precision_samples_oob:
  - 0.9613546411769099
  - 0.9619815668202766
  - 0.9611625514403292
  - 0.9632444282060652
  - 0.9606293396365787
  train_precision_weighted:
  - 0.9784738582866859
  - 0.9775685465139464
  - 0.9795107611840584
  - 0.9798986602563541
  - 0.9792381667630184
  train_precision_weighted_oob:
  - 0.9707203516606528
  - 0.9694724725612025
  - 0.9694667722161328
  - 0.9713827983562745
  - 0.9701589763591834
  train_recall_macro:
  - 0.9693450825181091
  - 0.9694143005797533
  - 0.9710464432686655
  - 0.9714285714285715
  - 0.9694932781799379
  train_recall_macro_oob:
  - 0.9613546411769098
  - 0.9619815668202766
  - 0.9611625514403291
  - 0.963244428206065
  - 0.9606293396365787
  train_recall_micro:
  - 0.9693450825181091
  - 0.9694143005797532
  - 0.9710464432686655
  - 0.9714285714285714
  - 0.9694932781799379
  train_recall_micro_oob:
  - 0.9613546411769098
  - 0.9619815668202765
  - 0.9611625514403292
  - 0.963244428206065
  - 0.9606293396365785
  train_recall_samples:
  - 0.9693450825181092
  - 0.9694143005797533
  - 0.9710464432686655
  - 0.9714285714285715
  - 0.9694932781799379
  train_recall_samples_oob:
  - 0.9613546411769099
  - 0.9619815668202766
  - 0.9611625514403292
  - 0.9632444282060652
  - 0.9606293396365787
  train_recall_weighted:
  - 0.9784738582866859
  - 0.9775685465139464
  - 0.9795107611840584
  - 0.9798986602563541
  - 0.9792381667630184
  train_recall_weighted_oob:
  - 0.9707203516606528
  - 0.9694724725612025
  - 0.9694667722161328
  - 0.9713827983562745
  - 0.9701589763591834
  train_roc_auc_macro:
  - 0.9897425814352285
  - 0.9903346114521078
  - 0.9909059862273237
  - 0.9901095658580968
  - 0.9895816800447989
  train_roc_auc_macro_oob:
  - 0.9833945589930001
  - 0.9847000948393781
  - 0.9857166173606584
  - 0.9851225958448003
  - 0.98366600406987
  train_roc_auc_micro:
  - 0.9921342826364475
  - 0.9935819560962467
  - 0.9935613544000352
  - 0.9917273165176786
  - 0.9919825905707088
  train_roc_auc_micro_oob:
  - 0.9885844742410612
  - 0.9901134920728704
  - 0.9900402982876232
  - 0.9886472631966431
  - 0.988363401505348
  train_roc_auc_samples:
  - 0.9952576307105468
  - 0.9954053735150435
  - 0.9959568267686653
  - 0.9960573755193777
  - 0.9955453549503631
  train_roc_auc_samples_oob:
  - 0.9897186267378935
  - 0.9901795029953941
  - 0.9907504589603355
  - 0.9916521219818626
  - 0.99068653970412
  train_roc_auc_weighted:
  - 0.9947256069794892
  - 0.9950832000365748
  - 0.9945532538814642
  - 0.9947045581956888
  - 0.9939380340708138
  train_roc_auc_weighted_oob:
  - 0.9905763631923229
  - 0.9906807387245623
  - 0.9903076166981778
  - 0.9913343805815569
  - 0.9898202746183928
start: 2023-12-13 01:28:50.285304
wrapper: null
