active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j9AMzMzMzMLQMDMzMzMzATAADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:34:08.651703
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__0
  params: {}
hash: e42d3d79be37e6b78d11dfb8087b0927173a4202beb4b89f8aa73d1f7ffc6097
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e42d3d7_20231221T123404294590_embedding_proba_weak__0_VirusPseAAC.yml
results:
  fit_time:
  - 1.146768569946289
  - 1.1772708892822266
  - 1.1435914039611816
  - 1.1779189109802246
  - 1.1326940059661865
  score_time:
  - 0.600205659866333
  - 0.5837161540985107
  - 0.6040725708007812
  - 0.5673301219940186
  - 0.6229836940765381
  test_average_precision_macro:
  - 0.25839661043702283
  - 0.4463979640641782
  - 0.37468893021596344
  - 0.3587118313761855
  - 0.4710647274692206
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.3709988648053255
  - 0.5053217181328903
  - 0.34947921247824365
  - 0.4122871285798769
  - 0.404145088993749
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.653263888888889
  - 0.718859649122807
  - 0.6149621212121212
  - 0.6916666666666667
  - 0.6573643410852713
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.36993409597430293
  - 0.5013358746983811
  - 0.33353210512139575
  - 0.4395791423381022
  - 0.438147106297752
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7916666666666666
  - 0.7807017543859649
  - 0.8068181818181818
  - 0.8015873015873015
  - 0.8023255813953488
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7916666666666666
  - 0.7807017543859649
  - 0.8068181818181818
  - 0.8015873015873016
  - 0.8023255813953488
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7916666666666667
  - 0.7807017543859649
  - 0.8068181818181821
  - 0.8015873015873015
  - 0.802325581395349
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.669
  - 0.6578947368421052
  - 0.7045454545454545
  - 0.6752380952380952
  - 0.6976744186046511
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6829320969220402
  - 0.6683261183261183
  - 0.698407707107552
  - 0.6965651831159706
  - 0.6928920409771474
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6551724137931034
  - 0.6402877697841727
  - 0.6761904761904762
  - 0.6688741721854304
  - 0.6699029126213593
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.661904761904762
  - 0.6491228070175439
  - 0.6801948051948054
  - 0.6734693877551022
  - 0.6744186046511629
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5219259347742071
  - 0.5124329004329005
  - 0.5611836337962015
  - 0.5293114770955082
  - 0.553604969174431
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6532638888888889
  - 0.7188596491228069
  - 0.6149621212121213
  - 0.6916666666666665
  - 0.6573643410852713
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7398815476136932
  - 0.7940647649483089
  - 0.7151569525655316
  - 0.770155794714766
  - 0.7450755865922334
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.475
  - -2.236842105263158
  - -2.272727272727273
  - -2.2857142857142856
  - -2.3488372093023258
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20833333333333334
  - -0.2192982456140351
  - -0.19318181818181815
  - -0.19841269841269846
  - -0.19767441860465115
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20833333333333334
  - -0.21929824561403508
  - -0.19318181818181818
  - -0.1984126984126984
  - -0.19767441860465115
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20833333333333331
  - -0.21929824561403505
  - -0.19318181818181815
  - -0.19841269841269837
  - -0.19767441860465113
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33099999999999996
  - -0.3421052631578948
  - -0.29545454545454547
  - -0.32476190476190475
  - -0.3023255813953488
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2498611111111111
  - -0.17923976608187134
  - -0.22556818181818175
  - -0.21607142857142855
  - -0.22790697674418603
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7916666666666666
  - 0.7807017543859649
  - 0.8068181818181818
  - 0.8015873015873015
  - 0.8023255813953488
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7916666666666666
  - 0.7807017543859649
  - 0.8068181818181818
  - 0.8015873015873016
  - 0.8023255813953488
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7916666666666667
  - 0.7807017543859649
  - 0.8068181818181821
  - 0.8015873015873015
  - 0.802325581395349
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.669
  - 0.6578947368421052
  - 0.7045454545454545
  - 0.6752380952380952
  - 0.6976744186046511
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7916666666666666
  - 0.7807017543859649
  - 0.8068181818181818
  - 0.8015873015873015
  - 0.8023255813953488
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7916666666666666
  - 0.7807017543859649
  - 0.8068181818181818
  - 0.8015873015873016
  - 0.8023255813953488
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7916666666666667
  - 0.7807017543859649
  - 0.8068181818181821
  - 0.8015873015873015
  - 0.802325581395349
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.669
  - 0.6578947368421052
  - 0.7045454545454545
  - 0.6752380952380952
  - 0.6976744186046511
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.47506804538054537
  - 0.7317367919389978
  - 0.5850290591712161
  - 0.6043994964029448
  - 0.6795470324882089
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7477894736842104
  - 0.8196629213483146
  - 0.7561447114056891
  - 0.7776237623762376
  - 0.7770199867386568
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7501388888888889
  - 0.8207602339181287
  - 0.774431818181818
  - 0.7839285714285713
  - 0.772093023255814
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.4806837606837607
  - 0.6747589869281044
  - 0.4850507370115214
  - 0.5814675795179004
  - 0.6024803083626612
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7064330652598794
  - 0.7095534555927503
  - 0.7176421581429039
  - 0.7553718490462903
  - 0.7162931394640202
  train_average_precision_macro_oob:
  - 0.3065596293744701
  - 0.25673528393386713
  - 0.2629770036148889
  - 0.3246467904505444
  - 0.27387716980474525
  train_average_precision_micro:
  - 0.7540324798890458
  - 0.744889067274667
  - 0.7380179706105205
  - 0.7594661428156336
  - 0.7567780255779064
  train_average_precision_micro_oob:
  - 0.4100297879898373
  - 0.39360024039031266
  - 0.39752191904132433
  - 0.3880754917289924
  - 0.39798259465455144
  train_average_precision_samples:
  - 0.8003493013972056
  - 0.7959566074950689
  - 0.7958077709611452
  - 0.8119696969696969
  - 0.8148882113821138
  train_average_precision_samples_oob:
  - 0.6338323353293412
  - 0.6392833662064431
  - 0.6434389911383777
  - 0.6512457912457912
  - 0.6469850948509485
  train_average_precision_weighted:
  - 0.7547168510772951
  - 0.7562109961907211
  - 0.756768472631718
  - 0.7718684981231269
  - 0.7708265994888667
  train_average_precision_weighted_oob:
  - 0.3693373574571137
  - 0.3542020486352447
  - 0.35686600683699143
  - 0.35792535393284963
  - 0.3504956290698123
  train_f1_macro:
  - 0.7984031936127743
  - 0.8007889546351086
  - 0.7944785276073619
  - 0.7959595959595961
  - 0.7957317073170732
  train_f1_macro_oob:
  - 0.7984031936127743
  - 0.8007889546351086
  - 0.7944785276073619
  - 0.7959595959595961
  - 0.7957317073170732
  train_f1_micro:
  - 0.7984031936127745
  - 0.8007889546351085
  - 0.7944785276073619
  - 0.795959595959596
  - 0.7957317073170732
  train_f1_micro_oob:
  - 0.7984031936127745
  - 0.8007889546351085
  - 0.7944785276073619
  - 0.795959595959596
  - 0.7957317073170732
  train_f1_samples:
  - 0.7984031936127743
  - 0.8007889546351084
  - 0.7944785276073619
  - 0.7959595959595959
  - 0.7957317073170732
  train_f1_samples_oob:
  - 0.7984031936127743
  - 0.8007889546351084
  - 0.7944785276073619
  - 0.7959595959595959
  - 0.7957317073170732
  train_f1_weighted:
  - 0.6851247999051402
  - 0.6875622473489952
  - 0.6760675151848121
  - 0.6837683768376838
  - 0.6780427132629535
  train_f1_weighted_oob:
  - 0.6851247999051402
  - 0.6875622473489952
  - 0.6760675151848121
  - 0.6837683768376838
  - 0.6780427132629535
  train_jaccard_macro:
  - 0.6894857058580198
  - 0.6927336254423494
  - 0.685475473919289
  - 0.6860722823836092
  - 0.6869658033744721
  train_jaccard_macro_oob:
  - 0.6894857058580198
  - 0.6927336254423494
  - 0.685475473919289
  - 0.6860722823836092
  - 0.6869658033744721
  train_jaccard_micro:
  - 0.6644518272425249
  - 0.6677631578947368
  - 0.6590330788804071
  - 0.6610738255033557
  - 0.660759493670886
  train_jaccard_micro_oob:
  - 0.6644518272425249
  - 0.6677631578947368
  - 0.6590330788804071
  - 0.6610738255033557
  - 0.660759493670886
  train_jaccard_samples:
  - 0.6699458226404335
  - 0.6727247111862498
  - 0.6652059596844874
  - 0.6670995670995672
  - 0.6668118466898956
  train_jaccard_samples_oob:
  - 0.6699458226404335
  - 0.6727247111862498
  - 0.6652059596844874
  - 0.6670995670995672
  - 0.6668118466898956
  train_jaccard_weighted:
  - 0.5402738749022983
  - 0.5424163554527618
  - 0.530373067198683
  - 0.5385566358427077
  - 0.5324659178085545
  train_jaccard_weighted_oob:
  - 0.5402738749022983
  - 0.5424163554527618
  - 0.530373067198683
  - 0.5385566358427077
  - 0.5324659178085545
  train_label_ranking_average_precision_score:
  - 0.8003493013972056
  - 0.7959566074950688
  - 0.7958077709611452
  - 0.8119696969696968
  - 0.8148882113821138
  train_label_ranking_average_precision_score_oob:
  - 0.6338323353293416
  - 0.6392833662064432
  - 0.6434389911383779
  - 0.6512457912457914
  - 0.6469850948509486
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8539637072828162
  - 0.8487080681106642
  - 0.849677800734136
  - 0.8617028430687917
  - 0.8643640599824385
  train_ndgc_oob:
  - 0.7285403244529546
  - 0.7307665737433086
  - 0.7339000088320934
  - 0.7410098210891275
  - 0.7373774296610316
  train_neg_coverage_error:
  - -1.8502994011976048
  - -1.8698224852071006
  - -1.9386503067484662
  - -1.8424242424242425
  - -1.8658536585365855
  train_neg_coverage_error_oob:
  - -2.377245508982036
  - -2.4497041420118344
  - -2.4539877300613497
  - -2.375757575757576
  - -2.402439024390244
  train_neg_hamming_loss_macro:
  - -0.20159680638722557
  - -0.19921104536489154
  - -0.20552147239263807
  - -0.20404040404040402
  - -0.20426829268292682
  train_neg_hamming_loss_macro_oob:
  - -0.20159680638722557
  - -0.19921104536489154
  - -0.20552147239263807
  - -0.20404040404040402
  - -0.20426829268292682
  train_neg_hamming_loss_micro:
  - -0.20159680638722555
  - -0.1992110453648915
  - -0.20552147239263804
  - -0.20404040404040405
  - -0.20426829268292682
  train_neg_hamming_loss_micro_oob:
  - -0.20159680638722555
  - -0.1992110453648915
  - -0.20552147239263804
  - -0.20404040404040405
  - -0.20426829268292682
  train_neg_hamming_loss_samples:
  - -0.20159680638722557
  - -0.1992110453648915
  - -0.20552147239263804
  - -0.20404040404040408
  - -0.20426829268292682
  train_neg_hamming_loss_samples_oob:
  - -0.20159680638722557
  - -0.1992110453648915
  - -0.20552147239263804
  - -0.20404040404040408
  - -0.20426829268292682
  train_neg_hamming_loss_weighted:
  - -0.31487520009485975
  - -0.31243775265100476
  - -0.3239324848151879
  - -0.31623162316231623
  - -0.3219572867370465
  train_neg_hamming_loss_weighted_oob:
  - -0.31487520009485975
  - -0.31243775265100476
  - -0.3239324848151879
  - -0.31623162316231623
  - -0.3219572867370465
  train_neg_label_ranking_loss:
  - -0.12162341982701264
  - -0.13187047994740303
  - -0.13479890933878663
  - -0.11907407407407407
  - -0.12247628726287262
  train_neg_label_ranking_loss_oob:
  - -0.23180306054557553
  - -0.250706771860618
  - -0.24459781867757333
  - -0.22988215488215488
  - -0.23595867208672086
  train_precision_macro:
  - 0.7984031936127743
  - 0.8007889546351086
  - 0.7944785276073619
  - 0.7959595959595961
  - 0.7957317073170732
  train_precision_macro_oob:
  - 0.7984031936127743
  - 0.8007889546351086
  - 0.7944785276073619
  - 0.7959595959595961
  - 0.7957317073170732
  train_precision_micro:
  - 0.7984031936127745
  - 0.8007889546351085
  - 0.7944785276073619
  - 0.795959595959596
  - 0.7957317073170732
  train_precision_micro_oob:
  - 0.7984031936127745
  - 0.8007889546351085
  - 0.7944785276073619
  - 0.795959595959596
  - 0.7957317073170732
  train_precision_samples:
  - 0.7984031936127743
  - 0.8007889546351084
  - 0.7944785276073619
  - 0.7959595959595959
  - 0.7957317073170732
  train_precision_samples_oob:
  - 0.7984031936127743
  - 0.8007889546351084
  - 0.7944785276073619
  - 0.7959595959595959
  - 0.7957317073170732
  train_precision_weighted:
  - 0.6851247999051402
  - 0.6875622473489952
  - 0.6760675151848121
  - 0.6837683768376838
  - 0.6780427132629535
  train_precision_weighted_oob:
  - 0.6851247999051402
  - 0.6875622473489952
  - 0.6760675151848121
  - 0.6837683768376838
  - 0.6780427132629535
  train_recall_macro:
  - 0.7984031936127743
  - 0.8007889546351086
  - 0.7944785276073619
  - 0.7959595959595961
  - 0.7957317073170732
  train_recall_macro_oob:
  - 0.7984031936127743
  - 0.8007889546351086
  - 0.7944785276073619
  - 0.7959595959595961
  - 0.7957317073170732
  train_recall_micro:
  - 0.7984031936127745
  - 0.8007889546351085
  - 0.7944785276073619
  - 0.795959595959596
  - 0.7957317073170732
  train_recall_micro_oob:
  - 0.7984031936127745
  - 0.8007889546351085
  - 0.7944785276073619
  - 0.795959595959596
  - 0.7957317073170732
  train_recall_samples:
  - 0.7984031936127743
  - 0.8007889546351084
  - 0.7944785276073619
  - 0.7959595959595959
  - 0.7957317073170732
  train_recall_samples_oob:
  - 0.7984031936127743
  - 0.8007889546351084
  - 0.7944785276073619
  - 0.7959595959595959
  - 0.7957317073170732
  train_recall_weighted:
  - 0.6851247999051402
  - 0.6875622473489952
  - 0.6760675151848121
  - 0.6837683768376838
  - 0.6780427132629535
  train_recall_weighted_oob:
  - 0.6851247999051402
  - 0.6875622473489952
  - 0.6760675151848121
  - 0.6837683768376838
  - 0.6780427132629535
  train_roc_auc_macro:
  - 0.8406478095362812
  - 0.8203596498729065
  - 0.8132523558565459
  - 0.8352944307164484
  - 0.8200067289491644
  train_roc_auc_macro_oob:
  - 0.6006165545304297
  - 0.5095328439645529
  - 0.5077762936570087
  - 0.5815811876860703
  - 0.5495738870764092
  train_roc_auc_micro:
  - 0.8932797029702971
  - 0.883638979661513
  - 0.878554460644013
  - 0.8902975322913003
  - 0.887656227165577
  train_roc_auc_micro_oob:
  - 0.7753465346534654
  - 0.7530239477149686
  - 0.7575315187255486
  - 0.7677602151078053
  - 0.7628524046434494
  train_roc_auc_samples:
  - 0.8783765801729874
  - 0.868129520052597
  - 0.8652010906612133
  - 0.8809259259259258
  - 0.8775237127371274
  train_roc_auc_samples_oob:
  - 0.7681969394544244
  - 0.749293228139382
  - 0.7554021813224268
  - 0.770117845117845
  - 0.7640413279132792
  train_roc_auc_weighted:
  - 0.8027580542461391
  - 0.8039315209038045
  - 0.784414581110275
  - 0.8050642284994128
  - 0.8086412736878227
  train_roc_auc_weighted_oob:
  - 0.5532958021084852
  - 0.5233573233810742
  - 0.5239637377488962
  - 0.5366838169666004
  - 0.5271076443593541
start: 2023-12-21 12:34:04.294590
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
