active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJyZmZmZ2T/gzMzMzMwiQACcmZmZmdk/AJyZmZmZ2T8gMzMzMzMlwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 12:11:33.460736
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__6
  params: {}
hash: 53c961c2d671e744e99131e6d45aa88edf5c39863d5110e6466094c5b8a47df7
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/53c961c_20231222T115556375182_embedding__6_scene.yml
results:
  fit_time:
  - 835.6734676361084
  - 840.0929126739502
  - 819.8527290821075
  - 688.9490094184875
  - 797.5906209945679
  score_time:
  - 16.87509512901306
  - 15.243783473968506
  - 13.25903844833374
  - 12.7183358669281
  - 11.449158668518066
  test_average_precision_macro:
  - 0.8502207354692605
  - 0.8515973002422309
  - 0.8208324060606856
  - 0.8272448121748722
  - 0.8436667330740112
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8556664593098645
  - 0.8513442555879798
  - 0.8305872404864332
  - 0.8429650525859286
  - 0.8496193540913062
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8831600831600831
  - 0.8736581920903955
  - 0.8680873180873181
  - 0.8685377685377685
  - 0.8747289972899729
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8407954738810519
  - 0.8416653634605192
  - 0.8074639700036348
  - 0.8154003790656238
  - 0.8336165995008588
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.9019404019404019
  - 0.901940401940402
  - 0.9027777777777777
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.9019404019404019
  - 0.9019404019404019
  - 0.9027777777777778
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.901940401940402
  - 0.901940401940402
  - 0.9027777777777778
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8981167874371758
  - 0.893961249713143
  - 0.8964077900248113
  - 0.8959537572254336
  - 0.8980948561903415
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8272872646335614
  - 0.8202174977759418
  - 0.8250221097902628
  - 0.8260702558252548
  - 0.8261859424014936
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8236966824644549
  - 0.8171318575553417
  - 0.8213947617544967
  - 0.8213947617544967
  - 0.8227848101265823
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8402138402138402
  - 0.8345439870863598
  - 0.8395208395208394
  - 0.8378873378873377
  - 0.8376887340301974
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8188421241006117
  - 0.8115857737844878
  - 0.8161533182728958
  - 0.8164036225889435
  - 0.8187148894709927
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8831600831600831
  - 0.8736581920903953
  - 0.8680873180873179
  - 0.8685377685377687
  - 0.8747289972899728
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6384657352922211
  - 0.6318688934682818
  - 0.6351636654033709
  - 0.6308876790735282
  - 0.6233803271637366
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6361240152103511
  - 0.6280405255152226
  - 0.6317758190513804
  - 0.6328932091889871
  - 0.62651797039902
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5118566751486944
  - 0.5072411415465853
  - 0.530450056625311
  - 0.5102892113111716
  - 0.4897393171637652
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6217577331953723
  - 0.6146175922557574
  - 0.6167143320764131
  - 0.6104271320794689
  - 0.6077075960413384
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9143446944890192
  - 0.9076084552121385
  - 0.9030003121900928
  - 0.9029503569607147
  - 0.9071687775363948
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3908523908523909
  - -1.4851694915254237
  - -1.4449064449064448
  - -1.4656964656964657
  - -1.3719512195121952
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09667359667359669
  - -0.10063559322033898
  - -0.09805959805959807
  - -0.09805959805959807
  - -0.09722222222222222
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09667359667359668
  - -0.10063559322033898
  - -0.09805959805959806
  - -0.09805959805959806
  - -0.09722222222222222
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09667359667359668
  - -0.10063559322033898
  - -0.09805959805959805
  - -0.09805959805959807
  - -0.09722222222222221
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1018832125628242
  - -0.10603875028685703
  - -0.10359220997518871
  - -0.10404624277456649
  - -0.10190514380965861
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.061590436590436594
  - -0.07457627118644068
  - -0.07193347193347194
  - -0.07577962577962578
  - -0.06356707317073171
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.9019404019404019
  - 0.901940401940402
  - 0.9027777777777777
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.9019404019404019
  - 0.9019404019404019
  - 0.9027777777777778
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.901940401940402
  - 0.901940401940402
  - 0.9027777777777778
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8981167874371758
  - 0.893961249713143
  - 0.8964077900248113
  - 0.8959537572254336
  - 0.8980948561903415
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.9019404019404019
  - 0.901940401940402
  - 0.9027777777777777
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.9019404019404019
  - 0.9019404019404019
  - 0.9027777777777778
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9033264033264033
  - 0.899364406779661
  - 0.901940401940402
  - 0.901940401940402
  - 0.9027777777777778
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8981167874371758
  - 0.893961249713143
  - 0.8964077900248113
  - 0.8959537572254336
  - 0.8980948561903415
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.94946188211786
  - 0.944824028852004
  - 0.9394429725003203
  - 0.9398812170164844
  - 0.9477009733476013
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9559376445971345
  - 0.9505679468273098
  - 0.9473535095891238
  - 0.9491905805011587
  - 0.9537443551686202
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9384095634095634
  - 0.9254237288135594
  - 0.9280665280665281
  - 0.9242203742203743
  - 0.9364329268292684
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9445453752151789
  - 0.9400280958251006
  - 0.933451488873753
  - 0.9342063018850033
  - 0.9430262017232632
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9943513483220047
  - 0.995126791497357
  - 0.9944707413055056
  - 0.9945008451414469
  - 0.99380195283835
  train_average_precision_macro_oob:
  - 0.8570602468784889
  - 0.8617938579207495
  - 0.8635487486558082
  - 0.8576688529571146
  - 0.8601476174542478
  train_average_precision_micro:
  - 0.9940319251125118
  - 0.9944954121267613
  - 0.9941090394467114
  - 0.9943562655723933
  - 0.993333295574709
  train_average_precision_micro_oob:
  - 0.8641479238000498
  - 0.8671128880485786
  - 0.8680122957788005
  - 0.862817174018902
  - 0.8646068634642268
  train_average_precision_samples:
  - 0.9874524056767048
  - 0.9876830318690784
  - 0.9881014191761857
  - 0.9891398407753548
  - 0.9888163620539601
  train_average_precision_samples_oob:
  - 0.8796512634129457
  - 0.8854349698535745
  - 0.8846659743856006
  - 0.8841164762893735
  - 0.8817841601392515
  train_average_precision_weighted:
  - 0.9942695236260729
  - 0.9951061893958426
  - 0.9943492181114507
  - 0.9943656656488111
  - 0.9937857597590676
  train_average_precision_weighted_oob:
  - 0.8478684506313229
  - 0.8530302682105542
  - 0.8550646736362949
  - 0.8486937966638325
  - 0.8512626291110994
  train_f1_macro:
  - 0.9550882658359293
  - 0.9553832902670111
  - 0.9560401523018346
  - 0.9562997577016268
  - 0.95674499564839
  train_f1_macro_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479406
  - 0.8971962616822431
  - 0.8974760661444735
  train_f1_micro:
  - 0.9550882658359294
  - 0.9553832902670112
  - 0.9560401523018346
  - 0.9562997577016269
  - 0.9567449956483899
  train_f1_micro_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479404
  - 0.897196261682243
  - 0.8974760661444735
  train_f1_samples:
  - 0.9550882658359294
  - 0.9553832902670114
  - 0.9560401523018346
  - 0.9562997577016269
  - 0.95674499564839
  train_f1_samples_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479406
  - 0.897196261682243
  - 0.8974760661444736
  train_f1_weighted:
  - 0.9530327428878154
  - 0.9535106133077434
  - 0.9542501973402749
  - 0.9546441973543871
  - 0.9548393776103348
  train_f1_weighted_oob:
  - 0.8936686381627463
  - 0.8916368034626322
  - 0.893287618680341
  - 0.8919933472660762
  - 0.8919908489932378
  train_jaccard_macro:
  - 0.9146018261445527
  - 0.915065294904822
  - 0.9162632897010944
  - 0.9166921958300943
  - 0.9175844687659626
  train_jaccard_macro_oob:
  - 0.8208409313238842
  - 0.8172105167756237
  - 0.8188329746006673
  - 0.8169795349883326
  - 0.8176905549896055
  train_jaccard_micro:
  - 0.9140372670807454
  - 0.9145778364116095
  - 0.9157824933687002
  - 0.9162590166652848
  - 0.9170768332360056
  train_jaccard_micro_oob:
  - 0.8169811320754717
  - 0.8133541585318235
  - 0.8155538098978791
  - 0.8135593220338984
  - 0.8140195768866435
  train_jaccard_samples:
  - 0.9243806556890668
  - 0.924572412944506
  - 0.925814666468872
  - 0.9264822232111951
  - 0.9274400099465372
  train_jaccard_samples_oob:
  - 0.8316273549918408
  - 0.8272794389073458
  - 0.8303664144785639
  - 0.8283884685753844
  - 0.829130921298023
  train_jaccard_weighted:
  - 0.9108778312296519
  - 0.9116783547096036
  - 0.9130092859046193
  - 0.9136805664829332
  - 0.9141184958753743
  train_jaccard_weighted_oob:
  - 0.8119049903849366
  - 0.8085754624533854
  - 0.8106612125494197
  - 0.8086804760780647
  - 0.8089476305149538
  train_label_ranking_average_precision_score:
  - 0.9874524056767046
  - 0.9876830318690781
  - 0.9881014191761853
  - 0.9891398407753547
  - 0.9888163620539597
  train_label_ranking_average_precision_score_oob:
  - 0.8796512634129453
  - 0.8854349698535747
  - 0.8846659743856004
  - 0.8841164762893732
  - 0.8817841601392513
  train_matthews_corrcoef_macro:
  - 0.8463538665034139
  - 0.8461830257020675
  - 0.849024347212911
  - 0.8494674231325693
  - 0.8525236891006003
  train_matthews_corrcoef_macro_oob:
  - 0.6192791393272085
  - 0.6056469340360281
  - 0.6170964353767304
  - 0.6103670962630098
  - 0.6143568556053276
  train_matthews_corrcoef_micro:
  - 0.8427559335683931
  - 0.8430302267348455
  - 0.8460785822877772
  - 0.8469236815838933
  - 0.8493156463112005
  train_matthews_corrcoef_micro_oob:
  - 0.621251673434532
  - 0.6096029027696559
  - 0.6169827118826767
  - 0.6112527802032208
  - 0.6151454806904889
  train_matthews_corrcoef_samples:
  - 0.7800795028777768
  - 0.7748358674526682
  - 0.7830642813295164
  - 0.7842288655183167
  - 0.793862515354943
  train_matthews_corrcoef_samples_oob:
  - 0.4723120721410725
  - 0.45095265210138097
  - 0.47002754462290014
  - 0.4625536436923695
  - 0.47015037180562563
  train_matthews_corrcoef_weighted:
  - 0.8410997355262778
  - 0.8415758430545655
  - 0.8446377054297918
  - 0.8455589529714759
  - 0.8477849240616857
  train_matthews_corrcoef_weighted_oob:
  - 0.6003258739678455
  - 0.5871911048036272
  - 0.6004429779764806
  - 0.5933768562169459
  - 0.596258464816776
  train_ndgc:
  - 0.990879214608509
  - 0.9909475913513913
  - 0.9913494322963382
  - 0.9921716122156701
  - 0.9918779202830459
  train_ndgc_oob:
  - 0.9111794754486219
  - 0.9153543722742415
  - 0.9148854342952724
  - 0.9146443885919261
  - 0.9130502115847128
  train_neg_coverage_error:
  - -1.1048805815160956
  - -1.097157622739018
  - -1.1022845275181723
  - -1.09865005192108
  - -1.1070496083550914
  train_neg_coverage_error_oob:
  - -1.4293873312564902
  - -1.3958656330749355
  - -1.4049844236760125
  - -1.40134994807892
  - -1.4349869451697128
  train_neg_hamming_loss_macro:
  - -0.044911734164070606
  - -0.044616709732988806
  - -0.04395984769816546
  - -0.04370024229837314
  - -0.043255004351610095
  train_neg_hamming_loss_macro_oob:
  - -0.10072689511941847
  - -0.1029285099052541
  - -0.10159224645205954
  - -0.10280373831775698
  - -0.10252393385552655
  train_neg_hamming_loss_micro:
  - -0.04491173416407061
  - -0.044616709732988806
  - -0.04395984769816545
  - -0.04370024229837314
  - -0.043255004351610095
  train_neg_hamming_loss_micro_oob:
  - -0.10072689511941849
  - -0.1029285099052541
  - -0.10159224645205954
  - -0.102803738317757
  - -0.10252393385552655
  train_neg_hamming_loss_samples:
  - -0.04491173416407061
  - -0.0446167097329888
  - -0.04395984769816545
  - -0.04370024229837313
  - -0.043255004351610095
  train_neg_hamming_loss_samples_oob:
  - -0.10072689511941849
  - -0.10292850990525408
  - -0.10159224645205953
  - -0.10280373831775699
  - -0.10252393385552654
  train_neg_hamming_loss_weighted:
  - -0.04696725711218465
  - -0.04648938669225656
  - -0.04574980265972511
  - -0.045355802645612744
  - -0.04516062238966522
  train_neg_hamming_loss_weighted_oob:
  - -0.10633136183725375
  - -0.10836319653736773
  - -0.10671238131965913
  - -0.10800665273392382
  - -0.10800915100676227
  train_neg_label_ranking_loss:
  - -0.005737279335410177
  - -0.005645994832041344
  - -0.005516614745586709
  - -0.004867601246105919
  - -0.005234986945169713
  train_neg_label_ranking_loss_oob:
  - -0.06928868120456905
  - -0.06395348837209303
  - -0.06462876427829699
  - -0.06384994807892004
  - -0.06852480417754571
  train_precision_macro:
  - 0.9550882658359293
  - 0.9553832902670111
  - 0.9560401523018346
  - 0.9562997577016268
  - 0.95674499564839
  train_precision_macro_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479406
  - 0.8971962616822431
  - 0.8974760661444735
  train_precision_micro:
  - 0.9550882658359294
  - 0.9553832902670112
  - 0.9560401523018346
  - 0.9562997577016269
  - 0.9567449956483899
  train_precision_micro_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479404
  - 0.897196261682243
  - 0.8974760661444735
  train_precision_samples:
  - 0.9550882658359294
  - 0.9553832902670114
  - 0.9560401523018346
  - 0.9562997577016269
  - 0.95674499564839
  train_precision_samples_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479406
  - 0.897196261682243
  - 0.8974760661444736
  train_precision_weighted:
  - 0.9530327428878154
  - 0.9535106133077434
  - 0.9542501973402749
  - 0.9546441973543871
  - 0.9548393776103348
  train_precision_weighted_oob:
  - 0.8936686381627463
  - 0.8916368034626322
  - 0.893287618680341
  - 0.8919933472660762
  - 0.8919908489932378
  train_recall_macro:
  - 0.9550882658359293
  - 0.9553832902670111
  - 0.9560401523018346
  - 0.9562997577016268
  - 0.95674499564839
  train_recall_macro_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479406
  - 0.8971962616822431
  - 0.8974760661444735
  train_recall_micro:
  - 0.9550882658359294
  - 0.9553832902670112
  - 0.9560401523018346
  - 0.9562997577016269
  - 0.9567449956483899
  train_recall_micro_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479404
  - 0.897196261682243
  - 0.8974760661444735
  train_recall_samples:
  - 0.9550882658359294
  - 0.9553832902670114
  - 0.9560401523018346
  - 0.9562997577016269
  - 0.95674499564839
  train_recall_samples_oob:
  - 0.8992731048805815
  - 0.897071490094746
  - 0.8984077535479406
  - 0.897196261682243
  - 0.8974760661444736
  train_recall_weighted:
  - 0.9530327428878154
  - 0.9535106133077434
  - 0.9542501973402749
  - 0.9546441973543871
  - 0.9548393776103348
  train_recall_weighted_oob:
  - 0.8936686381627463
  - 0.8916368034626322
  - 0.893287618680341
  - 0.8919933472660762
  - 0.8919908489932378
  train_roc_auc_macro:
  - 0.9986012778395793
  - 0.9988753427061599
  - 0.9986372457362229
  - 0.9985757138839012
  - 0.9984909278174486
  train_roc_auc_macro_oob:
  - 0.9499852234567293
  - 0.9526737100749356
  - 0.953037827596611
  - 0.9515261364647728
  - 0.9503922204037526
  train_roc_auc_micro:
  - 0.9985945980906518
  - 0.9987499275320308
  - 0.99866249151937
  - 0.9986566845214354
  - 0.9984156283474991
  train_roc_auc_micro_oob:
  - 0.9559154553723209
  - 0.9580610632338268
  - 0.9579488679174509
  - 0.9566006200035295
  - 0.9563077093940804
  train_roc_auc_samples:
  - 0.9942627206645899
  - 0.9943540051679587
  - 0.9944833852544133
  - 0.995132398753894
  - 0.9947650130548302
  train_roc_auc_samples_oob:
  - 0.930711318795431
  - 0.936046511627907
  - 0.9353712357217029
  - 0.93615005192108
  - 0.9314751958224543
  train_roc_auc_weighted:
  - 0.9985582538641736
  - 0.9988596497917027
  - 0.9985745565762774
  - 0.9985114411681006
  - 0.9984706200736297
  train_roc_auc_weighted_oob:
  - 0.9458471385801882
  - 0.9486166835885143
  - 0.9492619969065283
  - 0.9475719820095273
  - 0.9463437890273366
start: 2023-12-22 11:55:56.375182
wrapper: null
