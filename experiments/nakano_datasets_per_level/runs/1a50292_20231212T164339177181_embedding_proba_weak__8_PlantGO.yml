active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ+T8AzczMzMwEQAA0MzMzM+M/ADMzMzMzC8AAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:45:20.961535
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 1a50292dc548872f5969315c703a1ae7d207ddbdf45fe4ceef46137b1d42c737
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1a50292_20231212T164339177181_embedding_proba_weak__8_PlantGO.yml
results:
  fit_time:
  - 49.0013325214386
  - 48.562188148498535
  - 48.6219003200531
  - 47.51268172264099
  - 53.888205766677856
  score_time:
  - 10.790391206741333
  - 10.882707834243774
  - 11.715693712234497
  - 12.137095928192139
  - 11.28614354133606
  test_average_precision_macro:
  - 0.5318578953813689
  - 0.6031774014450938
  - 0.5689004158659273
  - 0.6137112177540145
  - 0.5911400907086004
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6155817292086708
  - 0.6197212803695361
  - 0.6376571106529138
  - 0.6948093015445644
  - 0.6362311222595791
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8345422189494354
  - 0.8715930586396907
  - 0.829002849002849
  - 0.8621161362367393
  - 0.8517869045787826
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7382724544752524
  - 0.7876581169180648
  - 0.7591682722221553
  - 0.7948701227333825
  - 0.7711663647184072
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9325601374570448
  - 0.9339378238341968
  - 0.9264957264957266
  - 0.9401172529313233
  - 0.9352791878172589
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9325601374570447
  - 0.9339378238341969
  - 0.9264957264957265
  - 0.9401172529313233
  - 0.9352791878172588
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9325601374570448
  - 0.9339378238341969
  - 0.9264957264957263
  - 0.9401172529313233
  - 0.9352791878172588
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9289048823186149
  - 0.9400906735751297
  - 0.9281567489114659
  - 0.9394614582345694
  - 0.9363437342122358
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8744204120574058
  - 0.8776809178449302
  - 0.8648756448821642
  - 0.8884865557643086
  - 0.8800660290805826
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8736418511066398
  - 0.8760631834750912
  - 0.8630573248407644
  - 0.887001185302252
  - 0.8784266984505363
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8859108750558113
  - 0.8877908437189144
  - 0.8750859397013242
  - 0.8967640399801202
  - 0.8904836280470798
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8678431511470964
  - 0.8883571298606021
  - 0.8671982745744613
  - 0.8870607161767958
  - 0.8812835007606401
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8345422189494355
  - 0.8715930586396907
  - 0.8290028490028489
  - 0.8621161362367391
  - 0.8517869045787829
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.49603259566878527
  - 0.5713288202159544
  - 0.5497528211392309
  - 0.5732851762618641
  - 0.5332521521500114
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6404500235375591
  - 0.6638559503123214
  - 0.6360291087779483
  - 0.6807173063570168
  - 0.662945292934935
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6829522236565544
  - 0.7136043985852447
  - 0.6874892300134604
  - 0.7100704766751561
  - 0.7157818643011814
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6714535828115858
  - 0.7301809603922484
  - 0.6960514036213694
  - 0.721068677049773
  - 0.705027718770101
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8797378064644333
  - 0.9057324650398894
  - 0.874483591742555
  - 0.8978996587505461
  - 0.8895262022866537
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7628865979381443
  - -1.5595854922279793
  - -1.5897435897435896
  - -1.5276381909547738
  - -1.5736040609137056
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06743986254295534
  - -0.06606217616580311
  - -0.0735042735042735
  - -0.05988274706867672
  - -0.06472081218274113
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06743986254295532
  - -0.06606217616580311
  - -0.0735042735042735
  - -0.05988274706867672
  - -0.06472081218274112
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06743986254295532
  - -0.06606217616580311
  - -0.07350427350427349
  - -0.0598827470686767
  - -0.06472081218274112
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07109511768138493
  - -0.059909326424870464
  - -0.07184325108853411
  - -0.06053854176543093
  - -0.06365626578776433
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05419400187441425
  - -0.04042148601734094
  - -0.043273763273763276
  - -0.04027714329221866
  - -0.044393170281495156
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9325601374570448
  - 0.9339378238341968
  - 0.9264957264957266
  - 0.9401172529313233
  - 0.9352791878172589
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9325601374570447
  - 0.9339378238341969
  - 0.9264957264957265
  - 0.9401172529313233
  - 0.9352791878172588
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9325601374570448
  - 0.9339378238341969
  - 0.9264957264957263
  - 0.9401172529313233
  - 0.9352791878172588
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9289048823186149
  - 0.9400906735751297
  - 0.9281567489114659
  - 0.9394614582345694
  - 0.9363437342122358
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9325601374570448
  - 0.9339378238341968
  - 0.9264957264957266
  - 0.9401172529313233
  - 0.9352791878172589
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9325601374570447
  - 0.9339378238341969
  - 0.9264957264957265
  - 0.9401172529313233
  - 0.9352791878172588
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9325601374570448
  - 0.9339378238341969
  - 0.9264957264957263
  - 0.9401172529313233
  - 0.9352791878172588
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9289048823186149
  - 0.9400906735751297
  - 0.9281567489114659
  - 0.9394614582345694
  - 0.9363437342122358
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9386858954312479
  - 0.9626084980567134
  - 0.9568786227585551
  - 0.963468120683852
  - 0.9447633940875079
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9514191068944609
  - 0.9628772259524156
  - 0.9557051532132217
  - 0.9664175221975583
  - 0.9556553954253185
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9460402999062792
  - 0.9595785139826591
  - 0.9567262367262366
  - 0.9597228567077812
  - 0.9556068297185049
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9514876867155754
  - 0.9706593474149832
  - 0.9607340839184071
  - 0.9715223042475188
  - 0.9600731231665349
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.5859149954874395
  - 0.5730120445936642
  - 0.5632530833297721
  - 0.5662560447187015
  - 0.5994271978966362
  train_average_precision_macro_oob:
  - 0.5750062672007333
  - 0.555368854065107
  - 0.5527674539998966
  - 0.5440637686295545
  - 0.5875088732163358
  train_average_precision_micro:
  - 0.6618580753004303
  - 0.6407422256247643
  - 0.673000969848725
  - 0.6703681229494027
  - 0.6688016616234004
  train_average_precision_micro_oob:
  - 0.6593946074307099
  - 0.6276765532865074
  - 0.6644825711652572
  - 0.6594832270808648
  - 0.6612018583748005
  train_average_precision_samples:
  - 0.9086132369614512
  - 0.8961995753715499
  - 0.8764367816091954
  - 0.8984773926686633
  - 0.8950633091478163
  train_average_precision_samples_oob:
  - 0.8904574627470035
  - 0.8752608431907795
  - 0.8691489793022361
  - 0.8801164496607372
  - 0.8845060260553218
  train_average_precision_weighted:
  - 0.7964963509099314
  - 0.7866926053235105
  - 0.7872686825366764
  - 0.7873961196519466
  - 0.7914204660840456
  train_average_precision_weighted_oob:
  - 0.7878227079184138
  - 0.773349644565446
  - 0.7778021932383073
  - 0.770743160964143
  - 0.7799493939429208
  train_f1_macro:
  - 0.9448341836734695
  - 0.9408704883227177
  - 0.9415708812260536
  - 0.9453359007274283
  - 0.9449423815620999
  train_f1_macro_oob:
  - 0.9440901360544217
  - 0.937791932059448
  - 0.9410387398893145
  - 0.9433033804022252
  - 0.9429150661545028
  train_f1_micro:
  - 0.9448341836734694
  - 0.9408704883227176
  - 0.9415708812260536
  - 0.9453359007274283
  - 0.9449423815620999
  train_f1_micro_oob:
  - 0.9440901360544217
  - 0.937791932059448
  - 0.9410387398893146
  - 0.9433033804022251
  - 0.9429150661545028
  train_f1_samples:
  - 0.9448341836734694
  - 0.9408704883227176
  - 0.9415708812260536
  - 0.9453359007274285
  - 0.9449423815620999
  train_f1_samples_oob:
  - 0.9440901360544217
  - 0.9377919320594481
  - 0.9410387398893146
  - 0.9433033804022252
  - 0.9429150661545027
  train_f1_weighted:
  - 0.9569155954196624
  - 0.9527338903135081
  - 0.9548895645758245
  - 0.954711229075205
  - 0.954900449660479
  train_f1_weighted_oob:
  - 0.9517666497203862
  - 0.9460380962407599
  - 0.9511338966077789
  - 0.9494211181107879
  - 0.9496180009830634
  train_jaccard_macro:
  - 0.8966357901961692
  - 0.8897807844964082
  - 0.8912251191904145
  - 0.8974247816694896
  - 0.8972421745890647
  train_jaccard_macro_oob:
  - 0.8952654368741607
  - 0.883986317570245
  - 0.8900819784267008
  - 0.8936860323122704
  - 0.8933069150436778
  train_jaccard_micro:
  - 0.895436687821094
  - 0.8883431893354716
  - 0.8895927601809954
  - 0.8963383710315448
  - 0.8956310679611651
  train_jaccard_micro_oob:
  - 0.8941010670424804
  - 0.8828702778333
  - 0.888643216080402
  - 0.8926908281028548
  - 0.8919955586958717
  train_jaccard_samples:
  - 0.9059954751131222
  - 0.89951901975881
  - 0.9011452149383185
  - 0.9071540179219707
  - 0.9062289822853203
  train_jaccard_samples_oob:
  - 0.9042171813780456
  - 0.8938121451422314
  - 0.9000126310471138
  - 0.9033593530233265
  - 0.9025678546805308
  train_jaccard_weighted:
  - 0.9182623043242273
  - 0.9107035358689626
  - 0.9149240527829025
  - 0.9141870863066873
  - 0.9148558947163453
  train_jaccard_weighted_oob:
  - 0.9087133082532308
  - 0.8983875312667693
  - 0.907886455304512
  - 0.9044294078657752
  - 0.9050153201872942
  train_label_ranking_average_precision_score:
  - 0.9086132369614515
  - 0.8961995753715497
  - 0.8764367816091962
  - 0.8984773926686637
  - 0.8950633091478168
  train_label_ranking_average_precision_score_oob:
  - 0.8904574627470039
  - 0.8752608431907793
  - 0.8691489793022366
  - 0.8801164496607373
  - 0.8845060260553229
  train_matthews_corrcoef_macro:
  - 0.6385502729664679
  - 0.6078476444651205
  - 0.6104845576066517
  - 0.6012939992625043
  - 0.6468498247656861
  train_matthews_corrcoef_macro_oob:
  - 0.6101988955853715
  - 0.5492168415248012
  - 0.580624108064229
  - 0.5587288587351775
  - 0.6119863119577872
  train_matthews_corrcoef_micro:
  - 0.7305314002290144
  - 0.7087206732299085
  - 0.7162179819328035
  - 0.7234397594996088
  - 0.7297451791157076
  train_matthews_corrcoef_micro_oob:
  - 0.7109461460704826
  - 0.6835554824585894
  - 0.7021766477543614
  - 0.7013178213931333
  - 0.7077059473867261
  train_matthews_corrcoef_samples:
  - 0.7905942209948595
  - 0.7655232640300162
  - 0.7848006363162026
  - 0.7816262290097665
  - 0.7928274812872891
  train_matthews_corrcoef_samples_oob:
  - 0.7547003249931976
  - 0.7265969764205403
  - 0.7597070258377456
  - 0.746461167269033
  - 0.7594033467115748
  train_matthews_corrcoef_weighted:
  - 0.7963172378980946
  - 0.7760973524581356
  - 0.7853911408946841
  - 0.7768590224780385
  - 0.7930008235595853
  train_matthews_corrcoef_weighted_oob:
  - 0.7687414776301941
  - 0.7408837049214458
  - 0.7636608587473293
  - 0.7476138159016463
  - 0.7661154474149945
  train_ndgc:
  - 0.9334013849819925
  - 0.9230968810346677
  - 0.9084961689630747
  - 0.9249673592756895
  - 0.9224298461021898
  train_ndgc_oob:
  - 0.9221561857411523
  - 0.9075204162604243
  - 0.9036312985560411
  - 0.9137489525026272
  - 0.9157473362635019
  train_neg_coverage_error:
  - -1.3354591836734695
  - -1.3834394904458598
  - -1.4406130268199233
  - -1.3709884467265725
  - -1.3764404609475032
  train_neg_coverage_error_oob:
  - -1.4298469387755102
  - -1.5095541401273886
  - -1.5210727969348659
  - -1.4839537869062902
  - -1.444302176696543
  train_neg_hamming_loss_macro:
  - -0.055165816326530615
  - -0.059129511677282386
  - -0.05842911877394636
  - -0.054664099272571674
  - -0.055057618437900115
  train_neg_hamming_loss_macro_oob:
  - -0.05590986394557823
  - -0.062208067940552024
  - -0.05896126011068539
  - -0.056696619597774923
  - -0.05708493384549723
  train_neg_hamming_loss_micro:
  - -0.055165816326530615
  - -0.05912951167728238
  - -0.05842911877394636
  - -0.054664099272571674
  - -0.05505761843790013
  train_neg_hamming_loss_micro_oob:
  - -0.05590986394557823
  - -0.06220806794055202
  - -0.0589612601106854
  - -0.056696619597774923
  - -0.057084933845497225
  train_neg_hamming_loss_samples:
  - -0.055165816326530615
  - -0.059129511677282365
  - -0.05842911877394636
  - -0.05466409927257167
  - -0.05505761843790013
  train_neg_hamming_loss_samples_oob:
  - -0.05590986394557823
  - -0.06220806794055201
  - -0.058961260110685386
  - -0.05669661959777491
  - -0.05708493384549722
  train_neg_hamming_loss_weighted:
  - -0.04308440458033747
  - -0.04726610968649184
  - -0.045110435424175345
  - -0.04528877092479485
  - -0.04509955033952096
  train_neg_hamming_loss_weighted_oob:
  - -0.048233350279613625
  - -0.053961903759240176
  - -0.048866103392221125
  - -0.05057888188921222
  - -0.0503819990169366
  train_neg_label_ranking_loss:
  - -0.022574383288669002
  - -0.026973342769521114
  - -0.03200652760039733
  - -0.025681504821427798
  - -0.02606237362959514
  train_neg_label_ranking_loss_oob:
  - -0.030176338212052498
  - -0.03712560852688242
  - -0.03835674755214985
  - -0.0337597195748672
  - -0.03084752777454442
  train_precision_macro:
  - 0.9448341836734695
  - 0.9408704883227177
  - 0.9415708812260536
  - 0.9453359007274283
  - 0.9449423815620999
  train_precision_macro_oob:
  - 0.9440901360544217
  - 0.937791932059448
  - 0.9410387398893145
  - 0.9433033804022252
  - 0.9429150661545028
  train_precision_micro:
  - 0.9448341836734694
  - 0.9408704883227176
  - 0.9415708812260536
  - 0.9453359007274283
  - 0.9449423815620999
  train_precision_micro_oob:
  - 0.9440901360544217
  - 0.937791932059448
  - 0.9410387398893146
  - 0.9433033804022251
  - 0.9429150661545028
  train_precision_samples:
  - 0.9448341836734694
  - 0.9408704883227176
  - 0.9415708812260536
  - 0.9453359007274285
  - 0.9449423815620999
  train_precision_samples_oob:
  - 0.9440901360544217
  - 0.9377919320594481
  - 0.9410387398893146
  - 0.9433033804022252
  - 0.9429150661545027
  train_precision_weighted:
  - 0.9569155954196624
  - 0.9527338903135081
  - 0.9548895645758245
  - 0.954711229075205
  - 0.954900449660479
  train_precision_weighted_oob:
  - 0.9517666497203862
  - 0.9460380962407599
  - 0.9511338966077789
  - 0.9494211181107879
  - 0.9496180009830634
  train_recall_macro:
  - 0.9448341836734695
  - 0.9408704883227177
  - 0.9415708812260536
  - 0.9453359007274283
  - 0.9449423815620999
  train_recall_macro_oob:
  - 0.9440901360544217
  - 0.937791932059448
  - 0.9410387398893145
  - 0.9433033804022252
  - 0.9429150661545028
  train_recall_micro:
  - 0.9448341836734694
  - 0.9408704883227176
  - 0.9415708812260536
  - 0.9453359007274283
  - 0.9449423815620999
  train_recall_micro_oob:
  - 0.9440901360544217
  - 0.937791932059448
  - 0.9410387398893146
  - 0.9433033804022251
  - 0.9429150661545028
  train_recall_samples:
  - 0.9448341836734694
  - 0.9408704883227176
  - 0.9415708812260536
  - 0.9453359007274285
  - 0.9449423815620999
  train_recall_samples_oob:
  - 0.9440901360544217
  - 0.9377919320594481
  - 0.9410387398893146
  - 0.9433033804022252
  - 0.9429150661545027
  train_recall_weighted:
  - 0.9569155954196624
  - 0.9527338903135081
  - 0.9548895645758245
  - 0.954711229075205
  - 0.954900449660479
  train_recall_weighted_oob:
  - 0.9517666497203862
  - 0.9460380962407599
  - 0.9511338966077789
  - 0.9494211181107879
  - 0.9496180009830634
  train_roc_auc_macro:
  - 0.9703916782302046
  - 0.9716512387863004
  - 0.9673817954510485
  - 0.9694554951162883
  - 0.9711532028330749
  train_roc_auc_macro_oob:
  - 0.9627870922620486
  - 0.9603781508268198
  - 0.959703457850623
  - 0.9579559141012227
  - 0.9654660705887453
  train_roc_auc_micro:
  - 0.9712774893546593
  - 0.9685808979097633
  - 0.9707594638080415
  - 0.9713540914806237
  - 0.9712467933898261
  train_roc_auc_micro_oob:
  - 0.9670703897832429
  - 0.9619265393631002
  - 0.9654446165622242
  - 0.9650942192262874
  - 0.9672655534486898
  train_roc_auc_samples:
  - 0.9775415721844293
  - 0.9730266572304789
  - 0.9679934723996027
  - 0.9743184951785722
  - 0.9739376263704048
  train_roc_auc_samples_oob:
  - 0.9704614168899883
  - 0.9628743914731176
  - 0.9619073880568133
  - 0.9667045940794337
  - 0.9696500860073202
  train_roc_auc_weighted:
  - 0.9796133604966132
  - 0.9797149162249161
  - 0.9778050440461732
  - 0.9778329024542011
  - 0.9779826356992909
  train_roc_auc_weighted_oob:
  - 0.974335323876743
  - 0.9713994329125746
  - 0.9719751688849244
  - 0.9698396514136818
  - 0.9726440058751008
start: 2023-12-12 16:43:39.177181
wrapper: null
