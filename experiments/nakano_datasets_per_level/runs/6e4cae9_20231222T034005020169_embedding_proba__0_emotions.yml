active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9gZmZmZmb2v0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzA8DgzMzMzMwEQIAzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:40:14.226109
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__0
  params: {}
hash: 6e4cae91a7099015c1e92d3a15f982160feb43058ad686534511d37a00d379c2
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6e4cae9_20231222T034005020169_embedding_proba__0_emotions.yml
results:
  fit_time:
  - 0.9990124702453613
  - 1.001356840133667
  - 1.0603876113891602
  - 1.05698561668396
  - 0.9858956336975098
  score_time:
  - 1.1981711387634277
  - 1.1663765907287598
  - 1.1380581855773926
  - 1.1531383991241455
  - 1.1731457710266113
  test_average_precision_macro:
  - 0.7059080720138776
  - 0.7474835049910876
  - 0.7164500790919922
  - 0.7369338249748313
  - 0.7443232019566274
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7009907010745805
  - 0.7304197261775699
  - 0.7321461939146378
  - 0.7475239745261983
  - 0.7493759576927684
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7893709825528007
  - 0.8259578544061301
  - 0.8076271186440678
  - 0.8131886087768441
  - 0.8252801120448179
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7053491355224198
  - 0.7489317478725921
  - 0.7238240934397734
  - 0.743589213087587
  - 0.7453846504053977
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6969696969696969
  - 0.6810344827586207
  - 0.6892655367231638
  - 0.6960784313725491
  - 0.6904761904761906
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.696969696969697
  - 0.6810344827586207
  - 0.6892655367231638
  - 0.696078431372549
  - 0.6904761904761905
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6969696969696969
  - 0.6810344827586208
  - 0.6892655367231638
  - 0.6960784313725491
  - 0.6904761904761905
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6837440634232078
  - 0.667388278954693
  - 0.6780044481938798
  - 0.6821171907677098
  - 0.677719736543266
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5383829958481038
  - 0.5200467241130586
  - 0.5286736461227707
  - 0.5376296659956391
  - 0.5306184808230269
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5348837209302325
  - 0.5163398692810458
  - 0.5258620689655172
  - 0.5338345864661654
  - 0.5272727272727272
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5452577725304998
  - 0.5287356321839082
  - 0.5365213882163036
  - 0.545218087234894
  - 0.5398159263705482
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5237433409394116
  - 0.5051954759122075
  - 0.5162692680960197
  - 0.522211249190818
  - 0.5166855593065003
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7893709825528005
  - 0.8259578544061303
  - 0.8076271186440676
  - 0.8131886087768441
  - 0.8252801120448178
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.026498311150470716
  - 0.026919095102908273
  - 0.01735905642016231
  - 0.08318751877874098
  - 0.024259271239149244
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.05614105232608515
  - 0.0552440788608644
  - 0.05582884419105413
  - 0.11210581597831881
  - 0.055752108825154904
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.005226905223418809
  - 0.005452202862359275
  - 0.00847457627118644
  - 0.01747621115574482
  - 0.003758097441176117
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.021582334873686555
  - 0.021004136986125736
  - 0.024506903181405616
  - 0.07646852752243243
  - 0.02229230330083985
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8546141704539529
  - 0.8868465640941107
  - 0.868502319886795
  - 0.876928552214609
  - 0.8818875199805025
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.71900826446281
  - -2.8448275862068964
  - -2.7288135593220337
  - -2.7478991596638656
  - -2.638655462184874
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.30303030303030304
  - -0.3189655172413793
  - -0.3107344632768361
  - -0.30392156862745096
  - -0.3095238095238095
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.30303030303030304
  - -0.31896551724137934
  - -0.3107344632768362
  - -0.30392156862745096
  - -0.30952380952380953
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.303030303030303
  - -0.31896551724137934
  - -0.3107344632768361
  - -0.303921568627451
  - -0.30952380952380953
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3162559365767922
  - -0.332611721045307
  - -0.3219955518061201
  - -0.31788280923229023
  - -0.3222802634567341
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16359044995408628
  - -0.1530890804597701
  - -0.15647363465160072
  - -0.14820261437908494
  - -0.1350840336134454
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6969696969696969
  - 0.6810344827586207
  - 0.6892655367231638
  - 0.6960784313725491
  - 0.6904761904761906
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.696969696969697
  - 0.6810344827586207
  - 0.6892655367231638
  - 0.696078431372549
  - 0.6904761904761905
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6969696969696969
  - 0.6810344827586208
  - 0.6892655367231638
  - 0.6960784313725491
  - 0.6904761904761905
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6837440634232078
  - 0.667388278954693
  - 0.6780044481938798
  - 0.6821171907677098
  - 0.677719736543266
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6969696969696969
  - 0.6810344827586207
  - 0.6892655367231638
  - 0.6960784313725491
  - 0.6904761904761906
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.696969696969697
  - 0.6810344827586207
  - 0.6892655367231638
  - 0.696078431372549
  - 0.6904761904761905
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6969696969696969
  - 0.6810344827586208
  - 0.6892655367231638
  - 0.6960784313725491
  - 0.6904761904761905
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6837440634232078
  - 0.667388278954693
  - 0.6780044481938798
  - 0.6821171907677098
  - 0.677719736543266
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8401240258587843
  - 0.8449578971456878
  - 0.8506619133360619
  - 0.8458596960688037
  - 0.8581033909298688
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.861135253796873
  - 0.8602565439566169
  - 0.8659072537560278
  - 0.8661074041100291
  - 0.8792389950926537
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8364095500459138
  - 0.8469109195402298
  - 0.8435263653483992
  - 0.851797385620915
  - 0.8649159663865545
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8370760110613755
  - 0.8417212615024429
  - 0.8510938023913802
  - 0.8492593353514467
  - 0.8587931226387633
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.885898260425885
  - 0.8860962682553774
  - 0.8872771432839
  - 0.8719575768723096
  - 0.8820357596383763
  train_average_precision_macro_oob:
  - 0.7021789712132726
  - 0.7121262826943542
  - 0.7170152612535093
  - 0.7110724561935435
  - 0.7253586940708187
  train_average_precision_micro:
  - 0.886413885501426
  - 0.8838254890723382
  - 0.88463733278059
  - 0.8700370516909811
  - 0.8806301421003495
  train_average_precision_micro_oob:
  - 0.7216220721228559
  - 0.7201960426091021
  - 0.7293237781111708
  - 0.7158302379279964
  - 0.729129411104525
  train_average_precision_samples:
  - 0.8972045668549905
  - 0.8971989284882366
  - 0.8967894736842106
  - 0.8908520862634786
  - 0.8929735114861698
  train_average_precision_samples_oob:
  - 0.7984227871939736
  - 0.8018227346843699
  - 0.7879532163742688
  - 0.8044303797468354
  - 0.8073077824660103
  train_average_precision_weighted:
  - 0.8879667572748102
  - 0.887388181315399
  - 0.8884620655578734
  - 0.8736787365263822
  - 0.8836486745589754
  train_average_precision_weighted_oob:
  - 0.7043703062334271
  - 0.7135903527946125
  - 0.7182450686404089
  - 0.7114136751734059
  - 0.7272593497428803
  train_f1_macro:
  - 0.7016242937853107
  - 0.7089447938504542
  - 0.7073684210526316
  - 0.7109704641350211
  - 0.7071026722925459
  train_f1_macro_oob:
  - 0.6885593220338982
  - 0.6932215234102026
  - 0.6898245614035088
  - 0.689873417721519
  - 0.689873417721519
  train_f1_micro:
  - 0.7016242937853108
  - 0.7089447938504543
  - 0.7073684210526315
  - 0.7109704641350211
  - 0.7071026722925458
  train_f1_micro_oob:
  - 0.6885593220338984
  - 0.6932215234102026
  - 0.6898245614035088
  - 0.689873417721519
  - 0.689873417721519
  train_f1_samples:
  - 0.7016242937853107
  - 0.7089447938504542
  - 0.7073684210526315
  - 0.7109704641350211
  - 0.7071026722925456
  train_f1_samples_oob:
  - 0.6885593220338984
  - 0.6932215234102026
  - 0.6898245614035087
  - 0.689873417721519
  - 0.6898734177215189
  train_f1_weighted:
  - 0.6902957980624079
  - 0.6999348565066505
  - 0.6972859431555213
  - 0.698533434180545
  - 0.6958405958605975
  train_f1_weighted_oob:
  - 0.6754676781380773
  - 0.6804699806938375
  - 0.6765727170236753
  - 0.6770748600269243
  - 0.6771080378318141
  train_jaccard_macro:
  - 0.5433083052657508
  - 0.5512011633277311
  - 0.5494918839279878
  - 0.5550828021868665
  - 0.5496553179307603
  train_jaccard_macro_oob:
  - 0.5285614907378423
  - 0.5338467328023864
  - 0.5300134148925046
  - 0.5299554953311009
  - 0.5298715960219808
  train_jaccard_micro:
  - 0.540386184389448
  - 0.5491204330175914
  - 0.5472312703583062
  - 0.5515548281505729
  - 0.546913244492793
  train_jaccard_micro_oob:
  - 0.5250403877221325
  - 0.5304812834224599
  - 0.5265131226566685
  - 0.5265700483091788
  - 0.5265700483091788
  train_jaccard_samples:
  - 0.5528147699757869
  - 0.561695118298892
  - 0.5610526315789474
  - 0.566857544705646
  - 0.5606791239702631
  train_jaccard_samples_oob:
  - 0.5364709443099274
  - 0.5414295697314565
  - 0.5380952380952381
  - 0.538527225236086
  - 0.5376230661040787
  train_jaccard_weighted:
  - 0.5304100598879927
  - 0.5406515048569864
  - 0.537874818523099
  - 0.5409616533687899
  - 0.536901941766916
  train_jaccard_weighted_oob:
  - 0.5142109190765085
  - 0.5197548675901575
  - 0.5154865748498729
  - 0.515946747164559
  - 0.515870519070082
  train_label_ranking_average_precision_score:
  - 0.8972045668549898
  - 0.8971989284882363
  - 0.8967894736842096
  - 0.8908520862634782
  - 0.8929735114861692
  train_label_ranking_average_precision_score_oob:
  - 0.7984227871939723
  - 0.8018227346843688
  - 0.7879532163742675
  - 0.8044303797468348
  - 0.807307782466009
  train_matthews_corrcoef_macro:
  - 0.13955214787107992
  - 0.13687728218317863
  - 0.1703245027824034
  - 0.20630031391345427
  - 0.18131460303232183
  train_matthews_corrcoef_macro_oob:
  - 0.03857449875663083
  - 0.041895737014990046
  - 0.03216979528447278
  - 0.039983774951684
  - 0.0438741364245099
  train_matthews_corrcoef_micro:
  - 0.18168561214377954
  - 0.20332005156431643
  - 0.2047811801493095
  - 0.22716740021933868
  - 0.2048554390936891
  train_matthews_corrcoef_micro_oob:
  - 0.062275911219176444
  - 0.07400782875138953
  - 0.044256088154650194
  - 0.056663497658045535
  - 0.055790507041334224
  train_matthews_corrcoef_samples:
  - 0.05506307225679357
  - 0.07005651746214317
  - 0.06866161758685971
  - 0.08626779965871342
  - 0.07249180360779632
  train_matthews_corrcoef_samples_oob:
  - 0.006301051522316843
  - 0.00850462232949328
  - 0.004270215632808732
  - 0.00991005610991778
  - 0.006112587755487401
  train_matthews_corrcoef_weighted:
  - 0.1434730806633161
  - 0.14736028802678797
  - 0.17755055964073788
  - 0.20346393302936328
  - 0.18484972516022313
  train_matthews_corrcoef_weighted_oob:
  - 0.03247851266417506
  - 0.04137440248297682
  - 0.027819035488236676
  - 0.03599457175595758
  - 0.045958388483656396
  train_ndgc:
  - 0.9324596246155937
  - 0.9331609437524184
  - 0.9317128630529082
  - 0.9280738305709594
  - 0.9289031323476227
  train_ndgc_oob:
  - 0.8625375117750229
  - 0.8651109718326586
  - 0.8544008680453571
  - 0.8669777652943834
  - 0.870014846059137
  train_neg_coverage_error:
  - -2.375
  - -2.341719077568134
  - -2.357894736842105
  - -2.3987341772151898
  - -2.3860759493670884
  train_neg_coverage_error_oob:
  - -2.7690677966101696
  - -2.7442348008385746
  - -2.7978947368421054
  - -2.7447257383966246
  - -2.7510548523206753
  train_neg_hamming_loss_macro:
  - -0.2983757062146893
  - -0.2910552061495457
  - -0.2926315789473684
  - -0.2890295358649789
  - -0.2928973277074543
  train_neg_hamming_loss_macro_oob:
  - -0.3114406779661017
  - -0.30677847658979734
  - -0.31017543859649116
  - -0.310126582278481
  - -0.31012658227848106
  train_neg_hamming_loss_micro:
  - -0.2983757062146893
  - -0.2910552061495458
  - -0.2926315789473684
  - -0.2890295358649789
  - -0.2928973277074543
  train_neg_hamming_loss_micro_oob:
  - -0.3114406779661017
  - -0.30677847658979734
  - -0.3101754385964912
  - -0.310126582278481
  - -0.310126582278481
  train_neg_hamming_loss_samples:
  - -0.29837570621468923
  - -0.2910552061495457
  - -0.2926315789473684
  - -0.2890295358649789
  - -0.29289732770745425
  train_neg_hamming_loss_samples_oob:
  - -0.3114406779661017
  - -0.30677847658979734
  - -0.31017543859649127
  - -0.310126582278481
  - -0.310126582278481
  train_neg_hamming_loss_weighted:
  - -0.309704201937592
  - -0.30006514349334945
  - -0.3027140568444788
  - -0.3014665658194549
  - -0.3041594041394024
  train_neg_hamming_loss_weighted_oob:
  - -0.3245323218619227
  - -0.3195300193061626
  - -0.32342728297632467
  - -0.3229251399730757
  - -0.3228919621681859
  train_neg_label_ranking_loss:
  - -0.08162664783427495
  - -0.07673538318192405
  - -0.08167251461988304
  - -0.08795710267229254
  - -0.08734763244256914
  train_neg_label_ranking_loss_oob:
  - -0.15842749529190206
  - -0.15720941066853014
  - -0.16603508771929826
  - -0.15504571026722927
  - -0.15627051101734646
  train_precision_macro:
  - 0.7016242937853107
  - 0.7089447938504542
  - 0.7073684210526316
  - 0.7109704641350211
  - 0.7071026722925459
  train_precision_macro_oob:
  - 0.6885593220338982
  - 0.6932215234102026
  - 0.6898245614035088
  - 0.689873417721519
  - 0.689873417721519
  train_precision_micro:
  - 0.7016242937853108
  - 0.7089447938504543
  - 0.7073684210526315
  - 0.7109704641350211
  - 0.7071026722925458
  train_precision_micro_oob:
  - 0.6885593220338984
  - 0.6932215234102026
  - 0.6898245614035088
  - 0.689873417721519
  - 0.689873417721519
  train_precision_samples:
  - 0.7016242937853107
  - 0.7089447938504542
  - 0.7073684210526315
  - 0.7109704641350211
  - 0.7071026722925456
  train_precision_samples_oob:
  - 0.6885593220338984
  - 0.6932215234102026
  - 0.6898245614035087
  - 0.689873417721519
  - 0.6898734177215189
  train_precision_weighted:
  - 0.6902957980624079
  - 0.6999348565066505
  - 0.6972859431555213
  - 0.698533434180545
  - 0.6958405958605975
  train_precision_weighted_oob:
  - 0.6754676781380773
  - 0.6804699806938375
  - 0.6765727170236753
  - 0.6770748600269243
  - 0.6771080378318141
  train_recall_macro:
  - 0.7016242937853107
  - 0.7089447938504542
  - 0.7073684210526316
  - 0.7109704641350211
  - 0.7071026722925459
  train_recall_macro_oob:
  - 0.6885593220338982
  - 0.6932215234102026
  - 0.6898245614035088
  - 0.689873417721519
  - 0.689873417721519
  train_recall_micro:
  - 0.7016242937853108
  - 0.7089447938504543
  - 0.7073684210526315
  - 0.7109704641350211
  - 0.7071026722925458
  train_recall_micro_oob:
  - 0.6885593220338984
  - 0.6932215234102026
  - 0.6898245614035088
  - 0.689873417721519
  - 0.689873417721519
  train_recall_samples:
  - 0.7016242937853107
  - 0.7089447938504542
  - 0.7073684210526315
  - 0.7109704641350211
  - 0.7071026722925456
  train_recall_samples_oob:
  - 0.6885593220338984
  - 0.6932215234102026
  - 0.6898245614035087
  - 0.689873417721519
  - 0.6898734177215189
  train_recall_weighted:
  - 0.6902957980624079
  - 0.6999348565066505
  - 0.6972859431555213
  - 0.698533434180545
  - 0.6958405958605975
  train_recall_weighted_oob:
  - 0.6754676781380773
  - 0.6804699806938375
  - 0.6765727170236753
  - 0.6770748600269243
  - 0.6771080378318141
  train_roc_auc_macro:
  - 0.9271922311040738
  - 0.9292189490082574
  - 0.9265099259466328
  - 0.9209040319169391
  - 0.9232392043187859
  train_roc_auc_macro_oob:
  - 0.8404821347165771
  - 0.8449579667392105
  - 0.8448177978043575
  - 0.8404516092322053
  - 0.8448366118471782
  train_roc_auc_micro:
  - 0.9333051242888568
  - 0.9344701353703181
  - 0.9314993673834023
  - 0.9256512193674716
  - 0.9285140316857161
  train_roc_auc_micro_oob:
  - 0.8627185597157455
  - 0.8617268074380802
  - 0.8615594817540507
  - 0.8613383921159496
  - 0.8623952897990992
  train_roc_auc_samples:
  - 0.918373352165725
  - 0.9232646168180758
  - 0.9183274853801169
  - 0.9120428973277075
  - 0.9126523675574308
  train_roc_auc_samples_oob:
  - 0.841572504708098
  - 0.8427905893314699
  - 0.8339649122807017
  - 0.8449542897327708
  - 0.8437294889826537
  train_roc_auc_weighted:
  - 0.927136132785651
  - 0.92830454849253
  - 0.9256598132189852
  - 0.9198554557076739
  - 0.9221364625058563
  train_roc_auc_weighted_oob:
  - 0.8399306930546475
  - 0.8443360729289549
  - 0.8443862004487527
  - 0.8386054215268957
  - 0.8437615818012816
start: 2023-12-22 03:40:05.020169
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
