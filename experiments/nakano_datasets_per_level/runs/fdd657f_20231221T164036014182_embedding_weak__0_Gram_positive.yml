active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwCamZmZmek/AJqZmZmZ6T8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:40:44.130559
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__0
  params: {}
hash: fdd657f09edf57e737f6a5501a5d26a6b44d7b307fae08e28dad8ab51f1cec18
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fdd657f_20231221T164036014182_embedding_weak__0_Gram_positive.yml
results:
  fit_time:
  - 1.270132064819336
  - 1.262970209121704
  - 1.3097565174102783
  - 1.3536133766174316
  - 1.3263063430786133
  score_time:
  - 0.9427695274353027
  - 0.986212968826294
  - 0.9314665794372559
  - 0.9196274280548096
  - 1.011864423751831
  test_average_precision_macro:
  - 0.9851364450355478
  - 0.8945358335324006
  - 0.9524242251675632
  - 0.8374555557360611
  - 0.8924982242325499
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9655733471076007
  - 0.953404461577884
  - 0.9607638156315348
  - 0.9463457300562005
  - 0.9503340824328624
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9388888888888889
  - 0.9487179487179487
  - 0.9514563106796117
  - 0.9449838187702265
  - 0.9495192307692307
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9847808194958927
  - 0.9639194056440773
  - 0.9762772641983043
  - 0.9567624510218269
  - 0.9558662284978675
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538463
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538461
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538461
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9136507936507936
  - 0.8878205128205128
  - 0.8912621359223301
  - 0.9012322628827483
  - 0.9020894970414203
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8520119587166739
  - 0.8155391197247808
  - 0.8226426341863443
  - 0.830369034819287
  - 0.838994295424202
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8421052631578947
  - 0.808695652173913
  - 0.8149779735682819
  - 0.8230088495575221
  - 0.8325991189427313
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8628571428571427
  - 0.8320512820512819
  - 0.839482200647249
  - 0.844660194174757
  - 0.8551282051282049
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8501582929788605
  - 0.8036797715758898
  - 0.8102530718435504
  - 0.8268540745500466
  - 0.8264384027187766
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.938888888888889
  - 0.9487179487179488
  - 0.9514563106796117
  - 0.9449838187702266
  - 0.9495192307692307
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.49804946820011214
  - 0.475038080104693
  - 0.4872523923105646
  - 0.4912894916734078
  - 0.5076471748096933
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7679476477883044
  - 0.7134052252583301
  - 0.7264941130353856
  - 0.7380045742048644
  - 0.750628915185075
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6571428571428571
  - 0.5865384615384616
  - 0.6116504854368932
  - 0.6172558278562099
  - 0.641025641025641
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7088506957616717
  - 0.6598812240091352
  - 0.6721058994052237
  - 0.687466745716237
  - 0.7068196743012884
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9543670280878132
  - 0.9621349447141596
  - 0.9635575266658193
  - 0.9587031577337807
  - 0.962284694188932
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1714285714285715
  - -1.1826923076923077
  - -1.174757281553398
  - -1.1844660194174756
  - -1.1442307692307692
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08571428571428572
  - -0.10576923076923077
  - -0.10194174757281553
  - -0.09708737864077668
  - -0.09134615384615385
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08571428571428572
  - -0.10576923076923077
  - -0.10194174757281553
  - -0.0970873786407767
  - -0.09134615384615384
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08571428571428572
  - -0.10576923076923077
  - -0.10194174757281553
  - -0.0970873786407767
  - -0.09134615384615384
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08634920634920634
  - -0.11217948717948717
  - -0.1087378640776699
  - -0.09876773711725166
  - -0.09791050295857989
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05714285714285714
  - -0.056089743589743585
  - -0.0517799352750809
  - -0.05825242718446602
  - -0.04807692307692308
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538463
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538461
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538461
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9136507936507936
  - 0.8878205128205128
  - 0.8912621359223301
  - 0.9012322628827483
  - 0.9020894970414203
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538463
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538461
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9142857142857143
  - 0.8942307692307693
  - 0.8980582524271845
  - 0.9029126213592233
  - 0.9086538461538461
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9136507936507936
  - 0.8878205128205128
  - 0.8912621359223301
  - 0.9012322628827483
  - 0.9020894970414203
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.99461328420257
  - 0.9871156086975419
  - 0.9922307674635624
  - 0.9840477962069183
  - 0.9857481676072211
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9749659863945578
  - 0.9649670800796203
  - 0.9692880409492788
  - 0.9624438061938062
  - 0.9705066568047337
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9428571428571428
  - 0.9439102564102563
  - 0.9482200647249192
  - 0.941747572815534
  - 0.9519230769230769
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9938907785336356
  - 0.9894729432810282
  - 0.9930710093897951
  - 0.9894079206208406
  - 0.9841671209783348
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9465912872703569
  - 0.9587314888947565
  - 0.9247954902427231
  - 0.9592647130390577
  - 0.9162925582761434
  train_average_precision_macro_oob:
  - 0.8511006410561669
  - 0.876515906289375
  - 0.807535892450308
  - 0.8842007418261
  - 0.8408118772541269
  train_average_precision_micro:
  - 0.9556041267845922
  - 0.9621488677784698
  - 0.9583016994495495
  - 0.9610815322525128
  - 0.9590831701058045
  train_average_precision_micro_oob:
  - 0.9458240064024955
  - 0.9559151505851023
  - 0.9501503144343689
  - 0.9542191590515646
  - 0.9489984260101231
  train_average_precision_samples:
  - 0.9522946859903382
  - 0.9546184738955824
  - 0.9507211538461539
  - 0.9567307692307693
  - 0.9512048192771084
  train_average_precision_samples_oob:
  - 0.9438405797101449
  - 0.946987951807229
  - 0.9423076923076923
  - 0.9459134615384616
  - 0.9459839357429718
  train_average_precision_weighted:
  - 0.9762827377280674
  - 0.9781685434140516
  - 0.9692418103574154
  - 0.9766867886997794
  - 0.9702519127076813
  train_average_precision_weighted_oob:
  - 0.9529988312671274
  - 0.958874678569052
  - 0.9436081950990955
  - 0.9551948599015953
  - 0.9453966851726477
  train_f1_macro:
  - 0.9088164251207729
  - 0.9072289156626506
  - 0.912860576923077
  - 0.90625
  - 0.9096385542168675
  train_f1_macro_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_f1_micro:
  - 0.908816425120773
  - 0.9072289156626506
  - 0.9128605769230769
  - 0.90625
  - 0.9096385542168675
  train_f1_micro_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_f1_samples:
  - 0.908816425120773
  - 0.9072289156626506
  - 0.9128605769230769
  - 0.90625
  - 0.9096385542168675
  train_f1_samples_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_f1_weighted:
  - 0.9070337239673624
  - 0.905551392171557
  - 0.9104078487302171
  - 0.9032839177528915
  - 0.9033096586824626
  train_f1_weighted_oob:
  - 0.8952511383861499
  - 0.9065890355681098
  - 0.9023106827383143
  - 0.8951085459886174
  - 0.8901457860079938
  train_jaccard_macro:
  - 0.8401179041946023
  - 0.8386554408868467
  - 0.846783108696302
  - 0.8367576665403208
  - 0.8384416767551442
  train_jaccard_macro_oob:
  - 0.8259033118575393
  - 0.8400809882238172
  - 0.8362499091852272
  - 0.8261587334868321
  - 0.8210989621172156
  train_jaccard_micro:
  - 0.8328721638074156
  - 0.8302094818081588
  - 0.839690436705362
  - 0.8285714285714286
  - 0.8342541436464088
  train_jaccard_micro_oob:
  - 0.8187808896210873
  - 0.8322295805739515
  - 0.8285714285714286
  - 0.817586018569088
  - 0.8161925601750547
  train_jaccard_samples:
  - 0.8553945249597423
  - 0.8525301204819276
  - 0.8615384615384615
  - 0.8512820512820513
  - 0.8567068273092369
  train_jaccard_samples_oob:
  - 0.8428341384863123
  - 0.8547791164658635
  - 0.8509615384615384
  - 0.841025641025641
  - 0.8396787148594376
  train_jaccard_weighted:
  - 0.83623083455463
  - 0.8348619095226396
  - 0.8416845667684258
  - 0.8306915336036159
  - 0.8267399701857601
  train_jaccard_weighted_oob:
  - 0.8160641602262312
  - 0.8360712053618776
  - 0.8284232095146519
  - 0.817269434799088
  - 0.8054201174676855
  train_label_ranking_average_precision_score:
  - 0.9522946859903382
  - 0.9546184738955824
  - 0.9507211538461539
  - 0.9567307692307693
  - 0.9512048192771084
  train_label_ranking_average_precision_score_oob:
  - 0.9438405797101449
  - 0.946987951807229
  - 0.9423076923076923
  - 0.9459134615384616
  - 0.945983935742972
  train_matthews_corrcoef_macro:
  - 0.5089300174540704
  - 0.4892744543095202
  - 0.519118443009074
  - 0.4915490722386989
  - 0.5346721283320499
  train_matthews_corrcoef_macro_oob:
  - 0.483017069357237
  - 0.5012602362126988
  - 0.4926834761113073
  - 0.45813813763785805
  - 0.5030387064218176
  train_matthews_corrcoef_micro:
  - 0.7541280791275418
  - 0.7491942141691811
  - 0.7641252826471406
  - 0.7464415512737573
  - 0.7564207895905306
  train_matthews_corrcoef_micro_oob:
  - 0.7291378788493517
  - 0.7525738602000213
  - 0.7455473888524851
  - 0.727340341093574
  - 0.7250732300777842
  train_matthews_corrcoef_samples:
  - 0.6455169491204258
  - 0.6367325709297742
  - 0.6584391432752956
  - 0.6338141025641026
  - 0.6487807637008585
  train_matthews_corrcoef_samples_oob:
  - 0.6165314418740491
  - 0.642570281124498
  - 0.6319968355829879
  - 0.608974358974359
  - 0.6076016880442874
  train_matthews_corrcoef_weighted:
  - 0.7071557649240106
  - 0.6919088973741437
  - 0.7194336704284273
  - 0.6909224122363016
  - 0.7220924921406467
  train_matthews_corrcoef_weighted_oob:
  - 0.6747259066979105
  - 0.7028866396399237
  - 0.6907592763713521
  - 0.6553084132917082
  - 0.6856354240985542
  train_ndgc:
  - 0.9643471103342173
  - 0.9659337068988625
  - 0.9632255201466513
  - 0.9676614606085329
  - 0.9635436950167168
  train_ndgc_oob:
  - 0.9581067921578893
  - 0.9602822581467113
  - 0.9570152035000172
  - 0.9596767677771461
  - 0.9597357933038209
  train_neg_coverage_error:
  - -1.1642512077294687
  - -1.1518072289156627
  - -1.1586538461538463
  - -1.1490384615384615
  - -1.1662650602409639
  train_neg_coverage_error_oob:
  - -1.181159420289855
  - -1.1686746987951808
  - -1.1754807692307692
  - -1.1706730769230769
  - -1.183132530120482
  train_neg_hamming_loss_macro:
  - -0.09118357487922706
  - -0.0927710843373494
  - -0.08713942307692307
  - -0.09375
  - -0.09036144578313253
  train_neg_hamming_loss_macro_oob:
  - -0.09963768115942029
  - -0.09156626506024096
  - -0.09375
  - -0.10036057692307693
  - -0.10120481927710843
  train_neg_hamming_loss_micro:
  - -0.09118357487922706
  - -0.0927710843373494
  - -0.08713942307692307
  - -0.09375
  - -0.09036144578313253
  train_neg_hamming_loss_micro_oob:
  - -0.09963768115942029
  - -0.09156626506024096
  - -0.09375
  - -0.10036057692307693
  - -0.10120481927710843
  train_neg_hamming_loss_samples:
  - -0.09118357487922706
  - -0.0927710843373494
  - -0.08713942307692307
  - -0.09375
  - -0.09036144578313253
  train_neg_hamming_loss_samples_oob:
  - -0.09963768115942029
  - -0.09156626506024096
  - -0.09375
  - -0.10036057692307693
  - -0.10120481927710843
  train_neg_hamming_loss_weighted:
  - -0.09296627603263759
  - -0.09444860782844294
  - -0.08959215126978284
  - -0.09671608224710851
  - -0.09669034131753745
  train_neg_hamming_loss_weighted_oob:
  - -0.10474886161385018
  - -0.09341096443189023
  - -0.09768931726168567
  - -0.10489145401138242
  - -0.10985421399200622
  train_neg_label_ranking_loss:
  - -0.05112721417069242
  - -0.04819277108433735
  - -0.05088141025641025
  - -0.046875
  - -0.05180722891566264
  train_neg_label_ranking_loss_oob:
  - -0.05676328502415459
  - -0.05381526104417671
  - -0.056490384615384616
  - -0.054086538461538464
  - -0.05722891566265059
  train_precision_macro:
  - 0.9088164251207729
  - 0.9072289156626506
  - 0.912860576923077
  - 0.90625
  - 0.9096385542168675
  train_precision_macro_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_precision_micro:
  - 0.908816425120773
  - 0.9072289156626506
  - 0.9128605769230769
  - 0.90625
  - 0.9096385542168675
  train_precision_micro_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_precision_samples:
  - 0.908816425120773
  - 0.9072289156626506
  - 0.9128605769230769
  - 0.90625
  - 0.9096385542168675
  train_precision_samples_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_precision_weighted:
  - 0.9070337239673624
  - 0.905551392171557
  - 0.9104078487302171
  - 0.9032839177528915
  - 0.9033096586824626
  train_precision_weighted_oob:
  - 0.8952511383861499
  - 0.9065890355681098
  - 0.9023106827383143
  - 0.8951085459886174
  - 0.8901457860079938
  train_recall_macro:
  - 0.9088164251207729
  - 0.9072289156626506
  - 0.912860576923077
  - 0.90625
  - 0.9096385542168675
  train_recall_macro_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_recall_micro:
  - 0.908816425120773
  - 0.9072289156626506
  - 0.9128605769230769
  - 0.90625
  - 0.9096385542168675
  train_recall_micro_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_recall_samples:
  - 0.908816425120773
  - 0.9072289156626506
  - 0.9128605769230769
  - 0.90625
  - 0.9096385542168675
  train_recall_samples_oob:
  - 0.9003623188405797
  - 0.908433734939759
  - 0.90625
  - 0.8996394230769231
  - 0.8987951807228916
  train_recall_weighted:
  - 0.9070337239673624
  - 0.905551392171557
  - 0.9104078487302171
  - 0.9032839177528915
  - 0.9033096586824626
  train_recall_weighted_oob:
  - 0.8952511383861499
  - 0.9065890355681098
  - 0.9023106827383143
  - 0.8951085459886174
  - 0.8901457860079938
  train_roc_auc_macro:
  - 0.991977304004638
  - 0.9930872838575113
  - 0.990331579860901
  - 0.9926692146343238
  - 0.9914764699445466
  train_roc_auc_macro_oob:
  - 0.984893725463208
  - 0.9885011230200931
  - 0.9788418991229504
  - 0.986004966572956
  - 0.9826745197739346
  train_roc_auc_micro:
  - 0.9682618206553246
  - 0.9717541548205164
  - 0.9704297772009185
  - 0.971669014961996
  - 0.9692295265770349
  train_roc_auc_micro_oob:
  - 0.9642481699917292
  - 0.9693675889328063
  - 0.9668988610443372
  - 0.9686727818194018
  - 0.9645677998534556
  train_roc_auc_samples:
  - 0.9488727858293077
  - 0.9518072289156626
  - 0.9491185897435899
  - 0.953125
  - 0.9481927710843373
  train_roc_auc_samples_oob:
  - 0.9432367149758454
  - 0.9461847389558232
  - 0.9435096153846154
  - 0.9459134615384616
  - 0.9427710843373494
  train_roc_auc_weighted:
  - 0.9922683272498717
  - 0.9932471312010122
  - 0.9911307852329394
  - 0.9923627181162845
  - 0.9923858355334905
  train_roc_auc_weighted_oob:
  - 0.9877297286813403
  - 0.9897449489917757
  - 0.9858732713448213
  - 0.9887417741982581
  - 0.984950497041382
start: 2023-12-21 16:40:36.014182
wrapper: null
