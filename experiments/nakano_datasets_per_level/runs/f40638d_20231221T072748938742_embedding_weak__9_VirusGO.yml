active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T/AzMzMzMwEwKCZmZmZmRFAgJmZmZmZ+b8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:44:20.291855
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__9
  params: {}
hash: f40638d69101d50267a6d78e9da34c9f66dd3f95163c9acee06414f690b3f073
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f40638d_20231221T072748938742_embedding_weak__9_VirusGO.yml
results:
  fit_time:
  - 940.2227621078491
  - 947.965781211853
  - 974.2716581821442
  - 974.0464999675751
  - 981.7004179954529
  score_time:
  - 3.383423089981079
  - 3.5907089710235596
  - 3.4192564487457275
  - 3.410626173019409
  - 3.553314447402954
  test_average_precision_macro:
  - 0.9515808675497256
  - 0.9614500131471084
  - 0.9109637450218914
  - 0.9790414219480595
  - 0.9388407496322722
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9227705107574988
  - 0.9000666223472923
  - 0.8918423540514996
  - 0.8975815043707169
  - 0.8846502244862273
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9264227642276422
  - 0.9128787878787878
  - 0.9355855855855856
  - 0.9263565891472867
  - 0.9384920634920636
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9601925474243814
  - 0.9574106583990485
  - 0.9326309944785176
  - 0.9581210248861773
  - 0.9268434263482282
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9349593495934959
  - 0.9318181818181818
  - 0.9099099099099099
  - 0.937984496124031
  - 0.9404761904761906
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9349593495934959
  - 0.9318181818181818
  - 0.9099099099099099
  - 0.937984496124031
  - 0.9404761904761905
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.934959349593496
  - 0.9318181818181818
  - 0.90990990990991
  - 0.937984496124031
  - 0.9404761904761905
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9469153515064563
  - 0.9290909090909091
  - 0.9
  - 0.9449910554561718
  - 0.9324586977648202
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8797823193172031
  - 0.8743394284427719
  - 0.8353450072962268
  - 0.8837085003597491
  - 0.8888225020682049
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8778625954198473
  - 0.8723404255319149
  - 0.8347107438016529
  - 0.8832116788321168
  - 0.8876404494382022
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8937282229965156
  - 0.8863636363636364
  - 0.8616473616473617
  - 0.8970099667774087
  - 0.903061224489796
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9018580699839249
  - 0.8701772567182902
  - 0.8185071919949968
  - 0.8960668738189551
  - 0.8744238572347772
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9264227642276422
  - 0.9128787878787878
  - 0.9355855855855854
  - 0.9263565891472869
  - 0.9384920634920636
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4919548625865499
  - 0.460093007729409
  - 0.4615763212039857
  - 0.5044710945518731
  - 0.5330479008207953
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7938399275764894
  - 0.766384886589319
  - 0.7292239064581357
  - 0.7997517386011753
  - 0.8026421634486262
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7261467767135097
  - 0.6995414120030614
  - 0.7152322800572396
  - 0.7332516773984815
  - 0.7715350804116089
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7399116152304397
  - 0.7114624546790062
  - 0.6572473479762609
  - 0.7469174919185636
  - 0.7459212874234975
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9475476723691169
  - 0.9369384201548321
  - 0.9574437521703598
  - 0.9483290615107425
  - 0.9556922576781182
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5609756097560976
  - -1.3636363636363635
  - -1.6216216216216217
  - -1.441860465116279
  - -1.3571428571428572
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06504065040650407
  - -0.06818181818181818
  - -0.0900900900900901
  - -0.06201550387596899
  - -0.059523809523809514
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06504065040650407
  - -0.06818181818181818
  - -0.09009009009009009
  - -0.06201550387596899
  - -0.05952380952380952
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06504065040650406
  - -0.06818181818181818
  - -0.09009009009009007
  - -0.06201550387596899
  - -0.05952380952380952
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05308464849354376
  - -0.07090909090909091
  - -0.1
  - -0.05500894454382826
  - -0.06754130223517979
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05609756097560975
  - -0.04318181818181818
  - -0.041141141141141147
  - -0.03953488372093023
  - -0.034523809523809526
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9349593495934959
  - 0.9318181818181818
  - 0.9099099099099099
  - 0.937984496124031
  - 0.9404761904761906
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9349593495934959
  - 0.9318181818181818
  - 0.9099099099099099
  - 0.937984496124031
  - 0.9404761904761905
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.934959349593496
  - 0.9318181818181818
  - 0.90990990990991
  - 0.937984496124031
  - 0.9404761904761905
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9469153515064563
  - 0.9290909090909091
  - 0.9
  - 0.9449910554561718
  - 0.9324586977648202
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9349593495934959
  - 0.9318181818181818
  - 0.9099099099099099
  - 0.937984496124031
  - 0.9404761904761906
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9349593495934959
  - 0.9318181818181818
  - 0.9099099099099099
  - 0.937984496124031
  - 0.9404761904761905
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.934959349593496
  - 0.9318181818181818
  - 0.90990990990991
  - 0.937984496124031
  - 0.9404761904761905
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9469153515064563
  - 0.9290909090909091
  - 0.9
  - 0.9449910554561718
  - 0.9324586977648202
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.968706626794862
  - 0.9853578361544049
  - 0.9722025931584755
  - 0.9891318920730686
  - 0.9773984252570425
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9665158371040723
  - 0.9745794392523364
  - 0.9626744186046511
  - 0.979182225541449
  - 0.9686337589222881
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9439024390243903
  - 0.9568181818181817
  - 0.9588588588588588
  - 0.9604651162790697
  - 0.9654761904761904
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9744056340077103
  - 0.9782122507122507
  - 0.9687748917748918
  - 0.9782544378698225
  - 0.9598937820742331
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9630905967440793
  - 0.9639582965076059
  - 0.9644096285518325
  - 0.9749947399149552
  - 0.9714520085635697
  train_average_precision_macro_oob:
  - 0.9236903193537187
  - 0.9326724417352841
  - 0.9232282003033516
  - 0.91499761490148
  - 0.9240116055482712
  train_average_precision_micro:
  - 0.90083781269025
  - 0.9181102218908248
  - 0.9218282430318984
  - 0.9160538685420679
  - 0.9202301587007363
  train_average_precision_micro_oob:
  - 0.8827405951856748
  - 0.8883430778034415
  - 0.8951410568385166
  - 0.8808812584029985
  - 0.8860085731800269
  train_average_precision_samples:
  - 0.9487951807228916
  - 0.9652351738241307
  - 0.9671568627450982
  - 0.9583333333333333
  - 0.9676767676767676
  train_average_precision_samples_oob:
  - 0.9164658634538152
  - 0.9342535787321063
  - 0.9238235294117648
  - 0.926829268292683
  - 0.9189898989898989
  train_average_precision_weighted:
  - 0.9450424551002474
  - 0.94888970282809
  - 0.9511262857717988
  - 0.9650132656680568
  - 0.9599250307377306
  train_average_precision_weighted_oob:
  - 0.9281193343567927
  - 0.9284660936962256
  - 0.9253756383550075
  - 0.9276785041350485
  - 0.9266508811562991
  train_f1_macro:
  - 0.9427710843373495
  - 0.9355828220858896
  - 0.9460784313725491
  - 0.9339430894308943
  - 0.9373737373737375
  train_f1_macro_oob:
  - 0.9307228915662651
  - 0.9233128834355827
  - 0.9362745098039217
  - 0.9176829268292682
  - 0.9191919191919192
  train_f1_micro:
  - 0.9427710843373494
  - 0.9355828220858896
  - 0.946078431372549
  - 0.9339430894308943
  - 0.9373737373737374
  train_f1_micro_oob:
  - 0.9307228915662651
  - 0.9233128834355828
  - 0.9362745098039216
  - 0.9176829268292683
  - 0.9191919191919192
  train_f1_samples:
  - 0.9427710843373494
  - 0.9355828220858896
  - 0.9460784313725491
  - 0.9339430894308944
  - 0.9373737373737375
  train_f1_samples_oob:
  - 0.9307228915662651
  - 0.9233128834355828
  - 0.9362745098039217
  - 0.9176829268292683
  - 0.9191919191919193
  train_f1_weighted:
  - 0.9380207396751183
  - 0.9382554819899168
  - 0.9460687245195109
  - 0.9309451219512195
  - 0.9401403194506642
  train_f1_weighted_oob:
  - 0.9275310196007912
  - 0.9235558525177673
  - 0.9362842166569598
  - 0.9184756097560975
  - 0.9180773249738766
  train_jaccard_macro:
  - 0.8922017589137793
  - 0.8794706649937369
  - 0.8979194494356827
  - 0.876632589393555
  - 0.8827687193894939
  train_jaccard_macro_oob:
  - 0.8710152028564245
  - 0.8581127646589363
  - 0.8808052974840953
  - 0.8489131105331684
  - 0.8510548371550932
  train_jaccard_micro:
  - 0.8917378917378918
  - 0.8789625360230547
  - 0.8976744186046511
  - 0.8760724499523356
  - 0.8821292775665399
  train_jaccard_micro_oob:
  - 0.8704225352112676
  - 0.8575498575498576
  - 0.880184331797235
  - 0.847887323943662
  - 0.8504672897196262
  train_jaccard_samples:
  - 0.9076305220883535
  - 0.895121238679521
  - 0.9113445378151261
  - 0.893437862950058
  - 0.8972582972582972
  train_jaccard_samples_oob:
  - 0.8878370625358577
  - 0.8765702600058428
  - 0.8956582633053222
  - 0.8677409988385597
  - 0.8705627705627705
  train_jaccard_weighted:
  - 0.8837857917646841
  - 0.8839347553807224
  - 0.8977796958470391
  - 0.8710237295478711
  - 0.8873680577503591
  train_jaccard_weighted_oob:
  - 0.8651598125193178
  - 0.858161253992166
  - 0.8806242816971983
  - 0.8497161002503337
  - 0.8487724218891652
  train_label_ranking_average_precision_score:
  - 0.9487951807228914
  - 0.9652351738241307
  - 0.9671568627450979
  - 0.9583333333333331
  - 0.9676767676767675
  train_label_ranking_average_precision_score_oob:
  - 0.9164658634538152
  - 0.9342535787321065
  - 0.9238235294117649
  - 0.926829268292683
  - 0.9189898989898989
  train_matthews_corrcoef_macro:
  - 0.6084372889498416
  - 0.5053763835780715
  - 0.602557335526979
  - 0.5067558930695536
  - 0.5042698433333282
  train_matthews_corrcoef_macro_oob:
  - 0.4922854996711632
  - 0.40150073437181727
  - 0.49726647241056293
  - 0.36407339069749517
  - 0.3851727654088776
  train_matthews_corrcoef_micro:
  - 0.8173983540884533
  - 0.7953044982596045
  - 0.8244268227898908
  - 0.7872771841628106
  - 0.8002362402520312
  train_matthews_corrcoef_micro_oob:
  - 0.7759026124306339
  - 0.7536747856306978
  - 0.7903372085452937
  - 0.7306832324948448
  - 0.7380056151451643
  train_matthews_corrcoef_samples:
  - 0.7992474613962401
  - 0.749193809882482
  - 0.7852125616400639
  - 0.7487345735313483
  - 0.7549021262167215
  train_matthews_corrcoef_samples_oob:
  - 0.7313865513717381
  - 0.6890436664635398
  - 0.7339942864566138
  - 0.661159709749834
  - 0.6711562611294157
  train_matthews_corrcoef_weighted:
  - 0.7865735754090054
  - 0.7367883203775133
  - 0.7948658061571114
  - 0.7290612469089924
  - 0.7417733666193602
  train_matthews_corrcoef_weighted_oob:
  - 0.7176218834894096
  - 0.6664752695006055
  - 0.7320031302858242
  - 0.6415052847767371
  - 0.6505767038910271
  train_ndgc:
  - 0.9628515211771277
  - 0.9747661325574726
  - 0.9757164363868258
  - 0.9701123447359398
  - 0.977003850157453
  train_ndgc_oob:
  - 0.9409629505819332
  - 0.9539235225471606
  - 0.9450315356847634
  - 0.9485717474555294
  - 0.9426612341980203
  train_neg_coverage_error:
  - -1.3313253012048192
  - -1.3251533742331287
  - -1.2588235294117647
  - -1.329268292682927
  - -1.3212121212121213
  train_neg_coverage_error_oob:
  - -1.4939759036144578
  - -1.49079754601227
  - -1.4588235294117646
  - -1.5060975609756098
  - -1.5212121212121212
  train_neg_hamming_loss_macro:
  - -0.0572289156626506
  - -0.06441717791411043
  - -0.053921568627450976
  - -0.06605691056910569
  - -0.06262626262626263
  train_neg_hamming_loss_macro_oob:
  - -0.06927710843373493
  - -0.07668711656441718
  - -0.06372549019607843
  - -0.08231707317073171
  - -0.0808080808080808
  train_neg_hamming_loss_micro:
  - -0.0572289156626506
  - -0.06441717791411043
  - -0.05392156862745098
  - -0.06605691056910569
  - -0.06262626262626263
  train_neg_hamming_loss_micro_oob:
  - -0.06927710843373494
  - -0.07668711656441718
  - -0.06372549019607843
  - -0.08231707317073171
  - -0.08080808080808081
  train_neg_hamming_loss_samples:
  - -0.0572289156626506
  - -0.06441717791411043
  - -0.053921568627450976
  - -0.06605691056910569
  - -0.06262626262626261
  train_neg_hamming_loss_samples_oob:
  - -0.06927710843373494
  - -0.07668711656441718
  - -0.06372549019607843
  - -0.08231707317073171
  - -0.0808080808080808
  train_neg_hamming_loss_weighted:
  - -0.061979260324881616
  - -0.06174451801008322
  - -0.053931275480489226
  - -0.06905487804878048
  - -0.059859680549335714
  train_neg_hamming_loss_weighted_oob:
  - -0.07246898039920878
  - -0.0764441474822329
  - -0.06371578334304018
  - -0.08152439024390244
  - -0.08192267502612331
  train_neg_label_ranking_loss:
  - -0.022958500669344045
  - -0.016257668711656445
  - -0.014411764705882355
  - -0.020342140921409214
  - -0.016582491582491584
  train_neg_label_ranking_loss_oob:
  - -0.04892904953145918
  - -0.044086571233810504
  - -0.04911764705882354
  - -0.049305555555555554
  - -0.05089225589225589
  train_precision_macro:
  - 0.9427710843373495
  - 0.9355828220858896
  - 0.9460784313725491
  - 0.9339430894308943
  - 0.9373737373737375
  train_precision_macro_oob:
  - 0.9307228915662651
  - 0.9233128834355827
  - 0.9362745098039217
  - 0.9176829268292682
  - 0.9191919191919192
  train_precision_micro:
  - 0.9427710843373494
  - 0.9355828220858896
  - 0.946078431372549
  - 0.9339430894308943
  - 0.9373737373737374
  train_precision_micro_oob:
  - 0.9307228915662651
  - 0.9233128834355828
  - 0.9362745098039216
  - 0.9176829268292683
  - 0.9191919191919192
  train_precision_samples:
  - 0.9427710843373494
  - 0.9355828220858896
  - 0.9460784313725491
  - 0.9339430894308944
  - 0.9373737373737375
  train_precision_samples_oob:
  - 0.9307228915662651
  - 0.9233128834355828
  - 0.9362745098039217
  - 0.9176829268292683
  - 0.9191919191919193
  train_precision_weighted:
  - 0.9380207396751183
  - 0.9382554819899168
  - 0.9460687245195109
  - 0.9309451219512195
  - 0.9401403194506642
  train_precision_weighted_oob:
  - 0.9275310196007912
  - 0.9235558525177673
  - 0.9362842166569598
  - 0.9184756097560975
  - 0.9180773249738766
  train_recall_macro:
  - 0.9427710843373495
  - 0.9355828220858896
  - 0.9460784313725491
  - 0.9339430894308943
  - 0.9373737373737375
  train_recall_macro_oob:
  - 0.9307228915662651
  - 0.9233128834355827
  - 0.9362745098039217
  - 0.9176829268292682
  - 0.9191919191919192
  train_recall_micro:
  - 0.9427710843373494
  - 0.9355828220858896
  - 0.946078431372549
  - 0.9339430894308943
  - 0.9373737373737374
  train_recall_micro_oob:
  - 0.9307228915662651
  - 0.9233128834355828
  - 0.9362745098039216
  - 0.9176829268292683
  - 0.9191919191919192
  train_recall_samples:
  - 0.9427710843373494
  - 0.9355828220858896
  - 0.9460784313725491
  - 0.9339430894308944
  - 0.9373737373737375
  train_recall_samples_oob:
  - 0.9307228915662651
  - 0.9233128834355828
  - 0.9362745098039217
  - 0.9176829268292683
  - 0.9191919191919193
  train_recall_weighted:
  - 0.9380207396751183
  - 0.9382554819899168
  - 0.9460687245195109
  - 0.9309451219512195
  - 0.9401403194506642
  train_recall_weighted_oob:
  - 0.9275310196007912
  - 0.9235558525177673
  - 0.9362842166569598
  - 0.9184756097560975
  - 0.9180773249738766
  train_roc_auc_macro:
  - 0.9880525848529581
  - 0.9875676773135197
  - 0.9887365241448287
  - 0.9899370436779584
  - 0.9890442032617316
  train_roc_auc_macro_oob:
  - 0.9796626972046748
  - 0.9757599531081547
  - 0.9737654265028833
  - 0.9645885961635048
  - 0.9687802378958797
  train_roc_auc_micro:
  - 0.9797302794205076
  - 0.9825903337756456
  - 0.9840894236122879
  - 0.9785969387755102
  - 0.9813283592366097
  train_roc_auc_micro_oob:
  - 0.9662692825182265
  - 0.9679429927528835
  - 0.9693468735626618
  - 0.9586288265306122
  - 0.9646722291422813
  train_roc_auc_samples:
  - 0.9770414993306562
  - 0.9837423312883437
  - 0.9855882352941178
  - 0.9796578590785908
  - 0.9834175084175084
  train_roc_auc_samples_oob:
  - 0.951070950468541
  - 0.9559134287661896
  - 0.9508823529411765
  - 0.9506944444444445
  - 0.9491077441077441
  train_roc_auc_weighted:
  - 0.9779720714608774
  - 0.9791930451873188
  - 0.9805146207898101
  - 0.9827948403503883
  - 0.9813215462270606
  train_roc_auc_weighted_oob:
  - 0.9718745647663557
  - 0.9702837370465354
  - 0.9701202410156982
  - 0.9652177983558117
  - 0.9673732259224521
start: 2023-12-21 07:27:48.938742
wrapper: null
