active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0AAmpmZmZnZP8DMzMzMzAzAgJmZmZmZ+b9AMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:24:58.033739
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__1
  params: {}
hash: d76fc7ae5c20dac6ae726810e284b2d2b12fa1951e90b1db975f2084da20258d
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d76fc7a_20231221T082451630997_embedding__1_VirusGO.yml
results:
  fit_time:
  - 2.413403272628784
  - 2.3720967769622803
  - 2.4695088863372803
  - 2.435621976852417
  - 2.3728208541870117
  score_time:
  - 0.8884975910186768
  - 0.9243366718292236
  - 0.9158103466033936
  - 0.9271793365478516
  - 0.908545970916748
  test_average_precision_macro:
  - 0.9742329633873751
  - 0.9494488097042276
  - 0.8751365016071585
  - 0.9823263126133733
  - 0.8385505450618224
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8714825450727653
  - 0.9037399025100927
  - 0.7669182599263592
  - 0.8956519902875585
  - 0.7944112847949476
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.882051282051282
  - 0.9296747967479673
  - 0.8851851851851852
  - 0.8941860465116279
  - 0.9132478632478632
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9699258058201635
  - 0.952447000368053
  - 0.8321107025829876
  - 0.9773977232659622
  - 0.8245156357912041
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.8074074074074075
  - 0.8023255813953488
  - 0.7863247863247863
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.8074074074074075
  - 0.8023255813953488
  - 0.7863247863247863
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7905982905982903
  - 0.7967479674796749
  - 0.8074074074074076
  - 0.802325581395349
  - 0.7863247863247862
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6771323914181058
  - 0.6780487804878049
  - 0.7017094017094017
  - 0.6976744186046511
  - 0.6502564102564102
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6791197159177873
  - 0.6887908228425469
  - 0.6998860945571407
  - 0.6928920409771474
  - 0.6787530842610402
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6537102473498233
  - 0.6621621621621622
  - 0.6770186335403726
  - 0.6699029126213593
  - 0.647887323943662
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6593406593406596
  - 0.667247386759582
  - 0.6820105820105822
  - 0.6744186046511629
  - 0.6562881562881565
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5323670709232193
  - 0.5311491516146689
  - 0.5582837397994616
  - 0.553604969174431
  - 0.5034355656583318
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.882051282051282
  - 0.9296747967479673
  - 0.8851851851851851
  - 0.8941860465116279
  - 0.9132478632478631
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.916275961787039
  - 0.9509075881118546
  - 0.9167988856288128
  - 0.9228067432067474
  - 0.9352068838863125
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6923076923076923
  - -1.4390243902439024
  - -1.4444444444444444
  - -1.5348837209302326
  - -1.5384615384615385
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2094017094017094
  - -0.2032520325203252
  - -0.19259259259259257
  - -0.19767441860465115
  - -0.2136752136752137
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2094017094017094
  - -0.2032520325203252
  - -0.1925925925925926
  - -0.19767441860465115
  - -0.21367521367521367
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20940170940170938
  - -0.20325203252032517
  - -0.1925925925925926
  - -0.19767441860465113
  - -0.2136752136752137
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3228676085818943
  - -0.32195121951219513
  - -0.29829059829059834
  - -0.3023255813953488
  - -0.34974358974358977
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08076923076923077
  - -0.03780487804878049
  - -0.05444444444444445
  - -0.06627906976744187
  - -0.05256410256410257
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.8074074074074075
  - 0.8023255813953488
  - 0.7863247863247863
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.8074074074074075
  - 0.8023255813953488
  - 0.7863247863247863
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7905982905982903
  - 0.7967479674796749
  - 0.8074074074074076
  - 0.802325581395349
  - 0.7863247863247862
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6771323914181058
  - 0.6780487804878049
  - 0.7017094017094017
  - 0.6976744186046511
  - 0.6502564102564102
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.8074074074074075
  - 0.8023255813953488
  - 0.7863247863247863
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.8074074074074075
  - 0.8023255813953488
  - 0.7863247863247863
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7905982905982903
  - 0.7967479674796749
  - 0.8074074074074076
  - 0.802325581395349
  - 0.7863247863247862
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6771323914181058
  - 0.6780487804878049
  - 0.7017094017094017
  - 0.6976744186046511
  - 0.6502564102564102
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.990825569358178
  - 0.9816129154364449
  - 0.9619592261010439
  - 0.9936525892408246
  - 0.9217211800545133
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9501378929950358
  - 0.9706122448979592
  - 0.9499823570924489
  - 0.9633418584825234
  - 0.937391304347826
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9192307692307691
  - 0.9621951219512196
  - 0.9455555555555555
  - 0.9337209302325583
  - 0.9474358974358975
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9855241475472177
  - 0.9756279809220986
  - 0.9376795484385343
  - 0.9889391654097538
  - 0.8997662337662337
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9712564039214172
  - 0.9657399655050783
  - 0.9723983029591725
  - 0.9471842972132443
  - 0.9711709119260933
  train_average_precision_macro_oob:
  - 0.9098794002461497
  - 0.9065807391444403
  - 0.912024515363184
  - 0.8814707232827229
  - 0.9415938580287722
  train_average_precision_micro:
  - 0.9037092829298762
  - 0.9155808017197193
  - 0.8968803235648107
  - 0.8871896713706138
  - 0.9416686032171505
  train_average_precision_micro_oob:
  - 0.8367354935797175
  - 0.8488971516844392
  - 0.8310261107115277
  - 0.803015288332539
  - 0.8716627138844781
  train_average_precision_samples:
  - 0.9221230158730158
  - 0.9195783132530119
  - 0.9251028806584363
  - 0.9377032520325204
  - 0.9654761904761904
  train_average_precision_samples_oob:
  - 0.8755952380952379
  - 0.8808232931726908
  - 0.8579218106995884
  - 0.8814024390243903
  - 0.8990079365079365
  train_average_precision_weighted:
  - 0.9745783751635916
  - 0.966044594119146
  - 0.9709542427328018
  - 0.9412920956066688
  - 0.96878449317667
  train_average_precision_weighted_oob:
  - 0.9115385342809224
  - 0.9097104967021713
  - 0.9221111578286572
  - 0.8643620119148454
  - 0.9253123100302277
  train_f1_macro:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7996031746031748
  train_f1_macro_oob:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7996031746031748
  train_f1_micro:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7996031746031746
  train_f1_micro_oob:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7996031746031746
  train_f1_samples:
  - 0.798611111111111
  - 0.7971887550200802
  - 0.7942386831275717
  - 0.795731707317073
  - 0.7996031746031745
  train_f1_samples_oob:
  - 0.798611111111111
  - 0.7971887550200802
  - 0.7942386831275717
  - 0.795731707317073
  - 0.7996031746031745
  train_f1_weighted:
  - 0.6832922824302136
  - 0.6831086723130144
  - 0.6767283950617283
  - 0.6780427132629535
  - 0.6894153701084395
  train_f1_weighted_oob:
  - 0.6832922824302136
  - 0.6831086723130144
  - 0.6767283950617283
  - 0.6780427132629535
  - 0.6894153701084395
  train_jaccard_macro:
  - 0.6902964730534494
  - 0.6880443040677658
  - 0.6849782810437134
  - 0.6869658033744721
  - 0.6904599315250494
  train_jaccard_macro_oob:
  - 0.6902964730534494
  - 0.6880443040677658
  - 0.6849782810437134
  - 0.6869658033744721
  - 0.6904599315250494
  train_jaccard_micro:
  - 0.6647398843930635
  - 0.662771285475793
  - 0.658703071672355
  - 0.660759493670886
  - 0.6661157024793388
  train_jaccard_micro_oob:
  - 0.6647398843930635
  - 0.662771285475793
  - 0.658703071672355
  - 0.660759493670886
  - 0.6661157024793388
  train_jaccard_samples:
  - 0.6704931972789117
  - 0.6686746987951807
  - 0.6646090534979424
  - 0.6668118466898956
  - 0.671201814058957
  train_jaccard_samples_oob:
  - 0.6704931972789117
  - 0.6686746987951807
  - 0.6646090534979424
  - 0.6668118466898956
  - 0.671201814058957
  train_jaccard_weighted:
  - 0.5378382027690783
  - 0.5381577878638867
  - 0.5310055541275536
  - 0.5324659178085545
  - 0.5446355892215358
  train_jaccard_weighted_oob:
  - 0.5378382027690783
  - 0.5381577878638867
  - 0.5310055541275536
  - 0.5324659178085545
  - 0.5446355892215358
  train_label_ranking_average_precision_score:
  - 0.9221230158730156
  - 0.9195783132530119
  - 0.9251028806584363
  - 0.9377032520325204
  - 0.9654761904761906
  train_label_ranking_average_precision_score_oob:
  - 0.8755952380952381
  - 0.8808232931726906
  - 0.8579218106995882
  - 0.8814024390243902
  - 0.8990079365079365
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9438553844319598
  - 0.9425362520851173
  - 0.946054051404039
  - 0.9550569072349123
  - 0.9748436453220393
  train_ndgc_oob:
  - 0.9095547957570121
  - 0.914405547757957
  - 0.8971135214524181
  - 0.9146649024227098
  - 0.9273288932634907
  train_neg_coverage_error:
  - -1.4702380952380953
  - -1.4578313253012047
  - -1.4938271604938271
  - -1.420731707317073
  - -1.2976190476190477
  train_neg_coverage_error_oob:
  - -1.630952380952381
  - -1.608433734939759
  - -1.7037037037037037
  - -1.5975609756097562
  - -1.4880952380952381
  train_neg_hamming_loss_macro:
  - -0.20138888888888892
  - -0.20281124497991973
  - -0.20576131687242796
  - -0.20426829268292682
  - -0.20039682539682543
  train_neg_hamming_loss_macro_oob:
  - -0.20138888888888892
  - -0.20281124497991973
  - -0.20576131687242796
  - -0.20426829268292682
  - -0.20039682539682543
  train_neg_hamming_loss_micro:
  - -0.2013888888888889
  - -0.20281124497991967
  - -0.205761316872428
  - -0.20426829268292682
  - -0.2003968253968254
  train_neg_hamming_loss_micro_oob:
  - -0.2013888888888889
  - -0.20281124497991967
  - -0.205761316872428
  - -0.20426829268292682
  - -0.2003968253968254
  train_neg_hamming_loss_samples:
  - -0.20138888888888887
  - -0.2028112449799197
  - -0.20576131687242796
  - -0.20426829268292682
  - -0.20039682539682543
  train_neg_hamming_loss_samples_oob:
  - -0.20138888888888887
  - -0.2028112449799197
  - -0.20576131687242796
  - -0.20426829268292682
  - -0.20039682539682543
  train_neg_hamming_loss_weighted:
  - -0.31670771756978655
  - -0.3168913276869856
  - -0.3232716049382717
  - -0.3219572867370465
  - -0.31058462989156066
  train_neg_hamming_loss_weighted_oob:
  - -0.31670771756978655
  - -0.3168913276869856
  - -0.3232716049382717
  - -0.3219572867370465
  - -0.31058462989156066
  train_neg_label_ranking_loss:
  - -0.048131613756613754
  - -0.04268741633199464
  - -0.047530864197530866
  - -0.036348238482384825
  - -0.018154761904761906
  train_neg_label_ranking_loss_oob:
  - -0.07825727513227514
  - -0.07113453815261045
  - -0.08732853223593964
  - -0.06812330623306233
  - -0.05282738095238095
  train_precision_macro:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7996031746031748
  train_precision_macro_oob:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7996031746031748
  train_precision_micro:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7996031746031746
  train_precision_micro_oob:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7996031746031746
  train_precision_samples:
  - 0.798611111111111
  - 0.7971887550200802
  - 0.7942386831275717
  - 0.795731707317073
  - 0.7996031746031745
  train_precision_samples_oob:
  - 0.798611111111111
  - 0.7971887550200802
  - 0.7942386831275717
  - 0.795731707317073
  - 0.7996031746031745
  train_precision_weighted:
  - 0.6832922824302136
  - 0.6831086723130144
  - 0.6767283950617283
  - 0.6780427132629535
  - 0.6894153701084395
  train_precision_weighted_oob:
  - 0.6832922824302136
  - 0.6831086723130144
  - 0.6767283950617283
  - 0.6780427132629535
  - 0.6894153701084395
  train_recall_macro:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7996031746031748
  train_recall_macro_oob:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.794238683127572
  - 0.7957317073170732
  - 0.7996031746031748
  train_recall_micro:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7996031746031746
  train_recall_micro_oob:
  - 0.7986111111111112
  - 0.7971887550200804
  - 0.7942386831275721
  - 0.7957317073170732
  - 0.7996031746031746
  train_recall_samples:
  - 0.798611111111111
  - 0.7971887550200802
  - 0.7942386831275717
  - 0.795731707317073
  - 0.7996031746031745
  train_recall_samples_oob:
  - 0.798611111111111
  - 0.7971887550200802
  - 0.7942386831275717
  - 0.795731707317073
  - 0.7996031746031745
  train_recall_weighted:
  - 0.6832922824302136
  - 0.6831086723130144
  - 0.6767283950617283
  - 0.6780427132629535
  - 0.6894153701084395
  train_recall_weighted_oob:
  - 0.6832922824302136
  - 0.6831086723130144
  - 0.6767283950617283
  - 0.6780427132629535
  - 0.6894153701084395
  train_roc_auc_macro:
  - 0.9915343378437864
  - 0.9888321735616511
  - 0.9871970836338585
  - 0.9764149719714044
  - 0.9907482566438165
  train_roc_auc_macro_oob:
  - 0.9635471814230302
  - 0.9693277875040933
  - 0.9716255382349971
  - 0.9617700078895856
  - 0.9836745133102371
  train_roc_auc_micro:
  - 0.9637854542116697
  - 0.9728315085916652
  - 0.9624060880829016
  - 0.9657523366564369
  - 0.9838095472078225
  train_roc_auc_micro_oob:
  - 0.9415904292751582
  - 0.9496595755293413
  - 0.9376360103626944
  - 0.9455214349707401
  - 0.9665380930152568
  train_roc_auc_samples:
  - 0.9518683862433862
  - 0.9573125836680054
  - 0.9524691358024691
  - 0.9636517615176152
  - 0.9818452380952382
  train_roc_auc_samples_oob:
  - 0.9217427248677248
  - 0.9288654618473895
  - 0.9126714677640603
  - 0.9318766937669377
  - 0.9471726190476191
  train_roc_auc_weighted:
  - 0.9888196195903988
  - 0.9829768155386969
  - 0.9837890771677185
  - 0.9690773882056813
  - 0.9862272783607565
  train_roc_auc_weighted_oob:
  - 0.958449392268009
  - 0.9606565388681725
  - 0.9659156639177289
  - 0.9477095111560117
  - 0.9742231248337434
start: 2023-12-21 08:24:51.630997
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
