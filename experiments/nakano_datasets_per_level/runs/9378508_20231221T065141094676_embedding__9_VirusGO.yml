active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b9AMzMzMzMDQICZmZmZmfm/oJmZmZmZFUBgZmZmZmYSwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:53:04.619144
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__9
  params: {}
hash: 93785085af6dbc46d1cddd26864dbf8c9f289ef7386aff5ec98807cdc11e31ef
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9378508_20231221T065141094676_embedding__9_VirusGO.yml
results:
  fit_time:
  - 69.20880794525146
  - 69.19863677024841
  - 70.98694777488708
  - 71.33758449554443
  - 72.3110785484314
  score_time:
  - 3.430388927459717
  - 3.420779228210449
  - 3.9082467555999756
  - 3.8078296184539795
  - 3.951059579849243
  test_average_precision_macro:
  - 0.942869820963077
  - 0.9801538219346907
  - 0.9941996374184415
  - 0.8409117231981594
  - 0.9788159989591878
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9053419167014969
  - 0.9182151990761418
  - 0.9553052511269929
  - 0.887414567687179
  - 0.9572985427255976
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.928294573643411
  - 0.9217948717948719
  - 0.9689922480620154
  - 0.9291666666666667
  - 0.9365942028985507
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9443548442660625
  - 0.9725137967467689
  - 0.9881655592639986
  - 0.8844809419167003
  - 0.9768324750485681
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9224806201550386
  - 0.9230769230769232
  - 0.9341085271317829
  - 0.8842592592592592
  - 0.9384057971014492
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9224806201550387
  - 0.9230769230769231
  - 0.9341085271317829
  - 0.8842592592592593
  - 0.9384057971014492
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9224806201550388
  - 0.9230769230769231
  - 0.9341085271317829
  - 0.8842592592592592
  - 0.9384057971014492
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9119927040583676
  - 0.9153846153846155
  - 0.9326056003796868
  - 0.8527777777777779
  - 0.9314381270903009
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8574861706799726
  - 0.8578451233017312
  - 0.8770788364682907
  - 0.7957528957528958
  - 0.8845918367346939
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8561151079136691
  - 0.8571428571428571
  - 0.8763636363636363
  - 0.7925311203319502
  - 0.8839590443686007
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8737541528239202
  - 0.8736263736263735
  - 0.894795127353267
  - 0.8220899470899472
  - 0.8990683229813665
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8390256293137613
  - 0.8444388623288226
  - 0.8745261903713075
  - 0.7446332046332046
  - 0.872165096807954
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.928294573643411
  - 0.9217948717948719
  - 0.9689922480620154
  - 0.9291666666666667
  - 0.9365942028985507
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.390034948731733
  - 0.5037113597325827
  - 0.4966200021527294
  - 0.32686886744424176
  - 0.5317047049599882
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7414975537624363
  - 0.7613813579310758
  - 0.774631534077879
  - 0.651712467356099
  - 0.788739268267592
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.64802118753645
  - 0.7043431908039725
  - 0.7371480603744425
  - 0.595309411946783
  - 0.7188024144362468
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6545014285642151
  - 0.6998205903640782
  - 0.7110946519618194
  - 0.5439151092671204
  - 0.728320178235093
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9460389071138556
  - 0.9456976663776947
  - 0.9791000252427742
  - 0.9509667535194928
  - 0.9538044934762688
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.441860465116279
  - -1.5384615384615385
  - -1.2325581395348837
  - -1.6666666666666667
  - -1.3043478260869565
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07751937984496124
  - -0.07692307692307691
  - -0.06589147286821705
  - -0.11574074074074074
  - -0.06159420289855072
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07751937984496124
  - -0.07692307692307693
  - -0.06589147286821706
  - -0.11574074074074074
  - -0.06159420289855073
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07751937984496124
  - -0.07692307692307693
  - -0.06589147286821705
  - -0.11574074074074073
  - -0.06159420289855072
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08800729594163247
  - -0.08461538461538462
  - -0.06739439962031324
  - -0.14722222222222223
  - -0.06856187290969899
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.051162790697674425
  - -0.041666666666666664
  - -0.015116279069767442
  - -0.049228395061728394
  - -0.03423913043478261
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9224806201550386
  - 0.9230769230769232
  - 0.9341085271317829
  - 0.8842592592592592
  - 0.9384057971014492
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9224806201550387
  - 0.9230769230769231
  - 0.9341085271317829
  - 0.8842592592592593
  - 0.9384057971014492
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9224806201550388
  - 0.9230769230769231
  - 0.9341085271317829
  - 0.8842592592592592
  - 0.9384057971014492
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9119927040583676
  - 0.9153846153846155
  - 0.9326056003796868
  - 0.8527777777777779
  - 0.9314381270903009
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9224806201550386
  - 0.9230769230769232
  - 0.9341085271317829
  - 0.8842592592592592
  - 0.9384057971014492
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9224806201550387
  - 0.9230769230769231
  - 0.9341085271317829
  - 0.8842592592592593
  - 0.9384057971014492
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9224806201550388
  - 0.9230769230769231
  - 0.9341085271317829
  - 0.8842592592592592
  - 0.9384057971014492
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9119927040583676
  - 0.9153846153846155
  - 0.9326056003796868
  - 0.8527777777777779
  - 0.9314381270903009
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9565223012281835
  - 0.9894512350394704
  - 0.9965801491536785
  - 0.9392186888366961
  - 0.9934215876152996
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9681727763569196
  - 0.973804347826087
  - 0.9874035738697393
  - 0.9504819277108433
  - 0.9897836538461539
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9488372093023255
  - 0.9583333333333334
  - 0.9848837209302326
  - 0.9507716049382715
  - 0.9657608695652173
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9637791184850008
  - 0.9803376623376624
  - 0.9930228501657073
  - 0.9397776769509982
  - 0.9898405087397131
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9905953723341844
  - 0.9860371728518205
  - 0.9838409752474968
  - 0.9907536061713763
  - 0.9836432574601964
  train_average_precision_macro_oob:
  - 0.9323885660512684
  - 0.9172258006839789
  - 0.9132297254461564
  - 0.9652326080506627
  - 0.9213131089554576
  train_average_precision_micro:
  - 0.9690679555047294
  - 0.9642967689935404
  - 0.9604489125493911
  - 0.9777245065536576
  - 0.9628526733218989
  train_average_precision_micro_oob:
  - 0.9209398524824643
  - 0.9021618847711312
  - 0.8988455514394903
  - 0.9428675510722595
  - 0.9066209266276168
  train_average_precision_samples:
  - 0.9781504065040652
  - 0.9831349206349207
  - 0.9710365853658537
  - 0.9844054580896686
  - 0.9756728778467908
  train_average_precision_samples_oob:
  - 0.9290650406504065
  - 0.9275793650793651
  - 0.9136178861788616
  - 0.9458089668615985
  - 0.940062111801242
  train_average_precision_weighted:
  - 0.9893282233529389
  - 0.987617332413989
  - 0.9842880807206894
  - 0.9917584260781178
  - 0.9851153930831049
  train_average_precision_weighted_oob:
  - 0.9434943719379004
  - 0.9276212637022856
  - 0.9253691909775502
  - 0.9689832953184584
  - 0.930783664077412
  train_f1_macro:
  - 0.9390243902439025
  - 0.9384920634920634
  - 0.9349593495934959
  - 0.9541910331384016
  - 0.9358178053830227
  train_f1_macro_oob:
  - 0.9217479674796748
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9327485380116959
  - 0.9140786749482402
  train_f1_micro:
  - 0.9390243902439024
  - 0.9384920634920635
  - 0.9349593495934959
  - 0.9541910331384016
  - 0.9358178053830227
  train_f1_micro_oob:
  - 0.9217479674796748
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9327485380116959
  - 0.9140786749482401
  train_f1_samples:
  - 0.9390243902439024
  - 0.9384920634920635
  - 0.9349593495934958
  - 0.9541910331384017
  - 0.9358178053830228
  train_f1_samples_oob:
  - 0.9217479674796747
  - 0.9166666666666666
  - 0.9156504065040649
  - 0.9327485380116959
  - 0.9140786749482401
  train_f1_weighted:
  - 0.9401164907171459
  - 0.9417727487034417
  - 0.9333773879610717
  - 0.9567483064095884
  - 0.9378571428571427
  train_f1_weighted_oob:
  - 0.9122072564009223
  - 0.9106553512494107
  - 0.9067944250871081
  - 0.9272190376932431
  - 0.9056832298136647
  train_jaccard_macro:
  - 0.8855449366889419
  - 0.8847317141129784
  - 0.8784697538869906
  - 0.9124826701429843
  - 0.8800685818808119
  train_jaccard_macro_oob:
  - 0.85570984092123
  - 0.8469226924999039
  - 0.8453096641990633
  - 0.874509104637689
  - 0.8425917592859732
  train_jaccard_micro:
  - 0.8850574712643678
  - 0.8841121495327103
  - 0.8778625954198473
  - 0.9123951537744641
  - 0.8793774319066148
  train_jaccard_micro_oob:
  - 0.8548539114043355
  - 0.8461538461538461
  - 0.8444236176194939
  - 0.873972602739726
  - 0.8417540514775977
  train_jaccard_samples:
  - 0.9024390243902439
  - 0.9002267573696145
  - 0.8960511033681766
  - 0.9259259259259259
  - 0.8966282165039927
  train_jaccard_samples_oob:
  - 0.8754355400696863
  - 0.864937641723356
  - 0.8646922183507548
  - 0.8904204956836536
  - 0.8629103815439219
  train_jaccard_weighted:
  - 0.8872247451098839
  - 0.8902341067216245
  - 0.875320239539037
  - 0.9171349390200054
  - 0.8832978538166126
  train_jaccard_weighted_oob:
  - 0.8393229542704773
  - 0.8361580824210896
  - 0.8298507123094854
  - 0.8649795027158529
  - 0.8278894456373864
  train_label_ranking_average_precision_score:
  - 0.9781504065040648
  - 0.9831349206349204
  - 0.9710365853658535
  - 0.9844054580896685
  - 0.9756728778467908
  train_label_ranking_average_precision_score_oob:
  - 0.9290650406504065
  - 0.9275793650793651
  - 0.9136178861788616
  - 0.9458089668615985
  - 0.9400621118012422
  train_matthews_corrcoef_macro:
  - 0.5308155844349379
  - 0.49734074146163776
  - 0.5035032142637889
  - 0.650111367779313
  - 0.49663574491633605
  train_matthews_corrcoef_macro_oob:
  - 0.47504249096848605
  - 0.37175511893742136
  - 0.380727059033938
  - 0.5584158557070619
  - 0.42089113931421834
  train_matthews_corrcoef_micro:
  - 0.8048947681133561
  - 0.8001839205179418
  - 0.7929842303006079
  - 0.8506934522701134
  - 0.7963368519196298
  train_matthews_corrcoef_micro_oob:
  - 0.7458262871243582
  - 0.7233808071315336
  - 0.7268661161614882
  - 0.7767739891269829
  - 0.7225814255369555
  train_matthews_corrcoef_samples:
  - 0.7630968894362203
  - 0.7376461626210521
  - 0.7318174862158868
  - 0.8124812602656274
  - 0.7505916550536719
  train_matthews_corrcoef_samples_oob:
  - 0.6926700601679278
  - 0.6456662018835583
  - 0.643295873606336
  - 0.7163542290385418
  - 0.6585735739103964
  train_matthews_corrcoef_weighted:
  - 0.7480432264981098
  - 0.7416117207616557
  - 0.732896251534908
  - 0.8257112631601349
  - 0.73575229584326
  train_matthews_corrcoef_weighted_oob:
  - 0.6786641693653132
  - 0.6330972745548971
  - 0.6349469633512055
  - 0.738165716464407
  - 0.6487254330952219
  train_ndgc:
  - 0.9846116328374858
  - 0.9882203683011158
  - 0.9793124240177995
  - 0.9884428012531336
  - 0.9825311599364654
  train_ndgc_oob:
  - 0.9500405405801428
  - 0.9493833952627752
  - 0.9377765865397689
  - 0.961162014846753
  - 0.9581065708334314
  train_neg_coverage_error:
  - -1.2865853658536586
  - -1.255952380952381
  - -1.3170731707317074
  - -1.2163742690058479
  - -1.3043478260869565
  train_neg_coverage_error_oob:
  - -1.4573170731707317
  - -1.4702380952380953
  - -1.5365853658536586
  - -1.368421052631579
  - -1.4596273291925466
  train_neg_hamming_loss_macro:
  - -0.06097560975609756
  - -0.061507936507936505
  - -0.06504065040650407
  - -0.04580896686159844
  - -0.06418219461697722
  train_neg_hamming_loss_macro_oob:
  - -0.0782520325203252
  - -0.08333333333333333
  - -0.08434959349593496
  - -0.06725146198830409
  - -0.08592132505175983
  train_neg_hamming_loss_micro:
  - -0.06097560975609756
  - -0.061507936507936505
  - -0.06504065040650407
  - -0.04580896686159844
  - -0.06418219461697723
  train_neg_hamming_loss_micro_oob:
  - -0.0782520325203252
  - -0.08333333333333333
  - -0.08434959349593496
  - -0.06725146198830409
  - -0.08592132505175984
  train_neg_hamming_loss_samples:
  - -0.06097560975609756
  - -0.0615079365079365
  - -0.06504065040650407
  - -0.045808966861598445
  - -0.06418219461697722
  train_neg_hamming_loss_samples_oob:
  - -0.0782520325203252
  - -0.08333333333333333
  - -0.08434959349593495
  - -0.06725146198830409
  - -0.08592132505175983
  train_neg_hamming_loss_weighted:
  - -0.059883509282854026
  - -0.05822725129655822
  - -0.06662261203892827
  - -0.04325169359041167
  - -0.062142857142857146
  train_neg_hamming_loss_weighted_oob:
  - -0.0877927435990778
  - -0.08934464875058933
  - -0.093205574912892
  - -0.07278096230675699
  - -0.09431677018633541
  train_neg_label_ranking_loss:
  - -0.011128048780487806
  - -0.009375000000000001
  - -0.014786585365853658
  - -0.007017543859649124
  - -0.011801242236024845
  train_neg_label_ranking_loss_oob:
  - -0.04061653116531166
  - -0.04566798941798942
  - -0.054945799457994576
  - -0.033771929824561404
  - -0.03709454796411318
  train_precision_macro:
  - 0.9390243902439025
  - 0.9384920634920634
  - 0.9349593495934959
  - 0.9541910331384016
  - 0.9358178053830227
  train_precision_macro_oob:
  - 0.9217479674796748
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9327485380116959
  - 0.9140786749482402
  train_precision_micro:
  - 0.9390243902439024
  - 0.9384920634920635
  - 0.9349593495934959
  - 0.9541910331384016
  - 0.9358178053830227
  train_precision_micro_oob:
  - 0.9217479674796748
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9327485380116959
  - 0.9140786749482401
  train_precision_samples:
  - 0.9390243902439024
  - 0.9384920634920635
  - 0.9349593495934958
  - 0.9541910331384017
  - 0.9358178053830228
  train_precision_samples_oob:
  - 0.9217479674796747
  - 0.9166666666666666
  - 0.9156504065040649
  - 0.9327485380116959
  - 0.9140786749482401
  train_precision_weighted:
  - 0.9401164907171459
  - 0.9417727487034417
  - 0.9333773879610717
  - 0.9567483064095884
  - 0.9378571428571427
  train_precision_weighted_oob:
  - 0.9122072564009223
  - 0.9106553512494107
  - 0.9067944250871081
  - 0.9272190376932431
  - 0.9056832298136647
  train_recall_macro:
  - 0.9390243902439025
  - 0.9384920634920634
  - 0.9349593495934959
  - 0.9541910331384016
  - 0.9358178053830227
  train_recall_macro_oob:
  - 0.9217479674796748
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9327485380116959
  - 0.9140786749482402
  train_recall_micro:
  - 0.9390243902439024
  - 0.9384920634920635
  - 0.9349593495934959
  - 0.9541910331384016
  - 0.9358178053830227
  train_recall_micro_oob:
  - 0.9217479674796748
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9327485380116959
  - 0.9140786749482401
  train_recall_samples:
  - 0.9390243902439024
  - 0.9384920634920635
  - 0.9349593495934958
  - 0.9541910331384017
  - 0.9358178053830228
  train_recall_samples_oob:
  - 0.9217479674796747
  - 0.9166666666666666
  - 0.9156504065040649
  - 0.9327485380116959
  - 0.9140786749482401
  train_recall_weighted:
  - 0.9401164907171459
  - 0.9417727487034417
  - 0.9333773879610717
  - 0.9567483064095884
  - 0.9378571428571427
  train_recall_weighted_oob:
  - 0.9122072564009223
  - 0.9106553512494107
  - 0.9067944250871081
  - 0.9272190376932431
  - 0.9056832298136647
  train_roc_auc_macro:
  - 0.9967996689576025
  - 0.9957707436336704
  - 0.9940777702938847
  - 0.9968826694776874
  - 0.9948107930341226
  train_roc_auc_macro_oob:
  - 0.982743124458107
  - 0.9690086801232786
  - 0.9712120228862711
  - 0.9830624419497829
  - 0.9730992004262307
  train_roc_auc_micro:
  - 0.9908694077505196
  - 0.9880629191951453
  - 0.9876437307228954
  - 0.9934153609535711
  - 0.9889654046997389
  train_roc_auc_micro_oob:
  - 0.9734660033167495
  - 0.9668881900597007
  - 0.9650189538484827
  - 0.9810090839181005
  - 0.9692232375979113
  train_roc_auc_samples:
  - 0.9888719512195122
  - 0.9906250000000001
  - 0.9852134146341462
  - 0.992982456140351
  - 0.9881987577639753
  train_roc_auc_samples_oob:
  - 0.9593834688346884
  - 0.9543320105820106
  - 0.9450542005420054
  - 0.9662280701754385
  - 0.9629054520358867
  train_roc_auc_weighted:
  - 0.9946947899198517
  - 0.9944904430566922
  - 0.9915734411603468
  - 0.9960414270745087
  - 0.9927741637455503
  train_roc_auc_weighted_oob:
  - 0.9777651574089189
  - 0.9666465416639439
  - 0.966388585106152
  - 0.9833066907524631
  - 0.9687089448774431
start: 2023-12-21 06:51:41.094676
wrapper: null
