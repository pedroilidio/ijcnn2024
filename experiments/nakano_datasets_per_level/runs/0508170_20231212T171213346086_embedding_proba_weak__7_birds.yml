active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            nJmZmZmZ6T+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+amZmZmZnpPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D8yMzMzMzPzv5mZmZmZmQHAnJmZmZmZ6T+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T9oZmZmZmb2P8zMzMzMzAzAaGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:12:59.379921
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 0508170a0c04a7329548da23b7a9daea9046b84aae5942b19ceab8a2a09bfbf6
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0508170_20231212T171213346086_embedding_proba_weak__7_birds.yml
results:
  fit_time:
  - 23.65759253501892
  - 23.742788076400757
  - 25.179603099822998
  - 22.997957229614258
  - 24.74081563949585
  score_time:
  - 6.822298288345337
  - 6.892051458358765
  - 6.930554628372192
  - 6.936577320098877
  - 6.537341833114624
  test_average_precision_macro:
  - 0.2698919162117264
  - 0.3400058731672265
  - 0.346808442197606
  - 0.3375735233822569
  - 0.3262041259251459
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.20554846769414511
  - 0.26381210178722286
  - 0.2567033576733302
  - 0.27872081564169154
  - 0.293317409993696
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2430512699754546
  - 0.2854744923889871
  - 0.27868605510585376
  - 0.25967102538903963
  - 0.23537570121461449
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.3381255262051754
  - 0.46485343528242745
  - 0.4182399732395505
  - 0.4200747348371468
  - 0.4261205471772794
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8841289269685843
  - 0.9000407996736027
  - 0.8808649530803754
  - 0.9171766625866994
  - 0.8931048551611587
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8841289269685843
  - 0.9000407996736026
  - 0.8808649530803754
  - 0.9171766625866993
  - 0.8931048551611587
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8841289269685843
  - 0.9000407996736025
  - 0.8808649530803754
  - 0.9171766625866994
  - 0.8931048551611588
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8732856290995825
  - 0.9039952295766251
  - 0.8780059978498274
  - 0.9115188953488372
  - 0.8878673156661259
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7937252323445371
  - 0.8197039353525757
  - 0.788744631638791
  - 0.848050882783116
  - 0.8086604424713469
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7923217550274223
  - 0.8182492581602374
  - 0.7870944221655122
  - 0.8470233609645818
  - 0.8068558791006266
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8145965836359013
  - 0.8414669151642525
  - 0.8139871891348479
  - 0.8625222757128898
  - 0.8261928574365379
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7760851636085352
  - 0.8258238569049865
  - 0.7845485771007864
  - 0.8380127445095581
  - 0.7994720988025261
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6461520451692532
  - 0.7428388334742586
  - 0.7050426442531408
  - 0.771298932365784
  - 0.7159958562533741
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21737710912840696
  - 0.30240685401934875
  - 0.28552575901148264
  - 0.36246456282695383
  - 0.2699816643041199
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2451845814863652
  - 0.33257241005158533
  - 0.28808068897213707
  - 0.36397813995562023
  - 0.30627533479403457
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1132028186186045
  - 0.14942152740620762
  - 0.12749453127738686
  - 0.1362437021821271
  - 0.11780312061829379
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2821441223927836
  - 0.4089831141918936
  - 0.3392307249957672
  - 0.4154094894236412
  - 0.35510402516577566
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3380884196313748
  - 0.3650424026666352
  - 0.3650506645909705
  - 0.32879118132206847
  - 0.32113386858293524
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.170542635658915
  - -3.5891472868217056
  - -4.015503875968992
  - -3.5193798449612403
  - -4.209302325581396
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.11587107303141575
  - -0.0999592003263974
  - -0.11913504691962465
  - -0.08282333741330068
  - -0.10689514483884129
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11587107303141575
  - -0.0999592003263974
  - -0.11913504691962465
  - -0.0828233374133007
  - -0.10689514483884129
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11587107303141574
  - -0.0999592003263974
  - -0.11913504691962462
  - -0.0828233374133007
  - -0.10689514483884127
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.12671437090041743
  - -0.09600477042337507
  - -0.12199400215017259
  - -0.0884811046511628
  - -0.11213268433387417
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.155411790039013
  - -0.11676415050218059
  - -0.1317945265961682
  - -0.1080371166554477
  - -0.14073160271860682
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8841289269685843
  - 0.9000407996736027
  - 0.8808649530803754
  - 0.9171766625866994
  - 0.8931048551611587
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8841289269685843
  - 0.9000407996736026
  - 0.8808649530803754
  - 0.9171766625866993
  - 0.8931048551611587
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8841289269685843
  - 0.9000407996736025
  - 0.8808649530803754
  - 0.9171766625866994
  - 0.8931048551611588
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8732856290995825
  - 0.9039952295766251
  - 0.8780059978498274
  - 0.9115188953488372
  - 0.8878673156661259
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8841289269685843
  - 0.9000407996736027
  - 0.8808649530803754
  - 0.9171766625866994
  - 0.8931048551611587
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8841289269685843
  - 0.9000407996736026
  - 0.8808649530803754
  - 0.9171766625866993
  - 0.8931048551611587
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8841289269685843
  - 0.9000407996736025
  - 0.8808649530803754
  - 0.9171766625866994
  - 0.8931048551611588
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8732856290995825
  - 0.9039952295766251
  - 0.8780059978498274
  - 0.9115188953488372
  - 0.8878673156661259
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8360340851877774
  - 0.8394752650399705
  - 0.8614422474056826
  - 0.8631298723239388
  - 0.8432726112601706
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8421900374507009
  - 0.8702465780664832
  - 0.8661085490413793
  - 0.8733117197589323
  - 0.8582617230535025
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8320338133570673
  - 0.875664725350056
  - 0.8611117208480713
  - 0.8620378193398273
  - 0.854658332468471
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.35711145290637764
  - 0.38936467997896
  - 0.36112012475680616
  - 0.3523262337169699
  - 0.3633001796564639
  train_average_precision_macro_oob:
  - 0.32188854496761976
  - 0.33265244131353283
  - 0.33542199146558266
  - 0.31627358044701187
  - 0.3172836687407662
  train_average_precision_micro:
  - 0.332438932657039
  - 0.3482260630705313
  - 0.34623185649237886
  - 0.32487108025030875
  - 0.36837066653859574
  train_average_precision_micro_oob:
  - 0.29796983501406393
  - 0.3087216280610763
  - 0.3186308362664751
  - 0.2941888587901288
  - 0.32298877413281757
  train_average_precision_samples:
  - 0.3261164606101622
  - 0.35943361655570955
  - 0.36388099276907415
  - 0.37569412804393426
  - 0.3492461161792557
  train_average_precision_samples_oob:
  - 0.2806230526279666
  - 0.3276847079440259
  - 0.31773961593355543
  - 0.3260174243458977
  - 0.3052454274474473
  train_average_precision_weighted:
  - 0.48397136098751775
  - 0.5194811847090391
  - 0.5152964382306633
  - 0.4865396860812126
  - 0.49756355388981105
  train_average_precision_weighted_oob:
  - 0.43465316220656725
  - 0.45882899576393565
  - 0.4788442674703368
  - 0.43797017643606667
  - 0.44470715204681793
  train_f1_macro:
  - 0.9065687474500204
  - 0.9115667074663404
  - 0.9094247246022032
  - 0.902998776009792
  - 0.9076907384740921
  train_f1_macro_oob:
  - 0.9070787433700532
  - 0.9113627090983272
  - 0.9099347205222358
  - 0.9024887800897594
  - 0.9079967360261118
  train_f1_micro:
  - 0.9065687474500204
  - 0.9115667074663403
  - 0.9094247246022031
  - 0.902998776009792
  - 0.9076907384740922
  train_f1_micro_oob:
  - 0.907078743370053
  - 0.9113627090983272
  - 0.9099347205222358
  - 0.9024887800897593
  - 0.9079967360261118
  train_f1_samples:
  - 0.9065687474500204
  - 0.9115667074663404
  - 0.9094247246022032
  - 0.902998776009792
  - 0.9076907384740922
  train_f1_samples_oob:
  - 0.9070787433700531
  - 0.9113627090983273
  - 0.9099347205222359
  - 0.9024887800897593
  - 0.9079967360261119
  train_f1_weighted:
  - 0.9084265341144447
  - 0.9178538670927275
  - 0.914091433883616
  - 0.9089552568750552
  - 0.9132558139534885
  train_f1_weighted_oob:
  - 0.9066919640215398
  - 0.9139705012130894
  - 0.9124870676082947
  - 0.905587732484452
  - 0.9110705057216685
  train_jaccard_macro:
  - 0.8295971137016734
  - 0.8382707831322159
  - 0.8347600511005246
  - 0.8236896722598847
  - 0.831432887463087
  train_jaccard_macro_oob:
  - 0.8305294863578055
  - 0.8378368819444267
  - 0.8355919348731061
  - 0.8228005573615575
  - 0.8319612077840609
  train_jaccard_micro:
  - 0.8291044776119403
  - 0.8375035141973574
  - 0.8338945005611672
  - 0.8231520223152022
  - 0.8309832850873098
  train_jaccard_micro_oob:
  - 0.8299580027998134
  - 0.8371591867328774
  - 0.834752503041078
  - 0.8223048327137547
  - 0.8314963571828881
  train_jaccard_samples:
  - 0.8479567771231533
  - 0.8564235198267601
  - 0.852577829572829
  - 0.843017915575474
  - 0.8474630418951282
  train_jaccard_samples_oob:
  - 0.8479401165936387
  - 0.8557322061158517
  - 0.8527560411795039
  - 0.8422890498887385
  - 0.8477924719178511
  train_jaccard_weighted:
  - 0.832598876020314
  - 0.8489150323759304
  - 0.84284663124269
  - 0.8336666027854904
  - 0.8408506776946942
  train_jaccard_weighted_oob:
  - 0.8297850257614116
  - 0.8421856856731442
  - 0.840073039273594
  - 0.8279720328891054
  - 0.8372193127979424
  train_label_ranking_average_precision_score:
  - 0.7951087086721771
  - 0.8148599731448565
  - 0.8270592873427172
  - 0.817554593160213
  - 0.7988585192800298
  train_label_ranking_average_precision_score_oob:
  - 0.7496153006899821
  - 0.783111064533173
  - 0.7809179105071983
  - 0.7678778894621767
  - 0.754857830548222
  train_matthews_corrcoef_macro:
  - 0.37664115077617993
  - 0.4081087809688772
  - 0.39309508294789436
  - 0.38451511486952666
  - 0.4028403935432954
  train_matthews_corrcoef_macro_oob:
  - 0.3628294970512146
  - 0.39285866203094616
  - 0.3782602955506696
  - 0.3718972550848652
  - 0.39657138343465415
  train_matthews_corrcoef_micro:
  - 0.4040513597506912
  - 0.44220588672290767
  - 0.4398835125608334
  - 0.42549888110217865
  - 0.43691627540982203
  train_matthews_corrcoef_micro_oob:
  - 0.38664969116524306
  - 0.4159762192316419
  - 0.4162158587948025
  - 0.4054360735934113
  - 0.425442990805241
  train_matthews_corrcoef_samples:
  - 0.1923245410098151
  - 0.23665244130640362
  - 0.21506587595275298
  - 0.21484232479617518
  - 0.2152938982948928
  train_matthews_corrcoef_samples_oob:
  - 0.17680081688483007
  - 0.21261908388902742
  - 0.19247649884832008
  - 0.19539304925863854
  - 0.20289127105288204
  train_matthews_corrcoef_weighted:
  - 0.4611965101348765
  - 0.5137652744869244
  - 0.5100764886838639
  - 0.4965202187869265
  - 0.5071698874893755
  train_matthews_corrcoef_weighted_oob:
  - 0.43853646397005625
  - 0.48334013519824737
  - 0.484978035535554
  - 0.47129330467453523
  - 0.49354619936922084
  train_ndgc:
  - 0.38987900426385724
  - 0.42138676582854573
  - 0.42066499982092737
  - 0.4366160428957588
  - 0.41235287099907514
  train_ndgc_oob:
  - 0.3560319495361006
  - 0.39776372188572856
  - 0.3866388043622558
  - 0.39936794677669646
  - 0.37930047517394383
  train_neg_coverage_error:
  - -2.2306201550387597
  - -2.2170542635658914
  - -2.0813953488372094
  - -2.3197674418604652
  - -2.2131782945736433
  train_neg_coverage_error_oob:
  - -3.1705426356589146
  - -2.998062015503876
  - -2.9282945736434107
  - -3.193798449612403
  - -3.0271317829457365
  train_neg_hamming_loss_macro:
  - -0.0934312525499796
  - -0.08843329253365974
  - -0.0905752753977968
  - -0.0970012239902081
  - -0.09230926152590778
  train_neg_hamming_loss_macro_oob:
  - -0.09292125662994696
  - -0.08863729090167279
  - -0.09006527947776416
  - -0.09751121991024073
  - -0.0920032639738882
  train_neg_hamming_loss_micro:
  - -0.0934312525499796
  - -0.08843329253365972
  - -0.09057527539779682
  - -0.09700122399020808
  - -0.0923092615259078
  train_neg_hamming_loss_micro_oob:
  - -0.09292125662994696
  - -0.08863729090167279
  - -0.09006527947776417
  - -0.09751121991024071
  - -0.09200326397388821
  train_neg_hamming_loss_samples:
  - -0.09343125254997958
  - -0.08843329253365971
  - -0.0905752753977968
  - -0.09700122399020807
  - -0.0923092615259078
  train_neg_hamming_loss_samples_oob:
  - -0.09292125662994696
  - -0.08863729090167277
  - -0.09006527947776417
  - -0.09751121991024071
  - -0.09200326397388821
  train_neg_hamming_loss_weighted:
  - -0.09157346588555536
  - -0.08214613290727261
  - -0.08590856611638403
  - -0.09104474312494475
  - -0.08674418604651164
  train_neg_hamming_loss_weighted_oob:
  - -0.09330803597846027
  - -0.08602949878691046
  - -0.08751293239170528
  - -0.09441226751554808
  - -0.08892949427833148
  train_neg_label_ranking_loss:
  - -0.05337709944840588
  - -0.048760237299053995
  - -0.04522418115526871
  - -0.05346409160961145
  - -0.05318952988669131
  train_neg_label_ranking_loss_oob:
  - -0.09476058486403904
  - -0.08068721997843065
  - -0.08047302453082207
  - -0.091960529242506
  - -0.08629380195727665
  train_precision_macro:
  - 0.9065687474500204
  - 0.9115667074663404
  - 0.9094247246022032
  - 0.902998776009792
  - 0.9076907384740921
  train_precision_macro_oob:
  - 0.9070787433700532
  - 0.9113627090983272
  - 0.9099347205222358
  - 0.9024887800897594
  - 0.9079967360261118
  train_precision_micro:
  - 0.9065687474500204
  - 0.9115667074663403
  - 0.9094247246022031
  - 0.902998776009792
  - 0.9076907384740922
  train_precision_micro_oob:
  - 0.907078743370053
  - 0.9113627090983272
  - 0.9099347205222358
  - 0.9024887800897593
  - 0.9079967360261118
  train_precision_samples:
  - 0.9065687474500204
  - 0.9115667074663404
  - 0.9094247246022032
  - 0.902998776009792
  - 0.9076907384740922
  train_precision_samples_oob:
  - 0.9070787433700531
  - 0.9113627090983273
  - 0.9099347205222359
  - 0.9024887800897593
  - 0.9079967360261119
  train_precision_weighted:
  - 0.9084265341144447
  - 0.9178538670927275
  - 0.914091433883616
  - 0.9089552568750552
  - 0.9132558139534885
  train_precision_weighted_oob:
  - 0.9066919640215398
  - 0.9139705012130894
  - 0.9124870676082947
  - 0.905587732484452
  - 0.9110705057216685
  train_recall_macro:
  - 0.9065687474500204
  - 0.9115667074663404
  - 0.9094247246022032
  - 0.902998776009792
  - 0.9076907384740921
  train_recall_macro_oob:
  - 0.9070787433700532
  - 0.9113627090983272
  - 0.9099347205222358
  - 0.9024887800897594
  - 0.9079967360261118
  train_recall_micro:
  - 0.9065687474500204
  - 0.9115667074663403
  - 0.9094247246022031
  - 0.902998776009792
  - 0.9076907384740922
  train_recall_micro_oob:
  - 0.907078743370053
  - 0.9113627090983272
  - 0.9099347205222358
  - 0.9024887800897593
  - 0.9079967360261118
  train_recall_samples:
  - 0.9065687474500204
  - 0.9115667074663404
  - 0.9094247246022032
  - 0.902998776009792
  - 0.9076907384740922
  train_recall_samples_oob:
  - 0.9070787433700531
  - 0.9113627090983273
  - 0.9099347205222359
  - 0.9024887800897593
  - 0.9079967360261119
  train_recall_weighted:
  - 0.9084265341144447
  - 0.9178538670927275
  - 0.914091433883616
  - 0.9089552568750552
  - 0.9132558139534885
  train_recall_weighted_oob:
  - 0.9066919640215398
  - 0.9139705012130894
  - 0.9124870676082947
  - 0.905587732484452
  - 0.9110705057216685
  train_roc_auc_macro:
  - 0.9454476404523761
  - 0.9506775777057657
  - 0.9440604987405701
  - 0.9388479818679254
  - 0.9440670293984547
  train_roc_auc_macro_oob:
  - 0.900595271475472
  - 0.9160345690974092
  - 0.9017928741828761
  - 0.8971556328138073
  - 0.8928233275412345
  train_roc_auc_micro:
  - 0.9404735415569887
  - 0.942889164911819
  - 0.9437959386251324
  - 0.9375889814984053
  - 0.9432262302485387
  train_roc_auc_micro_oob:
  - 0.9078572280534353
  - 0.9143149307383522
  - 0.9156624586394867
  - 0.9056082010922442
  - 0.9098759615927413
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9490547374133129
  - 0.9535623934904677
  - 0.9506064721536459
  - 0.9461292962934428
  - 0.9499833179866244
  train_roc_auc_weighted_oob:
  - 0.9060594655248433
  - 0.9176011528809505
  - 0.9145688901616883
  - 0.9081141182228282
  - 0.9067233464255827
start: 2023-12-12 17:12:13.346086
wrapper: null
