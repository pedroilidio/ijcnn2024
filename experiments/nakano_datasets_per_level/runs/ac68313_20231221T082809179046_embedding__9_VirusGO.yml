active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          oJmZmZmZEUDAzMzMzMwEwMDMzMzMzATAQDMzMzMzA0CAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:29:31.533426
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__9
  params: {}
hash: ac68313f1dae14a0d1c0b01d32e1a85e2785d3c27fcb6e6fa1ff61bd387a7861
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ac68313_20231221T082809179046_embedding__9_VirusGO.yml
results:
  fit_time:
  - 70.37023878097534
  - 70.0584568977356
  - 69.88188219070435
  - 70.11109733581543
  - 70.75604200363159
  score_time:
  - 3.7947757244110107
  - 3.9042744636535645
  - 3.615675449371338
  - 3.4691829681396484
  - 3.8341012001037598
  test_average_precision_macro:
  - 0.8215941485977982
  - 0.927685240580476
  - 0.9492255513644259
  - 0.9887916337845768
  - 0.8952490992199151
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8080135970724409
  - 0.8188102734474424
  - 0.8688422588952204
  - 0.9654457335049726
  - 0.8285777000199906
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9324324324324325
  - 0.9109848484848485
  - 0.9325757575757575
  - 0.9623931623931623
  - 0.8961240310077518
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8278285399670848
  - 0.8778320650500038
  - 0.9216922336269662
  - 0.9901349329205366
  - 0.8799081624086267
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7792792792792792
  - 0.8030303030303031
  - 0.8106060606060607
  - 0.7863247863247863
  - 0.8062015503875969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7792792792792793
  - 0.803030303030303
  - 0.8106060606060606
  - 0.7863247863247863
  - 0.8062015503875969
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7792792792792792
  - 0.8030303030303032
  - 0.8106060606060609
  - 0.7863247863247863
  - 0.8062015503875972
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6572972972972972
  - 0.6949300699300699
  - 0.6999999999999998
  - 0.6666666666666667
  - 0.6930232558139535
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6657865021699537
  - 0.6945296884225528
  - 0.7054930533233329
  - 0.6748989366970082
  - 0.7001310982162047
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6383763837638377
  - 0.6708860759493671
  - 0.6815286624203821
  - 0.647887323943662
  - 0.6753246753246753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6492921492921495
  - 0.6764069264069265
  - 0.6850649350649353
  - 0.6538461538461541
  - 0.6794019933554818
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5113153377728128
  - 0.5508492741624239
  - 0.5549966784528019
  - 0.5214729762580018
  - 0.5473235332043843
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9324324324324325
  - 0.9109848484848484
  - 0.9325757575757577
  - 0.9623931623931623
  - 0.8961240310077518
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.028538953717448964
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1247622172764195
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.02702702702702703
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06164414002968976
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9541132857128253
  - 0.9348035839136184
  - 0.9495373197261117
  - 0.975177569277586
  - 0.9257403612327049
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6756756756756757
  - -1.4772727272727273
  - -1.3409090909090908
  - -1.435897435897436
  - -1.4883720930232558
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22072072072072071
  - -0.19696969696969693
  - -0.18939393939393936
  - -0.2136752136752137
  - -0.19379844961240308
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22072072072072071
  - -0.19696969696969696
  - -0.1893939393939394
  - -0.21367521367521367
  - -0.1937984496124031
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22072072072072071
  - -0.1969696969696969
  - -0.18939393939393936
  - -0.2136752136752137
  - -0.19379844961240308
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34270270270270264
  - -0.30506993006993005
  - -0.3
  - -0.33333333333333326
  - -0.3069767441860465
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05435435435435435
  - -0.055681818181818186
  - -0.0409090909090909
  - -0.023076923076923075
  - -0.05872093023255813
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7792792792792792
  - 0.8030303030303031
  - 0.8106060606060607
  - 0.7863247863247863
  - 0.8062015503875969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7792792792792793
  - 0.803030303030303
  - 0.8106060606060606
  - 0.7863247863247863
  - 0.8062015503875969
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7792792792792792
  - 0.8030303030303032
  - 0.8106060606060609
  - 0.7863247863247863
  - 0.8062015503875972
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6572972972972972
  - 0.6949300699300699
  - 0.6999999999999998
  - 0.6666666666666667
  - 0.6930232558139535
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7792792792792792
  - 0.8030303030303031
  - 0.8106060606060607
  - 0.7863247863247863
  - 0.8062015503875969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7792792792792793
  - 0.803030303030303
  - 0.8106060606060606
  - 0.7863247863247863
  - 0.8062015503875969
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7792792792792792
  - 0.8030303030303032
  - 0.8106060606060609
  - 0.7863247863247863
  - 0.8062015503875972
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6572972972972972
  - 0.6949300699300699
  - 0.6999999999999998
  - 0.6666666666666667
  - 0.6930232558139535
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9168494152046783
  - 0.9757729745474842
  - 0.9789901946764692
  - 0.9965813598166539
  - 0.951326043237808
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.936046511627907
  - 0.9670264876632801
  - 0.9728037383177569
  - 0.988804347826087
  - 0.9563942307692307
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9456456456456458
  - 0.944318181818182
  - 0.9590909090909091
  - 0.976923076923077
  - 0.9412790697674417
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9178947368421052
  - 0.9555987200217969
  - 0.9610010010010009
  - 0.9948831168831168
  - 0.9448717948717951
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9816350846427143
  - 0.9529196114631308
  - 0.9418898074659111
  - 0.9492546541134729
  - 0.9515951020870479
  train_average_precision_macro_oob:
  - 0.9355613396154778
  - 0.920662535995171
  - 0.847856115171086
  - 0.8835649671088404
  - 0.8845390246763415
  train_average_precision_micro:
  - 0.9568933403694856
  - 0.9402925024990866
  - 0.9177438528785066
  - 0.9228375884905912
  - 0.9409523188171094
  train_average_precision_micro_oob:
  - 0.8832769504636351
  - 0.8529498321646177
  - 0.8025824307658933
  - 0.8110840662462016
  - 0.8584240499906448
  train_average_precision_samples:
  - 0.9550980392156864
  - 0.971881390593047
  - 0.9585889570552147
  - 0.9537698412698413
  - 0.9476626016260162
  train_average_precision_samples_oob:
  - 0.9190196078431373
  - 0.9155419222903884
  - 0.9093047034764824
  - 0.8959325396825396
  - 0.8815379403794038
  train_average_precision_weighted:
  - 0.9761750474372629
  - 0.9581800571482091
  - 0.9427271822088527
  - 0.949485540862901
  - 0.9625891216951217
  train_average_precision_weighted_oob:
  - 0.9316752676115444
  - 0.9036282310129343
  - 0.8425661816451444
  - 0.8660437739388461
  - 0.8957683434875968
  train_f1_macro:
  - 0.8107843137254903
  - 0.7995910020449898
  - 0.7955010224948875
  - 0.7996031746031748
  - 0.7947154471544716
  train_f1_macro_oob:
  - 0.8029411764705884
  - 0.796523517382413
  - 0.7934560327198364
  - 0.7996031746031748
  - 0.7947154471544716
  train_f1_micro:
  - 0.8107843137254902
  - 0.7995910020449898
  - 0.7955010224948875
  - 0.7996031746031746
  - 0.7947154471544715
  train_f1_micro_oob:
  - 0.8029411764705883
  - 0.7965235173824131
  - 0.7934560327198364
  - 0.7996031746031746
  - 0.7947154471544715
  train_f1_samples:
  - 0.8107843137254901
  - 0.7995910020449897
  - 0.7955010224948873
  - 0.7996031746031745
  - 0.7947154471544714
  train_f1_samples_oob:
  - 0.8029411764705883
  - 0.796523517382413
  - 0.7934560327198363
  - 0.7996031746031745
  - 0.7947154471544714
  train_f1_weighted:
  - 0.7074839836924869
  - 0.6869325153374234
  - 0.681346048715301
  - 0.6857024988213107
  - 0.6792441439265877
  train_f1_weighted_oob:
  - 0.6914967967384974
  - 0.6808282208588957
  - 0.677276316588714
  - 0.6857024988213107
  - 0.6792441439265877
  train_jaccard_macro:
  - 0.703267231861468
  - 0.6906616996943198
  - 0.6856565127591184
  - 0.6913062098006546
  - 0.6850852850852851
  train_jaccard_macro_oob:
  - 0.6951356305939099
  - 0.687494437311643
  - 0.6835843032498379
  - 0.6913062098006546
  - 0.6850852850852851
  train_jaccard_micro:
  - 0.6817807089859852
  - 0.666098807495741
  - 0.6604414261460102
  - 0.6661157024793388
  - 0.6593591905564924
  train_jaccard_micro_oob:
  - 0.6707616707616708
  - 0.6618521665250637
  - 0.6576271186440678
  - 0.6661157024793388
  - 0.6593591905564924
  train_jaccard_samples:
  - 0.6880952380952381
  - 0.6732398480864739
  - 0.6673970201577565
  - 0.6717687074829932
  - 0.6655052264808362
  train_jaccard_samples_oob:
  - 0.6759103641456584
  - 0.6679813029506282
  - 0.6638913234005259
  - 0.6717687074829932
  - 0.6655052264808362
  train_jaccard_weighted:
  - 0.5630908246446819
  - 0.5415138460169
  - 0.5360771269524224
  - 0.540412576836337
  - 0.534039997406334
  train_jaccard_weighted_oob:
  - 0.5465161185659901
  - 0.5352084786023427
  - 0.531953224859696
  - 0.540412576836337
  - 0.534039997406334
  train_label_ranking_average_precision_score:
  - 0.9550980392156864
  - 0.971881390593047
  - 0.9585889570552147
  - 0.9537698412698412
  - 0.9476626016260163
  train_label_ranking_average_precision_score_oob:
  - 0.9190196078431375
  - 0.9155419222903887
  - 0.9093047034764826
  - 0.8959325396825396
  - 0.8815379403794038
  train_matthews_corrcoef_macro:
  - 0.06678789402045215
  - 0.03164305443075246
  - 0.022235608794131542
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.015701857325533194
  - 0.015283774583901072
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.18986575650712062
  - 0.12639366812825636
  - 0.08872484818402544
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.06303966188094474
  - 0.06309973259720109
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.04645509762412369
  - 0.024539877300613498
  - 0.012269938650306749
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0058823529411764705
  - 0.006134969325153374
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.1359409447985636
  - 0.06360253940581244
  - 0.044251063045746934
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.031714642518898724
  - 0.03163741338867521
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9673035687349721
  - 0.9808648979094439
  - 0.9701865450666695
  - 0.9669946847303748
  - 0.9626699963744434
  train_ndgc_oob:
  - 0.9422751489450929
  - 0.9394245573650422
  - 0.9351036742627414
  - 0.9256163379728173
  - 0.9136967700635622
  train_neg_coverage_error:
  - -1.3176470588235294
  - -1.3496932515337423
  - -1.3865030674846626
  - -1.369047619047619
  - -1.4146341463414633
  train_neg_coverage_error_oob:
  - -1.464705882352941
  - -1.5153374233128833
  - -1.5644171779141105
  - -1.5535714285714286
  - -1.6097560975609757
  train_neg_hamming_loss_macro:
  - -0.1892156862745098
  - -0.20040899795501024
  - -0.20449897750511248
  - -0.20039682539682543
  - -0.20528455284552846
  train_neg_hamming_loss_macro_oob:
  - -0.19705882352941173
  - -0.2034764826175869
  - -0.20654396728016364
  - -0.20039682539682543
  - -0.20528455284552846
  train_neg_hamming_loss_micro:
  - -0.1892156862745098
  - -0.20040899795501022
  - -0.20449897750511248
  - -0.2003968253968254
  - -0.20528455284552846
  train_neg_hamming_loss_micro_oob:
  - -0.19705882352941176
  - -0.2034764826175869
  - -0.2065439672801636
  - -0.2003968253968254
  - -0.20528455284552846
  train_neg_hamming_loss_samples:
  - -0.18921568627450983
  - -0.20040899795501024
  - -0.20449897750511248
  - -0.20039682539682538
  - -0.2052845528455285
  train_neg_hamming_loss_samples_oob:
  - -0.19705882352941176
  - -0.20347648261758694
  - -0.20654396728016364
  - -0.20039682539682538
  - -0.2052845528455285
  train_neg_hamming_loss_weighted:
  - -0.2925160163075131
  - -0.3130674846625767
  - -0.31865395128469903
  - -0.3142975011786893
  - -0.3207558560734122
  train_neg_hamming_loss_weighted_oob:
  - -0.30850320326150266
  - -0.3191717791411043
  - -0.32272368341128593
  - -0.3142975011786893
  - -0.3207558560734122
  train_neg_label_ranking_loss:
  - -0.024411764705882355
  - -0.02062031356509884
  - -0.027453987730061347
  - -0.030274470899470902
  - -0.03314701897018971
  train_neg_label_ranking_loss_oob:
  - -0.04926470588235294
  - -0.05305044308111793
  - -0.05881049761417859
  - -0.0636739417989418
  - -0.07245934959349593
  train_precision_macro:
  - 0.8107843137254903
  - 0.7995910020449898
  - 0.7955010224948875
  - 0.7996031746031748
  - 0.7947154471544716
  train_precision_macro_oob:
  - 0.8029411764705884
  - 0.796523517382413
  - 0.7934560327198364
  - 0.7996031746031748
  - 0.7947154471544716
  train_precision_micro:
  - 0.8107843137254902
  - 0.7995910020449898
  - 0.7955010224948875
  - 0.7996031746031746
  - 0.7947154471544715
  train_precision_micro_oob:
  - 0.8029411764705883
  - 0.7965235173824131
  - 0.7934560327198364
  - 0.7996031746031746
  - 0.7947154471544715
  train_precision_samples:
  - 0.8107843137254901
  - 0.7995910020449897
  - 0.7955010224948873
  - 0.7996031746031745
  - 0.7947154471544714
  train_precision_samples_oob:
  - 0.8029411764705883
  - 0.796523517382413
  - 0.7934560327198363
  - 0.7996031746031745
  - 0.7947154471544714
  train_precision_weighted:
  - 0.7074839836924869
  - 0.6869325153374234
  - 0.681346048715301
  - 0.6857024988213107
  - 0.6792441439265877
  train_precision_weighted_oob:
  - 0.6914967967384974
  - 0.6808282208588957
  - 0.677276316588714
  - 0.6857024988213107
  - 0.6792441439265877
  train_recall_macro:
  - 0.8107843137254903
  - 0.7995910020449898
  - 0.7955010224948875
  - 0.7996031746031748
  - 0.7947154471544716
  train_recall_macro_oob:
  - 0.8029411764705884
  - 0.796523517382413
  - 0.7934560327198364
  - 0.7996031746031748
  - 0.7947154471544716
  train_recall_micro:
  - 0.8107843137254902
  - 0.7995910020449898
  - 0.7955010224948875
  - 0.7996031746031746
  - 0.7947154471544715
  train_recall_micro_oob:
  - 0.8029411764705883
  - 0.7965235173824131
  - 0.7934560327198364
  - 0.7996031746031746
  - 0.7947154471544715
  train_recall_samples:
  - 0.8107843137254901
  - 0.7995910020449897
  - 0.7955010224948873
  - 0.7996031746031745
  - 0.7947154471544714
  train_recall_samples_oob:
  - 0.8029411764705883
  - 0.796523517382413
  - 0.7934560327198363
  - 0.7996031746031745
  - 0.7947154471544714
  train_recall_weighted:
  - 0.7074839836924869
  - 0.6869325153374234
  - 0.681346048715301
  - 0.6857024988213107
  - 0.6792441439265877
  train_recall_weighted_oob:
  - 0.6914967967384974
  - 0.6808282208588957
  - 0.677276316588714
  - 0.6857024988213107
  - 0.6792441439265877
  train_roc_auc_macro:
  - 0.9939153701776995
  - 0.976884403499068
  - 0.9754878104579534
  - 0.981359538317303
  - 0.9734103186393798
  train_roc_auc_macro_oob:
  - 0.9760884070120995
  - 0.9650355304804665
  - 0.9542923725088904
  - 0.9670653015658447
  - 0.9506741339467167
  train_roc_auc_micro:
  - 0.9889067757631509
  - 0.9779209511568123
  - 0.975451668878228
  - 0.9759170085743065
  - 0.9753836317135549
  train_roc_auc_micro_oob:
  - 0.9655341451015517
  - 0.9580976863753213
  - 0.9510755843625599
  - 0.9502247991548534
  - 0.9509065356663543
  train_roc_auc_samples:
  - 0.9755882352941176
  - 0.9793796864349011
  - 0.9725460122699386
  - 0.9697255291005291
  - 0.9668529810298103
  train_roc_auc_samples_oob:
  - 0.950735294117647
  - 0.9469495569188819
  - 0.9411895023858214
  - 0.9363260582010582
  - 0.9275406504065041
  train_roc_auc_weighted:
  - 0.9892809369482648
  - 0.9778724203223765
  - 0.971859256901361
  - 0.9777789746973536
  - 0.9796600091754185
  train_roc_auc_weighted_oob:
  - 0.9698829323433601
  - 0.9542753445336826
  - 0.9451260050735856
  - 0.9558124373176228
  - 0.9529684044079154
start: 2023-12-21 08:28:09.179046
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
