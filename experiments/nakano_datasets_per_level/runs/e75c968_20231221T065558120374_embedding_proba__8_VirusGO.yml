active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          oJmZmZmZEUCAmZmZmZn5vwCamZmZmdk/YGZmZmZmEsCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:57:02.800964
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__8
  params: {}
hash: e75c9683b85ce12aa2d1a35734964e19f56518e120094be088e7b22f0b20a081
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e75c968_20231221T065558120374_embedding_proba__8_VirusGO.yml
results:
  fit_time:
  - 48.66305613517761
  - 49.022701263427734
  - 50.00906944274902
  - 49.60054016113281
  - 50.43279266357422
  score_time:
  - 4.855165243148804
  - 4.936872482299805
  - 5.342652797698975
  - 5.4237120151519775
  - 5.203413248062134
  test_average_precision_macro:
  - 0.9428922712876
  - 0.9742742168982979
  - 0.9211331888667528
  - 0.8935252119244063
  - 0.9666101892199143
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.929957498558192
  - 0.9701621897783423
  - 0.9385974233860617
  - 0.8941837000661731
  - 0.944744731886296
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9504504504504504
  - 0.9593023255813954
  - 0.935772357723577
  - 0.9264492753623187
  - 0.9555555555555555
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9542276434383278
  - 0.9826064964447316
  - 0.9431539130803838
  - 0.9119881741143311
  - 0.9605313028095763
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9144144144144145
  - 0.9573643410852712
  - 0.9471544715447154
  - 0.927536231884058
  - 0.9416666666666668
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9144144144144144
  - 0.9573643410852714
  - 0.9471544715447154
  - 0.927536231884058
  - 0.9416666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9144144144144145
  - 0.9573643410852715
  - 0.9471544715447155
  - 0.9275362318840581
  - 0.9416666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8963044677330392
  - 0.958139534883721
  - 0.9287804878048782
  - 0.9025919732441472
  - 0.9284313725490198
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8449186991869918
  - 0.9193163519250476
  - 0.9014754410103247
  - 0.8667838930443973
  - 0.8910521633153511
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8423236514522822
  - 0.9182156133828996
  - 0.8996138996138996
  - 0.8648648648648649
  - 0.889763779527559
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8674388674388674
  - 0.9285714285714286
  - 0.9146341463414634
  - 0.886128364389234
  - 0.9071428571428573
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8125435540069688
  - 0.9207957839262186
  - 0.8681743011510454
  - 0.8241737523411732
  - 0.8676822900906181
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9504504504504506
  - 0.9593023255813954
  - 0.9357723577235773
  - 0.9264492753623187
  - 0.9555555555555555
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5988807261453776
  - 0.6623765660164995
  - 0.7883652019887815
  - 0.6012337824635998
  - 0.6492754426307908
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7395871402543452
  - 0.8597398249192902
  - 0.8314402698061933
  - 0.7520000002061402
  - 0.8196722119864109
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7275865173866057
  - 0.8115666650256051
  - 0.808044442149627
  - 0.7307303122199535
  - 0.7719917281883408
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6711350623220744
  - 0.8287315201142724
  - 0.8016636848639248
  - 0.7075764651557238
  - 0.7795081121188651
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9629981014478772
  - 0.9707924871241144
  - 0.9551915842779832
  - 0.9450667059036127
  - 0.9695258033860764
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4594594594594594
  - -1.2790697674418605
  - -1.4390243902439024
  - -1.3478260869565217
  - -1.4
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0855855855855856
  - -0.04263565891472868
  - -0.052845528455284556
  - -0.07246376811594202
  - -0.05833333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08558558558558559
  - -0.04263565891472868
  - -0.052845528455284556
  - -0.07246376811594203
  - -0.058333333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08558558558558559
  - -0.04263565891472868
  - -0.05284552845528455
  - -0.07246376811594203
  - -0.05833333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10369553226696085
  - -0.04186046511627906
  - -0.07121951219512196
  - -0.09740802675585283
  - -0.07156862745098039
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02702702702702703
  - -0.022674418604651164
  - -0.036585365853658534
  - -0.044565217391304354
  - -0.024930555555555556
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9144144144144145
  - 0.9573643410852712
  - 0.9471544715447154
  - 0.927536231884058
  - 0.9416666666666668
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9144144144144144
  - 0.9573643410852714
  - 0.9471544715447154
  - 0.927536231884058
  - 0.9416666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9144144144144145
  - 0.9573643410852715
  - 0.9471544715447155
  - 0.9275362318840581
  - 0.9416666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8963044677330392
  - 0.958139534883721
  - 0.9287804878048782
  - 0.9025919732441472
  - 0.9284313725490198
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9144144144144145
  - 0.9573643410852712
  - 0.9471544715447154
  - 0.927536231884058
  - 0.9416666666666668
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9144144144144144
  - 0.9573643410852714
  - 0.9471544715447154
  - 0.927536231884058
  - 0.9416666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9144144144144145
  - 0.9573643410852715
  - 0.9471544715447155
  - 0.9275362318840581
  - 0.9416666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8963044677330392
  - 0.958139534883721
  - 0.9287804878048782
  - 0.9025919732441472
  - 0.9284313725490198
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9797342495160332
  - 0.9948658594491927
  - 0.9711512983571806
  - 0.9484670820877718
  - 0.9854450838306338
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9769965789784123
  - 0.99125
  - 0.976530612244898
  - 0.961195054945055
  - 0.9835045129162775
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.972972972972973
  - 0.9773255813953488
  - 0.9634146341463414
  - 0.9554347826086955
  - 0.9750694444444445
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.976711153669679
  - 0.9947578347578349
  - 0.9727702702702702
  - 0.9486250376502366
  - 0.9762006251776072
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9837283407047742
  - 0.9828502833183174
  - 0.9845109233088981
  - 0.9942051048763757
  - 0.9768653905082311
  train_average_precision_macro_oob:
  - 0.9313467985052869
  - 0.9299240141009832
  - 0.9307002287800262
  - 0.9575199601072223
  - 0.9123276602949706
  train_average_precision_micro:
  - 0.9758981101166881
  - 0.9730549767429412
  - 0.9782687440468381
  - 0.9826917298034473
  - 0.9693858653448311
  train_average_precision_micro_oob:
  - 0.9396163548642649
  - 0.936916159118598
  - 0.9400326354159231
  - 0.9529756041876863
  - 0.9310028328793114
  train_average_precision_samples:
  - 0.9838235294117647
  - 0.975609756097561
  - 0.9839357429718876
  - 0.9906832298136646
  - 0.972554890219561
  train_average_precision_samples_oob:
  - 0.9577450980392157
  - 0.9436991869918698
  - 0.9545180722891565
  - 0.9725672877846789
  - 0.9463073852295407
  train_average_precision_weighted:
  - 0.9862507311543464
  - 0.9831889151570119
  - 0.9861688858870991
  - 0.9928461503210099
  - 0.9818996262078263
  train_average_precision_weighted_oob:
  - 0.9469331547283845
  - 0.9463440508024819
  - 0.9493604281349493
  - 0.9642784798397919
  - 0.9373500607901972
  train_f1_macro:
  - 0.9627450980392158
  - 0.9542682926829268
  - 0.96285140562249
  - 0.9596273291925465
  - 0.9510978043912175
  train_f1_macro_oob:
  - 0.9372549019607844
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.934782608695652
  - 0.9311377245508982
  train_f1_micro:
  - 0.9627450980392157
  - 0.9542682926829268
  - 0.9628514056224899
  - 0.9596273291925466
  - 0.9510978043912176
  train_f1_micro_oob:
  - 0.9372549019607843
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.9347826086956522
  - 0.9311377245508982
  train_f1_samples:
  - 0.9627450980392156
  - 0.9542682926829268
  - 0.96285140562249
  - 0.9596273291925466
  - 0.9510978043912175
  train_f1_samples_oob:
  - 0.9372549019607842
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.9347826086956522
  - 0.9311377245508982
  train_f1_weighted:
  - 0.9546798029556651
  - 0.9457558560734122
  - 0.9541930096624118
  - 0.9588819875776399
  - 0.9475675514642357
  train_f1_weighted_oob:
  - 0.9284555201390903
  - 0.9202487321902922
  - 0.9251461290707385
  - 0.9286024844720496
  - 0.9195936485238478
  train_jaccard_macro:
  - 0.9292920288926821
  - 0.9130298568353186
  - 0.9289717372517955
  - 0.9226353028014191
  - 0.9071797251908346
  train_jaccard_macro_oob:
  - 0.8828824877196236
  - 0.8806145762970011
  - 0.8816835612559325
  - 0.8786251763781637
  - 0.8719512369889562
  train_jaccard_micro:
  - 0.9281663516068053
  - 0.9125364431486881
  - 0.9283639883833494
  - 0.9223880597014925
  - 0.9067554709800191
  train_jaccard_micro_oob:
  - 0.8819188191881919
  - 0.8796561604584527
  - 0.8810198300283286
  - 0.8775510204081632
  - 0.8711484593837535
  train_jaccard_samples:
  - 0.9401960784313724
  - 0.9253774680603949
  - 0.9400458978772233
  - 0.9343389529724935
  - 0.920302252637582
  train_jaccard_samples_oob:
  - 0.8985994397759104
  - 0.8982288037166087
  - 0.8985943775100402
  - 0.8945578231292517
  - 0.8902195608782436
  train_jaccard_weighted:
  - 0.9139148797293604
  - 0.897642879587838
  - 0.9126363889496805
  - 0.9212163807333928
  - 0.9006448748376779
  train_jaccard_weighted_oob:
  - 0.8673288839022686
  - 0.8531242825154113
  - 0.8611474423125276
  - 0.8679434620965294
  - 0.8516367280968103
  train_label_ranking_average_precision_score:
  - 0.9838235294117647
  - 0.9756097560975608
  - 0.9839357429718875
  - 0.9906832298136646
  - 0.9725548902195609
  train_label_ranking_average_precision_score_oob:
  - 0.9577450980392157
  - 0.9436991869918698
  - 0.9545180722891565
  - 0.9725672877846789
  - 0.9463073852295407
  train_matthews_corrcoef_macro:
  - 0.8312498249577683
  - 0.6818127819669741
  - 0.8490145489011686
  - 0.6878166388706525
  - 0.6403202268511404
  train_matthews_corrcoef_macro_oob:
  - 0.574127671694066
  - 0.6090765060265869
  - 0.6765655079810396
  - 0.5614666881521494
  - 0.5446942394702404
  train_matthews_corrcoef_micro:
  - 0.8804532459951594
  - 0.8558886460768547
  - 0.8824811222129697
  - 0.8741720332105025
  - 0.8426025809869513
  train_matthews_corrcoef_micro_oob:
  - 0.7946081612156247
  - 0.7957221391316722
  - 0.796271087281427
  - 0.7930028483274593
  - 0.7751274680693282
  train_matthews_corrcoef_samples:
  - 0.8712967777287485
  - 0.8406927371294225
  - 0.8805797728501463
  - 0.8606120796556329
  - 0.819125387794561
  train_matthews_corrcoef_samples_oob:
  - 0.7491347514465936
  - 0.7712955491411044
  - 0.76441247023579
  - 0.7499009104099695
  - 0.7351524084663906
  train_matthews_corrcoef_weighted:
  - 0.8620124971472589
  - 0.8260594989549106
  - 0.867617056924961
  - 0.8503396883030366
  - 0.8119645045514211
  train_matthews_corrcoef_weighted_oob:
  - 0.7494990753899655
  - 0.7549677177317865
  - 0.767408090430631
  - 0.7500515963092369
  - 0.7257409953683126
  train_ndgc:
  - 0.9882702144322343
  - 0.98274228164003
  - 0.9882569309802388
  - 0.9936047908811666
  - 0.9806293342570322
  train_ndgc_oob:
  - 0.9700130230077837
  - 0.9590888548464682
  - 0.9672311912467427
  - 0.9810678312903499
  - 0.9614372100281315
  train_neg_coverage_error:
  - -1.2352941176470589
  - -1.298780487804878
  - -1.2650602409638554
  - -1.2732919254658386
  - -1.2874251497005988
  train_neg_coverage_error_oob:
  - -1.3529411764705883
  - -1.4024390243902438
  - -1.3734939759036144
  - -1.329192546583851
  - -1.3892215568862276
  train_neg_hamming_loss_macro:
  - -0.03725490196078431
  - -0.04573170731707316
  - -0.037148594377510044
  - -0.040372670807453416
  - -0.04890219560878243
  train_neg_hamming_loss_macro_oob:
  - -0.06274509803921567
  - -0.06402439024390244
  - -0.06325301204819277
  - -0.06521739130434782
  - -0.06886227544910178
  train_neg_hamming_loss_micro:
  - -0.03725490196078431
  - -0.04573170731707317
  - -0.03714859437751004
  - -0.040372670807453416
  - -0.04890219560878244
  train_neg_hamming_loss_micro_oob:
  - -0.06274509803921569
  - -0.06402439024390244
  - -0.06325301204819277
  - -0.06521739130434782
  - -0.0688622754491018
  train_neg_hamming_loss_samples:
  - -0.03725490196078431
  - -0.04573170731707317
  - -0.03714859437751004
  - -0.04037267080745341
  - -0.04890219560878243
  train_neg_hamming_loss_samples_oob:
  - -0.06274509803921569
  - -0.06402439024390244
  - -0.06325301204819277
  - -0.06521739130434782
  - -0.06886227544910178
  train_neg_hamming_loss_weighted:
  - -0.04532019704433497
  - -0.05424414392658779
  - -0.04580699033758797
  - -0.041118012422360246
  - -0.052432448535764294
  train_neg_hamming_loss_weighted_oob:
  - -0.0715444798609099
  - -0.0797512678097078
  - -0.0748538709292616
  - -0.07139751552795032
  - -0.08040635147615216
  train_neg_label_ranking_loss:
  - -0.008088235294117648
  - -0.012652439024390245
  - -0.009186746987951808
  - -0.005279503105590062
  - -0.01526946107784431
  train_neg_label_ranking_loss_oob:
  - -0.02882352941176471
  - -0.03246951219512195
  - -0.028748326639892904
  - -0.01482056590752243
  - -0.0345808383233533
  train_precision_macro:
  - 0.9627450980392158
  - 0.9542682926829268
  - 0.96285140562249
  - 0.9596273291925465
  - 0.9510978043912175
  train_precision_macro_oob:
  - 0.9372549019607844
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.934782608695652
  - 0.9311377245508982
  train_precision_micro:
  - 0.9627450980392157
  - 0.9542682926829268
  - 0.9628514056224899
  - 0.9596273291925466
  - 0.9510978043912176
  train_precision_micro_oob:
  - 0.9372549019607843
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.9347826086956522
  - 0.9311377245508982
  train_precision_samples:
  - 0.9627450980392156
  - 0.9542682926829268
  - 0.96285140562249
  - 0.9596273291925466
  - 0.9510978043912175
  train_precision_samples_oob:
  - 0.9372549019607842
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.9347826086956522
  - 0.9311377245508982
  train_precision_weighted:
  - 0.9546798029556651
  - 0.9457558560734122
  - 0.9541930096624118
  - 0.9588819875776399
  - 0.9475675514642357
  train_precision_weighted_oob:
  - 0.9284555201390903
  - 0.9202487321902922
  - 0.9251461290707385
  - 0.9286024844720496
  - 0.9195936485238478
  train_recall_macro:
  - 0.9627450980392158
  - 0.9542682926829268
  - 0.96285140562249
  - 0.9596273291925465
  - 0.9510978043912175
  train_recall_macro_oob:
  - 0.9372549019607844
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.934782608695652
  - 0.9311377245508982
  train_recall_micro:
  - 0.9627450980392157
  - 0.9542682926829268
  - 0.9628514056224899
  - 0.9596273291925466
  - 0.9510978043912176
  train_recall_micro_oob:
  - 0.9372549019607843
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.9347826086956522
  - 0.9311377245508982
  train_recall_samples:
  - 0.9627450980392156
  - 0.9542682926829268
  - 0.96285140562249
  - 0.9596273291925466
  - 0.9510978043912175
  train_recall_samples_oob:
  - 0.9372549019607842
  - 0.9359756097560976
  - 0.9367469879518072
  - 0.9347826086956522
  - 0.9311377245508982
  train_recall_weighted:
  - 0.9546798029556651
  - 0.9457558560734122
  - 0.9541930096624118
  - 0.9588819875776399
  - 0.9475675514642357
  train_recall_weighted_oob:
  - 0.9284555201390903
  - 0.9202487321902922
  - 0.9251461290707385
  - 0.9286024844720496
  - 0.9195936485238478
  train_roc_auc_macro:
  - 0.9955555742942747
  - 0.9942824462308186
  - 0.995066132906618
  - 0.9976775776241067
  - 0.9935490056623415
  train_roc_auc_macro_oob:
  - 0.9728495975379641
  - 0.9731781787663442
  - 0.9779592507064522
  - 0.9859453098042864
  - 0.970545527337487
  train_roc_auc_micro:
  - 0.9929786374516885
  - 0.9924571421336507
  - 0.9938929346335137
  - 0.99536227154047
  - 0.9913044018360135
  train_roc_auc_micro_oob:
  - 0.9779500877293474
  - 0.9774948722493733
  - 0.9791505598922612
  - 0.9851044386422978
  - 0.9749690995708101
  train_roc_auc_samples:
  - 0.9919117647058824
  - 0.9873475609756098
  - 0.9908132530120484
  - 0.9947204968944098
  - 0.9847305389221557
  train_roc_auc_samples_oob:
  - 0.9711764705882353
  - 0.9675304878048782
  - 0.9712516733601072
  - 0.9851794340924775
  - 0.9654191616766467
  train_roc_auc_weighted:
  - 0.9937751370538688
  - 0.9915085338483179
  - 0.9933876155472688
  - 0.9959997501249376
  - 0.9922014642617182
  train_roc_auc_weighted_oob:
  - 0.9729619039432995
  - 0.9730323860497584
  - 0.9781706117040275
  - 0.9833836607110156
  - 0.9726382947791891
start: 2023-12-21 06:55:58.120374
wrapper: null
