active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T8AMzMzMzPjv0AzMzMzMwNAADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:39:40.447672
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__6
  params: {}
hash: fa7ab43496a1553f107140c66fe6c6de526e3db8d9f5db5ab917a3ccbffd9ccf
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fa7ab43_20231221T113912652110_embedding__6_VirusPseAAC.yml
results:
  fit_time:
  - 18.37151837348938
  - 18.365656852722168
  - 18.61701273918152
  - 17.97201442718506
  - 17.974403619766235
  score_time:
  - 2.7056925296783447
  - 2.8643717765808105
  - 2.6963088512420654
  - 2.6270148754119873
  - 2.6124887466430664
  test_average_precision_macro:
  - 0.4177171472001026
  - 0.2907489311918135
  - 0.42447471773741624
  - 0.3033596705034561
  - 0.4441260835953062
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.390838871652528
  - 0.4347299621009496
  - 0.4553568170882473
  - 0.4158082070559711
  - 0.4409761588240792
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6201219512195121
  - 0.6972222222222222
  - 0.6448717948717948
  - 0.6507275132275132
  - 0.6143410852713178
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4185672848779338
  - 0.42801818844452505
  - 0.44962794522223365
  - 0.40572333431431296
  - 0.44635338259592544
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7926829268292682
  - 0.8015873015873015
  - 0.7905982905982906
  - 0.7976190476190476
  - 0.8023255813953488
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7926829268292683
  - 0.8015873015873016
  - 0.7905982905982906
  - 0.7976190476190477
  - 0.8023255813953488
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7926829268292683
  - 0.8015873015873017
  - 0.7905982905982905
  - 0.7976190476190478
  - 0.802325581395349
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6829268292682926
  - 0.6752380952380952
  - 0.6771323914181058
  - 0.6755368814192344
  - 0.6976744186046511
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6812234548100626
  - 0.6965651831159706
  - 0.6791197159177873
  - 0.6906128021635897
  - 0.6928920409771474
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6565656565656566
  - 0.6688741721854304
  - 0.6537102473498233
  - 0.6633663366336634
  - 0.6699029126213593
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6643437862950059
  - 0.6734693877551021
  - 0.6593406593406596
  - 0.6695011337868482
  - 0.6744186046511629
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5376280415044036
  - 0.5293114770955082
  - 0.5323670709232193
  - 0.5287367422504983
  - 0.553604969174431
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6201219512195122
  - 0.6972222222222222
  - 0.6448717948717948
  - 0.6507275132275132
  - 0.6143410852713177
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7196507028913274
  - 0.7739258342938099
  - 0.7377114587946303
  - 0.7408578745517005
  - 0.7101606865845622
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.4146341463414633
  - -2.2142857142857144
  - -2.41025641025641
  - -2.4047619047619047
  - -2.488372093023256
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2073170731707317
  - -0.19841269841269846
  - -0.2094017094017094
  - -0.2023809523809524
  - -0.19767441860465115
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2073170731707317
  - -0.1984126984126984
  - -0.2094017094017094
  - -0.20238095238095238
  - -0.19767441860465115
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20731707317073167
  - -0.19841269841269837
  - -0.20940170940170938
  - -0.20238095238095233
  - -0.19767441860465113
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3170731707317073
  - -0.32476190476190475
  - -0.3228676085818943
  - -0.32446311858076554
  - -0.3023255813953488
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2307588075880759
  - -0.20773809523809522
  - -0.22820512820512817
  - -0.23862433862433857
  - -0.26279069767441854
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7926829268292682
  - 0.8015873015873015
  - 0.7905982905982906
  - 0.7976190476190476
  - 0.8023255813953488
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7926829268292683
  - 0.8015873015873016
  - 0.7905982905982906
  - 0.7976190476190477
  - 0.8023255813953488
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7926829268292683
  - 0.8015873015873017
  - 0.7905982905982905
  - 0.7976190476190478
  - 0.802325581395349
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6829268292682926
  - 0.6752380952380952
  - 0.6771323914181058
  - 0.6755368814192344
  - 0.6976744186046511
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7926829268292682
  - 0.8015873015873015
  - 0.7905982905982906
  - 0.7976190476190476
  - 0.8023255813953488
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7926829268292683
  - 0.8015873015873016
  - 0.7905982905982906
  - 0.7976190476190477
  - 0.8023255813953488
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7926829268292683
  - 0.8015873015873017
  - 0.7905982905982905
  - 0.7976190476190478
  - 0.802325581395349
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6829268292682926
  - 0.6752380952380952
  - 0.6771323914181058
  - 0.6755368814192344
  - 0.6976744186046511
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6441202433849492
  - 0.46975236975881973
  - 0.6042055788059625
  - 0.5967096582844615
  - 0.6586254159783572
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7753645047762695
  - 0.7716831683168317
  - 0.7724214009928295
  - 0.768510389230319
  - 0.7865870986075589
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7692411924119242
  - 0.7922619047619047
  - 0.7717948717948718
  - 0.7613756613756614
  - 0.7372093023255814
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5440519039134957
  - 0.5605584795321638
  - 0.5850447688957006
  - 0.5760039745466008
  - 0.6016423663482487
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.6985319219044929
  - 0.6954980102763276
  - 0.7160691686545815
  - 0.7147910625944798
  - 0.7006569891948814
  train_average_precision_macro_oob:
  - 0.36047744185146363
  - 0.37786982401597924
  - 0.30803926845403956
  - 0.4268725795760346
  - 0.351019719119386
  train_average_precision_micro:
  - 0.7414083146082531
  - 0.7468743982632154
  - 0.7580527635971979
  - 0.7682395359637887
  - 0.7483821940531714
  train_average_precision_micro_oob:
  - 0.5400401183457427
  - 0.5167803763072875
  - 0.5146599449414619
  - 0.5727247161914888
  - 0.5299003883956954
  train_average_precision_samples:
  - 0.8171184738955822
  - 0.8087373737373738
  - 0.8147156084656084
  - 0.8196969696969697
  - 0.8092479674796746
  train_average_precision_samples_oob:
  - 0.6961680053547524
  - 0.6680134680134681
  - 0.6902116402116403
  - 0.7104545454545454
  - 0.6942411924119241
  train_average_precision_weighted:
  - 0.7362681130856912
  - 0.733512815660309
  - 0.755206813957207
  - 0.7551575245684912
  - 0.7417135988506356
  train_average_precision_weighted_oob:
  - 0.508643037274117
  - 0.48593608438320457
  - 0.4697406954129532
  - 0.5508988543621827
  - 0.49835401840822263
  train_f1_macro:
  - 0.8072289156626505
  - 0.8060606060606061
  - 0.8095238095238096
  - 0.8030303030303031
  - 0.8079268292682927
  train_f1_macro_oob:
  - 0.7981927710843374
  - 0.7959595959595961
  - 0.7986111111111112
  - 0.796969696969697
  - 0.7957317073170732
  train_f1_micro:
  - 0.8072289156626506
  - 0.806060606060606
  - 0.8095238095238095
  - 0.803030303030303
  - 0.8079268292682927
  train_f1_micro_oob:
  - 0.7981927710843374
  - 0.795959595959596
  - 0.7986111111111112
  - 0.796969696969697
  - 0.7957317073170732
  train_f1_samples:
  - 0.8072289156626504
  - 0.8060606060606059
  - 0.8095238095238095
  - 0.8030303030303029
  - 0.8079268292682927
  train_f1_samples_oob:
  - 0.7981927710843372
  - 0.7959595959595959
  - 0.798611111111111
  - 0.796969696969697
  - 0.795731707317073
  train_f1_weighted:
  - 0.7003536534196488
  - 0.7042904290429042
  - 0.7055184142622567
  - 0.6961555857078245
  - 0.7026149739109333
  train_f1_weighted_oob:
  - 0.6819217167176167
  - 0.6837683768376838
  - 0.6832922824302136
  - 0.6837931554349465
  - 0.6780427132629535
  train_jaccard_macro:
  - 0.6991542844656106
  - 0.696426003211394
  - 0.7015358283222205
  - 0.6937212332387629
  - 0.6996879996666481
  train_jaccard_macro_oob:
  - 0.6899038730062433
  - 0.6860722823836092
  - 0.6902964730534494
  - 0.6875720642335219
  - 0.6869658033744721
  train_jaccard_micro:
  - 0.6767676767676768
  - 0.6751269035532995
  - 0.68
  - 0.6708860759493671
  - 0.6777493606138107
  train_jaccard_micro_oob:
  - 0.6641604010025063
  - 0.6610738255033557
  - 0.6647398843930635
  - 0.6624685138539043
  - 0.660759493670886
  train_jaccard_samples:
  - 0.6844520940906483
  - 0.683982683982684
  - 0.6892006802721089
  - 0.6780663780663782
  - 0.6877177700348432
  train_jaccard_samples_oob:
  - 0.669391853126793
  - 0.6670995670995672
  - 0.6704931972789115
  - 0.6681096681096682
  - 0.6668118466898955
  train_jaccard_weighted:
  - 0.5554585689436432
  - 0.5595921404914249
  - 0.5607261225206434
  - 0.5513665410238742
  - 0.5580906641502031
  train_jaccard_weighted_oob:
  - 0.5365957337601076
  - 0.5385566358427077
  - 0.5378382027690783
  - 0.5388241612378774
  - 0.5324659178085545
  train_label_ranking_average_precision_score:
  - 0.8171184738955822
  - 0.8087373737373735
  - 0.8147156084656084
  - 0.8196969696969695
  - 0.8092479674796748
  train_label_ranking_average_precision_score_oob:
  - 0.6961680053547524
  - 0.6680134680134682
  - 0.6902116402116404
  - 0.7104545454545451
  - 0.694241192411924
  train_matthews_corrcoef_macro:
  - 0.06637227622631965
  - 0.06880913647388687
  - 0.0734352083751227
  - 0.053314592580815924
  - 0.07256145381322247
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.1899101662672236
  - 0.19951446418359842
  - 0.20916965719637098
  - 0.15471005797486972
  - 0.2193008640849173
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.05200274416887757
  - 0.058378518375961676
  - 0.06547619047619048
  - 0.03413609413353743
  - 0.07317073170731707
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.13549108204206162
  - 0.13939515451875487
  - 0.1496356033967596
  - 0.10847914400679681
  - 0.14704466074567482
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8647822339811876
  - 0.8590989246757028
  - 0.8632015172814358
  - 0.8679943980824808
  - 0.8600407265633244
  train_ndgc_oob:
  - 0.7733359020499194
  - 0.7530447619594716
  - 0.7683268792406872
  - 0.7844720738409944
  - 0.7730919712414122
  train_neg_coverage_error:
  - -1.8373493975903614
  - -1.8363636363636364
  - -1.8630952380952381
  - -1.8303030303030303
  - -1.9146341463414633
  train_neg_coverage_error_oob:
  - -2.3132530120481927
  - -2.3454545454545452
  - -2.3452380952380953
  - -2.272727272727273
  - -2.347560975609756
  train_neg_hamming_loss_macro:
  - -0.19277108433734944
  - -0.19393939393939394
  - -0.19047619047619047
  - -0.196969696969697
  - -0.1920731707317073
  train_neg_hamming_loss_macro_oob:
  - -0.2018072289156627
  - -0.20404040404040402
  - -0.20138888888888892
  - -0.203030303030303
  - -0.20426829268292682
  train_neg_hamming_loss_micro:
  - -0.1927710843373494
  - -0.19393939393939394
  - -0.19047619047619047
  - -0.19696969696969696
  - -0.19207317073170732
  train_neg_hamming_loss_micro_oob:
  - -0.20180722891566266
  - -0.20404040404040405
  - -0.2013888888888889
  - -0.20303030303030303
  - -0.20426829268292682
  train_neg_hamming_loss_samples:
  - -0.19277108433734938
  - -0.19393939393939388
  - -0.19047619047619047
  - -0.19696969696969696
  - -0.19207317073170732
  train_neg_hamming_loss_samples_oob:
  - -0.20180722891566266
  - -0.20404040404040408
  - -0.20138888888888887
  - -0.20303030303030303
  - -0.20426829268292682
  train_neg_hamming_loss_weighted:
  - -0.2996463465803512
  - -0.29570957095709577
  - -0.2944815857377434
  - -0.30384441429217546
  - -0.2973850260890668
  train_neg_hamming_loss_weighted_oob:
  - -0.3180782832823833
  - -0.31623162316231623
  - -0.31670771756978655
  - -0.3162068445650535
  - -0.3219572867370465
  train_neg_label_ranking_loss:
  - -0.12228915662650602
  - -0.11801346801346801
  - -0.12668650793650796
  - -0.1149158249158249
  - -0.1296409214092141
  train_neg_label_ranking_loss_oob:
  - -0.2202309236947791
  - -0.22414141414141414
  - -0.2287698412698413
  - -0.20885521885521885
  - -0.22198509485094853
  train_precision_macro:
  - 0.8072289156626505
  - 0.8060606060606061
  - 0.8095238095238096
  - 0.8030303030303031
  - 0.8079268292682927
  train_precision_macro_oob:
  - 0.7981927710843374
  - 0.7959595959595961
  - 0.7986111111111112
  - 0.796969696969697
  - 0.7957317073170732
  train_precision_micro:
  - 0.8072289156626506
  - 0.806060606060606
  - 0.8095238095238095
  - 0.803030303030303
  - 0.8079268292682927
  train_precision_micro_oob:
  - 0.7981927710843374
  - 0.795959595959596
  - 0.7986111111111112
  - 0.796969696969697
  - 0.7957317073170732
  train_precision_samples:
  - 0.8072289156626504
  - 0.8060606060606059
  - 0.8095238095238095
  - 0.8030303030303029
  - 0.8079268292682927
  train_precision_samples_oob:
  - 0.7981927710843372
  - 0.7959595959595959
  - 0.798611111111111
  - 0.796969696969697
  - 0.795731707317073
  train_precision_weighted:
  - 0.7003536534196488
  - 0.7042904290429042
  - 0.7055184142622567
  - 0.6961555857078245
  - 0.7026149739109333
  train_precision_weighted_oob:
  - 0.6819217167176167
  - 0.6837683768376838
  - 0.6832922824302136
  - 0.6837931554349465
  - 0.6780427132629535
  train_recall_macro:
  - 0.8072289156626505
  - 0.8060606060606061
  - 0.8095238095238096
  - 0.8030303030303031
  - 0.8079268292682927
  train_recall_macro_oob:
  - 0.7981927710843374
  - 0.7959595959595961
  - 0.7986111111111112
  - 0.796969696969697
  - 0.7957317073170732
  train_recall_micro:
  - 0.8072289156626506
  - 0.806060606060606
  - 0.8095238095238095
  - 0.803030303030303
  - 0.8079268292682927
  train_recall_micro_oob:
  - 0.7981927710843374
  - 0.795959595959596
  - 0.7986111111111112
  - 0.796969696969697
  - 0.7957317073170732
  train_recall_samples:
  - 0.8072289156626504
  - 0.8060606060606059
  - 0.8095238095238095
  - 0.8030303030303029
  - 0.8079268292682927
  train_recall_samples_oob:
  - 0.7981927710843372
  - 0.7959595959595959
  - 0.798611111111111
  - 0.796969696969697
  - 0.795731707317073
  train_recall_weighted:
  - 0.7003536534196488
  - 0.7042904290429042
  - 0.7055184142622567
  - 0.6961555857078245
  - 0.7026149739109333
  train_recall_weighted_oob:
  - 0.6819217167176167
  - 0.6837683768376838
  - 0.6832922824302136
  - 0.6837931554349465
  - 0.6780427132629535
  train_roc_auc_macro:
  - 0.802861937330221
  - 0.8148131926421608
  - 0.8225936909934601
  - 0.8158163625672711
  - 0.806009365907749
  train_roc_auc_macro_oob:
  - 0.6244850288600289
  - 0.6509415511788055
  - 0.5560958611767353
  - 0.6590864467008806
  - 0.5929142509418455
  train_roc_auc_micro:
  - 0.8793579273444101
  - 0.8846873900588028
  - 0.883866230150231
  - 0.8892293916980369
  - 0.8801585940031642
  train_roc_auc_micro_oob:
  - 0.7893363371820146
  - 0.7968600794089562
  - 0.7801548205489093
  - 0.8054026445718178
  - 0.7814757629477136
  train_roc_auc_samples:
  - 0.877710843373494
  - 0.881986531986532
  - 0.8733134920634921
  - 0.8850841750841751
  - 0.8703590785907859
  train_roc_auc_samples_oob:
  - 0.7797690763052209
  - 0.7758585858585859
  - 0.7712301587301587
  - 0.7911447811447812
  - 0.7780149051490515
  train_roc_auc_weighted:
  - 0.7636165313404119
  - 0.7695098487764043
  - 0.7926709705265761
  - 0.7871433861040901
  - 0.7705030601406452
  train_roc_auc_weighted_oob:
  - 0.6454759212595033
  - 0.6526347794689777
  - 0.6220077915864233
  - 0.682022510396512
  - 0.6222070415659002
start: 2023-12-21 11:39:12.652110
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
