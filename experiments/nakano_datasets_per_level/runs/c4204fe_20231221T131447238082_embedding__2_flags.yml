active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb/QzMzMzMz8PzAzMzMzM/O/MDMzMzMz87+gmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmDsCAmZmZmZnJP5iZmZmZmQFAoJmZmZmZ6b+YmZmZmZkBQA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz8z9AMzMzMzPzP0AzMzMzM/M/wMzMzMzM/L/AzMzMzMz8vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j80MzMzMzMDQDAzMzMzM+O/MDMzMzMz47/MzMzMzMwEwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+amZmZmZkJQMzMzMzMzPy/mJmZmZmZ6b80MzMzMzPzPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb/AmZmZmZnpPyAzMzMzM/O/AJmZmZmZyb/AmZmZmZnpPw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:14:55.886289
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__2
  params: {}
hash: c4204fe361cc4b3273ab8428a0f006f0a4fd08ceb113f4d2fe57a3d04e0ef548
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c4204fe_20231221T131447238082_embedding__2_flags.yml
results:
  fit_time:
  - 3.92661714553833
  - 3.8373491764068604
  - 3.9511818885803223
  - 4.14952540397644
  - 4.0165016651153564
  score_time:
  - 1.3990211486816406
  - 1.355907678604126
  - 1.2338981628417969
  - 1.3473379611968994
  - 1.1979939937591553
  test_average_precision_macro:
  - 0.7799368305586013
  - 0.7257762765340886
  - 0.760876719118798
  - 0.760583736367867
  - 0.7817348609198206
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8324848821887694
  - 0.8199983587425004
  - 0.7529597086206793
  - 0.8041453880499515
  - 0.8412916514647042
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8218762718762717
  - 0.8449822472848789
  - 0.8088244047619048
  - 0.8154731379731379
  - 0.8493964076858813
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8298345676864862
  - 0.8158515341514303
  - 0.7826706509154038
  - 0.8187897690021854
  - 0.8451928583370297
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.73992673992674
  - 0.7669172932330827
  - 0.7142857142857143
  - 0.7692307692307692
  - 0.7819548872180452
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.73992673992674
  - 0.7669172932330827
  - 0.7142857142857143
  - 0.7692307692307693
  - 0.7819548872180451
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7399267399267401
  - 0.7669172932330828
  - 0.7142857142857142
  - 0.7692307692307693
  - 0.7819548872180452
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.731054131054131
  - 0.7446074201898187
  - 0.7018939393939394
  - 0.7671720007486431
  - 0.780103668261563
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5909296887337817
  - 0.6300886773938986
  - 0.55940707011891
  - 0.6276150338554874
  - 0.6467881693005822
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5872093023255814
  - 0.6219512195121951
  - 0.5555555555555556
  - 0.625
  - 0.6419753086419753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6220837566991414
  - 0.6487373737373737
  - 0.5868939393939394
  - 0.6607226107226108
  - 0.6822036150983521
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5796460202244235
  - 0.5972976879154561
  - 0.5436572346034645
  - 0.6243312631777358
  - 0.642348977004719
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8218762718762719
  - 0.8449822472848789
  - 0.8088244047619048
  - 0.8154731379731377
  - 0.8493964076858813
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.19436212713887907
  - 0.19937266697262915
  - 0.15074110885397002
  - 0.23565904841273724
  - 0.2576305296387981
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.48012991745066713
  - 0.5312716648452939
  - 0.4262733650006551
  - 0.5387550763079019
  - 0.5639981908638625
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.43693884915130926
  - 0.516498235022893
  - 0.37544937234061243
  - 0.5121343951818895
  - 0.5174207474024026
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.18663887092368708
  - 0.1972733339483358
  - 0.13105955250378595
  - 0.21671197623540692
  - 0.23316715130869195
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.89888205705865
  - 0.9061390716877177
  - 0.8928309574880722
  - 0.8808682960469818
  - 0.906175878113619
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.897435897435898
  - -4.184210526315789
  - -4.725
  - -4.794871794871795
  - -4.526315789473684
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2600732600732601
  - -0.23308270676691728
  - -0.2857142857142857
  - -0.23076923076923078
  - -0.21804511278195488
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2600732600732601
  - -0.23308270676691728
  - -0.2857142857142857
  - -0.23076923076923078
  - -0.21804511278195488
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.26007326007326004
  - -0.23308270676691725
  - -0.2857142857142857
  - -0.2307692307692308
  - -0.21804511278195485
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2689458689458689
  - -0.2553925798101812
  - -0.2981060606060606
  - -0.23282799925135692
  - -0.219896331738437
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20598290598290597
  - -0.15789473684210528
  - -0.22000000000000003
  - -0.19957264957264959
  - -0.17149122807017547
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.73992673992674
  - 0.7669172932330827
  - 0.7142857142857143
  - 0.7692307692307692
  - 0.7819548872180452
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.73992673992674
  - 0.7669172932330827
  - 0.7142857142857143
  - 0.7692307692307693
  - 0.7819548872180451
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7399267399267401
  - 0.7669172932330828
  - 0.7142857142857142
  - 0.7692307692307693
  - 0.7819548872180452
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.731054131054131
  - 0.7446074201898187
  - 0.7018939393939394
  - 0.7671720007486431
  - 0.780103668261563
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.73992673992674
  - 0.7669172932330827
  - 0.7142857142857143
  - 0.7692307692307692
  - 0.7819548872180452
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.73992673992674
  - 0.7669172932330827
  - 0.7142857142857143
  - 0.7692307692307693
  - 0.7819548872180451
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7399267399267401
  - 0.7669172932330828
  - 0.7142857142857142
  - 0.7692307692307693
  - 0.7819548872180452
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.731054131054131
  - 0.7446074201898187
  - 0.7018939393939394
  - 0.7671720007486431
  - 0.780103668261563
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7869052911332769
  - 0.7873866213151928
  - 0.7456622197427064
  - 0.7252474504232932
  - 0.7908947458595321
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8281803542673108
  - 0.8524590163934427
  - 0.7933558558558559
  - 0.8290575354229283
  - 0.8480890999547716
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.8421052631578947
  - 0.78
  - 0.8004273504273504
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7914774055112033
  - 0.7605418943533696
  - 0.7098075812572182
  - 0.692527991068137
  - 0.744614727143576
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9421731820589532
  - 0.9491396071778208
  - 0.9444554078758707
  - 0.9520405292438836
  - 0.9430205683860419
  train_average_precision_macro_oob:
  - 0.72359327471613
  - 0.7443517551695686
  - 0.7409847675539932
  - 0.7415794823538199
  - 0.7480726339806194
  train_average_precision_micro:
  - 0.9402002819724471
  - 0.9418638733726628
  - 0.9431018050663947
  - 0.9476254883876457
  - 0.9453852706280162
  train_average_precision_micro_oob:
  - 0.7996710907120604
  - 0.8171183600135334
  - 0.822116851860649
  - 0.8192919878892331
  - 0.8205824433828977
  train_average_precision_samples:
  - 0.9156008704557093
  - 0.9134353378103378
  - 0.9158884766027623
  - 0.9259516129032257
  - 0.9208783577533578
  train_average_precision_samples_oob:
  - 0.8357826420890939
  - 0.822525691900692
  - 0.8291068851783137
  - 0.8491484895033282
  - 0.8382524420024421
  train_average_precision_weighted:
  - 0.971614289821011
  - 0.9739486771959666
  - 0.977395817829761
  - 0.9767954179137105
  - 0.9719727421335232
  train_average_precision_weighted_oob:
  - 0.7913996272407798
  - 0.8043478391111462
  - 0.8113309524057777
  - 0.8148514595785687
  - 0.8098651176699815
  train_f1_macro:
  - 0.8691244239631336
  - 0.8580586080586079
  - 0.862708719851577
  - 0.8737327188940094
  - 0.8727106227106228
  train_f1_macro_oob:
  - 0.7585253456221199
  - 0.7564102564102564
  - 0.7578849721706863
  - 0.7557603686635945
  - 0.7545787545787546
  train_f1_micro:
  - 0.8691244239631336
  - 0.858058608058608
  - 0.862708719851577
  - 0.8737327188940092
  - 0.8727106227106227
  train_f1_micro_oob:
  - 0.7585253456221198
  - 0.7564102564102564
  - 0.7578849721706865
  - 0.7557603686635944
  - 0.7545787545787546
  train_f1_samples:
  - 0.8691244239631335
  - 0.8580586080586079
  - 0.8627087198515768
  - 0.8737327188940092
  - 0.8727106227106227
  train_f1_samples_oob:
  - 0.7585253456221198
  - 0.7564102564102564
  - 0.7578849721706864
  - 0.7557603686635944
  - 0.7545787545787546
  train_f1_weighted:
  - 0.8522296922222908
  - 0.8419919632606199
  - 0.8519208927954176
  - 0.8616432419045261
  - 0.8611192356439504
  train_f1_weighted_oob:
  - 0.7472151976808734
  - 0.7522005357826254
  - 0.7493827465310354
  - 0.7462819639650795
  - 0.745125280296383
  train_jaccard_macro:
  - 0.772984309470646
  - 0.7565666903169385
  - 0.762446591560707
  - 0.7795638567505311
  - 0.777907938070534
  train_jaccard_macro_oob:
  - 0.6157983195812129
  - 0.6099576636732842
  - 0.6146042925811049
  - 0.6117752273856197
  - 0.6088819179948549
  train_jaccard_micro:
  - 0.7685411572942136
  - 0.7514033680834001
  - 0.7585644371941273
  - 0.7757774140752864
  - 0.7741673436230707
  train_jaccard_micro_oob:
  - 0.6109873793615441
  - 0.6082474226804123
  - 0.6101568334578044
  - 0.6074074074074074
  - 0.6058823529411764
  train_jaccard_samples:
  - 0.7917562724014338
  - 0.7777097902097903
  - 0.7832644628099174
  - 0.8016552623004236
  - 0.801036001036001
  train_jaccard_samples_oob:
  - 0.645565330726621
  - 0.6391618353156815
  - 0.6470297379388289
  - 0.6392548311903151
  - 0.639679835833682
  train_jaccard_weighted:
  - 0.7481572186033395
  - 0.7332985640551124
  - 0.746694531363992
  - 0.7617439188975048
  - 0.7608569449474867
  train_jaccard_weighted_oob:
  - 0.599540907621282
  - 0.6039766490553917
  - 0.6020567501263638
  - 0.59815005558709
  - 0.5958746457504872
  train_label_ranking_average_precision_score:
  - 0.9156008704557089
  - 0.9134353378103376
  - 0.9158884766027623
  - 0.9259516129032257
  - 0.9208783577533578
  train_label_ranking_average_precision_score_oob:
  - 0.8357826420890934
  - 0.8225256919006921
  - 0.829106885178314
  - 0.8491484895033281
  - 0.8382524420024416
  train_matthews_corrcoef_macro:
  - 0.4957554607337616
  - 0.5227938457194726
  - 0.47476197889355676
  - 0.5544673471159624
  - 0.6027792411530202
  train_matthews_corrcoef_macro_oob:
  - 0.22208348628841484
  - 0.21916611836179148
  - 0.23315153805761643
  - 0.21395823636374173
  - 0.2378919269255724
  train_matthews_corrcoef_micro:
  - 0.7392102412287155
  - 0.7170112272556102
  - 0.7255054814678482
  - 0.7478782954595067
  - 0.7459902214909054
  train_matthews_corrcoef_micro_oob:
  - 0.516365249933767
  - 0.5126931835920755
  - 0.515362587484589
  - 0.5107173745350624
  - 0.5082247823638719
  train_matthews_corrcoef_samples:
  - 0.7233311932613883
  - 0.6967092373820548
  - 0.7079618751703975
  - 0.7323331663850718
  - 0.730199859692904
  train_matthews_corrcoef_samples_oob:
  - 0.4806763665454828
  - 0.47267476341906683
  - 0.47725379229223697
  - 0.47886962883728024
  - 0.4694028531822902
  train_matthews_corrcoef_weighted:
  - 0.468193089001695
  - 0.44723873076924264
  - 0.4633057647526879
  - 0.5664985923016436
  - 0.5842300208892245
  train_matthews_corrcoef_weighted_oob:
  - 0.19711871910196838
  - 0.20624153918594773
  - 0.22453997545770926
  - 0.21734616904475496
  - 0.2385631730492072
  train_ndgc:
  - 0.9549044017108163
  - 0.9529472774082622
  - 0.954771165176439
  - 0.9609373138457408
  - 0.9578624821651552
  train_ndgc_oob:
  - 0.9011574610337663
  - 0.8920265305635018
  - 0.8958423099517218
  - 0.9142849150957905
  - 0.9032151997942564
  train_neg_coverage_error:
  - -4.064516129032258
  - -4.134615384615385
  - -4.142857142857143
  - -4.051612903225807
  - -4.07051282051282
  train_neg_coverage_error_oob:
  - -4.541935483870968
  - -4.698717948717949
  - -4.62987012987013
  - -4.52258064516129
  - -4.512820512820513
  train_neg_hamming_loss_macro:
  - -0.13087557603686634
  - -0.14194139194139194
  - -0.13729128014842298
  - -0.12626728110599078
  - -0.1272893772893773
  train_neg_hamming_loss_macro_oob:
  - -0.24147465437788015
  - -0.24358974358974358
  - -0.24211502782931357
  - -0.2442396313364055
  - -0.24542124542124544
  train_neg_hamming_loss_micro:
  - -0.13087557603686636
  - -0.14194139194139194
  - -0.137291280148423
  - -0.12626728110599078
  - -0.12728937728937728
  train_neg_hamming_loss_micro_oob:
  - -0.24147465437788018
  - -0.24358974358974358
  - -0.24211502782931354
  - -0.24423963133640553
  - -0.2454212454212454
  train_neg_hamming_loss_samples:
  - -0.13087557603686636
  - -0.1419413919413919
  - -0.13729128014842298
  - -0.12626728110599078
  - -0.12728937728937728
  train_neg_hamming_loss_samples_oob:
  - -0.24147465437788015
  - -0.2435897435897435
  - -0.2421150278293135
  - -0.24423963133640547
  - -0.24542124542124538
  train_neg_hamming_loss_weighted:
  - -0.14777030777770925
  - -0.15800803673938002
  - -0.1480791072045825
  - -0.13835675809547396
  - -0.13888076435604954
  train_neg_hamming_loss_weighted_oob:
  - -0.25278480231912664
  - -0.24779946421737467
  - -0.2506172534689645
  - -0.2537180360349205
  - -0.254874719703617
  train_neg_label_ranking_loss:
  - -0.08903225806451613
  - -0.09262820512820512
  - -0.0895021645021645
  - -0.08526881720430109
  - -0.08814102564102565
  train_neg_label_ranking_loss_oob:
  - -0.1829032258064516
  - -0.19626068376068376
  - -0.18409090909090908
  - -0.17086021505376345
  - -0.17446581196581196
  train_precision_macro:
  - 0.8691244239631336
  - 0.8580586080586079
  - 0.862708719851577
  - 0.8737327188940094
  - 0.8727106227106228
  train_precision_macro_oob:
  - 0.7585253456221199
  - 0.7564102564102564
  - 0.7578849721706863
  - 0.7557603686635945
  - 0.7545787545787546
  train_precision_micro:
  - 0.8691244239631336
  - 0.858058608058608
  - 0.862708719851577
  - 0.8737327188940092
  - 0.8727106227106227
  train_precision_micro_oob:
  - 0.7585253456221198
  - 0.7564102564102564
  - 0.7578849721706865
  - 0.7557603686635944
  - 0.7545787545787546
  train_precision_samples:
  - 0.8691244239631335
  - 0.8580586080586079
  - 0.8627087198515768
  - 0.8737327188940092
  - 0.8727106227106227
  train_precision_samples_oob:
  - 0.7585253456221198
  - 0.7564102564102564
  - 0.7578849721706864
  - 0.7557603686635944
  - 0.7545787545787546
  train_precision_weighted:
  - 0.8522296922222908
  - 0.8419919632606199
  - 0.8519208927954176
  - 0.8616432419045261
  - 0.8611192356439504
  train_precision_weighted_oob:
  - 0.7472151976808734
  - 0.7522005357826254
  - 0.7493827465310354
  - 0.7462819639650795
  - 0.745125280296383
  train_recall_macro:
  - 0.8691244239631336
  - 0.8580586080586079
  - 0.862708719851577
  - 0.8737327188940094
  - 0.8727106227106228
  train_recall_macro_oob:
  - 0.7585253456221199
  - 0.7564102564102564
  - 0.7578849721706863
  - 0.7557603686635945
  - 0.7545787545787546
  train_recall_micro:
  - 0.8691244239631336
  - 0.858058608058608
  - 0.862708719851577
  - 0.8737327188940092
  - 0.8727106227106227
  train_recall_micro_oob:
  - 0.7585253456221198
  - 0.7564102564102564
  - 0.7578849721706865
  - 0.7557603686635944
  - 0.7545787545787546
  train_recall_samples:
  - 0.8691244239631335
  - 0.8580586080586079
  - 0.8627087198515768
  - 0.8737327188940092
  - 0.8727106227106227
  train_recall_samples_oob:
  - 0.7585253456221198
  - 0.7564102564102564
  - 0.7578849721706864
  - 0.7557603686635944
  - 0.7545787545787546
  train_recall_weighted:
  - 0.8522296922222908
  - 0.8419919632606199
  - 0.8519208927954176
  - 0.8616432419045261
  - 0.8611192356439504
  train_recall_weighted_oob:
  - 0.7472151976808734
  - 0.7522005357826254
  - 0.7493827465310354
  - 0.7462819639650795
  - 0.745125280296383
  train_roc_auc_macro:
  - 0.973221839684007
  - 0.9747345763795925
  - 0.9809162828260377
  - 0.9790136230429854
  - 0.9754377707995764
  train_roc_auc_macro_oob:
  - 0.7478540972679638
  - 0.7595826551341156
  - 0.7626512632477537
  - 0.7862531895056664
  - 0.7700878352207562
  train_roc_auc_micro:
  - 0.9407878173417799
  - 0.941805137979169
  - 0.9429037857497107
  - 0.9472526238412219
  - 0.9449660078732751
  train_roc_auc_micro_oob:
  - 0.8364180099752999
  - 0.8359316278320627
  - 0.8419642365129223
  - 0.8378595445202215
  - 0.8409658869526663
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9776304098407514
  - 0.978361541587228
  - 0.9852789203081471
  - 0.9822218571763327
  - 0.9789498036507814
  train_roc_auc_weighted_oob:
  - 0.7163224245055413
  - 0.7358302148540704
  - 0.7414588718303987
  - 0.776665175284107
  - 0.758406273648787
start: 2023-12-21 13:14:47.238082
wrapper: null
