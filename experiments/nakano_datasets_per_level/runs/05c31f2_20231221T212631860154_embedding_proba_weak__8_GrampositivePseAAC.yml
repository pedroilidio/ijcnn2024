active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AMzMzMzPzvwCYmZmZmcm/AJiZmZmZyb8AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:35:38.789240
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__8
  params: {}
hash: 05c31f291afebe9d956cdf5bc86cc44238d9aaa4f625953dcbbd7769536d00ac
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/05c31f2_20231221T212631860154_embedding_proba_weak__8_GrampositivePseAAC.yml
results:
  fit_time:
  - 505.6495416164398
  - 505.0974922180176
  - 511.6633195877075
  - 526.5652043819427
  - 521.4002199172974
  score_time:
  - 6.469879388809204
  - 6.485092639923096
  - 5.940293550491333
  - 6.444969892501831
  - 6.355535268783569
  test_average_precision_macro:
  - 0.3876446206689143
  - 0.36193214856899225
  - 0.38770639762272485
  - 0.3601276451854335
  - 0.35401806785210227
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5189033103520682
  - 0.4819933785640568
  - 0.46936552168496753
  - 0.48406510998142666
  - 0.4582580374990817
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6987179487179488
  - 0.7246031746031746
  - 0.7219551282051282
  - 0.7003205128205128
  - 0.7034313725490194
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5038724828571621
  - 0.4671921138645863
  - 0.46944647821906893
  - 0.4645882335226089
  - 0.4455889370021143
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6798261834319527
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6784798534798535
  - 0.6732959850606909
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6231637653395525
  - 0.6245463060531553
  - 0.6224964113973193
  - 0.6197940872108515
  - 0.6182151330900105
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.603082851637765
  - 0.6030534351145038
  - 0.6
  - 0.6
  - 0.5968688845401174
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6038461538461537
  - 0.6038095238095237
  - 0.6012820512820511
  - 0.6025641025641024
  - 0.6026143790849673
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5218376922649786
  - 0.5155134059243648
  - 0.5100143544107231
  - 0.5196013879188269
  - 0.515625184704567
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6987179487179483
  - 0.7246031746031742
  - 0.7219551282051282
  - 0.700320512820513
  - 0.7034313725490198
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03458692240008599
  - 0.030024028838453842
  - 0.006860162934426772
  - 0.025365321289509093
  - 0.07488396457846322
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.08502303018977037
  - 0.08461621909897774
  - 0.0401286176952564
  - 0.08127931706209182
  - 0.11438342749183662
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.009615384615384616
  - 0.009523809523809525
  - 0.006410256410256411
  - 0.016025641025641028
  - 0.03267973856209151
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.046559318615500375
  - 0.04803844614152615
  - 0.011081801663304785
  - 0.045816571633938166
  - 0.07658874193841408
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7752584598572257
  - 0.7943869023395175
  - 0.7928659882136634
  - 0.777262289322683
  - 0.77969318130565
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8076923076923077
  - -1.7523809523809524
  - -1.7211538461538463
  - -1.8076923076923077
  - -1.8137254901960784
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24759615384615385
  - -0.24761904761904763
  - -0.25
  - -0.25
  - -0.25245098039215685
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24759615384615385
  - -0.24761904761904763
  - -0.25
  - -0.25
  - -0.25245098039215685
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24759615384615385
  - -0.24761904761904763
  - -0.25
  - -0.25
  - -0.25245098039215685
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32017381656804733
  - -0.3248072562358276
  - -0.3304363905325444
  - -0.32152014652014654
  - -0.32670401493930906
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2692307692307692
  - -0.2507936507936508
  - -0.2403846153846154
  - -0.2644230769230769
  - -0.261437908496732
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6798261834319527
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6784798534798535
  - 0.6732959850606909
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7524038461538461
  - 0.7523809523809524
  - 0.75
  - 0.75
  - 0.7475490196078431
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6798261834319527
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6784798534798535
  - 0.6732959850606909
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6255289379029272
  - 0.663942799341959
  - 0.6754188009745925
  - 0.612107688726777
  - 0.5477702689726867
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7634985207100592
  - 0.7557974300831444
  - 0.7452847633136095
  - 0.7472056346654418
  - 0.7231180260883231
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.730769230769231
  - 0.7492063492063492
  - 0.7596153846153846
  - 0.7355769230769231
  - 0.7385620915032679
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6655055376386898
  - 0.6392632608598996
  - 0.6220277680009343
  - 0.640028199765002
  - 0.5791006276962245
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7528316714856716
  - 0.7867602901188657
  - 0.7573834423634667
  - 0.7441164395615814
  - 0.7317238170758879
  train_average_precision_macro_oob:
  - 0.6285727048758494
  - 0.6642963284391921
  - 0.6758284477148611
  - 0.6718914902676079
  - 0.6449084115147845
  train_average_precision_micro:
  - 0.8162204512234447
  - 0.8279870689303971
  - 0.8232957574041961
  - 0.8059044366344739
  - 0.7993172700023694
  train_average_precision_micro_oob:
  - 0.7925767763308563
  - 0.8001131153739316
  - 0.7915378520392025
  - 0.782816951682579
  - 0.7822551181428277
  train_average_precision_samples:
  - 0.8433734939759037
  - 0.8454106280193237
  - 0.8516064257028113
  - 0.8427710843373494
  - 0.8339328537170264
  train_average_precision_samples_oob:
  - 0.8325301204819278
  - 0.8226650563607085
  - 0.8279116465863453
  - 0.818273092369478
  - 0.8331334932054356
  train_average_precision_weighted:
  - 0.8087747167779061
  - 0.8249111649168457
  - 0.8120176535873601
  - 0.7947084530442479
  - 0.7875959776965376
  train_average_precision_weighted_oob:
  - 0.7813759309662982
  - 0.79431497990961
  - 0.7851511700030022
  - 0.7744818422596779
  - 0.7727691922967841
  train_f1_macro:
  - 0.8704819277108433
  - 0.8683574879227053
  - 0.8692771084337348
  - 0.8680722891566265
  - 0.869904076738609
  train_f1_macro_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855421
  - 0.8542168674698796
  - 0.8525179856115108
  train_f1_micro:
  - 0.8704819277108434
  - 0.8683574879227053
  - 0.869277108433735
  - 0.8680722891566265
  - 0.8699040767386091
  train_f1_micro_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855422
  - 0.8542168674698796
  - 0.8525179856115108
  train_f1_samples:
  - 0.8704819277108434
  - 0.8683574879227053
  - 0.869277108433735
  - 0.8680722891566265
  - 0.8699040767386091
  train_f1_samples_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855422
  - 0.8542168674698796
  - 0.8525179856115108
  train_f1_weighted:
  - 0.8361043218218938
  - 0.8341481173288955
  - 0.8358455300917271
  - 0.8326972963624834
  - 0.8352609778206143
  train_f1_weighted_oob:
  - 0.8066595738562843
  - 0.8031978827173335
  - 0.8176208413606694
  - 0.8141811264195539
  - 0.8116186476655995
  train_jaccard_macro:
  - 0.7762669344761821
  - 0.7729503167944544
  - 0.7741803736057982
  - 0.7727909516191392
  - 0.7754055204675683
  train_jaccard_macro_oob:
  - 0.7409922501168693
  - 0.7359965373513799
  - 0.7552547214709775
  - 0.7528457132458357
  - 0.7505119345136093
  train_jaccard_micro:
  - 0.7706666666666667
  - 0.767342582710779
  - 0.768779968034097
  - 0.766897285790314
  - 0.7697612732095491
  train_jaccard_micro_oob:
  - 0.7336814621409922
  - 0.7286012526096033
  - 0.7482885729331227
  - 0.7455310199789695
  - 0.7429467084639498
  train_jaccard_samples:
  - 0.7930923694779115
  - 0.7893719806763284
  - 0.7908433734939757
  - 0.7889156626506023
  - 0.7918465227817744
  train_jaccard_samples_oob:
  - 0.754859437751004
  - 0.7491143317230272
  - 0.7699598393574295
  - 0.7667469879518071
  - 0.7640287769784172
  train_jaccard_weighted:
  - 0.7204722345011958
  - 0.7177068344958037
  - 0.7200420072867681
  - 0.7155595496929151
  - 0.7192256955260093
  train_jaccard_weighted_oob:
  - 0.6778485982571788
  - 0.6731466093475998
  - 0.6943667091191397
  - 0.6892783786558304
  - 0.6857272687103474
  train_label_ranking_average_precision_score:
  - 0.8433734939759031
  - 0.8454106280193231
  - 0.8516064257028108
  - 0.8427710843373488
  - 0.8339328537170261
  train_label_ranking_average_precision_score_oob:
  - 0.8325301204819272
  - 0.822665056360708
  - 0.8279116465863448
  - 0.8182730923694775
  - 0.8331334932054353
  train_matthews_corrcoef_macro:
  - 0.47746712424997023
  - 0.47360405438099096
  - 0.4752015927191392
  - 0.4715649062706685
  - 0.47395590001533455
  train_matthews_corrcoef_macro_oob:
  - 0.4130184619784748
  - 0.4050111255359289
  - 0.4443476464743582
  - 0.438212792485991
  - 0.43303992776416866
  train_matthews_corrcoef_micro:
  - 0.6441889567480324
  - 0.6378322758321109
  - 0.6405835796239259
  - 0.6361713214746041
  - 0.6401029628236586
  train_matthews_corrcoef_micro_oob:
  - 0.569816481250049
  - 0.5589137812697258
  - 0.6001838072324505
  - 0.5936248057377927
  - 0.5863612909231636
  train_matthews_corrcoef_samples:
  - 0.48851096580137077
  - 0.4790082151612524
  - 0.482673255606647
  - 0.47646277303028645
  - 0.48100083997407583
  train_matthews_corrcoef_samples_oob:
  - 0.3931438567189861
  - 0.3785798328685238
  - 0.43067964050016594
  - 0.42104108628329845
  - 0.41145647546568254
  train_matthews_corrcoef_weighted:
  - 0.6114816681473629
  - 0.6046643337498896
  - 0.6076320832967373
  - 0.6034425345459045
  - 0.6074597530320921
  train_matthews_corrcoef_weighted_oob:
  - 0.5366985076016992
  - 0.5254129821690985
  - 0.5671976126261118
  - 0.5610485367749765
  - 0.5539076596593414
  train_ndgc:
  - 0.8836120648919815
  - 0.885152534558052
  - 0.8893690484663143
  - 0.8834413611812431
  - 0.8763589404404285
  train_ndgc_oob:
  - 0.8753958173163229
  - 0.8680361979281166
  - 0.871857719460173
  - 0.8649129336473325
  - 0.8756646586319826
  train_neg_coverage_error:
  - -1.4216867469879517
  - -1.4154589371980677
  - -1.4120481927710844
  - -1.4024096385542169
  - -1.4268585131894485
  train_neg_coverage_error_oob:
  - -1.4746987951807229
  - -1.5072463768115942
  - -1.4843373493975904
  - -1.4795180722891565
  - -1.4508393285371703
  train_neg_hamming_loss_macro:
  - -0.12951807228915663
  - -0.1316425120772947
  - -0.13072289156626504
  - -0.13192771084337349
  - -0.13009592326139088
  train_neg_hamming_loss_macro_oob:
  - -0.1536144578313253
  - -0.15700483091787437
  - -0.14397590361445783
  - -0.14578313253012049
  - -0.1474820143884892
  train_neg_hamming_loss_micro:
  - -0.12951807228915663
  - -0.1316425120772947
  - -0.13072289156626507
  - -0.13192771084337349
  - -0.13009592326139088
  train_neg_hamming_loss_micro_oob:
  - -0.1536144578313253
  - -0.1570048309178744
  - -0.14397590361445783
  - -0.14578313253012049
  - -0.1474820143884892
  train_neg_hamming_loss_samples:
  - -0.12951807228915663
  - -0.1316425120772947
  - -0.13072289156626507
  - -0.13192771084337349
  - -0.13009592326139088
  train_neg_hamming_loss_samples_oob:
  - -0.1536144578313253
  - -0.1570048309178744
  - -0.14397590361445783
  - -0.14578313253012049
  - -0.1474820143884892
  train_neg_hamming_loss_weighted:
  - -0.1638956781781062
  - -0.16585188267110465
  - -0.16415446990827273
  - -0.16730270363751656
  - -0.16473902217938566
  train_neg_hamming_loss_weighted_oob:
  - -0.1933404261437157
  - -0.1968021172826665
  - -0.1823791586393306
  - -0.1858188735804462
  - -0.18838135233440043
  train_neg_label_ranking_loss:
  - -0.13674698795180723
  - -0.13466183574879226
  - -0.13393574297188754
  - -0.13092369477911645
  - -0.14148681055155876
  train_neg_label_ranking_loss_oob:
  - -0.1540160642570281
  - -0.16485507246376813
  - -0.1576305220883534
  - -0.15682730923694782
  - -0.14928057553956833
  train_precision_macro:
  - 0.8704819277108433
  - 0.8683574879227053
  - 0.8692771084337348
  - 0.8680722891566265
  - 0.869904076738609
  train_precision_macro_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855421
  - 0.8542168674698796
  - 0.8525179856115108
  train_precision_micro:
  - 0.8704819277108434
  - 0.8683574879227053
  - 0.869277108433735
  - 0.8680722891566265
  - 0.8699040767386091
  train_precision_micro_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855422
  - 0.8542168674698796
  - 0.8525179856115108
  train_precision_samples:
  - 0.8704819277108434
  - 0.8683574879227053
  - 0.869277108433735
  - 0.8680722891566265
  - 0.8699040767386091
  train_precision_samples_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855422
  - 0.8542168674698796
  - 0.8525179856115108
  train_precision_weighted:
  - 0.8361043218218938
  - 0.8341481173288955
  - 0.8358455300917271
  - 0.8326972963624834
  - 0.8352609778206143
  train_precision_weighted_oob:
  - 0.8066595738562843
  - 0.8031978827173335
  - 0.8176208413606694
  - 0.8141811264195539
  - 0.8116186476655995
  train_recall_macro:
  - 0.8704819277108433
  - 0.8683574879227053
  - 0.8692771084337348
  - 0.8680722891566265
  - 0.869904076738609
  train_recall_macro_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855421
  - 0.8542168674698796
  - 0.8525179856115108
  train_recall_micro:
  - 0.8704819277108434
  - 0.8683574879227053
  - 0.869277108433735
  - 0.8680722891566265
  - 0.8699040767386091
  train_recall_micro_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855422
  - 0.8542168674698796
  - 0.8525179856115108
  train_recall_samples:
  - 0.8704819277108434
  - 0.8683574879227053
  - 0.869277108433735
  - 0.8680722891566265
  - 0.8699040767386091
  train_recall_samples_oob:
  - 0.8463855421686747
  - 0.8429951690821256
  - 0.8560240963855422
  - 0.8542168674698796
  - 0.8525179856115108
  train_recall_weighted:
  - 0.8361043218218938
  - 0.8341481173288955
  - 0.8358455300917271
  - 0.8326972963624834
  - 0.8352609778206143
  train_recall_weighted_oob:
  - 0.8066595738562843
  - 0.8031978827173335
  - 0.8176208413606694
  - 0.8141811264195539
  - 0.8116186476655995
  train_roc_auc_macro:
  - 0.8680783719175272
  - 0.8853824947041813
  - 0.8563637036570271
  - 0.859200393699361
  - 0.8442432865466827
  train_roc_auc_macro_oob:
  - 0.8241264092012232
  - 0.8418980971806701
  - 0.8099503365709444
  - 0.8456727359351476
  - 0.8291500196719528
  train_roc_auc_micro:
  - 0.8956130920671797
  - 0.903050142613105
  - 0.8933553085797696
  - 0.892138393854641
  - 0.8821665071770334
  train_roc_auc_micro_oob:
  - 0.8726333178839915
  - 0.877719890856529
  - 0.8694293423388251
  - 0.8740494186718444
  - 0.8677339712918659
  train_roc_auc_samples:
  - 0.8632530120481928
  - 0.8653381642512077
  - 0.8660642570281125
  - 0.8690763052208834
  - 0.8585131894484412
  train_roc_auc_samples_oob:
  - 0.8459839357429718
  - 0.835144927536232
  - 0.8423694779116465
  - 0.8431726907630521
  - 0.8507194244604317
  train_roc_auc_weighted:
  - 0.8574782042023723
  - 0.8677298766935453
  - 0.85085768918582
  - 0.8490844337908213
  - 0.8302077910716549
  train_roc_auc_weighted_oob:
  - 0.8338335775852687
  - 0.843207000430523
  - 0.8274816368991821
  - 0.8293662130016521
  - 0.8213862638620013
start: 2023-12-21 21:26:31.860154
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
