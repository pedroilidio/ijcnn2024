active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8D8AAAAAAADwvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+QmZmZmZnJv5mZmZmZmQnAnJmZmZmZ6T/OzMzMzMz8Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv2hmZmZmZvY/aGZmZmZm9j/MzMzMzMwEwA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:49:40.037554
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  monotonic_cst: null
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  monotonic_cst: null
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: proba__5
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 5596b36fdac80c4b4fca62422b1cbb0237da84a4e0c932777f68e4db646aa231
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5596b36_20231212T164923319750_proba__5_birds.yml
results:
  fit_time:
  - 4.966458797454834
  - 4.9700608253479
  - 4.971094608306885
  - 5.099574327468872
  - 5.2035133838653564
  score_time:
  - 2.912834644317627
  - 2.920261859893799
  - 2.877521514892578
  - 3.1028223037719727
  - 3.1023447513580322
  test_average_precision_macro:
  - 0.4957546599569835
  - 0.5809836978047528
  - 0.49889158799383315
  - 0.4647068046201419
  - 0.5353747050391455
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5858854880391358
  - 0.5854313646303048
  - 0.599571062660662
  - 0.5571453522753059
  - 0.543865456934901
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3714383592290569
  - 0.338056205207368
  - 0.3560113758517171
  - 0.343706909656522
  - 0.3705851629244242
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5853805568208035
  - 0.6453843547000954
  - 0.6199185848836855
  - 0.581695272008832
  - 0.6007956422710321
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054672
  - 0.9596083231334149
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054671
  - 0.9596083231334149
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054671
  - 0.959608323133415
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9474395113929999
  - 0.941979725700656
  - 0.9493501194847584
  - 0.9427455289019105
  - 0.9430937279774492
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9238873178779233
  - 0.9197443622829444
  - 0.9240066620989932
  - 0.9248590320453739
  - 0.923464049423376
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9231071008238525
  - 0.9185909980430529
  - 0.9231071008238525
  - 0.923861852433281
  - 0.9223529411764706
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9268952707779807
  - 0.9238349112969942
  - 0.9280146547082847
  - 0.9286855263599451
  - 0.9269002315513943
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9006033120249535
  - 0.8911294035470178
  - 0.9045325940088024
  - 0.8927401813165964
  - 0.8935633847912542
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7977949483763435
  - 0.826428298230624
  - 0.8056237789524923
  - 0.8010712507417933
  - 0.8279495040096955
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2070382290166112
  - 0.21497812779695802
  - 0.22651038024303227
  - 0.22589303682494546
  - 0.23486924032111484
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5010817017621454
  - 0.4661899284942892
  - 0.507630506599236
  - 0.4783567632961962
  - 0.5008028722536926
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1844843004961868
  - 0.189362089234084
  - 0.18799539283428293
  - 0.17684604507990978
  - 0.19779967292115572
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.39444767499219885
  - 0.38660123455727213
  - 0.3900388170830286
  - 0.38987137312192466
  - 0.4072846409868433
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4316172141581041
  - 0.3946885182380524
  - 0.41336209074408586
  - 0.4021757003365734
  - 0.42435274962159186
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.9302325581395348
  - -2.7674418604651163
  - -3.124031007751938
  - -3.007751937984496
  - -2.682170542635659
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03998368013055895
  - -0.042431660546715634
  - -0.03998368013055895
  - -0.039575683394532844
  - -0.04039167686658507
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03998368013055895
  - -0.04243166054671563
  - -0.03998368013055895
  - -0.039575683394532844
  - -0.04039167686658507
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.039983680130558946
  - -0.04243166054671562
  - -0.039983680130558946
  - -0.03957568339453284
  - -0.04039167686658507
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05256048860700023
  - -0.058020274299344074
  - -0.0506498805152416
  - -0.05725447109808949
  - -0.056906272022551094
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07916250479519973
  - -0.07156790364724701
  - -0.08640624208339666
  - -0.08663156079366749
  - -0.07041597000557329
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054672
  - 0.9596083231334149
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054671
  - 0.9596083231334149
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054671
  - 0.959608323133415
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9474395113929999
  - 0.941979725700656
  - 0.9493501194847584
  - 0.9427455289019105
  - 0.9430937279774492
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054672
  - 0.9596083231334149
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054671
  - 0.9596083231334149
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.960016319869441
  - 0.9575683394532843
  - 0.960016319869441
  - 0.9604243166054671
  - 0.959608323133415
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9474395113929999
  - 0.941979725700656
  - 0.9493501194847584
  - 0.9427455289019105
  - 0.9430937279774492
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8813210142409815
  - 0.9101911163554589
  - 0.8979447013416971
  - 0.8846125511389524
  - 0.9140424765226961
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9146608386582513
  - 0.9242335863188943
  - 0.9086861891571032
  - 0.9036788323146354
  - 0.9210344061573039
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8944701665295589
  - 0.9160652836782536
  - 0.9072868790052008
  - 0.8799679182057896
  - 0.9063526247353384
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.962746709189998
  - 0.9598099002655985
  - 0.9576050684912044
  - 0.9593997852427261
  - 0.9549248791612908
  train_average_precision_macro_oob:
  - 0.6871655247341714
  - 0.6754989405700182
  - 0.6425413874296438
  - 0.6680680980463164
  - 0.6780101159141357
  train_average_precision_micro:
  - 0.961967273835537
  - 0.9615170759355054
  - 0.9533122253346572
  - 0.954719616532635
  - 0.9588309805250143
  train_average_precision_micro_oob:
  - 0.85038673848812
  - 0.8559678735883098
  - 0.8307998636218522
  - 0.8464682224753102
  - 0.8442991323411081
  train_average_precision_samples:
  - 0.5220595699520119
  - 0.5365575396825397
  - 0.5251553463762766
  - 0.5304782668881506
  - 0.5336457179771134
  train_average_precision_samples_oob:
  - 0.46927109261780586
  - 0.49257361741971867
  - 0.47467947911261865
  - 0.48460078044150867
  - 0.48330880116362324
  train_average_precision_weighted:
  - 0.9708250057809434
  - 0.9712498196575624
  - 0.9667123280872334
  - 0.9671785696070535
  - 0.9648875365840464
  train_average_precision_weighted_oob:
  - 0.8258648109904286
  - 0.8203360192429142
  - 0.8061563981744782
  - 0.8199723712903653
  - 0.8257663724525919
  train_f1_macro:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224397
  - 0.9752141982864135
  - 0.9755201958384331
  train_f1_macro_oob:
  - 0.9655242758057936
  - 0.9691962464300284
  - 0.966952264381885
  - 0.9666462668298654
  - 0.9675642594859241
  train_f1_micro:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224399
  - 0.9752141982864138
  - 0.9755201958384333
  train_f1_micro_oob:
  - 0.9655242758057936
  - 0.9691962464300286
  - 0.966952264381885
  - 0.9666462668298653
  - 0.9675642594859241
  train_f1_samples:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224399
  - 0.9752141982864138
  - 0.9755201958384333
  train_f1_samples_oob:
  - 0.9655242758057936
  - 0.9691962464300287
  - 0.966952264381885
  - 0.9666462668298653
  - 0.9675642594859242
  train_f1_weighted:
  - 0.9753222548932251
  - 0.9763928338954967
  - 0.9748248002499664
  - 0.9757255490343174
  - 0.9760276515489026
  train_f1_weighted_oob:
  - 0.9612885740592235
  - 0.9674832830344992
  - 0.961299825916172
  - 0.9638622891016873
  - 0.9636683596186403
  train_jaccard_macro:
  - 0.9505988311115708
  - 0.9519963960365923
  - 0.9527015223157617
  - 0.9519175101300629
  - 0.9525417725778289
  train_jaccard_macro_oob:
  - 0.9339238733419212
  - 0.9407297954369792
  - 0.9364662237901714
  - 0.936037341991379
  - 0.9376644443365418
  train_jaccard_micro:
  - 0.950268549830913
  - 0.9516273514481934
  - 0.9524046599621627
  - 0.9516273514481934
  - 0.9522102747909199
  train_jaccard_micro_oob:
  - 0.933346479984224
  - 0.9402335246388284
  - 0.9360189573459715
  - 0.9354456618300266
  - 0.9371665678719621
  train_jaccard_samples:
  - 0.9532584986073358
  - 0.9544334723808939
  - 0.9550043625625022
  - 0.9545576376213384
  - 0.9551629431685045
  train_jaccard_samples_oob:
  - 0.9375369504666775
  - 0.9437263360165281
  - 0.9399988437020793
  - 0.9392358512176511
  - 0.9410396212595404
  train_jaccard_weighted:
  - 0.9522401225594178
  - 0.9543208902230376
  - 0.9511853708414688
  - 0.9529701677758776
  - 0.9535986725454563
  train_jaccard_weighted_oob:
  - 0.9260083395963773
  - 0.9375673041145959
  - 0.9257697952829392
  - 0.9308845358938727
  - 0.9303582338797105
  train_label_ranking_average_precision_score:
  - 0.985237864525655
  - 0.9842319582871907
  - 0.9825196874615476
  - 0.9859046234772978
  - 0.9890720745662602
  train_label_ranking_average_precision_score_oob:
  - 0.9324493871914491
  - 0.9402480360243693
  - 0.93204382019789
  - 0.9400271370306557
  - 0.9387351577527704
  train_matthews_corrcoef_macro:
  - 0.36916522155582754
  - 0.363822193846385
  - 0.3870769479586591
  - 0.40278808553429063
  - 0.4229266190535035
  train_matthews_corrcoef_macro_oob:
  - 0.24187872966224983
  - 0.29246861255457296
  - 0.2799342575974779
  - 0.26068071254061015
  - 0.2789211722807248
  train_matthews_corrcoef_micro:
  - 0.7121177174247747
  - 0.722670297711659
  - 0.7261784497630934
  - 0.724444876609082
  - 0.7254863826304966
  train_matthews_corrcoef_micro_oob:
  - 0.5828353360726203
  - 0.6402482225579742
  - 0.6043315097009998
  - 0.6051096892124382
  - 0.6143662414660632
  train_matthews_corrcoef_samples:
  - 0.3257167155275452
  - 0.34319423542418964
  - 0.341716254386149
  - 0.3356082815743054
  - 0.3417570142071472
  train_matthews_corrcoef_samples_oob:
  - 0.23253005051652684
  - 0.277951139218434
  - 0.25988404647642155
  - 0.24133596564196724
  - 0.25986429291228463
  train_matthews_corrcoef_weighted:
  - 0.6174084077857571
  - 0.6136195157886164
  - 0.6351410461849468
  - 0.6472747326533413
  - 0.6531524929262604
  train_matthews_corrcoef_weighted_oob:
  - 0.45149780341660456
  - 0.5207897983763201
  - 0.5014677895579833
  - 0.4821324740524758
  - 0.5006335834466434
  train_ndgc:
  - 0.5282396869064991
  - 0.5426223969092648
  - 0.5315634685303107
  - 0.5364747784285016
  - 0.5383175124360287
  train_ndgc_oob:
  - 0.4942075659450566
  - 0.5139119784360123
  - 0.4992372257640147
  - 0.5069374689322891
  - 0.5054939852593647
  train_neg_coverage_error:
  - -1.1085271317829457
  - -1.1007751937984496
  - -1.0968992248062015
  - -1.1065891472868217
  - -1.0891472868217054
  train_neg_coverage_error_oob:
  - -1.7093023255813953
  - -1.624031007751938
  - -1.7306201550387597
  - -1.6395348837209303
  - -1.6414728682170543
  train_neg_hamming_loss_macro:
  - -0.025499796001631988
  - -0.02478580171358629
  - -0.024377804977560178
  - -0.02478580171358629
  - -0.02447980416156671
  train_neg_hamming_loss_macro_oob:
  - -0.03447572419420645
  - -0.030803753569971448
  - -0.033047735618115054
  - -0.03335373317013464
  - -0.032435740514075884
  train_neg_hamming_loss_micro:
  - -0.025499796001631988
  - -0.02478580171358629
  - -0.024377804977560178
  - -0.02478580171358629
  - -0.02447980416156671
  train_neg_hamming_loss_micro_oob:
  - -0.03447572419420645
  - -0.03080375356997144
  - -0.033047735618115054
  - -0.03335373317013464
  - -0.03243574051407589
  train_neg_hamming_loss_samples:
  - -0.025499796001631984
  - -0.024785801713586294
  - -0.024377804977560178
  - -0.02478580171358629
  - -0.02447980416156671
  train_neg_hamming_loss_samples_oob:
  - -0.03447572419420645
  - -0.030803753569971438
  - -0.03304773561811506
  - -0.03335373317013464
  - -0.032435740514075884
  train_neg_hamming_loss_weighted:
  - -0.024677745106774777
  - -0.023607166104503224
  - -0.02517519975003348
  - -0.0242744509656826
  - -0.02397234845109745
  train_neg_hamming_loss_weighted_oob:
  - -0.03871142594077638
  - -0.032516716965500916
  - -0.03870017408382805
  - -0.036137710898312816
  - -0.036331640381359706
  train_neg_label_ranking_loss:
  - -0.0029849439775910367
  - -0.00280342757257942
  - -0.0031101846423323854
  - -0.0026720345761043437
  - -0.0023266218632155707
  train_neg_label_ranking_loss_oob:
  - -0.022996396431758947
  - -0.02125368235149357
  - -0.025043800565346393
  - -0.020930232558139535
  - -0.021211519044111383
  train_precision_macro:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224397
  - 0.9752141982864135
  - 0.9755201958384331
  train_precision_macro_oob:
  - 0.9655242758057936
  - 0.9691962464300284
  - 0.966952264381885
  - 0.9666462668298654
  - 0.9675642594859241
  train_precision_micro:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224399
  - 0.9752141982864138
  - 0.9755201958384333
  train_precision_micro_oob:
  - 0.9655242758057936
  - 0.9691962464300286
  - 0.966952264381885
  - 0.9666462668298653
  - 0.9675642594859241
  train_precision_samples:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224399
  - 0.9752141982864138
  - 0.9755201958384333
  train_precision_samples_oob:
  - 0.9655242758057936
  - 0.9691962464300287
  - 0.966952264381885
  - 0.9666462668298653
  - 0.9675642594859242
  train_precision_weighted:
  - 0.9753222548932251
  - 0.9763928338954967
  - 0.9748248002499664
  - 0.9757255490343174
  - 0.9760276515489026
  train_precision_weighted_oob:
  - 0.9612885740592235
  - 0.9674832830344992
  - 0.961299825916172
  - 0.9638622891016873
  - 0.9636683596186403
  train_recall_macro:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224397
  - 0.9752141982864135
  - 0.9755201958384331
  train_recall_macro_oob:
  - 0.9655242758057936
  - 0.9691962464300284
  - 0.966952264381885
  - 0.9666462668298654
  - 0.9675642594859241
  train_recall_micro:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224399
  - 0.9752141982864138
  - 0.9755201958384333
  train_recall_micro_oob:
  - 0.9655242758057936
  - 0.9691962464300286
  - 0.966952264381885
  - 0.9666462668298653
  - 0.9675642594859241
  train_recall_samples:
  - 0.974500203998368
  - 0.9752141982864138
  - 0.9756221950224399
  - 0.9752141982864138
  - 0.9755201958384333
  train_recall_samples_oob:
  - 0.9655242758057936
  - 0.9691962464300287
  - 0.966952264381885
  - 0.9666462668298653
  - 0.9675642594859242
  train_recall_weighted:
  - 0.9753222548932251
  - 0.9763928338954967
  - 0.9748248002499664
  - 0.9757255490343174
  - 0.9760276515489026
  train_recall_weighted_oob:
  - 0.9612885740592235
  - 0.9674832830344992
  - 0.961299825916172
  - 0.9638622891016873
  - 0.9636683596186403
  train_roc_auc_macro:
  - 0.9979757350967957
  - 0.9982581085945551
  - 0.9981184971576365
  - 0.9979593351749344
  - 0.9980423559378409
  train_roc_auc_macro_oob:
  - 0.9725355596042569
  - 0.9685296401782064
  - 0.9670764044187006
  - 0.9644349319107541
  - 0.9688240460224163
  train_roc_auc_micro:
  - 0.9976079438554083
  - 0.997598463411424
  - 0.997299461608459
  - 0.9972423690099712
  - 0.997498970115603
  train_roc_auc_micro_oob:
  - 0.977443674198238
  - 0.9795040635693605
  - 0.9753157434089476
  - 0.9767458604342543
  - 0.9770121134218497
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9981886463941556
  - 0.9984490042079271
  - 0.99800990488981
  - 0.9979390031449378
  - 0.9981837665975549
  train_roc_auc_weighted_oob:
  - 0.9832450888687115
  - 0.9843911797523531
  - 0.9808855530260915
  - 0.9809106664354171
  - 0.9828976893876322
start: 2023-12-12 16:49:23.319750
wrapper: null
