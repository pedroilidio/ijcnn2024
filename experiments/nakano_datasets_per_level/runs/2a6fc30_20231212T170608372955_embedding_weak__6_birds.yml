active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5qZmZmZmek/mJmZmZmZyb8zMzMzMzPzvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8D8AAAAAAADwvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+ZmZmZmZkBwJyZmZmZmek/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b9oZmZmZmb2P6CZmZmZmdk/mJmZmZmZ+b9oZmZmZmb2Pw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:06:46.682720
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 2a6fc304222508529c9e225b774189f0b5a11d665e6e273e0ee6b88f6e61705d
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2a6fc30_20231212T170608372955_embedding_weak__6_birds.yml
results:
  fit_time:
  - 20.446189403533936
  - 20.557798862457275
  - 19.66676926612854
  - 19.304933786392212
  - 21.677964687347412
  score_time:
  - 5.050322771072388
  - 5.377544641494751
  - 4.887523412704468
  - 4.945003986358643
  - 4.687776327133179
  test_average_precision_macro:
  - 0.2987769286127648
  - 0.3077850835704349
  - 0.30206972975477553
  - 0.3206653714422027
  - 0.3230902153479828
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.2385181399902076
  - 0.24061785948953698
  - 0.24187377643637387
  - 0.2264377284017114
  - 0.26846300260978684
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.28262806631479676
  - 0.2316942871205837
  - 0.2583780587941555
  - 0.2550939983156125
  - 0.26147568696018303
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.41476313055210756
  - 0.4246365297817668
  - 0.4425679130406711
  - 0.3805314094869432
  - 0.39480861875181583
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9261525907792739
  - 0.9277845777233782
  - 0.9208486332109344
  - 0.9086087311301512
  - 0.9306405548755611
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9261525907792738
  - 0.9277845777233782
  - 0.9208486332109344
  - 0.908608731130151
  - 0.930640554875561
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9261525907792737
  - 0.9277845777233782
  - 0.9208486332109342
  - 0.9086087311301511
  - 0.930640554875561
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9158020274299344
  - 0.9171138938580798
  - 0.9121447028423774
  - 0.8864223631665493
  - 0.9109719737626716
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8634582531766823
  - 0.8663168706561891
  - 0.8545760201743354
  - 0.8347897339695611
  - 0.8721865510746752
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8624620060790273
  - 0.865296803652968
  - 0.8533081285444234
  - 0.8325233644859813
  - 0.870278519648989
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8746063592002251
  - 0.8798053978876358
  - 0.8690716105849238
  - 0.8486490337484608
  - 0.8818023850346062
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.845555689974873
  - 0.8477982069994519
  - 0.8392026759486795
  - 0.7987857080356324
  - 0.8385779618481346
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7012327174775875
  - 0.7200663801438394
  - 0.7545020898019074
  - 0.6736986494784034
  - 0.7188400280454545
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16695663288122217
  - 0.1665414193056524
  - 0.20267326330646843
  - 0.18086773067652742
  - 0.250396602582111
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2170830854389624
  - 0.2514672902542065
  - 0.25551984010427137
  - 0.19651858328282662
  - 0.2837703245818259
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.06858594501388422
  - 0.07128089894141192
  - 0.09640934445904902
  - 0.06901754645643372
  - 0.08796476836676287
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.25591910240367044
  - 0.2684567199319269
  - 0.2975082609152086
  - 0.19125117445956283
  - 0.2907246478160888
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.36842053199424707
  - 0.3106730232214643
  - 0.332504224597343
  - 0.34521359058268686
  - 0.3449340586261068
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.937984496124031
  - -3.8217054263565893
  - -3.4573643410852712
  - -3.868217054263566
  - -3.5968992248062017
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07384740922072623
  - -0.07221542227662178
  - -0.07915136678906567
  - -0.09139126886984904
  - -0.069359445124439
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07384740922072623
  - -0.07221542227662178
  - -0.07915136678906569
  - -0.09139126886984904
  - -0.069359445124439
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07384740922072623
  - -0.07221542227662178
  - -0.07915136678906567
  - -0.09139126886984904
  - -0.06935944512443899
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0841979725700656
  - -0.0828861061419201
  - -0.08785529715762275
  - -0.11357763683345079
  - -0.08902802623732857
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.12860870446369763
  - -0.12941312183788245
  - -0.10236275289284866
  - -0.13180438842203548
  - -0.10824403404772763
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9261525907792739
  - 0.9277845777233782
  - 0.9208486332109344
  - 0.9086087311301512
  - 0.9306405548755611
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9261525907792738
  - 0.9277845777233782
  - 0.9208486332109344
  - 0.908608731130151
  - 0.930640554875561
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9261525907792737
  - 0.9277845777233782
  - 0.9208486332109342
  - 0.9086087311301511
  - 0.930640554875561
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9158020274299344
  - 0.9171138938580798
  - 0.9121447028423774
  - 0.8864223631665493
  - 0.9109719737626716
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9261525907792739
  - 0.9277845777233782
  - 0.9208486332109344
  - 0.9086087311301512
  - 0.9306405548755611
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9261525907792738
  - 0.9277845777233782
  - 0.9208486332109344
  - 0.908608731130151
  - 0.930640554875561
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9261525907792737
  - 0.9277845777233782
  - 0.9208486332109342
  - 0.9086087311301511
  - 0.930640554875561
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9158020274299344
  - 0.9171138938580798
  - 0.9121447028423774
  - 0.8864223631665493
  - 0.9109719737626716
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8210979050748272
  - 0.8213442146280991
  - 0.8820645740874402
  - 0.8711505529062267
  - 0.8663906069492818
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8415669638418454
  - 0.8598482086633745
  - 0.8798724633136017
  - 0.8715976060736734
  - 0.8700560103403706
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8415599564825404
  - 0.8571771711294845
  - 0.8894284606257719
  - 0.8678180460995362
  - 0.858046128310066
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.3734939111387693
  - 0.440452329795534
  - 0.3959075564924042
  - 0.411327226633051
  - 0.3893059903064633
  train_average_precision_macro_oob:
  - 0.29688088573124566
  - 0.33255479441986296
  - 0.3001265992884967
  - 0.31805565009286346
  - 0.30920573681362845
  train_average_precision_micro:
  - 0.31581702327986955
  - 0.36698165805837574
  - 0.3161069842187426
  - 0.34630300764733357
  - 0.3460138138575397
  train_average_precision_micro_oob:
  - 0.25732498017137156
  - 0.2915602688830258
  - 0.25108501330379795
  - 0.27776997345430987
  - 0.2752531746004183
  train_average_precision_samples:
  - 0.34330681171039695
  - 0.38543808913237204
  - 0.3490982246650851
  - 0.32206184911126773
  - 0.35300040533325416
  train_average_precision_samples_oob:
  - 0.2579327769856696
  - 0.2933794852496103
  - 0.26934928711545997
  - 0.2531293678302477
  - 0.2775117837146991
  train_average_precision_weighted:
  - 0.49416097783429713
  - 0.5734494420269413
  - 0.5153862530060754
  - 0.5350751641187795
  - 0.5254069249831923
  train_average_precision_weighted_oob:
  - 0.39576245227176143
  - 0.429874553905814
  - 0.39154898471016997
  - 0.41539001407714193
  - 0.41906526643555025
  train_f1_macro:
  - 0.9130966952264381
  - 0.9228886168910648
  - 0.9165646674826601
  - 0.9212566299469603
  - 0.924826601387189
  train_f1_macro_oob:
  - 0.9176866585067319
  - 0.9274785801713584
  - 0.9208486332109346
  - 0.9272745818033454
  - 0.9291105671154631
  train_f1_micro:
  - 0.9130966952264382
  - 0.9228886168910648
  - 0.9165646674826602
  - 0.9212566299469604
  - 0.9248266013871889
  train_f1_micro_oob:
  - 0.9176866585067319
  - 0.9274785801713586
  - 0.9208486332109344
  - 0.9272745818033455
  - 0.929110567115463
  train_f1_samples:
  - 0.9130966952264382
  - 0.9228886168910648
  - 0.9165646674826601
  - 0.9212566299469604
  - 0.9248266013871889
  train_f1_samples_oob:
  - 0.917686658506732
  - 0.9274785801713586
  - 0.9208486332109342
  - 0.9272745818033457
  - 0.9291105671154631
  train_f1_weighted:
  - 0.9089628084502043
  - 0.9187045091425529
  - 0.9129577653033948
  - 0.9169562505568921
  - 0.9207016687377951
  train_f1_weighted_oob:
  - 0.9065551216048285
  - 0.9155571335581986
  - 0.9101287534527309
  - 0.9152187472155395
  - 0.9168515888514113
  train_jaccard_macro:
  - 0.8406474306812516
  - 0.857488937110564
  - 0.8466432464593971
  - 0.8544699213927265
  - 0.8606416373741844
  train_jaccard_macro_oob:
  - 0.8487387341909355
  - 0.8658230944630108
  - 0.854311948820749
  - 0.8652745486492389
  - 0.8684327392938951
  train_jaccard_micro:
  - 0.8400900900900901
  - 0.8568181818181818
  - 0.8459800414234607
  - 0.8540090771558245
  - 0.8601650697277298
  train_jaccard_micro_oob:
  - 0.8478936952219395
  - 0.8647646219686163
  - 0.8533081285444234
  - 0.8644100028525245
  - 0.8676064387084484
  train_jaccard_samples:
  - 0.8588095588710397
  - 0.8713060003948573
  - 0.8610421488536211
  - 0.8671736776064844
  - 0.8735724185749463
  train_jaccard_samples_oob:
  - 0.8658387559406817
  - 0.8786514867064709
  - 0.8672667012673755
  - 0.8768302893915089
  - 0.8798775707184874
  train_jaccard_weighted:
  - 0.8336023471417162
  - 0.8500950403183034
  - 0.8402468252698312
  - 0.8470515735482218
  - 0.8534240463874355
  train_jaccard_weighted_oob:
  - 0.8300545011191668
  - 0.8452269334284968
  - 0.835871436035358
  - 0.8445145829092816
  - 0.8471840701673196
  train_label_ranking_average_precision_score:
  - 0.8084230907801643
  - 0.8331125077370226
  - 0.7948346587736119
  - 0.7871781281810345
  - 0.8084267619224007
  train_label_ranking_average_precision_score_oob:
  - 0.7230490560554369
  - 0.7410539038542606
  - 0.7150857212239863
  - 0.7182456469000152
  - 0.7329381403038456
  train_matthews_corrcoef_macro:
  - 0.32052153210197154
  - 0.31442170172603107
  - 0.3046485947979272
  - 0.32158649450430454
  - 0.3437308393302204
  train_matthews_corrcoef_macro_oob:
  - 0.28334292740221056
  - 0.2776279801069606
  - 0.26462396648963016
  - 0.28770240365387706
  - 0.2886124274445747
  train_matthews_corrcoef_micro:
  - 0.3377082350303513
  - 0.3495598847148102
  - 0.32764040227944013
  - 0.34362349370248246
  - 0.3711022426599443
  train_matthews_corrcoef_micro_oob:
  - 0.2995448303166078
  - 0.3028577633732323
  - 0.2787110984550661
  - 0.30713354079941935
  - 0.31490388660077867
  train_matthews_corrcoef_samples:
  - 0.14244241104004166
  - 0.13848734252954434
  - 0.14841859040645425
  - 0.1333901370389813
  - 0.15914523184317086
  train_matthews_corrcoef_samples_oob:
  - 0.10922430159725814
  - 0.10207612892299033
  - 0.11028906711626786
  - 0.10384920837399211
  - 0.11160770241866758
  train_matthews_corrcoef_weighted:
  - 0.3945578157488398
  - 0.37303236873136403
  - 0.37378002887481376
  - 0.3984925780479488
  - 0.4295970438394953
  train_matthews_corrcoef_weighted_oob:
  - 0.33358907976401697
  - 0.3174625306458534
  - 0.31196356746230874
  - 0.3423550492921332
  - 0.35450872647203274
  train_ndgc:
  - 0.4008835457454048
  - 0.43730552170965226
  - 0.4087615290505713
  - 0.384421206899297
  - 0.4108053545067186
  train_ndgc_oob:
  - 0.3379329279695882
  - 0.3686059292557475
  - 0.35093996313313974
  - 0.3334934446007247
  - 0.35615027510270975
  train_neg_coverage_error:
  - -2.2112403100775193
  - -2.0348837209302326
  - -2.186046511627907
  - -2.125968992248062
  - -2.0368217054263567
  train_neg_coverage_error_oob:
  - -3.7093023255813953
  - -3.498062015503876
  - -3.627906976744186
  - -3.635658914728682
  - -3.562015503875969
  train_neg_hamming_loss_macro:
  - -0.0869033047735618
  - -0.07711138310893513
  - -0.08343533251733985
  - -0.07874337005303958
  - -0.0751733986128111
  train_neg_hamming_loss_macro_oob:
  - -0.08231334149326805
  - -0.07252141982864137
  - -0.07915136678906567
  - -0.07272541819665443
  - -0.07088943288453693
  train_neg_hamming_loss_micro:
  - -0.08690330477356181
  - -0.07711138310893513
  - -0.08343533251733987
  - -0.07874337005303958
  - -0.0751733986128111
  train_neg_hamming_loss_micro_oob:
  - -0.08231334149326805
  - -0.07252141982864137
  - -0.07915136678906569
  - -0.07272541819665443
  - -0.07088943288453692
  train_neg_hamming_loss_samples:
  - -0.0869033047735618
  - -0.07711138310893513
  - -0.08343533251733985
  - -0.07874337005303957
  - -0.0751733986128111
  train_neg_hamming_loss_samples_oob:
  - -0.08231334149326805
  - -0.07252141982864137
  - -0.07915136678906567
  - -0.07272541819665441
  - -0.07088943288453692
  train_neg_hamming_loss_weighted:
  - -0.09103719154979584
  - -0.08129549085744717
  - -0.08704223469660519
  - -0.0830437494431079
  - -0.07929833126220487
  train_neg_hamming_loss_weighted_oob:
  - -0.0934448783951713
  - -0.08444286644180131
  - -0.08987124654726901
  - -0.08478125278446047
  - -0.08314841114858867
  train_neg_label_ranking_loss:
  - -0.05509198884284384
  - -0.045724306916167384
  - -0.054874433623578626
  - -0.051994444667153285
  - -0.04677350218560889
  train_neg_label_ranking_loss_oob:
  - -0.11941554449249388
  - -0.10984451895447109
  - -0.11719042914323352
  - -0.11511231206853642
  - -0.11077406215915107
  train_precision_macro:
  - 0.9130966952264381
  - 0.9228886168910648
  - 0.9165646674826601
  - 0.9212566299469603
  - 0.924826601387189
  train_precision_macro_oob:
  - 0.9176866585067319
  - 0.9274785801713584
  - 0.9208486332109346
  - 0.9272745818033454
  - 0.9291105671154631
  train_precision_micro:
  - 0.9130966952264382
  - 0.9228886168910648
  - 0.9165646674826602
  - 0.9212566299469604
  - 0.9248266013871889
  train_precision_micro_oob:
  - 0.9176866585067319
  - 0.9274785801713586
  - 0.9208486332109344
  - 0.9272745818033455
  - 0.929110567115463
  train_precision_samples:
  - 0.9130966952264382
  - 0.9228886168910648
  - 0.9165646674826601
  - 0.9212566299469604
  - 0.9248266013871889
  train_precision_samples_oob:
  - 0.917686658506732
  - 0.9274785801713586
  - 0.9208486332109342
  - 0.9272745818033457
  - 0.9291105671154631
  train_precision_weighted:
  - 0.9089628084502043
  - 0.9187045091425529
  - 0.9129577653033948
  - 0.9169562505568921
  - 0.9207016687377951
  train_precision_weighted_oob:
  - 0.9065551216048285
  - 0.9155571335581986
  - 0.9101287534527309
  - 0.9152187472155395
  - 0.9168515888514113
  train_recall_macro:
  - 0.9130966952264381
  - 0.9228886168910648
  - 0.9165646674826601
  - 0.9212566299469603
  - 0.924826601387189
  train_recall_macro_oob:
  - 0.9176866585067319
  - 0.9274785801713584
  - 0.9208486332109346
  - 0.9272745818033454
  - 0.9291105671154631
  train_recall_micro:
  - 0.9130966952264382
  - 0.9228886168910648
  - 0.9165646674826602
  - 0.9212566299469604
  - 0.9248266013871889
  train_recall_micro_oob:
  - 0.9176866585067319
  - 0.9274785801713586
  - 0.9208486332109344
  - 0.9272745818033455
  - 0.929110567115463
  train_recall_samples:
  - 0.9130966952264382
  - 0.9228886168910648
  - 0.9165646674826601
  - 0.9212566299469604
  - 0.9248266013871889
  train_recall_samples_oob:
  - 0.917686658506732
  - 0.9274785801713586
  - 0.9208486332109342
  - 0.9272745818033457
  - 0.9291105671154631
  train_recall_weighted:
  - 0.9089628084502043
  - 0.9187045091425529
  - 0.9129577653033948
  - 0.9169562505568921
  - 0.9207016687377951
  train_recall_weighted_oob:
  - 0.9065551216048285
  - 0.9155571335581986
  - 0.9101287534527309
  - 0.9152187472155395
  - 0.9168515888514113
  train_roc_auc_macro:
  - 0.9413327247281016
  - 0.9543901610362178
  - 0.945478078651734
  - 0.946360194525288
  - 0.9502230559095026
  train_roc_auc_macro_oob:
  - 0.8725342692761648
  - 0.8795022285657459
  - 0.8692197659083586
  - 0.8687266877620159
  - 0.8742290783332206
  train_roc_auc_micro:
  - 0.93694578342985
  - 0.9472443406159515
  - 0.93801932797876
  - 0.9416216530820993
  - 0.9468910404053699
  train_roc_auc_micro_oob:
  - 0.8765563306133193
  - 0.8821675934456437
  - 0.8716532884889883
  - 0.8759534170284677
  - 0.884503117596736
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9468305715937326
  - 0.9582777996367364
  - 0.9506647863145128
  - 0.9521804994553994
  - 0.9560077089087211
  train_roc_auc_weighted_oob:
  - 0.8737782299356222
  - 0.879280178207112
  - 0.8699412698750455
  - 0.8704943401802326
  - 0.8803971421594422
start: 2023-12-12 17:06:08.372955
wrapper: null
