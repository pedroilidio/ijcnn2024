active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzC8DQzMzMzMwEQNDMzMzMzARAMDMzMzMzC8CgmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmEkAgMzMzMzMLwCAzMzMzMwvA4MzMzMzMDEBAZmZmZmb2vw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 05:17:41.443076
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__9
  params: {}
hash: f00ca89004e5402b5188d8b622ab2faecf8741ed5db0266058c38b63972764e1
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f00ca89_20231222T045723040107_embedding_proba_weak__9_emotions.yml
results:
  fit_time:
  - 1140.7043874263763
  - 1179.7614073753357
  - 1185.3874480724335
  - 1189.8406245708466
  - 1193.7123289108276
  score_time:
  - 7.014911651611328
  - 6.940510272979736
  - 7.405455827713013
  - 8.062814235687256
  - 7.807101249694824
  test_average_precision_macro:
  - 0.7304034382216084
  - 0.6218726384310467
  - 0.6949208766551922
  - 0.6914100800332248
  - 0.7415463637224815
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7280543488304725
  - 0.6453819898954752
  - 0.7029517740606189
  - 0.6940525266413207
  - 0.7147596319634004
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7972465886939571
  - 0.7345173041894353
  - 0.7548269581056466
  - 0.7424396135265701
  - 0.7885648148148149
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7287497334521242
  - 0.6341522011944549
  - 0.7001184340966133
  - 0.6947008739082817
  - 0.7377031456703623
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7324561403508771
  - 0.7527322404371585
  - 0.76775956284153
  - 0.744927536231884
  - 0.7416666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7324561403508771
  - 0.7527322404371585
  - 0.76775956284153
  - 0.744927536231884
  - 0.7416666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.732456140350877
  - 0.7527322404371585
  - 0.76775956284153
  - 0.7449275362318841
  - 0.7416666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7163612155388471
  - 0.7438336591968716
  - 0.7594392107410429
  - 0.7349565217391305
  - 0.7320833333333333
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5861517957806985
  - 0.6064951549885496
  - 0.6255793896857265
  - 0.5986741246804207
  - 0.591676295550074
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5778546712802768
  - 0.6035049288061336
  - 0.623059866962306
  - 0.5935334872979214
  - 0.5894039735099338
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.593984962406015
  - 0.6260733801717407
  - 0.6407884465261513
  - 0.6130434782608696
  - 0.6089285714285714
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5661592204079512
  - 0.5952889028064188
  - 0.6147437000679999
  - 0.5858733470710626
  - 0.5799937895567451
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.797246588693957
  - 0.7345173041894355
  - 0.7548269581056465
  - 0.74243961352657
  - 0.7885648148148147
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3370066544613291
  - 0.3105353385511331
  - 0.38608102866034866
  - 0.3608891624972799
  - 0.3112919719809292
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3359820798118142
  - 0.33273390674470843
  - 0.3978112517512325
  - 0.3761437710054698
  - 0.31694676369642755
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.23527674556665135
  - 0.24901190826698488
  - 0.2587889057073156
  - 0.2349412114666008
  - 0.2048069152849943
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3141471213240611
  - 0.3123326230271299
  - 0.3838179039990041
  - 0.3550788794906738
  - 0.3087125873621606
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8605999123426686
  - 0.8148332015105662
  - 0.8283365507786726
  - 0.8239235857694288
  - 0.8543635917566063
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.9035087719298245
  - -2.918032786885246
  - -2.9344262295081966
  - -3.1478260869565218
  - -2.65
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2675438596491228
  - -0.24726775956284153
  - -0.23224043715846995
  - -0.25507246376811593
  - -0.25833333333333336
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2675438596491228
  - -0.24726775956284153
  - -0.23224043715846995
  - -0.25507246376811593
  - -0.25833333333333336
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2675438596491228
  - -0.24726775956284147
  - -0.23224043715846995
  - -0.2550724637681159
  - -0.25833333333333336
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2836387844611529
  - -0.2561663408031283
  - -0.24056078925895705
  - -0.2650434782608696
  - -0.26791666666666664
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16807992202729044
  - -0.21329690346083785
  - -0.20673952641165755
  - -0.21108695652173914
  - -0.14972222222222223
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7324561403508771
  - 0.7527322404371585
  - 0.76775956284153
  - 0.744927536231884
  - 0.7416666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7324561403508771
  - 0.7527322404371585
  - 0.76775956284153
  - 0.744927536231884
  - 0.7416666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.732456140350877
  - 0.7527322404371585
  - 0.76775956284153
  - 0.7449275362318841
  - 0.7416666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7163612155388471
  - 0.7438336591968716
  - 0.7594392107410429
  - 0.7349565217391305
  - 0.7320833333333333
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7324561403508771
  - 0.7527322404371585
  - 0.76775956284153
  - 0.744927536231884
  - 0.7416666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7324561403508771
  - 0.7527322404371585
  - 0.76775956284153
  - 0.744927536231884
  - 0.7416666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.732456140350877
  - 0.7527322404371585
  - 0.76775956284153
  - 0.7449275362318841
  - 0.7416666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7163612155388471
  - 0.7438336591968716
  - 0.7594392107410429
  - 0.7349565217391305
  - 0.7320833333333333
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.832831601947496
  - 0.78698600030819
  - 0.807377487112627
  - 0.7816265254021516
  - 0.8479530367465937
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8428377329192546
  - 0.8050994181272979
  - 0.8219089532546423
  - 0.8004778972520907
  - 0.8573999999999999
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8319200779727097
  - 0.786703096539162
  - 0.7932604735883424
  - 0.788913043478261
  - 0.8502777777777778
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8278076030474576
  - 0.7897313273405482
  - 0.8078146278274156
  - 0.7779054628676975
  - 0.8437193698309126
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8426563792089103
  - 0.8728570963826172
  - 0.863120666266379
  - 0.8579723776459441
  - 0.8735706579633088
  train_average_precision_macro_oob:
  - 0.8310875210943577
  - 0.8614217152282424
  - 0.8535730244184574
  - 0.8432880508319229
  - 0.8609401202188297
  train_average_precision_micro:
  - 0.8486468944092909
  - 0.8737815050407353
  - 0.8651796190443337
  - 0.8612166343821943
  - 0.8760633607408239
  train_average_precision_micro_oob:
  - 0.8377034756373485
  - 0.865006808008869
  - 0.856569021010565
  - 0.8479272420986931
  - 0.8648841888773303
  train_average_precision_samples:
  - 0.8715901183020182
  - 0.8961606510969568
  - 0.8661122906345836
  - 0.8831357508135751
  - 0.8932111815832746
  train_average_precision_samples_oob:
  - 0.8585710971932266
  - 0.8858221278603444
  - 0.8566407171502712
  - 0.8717747559274757
  - 0.8804850833920601
  train_average_precision_weighted:
  - 0.844943932982024
  - 0.8759787488344315
  - 0.8638087694301001
  - 0.8571914902773184
  - 0.8748725482931823
  train_average_precision_weighted_oob:
  - 0.8341079943347826
  - 0.8655129949298003
  - 0.8550506898838639
  - 0.8426928630514541
  - 0.8628199379509237
  train_f1_macro:
  - 0.8413361169102297
  - 0.8326256192498231
  - 0.8340410474168437
  - 0.8368200836820083
  - 0.8312191684284707
  train_f1_macro_oob:
  - 0.8208072372999303
  - 0.8145789101203115
  - 0.8205944798301484
  - 0.8204323570432357
  - 0.8153629316420014
  train_f1_micro:
  - 0.8413361169102297
  - 0.832625619249823
  - 0.8340410474168436
  - 0.8368200836820083
  - 0.8312191684284708
  train_f1_micro_oob:
  - 0.8208072372999304
  - 0.8145789101203114
  - 0.8205944798301487
  - 0.8204323570432357
  - 0.8153629316420014
  train_f1_samples:
  - 0.8413361169102297
  - 0.832625619249823
  - 0.8340410474168436
  - 0.8368200836820083
  - 0.8312191684284708
  train_f1_samples_oob:
  - 0.8208072372999304
  - 0.8145789101203114
  - 0.8205944798301487
  - 0.8204323570432359
  - 0.8153629316420014
  train_f1_weighted:
  - 0.834770779999811
  - 0.8251556573391541
  - 0.8274486149309321
  - 0.8293498296507248
  - 0.8262123116774278
  train_f1_weighted_oob:
  - 0.8155589038248992
  - 0.8074333834299481
  - 0.8140467282784836
  - 0.8134758359908452
  - 0.811641715711483
  train_jaccard_macro:
  - 0.7275350692395411
  - 0.7152877721950738
  - 0.7167518104508973
  - 0.7212852065288361
  - 0.7120051300395821
  train_jaccard_macro_oob:
  - 0.6976416568934303
  - 0.6895865957408102
  - 0.6972509326871218
  - 0.6975642414831794
  - 0.6889260534525512
  train_jaccard_micro:
  - 0.7261261261261261
  - 0.7132464383146409
  - 0.7153262518968133
  - 0.7194244604316546
  - 0.7111848055471812
  train_jaccard_micro_oob:
  - 0.6960755385069342
  - 0.6871641791044776
  - 0.6957695769576958
  - 0.6955365060597103
  - 0.6882807852468769
  train_jaccard_samples:
  - 0.7484839447261159
  - 0.732837933474876
  - 0.735517136791022
  - 0.739489938234708
  - 0.7332628611698377
  train_jaccard_samples_oob:
  - 0.7186599065513469
  - 0.7074107774744717
  - 0.7168638155899302
  - 0.7154313608288503
  - 0.710309070774187
  train_jaccard_weighted:
  - 0.717999813426955
  - 0.7045782992479215
  - 0.7073173258746678
  - 0.7104956479815996
  - 0.7048488599171202
  train_jaccard_weighted_oob:
  - 0.6900925800314877
  - 0.6794658768674864
  - 0.6880263205530718
  - 0.6876303556773816
  - 0.6836682143981995
  train_label_ranking_average_precision_score:
  - 0.8715901183020179
  - 0.8961606510969568
  - 0.8661122906345836
  - 0.8831357508135748
  - 0.8932111815832736
  train_label_ranking_average_precision_score_oob:
  - 0.8585710971932264
  - 0.8858221278603442
  - 0.8566407171502712
  - 0.871774755927475
  - 0.8804850833920591
  train_matthews_corrcoef_macro:
  - 0.6254470850065325
  - 0.6119235007564618
  - 0.6145144190055142
  - 0.6153813083656438
  - 0.6029803022953918
  train_matthews_corrcoef_macro_oob:
  - 0.5664456667671721
  - 0.5629384182961233
  - 0.5790424579742742
  - 0.5705267896369716
  - 0.5582340789369159
  train_matthews_corrcoef_micro:
  - 0.6260860848520309
  - 0.6112152640014069
  - 0.6155938203280918
  - 0.6151146757645394
  - 0.6076538361511064
  train_matthews_corrcoef_micro_oob:
  - 0.5736278882327029
  - 0.5656964386819354
  - 0.5814044537894237
  - 0.5734461047347107
  - 0.5679325165872758
  train_matthews_corrcoef_samples:
  - 0.5180202660699471
  - 0.5307146802210316
  - 0.5171919707108477
  - 0.5078332779285621
  - 0.5190717492849766
  train_matthews_corrcoef_samples_oob:
  - 0.452023705820823
  - 0.4700450807278197
  - 0.4690082158649437
  - 0.4522339239065088
  - 0.47002724597421086
  train_matthews_corrcoef_weighted:
  - 0.6211102397622055
  - 0.6063669466485727
  - 0.6107287535429323
  - 0.6091660224752828
  - 0.6027799606612912
  train_matthews_corrcoef_weighted_oob:
  - 0.5664270792021437
  - 0.5592093514452967
  - 0.576017138639259
  - 0.5664669773741056
  - 0.5618258171558821
  train_ndgc:
  - 0.9131616125574106
  - 0.9318352839076708
  - 0.9091059918028072
  - 0.9209211000251629
  - 0.9293320517420469
  train_ndgc_oob:
  - 0.9039788003390926
  - 0.9251713380279999
  - 0.9031241732206058
  - 0.9144007649005715
  - 0.9216207971781099
  train_neg_coverage_error:
  - -2.488517745302714
  - -2.416135881104034
  - -2.5095541401273884
  - -2.3912133891213387
  - -2.4334038054968286
  train_neg_coverage_error_oob:
  - -2.5240083507306887
  - -2.475583864118896
  - -2.5711252653927814
  - -2.48326359832636
  - -2.526427061310782
  train_neg_hamming_loss_macro:
  - -0.15866388308977034
  - -0.16737438075017694
  - -0.16595895258315638
  - -0.16317991631799164
  - -0.16878083157152923
  train_neg_hamming_loss_macro_oob:
  - -0.1791927627000696
  - -0.1854210898796886
  - -0.17940552016985137
  - -0.1795676429567643
  - -0.18463706835799862
  train_neg_hamming_loss_micro:
  - -0.15866388308977036
  - -0.16737438075017694
  - -0.1659589525831564
  - -0.16317991631799164
  - -0.16878083157152923
  train_neg_hamming_loss_micro_oob:
  - -0.1791927627000696
  - -0.1854210898796886
  - -0.17940552016985137
  - -0.1795676429567643
  - -0.1846370683579986
  train_neg_hamming_loss_samples:
  - -0.15866388308977036
  - -0.16737438075017694
  - -0.16595895258315638
  - -0.16317991631799164
  - -0.16878083157152923
  train_neg_hamming_loss_samples_oob:
  - -0.1791927627000696
  - -0.18542108987968864
  - -0.17940552016985137
  - -0.17956764295676428
  - -0.18463706835799862
  train_neg_hamming_loss_weighted:
  - -0.16522922000018891
  - -0.17484434266084592
  - -0.17255138506906795
  - -0.17065017034927524
  - -0.17378768832257202
  train_neg_hamming_loss_weighted_oob:
  - -0.18444109617510088
  - -0.19256661657005175
  - -0.18595327172151652
  - -0.18652416400915484
  - -0.18835828428851684
  train_neg_label_ranking_loss:
  - -0.11100672697749943
  - -0.08573956121726822
  - -0.10685303137532437
  - -0.09471757322175732
  - -0.09147874089734555
  train_neg_label_ranking_loss_oob:
  - -0.11714799350498725
  - -0.0960073130455296
  - -0.11758079735786742
  - -0.10865295211529521
  - -0.10722926943857178
  train_precision_macro:
  - 0.8413361169102297
  - 0.8326256192498231
  - 0.8340410474168437
  - 0.8368200836820083
  - 0.8312191684284707
  train_precision_macro_oob:
  - 0.8208072372999303
  - 0.8145789101203115
  - 0.8205944798301484
  - 0.8204323570432357
  - 0.8153629316420014
  train_precision_micro:
  - 0.8413361169102297
  - 0.832625619249823
  - 0.8340410474168436
  - 0.8368200836820083
  - 0.8312191684284708
  train_precision_micro_oob:
  - 0.8208072372999304
  - 0.8145789101203114
  - 0.8205944798301487
  - 0.8204323570432357
  - 0.8153629316420014
  train_precision_samples:
  - 0.8413361169102297
  - 0.832625619249823
  - 0.8340410474168436
  - 0.8368200836820083
  - 0.8312191684284708
  train_precision_samples_oob:
  - 0.8208072372999304
  - 0.8145789101203114
  - 0.8205944798301487
  - 0.8204323570432359
  - 0.8153629316420014
  train_precision_weighted:
  - 0.834770779999811
  - 0.8251556573391541
  - 0.8274486149309321
  - 0.8293498296507248
  - 0.8262123116774278
  train_precision_weighted_oob:
  - 0.8155589038248992
  - 0.8074333834299481
  - 0.8140467282784836
  - 0.8134758359908452
  - 0.811641715711483
  train_recall_macro:
  - 0.8413361169102297
  - 0.8326256192498231
  - 0.8340410474168437
  - 0.8368200836820083
  - 0.8312191684284707
  train_recall_macro_oob:
  - 0.8208072372999303
  - 0.8145789101203115
  - 0.8205944798301484
  - 0.8204323570432357
  - 0.8153629316420014
  train_recall_micro:
  - 0.8413361169102297
  - 0.832625619249823
  - 0.8340410474168436
  - 0.8368200836820083
  - 0.8312191684284708
  train_recall_micro_oob:
  - 0.8208072372999304
  - 0.8145789101203114
  - 0.8205944798301487
  - 0.8204323570432357
  - 0.8153629316420014
  train_recall_samples:
  - 0.8413361169102297
  - 0.832625619249823
  - 0.8340410474168436
  - 0.8368200836820083
  - 0.8312191684284708
  train_recall_samples_oob:
  - 0.8208072372999304
  - 0.8145789101203114
  - 0.8205944798301487
  - 0.8204323570432359
  - 0.8153629316420014
  train_recall_weighted:
  - 0.834770779999811
  - 0.8251556573391541
  - 0.8274486149309321
  - 0.8293498296507248
  - 0.8262123116774278
  train_recall_weighted_oob:
  - 0.8155589038248992
  - 0.8074333834299481
  - 0.8140467282784836
  - 0.8134758359908452
  - 0.811641715711483
  train_roc_auc_macro:
  - 0.8946783004067552
  - 0.9184908180001014
  - 0.9011300458654166
  - 0.903516052215286
  - 0.9157594148721045
  train_roc_auc_macro_oob:
  - 0.8842604645739144
  - 0.9109659504300026
  - 0.8926854171388735
  - 0.892848052307016
  - 0.9057503564562698
  train_roc_auc_micro:
  - 0.9005894858909934
  - 0.9208190175503761
  - 0.9065145331715404
  - 0.9105744955798158
  - 0.9198914298914299
  train_roc_auc_micro_oob:
  - 0.8916738670729212
  - 0.9131947023864797
  - 0.8992384991391906
  - 0.9011042615767748
  - 0.9104354354354355
  train_roc_auc_samples:
  - 0.8889932730225006
  - 0.9142604387827318
  - 0.8931469686246756
  - 0.9052824267782428
  - 0.9085212591026546
  train_roc_auc_samples_oob:
  - 0.8828520064950128
  - 0.9039926869544704
  - 0.8824192026421325
  - 0.8913470478847048
  - 0.8927707305614283
  train_roc_auc_weighted:
  - 0.8930052163674819
  - 0.9177948462272305
  - 0.8981661254619124
  - 0.9012521553969601
  - 0.9144925427404184
  train_roc_auc_weighted_oob:
  - 0.8831853493214789
  - 0.9106686622933358
  - 0.8903233665668996
  - 0.8908623036587507
  - 0.9043478564942624
start: 2023-12-22 04:57:23.040107
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
