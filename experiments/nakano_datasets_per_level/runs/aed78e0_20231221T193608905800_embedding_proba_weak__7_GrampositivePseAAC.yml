active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZAcAAzczMzMz8PwCYmZmZmcm/AJiZmZmZyb8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 19:40:27.021871
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__7
  params: {}
hash: aed78e025f639115e784aea4371f8e44628b4792bbf4085f6c68da953b4ba7c9
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/aed78e0_20231221T193608905800_embedding_proba_weak__7_GrampositivePseAAC.yml
results:
  fit_time:
  - 227.41567611694336
  - 228.1695032119751
  - 229.7612829208374
  - 233.50434064865112
  - 238.80429935455322
  score_time:
  - 5.815112352371216
  - 5.9813621044158936
  - 5.67176628112793
  - 6.092421770095825
  - 6.200859785079956
  test_average_precision_macro:
  - 0.3796153237047477
  - 0.38805460922397855
  - 0.3811519697275639
  - 0.3970539086523248
  - 0.44407323881624816
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4989088715963069
  - 0.4802356985725382
  - 0.4808567660580096
  - 0.5165448920939971
  - 0.5514714224129725
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7169811320754715
  - 0.7017973856209149
  - 0.7011217948717949
  - 0.71875
  - 0.7289644012944982
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4799009281967109
  - 0.46906673744308214
  - 0.46660384096619084
  - 0.5161155006241958
  - 0.5411581928209528
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7476415094339623
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262137
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7476415094339622
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262136
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7476415094339622
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262136
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6728373086507654
  - 0.6746443675509419
  - 0.6686320754716981
  - 0.6623626373626373
  - 0.7143390589992532
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6183846818312698
  - 0.6249144021471
  - 0.6130649856965646
  - 0.6138412684436829
  - 0.6512932553904802
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5969868173258004
  - 0.6031434184675835
  - 0.5908221797323135
  - 0.5908221797323135
  - 0.6349206349206349
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6553459119496853
  - 0.6627450980392153
  - 0.6461538461538461
  - 0.6520146520146519
  - 0.6944983818770225
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5150529190552225
  - 0.5158182529815353
  - 0.5112543699634067
  - 0.5018299556942675
  - 0.5617524089017517
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7169811320754716
  - 0.7017973856209151
  - 0.7011217948717949
  - 0.71875
  - 0.7289644012944984
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1423307076029107
  - 0.16640450996355088
  - 0.13926814160887896
  - 0.1172889786132971
  - 0.1828308857596868
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2994506732210431
  - 0.31613457323634675
  - 0.2868276142755739
  - 0.2947308449572003
  - 0.38607996029646285
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.28616352201257866
  - 0.30392156862745096
  - 0.2707182744074928
  - 0.2861152217706126
  - 0.37130113529957565
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1880362704355361
  - 0.21410530202964714
  - 0.18190427576617438
  - 0.16591308199152222
  - 0.26100050128158714
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7889328285391647
  - 0.7777169903985246
  - 0.7789018178519961
  - 0.7908128041735645
  - 0.7985131437844438
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7547169811320755
  - -1.7843137254901962
  - -1.7884615384615385
  - -1.7115384615384615
  - -1.7184466019417475
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2523584905660377
  - -0.24754901960784315
  - -0.25721153846153844
  - -0.25721153846153844
  - -0.2233009708737864
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25235849056603776
  - -0.24754901960784315
  - -0.25721153846153844
  - -0.25721153846153844
  - -0.22330097087378642
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25235849056603776
  - -0.24754901960784315
  - -0.25721153846153844
  - -0.25721153846153844
  - -0.22330097087378642
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3271626913492346
  - -0.3253556324490581
  - -0.3313679245283019
  - -0.3376373626373626
  - -0.28566094100074685
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.25157232704402516
  - -0.261437908496732
  - -0.2532051282051282
  - -0.23557692307692307
  - -0.23543689320388353
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7476415094339623
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262137
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7476415094339622
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262136
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7476415094339622
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262136
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6728373086507654
  - 0.6746443675509419
  - 0.6686320754716981
  - 0.6623626373626373
  - 0.7143390589992532
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7476415094339623
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262137
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7476415094339622
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262136
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7476415094339622
  - 0.7524509803921569
  - 0.7427884615384616
  - 0.7427884615384616
  - 0.7766990291262136
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6728373086507654
  - 0.6746443675509419
  - 0.6686320754716981
  - 0.6623626373626373
  - 0.7143390589992532
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6300598054329973
  - 0.722366426351744
  - 0.6542195662107405
  - 0.6366857314172738
  - 0.7059708802256305
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7607986234721728
  - 0.7755350506215558
  - 0.7585209981740718
  - 0.7806461491348952
  - 0.7870879120879121
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7484276729559748
  - 0.738562091503268
  - 0.7467948717948718
  - 0.7644230769230769
  - 0.7645631067961165
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6519597967544515
  - 0.6730421441125395
  - 0.650823059486536
  - 0.6738805213883465
  - 0.6983286125725716
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9560993475463805
  - 0.9590322654537358
  - 0.9629012812954969
  - 0.9550266814304683
  - 0.9577553720259437
  train_average_precision_macro_oob:
  - 0.8859023197814465
  - 0.8389296323756446
  - 0.8606309422244749
  - 0.8871923277990275
  - 0.8644873567518323
  train_average_precision_micro:
  - 0.8993824344337673
  - 0.9171214887651812
  - 0.9128270013636148
  - 0.9035543977125378
  - 0.9169322995042235
  train_average_precision_micro_oob:
  - 0.8713050619451465
  - 0.8782121257638839
  - 0.8776591305810285
  - 0.8760899210233841
  - 0.8806337699873804
  train_average_precision_samples:
  - 0.9574253430185634
  - 0.9562350119904077
  - 0.9550200803212853
  - 0.9646586345381527
  - 0.9635416666666667
  train_average_precision_samples_oob:
  - 0.9507667473769169
  - 0.947841726618705
  - 0.9475903614457831
  - 0.9582329317269075
  - 0.9595352564102565
  train_average_precision_weighted:
  - 0.9413806691685285
  - 0.9476172252992747
  - 0.9507689251865158
  - 0.940338784904536
  - 0.9440317968702725
  train_average_precision_weighted_oob:
  - 0.9255783515522455
  - 0.9194571302027704
  - 0.9271467528934557
  - 0.9244639188813308
  - 0.919432641471863
  train_f1_macro:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.966867469879518
  - 0.9692771084337349
  - 0.9723557692307693
  train_f1_macro_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_f1_micro:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.9668674698795181
  - 0.9692771084337349
  - 0.9723557692307693
  train_f1_micro_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_f1_samples:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.9668674698795181
  - 0.9692771084337349
  - 0.9723557692307693
  train_f1_samples_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_f1_weighted:
  - 0.9671410571300828
  - 0.9642395347380053
  - 0.9664962006298577
  - 0.9697872831037067
  - 0.9739535524141729
  train_f1_weighted_oob:
  - 0.9534551535527026
  - 0.9463763905740016
  - 0.9500621189795151
  - 0.9561999192944025
  - 0.9597943822287499
  train_jaccard_macro:
  - 0.9379196231535758
  - 0.9319616823078086
  - 0.9371631495956751
  - 0.9414145330324796
  - 0.9471549162671633
  train_jaccard_macro_oob:
  - 0.9194646296022878
  - 0.9092111131008919
  - 0.914161352063624
  - 0.9230451580958734
  - 0.9286335417368199
  train_jaccard_micro:
  - 0.936694021101993
  - 0.9305555555555556
  - 0.9358600583090378
  - 0.9403857393337229
  - 0.9461988304093567
  train_jaccard_micro_oob:
  - 0.9186991869918699
  - 0.9084668192219679
  - 0.9135446685878963
  - 0.9224088013896931
  - 0.9281575898030128
  train_jaccard_samples:
  - 0.9531880548829702
  - 0.948521183053557
  - 0.9527710843373494
  - 0.957269076305221
  - 0.9602564102564103
  train_jaccard_samples_oob:
  - 0.9412429378531074
  - 0.9347721822541967
  - 0.9379919678714859
  - 0.9450602409638555
  - 0.9490384615384617
  train_jaccard_weighted:
  - 0.9379925837347047
  - 0.9328667761852228
  - 0.9368870424062405
  - 0.9426394802878246
  - 0.9504812183924498
  train_jaccard_weighted_oob:
  - 0.9119312881816265
  - 0.898990165431264
  - 0.9055435720733696
  - 0.9167938274981657
  - 0.9232331867338364
  train_label_ranking_average_precision_score:
  - 0.9574253430185633
  - 0.9562350119904077
  - 0.955020080321285
  - 0.9646586345381526
  - 0.9635416666666666
  train_label_ranking_average_precision_score_oob:
  - 0.9507667473769167
  - 0.947841726618705
  - 0.9475903614457829
  - 0.9582329317269074
  - 0.9595352564102563
  train_matthews_corrcoef_macro:
  - 0.6989855291815801
  - 0.692448522000397
  - 0.6985220568329682
  - 0.7049514887410886
  - 0.708871340302469
  train_matthews_corrcoef_macro_oob:
  - 0.6774596372327101
  - 0.6661851084436365
  - 0.6706654932743035
  - 0.6832838461065726
  - 0.6878583563026538
  train_matthews_corrcoef_micro:
  - 0.914373265555934
  - 0.9057362781024968
  - 0.9130255841878733
  - 0.9189711748768626
  - 0.9271697874031051
  train_matthews_corrcoef_micro_oob:
  - 0.8875530322136305
  - 0.872177573910384
  - 0.8794510375782164
  - 0.8922069663680368
  - 0.9005586677459806
  train_matthews_corrcoef_samples:
  - 0.9232517880095308
  - 0.9163653612781345
  - 0.9200360351234304
  - 0.9245402079383594
  - 0.9340647539431907
  train_matthews_corrcoef_samples_oob:
  - 0.8904927425953905
  - 0.872044926642906
  - 0.8776387582633288
  - 0.8903326117390664
  - 0.8983943529028099
  train_matthews_corrcoef_weighted:
  - 0.9004072135044008
  - 0.8920558593424585
  - 0.899789237743355
  - 0.9045546341516436
  - 0.9138824497729289
  train_matthews_corrcoef_weighted_oob:
  - 0.8708174217338134
  - 0.8537724256674648
  - 0.8631835483845067
  - 0.8749127845912466
  - 0.8836379693981568
  train_ndgc:
  - 0.9684975760745486
  - 0.9676575969618092
  - 0.9667036987566382
  - 0.9738940556626526
  - 0.9729940545889536
  train_ndgc_oob:
  - 0.9635876591452706
  - 0.9613541070858235
  - 0.9609534864483902
  - 0.9690990956760674
  - 0.9701175816497172
  train_neg_coverage_error:
  - -1.1016949152542372
  - -1.1007194244604317
  - -1.1036144578313254
  - -1.0795180722891566
  - -1.0889423076923077
  train_neg_coverage_error_oob:
  - -1.1428571428571428
  - -1.1558752997601918
  - -1.1421686746987951
  - -1.1253012048192772
  - -1.1177884615384615
  train_neg_hamming_loss_macro:
  - -0.03268765133171913
  - -0.03597122302158273
  - -0.03313253012048193
  - -0.03072289156626506
  - -0.027644230769230768
  train_neg_hamming_loss_macro_oob:
  - -0.0423728813559322
  - -0.047961630695443645
  - -0.04518072289156627
  - -0.04036144578313253
  - -0.03725961538461538
  train_neg_hamming_loss_micro:
  - -0.03268765133171913
  - -0.03597122302158273
  - -0.03313253012048193
  - -0.03072289156626506
  - -0.027644230769230768
  train_neg_hamming_loss_micro_oob:
  - -0.0423728813559322
  - -0.047961630695443645
  - -0.045180722891566265
  - -0.04036144578313253
  - -0.037259615384615384
  train_neg_hamming_loss_samples:
  - -0.03268765133171913
  - -0.03597122302158273
  - -0.03313253012048193
  - -0.03072289156626506
  - -0.027644230769230768
  train_neg_hamming_loss_samples_oob:
  - -0.0423728813559322
  - -0.047961630695443645
  - -0.045180722891566265
  - -0.04036144578313253
  - -0.037259615384615384
  train_neg_hamming_loss_weighted:
  - -0.03285894286991715
  - -0.03576046526199468
  - -0.03350379937014244
  - -0.030212716896293308
  - -0.02604644758582706
  train_neg_hamming_loss_weighted_oob:
  - -0.04654484644729737
  - -0.05362360942599839
  - -0.04993788102048482
  - -0.043800080705597516
  - -0.04020561777125023
  train_neg_label_ranking_loss:
  - -0.030669895076674735
  - -0.03037569944044764
  - -0.03293172690763052
  - -0.024096385542168676
  - -0.02724358974358974
  train_neg_label_ranking_loss_oob:
  - -0.043785310734463276
  - -0.048161470823341324
  - -0.04578313253012048
  - -0.038755020080321285
  - -0.03625801282051282
  train_precision_macro:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.966867469879518
  - 0.9692771084337349
  - 0.9723557692307693
  train_precision_macro_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_precision_micro:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.9668674698795181
  - 0.9692771084337349
  - 0.9723557692307693
  train_precision_micro_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_precision_samples:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.9668674698795181
  - 0.9692771084337349
  - 0.9723557692307693
  train_precision_samples_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_precision_weighted:
  - 0.9671410571300828
  - 0.9642395347380053
  - 0.9664962006298577
  - 0.9697872831037067
  - 0.9739535524141729
  train_precision_weighted_oob:
  - 0.9534551535527026
  - 0.9463763905740016
  - 0.9500621189795151
  - 0.9561999192944025
  - 0.9597943822287499
  train_recall_macro:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.966867469879518
  - 0.9692771084337349
  - 0.9723557692307693
  train_recall_macro_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_recall_micro:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.9668674698795181
  - 0.9692771084337349
  - 0.9723557692307693
  train_recall_micro_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_recall_samples:
  - 0.9673123486682809
  - 0.9640287769784173
  - 0.9668674698795181
  - 0.9692771084337349
  - 0.9723557692307693
  train_recall_samples_oob:
  - 0.9576271186440678
  - 0.9520383693045563
  - 0.9548192771084337
  - 0.9596385542168675
  - 0.9627403846153846
  train_recall_weighted:
  - 0.9671410571300828
  - 0.9642395347380053
  - 0.9664962006298577
  - 0.9697872831037067
  - 0.9739535524141729
  train_recall_weighted_oob:
  - 0.9534551535527026
  - 0.9463763905740016
  - 0.9500621189795151
  - 0.9561999192944025
  - 0.9597943822287499
  train_roc_auc_macro:
  - 0.9845729597894515
  - 0.9869057398595712
  - 0.9860961310774055
  - 0.9854126017355846
  - 0.9871666406899858
  train_roc_auc_macro_oob:
  - 0.9613746861198442
  - 0.9555203061715409
  - 0.9649642077566281
  - 0.967296259314107
  - 0.9646974385888261
  train_roc_auc_micro:
  - 0.9826988611539917
  - 0.9848091476550848
  - 0.983844300263731
  - 0.9841049703749932
  - 0.9863933059205797
  train_roc_auc_micro_oob:
  - 0.9652753910232137
  - 0.9615057134748098
  - 0.9646229918719892
  - 0.9685701407669371
  - 0.9690446751205298
  train_roc_auc_samples:
  - 0.9693301049233252
  - 0.9696243005595523
  - 0.9670682730923694
  - 0.9759036144578314
  - 0.9727564102564101
  train_roc_auc_samples_oob:
  - 0.9562146892655367
  - 0.9518385291766586
  - 0.9542168674698795
  - 0.9612449799196786
  - 0.9637419871794871
  train_roc_auc_weighted:
  - 0.9793487645675353
  - 0.9829183369329789
  - 0.9815155356467626
  - 0.9806440266199595
  - 0.9829690388013708
  train_roc_auc_weighted_oob:
  - 0.9716582203483038
  - 0.9745536337490953
  - 0.9757519616995168
  - 0.974734917924364
  - 0.9747060697690424
start: 2023-12-21 19:36:08.905800
wrapper: null
