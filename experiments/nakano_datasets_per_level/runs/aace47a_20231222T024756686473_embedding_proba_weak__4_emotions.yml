active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmGkCAMzMzMzPjP0BmZmZmZva/kJmZmZmZGcCAMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:48:44.999230
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__4
  params: {}
hash: aace47a8f9f6e664652ea755952b4aee1e09147888a2b242f4dba3f9055bc00f
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/aace47a_20231222T024756686473_embedding_proba_weak__4_emotions.yml
results:
  fit_time:
  - 29.07126498222351
  - 29.76407790184021
  - 29.726069927215576
  - 29.851064443588257
  - 32.47136449813843
  score_time:
  - 4.333003997802734
  - 4.635997295379639
  - 4.506516933441162
  - 4.677732229232788
  - 4.51751708984375
  test_average_precision_macro:
  - 0.7292294183264465
  - 0.6994839578190478
  - 0.7177736243497678
  - 0.6928306771662106
  - 0.7050164304440735
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7280139361882823
  - 0.6793129842405207
  - 0.6873282706324342
  - 0.6628405302377521
  - 0.6837429891626048
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8015625000000001
  - 0.7910310734463277
  - 0.7972453703703705
  - 0.7906666666666665
  - 0.8089453860640301
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.737161664050034
  - 0.6963215478951946
  - 0.714140383836256
  - 0.6855074585039722
  - 0.6998404373506921
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7916666666666666
  - 0.7853107344632768
  - 0.798611111111111
  - 0.7986666666666666
  - 0.8135593220338982
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7916666666666666
  - 0.7853107344632768
  - 0.7986111111111112
  - 0.7986666666666666
  - 0.8135593220338984
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7916666666666667
  - 0.7853107344632767
  - 0.798611111111111
  - 0.7986666666666667
  - 0.8135593220338981
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7907991672005125
  - 0.7831122018559704
  - 0.7942567567567567
  - 0.7932612612612613
  - 0.811171032357473
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6591897618144498
  - 0.6497190568826291
  - 0.670329985319963
  - 0.6704594911948685
  - 0.6873328788344218
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6551724137931034
  - 0.6465116279069767
  - 0.6647398843930635
  - 0.6648168701442841
  - 0.6857142857142857
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6947704081632653
  - 0.6822070584782449
  - 0.706118326118326
  - 0.7026701298701298
  - 0.7248257392325187
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6573961909848917
  - 0.6464163405868089
  - 0.6636420163470101
  - 0.6623595145939112
  - 0.6836569858523067
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8015625000000001
  - 0.7910310734463274
  - 0.7972453703703699
  - 0.7906666666666664
  - 0.80894538606403
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5182139376281311
  - 0.4999987407134185
  - 0.5527101573937557
  - 0.5433808157723335
  - 0.580431566028758
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5334631730534088
  - 0.5159700623106478
  - 0.5553257766078484
  - 0.5519817599732116
  - 0.5901254684639792
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5267050454922624
  - 0.5175834291418161
  - 0.5634196300486548
  - 0.5589900450923835
  - 0.6021154066712453
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5254922021985918
  - 0.5061214022448983
  - 0.5520308206084659
  - 0.5409929608721049
  - 0.5838699293795567
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8615740139843323
  - 0.8537719371924892
  - 0.8601588998718613
  - 0.8535179145160002
  - 0.8676390692613348
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7857142857142856
  - -2.73728813559322
  - -2.716666666666667
  - -2.608
  - -2.669491525423729
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20833333333333334
  - -0.21468926553672318
  - -0.20138888888888892
  - -0.20133333333333334
  - -0.18644067796610173
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20833333333333334
  - -0.21468926553672316
  - -0.2013888888888889
  - -0.20133333333333334
  - -0.1864406779661017
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20833333333333331
  - -0.21468926553672316
  - -0.2013888888888889
  - -0.2013333333333333
  - -0.18644067796610173
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2092008327994875
  - -0.21688779814402945
  - -0.20574324324324325
  - -0.20673873873873874
  - -0.188828967642527
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15793650793650796
  - -0.1641242937853107
  - -0.16532407407407407
  - -0.15526666666666666
  - -0.14974105461393597
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7916666666666666
  - 0.7853107344632768
  - 0.798611111111111
  - 0.7986666666666666
  - 0.8135593220338982
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7916666666666666
  - 0.7853107344632768
  - 0.7986111111111112
  - 0.7986666666666666
  - 0.8135593220338984
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7916666666666667
  - 0.7853107344632767
  - 0.798611111111111
  - 0.7986666666666667
  - 0.8135593220338981
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7907991672005125
  - 0.7831122018559704
  - 0.7942567567567567
  - 0.7932612612612613
  - 0.811171032357473
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7916666666666666
  - 0.7853107344632768
  - 0.798611111111111
  - 0.7986666666666666
  - 0.8135593220338982
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7916666666666666
  - 0.7853107344632768
  - 0.7986111111111112
  - 0.7986666666666666
  - 0.8135593220338984
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7916666666666667
  - 0.7853107344632767
  - 0.798611111111111
  - 0.7986666666666667
  - 0.8135593220338981
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7907991672005125
  - 0.7831122018559704
  - 0.7942567567567567
  - 0.7932612612612613
  - 0.811171032357473
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.840592092932726
  - 0.8336815661119067
  - 0.8538137372547879
  - 0.8463276799749587
  - 0.8476275546641622
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8603773208025807
  - 0.855946927815511
  - 0.8634357248815081
  - 0.8650013650013649
  - 0.8647773845007451
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.842063492063492
  - 0.8358757062146892
  - 0.8346759259259259
  - 0.8447333333333333
  - 0.850258945386064
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8455165761263823
  - 0.8313472571258038
  - 0.8498887623574933
  - 0.8413653261479349
  - 0.8448396323403955
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8209467244238854
  - 0.8243963880709558
  - 0.817980952603413
  - 0.828876448033946
  - 0.8209026307034933
  train_average_precision_macro_oob:
  - 0.7974993619014694
  - 0.7988402633471942
  - 0.8051977253325627
  - 0.8114452555007851
  - 0.8008119884176135
  train_average_precision_micro:
  - 0.7676173803344715
  - 0.7719518198911207
  - 0.758789155309013
  - 0.7760390298874126
  - 0.769553015646581
  train_average_precision_micro_oob:
  - 0.7478624250784703
  - 0.7530969078412855
  - 0.7490235844352285
  - 0.7617532165207024
  - 0.7546396274094549
  train_average_precision_samples:
  - 0.862924462924463
  - 0.8704327485380118
  - 0.8628259337561663
  - 0.8710944919278253
  - 0.8695438596491227
  train_average_precision_samples_oob:
  - 0.8461480711480712
  - 0.8521871345029239
  - 0.8523079633544749
  - 0.8547542735042735
  - 0.8579766081871345
  train_average_precision_weighted:
  - 0.80832825343221
  - 0.812258166766113
  - 0.8028240295467595
  - 0.8159413264209388
  - 0.8073160313557125
  train_average_precision_weighted_oob:
  - 0.7856117683364229
  - 0.7876096866476234
  - 0.7913450160601672
  - 0.8000004755839896
  - 0.7888607626139723
  train_f1_macro:
  - 0.8866943866943866
  - 0.891578947368421
  - 0.8911205073995773
  - 0.8910256410256411
  - 0.8863157894736843
  train_f1_macro_oob:
  - 0.8648648648648649
  - 0.8638596491228071
  - 0.872797744890768
  - 0.8696581196581196
  - 0.8659649122807016
  train_f1_micro:
  - 0.8866943866943867
  - 0.891578947368421
  - 0.8911205073995772
  - 0.8910256410256411
  - 0.8863157894736842
  train_f1_micro_oob:
  - 0.8648648648648649
  - 0.863859649122807
  - 0.8727977448907681
  - 0.8696581196581197
  - 0.8659649122807017
  train_f1_samples:
  - 0.8866943866943867
  - 0.891578947368421
  - 0.8911205073995772
  - 0.8910256410256411
  - 0.8863157894736842
  train_f1_samples_oob:
  - 0.8648648648648649
  - 0.8638596491228071
  - 0.8727977448907682
  - 0.8696581196581197
  - 0.8659649122807018
  train_f1_weighted:
  - 0.8792275978716657
  - 0.8850317450898949
  - 0.8845775726714358
  - 0.885548706372634
  - 0.8809388335704127
  train_f1_weighted_oob:
  - 0.8587382689077603
  - 0.8587218892778734
  - 0.8677429977235741
  - 0.8646369933051647
  - 0.8614035087719298
  train_jaccard_macro:
  - 0.7992620342605496
  - 0.8067749008136028
  - 0.8067967596297211
  - 0.80603993791087
  - 0.7985830310973773
  train_jaccard_macro_oob:
  - 0.7645870528926005
  - 0.7625152427985595
  - 0.7775110848525806
  - 0.7723000182841755
  - 0.7664387774343755
  train_jaccard_micro:
  - 0.7964519140989729
  - 0.8043684710351378
  - 0.8036224976167778
  - 0.8034682080924855
  - 0.7958412098298677
  train_jaccard_micro_oob:
  - 0.7619047619047619
  - 0.7603458925262507
  - 0.7743044701469209
  - 0.7693761814744802
  - 0.7636138613861386
  train_jaccard_samples:
  - 0.8195921195921194
  - 0.8261152882205511
  - 0.8262861169837913
  - 0.8267399267399267
  - 0.8203508771929825
  train_jaccard_samples_oob:
  - 0.7893673893673894
  - 0.7874185463659147
  - 0.7992449411054061
  - 0.7971408221408222
  - 0.7915889724310776
  train_jaccard_weighted:
  - 0.7874358181361168
  - 0.7961850752837608
  - 0.7961427255558925
  - 0.7970454280788128
  - 0.7897634327484525
  train_jaccard_weighted_oob:
  - 0.7550275203913481
  - 0.7544173674035719
  - 0.7693501615807922
  - 0.7642206017909825
  - 0.7591008682809782
  train_label_ranking_average_precision_score:
  - 0.8629244629244619
  - 0.8704327485380107
  - 0.8628259337561651
  - 0.8710944919278242
  - 0.8695438596491214
  train_label_ranking_average_precision_score_oob:
  - 0.84614807114807
  - 0.852187134502923
  - 0.852307963354474
  - 0.8547542735042721
  - 0.8579766081871331
  train_matthews_corrcoef_macro:
  - 0.7564510658179128
  - 0.7652986567335036
  - 0.7688604850290967
  - 0.7659113113388026
  - 0.7560926448881561
  train_matthews_corrcoef_macro_oob:
  - 0.6994929804272229
  - 0.6964298654607916
  - 0.7224603903380168
  - 0.7153058223769041
  - 0.7083509893581735
  train_matthews_corrcoef_micro:
  - 0.7550024360991148
  - 0.7637264794602605
  - 0.7651152486982898
  - 0.7646439968342301
  - 0.7542153474967744
  train_matthews_corrcoef_micro_oob:
  - 0.6995260959160686
  - 0.6972272513172927
  - 0.7208748315489321
  - 0.7155474655888141
  - 0.7068476151454497
  train_matthews_corrcoef_samples:
  - 0.7637481870052114
  - 0.7754559977615886
  - 0.7752264212506556
  - 0.777537429615297
  - 0.7624518345545379
  train_matthews_corrcoef_samples_oob:
  - 0.7046555451664054
  - 0.7024110970631727
  - 0.730384870755648
  - 0.7248076456539289
  - 0.7151463322340551
  train_matthews_corrcoef_weighted:
  - 0.7469830461481348
  - 0.7572406156047199
  - 0.7602413624676091
  - 0.7590520008371827
  - 0.7493816092022939
  train_matthews_corrcoef_weighted_oob:
  - 0.6938044487406383
  - 0.6928345047728315
  - 0.7179110654433751
  - 0.7102865131311504
  - 0.7041491808806151
  train_ndgc:
  - 0.9029656074377865
  - 0.9088075368643334
  - 0.9027484969923251
  - 0.9105775806883508
  - 0.9080473324745155
  train_ndgc_oob:
  - 0.8916507564789606
  - 0.8964766964369963
  - 0.896439787730862
  - 0.9004852129122647
  - 0.9007936499527573
  train_neg_coverage_error:
  - -2.2577962577962576
  - -2.261052631578947
  - -2.287526427061311
  - -2.3076923076923075
  - -2.2736842105263158
  train_neg_coverage_error_oob:
  - -2.3804573804573805
  - -2.385263157894737
  - -2.386892177589852
  - -2.4465811965811968
  - -2.3810526315789473
  train_neg_hamming_loss_macro:
  - -0.11330561330561333
  - -0.10842105263157893
  - -0.10887949260042284
  - -0.10897435897435899
  - -0.11368421052631579
  train_neg_hamming_loss_macro_oob:
  - -0.13513513513513511
  - -0.13614035087719298
  - -0.12720225510923186
  - -0.13034188034188035
  - -0.13403508771929823
  train_neg_hamming_loss_micro:
  - -0.11330561330561331
  - -0.10842105263157895
  - -0.10887949260042283
  - -0.10897435897435898
  - -0.11368421052631579
  train_neg_hamming_loss_micro_oob:
  - -0.13513513513513514
  - -0.13614035087719298
  - -0.12720225510923186
  - -0.13034188034188035
  - -0.13403508771929826
  train_neg_hamming_loss_samples:
  - -0.11330561330561331
  - -0.10842105263157895
  - -0.10887949260042283
  - -0.10897435897435898
  - -0.11368421052631579
  train_neg_hamming_loss_samples_oob:
  - -0.13513513513513514
  - -0.13614035087719295
  - -0.12720225510923186
  - -0.13034188034188035
  - -0.13403508771929826
  train_neg_hamming_loss_weighted:
  - -0.12077240212833436
  - -0.11496825491010501
  - -0.11542242732856414
  - -0.11445129362736586
  - -0.11906116642958747
  train_neg_hamming_loss_weighted_oob:
  - -0.14126173109223958
  - -0.14127811072212665
  - -0.13225700227642587
  - -0.13536300669483511
  - -0.13859649122807016
  train_neg_label_ranking_loss:
  - -0.08198775698775698
  - -0.07635672514619883
  - -0.08182405449847309
  - -0.0778786799620133
  - -0.07863157894736843
  train_neg_label_ranking_loss_oob:
  - -0.10278932778932778
  - -0.09808771929824561
  - -0.09665257223396759
  - -0.09975071225071226
  - -0.09574269005847952
  train_precision_macro:
  - 0.8866943866943866
  - 0.891578947368421
  - 0.8911205073995773
  - 0.8910256410256411
  - 0.8863157894736843
  train_precision_macro_oob:
  - 0.8648648648648649
  - 0.8638596491228071
  - 0.872797744890768
  - 0.8696581196581196
  - 0.8659649122807016
  train_precision_micro:
  - 0.8866943866943867
  - 0.891578947368421
  - 0.8911205073995772
  - 0.8910256410256411
  - 0.8863157894736842
  train_precision_micro_oob:
  - 0.8648648648648649
  - 0.863859649122807
  - 0.8727977448907681
  - 0.8696581196581197
  - 0.8659649122807017
  train_precision_samples:
  - 0.8866943866943867
  - 0.891578947368421
  - 0.8911205073995772
  - 0.8910256410256411
  - 0.8863157894736842
  train_precision_samples_oob:
  - 0.8648648648648649
  - 0.8638596491228071
  - 0.8727977448907682
  - 0.8696581196581197
  - 0.8659649122807018
  train_precision_weighted:
  - 0.8792275978716657
  - 0.8850317450898949
  - 0.8845775726714358
  - 0.885548706372634
  - 0.8809388335704127
  train_precision_weighted_oob:
  - 0.8587382689077603
  - 0.8587218892778734
  - 0.8677429977235741
  - 0.8646369933051647
  - 0.8614035087719298
  train_recall_macro:
  - 0.8866943866943866
  - 0.891578947368421
  - 0.8911205073995773
  - 0.8910256410256411
  - 0.8863157894736843
  train_recall_macro_oob:
  - 0.8648648648648649
  - 0.8638596491228071
  - 0.872797744890768
  - 0.8696581196581196
  - 0.8659649122807016
  train_recall_micro:
  - 0.8866943866943867
  - 0.891578947368421
  - 0.8911205073995772
  - 0.8910256410256411
  - 0.8863157894736842
  train_recall_micro_oob:
  - 0.8648648648648649
  - 0.863859649122807
  - 0.8727977448907681
  - 0.8696581196581197
  - 0.8659649122807017
  train_recall_samples:
  - 0.8866943866943867
  - 0.891578947368421
  - 0.8911205073995772
  - 0.8910256410256411
  - 0.8863157894736842
  train_recall_samples_oob:
  - 0.8648648648648649
  - 0.8638596491228071
  - 0.8727977448907682
  - 0.8696581196581197
  - 0.8659649122807018
  train_recall_weighted:
  - 0.8792275978716657
  - 0.8850317450898949
  - 0.8845775726714358
  - 0.885548706372634
  - 0.8809388335704127
  train_recall_weighted_oob:
  - 0.8587382689077603
  - 0.8587218892778734
  - 0.8677429977235741
  - 0.8646369933051647
  - 0.8614035087719298
  train_roc_auc_macro:
  - 0.9328543882646718
  - 0.9363620263124005
  - 0.9342046906264644
  - 0.9355672802767611
  - 0.9340821982057358
  train_roc_auc_macro_oob:
  - 0.9163148899620789
  - 0.9204279450578617
  - 0.9206614551132298
  - 0.920753894879299
  - 0.918686072739078
  train_roc_auc_micro:
  - 0.9325484150580078
  - 0.9360847608605882
  - 0.9330049864929875
  - 0.9346106505873537
  - 0.9348861476155055
  train_roc_auc_micro_oob:
  - 0.9177281415789281
  - 0.921777230511934
  - 0.920919795174481
  - 0.920538413475429
  - 0.9205891671488002
  train_roc_auc_samples:
  - 0.9180122430122429
  - 0.9236432748538012
  - 0.9181759455015269
  - 0.9221213200379867
  - 0.9213684210526316
  train_roc_auc_samples_oob:
  - 0.8972106722106722
  - 0.9019122807017543
  - 0.9033474277660324
  - 0.9003828347578348
  - 0.9042573099415204
  train_roc_auc_weighted:
  - 0.9243129141277177
  - 0.9290105624109628
  - 0.9257389142494651
  - 0.9286151947526793
  - 0.9266977726775194
  train_roc_auc_weighted_oob:
  - 0.9082662739628955
  - 0.9138229874190181
  - 0.9127278846196281
  - 0.9146638184478341
  - 0.9122752845112737
start: 2023-12-22 02:47:56.686473
wrapper: null
