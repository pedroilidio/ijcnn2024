active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz4780MzMzMzMDQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0AAMjMzMzPjvwBnZmZmZvY/AJyZmZmZ2T+AzMzMzMwMwA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:41:30.186552
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: c78f07c803b48f2c63c4eca29df38bb5f9fb32212afc398aeb091c9f059e1d46
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c78f07c_20231212T153959237123_embedding_weak__6_Gram_negative.yml
results:
  fit_time:
  - 49.353516578674316
  - 48.10045003890991
  - 47.86335563659668
  - 48.025146484375
  - 53.502222299575806
  score_time:
  - 7.752308368682861
  - 8.165415525436401
  - 7.984148740768433
  - 7.835784196853638
  - 7.9499616622924805
  test_average_precision_macro:
  - 0.7266210359420608
  - 0.7703099230679961
  - 0.7702991401363235
  - 0.7591532978180917
  - 0.7468741330410537
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9258982443088437
  - 0.9442848665878346
  - 0.946875518125619
  - 0.9339521551190054
  - 0.9375489926720624
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9586352657004832
  - 0.9614695340501792
  - 0.9698856799037303
  - 0.9819287427201097
  - 0.9722222222222221
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9454744146111396
  - 0.9767584769342951
  - 0.967696272704685
  - 0.957832347407677
  - 0.9749272888052269
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.973540865621611
  - 0.9776447548313195
  - 0.9647549220291041
  - 0.976919488300145
  - 0.9696048632218844
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9340070456336821
  - 0.9482309774973934
  - 0.9321879899473557
  - 0.9413042605647581
  - 0.9398102648699703
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9334500875656743
  - 0.9476439790575916
  - 0.9311546840958606
  - 0.9406631762652705
  - 0.938977223893425
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9422924901185771
  - 0.9542377176785778
  - 0.9391459723589686
  - 0.9485938521909745
  - 0.947317143061824
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9487268754025132
  - 0.9563812726414607
  - 0.9323521354123526
  - 0.9550293181418201
  - 0.9412866743161991
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9586352657004832
  - 0.9614695340501792
  - 0.9698856799037303
  - 0.9819287427201097
  - 0.9722222222222223
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6601735878412072
  - 0.7052452858294598
  - 0.729831915626323
  - 0.7332240188679591
  - 0.6588123781663308
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8531700121811296
  - 0.8845806221697529
  - 0.8502068792406642
  - 0.8717450690497419
  - 0.8649136255377804
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8712088185509581
  - 0.9059983133007787
  - 0.8717867219934156
  - 0.9010881365395615
  - 0.8853576089483663
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8896754269504344
  - 0.9186150684572173
  - 0.8947513514407803
  - 0.9204852612824268
  - 0.9091132031284317
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9701321733335055
  - 0.9718528976244052
  - 0.97802903431529
  - 0.9873690002026891
  - 0.9794400241008119
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2065217391304348
  - -1.1433691756272402
  - -1.1588447653429603
  - -1.1258992805755397
  - -1.0780141843971631
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.034420289855072464
  - -0.026881720430107527
  - -0.03564981949458484
  - -0.030575539568345324
  - -0.03147163120567376
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.034420289855072464
  - -0.026881720430107527
  - -0.03564981949458484
  - -0.030575539568345324
  - -0.031471631205673756
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.034420289855072464
  - -0.026881720430107527
  - -0.03564981949458484
  - -0.030575539568345324
  - -0.031471631205673756
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.026459134378389034
  - -0.02235524516868049
  - -0.03524507797089583
  - -0.023080511699855134
  - -0.030395136778115495
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.017814009661835748
  - -0.01378221539511862
  - -0.014397455733195806
  - -0.008350462487153133
  - -0.008611955420466059
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.973540865621611
  - 0.9776447548313195
  - 0.9647549220291041
  - 0.976919488300145
  - 0.9696048632218844
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9655797101449275
  - 0.9731182795698925
  - 0.9643501805054152
  - 0.9694244604316546
  - 0.9685283687943262
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.973540865621611
  - 0.9776447548313195
  - 0.9647549220291041
  - 0.976919488300145
  - 0.9696048632218844
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9799171707205493
  - 0.989532001730875
  - 0.9819868960839442
  - 0.9844650176482774
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9872982108203783
  - 0.9927447324952066
  - 0.9905190342303745
  - 0.9878752101070551
  - 0.991508627630715
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9821859903381643
  - 0.9862177846048814
  - 0.9856025442668042
  - 0.9916495375128469
  - 0.9913880445795339
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.989077420418739
  - 0.9953591081529467
  - 0.9922641479234731
  - 0.9870351377438379
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7600581085447478
  - 0.7539693445855102
  - 0.7517621763574263
  - 0.7604136438384745
  - 0.767371303325791
  train_average_precision_macro_oob:
  - 0.7475703262891247
  - 0.7432371535931471
  - 0.7434352859355973
  - 0.7496914427013889
  - 0.7497918602758672
  train_average_precision_micro:
  - 0.948807588323071
  - 0.9364524586049087
  - 0.9534806793175423
  - 0.9555569650394407
  - 0.9467131309431762
  train_average_precision_micro_oob:
  - 0.9418769137096025
  - 0.9293243088343444
  - 0.9462552989837294
  - 0.9487903416823964
  - 0.9386988710564512
  train_average_precision_samples:
  - 0.9755824372759857
  - 0.9632374962563641
  - 0.9828101644245142
  - 0.980176540993417
  - 0.9816816816816816
  train_average_precision_samples_oob:
  - 0.9664746543778803
  - 0.955047490694391
  - 0.9788874653000212
  - 0.9765046593143542
  - 0.9786947661947661
  train_average_precision_weighted:
  - 0.9783872981143596
  - 0.9691737814809649
  - 0.9775687745068948
  - 0.9713641971623703
  - 0.9724249239568745
  train_average_precision_weighted_oob:
  - 0.9702140529672163
  - 0.9591931075679392
  - 0.9706886823994574
  - 0.9643153128657406
  - 0.9630076011041595
  train_f1_macro:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.972085201793722
  - 0.9667863554757631
  - 0.9690315315315317
  train_f1_macro_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576576
  train_f1_micro:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.9720852017937219
  - 0.966786355475763
  - 0.9690315315315315
  train_f1_micro_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576577
  train_f1_samples:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.9720852017937219
  - 0.966786355475763
  - 0.9690315315315315
  train_f1_samples_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576577
  train_f1_weighted:
  - 0.981418762608036
  - 0.9812539284075441
  - 0.9805631363190208
  - 0.98100853516026
  - 0.9808159742291479
  train_f1_weighted_oob:
  - 0.9766516141370397
  - 0.9761523007453854
  - 0.9779811004830733
  - 0.9750714350770541
  - 0.9768100863909249
  train_jaccard_macro:
  - 0.9454752557131998
  - 0.945602118711528
  - 0.9466069446670607
  - 0.9369756990719115
  - 0.9408690243004789
  train_jaccard_macro_oob:
  - 0.9449991837029217
  - 0.9447036631831147
  - 0.947323548153663
  - 0.9423538996638937
  - 0.9426755687211796
  train_jaccard_micro:
  - 0.9444625939235544
  - 0.9445293732255952
  - 0.9456865525139055
  - 0.9357080799304952
  - 0.9399235390496996
  train_jaccard_micro_oob:
  - 0.9442508710801394
  - 0.943892588145399
  - 0.9465357337697763
  - 0.9416122004357298
  - 0.9420448332422089
  train_jaccard_samples:
  - 0.9513594728648493
  - 0.9512065851688495
  - 0.9522398876658967
  - 0.9434524781023883
  - 0.9477113477113476
  train_jaccard_samples_oob:
  - 0.9511494877086276
  - 0.95055678074546
  - 0.9530769579200074
  - 0.9485592006238326
  - 0.9494840294840295
  train_jaccard_weighted:
  - 0.9636478150431566
  - 0.9633543589234551
  - 0.9619761946058255
  - 0.962940863923761
  - 0.9625037592617124
  train_jaccard_weighted_oob:
  - 0.9544813878991838
  - 0.953600373727496
  - 0.9570307324188543
  - 0.951513932223116
  - 0.9548508314719675
  train_label_ranking_average_precision_score:
  - 0.9755824372759858
  - 0.9632374962563643
  - 0.9828101644245143
  - 0.9801765409934172
  - 0.9816816816816818
  train_label_ranking_average_precision_score_oob:
  - 0.9664746543778803
  - 0.955047490694391
  - 0.9788874653000215
  - 0.9765046593143544
  - 0.9786947661947663
  train_matthews_corrcoef_macro:
  - 0.7420365815114911
  - 0.7518382218735011
  - 0.7561340145088593
  - 0.7307879756603924
  - 0.739664520937843
  train_matthews_corrcoef_macro_oob:
  - 0.714444298404355
  - 0.7356898394126412
  - 0.7449138852986089
  - 0.7455331974598752
  - 0.7153345902555475
  train_matthews_corrcoef_micro:
  - 0.8818527053843742
  - 0.8820427129627199
  - 0.8830869459634482
  - 0.8653847112417139
  - 0.8737577902705645
  train_matthews_corrcoef_micro_oob:
  - 0.8776135031132258
  - 0.8777580647896778
  - 0.8825097046614219
  - 0.8727700460248057
  - 0.8738556389843775
  train_matthews_corrcoef_samples:
  - 0.9124484214635534
  - 0.9094713829938089
  - 0.9097712151558853
  - 0.896946801713013
  - 0.9074466613777284
  train_matthews_corrcoef_samples_oob:
  - 0.8991039398319016
  - 0.9011404751612231
  - 0.9034191191528106
  - 0.8943834013274942
  - 0.8993123632505922
  train_matthews_corrcoef_weighted:
  - 0.9357442430013719
  - 0.9341950754135758
  - 0.9325709129951455
  - 0.9302788250552235
  - 0.9300658878422425
  train_matthews_corrcoef_weighted_oob:
  - 0.9215326126137707
  - 0.9205878101116525
  - 0.926055201181884
  - 0.9174379619246228
  - 0.9159753947773566
  train_ndgc:
  - 0.982334843835092
  - 0.9729806447723222
  - 0.9875813542099885
  - 0.9856206530517895
  - 0.9870805171763883
  train_ndgc_oob:
  - 0.9756801209611957
  - 0.967188220447626
  - 0.9848232202148252
  - 0.9830116419476322
  - 0.9849606324189661
  train_neg_coverage_error:
  - -1.1021505376344085
  - -1.1302785265049415
  - -1.0914798206278027
  - -1.0969479353680431
  - -1.10990990990991
  train_neg_coverage_error_oob:
  - -1.1442652329749103
  - -1.1752021563342319
  - -1.1183856502242153
  - -1.1238779174147218
  - -1.1369369369369369
  train_neg_hamming_loss_macro:
  - -0.028561827956989246
  - -0.028526504941599282
  - -0.027914798206278024
  - -0.03321364452423699
  - -0.030968468468468468
  train_neg_hamming_loss_macro_oob:
  - -0.02867383512544803
  - -0.028863432165318958
  - -0.027466367713004484
  - -0.03007181328545781
  - -0.02984234234234234
  train_neg_hamming_loss_micro:
  - -0.028561827956989246
  - -0.028526504941599282
  - -0.027914798206278027
  - -0.03321364452423698
  - -0.030968468468468468
  train_neg_hamming_loss_micro_oob:
  - -0.02867383512544803
  - -0.028863432165318958
  - -0.027466367713004484
  - -0.03007181328545781
  - -0.029842342342342343
  train_neg_hamming_loss_samples:
  - -0.028561827956989246
  - -0.028526504941599282
  - -0.027914798206278027
  - -0.03321364452423698
  - -0.030968468468468468
  train_neg_hamming_loss_samples_oob:
  - -0.02867383512544803
  - -0.028863432165318958
  - -0.027466367713004484
  - -0.03007181328545781
  - -0.029842342342342343
  train_neg_hamming_loss_weighted:
  - -0.01858123739196417
  - -0.018746071592455914
  - -0.019436863680979233
  - -0.018991464839739982
  - -0.01918402577085212
  train_neg_hamming_loss_weighted_oob:
  - -0.023348385862960286
  - -0.023847699254614798
  - -0.02201889951692681
  - -0.024928564922945828
  - -0.023189913609075283
  train_neg_label_ranking_loss:
  - -0.008139187574671445
  - -0.01173362426731699
  - -0.006128550074738414
  - -0.007085150038471402
  - -0.006981981981981981
  train_neg_label_ranking_loss_oob:
  - -0.013462194913807816
  - -0.0171030676421512
  - -0.00922485586162716
  - -0.01018423527400188
  - -0.010199485199485197
  train_precision_macro:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.972085201793722
  - 0.9667863554757631
  - 0.9690315315315317
  train_precision_macro_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576576
  train_precision_micro:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.9720852017937219
  - 0.966786355475763
  - 0.9690315315315315
  train_precision_micro_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576577
  train_precision_samples:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.9720852017937219
  - 0.966786355475763
  - 0.9690315315315315
  train_precision_samples_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576577
  train_precision_weighted:
  - 0.981418762608036
  - 0.9812539284075441
  - 0.9805631363190208
  - 0.98100853516026
  - 0.9808159742291479
  train_precision_weighted_oob:
  - 0.9766516141370397
  - 0.9761523007453854
  - 0.9779811004830733
  - 0.9750714350770541
  - 0.9768100863909249
  train_recall_macro:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.972085201793722
  - 0.9667863554757631
  - 0.9690315315315317
  train_recall_macro_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576576
  train_recall_micro:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.9720852017937219
  - 0.966786355475763
  - 0.9690315315315315
  train_recall_micro_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576577
  train_recall_samples:
  - 0.9714381720430108
  - 0.9714734950584007
  - 0.9720852017937219
  - 0.966786355475763
  - 0.9690315315315315
  train_recall_samples_oob:
  - 0.9713261648745519
  - 0.971136567834681
  - 0.9725336322869955
  - 0.9699281867145422
  - 0.9701576576576577
  train_recall_weighted:
  - 0.981418762608036
  - 0.9812539284075441
  - 0.9805631363190208
  - 0.98100853516026
  - 0.9808159742291479
  train_recall_weighted_oob:
  - 0.9766516141370397
  - 0.9761523007453854
  - 0.9779811004830733
  - 0.9750714350770541
  - 0.9768100863909249
  train_roc_auc_macro:
  - 0.9887754268869675
  - 0.9874328913764078
  - 0.9875407255464579
  - 0.9888107949705524
  - 0.9898363607267252
  train_roc_auc_macro_oob:
  - 0.9842002563230903
  - 0.9821662194446144
  - 0.9843910221997924
  - 0.9857192012001761
  - 0.9843833565096684
  train_roc_auc_micro:
  - 0.9937812025852573
  - 0.9931170754891201
  - 0.9942726691626335
  - 0.9938099798637097
  - 0.9934072052645178
  train_roc_auc_micro_oob:
  - 0.9904428057692674
  - 0.9889249423382045
  - 0.9914227287946583
  - 0.9910080761537254
  - 0.9901319690500247
  train_roc_auc_samples:
  - 0.9918608124253286
  - 0.988266375732683
  - 0.9938714499252617
  - 0.9929148499615287
  - 0.993018018018018
  train_roc_auc_samples_oob:
  - 0.986537805086192
  - 0.9828969323578488
  - 0.9907751441383729
  - 0.9898157647259982
  - 0.9898005148005149
  train_roc_auc_weighted:
  - 0.9973357610634207
  - 0.996318467078718
  - 0.9975737213090334
  - 0.9969310489295773
  - 0.9967986742911582
  train_roc_auc_weighted_oob:
  - 0.9924438350800031
  - 0.9899884220370853
  - 0.9935896071167287
  - 0.9933371948331869
  - 0.9916586843038492
start: 2023-12-12 15:39:59.237123
wrapper: null
