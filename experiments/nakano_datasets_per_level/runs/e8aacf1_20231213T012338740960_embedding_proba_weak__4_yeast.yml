active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ+b8AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzJcCgmZmZmZkdQACamZmZmdk/oJmZmZmZFUDAzMzMzMwEwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEA0MzMzMzMjQMzMzMzMzCDAzMzMzMzMIsBoZmZmZmYWQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            4MzMzMzM/D/AmZmZmZnpP3BmZmZmZgZAyMzMzMzMGMDAmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZAcCAmZmZmZkBwAAzMzMzM/O/QDMzMzMzE0AAmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkCYmZmZmZkJwDAzMzMzM/O/oJmZmZmZ6T+gmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmFsBAZmZmZmYawMCZmZmZmRFA4MzMzMzMJECAzMzMzMwEwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:28:50.224043
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e8aacf121a2498abf7f51de684756137ca874a39d0fa03394c18f8ed383a9d23
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e8aacf1_20231213T012338740960_embedding_proba_weak__4_yeast.yml
results:
  fit_time:
  - 179.7713918685913
  - 228.93875646591187
  - 235.69329977035522
  - 234.1427276134491
  - 239.10189366340637
  score_time:
  - 19.13894820213318
  - 14.95758056640625
  - 14.097292423248291
  - 14.190748453140259
  - 14.6767737865448
  test_average_precision_macro:
  - 0.48015574187556564
  - 0.5053903582540981
  - 0.49477655317333824
  - 0.5135612840151444
  - 0.5115377622023877
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6769514647468992
  - 0.6964792295548872
  - 0.7069207117266144
  - 0.6967494122717891
  - 0.7031482515000514
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.74216492665021
  - 0.7593867645330229
  - 0.7518825002250292
  - 0.7542238176644324
  - 0.7575674167824507
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6474401351361073
  - 0.6673866677551842
  - 0.6642896212531263
  - 0.6662951140496091
  - 0.6669199240076987
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770056
  - 0.7911507097553608
  - 0.7987948265726044
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770057
  - 0.791150709755361
  - 0.7987948265726044
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770056
  - 0.7911507097553608
  - 0.7987948265726044
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7294725199525754
  - 0.7584523058118682
  - 0.7469222927142312
  - 0.7483225906254835
  - 0.7519024356819547
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6567594110823972
  - 0.6753603904315574
  - 0.6600573708349327
  - 0.6615184141293771
  - 0.6724527969792569
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.646662657847264
  - 0.6680851063829787
  - 0.6523346063816681
  - 0.6544659587757652
  - 0.6649944940658264
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6750652540816192
  - 0.6949806521318742
  - 0.6821739745835803
  - 0.6829591111025334
  - 0.6953116582390167
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5796525722888587
  - 0.6148401494155034
  - 0.599908738213821
  - 0.6016423228462257
  - 0.6059843443081916
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.74216492665021
  - 0.7593867645330226
  - 0.7518825002250293
  - 0.7542238176644317
  - 0.7575674167824507
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.23183946372854863
  - 0.28807686601431726
  - 0.23396948931930042
  - 0.2545947562583371
  - 0.2726418626492723
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.48598753079588075
  - 0.5229671165317992
  - 0.49734176550119896
  - 0.5025191977767461
  - 0.5180788437724457
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49463719593900435
  - 0.5211144060127251
  - 0.49778074640376924
  - 0.5099163963672304
  - 0.5262928343329909
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23034016754816605
  - 0.31753429575031084
  - 0.25563871373862235
  - 0.2704768761650666
  - 0.283977389627708
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8407092495090522
  - 0.852106943357117
  - 0.8463843750366806
  - 0.8505602954374519
  - 0.8503339437450774
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.359918200408998
  - -7.2
  - -7.336116910229645
  - -7.465116279069767
  - -7.183127572016461
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21457785568215018
  - -0.19897959183673472
  - -0.21040858932299433
  - -0.20884929024463908
  - -0.20120517342739563
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21457785568215015
  - -0.1989795918367347
  - -0.21040858932299433
  - -0.20884929024463908
  - -0.20120517342739566
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21457785568215015
  - -0.1989795918367347
  - -0.2104085893229943
  - -0.20884929024463905
  - -0.20120517342739563
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2705274800474247
  - -0.24154769418813177
  - -0.25307770728576884
  - -0.25167740937451655
  - -0.2480975643180453
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.18308208330118936
  - -0.1701971946906349
  - -0.1814433636085888
  - -0.18171653005540048
  - -0.17353141135107625
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770056
  - 0.7911507097553608
  - 0.7987948265726044
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770057
  - 0.791150709755361
  - 0.7987948265726044
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770056
  - 0.7911507097553608
  - 0.7987948265726044
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7294725199525754
  - 0.7584523058118682
  - 0.7469222927142312
  - 0.7483225906254835
  - 0.7519024356819547
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770056
  - 0.7911507097553608
  - 0.7987948265726044
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770057
  - 0.791150709755361
  - 0.7987948265726044
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7854221443178498
  - 0.8010204081632653
  - 0.7895914106770056
  - 0.7911507097553608
  - 0.7987948265726044
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7294725199525754
  - 0.7584523058118682
  - 0.7469222927142312
  - 0.7483225906254835
  - 0.7519024356819547
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6882189036767526
  - 0.7050349553638167
  - 0.6927333742896504
  - 0.6923559091053775
  - 0.7054473420870593
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8239018342363712
  - 0.8326879537594518
  - 0.8311265219028493
  - 0.824696242238013
  - 0.834630826972099
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8169179166988106
  - 0.8298028053093651
  - 0.8185566363914113
  - 0.8182834699445996
  - 0.8264943088135329
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6900872688529491
  - 0.7164150008899067
  - 0.7046899889115534
  - 0.6920054941322269
  - 0.7047908494475557
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9151339013014227
  - 0.9116594055344114
  - 0.9106607189067272
  - 0.9205423103133248
  - 0.9183252217234125
  train_average_precision_macro_oob:
  - 0.9011318919143958
  - 0.8976621379592112
  - 0.8963514911903865
  - 0.9077238634138078
  - 0.9037850130322681
  train_average_precision_micro:
  - 0.9795179528436004
  - 0.9795282660854279
  - 0.9845829092701397
  - 0.983084883426204
  - 0.983924993386482
  train_average_precision_micro_oob:
  - 0.9710692464640189
  - 0.9714576772874668
  - 0.9748367429953718
  - 0.9760672416418754
  - 0.9751793378528937
  train_average_precision_samples:
  - 0.9906416899833931
  - 0.9913139567679379
  - 0.9914442085313657
  - 0.9937380690327945
  - 0.992405509200055
  train_average_precision_samples_oob:
  - 0.9812302740348551
  - 0.982625493767103
  - 0.9813628370104885
  - 0.9852933805102566
  - 0.9820218720316899
  train_average_precision_weighted:
  - 0.9815018641012224
  - 0.9832333295530591
  - 0.9810827805152107
  - 0.9867078050950845
  - 0.9850650720057362
  train_average_precision_weighted_oob:
  - 0.972029549953866
  - 0.9742718574456116
  - 0.9705096332526644
  - 0.9784355853120648
  - 0.9754689524786893
  train_f1_macro:
  - 0.9680646117368107
  - 0.969790199421751
  - 0.9682662538699692
  - 0.9720752498530277
  - 0.9686690833764889
  train_f1_macro_oob:
  - 0.9570243034973327
  - 0.9589665653495442
  - 0.956140350877193
  - 0.9616402116402115
  - 0.9562032995487165
  train_f1_micro:
  - 0.9680646117368109
  - 0.969790199421751
  - 0.968266253869969
  - 0.9720752498530276
  - 0.9686690833764888
  train_f1_micro_oob:
  - 0.9570243034973326
  - 0.958966565349544
  - 0.956140350877193
  - 0.9616402116402116
  - 0.9562032995487164
  train_f1_samples:
  - 0.968064611736811
  - 0.969790199421751
  - 0.968266253869969
  - 0.9720752498530276
  - 0.9686690833764888
  train_f1_samples_oob:
  - 0.9570243034973327
  - 0.9589665653495442
  - 0.956140350877193
  - 0.9616402116402117
  - 0.9562032995487165
  train_f1_weighted:
  - 0.9766133652035275
  - 0.9774309847209596
  - 0.97551437254965
  - 0.9804526120960827
  - 0.976591415924022
  train_f1_weighted_oob:
  - 0.9655580114418391
  - 0.967293284352286
  - 0.9630912597170818
  - 0.9692908582289202
  - 0.9635694037285496
  train_jaccard_macro:
  - 0.93902309513814
  - 0.9420262140003958
  - 0.9391061504335703
  - 0.94649080815945
  - 0.9399888987627497
  train_jaccard_macro_oob:
  - 0.9184279166665544
  - 0.9218716756978571
  - 0.9166160205214181
  - 0.9267808351482013
  - 0.9167034301998976
  train_jaccard_micro:
  - 0.9381058375816759
  - 0.9413521390278128
  - 0.9384846211552889
  - 0.9456677151844438
  - 0.939241777554607
  train_jaccard_micro_oob:
  - 0.9175902244955954
  - 0.9211678832116789
  - 0.9159663865546218
  - 0.9261146496815287
  - 0.9160819335176129
  train_jaccard_samples:
  - 0.9431888634102547
  - 0.946341963254953
  - 0.943641686573422
  - 0.9501916315945192
  - 0.9442479509361233
  train_jaccard_samples_oob:
  - 0.9250376826860905
  - 0.928155773093203
  - 0.9234946304124098
  - 0.9324739683975533
  - 0.9235798177830011
  train_jaccard_weighted:
  - 0.9545918825068308
  - 0.9560888371743026
  - 0.9524936623174741
  - 0.9619041342607347
  - 0.9545954456693972
  train_jaccard_weighted_oob:
  - 0.9340003747900074
  - 0.9372591773761417
  - 0.92949205132092
  - 0.940819461377281
  - 0.9302979002875796
  train_label_ranking_average_precision_score:
  - 0.9906416899833941
  - 0.9913139567679379
  - 0.9914442085313658
  - 0.9937380690327952
  - 0.9924055092000559
  train_label_ranking_average_precision_score_oob:
  - 0.9812302740348555
  - 0.9826254937671031
  - 0.9813628370104891
  - 0.9852933805102568
  - 0.9820218720316908
  train_matthews_corrcoef_macro:
  - 0.8645915684660139
  - 0.8610536352803838
  - 0.856815391399947
  - 0.8727456830503405
  - 0.8627682198910174
  train_matthews_corrcoef_macro_oob:
  - 0.8251900486565339
  - 0.8200657160600112
  - 0.8149856880381783
  - 0.8333331760020013
  - 0.815970701999972
  train_matthews_corrcoef_micro:
  - 0.9243554131166009
  - 0.9286162413400677
  - 0.9245447940700934
  - 0.9335042985388963
  - 0.9256947738318986
  train_matthews_corrcoef_micro_oob:
  - 0.8976988983711351
  - 0.9025430739034084
  - 0.8952058068098434
  - 0.9082982892341109
  - 0.8956760516075627
  train_matthews_corrcoef_samples:
  - 0.9279573358895346
  - 0.9327944106508969
  - 0.9281487739370758
  - 0.9384379605352333
  - 0.9305751484837174
  train_matthews_corrcoef_samples_oob:
  - 0.9023099473597523
  - 0.9086888420273016
  - 0.8995799340802428
  - 0.9117631333923808
  - 0.9010325324665517
  train_matthews_corrcoef_weighted:
  - 0.9356147762326211
  - 0.9372621956473907
  - 0.9323139824240905
  - 0.9451437718088469
  - 0.9354457087737957
  train_matthews_corrcoef_weighted_oob:
  - 0.9060164610205954
  - 0.9093347594331479
  - 0.899297088990943
  - 0.9148470726681618
  - 0.8999222704366644
  train_ndgc:
  - 0.995163497180893
  - 0.9955218145832654
  - 0.9956605192879128
  - 0.997014639739498
  - 0.9964416581476058
  train_ndgc_oob:
  - 0.9904439368889097
  - 0.9914143212986797
  - 0.9907925526447533
  - 0.9928389904696577
  - 0.9913054615483833
  train_neg_coverage_error:
  - -4.3537344398340245
  - -4.364296834457706
  - -4.330753353973169
  - -4.296810699588478
  - -4.355256343863283
  train_neg_coverage_error_oob:
  - -4.54201244813278
  - -4.539699014011417
  - -4.5283797729618165
  - -4.457304526748971
  - -4.55567063697566
  train_neg_hamming_loss_macro:
  - -0.03193538826318909
  - -0.03020980057824894
  - -0.03173374613003096
  - -0.027924750146972373
  - -0.03133091662351113
  train_neg_hamming_loss_macro_oob:
  - -0.042975696502667464
  - -0.041033434650455926
  - -0.04385964912280701
  - -0.03835978835978836
  - -0.04379670045128357
  train_neg_hamming_loss_micro:
  - -0.03193538826318909
  - -0.030209800578248944
  - -0.03173374613003096
  - -0.02792475014697237
  - -0.03133091662351113
  train_neg_hamming_loss_micro_oob:
  - -0.04297569650266746
  - -0.041033434650455926
  - -0.043859649122807015
  - -0.03835978835978836
  - -0.04379670045128357
  train_neg_hamming_loss_samples:
  - -0.03193538826318909
  - -0.030209800578248937
  - -0.03173374613003096
  - -0.027924750146972366
  - -0.03133091662351113
  train_neg_hamming_loss_samples_oob:
  - -0.04297569650266744
  - -0.04103343465045592
  - -0.04385964912280701
  - -0.03835978835978835
  - -0.04379670045128356
  train_neg_hamming_loss_weighted:
  - -0.023386634796472648
  - -0.022569015279040407
  - -0.024485627450349975
  - -0.019547387903917426
  - -0.023408584075977994
  train_neg_hamming_loss_weighted_oob:
  - -0.03444198855816099
  - -0.032706715647713956
  - -0.03690874028291831
  - -0.03070914177107967
  - -0.03643059627145041
  train_neg_label_ranking_loss:
  - -0.004432799220143619
  - -0.0042652944702763085
  - -0.004264903421803024
  - -0.0031638241404555335
  - -0.00393782224532391
  train_neg_label_ranking_loss_oob:
  - -0.011117521005636002
  - -0.010460544122231422
  - -0.011504614727746085
  - -0.008991239629467143
  - -0.01137818341802214
  train_precision_macro:
  - 0.9680646117368107
  - 0.969790199421751
  - 0.9682662538699692
  - 0.9720752498530277
  - 0.9686690833764889
  train_precision_macro_oob:
  - 0.9570243034973327
  - 0.9589665653495442
  - 0.956140350877193
  - 0.9616402116402115
  - 0.9562032995487165
  train_precision_micro:
  - 0.9680646117368109
  - 0.969790199421751
  - 0.968266253869969
  - 0.9720752498530276
  - 0.9686690833764888
  train_precision_micro_oob:
  - 0.9570243034973326
  - 0.958966565349544
  - 0.956140350877193
  - 0.9616402116402116
  - 0.9562032995487164
  train_precision_samples:
  - 0.968064611736811
  - 0.969790199421751
  - 0.968266253869969
  - 0.9720752498530276
  - 0.9686690833764888
  train_precision_samples_oob:
  - 0.9570243034973327
  - 0.9589665653495442
  - 0.956140350877193
  - 0.9616402116402117
  - 0.9562032995487165
  train_precision_weighted:
  - 0.9766133652035275
  - 0.9774309847209596
  - 0.97551437254965
  - 0.9804526120960827
  - 0.976591415924022
  train_precision_weighted_oob:
  - 0.9655580114418391
  - 0.967293284352286
  - 0.9630912597170818
  - 0.9692908582289202
  - 0.9635694037285496
  train_recall_macro:
  - 0.9680646117368107
  - 0.969790199421751
  - 0.9682662538699692
  - 0.9720752498530277
  - 0.9686690833764889
  train_recall_macro_oob:
  - 0.9570243034973327
  - 0.9589665653495442
  - 0.956140350877193
  - 0.9616402116402115
  - 0.9562032995487165
  train_recall_micro:
  - 0.9680646117368109
  - 0.969790199421751
  - 0.968266253869969
  - 0.9720752498530276
  - 0.9686690833764888
  train_recall_micro_oob:
  - 0.9570243034973326
  - 0.958966565349544
  - 0.956140350877193
  - 0.9616402116402116
  - 0.9562032995487164
  train_recall_samples:
  - 0.968064611736811
  - 0.969790199421751
  - 0.968266253869969
  - 0.9720752498530276
  - 0.9686690833764888
  train_recall_samples_oob:
  - 0.9570243034973327
  - 0.9589665653495442
  - 0.956140350877193
  - 0.9616402116402117
  - 0.9562032995487165
  train_recall_weighted:
  - 0.9766133652035275
  - 0.9774309847209596
  - 0.97551437254965
  - 0.9804526120960827
  - 0.976591415924022
  train_recall_weighted_oob:
  - 0.9655580114418391
  - 0.967293284352286
  - 0.9630912597170818
  - 0.9692908582289202
  - 0.9635694037285496
  train_roc_auc_macro:
  - 0.9901856728199311
  - 0.9907067869211588
  - 0.9914394923698759
  - 0.9921034267351773
  - 0.991295915164566
  train_roc_auc_macro_oob:
  - 0.9825408477919446
  - 0.981571314933565
  - 0.9836467468117807
  - 0.9858607104227449
  - 0.9838384254494225
  train_roc_auc_micro:
  - 0.9931160946552252
  - 0.9931911239425334
  - 0.9946727196679134
  - 0.9942587029031416
  - 0.9942236508476289
  train_roc_auc_micro_oob:
  - 0.9879112324434757
  - 0.98831755064228
  - 0.9890865233531376
  - 0.9899933310349441
  - 0.9887316604454893
  train_roc_auc_samples:
  - 0.9955672007798565
  - 0.9957347055297238
  - 0.995735096578197
  - 0.9968361758595445
  - 0.9960621777546761
  train_roc_auc_samples_oob:
  - 0.988882478994364
  - 0.9895394558777685
  - 0.9884953852722539
  - 0.9910087603705328
  - 0.9886218165819779
  train_roc_auc_weighted:
  - 0.9946231730681381
  - 0.9946719175839098
  - 0.9949904127829079
  - 0.9963864735087398
  - 0.9954984935324377
  train_roc_auc_weighted_oob:
  - 0.9889611799814542
  - 0.9888504383768838
  - 0.9878071254284932
  - 0.9915583969192621
  - 0.9891800663711494
start: 2023-12-13 01:23:38.740960
wrapper: null
