active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMAAMjMzMzPjv4AzMzMzMwtAAJmZmZmZ+b8AZ2ZmZmb2Pw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:06:32.308269
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 4a519ddc0789c7f9f055397db6a09ea9bd8668449c1fae8a5df9337b9d2a13cf
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4a519dd_20231212T180520629286_embedding_proba__1_scene.yml
results:
  fit_time:
  - 28.9768545627594
  - 29.162533044815063
  - 37.157482862472534
  - 36.280657052993774
  - 37.9158251285553
  score_time:
  - 5.306360721588135
  - 5.266010522842407
  - 5.365959882736206
  - 5.407100677490234
  - 5.232943058013916
  test_average_precision_macro:
  - 0.8607541158165976
  - 0.8597104157883232
  - 0.8472223547305967
  - 0.8311435260092387
  - 0.8774496648169938
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8641774840184884
  - 0.8629864117683262
  - 0.8554032918021884
  - 0.8467131916352002
  - 0.8748038535768293
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8830061983471075
  - 0.8818118948824343
  - 0.8793584379358438
  - 0.8717736369910282
  - 0.8859722222222222
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8516945052464238
  - 0.8496431604048642
  - 0.8372177015723079
  - 0.8204394706548281
  - 0.868785075572437
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9135674931129477
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.9092477570738441
  - 0.9222222222222222
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9135674931129476
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.909247757073844
  - 0.9222222222222223
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9135674931129477
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.9092477570738441
  - 0.9222222222222224
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9092750977000449
  - 0.9135679841074033
  - 0.9110210985489184
  - 0.9044228229953286
  - 0.9185598705501619
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8435189683631785
  - 0.850879556951622
  - 0.8461934710386192
  - 0.8374599344517657
  - 0.8572809511831753
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8408874801901743
  - 0.8485139022051774
  - 0.8437801350048216
  - 0.8335969629863967
  - 0.8556701030927835
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8610291223927586
  - 0.867219917012448
  - 0.8624227933851364
  - 0.8531006605540766
  - 0.873015873015873
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.836421783476435
  - 0.8434055306912669
  - 0.8391118938242843
  - 0.8295922343165105
  - 0.8510746972784009
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8830061983471074
  - 0.881811894882434
  - 0.8793584379358437
  - 0.8717736369910282
  - 0.8859722222222222
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6852540571529468
  - 0.7050024864777651
  - 0.6949300521160978
  - 0.6660466961165553
  - 0.720693231385468
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6799394844944182
  - 0.6991334279781451
  - 0.6897365282484954
  - 0.664137935045275
  - 0.7153156959193707
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6120178824558675
  - 0.6235122051341425
  - 0.612021918905386
  - 0.5890840912357324
  - 0.6384947147213701
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.67237278553823
  - 0.6913994065621947
  - 0.6821265928061369
  - 0.6510948072930289
  - 0.7106122539215008
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9135961643097152
  - 0.9124758580715991
  - 0.9110601298089503
  - 0.9057093659983083
  - 0.9164257766085588
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3801652892561984
  - -1.4315352697095436
  - -1.4435146443514644
  - -1.4368530020703933
  - -1.4041666666666666
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08643250688705234
  - -0.08195020746887967
  - -0.08472803347280335
  - -0.09075224292615597
  - -0.07777777777777778
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08643250688705234
  - -0.08195020746887967
  - -0.08472803347280335
  - -0.09075224292615597
  - -0.07777777777777778
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08643250688705233
  - -0.08195020746887967
  - -0.08472803347280335
  - -0.09075224292615595
  - -0.07777777777777777
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09072490229995515
  - -0.08643201589259682
  - -0.08897890145108163
  - -0.09557717700467136
  - -0.08144012944983818
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06193181818181818
  - -0.07007261410788383
  - -0.07044979079497907
  - -0.07003105590062113
  - -0.06307291666666667
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9135674931129477
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.9092477570738441
  - 0.9222222222222222
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9135674931129476
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.909247757073844
  - 0.9222222222222223
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9135674931129477
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.9092477570738441
  - 0.9222222222222224
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9092750977000449
  - 0.9135679841074033
  - 0.9110210985489184
  - 0.9044228229953286
  - 0.9185598705501619
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9135674931129477
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.9092477570738441
  - 0.9222222222222222
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9135674931129476
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.909247757073844
  - 0.9222222222222223
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9135674931129477
  - 0.9180497925311203
  - 0.9152719665271967
  - 0.9092477570738441
  - 0.9222222222222224
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9092750977000449
  - 0.9135679841074033
  - 0.9110210985489184
  - 0.9044228229953286
  - 0.9185598705501619
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.953913486926449
  - 0.9503573564537658
  - 0.9464004311284656
  - 0.94562125932775
  - 0.9551980939931144
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9599937672860426
  - 0.9554642800219886
  - 0.9525737843972727
  - 0.9537280685769268
  - 0.9601305445514071
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9380681818181819
  - 0.9299273858921162
  - 0.929550209205021
  - 0.9299689440993789
  - 0.9369270833333334
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9500711647170121
  - 0.945208010953344
  - 0.94168150562877
  - 0.9415294557733414
  - 0.9504719431054156
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9947072723492049
  - 0.9950467693826667
  - 0.9948782317152657
  - 0.9946919579902952
  - 0.9949034524545876
  train_average_precision_macro_oob:
  - 0.9292511789797483
  - 0.9353728717535995
  - 0.936806366306625
  - 0.93376976499746
  - 0.9348238598224619
  train_average_precision_micro:
  - 0.9945501352495402
  - 0.9949315670256705
  - 0.9948608435288853
  - 0.9947146344335939
  - 0.9948022086002796
  train_average_precision_micro_oob:
  - 0.9303420974169092
  - 0.9341477848451427
  - 0.9342084866601923
  - 0.9303424121583874
  - 0.9318512801796859
  train_average_precision_samples:
  - 0.9874761657132951
  - 0.9901731601731603
  - 0.9863919129082426
  - 0.9866597366597367
  - 0.9886697803148244
  train_average_precision_samples_oob:
  - 0.934442711041775
  - 0.9326666666666666
  - 0.9377052013132884
  - 0.9307908870408871
  - 0.931318111053451
  train_average_precision_weighted:
  - 0.9945241720045631
  - 0.9949481196179919
  - 0.9947302711368549
  - 0.9945733711080138
  - 0.9948035092214899
  train_average_precision_weighted_oob:
  - 0.9259109297755665
  - 0.9325406159209249
  - 0.9338769273711441
  - 0.9310509117126804
  - 0.9318857456249441
  train_f1_macro:
  - 0.9709655052868782
  - 0.9729004329004329
  - 0.9726974252635215
  - 0.9717602217602218
  - 0.9717176959003632
  train_f1_macro_oob:
  - 0.9340440284278038
  - 0.9356709956709958
  - 0.9339035769828926
  - 0.9332986832986833
  - 0.9347863691402871
  train_f1_micro:
  - 0.9709655052868782
  - 0.9729004329004329
  - 0.9726974252635217
  - 0.9717602217602218
  - 0.9717176959003633
  train_f1_micro_oob:
  - 0.9340440284278038
  - 0.9356709956709957
  - 0.9339035769828927
  - 0.9332986832986833
  - 0.9347863691402871
  train_f1_samples:
  - 0.9709655052868781
  - 0.9729004329004329
  - 0.9726974252635218
  - 0.9717602217602218
  - 0.9717176959003633
  train_f1_samples_oob:
  - 0.9340440284278038
  - 0.9356709956709958
  - 0.9339035769828927
  - 0.9332986832986834
  - 0.9347863691402872
  train_f1_weighted:
  - 0.969908917188007
  - 0.9719377477868043
  - 0.9718690996527601
  - 0.970985795162949
  - 0.9709322643642717
  train_f1_weighted_oob:
  - 0.9314424582783215
  - 0.9330058620624658
  - 0.9308946819039138
  - 0.9299833659707812
  - 0.9316388769808142
  train_jaccard_macro:
  - 0.9437191411182034
  - 0.9473694980297789
  - 0.946965491934923
  - 0.9451817248763613
  - 0.9450890124306738
  train_jaccard_macro_oob:
  - 0.8771665160099914
  - 0.8800519699347368
  - 0.8771695779889187
  - 0.8762732818116955
  - 0.8788015577560108
  train_jaccard_micro:
  - 0.9435694432746567
  - 0.9472308859479053
  - 0.9468460891505467
  - 0.9450716090985678
  - 0.9449911683068383
  train_jaccard_micro_oob:
  - 0.8762501016342792
  - 0.8791181973480843
  - 0.8760029175784099
  - 0.8749390937144713
  - 0.8775576485872036
  train_jaccard_samples:
  - 0.9512047148552608
  - 0.9543475572047001
  - 0.9539978770149843
  - 0.9523809523809523
  - 0.9524180196209258
  train_jaccard_samples_oob:
  - 0.8909442091969393
  - 0.8936178107606679
  - 0.8904440988422326
  - 0.8896025146025146
  - 0.8922702448908987
  train_jaccard_weighted:
  - 0.9417293787050619
  - 0.9455481598080597
  - 0.945392801121585
  - 0.943714740925213
  - 0.9436059028657494
  train_jaccard_weighted_oob:
  - 0.8726294323303497
  - 0.8754111447658846
  - 0.8719708515048263
  - 0.8705569482876706
  - 0.8733527092189364
  train_label_ranking_average_precision_score:
  - 0.987476165713295
  - 0.9901731601731603
  - 0.9863919129082425
  - 0.9866597366597365
  - 0.9886697803148242
  train_label_ranking_average_precision_score_oob:
  - 0.934442711041775
  - 0.9326666666666665
  - 0.937705201313288
  - 0.9307908870408871
  - 0.9313181110534509
  train_matthews_corrcoef_macro:
  - 0.9011961222002078
  - 0.9076886845391416
  - 0.906541140440678
  - 0.9032219851827895
  - 0.9031324536619394
  train_matthews_corrcoef_macro_oob:
  - 0.7670131161354662
  - 0.7732621537730743
  - 0.7666210985842601
  - 0.7652719025904555
  - 0.7707561006374918
  train_matthews_corrcoef_micro:
  - 0.8995167988651398
  - 0.9061640842158254
  - 0.9053563804171678
  - 0.9022133355951343
  - 0.9020758468325818
  train_matthews_corrcoef_micro_oob:
  - 0.7629032109756659
  - 0.7686738290886296
  - 0.7616456515338094
  - 0.7595989869672007
  - 0.7652919108496498
  train_matthews_corrcoef_samples:
  - 0.8693177501854734
  - 0.8776542541530117
  - 0.8761285555793229
  - 0.8667249194875918
  - 0.869171670554642
  train_matthews_corrcoef_samples_oob:
  - 0.6825557031286598
  - 0.6910231315223274
  - 0.678298802151579
  - 0.6769261610282549
  - 0.6880920879164839
  train_matthews_corrcoef_weighted:
  - 0.8987129325153003
  - 0.9054411118764509
  - 0.9046949193918623
  - 0.901603727419889
  - 0.9015109444660915
  train_matthews_corrcoef_weighted_oob:
  - 0.7603991853759035
  - 0.7664075933033405
  - 0.7586297049113935
  - 0.7561111348242802
  - 0.7621014932915644
  train_ndgc:
  - 0.9908559923554088
  - 0.9928678303892059
  - 0.9900245317154198
  - 0.990293112256379
  - 0.9917322252869623
  train_ndgc_oob:
  - 0.9519660074643191
  - 0.9505848534309705
  - 0.9542651731311214
  - 0.9490199205080531
  - 0.9496496808719933
  train_neg_coverage_error:
  - -1.1040041601664066
  - -1.0966233766233766
  - -1.1026438569206842
  - -1.1044698544698546
  - -1.100155682407888
  train_neg_coverage_error_oob:
  - -1.281851274050962
  - -1.2685714285714285
  - -1.2566096423017108
  - -1.2822245322245323
  - -1.282304099636741
  train_neg_hamming_loss_macro:
  - -0.02903449471312186
  - -0.027099567099567096
  - -0.027302574736478315
  - -0.028239778239778243
  - -0.02828230409963674
  train_neg_hamming_loss_macro_oob:
  - -0.06595597157219622
  - -0.06432900432900433
  - -0.06609642301710732
  - -0.0667013167013167
  - -0.06521363085971286
  train_neg_hamming_loss_micro:
  - -0.029034494713121858
  - -0.0270995670995671
  - -0.027302574736478312
  - -0.02823977823977824
  - -0.02828230409963674
  train_neg_hamming_loss_micro_oob:
  - -0.06595597157219622
  - -0.06432900432900433
  - -0.0660964230171073
  - -0.0667013167013167
  - -0.06521363085971285
  train_neg_hamming_loss_samples:
  - -0.029034494713121854
  - -0.0270995670995671
  - -0.02730257473647831
  - -0.02823977823977824
  - -0.02828230409963674
  train_neg_hamming_loss_samples_oob:
  - -0.06595597157219622
  - -0.06432900432900432
  - -0.0660964230171073
  - -0.0667013167013167
  - -0.06521363085971285
  train_neg_hamming_loss_weighted:
  - -0.030091082811993
  - -0.02806225221319561
  - -0.028130900347239977
  - -0.029014204837050916
  - -0.02906773563572824
  train_neg_hamming_loss_weighted_oob:
  - -0.06855754172167855
  - -0.06699413793753417
  - -0.0691053180960861
  - -0.07001663402921873
  - -0.06836112301918579
  train_neg_label_ranking_loss:
  - -0.005499219968798752
  - -0.004363636363636364
  - -0.006013478486262313
  - -0.0059121621621621625
  - -0.005046704722366373
  train_neg_label_ranking_loss_oob:
  - -0.0391835673426937
  - -0.03746753246753247
  - -0.03549766718506999
  - -0.04054054054054054
  - -0.03980280228334197
  train_precision_macro:
  - 0.9709655052868782
  - 0.9729004329004329
  - 0.9726974252635215
  - 0.9717602217602218
  - 0.9717176959003632
  train_precision_macro_oob:
  - 0.9340440284278038
  - 0.9356709956709958
  - 0.9339035769828926
  - 0.9332986832986833
  - 0.9347863691402871
  train_precision_micro:
  - 0.9709655052868782
  - 0.9729004329004329
  - 0.9726974252635217
  - 0.9717602217602218
  - 0.9717176959003633
  train_precision_micro_oob:
  - 0.9340440284278038
  - 0.9356709956709957
  - 0.9339035769828927
  - 0.9332986832986833
  - 0.9347863691402871
  train_precision_samples:
  - 0.9709655052868781
  - 0.9729004329004329
  - 0.9726974252635218
  - 0.9717602217602218
  - 0.9717176959003633
  train_precision_samples_oob:
  - 0.9340440284278038
  - 0.9356709956709958
  - 0.9339035769828927
  - 0.9332986832986834
  - 0.9347863691402872
  train_precision_weighted:
  - 0.969908917188007
  - 0.9719377477868043
  - 0.9718690996527601
  - 0.970985795162949
  - 0.9709322643642717
  train_precision_weighted_oob:
  - 0.9314424582783215
  - 0.9330058620624658
  - 0.9308946819039138
  - 0.9299833659707812
  - 0.9316388769808142
  train_recall_macro:
  - 0.9709655052868782
  - 0.9729004329004329
  - 0.9726974252635215
  - 0.9717602217602218
  - 0.9717176959003632
  train_recall_macro_oob:
  - 0.9340440284278038
  - 0.9356709956709958
  - 0.9339035769828926
  - 0.9332986832986833
  - 0.9347863691402871
  train_recall_micro:
  - 0.9709655052868782
  - 0.9729004329004329
  - 0.9726974252635217
  - 0.9717602217602218
  - 0.9717176959003633
  train_recall_micro_oob:
  - 0.9340440284278038
  - 0.9356709956709957
  - 0.9339035769828927
  - 0.9332986832986833
  - 0.9347863691402871
  train_recall_samples:
  - 0.9709655052868781
  - 0.9729004329004329
  - 0.9726974252635218
  - 0.9717602217602218
  - 0.9717176959003633
  train_recall_samples_oob:
  - 0.9340440284278038
  - 0.9356709956709958
  - 0.9339035769828927
  - 0.9332986832986834
  - 0.9347863691402872
  train_recall_weighted:
  - 0.969908917188007
  - 0.9719377477868043
  - 0.9718690996527601
  - 0.970985795162949
  - 0.9709322643642717
  train_recall_weighted_oob:
  - 0.9314424582783215
  - 0.9330058620624658
  - 0.9308946819039138
  - 0.9299833659707812
  - 0.9316388769808142
  train_roc_auc_macro:
  - 0.9987368792051857
  - 0.9988526620510533
  - 0.9988046850637188
  - 0.9987479413291213
  - 0.9988001776376864
  train_roc_auc_macro_oob:
  - 0.9754414261470221
  - 0.977682628889684
  - 0.9781657976019679
  - 0.9770380215192248
  - 0.9771906876670312
  train_roc_auc_micro:
  - 0.9987760166330455
  - 0.9988616096606762
  - 0.998863819491385
  - 0.9988108958495008
  - 0.9988232399111583
  train_roc_auc_micro_oob:
  - 0.9770719349207031
  - 0.9789071789453804
  - 0.9792779252521362
  - 0.9777936351099514
  - 0.9781430485066499
  train_roc_auc_samples:
  - 0.9945007800312013
  - 0.9956363636363635
  - 0.9939865215137376
  - 0.9940878378378378
  - 0.9949532952776335
  train_roc_auc_samples_oob:
  - 0.9608164326573063
  - 0.9625324675324676
  - 0.96450233281493
  - 0.9594594594594594
  - 0.9601971977166581
  train_roc_auc_weighted:
  - 0.998669543499954
  - 0.998818560472518
  - 0.998751229075511
  - 0.9987040707333984
  - 0.998761093785632
  train_roc_auc_weighted_oob:
  - 0.9736944566244209
  - 0.9762627598577251
  - 0.9766186866898191
  - 0.9754711067393522
  - 0.9756537869640797
start: 2023-12-12 18:05:20.629286
wrapper: null
