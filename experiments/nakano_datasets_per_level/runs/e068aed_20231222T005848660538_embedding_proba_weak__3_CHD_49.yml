active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/zMzMzMzM/L80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACMAAAAAAAADwPwAAAAAAAAjAAAAAAAAAAAAAAAAAAAAUQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:59:19.841441
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__3
  params: {}
hash: e068aed372112d6a052d5d0ca71b29845a614e1cd3c768f41f8f33e491ee7070
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e068aed_20231222T005848660538_embedding_proba_weak__3_CHD_49.yml
results:
  fit_time:
  - 16.06028985977173
  - 16.01733660697937
  - 16.69211459159851
  - 17.220764875411987
  - 17.331870079040527
  score_time:
  - 3.5862207412719727
  - 3.533015727996826
  - 3.530259847640991
  - 3.814666509628296
  - 3.696489095687866
  test_average_precision_macro:
  - 0.47112465610025994
  - 0.48673163910542855
  - 0.5762653311825322
  - 0.5322664008244645
  - 0.5612375931590368
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6186704152207694
  - 0.6362335995980455
  - 0.6587707706506717
  - 0.6802527076488504
  - 0.6875338657738792
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7619761208576998
  - 0.7606944444444445
  - 0.7800316764132554
  - 0.8145395395395396
  - 0.7830188679245284
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5881581125026983
  - 0.609581100082143
  - 0.6374854134388291
  - 0.6462390333732241
  - 0.6533552893973288
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6111111111111112
  - 0.6030303030303031
  - 0.6257309941520467
  - 0.6186186186186186
  - 0.5974842767295598
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6111111111111112
  - 0.603030303030303
  - 0.6257309941520468
  - 0.6186186186186187
  - 0.5974842767295597
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6111111111111112
  - 0.603030303030303
  - 0.6257309941520469
  - 0.6186186186186186
  - 0.5974842767295597
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5160049245921822
  - 0.5033693579148125
  - 0.5338084795321637
  - 0.5214515214515214
  - 0.49569390572611927
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.46973036068784074
  - 0.46290924377204395
  - 0.48385938494234454
  - 0.47770798734514824
  - 0.4587826526701608
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.44
  - 0.4316702819956616
  - 0.4553191489361702
  - 0.44782608695652176
  - 0.4260089686098655
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4601124022176655
  - 0.4595316804407714
  - 0.4750208855472014
  - 0.47177567177567187
  - 0.4479825206240301
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.35442154429735173
  - 0.3439092613463065
  - 0.37059888982510136
  - 0.3648082146492719
  - 0.33598732625413036
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7619761208577001
  - 0.7788762626262624
  - 0.7800316764132555
  - 0.8145395395395396
  - 0.7924528301886793
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.021175080131571804
  - 0.021130317734337645
  - 0.057598872456666526
  - 0.10873901680857034
  - 0.028758520348684116
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.14989194484803103
  - 0.16908410695969942
  - 0.21146567601900781
  - 0.2143750556673051
  - 0.19641987121337928
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.10662515578134599
  - 0.13128394996641587
  - 0.15918722005304625
  - 0.14181883483957256
  - 0.14961147108399667
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.014915476217161602
  - 0.04170546912314662
  - 0.07323759968088746
  - 0.10952633598106186
  - 0.03527862441378698
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8394936642874999
  - 0.832124453893042
  - 0.8539995699566822
  - 0.8787842720728055
  - 0.8559278200612357
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6578947368421053
  - -3.6454545454545455
  - -3.6578947368421053
  - -3.5945945945945947
  - -3.830188679245283
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3888888888888889
  - -0.396969696969697
  - -0.37426900584795325
  - -0.3813813813813814
  - -0.4025157232704402
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3888888888888889
  - -0.396969696969697
  - -0.3742690058479532
  - -0.3813813813813814
  - -0.4025157232704403
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.38888888888888884
  - -0.39696969696969703
  - -0.37426900584795325
  - -0.38138138138138133
  - -0.4025157232704402
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.48399507540781783
  - -0.49663064208518753
  - -0.4661915204678363
  - -0.47854847854847854
  - -0.5043060942738807
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.229556530214425
  - -0.23563131313131314
  - -0.2098196881091618
  - -0.19264264264264264
  - -0.21933962264150944
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6111111111111112
  - 0.6030303030303031
  - 0.6257309941520467
  - 0.6186186186186186
  - 0.5974842767295598
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6111111111111112
  - 0.603030303030303
  - 0.6257309941520468
  - 0.6186186186186187
  - 0.5974842767295597
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6111111111111112
  - 0.603030303030303
  - 0.6257309941520469
  - 0.6186186186186186
  - 0.5974842767295597
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5160049245921822
  - 0.5033693579148125
  - 0.5338084795321637
  - 0.5214515214515214
  - 0.49569390572611927
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6111111111111112
  - 0.6030303030303031
  - 0.6257309941520467
  - 0.6186186186186186
  - 0.5974842767295598
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6111111111111112
  - 0.603030303030303
  - 0.6257309941520468
  - 0.6186186186186187
  - 0.5974842767295597
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6111111111111112
  - 0.603030303030303
  - 0.6257309941520469
  - 0.6186186186186186
  - 0.5974842767295597
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5160049245921822
  - 0.5033693579148125
  - 0.5338084795321637
  - 0.5214515214515214
  - 0.49569390572611927
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5350747289792619
  - 0.5480432411426459
  - 0.62502155528217
  - 0.586473863842094
  - 0.596312312469393
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7524952732708964
  - 0.7423712650985378
  - 0.7732709034792368
  - 0.7794718439455282
  - 0.7701845991034614
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7704434697855751
  - .nan
  - 0.7901803118908383
  - 0.8073573573573573
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5622376140184171
  - 0.5433892957880064
  - 0.5902621227690973
  - 0.6162873339642058
  - 0.5621348123821243
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8238623932790671
  - 0.821826005146693
  - 0.8181303033680436
  - 0.8210709812434113
  - 0.8233702818041534
  train_average_precision_macro_oob:
  - 0.734040941278935
  - 0.7260236465753778
  - 0.7220358262117288
  - 0.7188024787831946
  - 0.7321830761647271
  train_average_precision_micro:
  - 0.886685373115636
  - 0.8736814507704185
  - 0.8812462383502797
  - 0.8819747304640744
  - 0.8893019943876569
  train_average_precision_micro_oob:
  - 0.879028751511529
  - 0.8659319474689167
  - 0.870070872625743
  - 0.8756624698612292
  - 0.8785167898097015
  train_average_precision_samples:
  - 0.896283698664651
  - 0.8998252184769039
  - 0.900472411186697
  - 0.8857357357357357
  - 0.8958921059143776
  train_average_precision_samples_oob:
  - 0.8903533635676493
  - 0.8881179775280899
  - 0.8900919627110103
  - 0.8802708958958958
  - 0.889606533036377
  train_average_precision_weighted:
  - 0.8809581412805177
  - 0.8691798903410595
  - 0.8752224363291281
  - 0.8739363271382959
  - 0.8807097359566268
  train_average_precision_weighted_oob:
  - 0.8682479288924747
  - 0.8567812022363821
  - 0.8586286453984657
  - 0.8625187150490192
  - 0.8653313534045834
  train_f1_macro:
  - 0.7664399092970521
  - 0.7644194756554308
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489978
  train_f1_macro_oob:
  - 0.735827664399093
  - 0.7333333333333334
  - 0.7275132275132274
  - 0.7237237237237237
  - 0.7427616926503341
  train_f1_micro:
  - 0.7664399092970522
  - 0.7644194756554307
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489977
  train_f1_micro_oob:
  - 0.735827664399093
  - 0.7333333333333333
  - 0.7275132275132276
  - 0.7237237237237237
  - 0.7427616926503341
  train_f1_samples:
  - 0.7664399092970522
  - 0.7644194756554308
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489977
  train_f1_samples_oob:
  - 0.735827664399093
  - 0.7333333333333333
  - 0.7275132275132274
  - 0.7237237237237238
  - 0.7427616926503341
  train_f1_weighted:
  - 0.7071508638328915
  - 0.7040767103947292
  - 0.7037942216513645
  - 0.7069910224360486
  - 0.7159121191196351
  train_f1_weighted_oob:
  - 0.6765475152571927
  - 0.6736200168637371
  - 0.6652415045272188
  - 0.6634042419382734
  - 0.6862800400696355
  train_jaccard_macro:
  - 0.635376443456157
  - 0.6331116416250057
  - 0.63099995820694
  - 0.6326252831803091
  - 0.6411084065486449
  train_jaccard_macro_oob:
  - 0.5970228910232838
  - 0.5940323880142683
  - 0.5877529133933009
  - 0.5831180473542902
  - 0.6045987602815142
  train_jaccard_micro:
  - 0.6213235294117647
  - 0.6186723249469536
  - 0.6168652612282309
  - 0.6189608021877848
  - 0.628286491387126
  train_jaccard_micro_oob:
  - 0.5820627802690583
  - 0.5789473684210527
  - 0.5717255717255717
  - 0.5670588235294117
  - 0.5907883082373782
  train_jaccard_samples:
  - 0.6477054313789008
  - 0.644868913857678
  - 0.6458049886621314
  - 0.6421385671385671
  - 0.6533036377134374
  train_jaccard_samples_oob:
  - 0.6078069322967282
  - 0.603649010165864
  - 0.5995582648643873
  - 0.5906906906906907
  - 0.6166189415632622
  train_jaccard_weighted:
  - 0.5522980748860538
  - 0.5489649593756272
  - 0.5480015772779477
  - 0.5506368836036887
  - 0.5622041500327075
  train_jaccard_weighted_oob:
  - 0.5145921438201917
  - 0.511181875692078
  - 0.5022098364210272
  - 0.4988972714004257
  - 0.5255144673493019
  train_label_ranking_average_precision_score:
  - 0.9030864197530856
  - 0.902072409488139
  - 0.9072751322751318
  - 0.8924924924924915
  - 0.9003464488987862
  train_label_ranking_average_precision_score_oob:
  - 0.8971560846560838
  - 0.8903651685393247
  - 0.8968946837994453
  - 0.8870276526526517
  - 0.8940608760207861
  train_matthews_corrcoef_macro:
  - 0.42566718020236444
  - 0.4239281049857205
  - 0.42029702539180797
  - 0.4233511086306852
  - 0.43680370040047983
  train_matthews_corrcoef_macro_oob:
  - 0.363495672346194
  - 0.35893642210734883
  - 0.3508007519671083
  - 0.3427955265255376
  - 0.3771918397954335
  train_matthews_corrcoef_micro:
  - 0.5651124312604785
  - 0.5602553740617652
  - 0.5587051802251524
  - 0.5628554651041524
  - 0.5735051807591709
  train_matthews_corrcoef_micro_oob:
  - 0.5081914040317562
  - 0.501824698395223
  - 0.49157953729605436
  - 0.4875142648290758
  - 0.5192117333848274
  train_matthews_corrcoef_samples:
  - 0.5002868656305217
  - 0.4962511987968233
  - 0.48676937258180164
  - 0.49205506316935627
  - 0.5074141992423842
  train_matthews_corrcoef_samples_oob:
  - 0.42982656423836235
  - 0.43261700188804303
  - 0.409196693324601
  - 0.4079343501869773
  - 0.44968245202641505
  train_matthews_corrcoef_weighted:
  - 0.4860666598650149
  - 0.48394674901296253
  - 0.4809969973592669
  - 0.49390421229240966
  - 0.505344797117595
  train_matthews_corrcoef_weighted_oob:
  - 0.42862728410446316
  - 0.4235579836214651
  - 0.4118156411124654
  - 0.416327975917243
  - 0.44869215874919677
  train_ndgc:
  - 0.9338967406935801
  - 0.937115110211912
  - 0.9362674596755692
  - 0.928168615524106
  - 0.9350630208362555
  train_ndgc_oob:
  - 0.930160153255261
  - 0.9294914540261131
  - 0.9298782785988768
  - 0.9239508312102138
  - 0.9308380847236498
  train_neg_coverage_error:
  - -3.197278911564626
  - -3.1595505617977526
  - -3.1609977324263037
  - -3.2612612612612613
  - -3.162583518930958
  train_neg_coverage_error_oob:
  - -3.247165532879819
  - -3.2134831460674156
  - -3.2312925170068025
  - -3.2927927927927927
  - -3.2138084632516706
  train_neg_hamming_loss_macro:
  - -0.2335600907029478
  - -0.2355805243445693
  - -0.23696145124716553
  - -0.23536036036036034
  - -0.22828507795100225
  train_neg_hamming_loss_macro_oob:
  - -0.26417233560090697
  - -0.26666666666666666
  - -0.2724867724867725
  - -0.2762762762762763
  - -0.25723830734966596
  train_neg_hamming_loss_micro:
  - -0.23356009070294784
  - -0.23558052434456928
  - -0.23696145124716553
  - -0.23536036036036037
  - -0.22828507795100222
  train_neg_hamming_loss_micro_oob:
  - -0.264172335600907
  - -0.26666666666666666
  - -0.2724867724867725
  - -0.27627627627627627
  - -0.2572383073496659
  train_neg_hamming_loss_samples:
  - -0.23356009070294784
  - -0.23558052434456928
  - -0.2369614512471655
  - -0.23536036036036037
  - -0.22828507795100222
  train_neg_hamming_loss_samples_oob:
  - -0.264172335600907
  - -0.26666666666666666
  - -0.2724867724867725
  - -0.27627627627627627
  - -0.2572383073496659
  train_neg_hamming_loss_weighted:
  - -0.29284913616710856
  - -0.29592328960527087
  - -0.29620577834863554
  - -0.2930089775639514
  - -0.2840878808803649
  train_neg_hamming_loss_weighted_oob:
  - -0.3234524847428073
  - -0.32637998313626293
  - -0.3347584954727812
  - -0.3365957580617267
  - -0.3137199599303645
  train_neg_label_ranking_loss:
  - -0.09799697656840514
  - -0.09597378277153558
  - -0.09203829680020156
  - -0.10930305305305305
  - -0.100303142786439
  train_neg_label_ranking_loss_oob:
  - -0.10537288989669942
  - -0.10883895131086141
  - -0.1042517006802721
  - -0.11381381381381381
  - -0.11056669141301659
  train_precision_macro:
  - 0.7664399092970521
  - 0.7644194756554308
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489978
  train_precision_macro_oob:
  - 0.735827664399093
  - 0.7333333333333334
  - 0.7275132275132274
  - 0.7237237237237237
  - 0.7427616926503341
  train_precision_micro:
  - 0.7664399092970522
  - 0.7644194756554307
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489977
  train_precision_micro_oob:
  - 0.735827664399093
  - 0.7333333333333333
  - 0.7275132275132276
  - 0.7237237237237237
  - 0.7427616926503341
  train_precision_samples:
  - 0.7664399092970522
  - 0.7644194756554308
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489977
  train_precision_samples_oob:
  - 0.735827664399093
  - 0.7333333333333333
  - 0.7275132275132274
  - 0.7237237237237238
  - 0.7427616926503341
  train_precision_weighted:
  - 0.7071508638328915
  - 0.7040767103947292
  - 0.7037942216513645
  - 0.7069910224360486
  - 0.7159121191196351
  train_precision_weighted_oob:
  - 0.6765475152571927
  - 0.6736200168637371
  - 0.6652415045272188
  - 0.6634042419382734
  - 0.6862800400696355
  train_recall_macro:
  - 0.7664399092970521
  - 0.7644194756554308
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489978
  train_recall_macro_oob:
  - 0.735827664399093
  - 0.7333333333333334
  - 0.7275132275132274
  - 0.7237237237237237
  - 0.7427616926503341
  train_recall_micro:
  - 0.7664399092970522
  - 0.7644194756554307
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489977
  train_recall_micro_oob:
  - 0.735827664399093
  - 0.7333333333333333
  - 0.7275132275132276
  - 0.7237237237237237
  - 0.7427616926503341
  train_recall_samples:
  - 0.7664399092970522
  - 0.7644194756554308
  - 0.7630385487528345
  - 0.7646396396396397
  - 0.7717149220489977
  train_recall_samples_oob:
  - 0.735827664399093
  - 0.7333333333333333
  - 0.7275132275132274
  - 0.7237237237237238
  - 0.7427616926503341
  train_recall_weighted:
  - 0.7071508638328915
  - 0.7040767103947292
  - 0.7037942216513645
  - 0.7069910224360486
  - 0.7159121191196351
  train_recall_weighted_oob:
  - 0.6765475152571927
  - 0.6736200168637371
  - 0.6652415045272188
  - 0.6634042419382734
  - 0.6862800400696355
  train_roc_auc_macro:
  - 0.8286822480301222
  - 0.8294979748674501
  - 0.8111006164164044
  - 0.828827496854378
  - 0.8397167348780151
  train_roc_auc_macro_oob:
  - 0.8037833597128196
  - 0.7945975441075664
  - 0.7687592002421697
  - 0.7665748861043961
  - 0.7944903515397019
  train_roc_auc_micro:
  - 0.9033139209923733
  - 0.8984989441764806
  - 0.8995002583967298
  - 0.8989743784303311
  - 0.9047146912644022
  train_roc_auc_micro_oob:
  - 0.8956979747614364
  - 0.8899063500570282
  - 0.8884575810341456
  - 0.8919912762958515
  - 0.8944150473188788
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8245950192897659
  - 0.809446316592198
  - 0.8172822982261525
  - 0.8220319603258576
  - 0.8303644748750575
  train_roc_auc_weighted_oob:
  - 0.8162395975803892
  - 0.7996261058698885
  - 0.8036468927563476
  - 0.8129033257563262
  - 0.8155696946317117
start: 2023-12-22 00:58:48.660538
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
