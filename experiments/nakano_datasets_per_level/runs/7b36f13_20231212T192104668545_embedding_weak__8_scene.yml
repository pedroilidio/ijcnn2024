active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJyZmZmZ2T+AzMzMzMwEwABnZmZmZvY/AGdmZmZm9j8AMjMzMzPjvw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 19:29:30.565918
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 7b36f131a5c397d0ea931eb6ca405972ab0c56831355574e4968442458e374dd
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7b36f13_20231212T192104668545_embedding_weak__8_scene.yml
results:
  fit_time:
  - 213.64004015922546
  - 406.54256892204285
  - 401.37126755714417
  - 409.06111669540405
  - 395.551518201828
  score_time:
  - 17.031310558319092
  - 22.10047173500061
  - 22.544829607009888
  - 21.87807297706604
  - 24.84151554107666
  test_average_precision_macro:
  - 0.8203691028243486
  - 0.8198200460432309
  - 0.8235242520869269
  - 0.8255256643500094
  - 0.8236093595774676
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8247990485951583
  - 0.8236566265255143
  - 0.8229667052830447
  - 0.8320351574779186
  - 0.8255152717460981
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8585585585585584
  - 0.8613980716253443
  - 0.8525868055555555
  - 0.8581249999999999
  - 0.8595781466113416
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8085711143123403
  - 0.8071988383474309
  - 0.8119614800608596
  - 0.8156878057922068
  - 0.8135371322196977
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9033264033264033
  - 0.9035812672176308
  - 0.90625
  - 0.9017361111111111
  - 0.9042185338865837
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9033264033264033
  - 0.9035812672176309
  - 0.90625
  - 0.9017361111111111
  - 0.9042185338865837
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9033264033264035
  - 0.9035812672176309
  - 0.9062500000000001
  - 0.9017361111111112
  - 0.9042185338865838
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8976673436132896
  - 0.8981808590565403
  - 0.900705190199871
  - 0.8955875241779497
  - 0.8986779889993245
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8277851063039211
  - 0.8281006404264989
  - 0.8320918702504292
  - 0.8258843007810346
  - 0.8289442525554952
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8236966824644549
  - 0.8241206030150754
  - 0.8285714285714286
  - 0.8210559595320898
  - 0.8251814452508678
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8406098406098405
  - 0.8414994096812277
  - 0.845188492063492
  - 0.8390873015873015
  - 0.8426200355660936
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8187395354060417
  - 0.8195002907033364
  - 0.8230989551106239
  - 0.8160888446929222
  - 0.8200640275708838
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8585585585585582
  - 0.8613980716253438
  - 0.8525868055555552
  - 0.8581249999999998
  - 0.8595781466113414
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6388787905093704
  - 0.634376826530639
  - 0.6552968268043998
  - 0.628689485390925
  - 0.6428196462541849
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6380199309316937
  - 0.6362568941343223
  - 0.6505229527736579
  - 0.6313225840133609
  - 0.6398666840444455
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5234513440127997
  - 0.5254811629641667
  - 0.5375630197307453
  - 0.5252092236304645
  - 0.5337791829309277
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6200105980197641
  - 0.6154388982811199
  - 0.6373886466651765
  - 0.6071354560454008
  - 0.6240548333247616
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8958317211321257
  - 0.8983234274376821
  - 0.8913325028763848
  - 0.8958868096934207
  - 0.8963589676255459
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.476091476091476
  - -1.4772727272727273
  - -1.5020833333333334
  - -1.475
  - -1.4647302904564314
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09667359667359669
  - -0.09641873278236916
  - -0.09375
  - -0.09826388888888889
  - -0.09578146611341631
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09667359667359668
  - -0.09641873278236915
  - -0.09375
  - -0.09826388888888889
  - -0.09578146611341633
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09667359667359668
  - -0.09641873278236913
  - -0.09375
  - -0.09826388888888889
  - -0.09578146611341631
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10233265638671044
  - -0.10181914094345956
  - -0.09929480980012893
  - -0.1044124758220503
  - -0.10132201100067548
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07791060291060291
  - -0.07846074380165288
  - -0.08333333333333333
  - -0.07614583333333333
  - -0.07717842323651453
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9033264033264033
  - 0.9035812672176308
  - 0.90625
  - 0.9017361111111111
  - 0.9042185338865837
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9033264033264033
  - 0.9035812672176309
  - 0.90625
  - 0.9017361111111111
  - 0.9042185338865837
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9033264033264035
  - 0.9035812672176309
  - 0.9062500000000001
  - 0.9017361111111112
  - 0.9042185338865838
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8976673436132896
  - 0.8981808590565403
  - 0.900705190199871
  - 0.8955875241779497
  - 0.8986779889993245
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9033264033264033
  - 0.9035812672176308
  - 0.90625
  - 0.9017361111111111
  - 0.9042185338865837
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9033264033264033
  - 0.9035812672176309
  - 0.90625
  - 0.9017361111111111
  - 0.9042185338865837
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9033264033264035
  - 0.9035812672176309
  - 0.9062500000000001
  - 0.9017361111111112
  - 0.9042185338865838
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8976673436132896
  - 0.8981808590565403
  - 0.900705190199871
  - 0.8955875241779497
  - 0.8986779889993245
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9389732371956475
  - 0.9392561655642458
  - 0.9354190527698799
  - 0.943054754447915
  - 0.9404609541146983
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9446839455285402
  - 0.9447174775682918
  - 0.9407262675466634
  - 0.9483183279295325
  - 0.9447813079111528
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9220893970893971
  - 0.9215392561983472
  - 0.9166666666666666
  - 0.9238541666666666
  - 0.9228215767634856
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9331718920613985
  - 0.93365120385576
  - 0.9301243540497592
  - 0.9387718994952444
  - 0.9354568200871833
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9616554872444589
  - 0.964558057379392
  - 0.9620851139806095
  - 0.9662858531135953
  - 0.9705006113018415
  train_average_precision_macro_oob:
  - 0.8541359743898616
  - 0.8549577869485528
  - 0.8623295810064829
  - 0.864128497912691
  - 0.8665749381134825
  train_average_precision_micro:
  - 0.9580051270425141
  - 0.9607411015473302
  - 0.9569357272811994
  - 0.95980917551145
  - 0.9656059434092852
  train_average_precision_micro_oob:
  - 0.8596833119458597
  - 0.8578862206805178
  - 0.8656685242209575
  - 0.8649128280356619
  - 0.8704176622302564
  train_average_precision_samples:
  - 0.9681550709588093
  - 0.967758710348414
  - 0.9652309289050337
  - 0.9671337138903303
  - 0.9687878787878789
  train_average_precision_samples_oob:
  - 0.8873009691934926
  - 0.8811709135032068
  - 0.8940667704549387
  - 0.8909358242518596
  - 0.89104329004329
  train_average_precision_weighted:
  - 0.9617502480098097
  - 0.9648452654001113
  - 0.9624007644670068
  - 0.9665800007134029
  - 0.970853333400892
  train_average_precision_weighted_oob:
  - 0.8468715338725072
  - 0.8475500603488392
  - 0.8555024081773056
  - 0.8567007154217287
  - 0.858922425511943
  train_f1_macro:
  - 0.9498961578400831
  - 0.9475645692494364
  - 0.9508735512887044
  - 0.9503546099290779
  - 0.9507359307359308
  train_f1_macro_oob:
  - 0.9100034614053305
  - 0.9075229675853701
  - 0.9122124199965403
  - 0.9084933402525515
  - 0.9116017316017316
  train_f1_micro:
  - 0.9498961578400831
  - 0.9475645692494367
  - 0.9508735512887043
  - 0.950354609929078
  - 0.9507359307359308
  train_f1_micro_oob:
  - 0.9100034614053306
  - 0.9075229675853701
  - 0.9122124199965403
  - 0.9084933402525515
  - 0.9116017316017316
  train_f1_samples:
  - 0.9498961578400831
  - 0.9475645692494367
  - 0.9508735512887043
  - 0.950354609929078
  - 0.9507359307359307
  train_f1_samples_oob:
  - 0.9100034614053306
  - 0.9075229675853701
  - 0.9122124199965405
  - 0.9084933402525515
  - 0.9116017316017316
  train_f1_weighted:
  - 0.948324835558128
  - 0.9456394696793674
  - 0.9491746122243312
  - 0.948515897974322
  - 0.9489756642584096
  train_f1_weighted_oob:
  - 0.9052562118159014
  - 0.9025660059284383
  - 0.907403094978314
  - 0.903648047345118
  - 0.9067686880543332
  train_jaccard_macro:
  - 0.9049484370111065
  - 0.9009409420786518
  - 0.9067586298049694
  - 0.9059173117454352
  - 0.9065647856982215
  train_jaccard_macro_oob:
  - 0.8376833526088815
  - 0.833687447816503
  - 0.8415540796392064
  - 0.8352063145334587
  - 0.8403823016608145
  train_jaccard_micro:
  - 0.9045735475896168
  - 0.9003541134810179
  - 0.9063478977741137
  - 0.9054054054054054
  - 0.906097862859972
  train_jaccard_micro_oob:
  - 0.8348682121308352
  - 0.8307021023403411
  - 0.838594259362328
  - 0.8323296354992076
  - 0.8375626441810516
  train_jaccard_samples:
  - 0.9183231963605795
  - 0.914493722606047
  - 0.9201942323374602
  - 0.9195393777645982
  - 0.9198639455782314
  train_jaccard_samples_oob:
  - 0.850961776195421
  - 0.8474110392987148
  - 0.8550300244643783
  - 0.8488892183754665
  - 0.8542238713667285
  train_jaccard_weighted:
  - 0.9021214039480597
  - 0.8974758133139936
  - 0.9037011106067291
  - 0.9025863198304671
  - 0.9033706368109767
  train_jaccard_weighted_oob:
  - 0.8299681751772946
  - 0.8256585814464884
  - 0.8337324107167611
  - 0.8273701424290879
  - 0.8325205285927119
  train_label_ranking_average_precision_score:
  - 0.9681550709588089
  - 0.9677587103484138
  - 0.9652309289050334
  - 0.9671337138903303
  - 0.9687878787878784
  train_label_ranking_average_precision_score_oob:
  - 0.8873009691934926
  - 0.8811709135032066
  - 0.8940667704549383
  - 0.8909358242518592
  - 0.89104329004329
  train_matthews_corrcoef_macro:
  - 0.8253589144477772
  - 0.8176732533733061
  - 0.8297752676134209
  - 0.8281309754768703
  - 0.8291245212467265
  train_matthews_corrcoef_macro_oob:
  - 0.669662980211739
  - 0.6600842743836058
  - 0.6787002357851689
  - 0.6639377896085247
  - 0.6767660551298097
  train_matthews_corrcoef_micro:
  - 0.8223842779091337
  - 0.8138559557213118
  - 0.826251527150485
  - 0.8240312851890642
  - 0.8255620415850105
  train_matthews_corrcoef_micro_oob:
  - 0.6652610506999301
  - 0.6554523130033528
  - 0.6743910216483928
  - 0.658844067022339
  - 0.672430204726861
  train_matthews_corrcoef_samples:
  - 0.7885226707393775
  - 0.7703634917134083
  - 0.7990063798286423
  - 0.789210687371502
  - 0.7888007532971003
  train_matthews_corrcoef_samples_oob:
  - 0.5526433934345256
  - 0.5434542471805043
  - 0.568960598156952
  - 0.5454061267587144
  - 0.5649857694878143
  train_matthews_corrcoef_weighted:
  - 0.8219227086432926
  - 0.813049682707789
  - 0.8258316128603734
  - 0.8236465080428118
  - 0.8248907662582021
  train_matthews_corrcoef_weighted_oob:
  - 0.655092208698938
  - 0.6446826332437169
  - 0.6637413595704886
  - 0.6488714466872326
  - 0.6616927950540288
  train_ndgc:
  - 0.9766670178343452
  - 0.9762754499946994
  - 0.9744916266382856
  - 0.9758691608406244
  - 0.9770821358282519
  train_ndgc_oob:
  - 0.9168713401847828
  - 0.9122175745810187
  - 0.9221635040709734
  - 0.9196215177108344
  - 0.9198945350011408
  train_neg_coverage_error:
  - -1.1427829698857737
  - -1.143005720228809
  - -1.1499740529320186
  - -1.143227815256876
  - -1.1423376623376624
  train_neg_coverage_error_oob:
  - -1.4106957424714435
  - -1.4300572022880915
  - -1.3886870783601453
  - -1.3933575505967826
  - -1.3953246753246753
  train_neg_hamming_loss_macro:
  - -0.05010384215991693
  - -0.05243543075056336
  - -0.04912644871129562
  - -0.04964539007092198
  - -0.04926406926406926
  train_neg_hamming_loss_macro_oob:
  - -0.08999653859466944
  - -0.09247703241462991
  - -0.08778758000345961
  - -0.09150665974744854
  - -0.0883982683982684
  train_neg_hamming_loss_micro:
  - -0.05010384215991693
  - -0.05243543075056335
  - -0.04912644871129562
  - -0.04964539007092199
  - -0.04926406926406927
  train_neg_hamming_loss_micro_oob:
  - -0.08999653859466944
  - -0.09247703241462991
  - -0.08778758000345961
  - -0.09150665974744854
  - -0.08839826839826839
  train_neg_hamming_loss_samples:
  - -0.05010384215991693
  - -0.05243543075056336
  - -0.049126448711295616
  - -0.04964539007092198
  - -0.04926406926406926
  train_neg_hamming_loss_samples_oob:
  - -0.08999653859466943
  - -0.09247703241462991
  - -0.0877875800034596
  - -0.09150665974744852
  - -0.08839826839826839
  train_neg_hamming_loss_weighted:
  - -0.05167516444187225
  - -0.054360530320632545
  - -0.050825387775668786
  - -0.051484102025678054
  - -0.05102433574159045
  train_neg_hamming_loss_weighted_oob:
  - -0.09474378818409854
  - -0.0974339940715617
  - -0.09259690502168615
  - -0.09635195265488192
  - -0.09323131194566672
  train_neg_label_ranking_loss:
  - -0.01366822429906542
  - -0.013442537701508061
  - -0.015088220031136483
  - -0.013868707836014531
  - -0.013363636363636364
  train_neg_label_ranking_loss_oob:
  - -0.06555036344755971
  - -0.06934477379095164
  - -0.060781006746237674
  - -0.06231188375713544
  - -0.06205194805194805
  train_precision_macro:
  - 0.9498961578400831
  - 0.9475645692494364
  - 0.9508735512887044
  - 0.9503546099290779
  - 0.9507359307359308
  train_precision_macro_oob:
  - 0.9100034614053305
  - 0.9075229675853701
  - 0.9122124199965403
  - 0.9084933402525515
  - 0.9116017316017316
  train_precision_micro:
  - 0.9498961578400831
  - 0.9475645692494367
  - 0.9508735512887043
  - 0.950354609929078
  - 0.9507359307359308
  train_precision_micro_oob:
  - 0.9100034614053306
  - 0.9075229675853701
  - 0.9122124199965403
  - 0.9084933402525515
  - 0.9116017316017316
  train_precision_samples:
  - 0.9498961578400831
  - 0.9475645692494367
  - 0.9508735512887043
  - 0.950354609929078
  - 0.9507359307359307
  train_precision_samples_oob:
  - 0.9100034614053306
  - 0.9075229675853701
  - 0.9122124199965405
  - 0.9084933402525515
  - 0.9116017316017316
  train_precision_weighted:
  - 0.948324835558128
  - 0.9456394696793674
  - 0.9491746122243312
  - 0.948515897974322
  - 0.9489756642584096
  train_precision_weighted_oob:
  - 0.9052562118159014
  - 0.9025660059284383
  - 0.907403094978314
  - 0.903648047345118
  - 0.9067686880543332
  train_recall_macro:
  - 0.9498961578400831
  - 0.9475645692494364
  - 0.9508735512887044
  - 0.9503546099290779
  - 0.9507359307359308
  train_recall_macro_oob:
  - 0.9100034614053305
  - 0.9075229675853701
  - 0.9122124199965403
  - 0.9084933402525515
  - 0.9116017316017316
  train_recall_micro:
  - 0.9498961578400831
  - 0.9475645692494367
  - 0.9508735512887043
  - 0.950354609929078
  - 0.9507359307359308
  train_recall_micro_oob:
  - 0.9100034614053306
  - 0.9075229675853701
  - 0.9122124199965403
  - 0.9084933402525515
  - 0.9116017316017316
  train_recall_samples:
  - 0.9498961578400831
  - 0.9475645692494367
  - 0.9508735512887043
  - 0.950354609929078
  - 0.9507359307359307
  train_recall_samples_oob:
  - 0.9100034614053306
  - 0.9075229675853701
  - 0.9122124199965405
  - 0.9084933402525515
  - 0.9116017316017316
  train_recall_weighted:
  - 0.948324835558128
  - 0.9456394696793674
  - 0.9491746122243312
  - 0.948515897974322
  - 0.9489756642584096
  train_recall_weighted_oob:
  - 0.9052562118159014
  - 0.9025660059284383
  - 0.907403094978314
  - 0.903648047345118
  - 0.9067686880543332
  train_roc_auc_macro:
  - 0.9934308641622888
  - 0.9939881219524865
  - 0.9933295912998656
  - 0.9939252608547041
  - 0.9946704883357206
  train_roc_auc_macro_oob:
  - 0.9512592712991773
  - 0.9508831659931376
  - 0.9538560420686152
  - 0.9537663018061963
  - 0.9550459235307566
  train_roc_auc_micro:
  - 0.9928070661402405
  - 0.9933657952732746
  - 0.9926036203665637
  - 0.9932361841888127
  - 0.9940277390271882
  train_roc_auc_micro_oob:
  - 0.955151645301312
  - 0.9552280029166725
  - 0.95783614124201
  - 0.9582354059308149
  - 0.9590513223542044
  train_roc_auc_samples:
  - 0.9863317757009347
  - 0.986557462298492
  - 0.9849117799688635
  - 0.9861312921639855
  - 0.9866363636363636
  train_roc_auc_samples_oob:
  - 0.9344496365524403
  - 0.9306552262090483
  - 0.9392189932537623
  - 0.9376881162428644
  - 0.9379480519480521
  train_roc_auc_weighted:
  - 0.9934258449527706
  - 0.9940330358280235
  - 0.9933317538485317
  - 0.9939234538140057
  - 0.994680862962244
  train_roc_auc_weighted_oob:
  - 0.9478000704073778
  - 0.9474005169041925
  - 0.9504540538204668
  - 0.9500867843909565
  - 0.9517073224175454
start: 2023-12-12 19:21:04.668545
wrapper: null
